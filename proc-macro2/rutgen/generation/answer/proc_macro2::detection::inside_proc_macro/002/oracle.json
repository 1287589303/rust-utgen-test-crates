[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    WORKS.store(2, Ordering::Relaxed);",
          "    let result = inside_proc_macro();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, true);"
        ],
        "code": [
          "{",
          "    WORKS.store(2, Ordering::Relaxed);",
          "    let result = inside_proc_macro();",
          "    assert_eq!(result, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    WORKS.store(2, Ordering::Relaxed);",
          "    let result1 = inside_proc_macro();",
          "    let result2 = inside_proc_macro();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result1, true);",
          "    assert_eq!(result2, true);"
        ],
        "code": [
          "{",
          "    WORKS.store(2, Ordering::Relaxed);",
          "    let result1 = inside_proc_macro();",
          "    let result2 = inside_proc_macro();",
          "    assert_eq!(result1, true);",
          "    assert_eq!(result2, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    WORKS.store(2, Ordering::Relaxed);",
          "    let result_before_init = inside_proc_macro();",
          "    // Assume initialize does not affect the return value when WORKS is 2",
          "    let result_after_init = inside_proc_macro();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result_before_init, true);",
          "    assert_eq!(result_after_init, true);"
        ],
        "code": [
          "{",
          "    WORKS.store(2, Ordering::Relaxed);",
          "    let result_before_init = inside_proc_macro();",
          "    // Assume initialize does not affect the return value when WORKS is 2",
          "    let result_after_init = inside_proc_macro();",
          "    assert_eq!(result_before_init, true);",
          "    assert_eq!(result_after_init, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]