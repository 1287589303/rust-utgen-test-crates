[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    force_fallback();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(WORKS.load(Ordering::Relaxed), 1);"
        ],
        "code": [
          "{",
          "    force_fallback();",
          "    assert_eq!(WORKS.load(Ordering::Relaxed), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let handles: Vec<_> = (0..10).map(|_| {",
          "        std::thread::spawn(|| {",
          "            force_fallback();",
          "        })",
          "    }).collect();",
          "",
          "    for handle in handles {",
          "        handle.join().unwrap();",
          "    }",
          "}"
        ],
        "oracle": [
          "    assert_eq!(WORKS.load(Ordering::Relaxed), 1);"
        ],
        "code": [
          "{",
          "    let handles: Vec<_> = (0..10).map(|_| {",
          "        std::thread::spawn(|| {",
          "            force_fallback();",
          "        })",
          "    }).collect();",
          "",
          "    for handle in handles {",
          "        handle.join().unwrap();",
          "    }",
          "    assert_eq!(WORKS.load(Ordering::Relaxed), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]