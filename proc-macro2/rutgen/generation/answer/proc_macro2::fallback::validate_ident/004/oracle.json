[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [
          "#[should_panic(expected = r#\"Ident is not a valid Ident\"#)]"
        ],
        "prefix": [
          "{",
          "    let string = \"-test\";",
          "    validate_ident(string);",
          "}"
        ],
        "oracle": [
          "    #[should_panic(expected = \"Ident is not allowed to be empty; use Option<Ident>\")] validate_ident(\"\");",
          "    #[should_panic(expected = \"Ident cannot be a number; use Literal instead\")] validate_ident(\"12345\");",
          "    #[should_panic(expected = r#\"\"-test\" is not a valid Ident\"#)] validate_ident(\"-test\");",
          "    #[should_panic(expected = r#\"\"!\" is not a valid Ident\"#)] validate_ident(\"!\");",
          "    #[should_panic(expected = r#\"\"test@\" is not a valid Ident\"#)] validate_ident(\"test@\");",
          "    #[should_panic(expected = r#\"\"test#test\" is not a valid Ident\"#)] validate_ident(\"test#test\");"
        ],
        "code": [
          "{",
          "    let string = \"-test\";",
          "    validate_ident(string);",
          "    #[should_panic(expected = \"Ident is not allowed to be empty; use Option<Ident>\")] validate_ident(\"\");",
          "    #[should_panic(expected = \"Ident cannot be a number; use Literal instead\")] validate_ident(\"12345\");",
          "    #[should_panic(expected = r#\"\"-test\" is not a valid Ident\"#)] validate_ident(\"-test\");",
          "    #[should_panic(expected = r#\"\"!\" is not a valid Ident\"#)] validate_ident(\"!\");",
          "    #[should_panic(expected = r#\"\"test@\" is not a valid Ident\"#)] validate_ident(\"test@\");",
          "    #[should_panic(expected = r#\"\"test#test\" is not a valid Ident\"#)] validate_ident(\"test#test\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [
          "#[should_panic(expected = r#\"Ident is not a valid Ident\"#)]"
        ],
        "prefix": [
          "{",
          "    let string = \"!@#$\";",
          "    validate_ident(string);",
          "}"
        ],
        "oracle": [
          "    #[should_panic(expected = r#\"Ident is not allowed to be empty; use Option<Ident>\"#)]",
          "    validate_ident(\"\");",
          "    ",
          "    #[should_panic(expected = r#\"Ident cannot be a number; use Literal instead\"#)]",
          "    validate_ident(\"12345\");",
          "    ",
          "    #[should_panic(expected = r#\"\\\"!@#$\\\" is not a valid Ident\"#)]",
          "    validate_ident(\"!@#$\");"
        ],
        "code": [
          "{",
          "    let string = \"!@#$\";",
          "    validate_ident(string);",
          "    #[should_panic(expected = r#\"Ident is not allowed to be empty; use Option<Ident>\"#)]",
          "    validate_ident(\"\");",
          "    ",
          "    #[should_panic(expected = r#\"Ident cannot be a number; use Literal instead\"#)]",
          "    validate_ident(\"12345\");",
          "    ",
          "    #[should_panic(expected = r#\"\\\"!@#$\\\" is not a valid Ident\"#)]",
          "    validate_ident(\"!@#$\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [
          "#[should_panic(expected = r#\"Ident is not a valid Ident\"#)]"
        ],
        "prefix": [
          "{",
          "    let string = \"123@#\";",
          "    validate_ident(string);",
          "}"
        ],
        "oracle": [
          "    #[should_panic(expected = r#\"Ident is not allowed to be empty; use Option<Ident>\"#)]",
          "    validate_ident(\"\");",
          "    ",
          "    #[should_panic(expected = r#\"Ident cannot be a number; use Literal instead\"#)]",
          "    validate_ident(\"123\");",
          "    ",
          "    #[should_panic(expected = r#\"\"123@#\" is not a valid Ident\"#)]",
          "    validate_ident(\"123@#\");"
        ],
        "code": [
          "{",
          "    let string = \"123@#\";",
          "    validate_ident(string);",
          "    #[should_panic(expected = r#\"Ident is not allowed to be empty; use Option<Ident>\"#)]",
          "    validate_ident(\"\");",
          "    ",
          "    #[should_panic(expected = r#\"Ident cannot be a number; use Literal instead\"#)]",
          "    validate_ident(\"123\");",
          "    ",
          "    #[should_panic(expected = r#\"\"123@#\" is not a valid Ident\"#)]",
          "    validate_ident(\"123@#\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]