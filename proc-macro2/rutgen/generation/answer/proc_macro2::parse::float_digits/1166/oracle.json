[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = Cursor { rest: \"abc\" }; ",
          "    let _result = float_digits(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(_result, Err(Reject));"
        ],
        "code": [
          "{",
          "    let input = Cursor { rest: \"abc\" }; ",
          "    let _result = float_digits(input);",
          "    assert_eq!(_result, Err(Reject));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = Cursor { rest: \"10.2e+5\" }; ",
          "    let _result = float_digits(input);",
          "}"
        ],
        "oracle": [
          "    let input = Cursor { rest: \"0\" };",
          "    let result = float_digits(input);",
          "    assert!(result.is_err());",
          "    ",
          "    let input = Cursor { rest: \"10.\" };",
          "    let result = float_digits(input);",
          "    assert!(result.is_err());",
          "    ",
          "    let input = Cursor { rest: \"10e\" };",
          "    let result = float_digits(input);",
          "    assert!(result.is_err());",
          "    ",
          "    let input = Cursor { rest: \"10e+\" };",
          "    let result = float_digits(input);",
          "    assert!(result.is_err());",
          "    ",
          "    let input = Cursor { rest: \"10e-\";",
          "    let result = float_digits(input);",
          "    assert!(result.is_err());"
        ],
        "code": [
          "{",
          "    let input = Cursor { rest: \"10.2e+5\" }; ",
          "    let _result = float_digits(input);",
          "    let input = Cursor { rest: \"0\" };",
          "    let result = float_digits(input);",
          "    assert!(result.is_err());",
          "    ",
          "    let input = Cursor { rest: \"10.\" };",
          "    let result = float_digits(input);",
          "    assert!(result.is_err());",
          "    ",
          "    let input = Cursor { rest: \"10e\" };",
          "    let result = float_digits(input);",
          "    assert!(result.is_err());",
          "    ",
          "    let input = Cursor { rest: \"10e+\" };",
          "    let result = float_digits(input);",
          "    assert!(result.is_err());",
          "    ",
          "    let input = Cursor { rest: \"10e-\";",
          "    let result = float_digits(input);",
          "    assert!(result.is_err());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = Cursor { rest: \"12.34e-1\" }; ",
          "    let _result = float_digits(input);",
          "}"
        ],
        "oracle": [
          "    let input = Cursor { rest: \"0a\" };",
          "    let _result = float_digits(input);",
          "    assert_eq!(_result, Err(Reject));",
          "    ",
          "    let input = Cursor { rest: \"1.5.6\" };",
          "    let _result = float_digits(input);",
          "    assert_eq!(_result, Err(Reject));",
          "    ",
          "    let input = Cursor { rest: \"3e\" };",
          "    let _result = float_digits(input);",
          "    assert_eq!(_result, Err(Reject));",
          "    ",
          "    let input = Cursor { rest: \"4e+\" };",
          "    let _result = float_digits(input);",
          "    assert_eq!(_result, Err(Reject));",
          "    ",
          "    let input = Cursor { rest: \"5_\" };",
          "    let _result = float_digits(input);",
          "    assert_eq!(_result, Err(Reject));"
        ],
        "code": [
          "{",
          "    let input = Cursor { rest: \"12.34e-1\" }; ",
          "    let _result = float_digits(input);",
          "    let input = Cursor { rest: \"0a\" };",
          "    let _result = float_digits(input);",
          "    assert_eq!(_result, Err(Reject));",
          "    ",
          "    let input = Cursor { rest: \"1.5.6\" };",
          "    let _result = float_digits(input);",
          "    assert_eq!(_result, Err(Reject));",
          "    ",
          "    let input = Cursor { rest: \"3e\" };",
          "    let _result = float_digits(input);",
          "    assert_eq!(_result, Err(Reject));",
          "    ",
          "    let input = Cursor { rest: \"4e+\" };",
          "    let _result = float_digits(input);",
          "    assert_eq!(_result, Err(Reject));",
          "    ",
          "    let input = Cursor { rest: \"5_\" };",
          "    let _result = float_digits(input);",
          "    assert_eq!(_result, Err(Reject));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]