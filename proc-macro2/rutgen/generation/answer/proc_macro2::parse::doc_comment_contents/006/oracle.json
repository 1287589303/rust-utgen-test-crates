[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let cursor = Cursor { rest: \"/** comment with star * inside */\" };",
          "    let _ = doc_comment_contents(cursor);",
          "}"
        ],
        "oracle": [
          "    assert!(matches!(doc_comment_contents(Cursor { rest: \"/** comment with star * inside */\" }), Err(Reject)));"
        ],
        "code": [
          "{",
          "    let cursor = Cursor { rest: \"/** comment with star * inside */\" };",
          "    let _ = doc_comment_contents(cursor);",
          "    assert!(matches!(doc_comment_contents(Cursor { rest: \"/** comment with star * inside */\" }), Err(Reject)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let cursor = Cursor { rest: \"/** another comment * more text */\" };",
          "    let _ = doc_comment_contents(cursor);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(doc_comment_contents(Cursor { rest: \"/** another comment * more text */\" }), Err(Reject));"
        ],
        "code": [
          "{",
          "    let cursor = Cursor { rest: \"/** another comment * more text */\" };",
          "    let _ = doc_comment_contents(cursor);",
          "    assert_eq!(doc_comment_contents(Cursor { rest: \"/** another comment * more text */\" }), Err(Reject));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let cursor = Cursor { rest: \"/**  * Just a star * here */\" };",
          "    let _ = doc_comment_contents(cursor);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(doc_comment_contents(Cursor { rest: \"/**  * Just a star * here */\" }), Err(Reject));"
        ],
        "code": [
          "{",
          "    let cursor = Cursor { rest: \"/**  * Just a star * here */\" };",
          "    let _ = doc_comment_contents(cursor);",
          "    assert_eq!(doc_comment_contents(Cursor { rest: \"/**  * Just a star * here */\" }), Err(Reject));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let cursor = Cursor { rest: \"/** sample  *  text */\" };",
          "    let _ = doc_comment_contents(cursor);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(doc_comment_contents(Cursor { rest: \"/** sample  *  text */\" }), Err(Reject));"
        ],
        "code": [
          "{",
          "    let cursor = Cursor { rest: \"/** sample  *  text */\" };",
          "    let _ = doc_comment_contents(cursor);",
          "    assert_eq!(doc_comment_contents(Cursor { rest: \"/** sample  *  text */\" }), Err(Reject));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let cursor = Cursor { rest: \"/** starting with star * and ending */\" };",
          "    let _ = doc_comment_contents(cursor);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(doc_comment_contents(Cursor { rest: \"/** starting with star * and ending */\" }), Err(Reject));"
        ],
        "code": [
          "{",
          "    let cursor = Cursor { rest: \"/** starting with star * and ending */\" };",
          "    let _ = doc_comment_contents(cursor);",
          "    assert_eq!(doc_comment_contents(Cursor { rest: \"/** starting with star * and ending */\" }), Err(Reject));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]