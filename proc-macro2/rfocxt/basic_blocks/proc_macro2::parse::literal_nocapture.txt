[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:344:21: 344:34 (#0),
                    scope: scope[1],
                },
                kind: _2 = parse::string(move _3) -> [return: bb1, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            PlaceMention(_2),
            _4 = discriminant(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:344:12: 344:18 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _4) -> [0: bb2, otherwise: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:344:12: 344:18 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb3, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_5),
            _5 = ((_2 as Ok).0: parse::Cursor<'_>),
            StorageLive(_6),
            _6 = _5,
            _0 = std::result::Result::<parse::Cursor<'_>, parse::Reject>::Ok(move _6),
            StorageDead(_6),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:344:5: 360:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb35,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_7),
            StorageLive(_8),
            _8 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:346:28: 346:46 (#0),
                    scope: scope[2],
                },
                kind: _7 = parse::byte_string(move _8) -> [return: bb5, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            PlaceMention(_7),
            _9 = discriminant(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:346:19: 346:25 (#0),
                    scope: scope[2],
                },
                kind: switchInt(move _9) -> [0: bb6, otherwise: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:346:19: 346:25 (#0),
                    scope: scope[2],
                },
                kind: falseEdge -> [real: bb7, imaginary: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_10),
            _10 = ((_7 as Ok).0: parse::Cursor<'_>),
            StorageLive(_11),
            _11 = _10,
            _0 = std::result::Result::<parse::Cursor<'_>, parse::Reject>::Ok(move _11),
            StorageDead(_11),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:346:12: 360:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb34,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_12),
            StorageLive(_13),
            _13 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:348:28: 348:43 (#0),
                    scope: scope[3],
                },
                kind: _12 = parse::c_string(move _13) -> [return: bb9, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            PlaceMention(_12),
            _14 = discriminant(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:348:19: 348:25 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _14) -> [0: bb10, otherwise: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:348:19: 348:25 (#0),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb11, imaginary: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_15),
            _15 = ((_12 as Ok).0: parse::Cursor<'_>),
            StorageLive(_16),
            _16 = _15,
            _0 = std::result::Result::<parse::Cursor<'_>, parse::Reject>::Ok(move _16),
            StorageDead(_16),
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:348:12: 360:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb33,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_17),
            StorageLive(_18),
            _18 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:350:28: 350:39 (#0),
                    scope: scope[4],
                },
                kind: _17 = parse::byte(move _18) -> [return: bb13, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            PlaceMention(_17),
            _19 = discriminant(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:350:19: 350:25 (#0),
                    scope: scope[4],
                },
                kind: switchInt(move _19) -> [0: bb14, otherwise: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:350:19: 350:25 (#0),
                    scope: scope[4],
                },
                kind: falseEdge -> [real: bb15, imaginary: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_20),
            _20 = ((_17 as Ok).0: parse::Cursor<'_>),
            StorageLive(_21),
            _21 = _20,
            _0 = std::result::Result::<parse::Cursor<'_>, parse::Reject>::Ok(move _21),
            StorageDead(_21),
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:350:12: 360:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb32,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_22),
            StorageLive(_23),
            _23 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:352:28: 352:44 (#0),
                    scope: scope[5],
                },
                kind: _22 = parse::character(move _23) -> [return: bb17, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
            PlaceMention(_22),
            _24 = discriminant(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:352:19: 352:25 (#0),
                    scope: scope[5],
                },
                kind: switchInt(move _24) -> [0: bb18, otherwise: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:352:19: 352:25 (#0),
                    scope: scope[5],
                },
                kind: falseEdge -> [real: bb19, imaginary: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_25),
            _25 = ((_22 as Ok).0: parse::Cursor<'_>),
            StorageLive(_26),
            _26 = _25,
            _0 = std::result::Result::<parse::Cursor<'_>, parse::Reject>::Ok(move _26),
            StorageDead(_26),
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:352:12: 360:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb31,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_27),
            StorageLive(_28),
            _28 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:354:28: 354:40 (#0),
                    scope: scope[6],
                },
                kind: _27 = parse::float(move _28) -> [return: bb21, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            PlaceMention(_27),
            _29 = discriminant(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:354:19: 354:25 (#0),
                    scope: scope[6],
                },
                kind: switchInt(move _29) -> [0: bb22, otherwise: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:354:19: 354:25 (#0),
                    scope: scope[6],
                },
                kind: falseEdge -> [real: bb23, imaginary: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_30),
            _30 = ((_27 as Ok).0: parse::Cursor<'_>),
            StorageLive(_31),
            _31 = _30,
            _0 = std::result::Result::<parse::Cursor<'_>, parse::Reject>::Ok(move _31),
            StorageDead(_31),
            StorageDead(_30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:354:12: 360:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb30,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_32),
            StorageLive(_33),
            _33 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:356:28: 356:38 (#0),
                    scope: scope[7],
                },
                kind: _32 = parse::int(move _33) -> [return: bb25, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
            PlaceMention(_32),
            _34 = discriminant(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:356:19: 356:25 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _34) -> [0: bb26, otherwise: bb28],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:356:19: 356:25 (#0),
                    scope: scope[7],
                },
                kind: falseEdge -> [real: bb27, imaginary: bb28],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_35),
            _35 = ((_32 as Ok).0: parse::Cursor<'_>),
            StorageLive(_36),
            _36 = _35,
            _0 = std::result::Result::<parse::Cursor<'_>, parse::Reject>::Ok(move _36),
            StorageDead(_36),
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:356:12: 360:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_37),
            _37 = parse::Reject,
            _0 = std::result::Result::<parse::Cursor<'_>, parse::Reject>::Err(move _37),
            StorageDead(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:356:12: 360:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:354:12: 360:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb30,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:352:12: 360:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb31,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:350:12: 360:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb32,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:348:12: 360:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb33,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:346:12: 360:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb34,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:344:5: 360:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb35,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:361:2: 361:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/parse.rs:343:1: 361:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<parse::Cursor<'{erased}>, parse::Reject>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:343:40: 343:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/parse.rs:343:29: 343:35 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/parse.rs:343:22: 343:27 (#0),
                            ),
                        ),
                        pat_span: src/parse.rs:343:22: 343:27 (#0),
                    },
                ),
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:343:22: 343:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/parse.rs:344:5: 360:6 (#0),
                },
            ),
        ),
        ty: std::result::Result<parse::Cursor<'{erased}>, parse::Reject>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:344:21: 344:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/parse.rs:344:5: 360:6 (#0),
                },
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:344:28: 344:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:344:12: 344:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                src/parse.rs:344:21: 344:34 (#0),
                            ),
                        ),
                        pat_span: src/parse.rs:344:12: 344:18 (#0),
                    },
                ),
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:344:15: 344:17 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:345:12: 345:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/parse.rs:344:5: 360:6 (#0),
                },
            ),
        ),
        ty: std::result::Result<parse::Cursor<'{erased}>, parse::Reject>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:346:28: 346:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/parse.rs:344:5: 360:6 (#0),
                },
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:346:40: 346:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:346:19: 346:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _7,
                                ),
                                src/parse.rs:346:28: 346:46 (#0),
                            ),
                        ),
                        pat_span: src/parse.rs:346:19: 346:25 (#0),
                    },
                ),
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:346:22: 346:24 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:347:12: 347:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/parse.rs:344:5: 360:6 (#0),
                },
            ),
        ),
        ty: std::result::Result<parse::Cursor<'{erased}>, parse::Reject>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:348:28: 348:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/parse.rs:344:5: 360:6 (#0),
                },
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:348:37: 348:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:348:19: 348:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _12,
                                ),
                                src/parse.rs:348:28: 348:43 (#0),
                            ),
                        ),
                        pat_span: src/parse.rs:348:19: 348:25 (#0),
                    },
                ),
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:348:22: 348:24 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:349:12: 349:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/parse.rs:344:5: 360:6 (#0),
                },
            ),
        ),
        ty: std::result::Result<parse::Cursor<'{erased}>, parse::Reject>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:350:28: 350:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/parse.rs:344:5: 360:6 (#0),
                },
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:350:33: 350:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:350:19: 350:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _17,
                                ),
                                src/parse.rs:350:28: 350:39 (#0),
                            ),
                        ),
                        pat_span: src/parse.rs:350:19: 350:25 (#0),
                    },
                ),
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:350:22: 350:24 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:351:12: 351:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/parse.rs:344:5: 360:6 (#0),
                },
            ),
        ),
        ty: std::result::Result<parse::Cursor<'{erased}>, parse::Reject>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:352:28: 352:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/parse.rs:344:5: 360:6 (#0),
                },
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:352:38: 352:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:352:19: 352:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _22,
                                ),
                                src/parse.rs:352:28: 352:44 (#0),
                            ),
                        ),
                        pat_span: src/parse.rs:352:19: 352:25 (#0),
                    },
                ),
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:352:22: 352:24 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:353:12: 353:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/parse.rs:344:5: 360:6 (#0),
                },
            ),
        ),
        ty: std::result::Result<parse::Cursor<'{erased}>, parse::Reject>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:354:28: 354:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/parse.rs:344:5: 360:6 (#0),
                },
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:354:34: 354:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:354:19: 354:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _27,
                                ),
                                src/parse.rs:354:28: 354:40 (#0),
                            ),
                        ),
                        pat_span: src/parse.rs:354:19: 354:25 (#0),
                    },
                ),
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:354:22: 354:24 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:355:12: 355:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/parse.rs:344:5: 360:6 (#0),
                },
            ),
        ),
        ty: std::result::Result<parse::Cursor<'{erased}>, parse::Reject>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:356:28: 356:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/parse.rs:344:5: 360:6 (#0),
                },
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:356:32: 356:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:356:19: 356:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _32,
                                ),
                                src/parse.rs:356:28: 356:38 (#0),
                            ),
                        ),
                        pat_span: src/parse.rs:356:19: 356:25 (#0),
                    },
                ),
            ),
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:356:22: 356:24 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: parse::Cursor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:357:12: 357:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: parse::Reject,
        user_ty: None,
        source_info: SourceInfo {
            span: src/parse.rs:359:13: 359:19 (#0),
            scope: scope[0],
        },
    },
]