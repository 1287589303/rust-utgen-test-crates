[
    BasicBlockData {
        statements: [
            StorageLive(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:186:12: 186:31 (#0),
                    scope: scope[0],
                },
                kind: _2 = detection::inside_proc_macro() -> [return: bb1, unwind: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:186:12: 186:31 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _2) -> [0: bb8, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = move _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:188:17: 188:34 (#0),
                    scope: scope[0],
                },
                kind: _6 = <I as std::iter::IntoIterator>::into_iter(move _7) -> [return: bb3, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:188:17: 188:59 (#0),
                    scope: scope[0],
                },
                kind: _5 = <<I as std::iter::IntoIterator>::IntoIter as std::iter::Iterator>::map::<proc_macro::TokenTree, fn(TokenTree) -> proc_macro::TokenTree {imp::into_compiler_token}>(move _6, imp::into_compiler_token) -> [return: bb4, unwind: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:188:17: 188:69 (#0),
                    scope: scope[0],
                },
                kind: _4 = <std::iter::Map<<I as std::iter::IntoIterator>::IntoIter, fn(TokenTree) -> proc_macro::TokenTree {imp::into_compiler_token}> as std::iter::Iterator>::collect::<proc_macro::TokenStream>(move _5) -> [return: bb5, unwind: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:187:35: 189:14 (#0),
                    scope: scope[0],
                },
                kind: _3 = imp::DeferredTokenStream::new(move _4) -> [return: bb6, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            _0 = imp::TokenStream::Compiler(move _3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:189:14: 189:15 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb7, unwind: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:186:9: 192:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb12,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = move _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:191:35: 191:52 (#0),
                    scope: scope[0],
                },
                kind: _9 = <I as std::iter::IntoIterator>::into_iter(move _10) -> [return: bb9, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:191:35: 191:62 (#0),
                    scope: scope[0],
                },
                kind: _8 = <<I as std::iter::IntoIterator>::IntoIter as std::iter::Iterator>::collect::<fallback::TokenStream>(move _9) -> [return: bb10, unwind: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            _0 = imp::TokenStream::Fallback(move _8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:191:62: 191:63 (#0),
                    scope: scope[0],
                },
                kind: drop(_8) -> [return: bb11, unwind: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:186:9: 192:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb12,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:193:5: 193:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb13, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:193:6: 193:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:191:61: 191:62 (#0),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb20, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:191:51: 191:52 (#0),
                    scope: scope[0],
                },
                kind: drop(_10) -> [return: bb20, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:189:13: 189:14 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb20, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:188:68: 188:69 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb20, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:188:58: 188:59 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb20, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:188:33: 188:34 (#0),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb20, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:193:5: 193:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb21, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:185:5: 193:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: imp::TokenStream,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:185:66: 185:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/wrapper.rs:185:60: 185:61 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/wrapper.rs:185:53: 185:58 (#0),
                            ),
                        ),
                        pat_span: src/wrapper.rs:185:53: 185:58 (#0),
                    },
                ),
            ),
        ),
        ty: I/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:185:53: 185:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/wrapper.rs:186:9: 192:10 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:186:12: 186:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: imp::DeferredTokenStream,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:187:35: 189:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/wrapper.rs:187:13: 189:15 (#0),
                },
            ),
        ),
        ty: proc_macro::TokenStream,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:188:17: 188:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/wrapper.rs:187:13: 189:15 (#0),
                },
            ),
        ),
        ty: std::iter::Map<Alias(Projection, AliasTy { args: [I/#0], def_id: DefId(2:8327 ~ core[a245]::iter::traits::collect::IntoIterator::IntoIter) }), FnDef(DefId(0:395 ~ proc_macro2[acde]::imp::into_compiler_token), [])>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:188:17: 188:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/wrapper.rs:187:13: 189:15 (#0),
                },
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    I/#0,
                ],
                def_id: DefId(2:8327 ~ core[a245]::iter::traits::collect::IntoIterator::IntoIter),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:188:17: 188:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/wrapper.rs:187:13: 189:15 (#0),
                },
            ),
        ),
        ty: I/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:188:17: 188:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: fallback::TokenStream,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:191:35: 191:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/wrapper.rs:191:13: 191:63 (#0),
                },
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    I/#0,
                ],
                def_id: DefId(2:8327 ~ core[a245]::iter::traits::collect::IntoIterator::IntoIter),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:191:35: 191:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/wrapper.rs:191:13: 191:63 (#0),
                },
            ),
        ),
        ty: I/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:191:35: 191:40 (#0),
            scope: scope[0],
        },
    },
]