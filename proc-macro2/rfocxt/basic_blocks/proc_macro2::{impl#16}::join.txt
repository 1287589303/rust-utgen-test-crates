[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &((*_1).0: imp::Span),
            StorageLive(_5),
            _5 = (_2.0: imp::Span),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:535:9: 535:37 (#0),
                    scope: scope[0],
                },
                kind: _3 = imp::Span::join(move _4, move _5) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:535:9: 535:53 (#0),
                    scope: scope[0],
                },
                kind: _0 = std::option::Option::<imp::Span>::map::<Span, fn(imp::Span) -> Span {Span::_new}>(move _3, Span::_new) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:536:6: 536:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:534:5: 536:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<Span>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:534:40: 534:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} Span,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:534:17: 534:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/lib.rs:534:31: 534:35 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/lib.rs:534:24: 534:29 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:534:24: 534:29 (#0),
                    },
                ),
            ),
        ),
        ty: Span,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:534:24: 534:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:535:9: 535:53 (#0),
                },
            ),
        ),
        ty: std::option::Option<imp::Span>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:535:9: 535:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:535:9: 535:53 (#0),
                },
            ),
        ),
        ty: &'{erased} imp::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:535:9: 535:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:535:9: 535:53 (#0),
                },
            ),
        ),
        ty: imp::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:535:25: 535:36 (#0),
            scope: scope[0],
        },
    },
]