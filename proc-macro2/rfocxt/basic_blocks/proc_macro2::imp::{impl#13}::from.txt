[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = move _1,
            _0 = imp::LexError::Compiler(move _2),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:270:6: 270:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: imp::LexError,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:268:41: 268:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/wrapper.rs:268:16: 268:36 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/wrapper.rs:268:13: 268:14 (#0),
                            ),
                        ),
                        pat_span: src/wrapper.rs:268:13: 268:14 (#0),
                    },
                ),
            ),
        ),
        ty: proc_macro::LexError,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:268:13: 268:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: proc_macro::LexError,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:269:28: 269:29 (#0),
            scope: scope[0],
        },
    },
]