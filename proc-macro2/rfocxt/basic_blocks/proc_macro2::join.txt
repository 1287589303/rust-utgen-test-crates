[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = &(*_1),
            StorageLive(_4),
            _4 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: build/probe.rs:33:5: 33:21 (#0),
                    scope: scope[0],
                },
                kind: _0 = proc_macro::Span::join(move _3, move _4) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: build/probe.rs:34:2: 34:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: build/probe.rs:32:1: 34:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<proc_macro::Span>,
        user_ty: None,
        source_info: SourceInfo {
            span: build/probe.rs:32:42: 32:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            build/probe.rs:32:19: 32:24 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                build/probe.rs:32:13: 32:17 (#0),
                            ),
                        ),
                        pat_span: build/probe.rs:32:13: 32:17 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} proc_macro::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: build/probe.rs:32:13: 32:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            build/probe.rs:32:33: 32:37 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                build/probe.rs:32:26: 32:31 (#0),
                            ),
                        ),
                        pat_span: build/probe.rs:32:26: 32:31 (#0),
                    },
                ),
            ),
        ),
        ty: proc_macro::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: build/probe.rs:32:26: 32:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: build/probe.rs:33:5: 33:21 (#0),
                },
            ),
        ),
        ty: &'{erased} proc_macro::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: build/probe.rs:33:5: 33:9 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: build/probe.rs:33:5: 33:21 (#0),
                },
            ),
        ),
        ty: proc_macro::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: build/probe.rs:33:15: 33:20 (#0),
            scope: scope[0],
        },
    },
]