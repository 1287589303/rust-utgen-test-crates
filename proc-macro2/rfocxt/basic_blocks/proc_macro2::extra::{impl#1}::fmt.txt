[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/extra.rs:149:21: 149:32 (#0),
                    scope: scope[0],
                },
                kind: _5 = extra::DelimSpan::join(move _6) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            _4 = &_5,
            _3 = &(*_4),
            StorageLive(_7),
            _7 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/extra.rs:149:9: 149:36 (#0),
                    scope: scope[0],
                },
                kind: _0 = <Span as std::fmt::Debug>::fmt(move _3, move _7) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_3),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/extra.rs:150:6: 150:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/extra.rs:148:5: 150:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<(), std::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/extra.rs:148:46: 148:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} extra::DelimSpan,
        user_ty: None,
        source_info: SourceInfo {
            span: src/extra.rs:148:12: 148:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/extra.rs:148:22: 148:41 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/extra.rs:148:19: 148:20 (#0),
                            ),
                        ),
                        pat_span: src/extra.rs:148:19: 148:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut std::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/extra.rs:148:19: 148:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/extra.rs:149:9: 149:36 (#0),
                },
            ),
        ),
        ty: &'{erased} Span,
        user_ty: None,
        source_info: SourceInfo {
            span: src/extra.rs:149:20: 149:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/extra.rs:149:9: 149:36 (#0),
                },
            ),
        ),
        ty: &'{erased} Span,
        user_ty: None,
        source_info: SourceInfo {
            span: src/extra.rs:149:20: 149:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/extra.rs:149:9: 149:36 (#0),
                },
            ),
        ),
        ty: Span,
        user_ty: None,
        source_info: SourceInfo {
            span: src/extra.rs:149:21: 149:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/extra.rs:149:9: 149:36 (#0),
                },
            ),
        ),
        ty: &'{erased} extra::DelimSpan,
        user_ty: None,
        source_info: SourceInfo {
            span: src/extra.rs:149:21: 149:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/extra.rs:149:9: 149:36 (#0),
                },
            ),
        ),
        ty: &'{erased} mut std::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/extra.rs:149:34: 149:35 (#0),
            scope: scope[0],
        },
    },
]