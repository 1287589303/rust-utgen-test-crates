[
    BasicBlockData {
        statements: [
            StorageLive(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:867:12: 867:31 (#0),
                    scope: scope[0],
                },
                kind: _2 = detection::inside_proc_macro() -> [return: bb1, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:867:12: 867:31 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _2) -> [0: bb4, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:868:31: 868:69 (#0),
                    scope: scope[0],
                },
                kind: _3 = proc_macro::Literal::f64_unsuffixed(move _4) -> [return: bb3, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            _0 = imp::Literal::Compiler(move _3),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:867:9: 871:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_5),
            StorageLive(_6),
            _6 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:870:31: 870:67 (#0),
                    scope: scope[0],
                },
                kind: _5 = fallback::Literal::f64_unsuffixed(move _6) -> [return: bb5, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            _0 = imp::Literal::Fallback(move _5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:870:67: 870:68 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb6, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:867:9: 871:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:872:6: 872:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/wrapper.rs:866:5: 872:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: imp::Literal,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:866:45: 866:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/wrapper.rs:866:37: 866:40 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/wrapper.rs:866:34: 866:35 (#0),
                            ),
                        ),
                        pat_span: src/wrapper.rs:866:34: 866:35 (#0),
                    },
                ),
            ),
        ),
        ty: f64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:866:34: 866:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/wrapper.rs:867:9: 871:10 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:867:12: 867:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: proc_macro::Literal,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:868:31: 868:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/wrapper.rs:868:13: 868:70 (#0),
                },
            ),
        ),
        ty: f64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:868:67: 868:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: fallback::Literal,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:870:31: 870:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/wrapper.rs:870:13: 870:68 (#0),
                },
            ),
        ),
        ty: f64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/wrapper.rs:870:65: 870:66 (#0),
            scope: scope[0],
        },
    },
]