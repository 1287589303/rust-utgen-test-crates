[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: build/probe.rs:17:5: 17:17 (#0),
                    scope: scope[0],
                },
                kind: _0 = proc_macro::Span::start(move _2) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: build/probe.rs:18:2: 18:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: build/probe.rs:16:1: 18:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: build/probe.rs:16:30: 16:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            build/probe.rs:16:20: 16:25 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                build/probe.rs:16:14: 16:18 (#0),
                            ),
                        ),
                        pat_span: build/probe.rs:16:14: 16:18 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} proc_macro::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: build/probe.rs:16:14: 16:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: build/probe.rs:17:5: 17:17 (#0),
                },
            ),
        ),
        ty: &'{erased} proc_macro::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: build/probe.rs:17:5: 17:9 (#0),
            scope: scope[0],
        },
    },
]