[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &((*_1).0: std::rc::Rc<std::vec::Vec<T>>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rcvec.rs:30:9: 30:25 (#0),
                    scope: scope[0],
                },
                kind: _3 = <std::rc::Rc<std::vec::Vec<T>> as std::ops::Deref>::deref(move _4) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _2 = &(*_3),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rcvec.rs:30:9: 30:25 (#0),
                    scope: scope[0],
                },
                kind: _0 = std::vec::Vec::<T>::len(move _2) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rcvec.rs:31:6: 31:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rcvec.rs:29:5: 31:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rcvec.rs:29:33: 29:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} rcvec::RcVec<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rcvec.rs:29:23: 29:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rcvec.rs:30:9: 30:25 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<T/#0, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rcvec.rs:30:9: 30:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rcvec.rs:30:9: 30:25 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<T/#0, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rcvec.rs:30:9: 30:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rcvec.rs:30:9: 30:25 (#0),
                },
            ),
        ),
        ty: &'{erased} std::rc::Rc<std::vec::Vec<T/#0, std::alloc::Global>, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rcvec.rs:30:9: 30:19 (#0),
            scope: scope[0],
        },
    },
]