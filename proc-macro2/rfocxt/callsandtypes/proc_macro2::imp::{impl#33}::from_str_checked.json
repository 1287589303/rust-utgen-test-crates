{"mod_name":"imp","calls":["<std::result::Result<imp::Literal, imp::LexError> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, imp::LexError>>>::from_residual","<proc_macro::Literal as fallback::FromStr2>::from_str_checked","detection::inside_proc_macro","<std::result::Result<proc_macro::Literal, imp::LexError> as std::ops::Try>::branch","<std::result::Result<fallback::Literal, fallback::LexError> as std::ops::Try>::branch","<std::result::Result<imp::Literal, imp::LexError> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, fallback::LexError>>>::from_residual","fallback::Literal::from_str_checked"],"types":["std::ops::ControlFlow<std::result::Result<std::convert::Infallible, imp::LexError>, proc_macro::Literal>","std::ops::ControlFlow<std::result::Result<std::convert::Infallible, fallback::LexError>, fallback::Literal>","std::result::Result<std::convert::Infallible, fallback::LexError>","std::result::Result<std::convert::Infallible, imp::LexError>","str","isize","proc_macro::Literal","!","std::result::Result<imp::Literal, imp::LexError>","bool","imp::Literal","imp::LexError","std::result::Result<fallback::Literal, fallback::LexError>","fallback::LexError","std::result::Result<proc_macro::Literal, imp::LexError>","fallback::Literal","std::convert::Infallible"]}