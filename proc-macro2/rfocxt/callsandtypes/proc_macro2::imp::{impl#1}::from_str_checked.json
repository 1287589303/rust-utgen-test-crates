{"mod_name":"imp","calls":["<std::result::Result<imp::TokenStream, imp::LexError> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, fallback::LexError>>>::from_residual","<std::result::Result<imp::TokenStream, imp::LexError> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, imp::LexError>>>::from_residual","<std::result::Result<fallback::TokenStream, fallback::LexError> as std::ops::Try>::branch","fallback::TokenStream::from_str_checked","detection::inside_proc_macro","<std::result::Result<proc_macro::TokenStream, imp::LexError> as std::ops::Try>::branch","<proc_macro::TokenStream as fallback::FromStr2>::from_str_checked","imp::DeferredTokenStream::new"],"types":["std::result::Result<std::convert::Infallible, fallback::LexError>","imp::LexError","std::ops::ControlFlow<std::result::Result<std::convert::Infallible, imp::LexError>, proc_macro::TokenStream>","proc_macro::TokenStream","fallback::LexError","fallback::TokenStream","str","std::result::Result<std::convert::Infallible, imp::LexError>","isize","std::result::Result<imp::TokenStream, imp::LexError>","std::ops::ControlFlow<std::result::Result<std::convert::Infallible, fallback::LexError>, fallback::TokenStream>","std::result::Result<fallback::TokenStream, fallback::LexError>","!","std::convert::Infallible","imp::DeferredTokenStream","std::result::Result<proc_macro::TokenStream, imp::LexError>","bool","imp::TokenStream"]}