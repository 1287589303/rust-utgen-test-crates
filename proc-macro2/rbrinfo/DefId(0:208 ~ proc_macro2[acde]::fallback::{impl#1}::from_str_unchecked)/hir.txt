Body {
    params: [
        Param {
            hir_id: HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).1),
            pat: Pat {
                hir_id: HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).2),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).2),
                    src#0,
                    None,
                ),
                span: src/fallback.rs:86:38: 86:41 (#0),
                default_binding_modes: true,
            },
            ty_span: src/fallback.rs:86:43: 86:47 (#0),
            span: src/fallback.rs:86:38: 86:47 (#0),
        },
    ],
    value: Expr {
        hir_id: HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).13),
        kind: Block(
            Block {
                stmts: [],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).3),
                        kind: MethodCall(
                            PathSegment {
                                ident: unwrap#0,
                                hir_id: HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).4),
                                res: Err,
                                args: None,
                                infer_args: true,
                            },
                            Expr {
                                hir_id: HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).5),
                                kind: Call(
                                    Expr {
                                        hir_id: HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).6),
                                        kind: Path(
                                            TypeRelative(
                                                Ty {
                                                    hir_id: HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).8),
                                                    kind: Path(
                                                        Resolved(
                                                            None,
                                                            Path {
                                                                span: src/fallback.rs:87:9: 87:13 (#0),
                                                                res: SelfTyAlias {
                                                                    alias_to: DefId(0:204 ~ proc_macro2[acde]::fallback::{impl#1}),
                                                                    forbid_generic: false,
                                                                    is_trait_impl: false,
                                                                },
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Self#0,
                                                                        hir_id: HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).7),
                                                                        res: SelfTyAlias {
                                                                            alias_to: DefId(0:204 ~ proc_macro2[acde]::fallback::{impl#1}),
                                                                            forbid_generic: false,
                                                                            is_trait_impl: false,
                                                                        },
                                                                        args: None,
                                                                        infer_args: true,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                    span: src/fallback.rs:87:9: 87:13 (#0),
                                                },
                                                PathSegment {
                                                    ident: from_str_checked#0,
                                                    hir_id: HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).9),
                                                    res: Err,
                                                    args: None,
                                                    infer_args: true,
                                                },
                                            ),
                                        ),
                                        span: src/fallback.rs:87:9: 87:31 (#0),
                                    },
                                    [
                                        Expr {
                                            hir_id: HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).10),
                                            kind: Path(
                                                Resolved(
                                                    None,
                                                    Path {
                                                        span: src/fallback.rs:87:32: 87:35 (#0),
                                                        res: Local(
                                                            HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).2),
                                                        ),
                                                        segments: [
                                                            PathSegment {
                                                                ident: src#0,
                                                                hir_id: HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).11),
                                                                res: Local(
                                                                    HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).2),
                                                                ),
                                                                args: None,
                                                                infer_args: true,
                                                            },
                                                        ],
                                                    },
                                                ),
                                            ),
                                            span: src/fallback.rs:87:32: 87:35 (#0),
                                        },
                                    ],
                                ),
                                span: src/fallback.rs:87:9: 87:36 (#0),
                            },
                            [],
                            src/fallback.rs:87:37: 87:45 (#0),
                        ),
                        span: src/fallback.rs:87:9: 87:45 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:208 ~ proc_macro2[acde]::fallback::{impl#1}::from_str_unchecked).12),
                rules: DefaultBlock,
                span: src/fallback.rs:86:57: 88:6 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: src/fallback.rs:86:57: 88:6 (#0),
    },
}