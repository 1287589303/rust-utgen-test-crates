{
  "src/parse.rs:832:14:832:27": [
    {
      "For": {
        "iter_var": "b",
        "iter_range": "input.bytes()"
      }
    }
  ],
  "src/parse.rs:835:29:835:39": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(b - b'0')",
          "lhs": "b",
          "rhs": "b'0'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/parse.rs:836:20:836:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "digit >= base",
          "lhs": "digit",
          "rhs": "base",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/parse.rs:833:15:833:16": [
    {
      "Match": {
        "match_source": "src/parse.rs:833:15:833:16",
        "match_str": "b",
        "match_kind": "Other",
        "arms": {
          "src/parse.rs:834:13:834:24": {
            "pat": {
              "pat_str": "b'0'..=b'9'",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "src/parse.rs:834:28:839:14"
          },
          "src/parse.rs:852:13:852:17": {
            "pat": {
              "pat_str": "b'_'",
              "kind": {
                "Other": 95
              }
            },
            "guard": null,
            "body_source": "src/parse.rs:852:21:858:14"
          },
          "src/parse.rs:859:13:859:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "src/parse.rs:859:18:859:23"
          },
          "src/parse.rs:840:13:840:24": {
            "pat": {
              "pat_str": "b'a'..=b'f'",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "src/parse.rs:840:28:845:14"
          },
          "src/parse.rs:846:13:846:24": {
            "pat": {
              "pat_str": "b'A'..=b'F'",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "src/parse.rs:846:28:851:14"
          }
        }
      }
    }
  ],
  "src/parse.rs:864:8:864:13": [
    {
      "Bool": {
        "Other": "empty"
      }
    }
  ],
  "src/parse.rs:841:34:841:44": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(b - b'a')",
          "lhs": "b",
          "rhs": "b'a'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/parse.rs:842:20:842:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "digit >= base",
          "lhs": "digit",
          "rhs": "base",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/parse.rs:823:15:823:38": [
    {
      "Bool": {
        "Other": "input.starts_with(\"0b\")"
      }
    }
  ],
  "src/parse.rs:817:19:817:42": [
    {
      "Bool": {
        "Other": "input.starts_with(\"0x\")"
      }
    }
  ],
  "src/parse.rs:848:20:848:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "digit >= base",
          "lhs": "digit",
          "rhs": "base",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/parse.rs:853:20:853:25": [
    {
      "Bool": {
        "Other": "empty"
      }
    }
  ],
  "src/parse.rs:847:29:847:51": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "10 + (b - b'A') as u64",
          "lhs": "10",
          "rhs": "(b - b'A') as u64",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/parse.rs:847:34:847:44": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(b - b'A')",
          "lhs": "b",
          "rhs": "b'A'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/parse.rs:853:29:853:39": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "base == 10",
          "lhs": "base",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/parse.rs:820:15:820:38": [
    {
      "Bool": {
        "Other": "input.starts_with(\"0o\")"
      }
    }
  ],
  "src/parse.rs:841:29:841:51": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "10 + (b - b'a') as u64",
          "lhs": "10",
          "rhs": "(b - b'a') as u64",
          "cmp_with_int": true
        }
      }
    }
  ]
}