{
  "name": "proc_macro2::{impl#31}::new",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1384:2"
  },
  "visible": true,
  "loc": "src/lib.rs:1010:5:1012:6",
  "doc": "/// Creates a new `Ident` with the given `string` as well as the specified\n/// `span`.\n///\n/// The `string` argument must be a valid identifier permitted by the\n/// language, otherwise the function will panic.\n///\n/// Note that `span`, currently in rustc, configures the hygiene information\n/// for this identifier.\n///\n/// As of this time `Span::call_site()` explicitly opts-in to \"call-site\"\n/// hygiene meaning that identifiers created with this span will be resolved\n/// as if they were written directly at the location of the macro call, and\n/// other code at the macro call site will be able to refer to them as well.\n///\n/// Later spans like `Span::def_site()` will allow to opt-in to\n/// \"definition-site\" hygiene meaning that identifiers created with this\n/// span will be resolved at the location of the macro definition and other\n/// code at the macro call site will not be able to refer to them.\n///\n/// Due to the current importance of hygiene this constructor, unlike other\n/// tokens, requires a `Span` to be specified at construction.\n///\n/// # Panics\n///\n/// Panics if the input string is neither a keyword nor a legal variable\n/// name. If you are not sure whether the string contains an identifier and\n/// need to handle an error case, use\n/// <a href=\"https://docs.rs/syn/2.0/syn/fn.parse_str.html\"><code\n///   style=\"padding-right:0;\">syn::parse_str</code></a><code\n///   style=\"padding-left:0;\">::&lt;Ident&gt;</code>\n/// rather than `Ident::new`.\n",
  "code": [
    "pub fn new(string: &str, span: Span) -> Self {",
    "    Ident::_new(imp::Ident::new_checked(string, span.inner))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}