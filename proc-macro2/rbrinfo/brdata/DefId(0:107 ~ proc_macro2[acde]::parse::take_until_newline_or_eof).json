{
  "name": "proc_macro2::parse::take_until_newline_or_eof",
  "mod_info": {
    "name": "parse",
    "loc": "src/lib.rs:142:1:142:11"
  },
  "visible": false,
  "loc": "src/parse.rs:980:1:992:2",
  "doc": "",
  "code": [
    "fn take_until_newline_or_eof(input: Cursor) -> (Cursor, &str) {",
    "    let chars = input.char_indices();",
    "",
    "    for (i, ch) in chars {",
    "        if ch == '\\n' {",
    "            return (input.advance(i), &input.rest[..i]);",
    "        } else if ch == '\\r' && input.rest[i + 1..].starts_with('\\n') {",
    "            return (input.advance(i + 1), &input.rest[..i]);",
    "        }",
    "    }",
    "",
    "    (input.advance(input.len()), input.rest)",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 2,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(i, ch) in chars",
          "norm": null,
          "value": "true",
          "line": 983,
          "bound": null
        },
        {
          "cond": "ch == '\\n'",
          "norm": "'\\n' == ch",
          "value": "false",
          "line": 984,
          "bound": null
        }
      ],
      "ret": "(input.advance(i), &input.rest[..i])",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        10,
        11,
        12,
        27,
        28
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(i, ch) in chars",
          "norm": null,
          "value": "true",
          "line": 983,
          "bound": null
        },
        {
          "cond": "ch == '\\n'",
          "norm": "'\\n' == ch",
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "ch == '\\r'",
          "norm": "'\\r' == ch",
          "value": "false",
          "line": 986,
          "bound": null
        },
        {
          "cond": "input.rest[i + 1..].starts_with('\\n')",
          "norm": null,
          "value": "true",
          "line": 986,
          "bound": null
        }
      ],
      "ret": "(input.advance(i + 1), &input.rest[..i])",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        27,
        28
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "(i, ch) in chars",
          "norm": null,
          "value": "true",
          "line": 983,
          "bound": null
        },
        {
          "cond": "ch == '\\n'",
          "norm": "'\\n' == ch",
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "ch == '\\r'",
          "norm": "'\\r' == ch",
          "value": "false",
          "line": 986,
          "bound": null
        },
        {
          "cond": "input.rest[i + 1..].starts_with('\\n')",
          "norm": null,
          "value": "false",
          "line": 986,
          "bound": null
        },
        {
          "cond": "(i, ch) in chars",
          "norm": null,
          "value": "false",
          "line": 983,
          "bound": null
        }
      ],
      "ret": "(input.advance(input.len()), input.rest)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        13,
        14,
        15,
        16,
        17,
        22,
        24,
        3,
        4,
        5,
        7,
        9,
        25,
        26,
        28
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "(i, ch) in chars",
          "norm": null,
          "value": "true",
          "line": 983,
          "bound": null
        },
        {
          "cond": "ch == '\\n'",
          "norm": "'\\n' == ch",
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "ch == '\\r'",
          "norm": "'\\r' == ch",
          "value": "true",
          "line": 986,
          "bound": null
        },
        {
          "cond": "(i, ch) in chars",
          "norm": null,
          "value": "false",
          "line": 983,
          "bound": null
        }
      ],
      "ret": "(input.advance(input.len()), input.rest)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        13,
        23,
        24,
        3,
        4,
        5,
        7,
        9,
        25,
        26,
        28
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "(i, ch) in chars",
          "norm": null,
          "value": "false",
          "line": 983,
          "bound": null
        }
      ],
      "ret": "(input.advance(input.len()), input.rest)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        25,
        26,
        28
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}