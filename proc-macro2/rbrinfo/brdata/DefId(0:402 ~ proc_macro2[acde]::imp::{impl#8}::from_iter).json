{
  "name": "proc_macro2::imp::{impl#8}::from_iter",
  "mod_info": {
    "name": "imp",
    "loc": "src/lib.rs:159:1:159:9"
  },
  "visible": true,
  "loc": "src/wrapper.rs:197:5:217:6",
  "doc": "",
  "code": [
    "fn from_iter<I: IntoIterator<Item = TokenStream>>(streams: I) -> Self {",
    "    let mut streams = streams.into_iter();",
    "    match streams.next() {",
    "        Some(TokenStream::Compiler(mut first)) => {",
    "            first.evaluate_now();",
    "            first.stream.extend(streams.map(|s| match s {",
    "                TokenStream::Compiler(s) => s.into_token_stream(),",
    "                TokenStream::Fallback(_) => mismatch(line!()),",
    "            }));",
    "            TokenStream::Compiler(first)",
    "        }",
    "        Some(TokenStream::Fallback(mut first)) => {",
    "            first.extend(streams.map(|s| match s {",
    "                TokenStream::Fallback(s) => s,",
    "                TokenStream::Compiler(_) => mismatch(line!()),",
    "            }));",
    "            TokenStream::Fallback(first)",
    "        }",
    "        None => TokenStream::new(),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "streams.next() matches Some(TokenStream::Compiler(mut first)) or Some(TokenStream::Fallback(mut first))",
          "norm": null,
          "value": "true",
          "line": 199,
          "bound": null
        },
        {
          "cond": "streams.next() matches Some(TokenStream::Compiler(mut first)) or Some(TokenStream::Fallback(mut first))",
          "norm": null,
          "value": "true",
          "line": 199,
          "bound": null
        },
        {
          "cond": "streams.next() matches Some(TokenStream::Fallback(mut first))",
          "norm": null,
          "value": "true",
          "line": 199,
          "bound": null
        }
      ],
      "ret": "TokenStream::Fallback(first)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "streams.next() matches Some(TokenStream::Compiler(mut first)) or Some(TokenStream::Fallback(mut first))",
          "norm": null,
          "value": "true",
          "line": 199,
          "bound": null
        },
        {
          "cond": "streams.next() matches None",
          "norm": null,
          "value": "true",
          "line": 199,
          "bound": null
        },
        {
          "cond": "streams.next() matches Some(TokenStream::Compiler(mut first))",
          "norm": null,
          "value": "true",
          "line": 199,
          "bound": null
        }
      ],
      "ret": "TokenStream::Compiler(first)",
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        19,
        20,
        21,
        22
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "streams.next() matches None",
          "norm": null,
          "value": "true",
          "line": 199,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        7,
        19,
        20,
        21,
        22
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}