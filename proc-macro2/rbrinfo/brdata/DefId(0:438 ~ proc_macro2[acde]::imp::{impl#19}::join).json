{
  "name": "proc_macro2::imp::{impl#19}::join",
  "mod_info": {
    "name": "imp",
    "loc": "src/lib.rs:159:1:159:9"
  },
  "visible": true,
  "loc": "src/wrapper.rs:509:5:517:6",
  "doc": "",
  "code": [
    "pub(crate) fn join(&self, other: Span) -> Option<Span> {",
    "    let ret = match (self, other) {",
    "        #[cfg(proc_macro_span)]",
    "        (Span::Compiler(a), Span::Compiler(b)) => Span::Compiler(a.join(b)?),",
    "        (Span::Fallback(a), Span::Fallback(b)) => Span::Fallback(a.join(b)?),",
    "        _ => return None,",
    "    };",
    "    Some(ret)",
    "}"
  ],
  "size": {
    "chain": 7,
    "contra": 0,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(self, other) matches _",
          "norm": null,
          "value": "true",
          "line": 514,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        23,
        24
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(self, other) matches _",
          "norm": null,
          "value": "true",
          "line": 514,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        4,
        1,
        23,
        24
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "(self, other) matches (Span::Fallback(a), Span::Fallback(b))",
          "norm": null,
          "value": "true",
          "line": 510,
          "bound": null
        },
        {
          "cond": "a.join(b)?",
          "norm": null,
          "value": "Err/None",
          "line": 513,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        5,
        14,
        15,
        16,
        18,
        20,
        21,
        23,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "(self, other) matches (Span::Fallback(a), Span::Fallback(b))",
          "norm": null,
          "value": "true",
          "line": 510,
          "bound": null
        },
        {
          "cond": "a.join(b)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 513,
          "bound": null
        }
      ],
      "ret": "Some(ret)",
      "path": [
        0,
        4,
        5,
        14,
        15,
        16,
        19,
        22,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "(self, other) matches _",
          "norm": null,
          "value": "true",
          "line": 514,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        2,
        1,
        23,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "(self, other) matches (Span::Compiler(a), Span::Compiler(b))",
          "norm": null,
          "value": "true",
          "line": 510,
          "bound": null
        },
        {
          "cond": "a.join(b)?",
          "norm": null,
          "value": "Err/None",
          "line": 512,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        3,
        6,
        7,
        8,
        10,
        12,
        13,
        23,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "(self, other) matches (Span::Compiler(a), Span::Compiler(b))",
          "norm": null,
          "value": "true",
          "line": 510,
          "bound": null
        },
        {
          "cond": "a.join(b)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 512,
          "bound": null
        }
      ],
      "ret": "Some(ret)",
      "path": [
        0,
        2,
        3,
        6,
        7,
        8,
        11,
        22,
        24
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}