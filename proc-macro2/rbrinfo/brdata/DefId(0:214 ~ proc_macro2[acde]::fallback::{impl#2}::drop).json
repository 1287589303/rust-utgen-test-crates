{
  "name": "proc_macro2::fallback::{impl#2}::drop",
  "mod_info": {
    "name": "fallback",
    "loc": "src/lib.rs:151:1:151:18"
  },
  "visible": true,
  "loc": "src/fallback.rs:127:5:155:6",
  "doc": "",
  "code": [
    "fn drop(&mut self) {",
    "    let mut stack = Vec::new();",
    "    let mut current = match self.inner.get_mut() {",
    "        Some(inner) => inner.take().into_iter(),",
    "        None => return,",
    "    };",
    "    loop {",
    "        while let Some(token) = current.next() {",
    "            let group = match token {",
    "                TokenTree::Group(group) => group.inner,",
    "                _ => continue,",
    "            };",
    "            #[cfg(wrap_proc_macro)]",
    "            let group = match group {",
    "                crate::imp::Group::Fallback(group) => group,",
    "                crate::imp::Group::Compiler(_) => continue,",
    "            };",
    "            let mut group = group;",
    "            if let Some(inner) = group.stream.inner.get_mut() {",
    "                stack.push(current);",
    "                current = inner.take().into_iter();",
    "            }",
    "        }",
    "        match stack.pop() {",
    "            Some(next) => current = next,",
    "            None => return,",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 6,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.inner.get_mut() matches Some(inner)",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "self.inner.get_mut() matches Some(inner)",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "let Some(token) = current.next()",
          "norm": null,
          "value": "true",
          "line": 134,
          "bound": null
        },
        {
          "cond": "stack.pop() matches None",
          "norm": null,
          "value": "true",
          "line": 150,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        37,
        40,
        45,
        48,
        55,
        56,
        57
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.inner.get_mut() matches Some(inner)",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "self.inner.get_mut() matches Some(inner)",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "let Some(token) = current.next()",
          "norm": null,
          "value": "true",
          "line": 134,
          "bound": null
        },
        {
          "cond": "token matches TokenTree::Group(group)",
          "norm": null,
          "value": "false",
          "line": 136,
          "bound": null
        },
        {
          "cond": "token matches _",
          "norm": null,
          "value": "true",
          "line": 137,
          "bound": null
        },
        {
          "cond": "let Some(token) = current.next()",
          "norm": null,
          "value": "true",
          "line": 134,
          "bound": null
        },
        {
          "cond": "stack.pop() matches None",
          "norm": null,
          "value": "true",
          "line": 150,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        42,
        43,
        44,
        11,
        12,
        13,
        37,
        40,
        45,
        48,
        55,
        56,
        57
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.inner.get_mut() matches Some(inner)",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "self.inner.get_mut() matches Some(inner)",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "let Some(token) = current.next()",
          "norm": null,
          "value": "true",
          "line": 134,
          "bound": null
        },
        {
          "cond": "token matches TokenTree::Group(group)",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "token matches TokenTree::Group(group)",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "group matches crate::imp::Group::Fallback(group)",
          "norm": null,
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "group matches crate::imp::Group::Fallback(group)",
          "norm": null,
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "let Some(inner) = group.stream.inner.get_mut()",
          "norm": null,
          "value": "true",
          "line": 145,
          "bound": null
        },
        {
          "cond": "let Some(token) = current.next()",
          "norm": null,
          "value": "true",
          "line": 134,
          "bound": null
        },
        {
          "cond": "stack.pop() matches None",
          "norm": null,
          "value": "true",
          "line": 150,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        20,
        21,
        22,
        23,
        32,
        33,
        34,
        35,
        36,
        38,
        39,
        11,
        12,
        13,
        37,
        40,
        45,
        48,
        55,
        56,
        57
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.inner.get_mut() matches Some(inner)",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "self.inner.get_mut() matches Some(inner)",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "let Some(token) = current.next()",
          "norm": null,
          "value": "true",
          "line": 134,
          "bound": null
        },
        {
          "cond": "token matches TokenTree::Group(group)",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "token matches TokenTree::Group(group)",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "group matches crate::imp::Group::Fallback(group)",
          "norm": null,
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "group matches crate::imp::Group::Fallback(group)",
          "norm": null,
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "let Some(inner) = group.stream.inner.get_mut()",
          "norm": null,
          "value": "true",
          "line": 145,
          "bound": null
        },
        {
          "cond": "let Some(token) = current.next()",
          "norm": null,
          "value": "true",
          "line": 134,
          "bound": null
        },
        {
          "cond": "stack.pop() matches None",
          "norm": null,
          "value": "true",
          "line": 150,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        31,
        33,
        34,
        35,
        36,
        38,
        39,
        11,
        12,
        13,
        37,
        40,
        45,
        48,
        55,
        56,
        57
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.inner.get_mut() matches Some(inner)",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "self.inner.get_mut() matches Some(inner)",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "let Some(token) = current.next()",
          "norm": null,
          "value": "true",
          "line": 134,
          "bound": null
        },
        {
          "cond": "token matches TokenTree::Group(group)",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "token matches TokenTree::Group(group)",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "group matches crate::imp::Group::Compiler(_)",
          "norm": null,
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "let Some(token) = current.next()",
          "norm": null,
          "value": "true",
          "line": 134,
          "bound": null
        },
        {
          "cond": "stack.pop() matches None",
          "norm": null,
          "value": "true",
          "line": 150,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        41,
        42,
        43,
        44,
        11,
        12,
        13,
        37,
        40,
        45,
        48,
        55,
        56,
        57
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.inner.get_mut() matches None",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        56,
        57
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}