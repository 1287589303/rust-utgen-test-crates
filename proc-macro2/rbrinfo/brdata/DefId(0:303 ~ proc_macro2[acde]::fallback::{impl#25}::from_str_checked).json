{
  "name": "proc_macro2::fallback::{impl#25}::from_str_checked",
  "mod_info": {
    "name": "fallback",
    "loc": "src/lib.rs:151:1:151:18"
  },
  "visible": true,
  "loc": "src/fallback.rs:970:5:998:6",
  "doc": "",
  "code": [
    "pub(crate) fn from_str_checked(repr: &str) -> Result<Self, LexError> {",
    "    let mut cursor = get_cursor(repr);",
    "    #[cfg(span_locations)]",
    "    let lo = cursor.off;",
    "",
    "    let negative = cursor.starts_with_char('-');",
    "    if negative {",
    "        cursor = cursor.advance(1);",
    "        if !cursor.starts_with_fn(|ch| ch.is_ascii_digit()) {",
    "            return Err(LexError::call_site());",
    "        }",
    "    }",
    "",
    "    if let Ok((rest, mut literal)) = parse::literal(cursor) {",
    "        if rest.is_empty() {",
    "            if negative {",
    "                literal.repr.insert(0, '-');",
    "            }",
    "            literal.span = Span {",
    "                #[cfg(span_locations)]",
    "                lo,",
    "                #[cfg(span_locations)]",
    "                hi: rest.off,",
    "            };",
    "            return Ok(literal);",
    "        }",
    "    }",
    "    Err(LexError::call_site())",
    "}"
  ],
  "size": {
    "chain": 9,
    "contra": 0,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "negative",
          "norm": null,
          "value": "true",
          "line": 976,
          "bound": null
        },
        {
          "cond": "cursor.starts_with_fn(|ch| ch.is_ascii_digit())",
          "norm": null,
          "value": "true",
          "line": 978,
          "bound": null
        },
        {
          "cond": "let Ok((rest, mut literal)) = parse::literal(cursor)",
          "norm": null,
          "value": "true",
          "line": 983,
          "bound": null
        }
      ],
      "ret": "Err(LexError::call_site())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        10,
        11,
        22,
        24,
        25,
        26,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "negative",
          "norm": null,
          "value": "true",
          "line": 976,
          "bound": null
        },
        {
          "cond": "cursor.starts_with_fn(|ch| ch.is_ascii_digit())",
          "norm": null,
          "value": "true",
          "line": 978,
          "bound": null
        },
        {
          "cond": "let Ok((rest, mut literal)) = parse::literal(cursor)",
          "norm": null,
          "value": "false",
          "line": 983,
          "bound": null
        },
        {
          "cond": "rest.is_empty()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "negative",
          "norm": null,
          "value": "true",
          "line": 985,
          "bound": null
        }
      ],
      "ret": "Ok(literal)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        19,
        20,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "negative",
          "norm": null,
          "value": "true",
          "line": 976,
          "bound": null
        },
        {
          "cond": "cursor.starts_with_fn(|ch| ch.is_ascii_digit())",
          "norm": null,
          "value": "true",
          "line": 978,
          "bound": null
        },
        {
          "cond": "let Ok((rest, mut literal)) = parse::literal(cursor)",
          "norm": null,
          "value": "false",
          "line": 983,
          "bound": null
        },
        {
          "cond": "rest.is_empty()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "negative",
          "norm": null,
          "value": "false",
          "line": 985,
          "bound": null
        }
      ],
      "ret": "Ok(literal)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        19,
        20,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "negative",
          "norm": null,
          "value": "true",
          "line": 976,
          "bound": null
        },
        {
          "cond": "cursor.starts_with_fn(|ch| ch.is_ascii_digit())",
          "norm": null,
          "value": "true",
          "line": 978,
          "bound": null
        },
        {
          "cond": "let Ok((rest, mut literal)) = parse::literal(cursor)",
          "norm": null,
          "value": "false",
          "line": 983,
          "bound": null
        },
        {
          "cond": "rest.is_empty()",
          "norm": null,
          "value": "false",
          "line": 984,
          "bound": null
        }
      ],
      "ret": "Err(LexError::call_site())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        10,
        11,
        12,
        13,
        14,
        21,
        23,
        24,
        25,
        26,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "negative",
          "norm": null,
          "value": "true",
          "line": 976,
          "bound": null
        },
        {
          "cond": "cursor.starts_with_fn(|ch| ch.is_ascii_digit())",
          "norm": null,
          "value": "false",
          "line": 978,
          "bound": null
        }
      ],
      "ret": "Err(LexError::call_site())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        8,
        29,
        30
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "negative",
          "norm": null,
          "value": "false",
          "line": 976,
          "bound": null
        },
        {
          "cond": "let Ok((rest, mut literal)) = parse::literal(cursor)",
          "norm": null,
          "value": "true",
          "line": 983,
          "bound": null
        }
      ],
      "ret": "Err(LexError::call_site())",
      "path": [
        0,
        1,
        2,
        9,
        10,
        11,
        22,
        24,
        25,
        26,
        30
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "negative",
          "norm": null,
          "value": "false",
          "line": 976,
          "bound": null
        },
        {
          "cond": "let Ok((rest, mut literal)) = parse::literal(cursor)",
          "norm": null,
          "value": "false",
          "line": 983,
          "bound": null
        },
        {
          "cond": "rest.is_empty()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "negative",
          "norm": null,
          "value": "true",
          "line": 985,
          "bound": null
        }
      ],
      "ret": "Ok(literal)",
      "path": [
        0,
        1,
        2,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        19,
        20,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "negative",
          "norm": null,
          "value": "false",
          "line": 976,
          "bound": null
        },
        {
          "cond": "let Ok((rest, mut literal)) = parse::literal(cursor)",
          "norm": null,
          "value": "false",
          "line": 983,
          "bound": null
        },
        {
          "cond": "rest.is_empty()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "negative",
          "norm": null,
          "value": "false",
          "line": 985,
          "bound": null
        }
      ],
      "ret": "Ok(literal)",
      "path": [
        0,
        1,
        2,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        19,
        20,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "negative",
          "norm": null,
          "value": "false",
          "line": 976,
          "bound": null
        },
        {
          "cond": "let Ok((rest, mut literal)) = parse::literal(cursor)",
          "norm": null,
          "value": "false",
          "line": 983,
          "bound": null
        },
        {
          "cond": "rest.is_empty()",
          "norm": null,
          "value": "false",
          "line": 984,
          "bound": null
        }
      ],
      "ret": "Err(LexError::call_site())",
      "path": [
        0,
        1,
        2,
        9,
        10,
        11,
        12,
        13,
        14,
        21,
        23,
        24,
        25,
        26,
        30
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}