{
  "name": "proc_macro2::{impl#40}::subspan",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1384:2"
  },
  "visible": true,
  "loc": "src/lib.rs:1296:5:1298:6",
  "doc": "/// Returns a `Span` that is a subset of `self.span()` containing only\n/// the source bytes in range `range`. Returns `None` if the would-be\n/// trimmed span is outside the bounds of `self`.\n///\n/// Warning: the underlying [`proc_macro::Literal::subspan`] method is\n/// nightly-only. When called from within a procedural macro not using a\n/// nightly compiler, this method will always return `None`.\n",
  "code": [
    "pub fn subspan<R: RangeBounds<usize>>(&self, range: R) -> Option<Span> {",
    "    self.inner.subspan(range).map(Span::_new)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}