{
  "name": "proc_macro2::parse::raw_c_string",
  "mod_info": {
    "name": "parse",
    "loc": "src/lib.rs:142:1:142:11"
  },
  "visible": false,
  "loc": "src/parse.rs:524:1:542:2",
  "doc": "",
  "code": [
    "fn raw_c_string(input: Cursor) -> Result<Cursor, Reject> {",
    "    let (input, delimiter) = delimiter_of_raw_string(input)?;",
    "    let mut bytes = input.bytes().enumerate();",
    "    while let Some((i, byte)) = bytes.next() {",
    "        match byte {",
    "            b'\"' if input.rest[i + 1..].starts_with(delimiter) => {",
    "                let rest = input.advance(i + 1 + delimiter.len());",
    "                return Ok(literal_suffix(rest));",
    "            }",
    "            b'\\r' => match bytes.next() {",
    "                Some((_, b'\\n')) => {}",
    "                _ => break,",
    "            },",
    "            b'\\0' => break,",
    "            _ => {}",
    "        }",
    "    }",
    "    Err(Reject)",
    "}"
  ],
  "size": {
    "chain": 9,
    "contra": 0,
    "min_set": 7
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "delimiter_of_raw_string(input)?",
          "norm": null,
          "value": "Err/None",
          "line": 525,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        41
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "delimiter_of_raw_string(input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 525,
          "bound": null
        },
        {
          "cond": "let Some((i, byte)) = bytes.next()",
          "norm": null,
          "value": "true",
          "line": 527,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        38,
        40,
        41
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "delimiter_of_raw_string(input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 525,
          "bound": null
        },
        {
          "cond": "let Some((i, byte)) = bytes.next()",
          "norm": null,
          "value": "true",
          "line": 527,
          "bound": null
        },
        {
          "cond": "byte matches b'\\0'",
          "norm": null,
          "value": "true",
          "line": 537,
          "bound": null
        },
        {
          "cond": "byte matches b'\\r'",
          "norm": null,
          "value": "true",
          "line": 533,
          "bound": null
        },
        {
          "cond": "byte matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 529,
          "bound": null
        },
        {
          "cond": "byte matches _",
          "norm": null,
          "value": "true",
          "line": 538,
          "bound": null
        },
        {
          "cond": "let Some((i, byte)) = bytes.next()",
          "norm": null,
          "value": "true",
          "line": 527,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        37,
        10,
        11,
        12,
        38,
        40,
        41
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "delimiter_of_raw_string(input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 525,
          "bound": null
        },
        {
          "cond": "let Some((i, byte)) = bytes.next()",
          "norm": null,
          "value": "true",
          "line": 527,
          "bound": null
        },
        {
          "cond": "byte matches b'\\0'",
          "norm": null,
          "value": "true",
          "line": 537,
          "bound": null
        },
        {
          "cond": "byte matches b'\\0'",
          "norm": null,
          "value": "true",
          "line": 528,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        18,
        36,
        39,
        40,
        41
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "delimiter_of_raw_string(input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 525,
          "bound": null
        },
        {
          "cond": "let Some((i, byte)) = bytes.next()",
          "norm": null,
          "value": "true",
          "line": 527,
          "bound": null
        },
        {
          "cond": "byte matches b'\\r'",
          "norm": null,
          "value": "true",
          "line": 533,
          "bound": null
        },
        {
          "cond": "byte matches b'\\r'",
          "norm": null,
          "value": "true",
          "line": 528,
          "bound": null
        },
        {
          "cond": "bytes.next() matches _",
          "norm": null,
          "value": "true",
          "line": 535,
          "bound": null
        },
        {
          "cond": "bytes.next() matches Some((_, b'\\n'))",
          "norm": null,
          "value": "false",
          "line": 534,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        17,
        30,
        31,
        32,
        39,
        40,
        41
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "delimiter_of_raw_string(input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 525,
          "bound": null
        },
        {
          "cond": "let Some((i, byte)) = bytes.next()",
          "norm": null,
          "value": "true",
          "line": 527,
          "bound": null
        },
        {
          "cond": "byte matches b'\\r'",
          "norm": null,
          "value": "true",
          "line": 533,
          "bound": null
        },
        {
          "cond": "byte matches b'\\r'",
          "norm": null,
          "value": "true",
          "line": 528,
          "bound": null
        },
        {
          "cond": "bytes.next() matches Some((_, b'\\n'))",
          "norm": null,
          "value": "true",
          "line": 533,
          "bound": null
        },
        {
          "cond": "bytes.next() matches _",
          "norm": null,
          "value": "true",
          "line": 535,
          "bound": null
        },
        {
          "cond": "bytes.next() matches Some((_, b'\\n'))",
          "norm": null,
          "value": "false",
          "line": 534,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        17,
        30,
        31,
        33,
        32,
        39,
        40,
        41
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "delimiter_of_raw_string(input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 525,
          "bound": null
        },
        {
          "cond": "let Some((i, byte)) = bytes.next()",
          "norm": null,
          "value": "true",
          "line": 527,
          "bound": null
        },
        {
          "cond": "byte matches b'\\r'",
          "norm": null,
          "value": "true",
          "line": 533,
          "bound": null
        },
        {
          "cond": "byte matches b'\\r'",
          "norm": null,
          "value": "true",
          "line": 528,
          "bound": null
        },
        {
          "cond": "bytes.next() matches Some((_, b'\\n'))",
          "norm": null,
          "value": "true",
          "line": 533,
          "bound": null
        },
        {
          "cond": "bytes.next() matches ",
          "norm": null,
          "value": "true",
          "line": 533,
          "bound": null
        },
        {
          "cond": "bytes.next() matches Some((_, b'\\n'))",
          "norm": null,
          "value": "true",
          "line": 533,
          "bound": null
        },
        {
          "cond": "let Some((i, byte)) = bytes.next()",
          "norm": null,
          "value": "true",
          "line": 527,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        17,
        30,
        31,
        33,
        34,
        35,
        37,
        10,
        11,
        12,
        38,
        40,
        41
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "delimiter_of_raw_string(input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 525,
          "bound": null
        },
        {
          "cond": "let Some((i, byte)) = bytes.next()",
          "norm": null,
          "value": "true",
          "line": 527,
          "bound": null
        },
        {
          "cond": "byte matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 529,
          "bound": null
        },
        {
          "cond": "byte matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 528,
          "bound": null
        },
        {
          "cond": "input.rest[i + 1..].starts_with(delimiter)",
          "norm": null,
          "value": "true",
          "line": 529,
          "bound": null
        }
      ],
      "ret": "Ok(literal_suffix(rest))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        19,
        20,
        21,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        41
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "delimiter_of_raw_string(input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 525,
          "bound": null
        },
        {
          "cond": "let Some((i, byte)) = bytes.next()",
          "norm": null,
          "value": "true",
          "line": 527,
          "bound": null
        },
        {
          "cond": "byte matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 529,
          "bound": null
        },
        {
          "cond": "byte matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 528,
          "bound": null
        },
        {
          "cond": "input.rest[i + 1..].starts_with(delimiter)",
          "norm": null,
          "value": "false",
          "line": 529,
          "bound": null
        },
        {
          "cond": "let Some((i, byte)) = bytes.next()",
          "norm": null,
          "value": "true",
          "line": 527,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        19,
        20,
        21,
        22,
        24,
        15,
        37,
        10,
        11,
        12,
        38,
        40,
        41
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}