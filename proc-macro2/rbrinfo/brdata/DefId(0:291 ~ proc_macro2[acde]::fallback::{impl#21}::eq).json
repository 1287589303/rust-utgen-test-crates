{
  "name": "proc_macro2::fallback::{impl#21}::eq",
  "mod_info": {
    "name": "fallback",
    "loc": "src/lib.rs:151:1:151:18"
  },
  "visible": true,
  "loc": "src/fallback.rs:889:5:891:6",
  "doc": "",
  "code": [
    "fn eq(&self, other: &Ident) -> bool {",
    "    self.sym == other.sym && self.raw == other.raw",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.sym == other.sym",
          "norm": "other.sym == self.sym",
          "value": "true",
          "line": 890,
          "bound": null
        }
      ],
      "ret": "self.raw == other.raw",
      "path": [
        0,
        1,
        2,
        4
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.sym == other.sym",
          "norm": "other.sym == self.sym",
          "value": "false",
          "line": 890,
          "bound": null
        }
      ],
      "ret": "self.sym == other.sym && self.raw == other.raw",
      "path": [
        0,
        1,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}