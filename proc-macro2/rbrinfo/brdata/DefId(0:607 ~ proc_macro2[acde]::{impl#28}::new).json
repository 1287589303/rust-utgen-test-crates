{
  "name": "proc_macro2::{impl#28}::new",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1384:2"
  },
  "visible": true,
  "loc": "src/lib.rs:836:5:848:6",
  "doc": "/// Creates a new `Punct` from the given character and spacing.\n///\n/// The `ch` argument must be a valid punctuation character permitted by the\n/// language, otherwise the function will panic.\n///\n/// The returned `Punct` will have the default span of `Span::call_site()`\n/// which can be further configured with the `set_span` method below.\n",
  "code": [
    "pub fn new(ch: char, spacing: Spacing) -> Self {",
    "    if let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'",
    "    | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
    "    {",
    "        Punct {",
    "            ch,",
    "            spacing,",
    "            span: Span::call_site(),",
    "        }",
    "    } else {",
    "        panic!(\"unsupported proc macro punctuation character {:?}\", ch);",
    "    }",
    "}"
  ],
  "size": {
    "chain": 23,
    "contra": 0,
    "min_set": 23
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        5,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "let '!' | '#' | '$' | '%' | '&' | '\\'' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | ';'\n        | '<' | '=' | '>' | '?' | '@' | '^' | '|' | '~' = ch",
          "norm": null,
          "value": "true",
          "line": 837,
          "bound": null
        }
      ],
      "ret": "Punct {\n                ch,\n                spacing,\n                span: Span::call_site(),\n            }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}