{
  "name": "proc_macro2::{impl#24}::fmt",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1384:2"
  },
  "visible": true,
  "loc": "src/lib.rs:647:5:661:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {",
    "    // Each of these has the name in the struct type in the derived debug,",
    "    // so don't bother with an extra layer of indirection",
    "    match self {",
    "        TokenTree::Group(t) => Debug::fmt(t, f),",
    "        TokenTree::Ident(t) => {",
    "            let mut debug = f.debug_struct(\"Ident\");",
    "            debug.field(\"sym\", &format_args!(\"{}\", t));",
    "            imp::debug_span_field_if_nontrivial(&mut debug, t.span().inner);",
    "            debug.finish()",
    "        }",
    "        TokenTree::Punct(t) => Debug::fmt(t, f),",
    "        TokenTree::Literal(t) => Debug::fmt(t, f),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self matches TokenTree::Literal(t)",
          "norm": null,
          "value": "true",
          "line": 650,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        18,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self matches TokenTree::Punct(t)",
          "norm": null,
          "value": "true",
          "line": 650,
          "bound": null
        },
        {
          "cond": "self matches TokenTree::Punct(t)",
          "norm": null,
          "value": "true",
          "line": 650,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        16,
        17,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self matches TokenTree::Ident(t)",
          "norm": null,
          "value": "true",
          "line": 650,
          "bound": null
        },
        {
          "cond": "self matches TokenTree::Ident(t)",
          "norm": null,
          "value": "true",
          "line": 650,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self matches TokenTree::Group(t)",
          "norm": null,
          "value": "true",
          "line": 650,
          "bound": null
        },
        {
          "cond": "self matches TokenTree::Group(t)",
          "norm": null,
          "value": "true",
          "line": 650,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        6,
        7,
        19
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}