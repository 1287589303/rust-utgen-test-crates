{
  "name": "proc_macro2::parse::ident_not_raw",
  "mod_info": {
    "name": "parse",
    "loc": "src/lib.rs:142:1:142:11"
  },
  "visible": false,
  "loc": "src/parse.rs:318:1:335:2",
  "doc": "",
  "code": [
    "fn ident_not_raw(input: Cursor) -> PResult<&str> {",
    "    let mut chars = input.char_indices();",
    "",
    "    match chars.next() {",
    "        Some((_, ch)) if is_ident_start(ch) => {}",
    "        _ => return Err(Reject),",
    "    }",
    "",
    "    let mut end = input.len();",
    "    for (i, ch) in chars {",
    "        if !is_ident_continue(ch) {",
    "            end = i;",
    "            break;",
    "        }",
    "    }",
    "",
    "    Ok((input.advance(end), &input.rest[..end]))",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 1,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "chars.next() matches Some((_, ch))",
          "norm": null,
          "value": "false",
          "line": 322,
          "bound": null
        },
        {
          "cond": "chars.next() matches _",
          "norm": null,
          "value": "true",
          "line": 323,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        3,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "chars.next() matches Some((_, ch))",
          "norm": null,
          "value": "true",
          "line": 321,
          "bound": null
        },
        {
          "cond": "chars.next() matches Some((_, ch))",
          "norm": null,
          "value": "true",
          "line": 321,
          "bound": null
        },
        {
          "cond": "is_ident_start(ch)",
          "norm": null,
          "value": "true",
          "line": 322,
          "bound": null
        },
        {
          "cond": "(i, ch) in chars",
          "norm": null,
          "value": "true",
          "line": 327,
          "bound": null
        },
        {
          "cond": "is_ident_continue(ch)",
          "norm": null,
          "value": "true",
          "line": 328,
          "bound": null
        },
        {
          "cond": "(i, ch) in chars",
          "norm": null,
          "value": "false",
          "line": 327,
          "bound": null
        }
      ],
      "ret": "Ok((input.advance(end), &input.rest[..end]))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        16,
        18,
        19,
        11,
        12,
        13,
        15,
        17,
        21,
        22,
        23,
        24
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "chars.next() matches Some((_, ch))",
          "norm": null,
          "value": "true",
          "line": 321,
          "bound": null
        },
        {
          "cond": "chars.next() matches Some((_, ch))",
          "norm": null,
          "value": "true",
          "line": 321,
          "bound": null
        },
        {
          "cond": "is_ident_start(ch)",
          "norm": null,
          "value": "true",
          "line": 322,
          "bound": null
        },
        {
          "cond": "(i, ch) in chars",
          "norm": null,
          "value": "true",
          "line": 327,
          "bound": null
        },
        {
          "cond": "is_ident_continue(ch)",
          "norm": null,
          "value": "false",
          "line": 328,
          "bound": null
        }
      ],
      "ret": "Ok((input.advance(end), &input.rest[..end]))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        16,
        18,
        20,
        21,
        22,
        23,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "chars.next() matches Some((_, ch))",
          "norm": null,
          "value": "true",
          "line": 321,
          "bound": null
        },
        {
          "cond": "chars.next() matches Some((_, ch))",
          "norm": null,
          "value": "true",
          "line": 321,
          "bound": null
        },
        {
          "cond": "is_ident_start(ch)",
          "norm": null,
          "value": "true",
          "line": 322,
          "bound": null
        },
        {
          "cond": "(i, ch) in chars",
          "norm": null,
          "value": "false",
          "line": 327,
          "bound": null
        }
      ],
      "ret": "Ok((input.advance(end), &input.rest[..end]))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        15,
        17,
        21,
        22,
        23,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "chars.next() matches Some((_, ch))",
          "norm": null,
          "value": "true",
          "line": 321,
          "bound": null
        },
        {
          "cond": "chars.next() matches Some((_, ch))",
          "norm": null,
          "value": "true",
          "line": 321,
          "bound": null
        },
        {
          "cond": "is_ident_start(ch)",
          "norm": null,
          "value": "false",
          "line": 322,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        8,
        3,
        24
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}