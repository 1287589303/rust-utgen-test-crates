{
  "name": "proc_macro2::parse::punct_char",
  "mod_info": {
    "name": "parse",
    "loc": "src/lib.rs:142:1:142:11"
  },
  "visible": false,
  "loc": "src/parse.rs:888:1:907:2",
  "doc": "",
  "code": [
    "fn punct_char(input: Cursor) -> PResult<char> {",
    "    if input.starts_with(\"//\") || input.starts_with(\"/*\") {",
    "        // Do not accept `/` of a comment as a punct.",
    "        return Err(Reject);",
    "    }",
    "",
    "    let mut chars = input.chars();",
    "    let first = match chars.next() {",
    "        Some(ch) => ch,",
    "        None => {",
    "            return Err(Reject);",
    "        }",
    "    };",
    "    let recognized = \"~!@#$%^&*-=+|;:,<.>/?'\";",
    "    if recognized.contains(first) {",
    "        Ok((input.advance(first.len_utf8()), first))",
    "    } else {",
    "        Err(Reject)",
    "    }",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 0,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "input.starts_with(\"//\")",
          "norm": null,
          "value": "true",
          "line": 889,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        6,
        20
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "input.starts_with(\"//\")",
          "norm": null,
          "value": "false",
          "line": 889,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "true",
          "line": 889,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        20
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "input.starts_with(\"//\")",
          "norm": null,
          "value": "false",
          "line": 889,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "false",
          "line": 889,
          "bound": null
        },
        {
          "cond": "chars.next() matches Some(ch)",
          "norm": null,
          "value": "true",
          "line": 895,
          "bound": null
        },
        {
          "cond": "chars.next() matches Some(ch)",
          "norm": null,
          "value": "true",
          "line": 895,
          "bound": null
        },
        {
          "cond": "recognized.contains(first)",
          "norm": null,
          "value": "true",
          "line": 902,
          "bound": null
        }
      ],
      "ret": "Ok((input.advance(first.len_utf8()), first))",
      "path": [
        0,
        1,
        3,
        4,
        7,
        8,
        9,
        11,
        13,
        14,
        15,
        16,
        17,
        19,
        20
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "input.starts_with(\"//\")",
          "norm": null,
          "value": "false",
          "line": 889,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "false",
          "line": 889,
          "bound": null
        },
        {
          "cond": "chars.next() matches Some(ch)",
          "norm": null,
          "value": "true",
          "line": 895,
          "bound": null
        },
        {
          "cond": "chars.next() matches Some(ch)",
          "norm": null,
          "value": "true",
          "line": 895,
          "bound": null
        },
        {
          "cond": "recognized.contains(first)",
          "norm": null,
          "value": "false",
          "line": 902,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        3,
        4,
        7,
        8,
        9,
        11,
        13,
        14,
        18,
        19,
        20
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "input.starts_with(\"//\")",
          "norm": null,
          "value": "false",
          "line": 889,
          "bound": null
        },
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "false",
          "line": 889,
          "bound": null
        },
        {
          "cond": "chars.next() matches None",
          "norm": null,
          "value": "true",
          "line": 895,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        3,
        4,
        7,
        8,
        9,
        12,
        20
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}