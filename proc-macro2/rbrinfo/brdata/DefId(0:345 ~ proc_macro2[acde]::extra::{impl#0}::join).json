{
  "name": "proc_macro2::extra::{impl#0}::join",
  "mod_info": {
    "name": "extra",
    "loc": "src/lib.rs:153:1:153:15"
  },
  "visible": true,
  "loc": "src/extra.rs:120:5:126:6",
  "doc": "/// Returns a span covering the entire delimited group.\n",
  "code": [
    "pub fn join(&self) -> Span {",
    "    match &self.inner {",
    "        #[cfg(wrap_proc_macro)]",
    "        DelimSpanEnum::Compiler { join, .. } => Span::_new(imp::Span::Compiler(*join)),",
    "        DelimSpanEnum::Fallback(span) => Span::_new_fallback(*span),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "&self.inner matches DelimSpanEnum::Fallback(span)",
          "norm": null,
          "value": "true",
          "line": 121,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "&self.inner matches DelimSpanEnum::Compiler { join, .. }",
          "norm": null,
          "value": "true",
          "line": 121,
          "bound": null
        },
        {
          "cond": "&self.inner matches DelimSpanEnum::Compiler { join, .. }",
          "norm": null,
          "value": "true",
          "line": 121,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        5,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}