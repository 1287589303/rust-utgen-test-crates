{
  "name": "proc_macro2::parse::block_comment",
  "mod_info": {
    "name": "parse",
    "loc": "src/lib.rs:142:1:142:11"
  },
  "visible": false,
  "loc": "src/parse.rs:125:1:150:2",
  "doc": "",
  "code": [
    "fn block_comment(input: Cursor) -> PResult<&str> {",
    "    if !input.starts_with(\"/*\") {",
    "        return Err(Reject);",
    "    }",
    "",
    "    let mut depth = 0usize;",
    "    let bytes = input.as_bytes();",
    "    let mut i = 0usize;",
    "    let upper = bytes.len() - 1;",
    "",
    "    while i < upper {",
    "        if bytes[i] == b'/' && bytes[i + 1] == b'*' {",
    "            depth += 1;",
    "            i += 1; // eat '*'",
    "        } else if bytes[i] == b'*' && bytes[i + 1] == b'/' {",
    "            depth -= 1;",
    "            if depth == 0 {",
    "                return Ok((input.advance(i + 2), &input.rest[..i + 2]));",
    "            }",
    "            i += 1; // eat '/'",
    "        }",
    "        i += 1;",
    "    }",
    "",
    "    Err(Reject)",
    "}"
  ],
  "size": {
    "chain": 11,
    "contra": 7,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'/'",
          "norm": "b'/' == bytes[i]",
          "value": "false",
          "line": 136,
          "bound": null
        },
        {
          "cond": "bytes[i + 1] == b'*'",
          "norm": "b'*' == bytes[i + 1]",
          "value": "false",
          "line": 136,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": "i == upper"
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        37,
        38,
        7,
        8,
        39,
        40
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'/'",
          "norm": "b'/' == bytes[i]",
          "value": "false",
          "line": 136,
          "bound": null
        },
        {
          "cond": "bytes[i + 1] == b'*'",
          "norm": "b'*' == bytes[i + 1]",
          "value": "true",
          "line": 136,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'*'",
          "norm": "b'*' == bytes[i]",
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "bytes[i + 1] == b'/'",
          "norm": "b'/' == bytes[i + 1]",
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "depth == 0",
          "norm": "0 == depth",
          "value": "false",
          "line": 141,
          "bound": null
        }
      ],
      "ret": "Ok((input.advance(i + 2), &input.rest[..i + 2]))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        17,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'/'",
          "norm": "b'/' == bytes[i]",
          "value": "false",
          "line": 136,
          "bound": null
        },
        {
          "cond": "bytes[i + 1] == b'*'",
          "norm": "b'*' == bytes[i + 1]",
          "value": "true",
          "line": 136,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'*'",
          "norm": "b'*' == bytes[i]",
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "bytes[i + 1] == b'/'",
          "norm": "b'/' == bytes[i + 1]",
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "depth == 0",
          "norm": "0 == depth",
          "value": "true",
          "line": 141,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": "i == upper"
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        17,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        31,
        32,
        36,
        37,
        38,
        7,
        8,
        39,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'/'",
          "norm": "b'/' == bytes[i]",
          "value": "false",
          "line": 136,
          "bound": null
        },
        {
          "cond": "bytes[i + 1] == b'*'",
          "norm": "b'*' == bytes[i + 1]",
          "value": "true",
          "line": 136,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'*'",
          "norm": "b'*' == bytes[i]",
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "bytes[i + 1] == b'/'",
          "norm": "b'/' == bytes[i + 1]",
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": "i == upper"
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        17,
        19,
        20,
        21,
        22,
        23,
        33,
        35,
        36,
        37,
        38,
        7,
        8,
        39,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'/'",
          "norm": "b'/' == bytes[i]",
          "value": "false",
          "line": 136,
          "bound": null
        },
        {
          "cond": "bytes[i + 1] == b'*'",
          "norm": "b'*' == bytes[i + 1]",
          "value": "true",
          "line": 136,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'*'",
          "norm": "b'*' == bytes[i]",
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": "i == upper"
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        17,
        19,
        20,
        34,
        35,
        36,
        37,
        38,
        7,
        8,
        39,
        40
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'/'",
          "norm": "b'/' == bytes[i]",
          "value": "true",
          "line": 136,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'*'",
          "norm": "b'*' == bytes[i]",
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "bytes[i + 1] == b'/'",
          "norm": "b'/' == bytes[i + 1]",
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "depth == 0",
          "norm": "0 == depth",
          "value": "false",
          "line": 141,
          "bound": null
        }
      ],
      "ret": "Ok((input.advance(i + 2), &input.rest[..i + 2]))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'/'",
          "norm": "b'/' == bytes[i]",
          "value": "true",
          "line": 136,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'*'",
          "norm": "b'*' == bytes[i]",
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "bytes[i + 1] == b'/'",
          "norm": "b'/' == bytes[i + 1]",
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "depth == 0",
          "norm": "0 == depth",
          "value": "true",
          "line": 141,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": "i == upper"
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        31,
        32,
        36,
        37,
        38,
        7,
        8,
        39,
        40
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'/'",
          "norm": "b'/' == bytes[i]",
          "value": "true",
          "line": 136,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'*'",
          "norm": "b'*' == bytes[i]",
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "bytes[i + 1] == b'/'",
          "norm": "b'/' == bytes[i + 1]",
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": "i == upper"
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        18,
        19,
        20,
        21,
        22,
        23,
        33,
        35,
        36,
        37,
        38,
        7,
        8,
        39,
        40
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'/'",
          "norm": "b'/' == bytes[i]",
          "value": "true",
          "line": 136,
          "bound": null
        },
        {
          "cond": "bytes[i] == b'*'",
          "norm": "b'*' == bytes[i]",
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": "i == upper"
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        18,
        19,
        20,
        34,
        35,
        36,
        37,
        38,
        7,
        8,
        39,
        40
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "i < upper",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": "i == upper"
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        39,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "input.starts_with(\"/*\")",
          "norm": null,
          "value": "false",
          "line": 126,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        3,
        40
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}