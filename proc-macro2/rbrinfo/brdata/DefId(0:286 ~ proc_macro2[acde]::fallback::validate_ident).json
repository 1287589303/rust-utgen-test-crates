{
  "name": "proc_macro2::fallback::validate_ident",
  "mod_info": {
    "name": "fallback",
    "loc": "src/lib.rs:151:1:151:18"
  },
  "visible": false,
  "loc": "src/fallback.rs:848:1:874:2",
  "doc": "",
  "code": [
    "fn validate_ident(string: &str) {",
    "    if string.is_empty() {",
    "        panic!(\"Ident is not allowed to be empty; use Option<Ident>\");",
    "    }",
    "",
    "    if string.bytes().all(|digit| b'0' <= digit && digit <= b'9') {",
    "        panic!(\"Ident cannot be a number; use Literal instead\");",
    "    }",
    "",
    "    fn ident_ok(string: &str) -> bool {",
    "        let mut chars = string.chars();",
    "        let first = chars.next().unwrap();",
    "        if !is_ident_start(first) {",
    "            return false;",
    "        }",
    "        for ch in chars {",
    "            if !is_ident_continue(ch) {",
    "                return false;",
    "            }",
    "        }",
    "        true",
    "    }",
    "",
    "    if !ident_ok(string) {",
    "        panic!(\"{:?} is not a valid Ident\", string);",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "string.is_empty()",
          "norm": null,
          "value": "true",
          "line": 849,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "string.is_empty()",
          "norm": null,
          "value": "false",
          "line": 849,
          "bound": null
        },
        {
          "cond": "string.bytes().all(|digit| b'0' <= digit && digit <= b'9')",
          "norm": null,
          "value": "true",
          "line": 853,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "string.is_empty()",
          "norm": null,
          "value": "false",
          "line": 849,
          "bound": null
        },
        {
          "cond": "string.bytes().all(|digit| b'0' <= digit && digit <= b'9')",
          "norm": null,
          "value": "false",
          "line": 853,
          "bound": null
        },
        {
          "cond": "ident_ok(string)",
          "norm": null,
          "value": "true",
          "line": 871,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        6,
        9,
        10,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "string.is_empty()",
          "norm": null,
          "value": "false",
          "line": 849,
          "bound": null
        },
        {
          "cond": "string.bytes().all(|digit| b'0' <= digit && digit <= b'9')",
          "norm": null,
          "value": "false",
          "line": 853,
          "bound": null
        },
        {
          "cond": "ident_ok(string)",
          "norm": null,
          "value": "false",
          "line": 871,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        6,
        9,
        10,
        12,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}