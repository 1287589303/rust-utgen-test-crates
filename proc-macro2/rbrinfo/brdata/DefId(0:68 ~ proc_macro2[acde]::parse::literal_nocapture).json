{
  "name": "proc_macro2::parse::literal_nocapture",
  "mod_info": {
    "name": "parse",
    "loc": "src/lib.rs:142:1:142:11"
  },
  "visible": false,
  "loc": "src/parse.rs:343:1:361:2",
  "doc": "",
  "code": [
    "fn literal_nocapture(input: Cursor) -> Result<Cursor, Reject> {",
    "    if let Ok(ok) = string(input) {",
    "        Ok(ok)",
    "    } else if let Ok(ok) = byte_string(input) {",
    "        Ok(ok)",
    "    } else if let Ok(ok) = c_string(input) {",
    "        Ok(ok)",
    "    } else if let Ok(ok) = byte(input) {",
    "        Ok(ok)",
    "    } else if let Ok(ok) = character(input) {",
    "        Ok(ok)",
    "    } else if let Ok(ok) = float(input) {",
    "        Ok(ok)",
    "    } else if let Ok(ok) = int(input) {",
    "        Ok(ok)",
    "    } else {",
    "        Err(Reject)",
    "    }",
    "}"
  ],
  "size": {
    "chain": 8,
    "contra": 0,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Ok(ok) = string(input)",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = byte_string(input)",
          "norm": null,
          "value": "true",
          "line": 346,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = c_string(input)",
          "norm": null,
          "value": "true",
          "line": 348,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = byte(input)",
          "norm": null,
          "value": "true",
          "line": 350,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = character(input)",
          "norm": null,
          "value": "true",
          "line": 352,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = float(input)",
          "norm": null,
          "value": "true",
          "line": 354,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = int(input)",
          "norm": null,
          "value": "true",
          "line": 356,
          "bound": null
        }
      ],
      "ret": "Err(Reject)",
      "path": [
        0,
        1,
        4,
        5,
        8,
        9,
        12,
        13,
        16,
        17,
        20,
        21,
        24,
        25,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Ok(ok) = string(input)",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = byte_string(input)",
          "norm": null,
          "value": "true",
          "line": 346,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = c_string(input)",
          "norm": null,
          "value": "true",
          "line": 348,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = byte(input)",
          "norm": null,
          "value": "true",
          "line": 350,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = character(input)",
          "norm": null,
          "value": "true",
          "line": 352,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = float(input)",
          "norm": null,
          "value": "true",
          "line": 354,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = int(input)",
          "norm": null,
          "value": "false",
          "line": 356,
          "bound": null
        }
      ],
      "ret": "Ok(ok)",
      "path": [
        0,
        1,
        4,
        5,
        8,
        9,
        12,
        13,
        16,
        17,
        20,
        21,
        24,
        25,
        26,
        27,
        29,
        30,
        31,
        32,
        33,
        34,
        35
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let Ok(ok) = string(input)",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = byte_string(input)",
          "norm": null,
          "value": "true",
          "line": 346,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = c_string(input)",
          "norm": null,
          "value": "true",
          "line": 348,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = byte(input)",
          "norm": null,
          "value": "true",
          "line": 350,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = character(input)",
          "norm": null,
          "value": "true",
          "line": 352,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = float(input)",
          "norm": null,
          "value": "false",
          "line": 354,
          "bound": null
        }
      ],
      "ret": "Ok(ok)",
      "path": [
        0,
        1,
        4,
        5,
        8,
        9,
        12,
        13,
        16,
        17,
        20,
        21,
        22,
        23,
        30,
        31,
        32,
        33,
        34,
        35
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "let Ok(ok) = string(input)",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = byte_string(input)",
          "norm": null,
          "value": "true",
          "line": 346,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = c_string(input)",
          "norm": null,
          "value": "true",
          "line": 348,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = byte(input)",
          "norm": null,
          "value": "true",
          "line": 350,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = character(input)",
          "norm": null,
          "value": "false",
          "line": 352,
          "bound": null
        }
      ],
      "ret": "Ok(ok)",
      "path": [
        0,
        1,
        4,
        5,
        8,
        9,
        12,
        13,
        16,
        17,
        18,
        19,
        31,
        32,
        33,
        34,
        35
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "let Ok(ok) = string(input)",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = byte_string(input)",
          "norm": null,
          "value": "true",
          "line": 346,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = c_string(input)",
          "norm": null,
          "value": "true",
          "line": 348,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = byte(input)",
          "norm": null,
          "value": "false",
          "line": 350,
          "bound": null
        }
      ],
      "ret": "Ok(ok)",
      "path": [
        0,
        1,
        4,
        5,
        8,
        9,
        12,
        13,
        14,
        15,
        32,
        33,
        34,
        35
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "let Ok(ok) = string(input)",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = byte_string(input)",
          "norm": null,
          "value": "true",
          "line": 346,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = c_string(input)",
          "norm": null,
          "value": "false",
          "line": 348,
          "bound": null
        }
      ],
      "ret": "Ok(ok)",
      "path": [
        0,
        1,
        4,
        5,
        8,
        9,
        10,
        11,
        33,
        34,
        35
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "let Ok(ok) = string(input)",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "let Ok(ok) = byte_string(input)",
          "norm": null,
          "value": "false",
          "line": 346,
          "bound": null
        }
      ],
      "ret": "Ok(ok)",
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        34,
        35
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "let Ok(ok) = string(input)",
          "norm": null,
          "value": "false",
          "line": 344,
          "bound": null
        }
      ],
      "ret": "Ok(ok)",
      "path": [
        0,
        1,
        2,
        3,
        35
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}