{
  "name": "proc_macro2::fallback::escape_utf8",
  "mod_info": {
    "name": "fallback",
    "loc": "src/lib.rs:151:1:151:18"
  },
  "visible": false,
  "loc": "src/fallback.rs:1212:1:1234:2",
  "doc": "",
  "code": [
    "fn escape_utf8(string: &str, repr: &mut String) {",
    "    let mut chars = string.chars();",
    "    while let Some(ch) = chars.next() {",
    "        if ch == '\\0' {",
    "            repr.push_str(",
    "                if chars",
    "                    .as_str()",
    "                    .starts_with(|next| '0' <= next && next <= '7')",
    "                {",
    "                    // circumvent clippy::octal_escapes lint",
    "                    r\"\\x00\"",
    "                } else {",
    "                    r\"\\0\"",
    "                },",
    "            );",
    "        } else if ch == '\\'' {",
    "            // escape_debug turns this into \"\\'\" which is unnecessary.",
    "            repr.push(ch);",
    "        } else {",
    "            repr.extend(ch.escape_debug());",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(ch) = chars.next()",
          "norm": null,
          "value": "true",
          "line": 1214,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        22
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(ch) = chars.next()",
          "norm": null,
          "value": "true",
          "line": 1214,
          "bound": null
        },
        {
          "cond": "ch == '\\0'",
          "norm": "'\\0' == ch",
          "value": "false",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "chars\n                    .as_str()\n                    .starts_with(|next| '0' <= next && next <= '7')",
          "norm": null,
          "value": "true",
          "line": 1217,
          "bound": null
        },
        {
          "cond": "let Some(ch) = chars.next()",
          "norm": null,
          "value": "true",
          "line": 1214,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        13,
        21,
        2,
        3,
        4,
        22
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let Some(ch) = chars.next()",
          "norm": null,
          "value": "true",
          "line": 1214,
          "bound": null
        },
        {
          "cond": "ch == '\\0'",
          "norm": "'\\0' == ch",
          "value": "false",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "chars\n                    .as_str()\n                    .starts_with(|next| '0' <= next && next <= '7')",
          "norm": null,
          "value": "false",
          "line": 1217,
          "bound": null
        },
        {
          "cond": "let Some(ch) = chars.next()",
          "norm": null,
          "value": "true",
          "line": 1214,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        11,
        12,
        13,
        21,
        2,
        3,
        4,
        22
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "let Some(ch) = chars.next()",
          "norm": null,
          "value": "true",
          "line": 1214,
          "bound": null
        },
        {
          "cond": "ch == '\\0'",
          "norm": "'\\0' == ch",
          "value": "true",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "ch == '\\''",
          "norm": "'\\'' == ch",
          "value": "false",
          "line": 1227,
          "bound": null
        },
        {
          "cond": "let Some(ch) = chars.next()",
          "norm": null,
          "value": "true",
          "line": 1214,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        14,
        15,
        16,
        20,
        21,
        2,
        3,
        4,
        22
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "let Some(ch) = chars.next()",
          "norm": null,
          "value": "true",
          "line": 1214,
          "bound": null
        },
        {
          "cond": "ch == '\\0'",
          "norm": "'\\0' == ch",
          "value": "true",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "ch == '\\''",
          "norm": "'\\'' == ch",
          "value": "true",
          "line": 1227,
          "bound": null
        },
        {
          "cond": "let Some(ch) = chars.next()",
          "norm": null,
          "value": "true",
          "line": 1214,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        14,
        17,
        18,
        19,
        20,
        21,
        2,
        3,
        4,
        22
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}