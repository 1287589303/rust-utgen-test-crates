{
  "name": "proc_macro2::{impl#16}::join",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1384:2"
  },
  "visible": true,
  "loc": "src/lib.rs:534:5:536:6",
  "doc": "/// Create a new span encompassing `self` and `other`.\n///\n/// Returns `None` if `self` and `other` are from different files.\n///\n/// Warning: the underlying [`proc_macro::Span::join`] method is\n/// nightly-only. When called from within a procedural macro not using a\n/// nightly compiler, this method will always return `None`.\n",
  "code": [
    "pub fn join(&self, other: Span) -> Option<Span> {",
    "    self.inner.join(other.inner).map(Span::_new)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}