{
  "name": "proc_macro2::parse::int",
  "mod_info": {
    "name": "parse",
    "loc": "src/lib.rs:142:1:142:11"
  },
  "visible": false,
  "loc": "src/parse.rs:806:1:814:2",
  "doc": "",
  "code": [
    "fn int(input: Cursor) -> Result<Cursor, Reject> {",
    "    let mut rest = digits(input)?;",
    "    if let Some(ch) = rest.chars().next() {",
    "        if is_ident_start(ch) {",
    "            rest = ident_not_raw(rest)?.0;",
    "        }",
    "    }",
    "    word_break(rest)",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "digits(input)?",
          "norm": null,
          "value": "Err/None",
          "line": 807,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        26,
        27
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "digits(input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 807,
          "bound": null
        },
        {
          "cond": "let Some(ch) = rest.chars().next()",
          "norm": null,
          "value": "true",
          "line": 808,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        23,
        24,
        25,
        27
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "digits(input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 807,
          "bound": null
        },
        {
          "cond": "let Some(ch) = rest.chars().next()",
          "norm": null,
          "value": "true",
          "line": 808,
          "bound": null
        },
        {
          "cond": "is_ident_start(ch)",
          "norm": null,
          "value": "true",
          "line": 809,
          "bound": null
        },
        {
          "cond": "ident_not_raw(rest)?",
          "norm": null,
          "value": "Err/None",
          "line": 810,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        20,
        26,
        27
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "digits(input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 807,
          "bound": null
        },
        {
          "cond": "let Some(ch) = rest.chars().next()",
          "norm": null,
          "value": "true",
          "line": 808,
          "bound": null
        },
        {
          "cond": "is_ident_start(ch)",
          "norm": null,
          "value": "true",
          "line": 809,
          "bound": null
        },
        {
          "cond": "ident_not_raw(rest)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 810,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        22,
        24,
        25,
        27
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "digits(input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 807,
          "bound": null
        },
        {
          "cond": "let Some(ch) = rest.chars().next()",
          "norm": null,
          "value": "true",
          "line": 808,
          "bound": null
        },
        {
          "cond": "is_ident_start(ch)",
          "norm": null,
          "value": "false",
          "line": 809,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        21,
        22,
        24,
        25,
        27
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}