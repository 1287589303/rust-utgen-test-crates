{
  "name": "proc_macro2::{impl#16}::source_text",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1384:2"
  },
  "visible": true,
  "loc": "src/lib.rs:554:5:556:6",
  "doc": "/// Returns the source text behind a span. This preserves the original\n/// source code, including spaces and comments. It only returns a result if\n/// the span corresponds to real source code.\n///\n/// Note: The observable result of a macro should only rely on the tokens\n/// and not on this source text. The result of this function is a best\n/// effort to be used for diagnostics only.\n",
  "code": [
    "pub fn source_text(&self) -> Option<String> {",
    "    self.inner.source_text()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}