{
  "name": "proc_macro2::rcvec::{impl#0}::get_mut",
  "mod_info": {
    "name": "rcvec",
    "loc": "src/lib.rs:143:1:143:11"
  },
  "visible": true,
  "loc": "src/rcvec.rs:46:5:49:6",
  "doc": "",
  "code": [
    "pub(crate) fn get_mut(&mut self) -> Option<RcVecMut<T>> {",
    "    let inner = Rc::get_mut(&mut self.inner)?;",
    "    Some(RcVecMut { inner })",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "Rc::get_mut(&mut self.inner)?",
          "norm": null,
          "value": "Err/None",
          "line": 47,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "Rc::get_mut(&mut self.inner)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 47,
          "bound": null
        }
      ],
      "ret": "Some(RcVecMut { inner })",
      "path": [
        0,
        1,
        2,
        5,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}