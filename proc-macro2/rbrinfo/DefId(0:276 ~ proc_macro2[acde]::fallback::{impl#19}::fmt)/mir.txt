bb0
  0: StorageLive(_3)
    SourceInfo(src/fallback.rs:786:13-786:22)
  1: StorageLive(_4)
    SourceInfo(src/fallback.rs:786:25-786:28)
  2: _4 = &mut (*_2)
    SourceInfo(src/fallback.rs:786:25-786:28)
  3: StorageLive(_5)
    SourceInfo(src/fallback.rs:786:42-786:49)
  4: StorageLive(_6)
    SourceInfo(src/fallback.rs:786:42-786:49)
  5: _6 = const "Group"
    SourceInfo(src/fallback.rs:786:42-786:49)
  6: _5 = &(*_6)
    SourceInfo(src/fallback.rs:786:42-786:49)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:786:25-786:50)
      kind: _3 = std::fmt::Formatter::<'_>::debug_struct(move _4, move _5) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_5)
    SourceInfo(src/fallback.rs:786:49-786:50)
  1: StorageDead(_4)
    SourceInfo(src/fallback.rs:786:49-786:50)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(src/fallback.rs:786:13-786:22)
  3: StorageDead(_6)
    SourceInfo(src/fallback.rs:786:50-786:51)
  4: StorageLive(_7)
    SourceInfo(src/fallback.rs:787:9-787:50)
  5: StorageLive(_8)
    SourceInfo(src/fallback.rs:787:9-787:14)
  6: _8 = &mut _3
    SourceInfo(src/fallback.rs:787:9-787:14)
  7: StorageLive(_9)
    SourceInfo(src/fallback.rs:787:21-787:32)
  8: StorageLive(_10)
    SourceInfo(src/fallback.rs:787:21-787:32)
  9: _10 = const "delimiter"
    SourceInfo(src/fallback.rs:787:21-787:32)
  10: _9 = &(*_10)
    SourceInfo(src/fallback.rs:787:21-787:32)
  11: StorageLive(_11)
    SourceInfo(src/fallback.rs:787:34-787:49)
  12: StorageLive(_12)
    SourceInfo(src/fallback.rs:787:34-787:49)
  13: StorageLive(_13)
    SourceInfo(src/fallback.rs:787:34-787:49)
  14: _13 = &((*_1).0: Delimiter)
    SourceInfo(src/fallback.rs:787:34-787:49)
  15: _12 = &(*_13)
    SourceInfo(src/fallback.rs:787:34-787:49)
  16: _11 = move _12 as &dyn std::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(src/fallback.rs:787:34-787:49)
  17: StorageDead(_12)
    SourceInfo(src/fallback.rs:787:48-787:49)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:787:9-787:50)
      kind: _7 = std::fmt::DebugStruct::<'_, '_>::field(move _8, move _9, move _11) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_11)
    SourceInfo(src/fallback.rs:787:49-787:50)
  1: StorageDead(_9)
    SourceInfo(src/fallback.rs:787:49-787:50)
  2: StorageDead(_8)
    SourceInfo(src/fallback.rs:787:49-787:50)
  3: StorageDead(_13)
    SourceInfo(src/fallback.rs:787:50-787:51)
  4: StorageDead(_10)
    SourceInfo(src/fallback.rs:787:50-787:51)
  5: StorageDead(_7)
    SourceInfo(src/fallback.rs:787:50-787:51)
  6: StorageLive(_14)
    SourceInfo(src/fallback.rs:788:9-788:44)
  7: StorageLive(_15)
    SourceInfo(src/fallback.rs:788:9-788:14)
  8: _15 = &mut _3
    SourceInfo(src/fallback.rs:788:9-788:14)
  9: StorageLive(_16)
    SourceInfo(src/fallback.rs:788:21-788:29)
  10: StorageLive(_17)
    SourceInfo(src/fallback.rs:788:21-788:29)
  11: _17 = const "stream"
    SourceInfo(src/fallback.rs:788:21-788:29)
  12: _16 = &(*_17)
    SourceInfo(src/fallback.rs:788:21-788:29)
  13: StorageLive(_18)
    SourceInfo(src/fallback.rs:788:31-788:43)
  14: StorageLive(_19)
    SourceInfo(src/fallback.rs:788:31-788:43)
  15: StorageLive(_20)
    SourceInfo(src/fallback.rs:788:31-788:43)
  16: _20 = &((*_1).1: fallback::TokenStream)
    SourceInfo(src/fallback.rs:788:31-788:43)
  17: _19 = &(*_20)
    SourceInfo(src/fallback.rs:788:31-788:43)
  18: _18 = move _19 as &dyn std::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(src/fallback.rs:788:31-788:43)
  19: StorageDead(_19)
    SourceInfo(src/fallback.rs:788:42-788:43)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:788:9-788:44)
      kind: _14 = std::fmt::DebugStruct::<'_, '_>::field(move _15, move _16, move _18) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_18)
    SourceInfo(src/fallback.rs:788:43-788:44)
  1: StorageDead(_16)
    SourceInfo(src/fallback.rs:788:43-788:44)
  2: StorageDead(_15)
    SourceInfo(src/fallback.rs:788:43-788:44)
  3: StorageDead(_20)
    SourceInfo(src/fallback.rs:788:44-788:45)
  4: StorageDead(_17)
    SourceInfo(src/fallback.rs:788:44-788:45)
  5: StorageDead(_14)
    SourceInfo(src/fallback.rs:788:44-788:45)
  6: StorageLive(_21)
    SourceInfo(src/fallback.rs:789:9-789:62)
  7: StorageLive(_22)
    SourceInfo(src/fallback.rs:789:40-789:50)
  8: StorageLive(_23)
    SourceInfo(src/fallback.rs:789:40-789:50)
  9: _23 = &mut _3
    SourceInfo(src/fallback.rs:789:40-789:50)
  10: _22 = &mut (*_23)
    SourceInfo(src/fallback.rs:789:40-789:50)
  11: StorageLive(_24)
    SourceInfo(src/fallback.rs:789:52-789:61)
  12: _24 = ((*_1).2: fallback::Span)
    SourceInfo(src/fallback.rs:789:52-789:61)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:789:9-789:62)
      kind: _21 = fallback::debug_span_field_if_nontrivial(move _22, move _24) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_24)
    SourceInfo(src/fallback.rs:789:61-789:62)
  1: StorageDead(_22)
    SourceInfo(src/fallback.rs:789:61-789:62)
  2: StorageDead(_23)
    SourceInfo(src/fallback.rs:789:62-789:63)
  3: StorageDead(_21)
    SourceInfo(src/fallback.rs:789:62-789:63)
  4: StorageLive(_25)
    SourceInfo(src/fallback.rs:790:9-790:14)
  5: _25 = &mut _3
    SourceInfo(src/fallback.rs:790:9-790:14)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:790:9-790:23)
      kind: _0 = std::fmt::DebugStruct::<'_, '_>::finish(move _25) -> [return: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_25)
    SourceInfo(src/fallback.rs:790:22-790:23)
  1: StorageDead(_3)
    SourceInfo(src/fallback.rs:791:5-791:6)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:791:6-791:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/fallback.rs:785:5-791:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

