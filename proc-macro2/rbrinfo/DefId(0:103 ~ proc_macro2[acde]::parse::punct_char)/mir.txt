bb0
  0: StorageLive(_2)
    SourceInfo(src/parse.rs:889:5-892:6)
  1: StorageLive(_3)
    SourceInfo(src/parse.rs:889:8-889:31)
  2: StorageLive(_4)
    SourceInfo(src/parse.rs:889:8-889:13)
  3: _4 = &_1
    SourceInfo(src/parse.rs:889:8-889:13)
  4: StorageLive(_5)
    SourceInfo(src/parse.rs:889:26-889:30)
  5: StorageLive(_6)
    SourceInfo(src/parse.rs:889:26-889:30)
  6: _6 = const "//"
    SourceInfo(src/parse.rs:889:26-889:30)
  7: _5 = &(*_6)
    SourceInfo(src/parse.rs:889:26-889:30)
  Terminator {
      source_info: SourceInfo(src/parse.rs:889:8-889:31)
      kind: _3 = parse::Cursor::<'_>::starts_with(move _4, move _5) -> [return: bb1, unwind: bb21]
  }
  preds []
  succs [bb1, bb21]

bb1
  Terminator {
      source_info: SourceInfo(src/parse.rs:889:8-889:31)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(src/parse.rs:889:30-889:31)
  1: StorageDead(_5)
    SourceInfo(src/parse.rs:889:30-889:31)
  2: StorageDead(_4)
    SourceInfo(src/parse.rs:889:30-889:31)
  Terminator {
      source_info: SourceInfo(src/parse.rs:889:59-892:6)
      kind: goto -> bb6
  }
  preds [bb1]
  succs [bb6]

bb3
  0: StorageDead(_6)
    SourceInfo(src/parse.rs:889:30-889:31)
  1: StorageDead(_5)
    SourceInfo(src/parse.rs:889:30-889:31)
  2: StorageDead(_4)
    SourceInfo(src/parse.rs:889:30-889:31)
  3: StorageLive(_7)
    SourceInfo(src/parse.rs:889:35-889:58)
  4: StorageLive(_8)
    SourceInfo(src/parse.rs:889:35-889:40)
  5: _8 = &_1
    SourceInfo(src/parse.rs:889:35-889:40)
  6: StorageLive(_9)
    SourceInfo(src/parse.rs:889:53-889:57)
  7: StorageLive(_10)
    SourceInfo(src/parse.rs:889:53-889:57)
  8: _10 = const "/*"
    SourceInfo(src/parse.rs:889:53-889:57)
  9: _9 = &(*_10)
    SourceInfo(src/parse.rs:889:53-889:57)
  Terminator {
      source_info: SourceInfo(src/parse.rs:889:35-889:58)
      kind: _7 = parse::Cursor::<'_>::starts_with(move _8, move _9) -> [return: bb4, unwind: bb21]
  }
  preds [bb1]
  succs [bb4, bb21]

bb4
  Terminator {
      source_info: SourceInfo(src/parse.rs:889:35-889:58)
      kind: switchInt(move _7) -> [0: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_10)
    SourceInfo(src/parse.rs:889:57-889:58)
  1: StorageDead(_9)
    SourceInfo(src/parse.rs:889:57-889:58)
  2: StorageDead(_8)
    SourceInfo(src/parse.rs:889:57-889:58)
  Terminator {
      source_info: SourceInfo(src/parse.rs:889:59-892:6)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  0: StorageLive(_12)
    SourceInfo(src/parse.rs:891:20-891:26)
  1: _12 = parse::Reject
    SourceInfo(src/parse.rs:891:20-891:26)
  2: _0 = std::result::Result::<(parse::Cursor<'_>, char), parse::Reject>::Err(move _12)
    SourceInfo(src/parse.rs:891:16-891:27)
  3: StorageDead(_12)
    SourceInfo(src/parse.rs:891:26-891:27)
  4: StorageDead(_7)
    SourceInfo(src/parse.rs:892:5-892:6)
  5: StorageDead(_3)
    SourceInfo(src/parse.rs:892:5-892:6)
  6: StorageDead(_2)
    SourceInfo(src/parse.rs:892:5-892:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb20
  }
  preds [bb2, bb5]
  succs [bb20]

bb7
  0: StorageDead(_10)
    SourceInfo(src/parse.rs:889:57-889:58)
  1: StorageDead(_9)
    SourceInfo(src/parse.rs:889:57-889:58)
  2: StorageDead(_8)
    SourceInfo(src/parse.rs:889:57-889:58)
  3: _2 = const ()
    SourceInfo(src/parse.rs:892:6-892:6)
  4: StorageDead(_7)
    SourceInfo(src/parse.rs:892:5-892:6)
  5: StorageDead(_3)
    SourceInfo(src/parse.rs:892:5-892:6)
  6: StorageDead(_2)
    SourceInfo(src/parse.rs:892:5-892:6)
  7: StorageLive(_13)
    SourceInfo(src/parse.rs:894:9-894:18)
  8: StorageLive(_14)
    SourceInfo(src/parse.rs:894:21-894:26)
  9: _14 = &_1
    SourceInfo(src/parse.rs:894:21-894:26)
  Terminator {
      source_info: SourceInfo(src/parse.rs:894:21-894:34)
      kind: _13 = parse::Cursor::<'_>::chars(move _14) -> [return: bb8, unwind: bb21]
  }
  preds [bb4]
  succs [bb8, bb21]

bb8
  0: StorageDead(_14)
    SourceInfo(src/parse.rs:894:33-894:34)
  1: FakeRead(ForLet(None), _13)
    SourceInfo(src/parse.rs:894:9-894:18)
  2: StorageLive(_15)
    SourceInfo(src/parse.rs:895:9-895:14)
  3: StorageLive(_16)
    SourceInfo(src/parse.rs:895:23-895:35)
  4: StorageLive(_17)
    SourceInfo(src/parse.rs:895:23-895:28)
  5: _17 = &mut _13
    SourceInfo(src/parse.rs:895:23-895:28)
  Terminator {
      source_info: SourceInfo(src/parse.rs:895:23-895:35)
      kind: _16 = <std::str::Chars<'_> as std::iter::Iterator>::next(move _17) -> [return: bb9, unwind: bb21]
  }
  preds [bb7]
  succs [bb9, bb21]

bb9
  0: StorageDead(_17)
    SourceInfo(src/parse.rs:895:34-895:35)
  1: PlaceMention(_16)
    SourceInfo(src/parse.rs:895:23-895:35)
  2: _18 = discriminant(_16)
    SourceInfo(src/parse.rs:895:23-895:35)
  Terminator {
      source_info: SourceInfo(src/parse.rs:895:17-895:35)
      kind: switchInt(move _18) -> [0: bb12, 1: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(src/parse.rs:895:23-895:35)
  Terminator {
      source_info: SourceInfo(src/parse.rs:895:23-895:35)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(src/parse.rs:896:9-896:17)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_21)
    SourceInfo(src/parse.rs:898:24-898:30)
  1: _21 = parse::Reject
    SourceInfo(src/parse.rs:898:24-898:30)
  2: _0 = std::result::Result::<(parse::Cursor<'_>, char), parse::Reject>::Err(move _21)
    SourceInfo(src/parse.rs:898:20-898:31)
  3: StorageDead(_21)
    SourceInfo(src/parse.rs:898:30-898:31)
  4: StorageDead(_16)
    SourceInfo(src/parse.rs:900:6-900:7)
  5: StorageDead(_15)
    SourceInfo(src/parse.rs:907:1-907:2)
  6: StorageDead(_13)
    SourceInfo(src/parse.rs:907:1-907:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb20
  }
  preds [bb9, bb11]
  succs [bb20]

bb13
  0: StorageLive(_19)
    SourceInfo(src/parse.rs:896:14-896:16)
  1: _19 = ((_16 as Some).0: char)
    SourceInfo(src/parse.rs:896:14-896:16)
  2: _15 = _19
    SourceInfo(src/parse.rs:896:21-896:23)
  3: StorageDead(_19)
    SourceInfo(src/parse.rs:896:22-896:23)
  4: FakeRead(ForLet(None), _15)
    SourceInfo(src/parse.rs:895:9-895:14)
  5: StorageDead(_16)
    SourceInfo(src/parse.rs:900:6-900:7)
  6: StorageLive(_22)
    SourceInfo(src/parse.rs:901:9-901:19)
  7: _22 = const "~!@#$%^&*-=+|;:,<.>/?'"
    SourceInfo(src/parse.rs:901:22-901:46)
  8: FakeRead(ForLet(None), _22)
    SourceInfo(src/parse.rs:901:9-901:19)
  9: StorageLive(_23)
    SourceInfo(src/parse.rs:902:8-902:34)
  10: StorageLive(_24)
    SourceInfo(src/parse.rs:902:8-902:18)
  11: _24 = &(*_22)
    SourceInfo(src/parse.rs:902:8-902:18)
  12: StorageLive(_25)
    SourceInfo(src/parse.rs:902:28-902:33)
  13: _25 = _15
    SourceInfo(src/parse.rs:902:28-902:33)
  Terminator {
      source_info: SourceInfo(src/parse.rs:902:8-902:34)
      kind: _23 = core::str::<impl str>::contains::<'_, char>(move _24, move _25) -> [return: bb14, unwind: bb21]
  }
  preds [bb11]
  succs [bb14, bb21]

bb14
  Terminator {
      source_info: SourceInfo(src/parse.rs:902:8-902:34)
      kind: switchInt(move _23) -> [0: bb18, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb18]

bb15
  0: StorageDead(_25)
    SourceInfo(src/parse.rs:902:33-902:34)
  1: StorageDead(_24)
    SourceInfo(src/parse.rs:902:33-902:34)
  2: StorageLive(_26)
    SourceInfo(src/parse.rs:903:12-903:52)
  3: StorageLive(_27)
    SourceInfo(src/parse.rs:903:13-903:44)
  4: StorageLive(_28)
    SourceInfo(src/parse.rs:903:13-903:18)
  5: _28 = &_1
    SourceInfo(src/parse.rs:903:13-903:18)
  6: StorageLive(_29)
    SourceInfo(src/parse.rs:903:27-903:43)
  7: StorageLive(_30)
    SourceInfo(src/parse.rs:903:27-903:32)
  8: _30 = _15
    SourceInfo(src/parse.rs:903:27-903:32)
  Terminator {
      source_info: SourceInfo(src/parse.rs:903:27-903:43)
      kind: _29 = std::char::methods::<impl char>::len_utf8(move _30) -> [return: bb16, unwind: bb21]
  }
  preds [bb14]
  succs [bb16, bb21]

bb16
  0: StorageDead(_30)
    SourceInfo(src/parse.rs:903:42-903:43)
  Terminator {
      source_info: SourceInfo(src/parse.rs:903:13-903:44)
      kind: _27 = parse::Cursor::<'_>::advance(move _28, move _29) -> [return: bb17, unwind: bb21]
  }
  preds [bb15]
  succs [bb17, bb21]

bb17
  0: StorageDead(_29)
    SourceInfo(src/parse.rs:903:43-903:44)
  1: StorageDead(_28)
    SourceInfo(src/parse.rs:903:43-903:44)
  2: StorageLive(_31)
    SourceInfo(src/parse.rs:903:46-903:51)
  3: _31 = _15
    SourceInfo(src/parse.rs:903:46-903:51)
  4: _26 = (move _27, move _31)
    SourceInfo(src/parse.rs:903:12-903:52)
  5: StorageDead(_31)
    SourceInfo(src/parse.rs:903:51-903:52)
  6: StorageDead(_27)
    SourceInfo(src/parse.rs:903:51-903:52)
  7: _0 = std::result::Result::<(parse::Cursor<'_>, char), parse::Reject>::Ok(move _26)
    SourceInfo(src/parse.rs:903:9-903:53)
  8: StorageDead(_26)
    SourceInfo(src/parse.rs:903:52-903:53)
  Terminator {
      source_info: SourceInfo(src/parse.rs:902:5-906:6)
      kind: goto -> bb19
  }
  preds [bb16]
  succs [bb19]

bb18
  0: StorageDead(_25)
    SourceInfo(src/parse.rs:902:33-902:34)
  1: StorageDead(_24)
    SourceInfo(src/parse.rs:902:33-902:34)
  2: StorageLive(_32)
    SourceInfo(src/parse.rs:905:13-905:19)
  3: _32 = parse::Reject
    SourceInfo(src/parse.rs:905:13-905:19)
  4: _0 = std::result::Result::<(parse::Cursor<'_>, char), parse::Reject>::Err(move _32)
    SourceInfo(src/parse.rs:905:9-905:20)
  5: StorageDead(_32)
    SourceInfo(src/parse.rs:905:19-905:20)
  Terminator {
      source_info: SourceInfo(src/parse.rs:902:5-906:6)
      kind: goto -> bb19
  }
  preds [bb14]
  succs [bb19]

bb19
  0: StorageDead(_23)
    SourceInfo(src/parse.rs:906:5-906:6)
  1: StorageDead(_22)
    SourceInfo(src/parse.rs:907:1-907:2)
  2: StorageDead(_15)
    SourceInfo(src/parse.rs:907:1-907:2)
  3: StorageDead(_13)
    SourceInfo(src/parse.rs:907:1-907:2)
  Terminator {
      source_info: SourceInfo(src/parse.rs:907:2-907:2)
      kind: goto -> bb20
  }
  preds [bb17, bb18]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(src/parse.rs:907:2-907:2)
      kind: return
  }
  preds [bb6, bb12, bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(src/parse.rs:888:1-907:2)
      kind: resume
  }
  preds [bb0, bb3, bb7, bb8, bb13, bb15, bb16]
  succs []

