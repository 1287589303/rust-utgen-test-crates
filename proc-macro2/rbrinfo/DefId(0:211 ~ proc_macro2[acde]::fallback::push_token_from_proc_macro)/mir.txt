bb0
  0: StorageLive(_3)
    SourceInfo(src/fallback.rs:102:5-113:6)
  1: PlaceMention(_2)
    SourceInfo(src/fallback.rs:102:11-102:16)
  2: _7 = discriminant(_2)
    SourceInfo(src/fallback.rs:102:11-102:16)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:102:5-102:16)
      kind: switchInt(move _7) -> [3: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageLive(_17)
    SourceInfo(src/fallback.rs:112:14-112:17)
  1: _17 = &mut _1
    SourceInfo(src/fallback.rs:112:14-112:17)
  2: StorageLive(_18)
    SourceInfo(src/fallback.rs:112:23-112:28)
  3: _18 = move _2
    SourceInfo(src/fallback.rs:112:23-112:28)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:112:14-112:29)
      kind: _3 = rcvec::RcVecMut::<'_, TokenTree>::push(move _17, move _18) -> [return: bb11, unwind: bb14]
  }
  preds [bb0, bb2, bb3, bb8, bb8]
  succs [bb11, bb14]

bb2
  0: _6 = discriminant((((_2 as Literal).0: Literal).0: imp::Literal))
    SourceInfo(src/fallback.rs:102:11-102:16)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:102:5-102:16)
      kind: switchInt(move _6) -> [1: bb3, otherwise: bb1]
  }
  preds [bb0]
  succs [bb1, bb3]

bb3
  Terminator {
      source_info: SourceInfo(src/fallback.rs:103:9-109:11)
      kind: falseEdge -> [real: bb4, imaginary: bb1]
  }
  preds [bb2]
  succs [bb1, bb4]

bb4
  0: StorageLive(_9)
    SourceInfo(src/fallback.rs:105:54-105:61)
  1: _9 = &(((((_2 as Literal).0: Literal).0: imp::Literal) as Fallback).0: fallback::Literal)
    SourceInfo(src/fallback.rs:105:54-105:61)
  2: _4 = &fake shallow _2
    SourceInfo(src/fallback.rs:102:11-102:16)
  3: _5 = &fake shallow (((_2 as Literal).0: Literal).0: imp::Literal)
    SourceInfo(src/fallback.rs:102:11-102:16)
  4: StorageLive(_10)
    SourceInfo(src/fallback.rs:109:15-109:44)
  5: StorageLive(_11)
    SourceInfo(src/fallback.rs:109:15-109:27)
  6: StorageLive(_12)
    SourceInfo(src/fallback.rs:109:15-109:44)
  7: StorageLive(_13)
    SourceInfo(src/fallback.rs:109:15-109:27)
  8: _13 = &((*_9).0: std::string::String)
    SourceInfo(src/fallback.rs:109:15-109:27)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:109:15-109:44)
      kind: _12 = <std::string::String as std::ops::Deref>::deref(move _13) -> [return: bb5, unwind: bb17]
  }
  preds [bb3]
  succs [bb5, bb17]

bb5
  0: _11 = &(*_12)
    SourceInfo(src/fallback.rs:109:15-109:27)
  1: StorageDead(_13)
    SourceInfo(src/fallback.rs:109:26-109:27)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:109:15-109:44)
      kind: _10 = core::str::<impl str>::starts_with::<'_, char>(move _11, const '-') -> [return: bb6, unwind: bb17]
  }
  preds [bb4]
  succs [bb6, bb17]

bb6
  Terminator {
      source_info: SourceInfo(src/fallback.rs:109:15-109:44)
      kind: switchInt(move _10) -> [0: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_12)
    SourceInfo(src/fallback.rs:109:43-109:44)
  1: StorageDead(_11)
    SourceInfo(src/fallback.rs:109:43-109:44)
  2: StorageDead(_10)
    SourceInfo(src/fallback.rs:109:43-109:44)
  3: FakeRead(ForMatchGuard, _4)
    SourceInfo(src/fallback.rs:109:43-109:44)
  4: FakeRead(ForMatchGuard, _5)
    SourceInfo(src/fallback.rs:109:43-109:44)
  5: FakeRead(ForGuardBinding, _9)
    SourceInfo(src/fallback.rs:109:43-109:44)
  6: StorageLive(_8)
    SourceInfo(src/fallback.rs:105:54-105:61)
  7: _8 = move (((((_2 as Literal).0: Literal).0: imp::Literal) as Fallback).0: fallback::Literal)
    SourceInfo(src/fallback.rs:105:54-105:61)
  8: StorageLive(_14)
    SourceInfo(src/fallback.rs:110:13-110:48)
  9: StorageLive(_15)
    SourceInfo(src/fallback.rs:110:35-110:38)
  10: _15 = move _1
    SourceInfo(src/fallback.rs:110:35-110:38)
  11: StorageLive(_16)
    SourceInfo(src/fallback.rs:110:40-110:47)
  12: _16 = move _8
    SourceInfo(src/fallback.rs:110:40-110:47)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:110:13-110:48)
      kind: _14 = fallback::push_token_from_proc_macro::push_negative_literal(move _15, move _16) -> [return: bb9, unwind: bb15]
  }
  preds [bb6]
  succs [bb9, bb15]

bb8
  0: StorageDead(_12)
    SourceInfo(src/fallback.rs:109:43-109:44)
  1: StorageDead(_11)
    SourceInfo(src/fallback.rs:109:43-109:44)
  2: StorageDead(_10)
    SourceInfo(src/fallback.rs:109:43-109:44)
  3: StorageDead(_9)
    SourceInfo(src/fallback.rs:111:9-111:10)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:109:15-109:44)
      kind: falseEdge -> [real: bb1, imaginary: bb1]
  }
  preds [bb6]
  succs [bb1, bb1]

bb9
  0: StorageDead(_16)
    SourceInfo(src/fallback.rs:110:47-110:48)
  1: StorageDead(_15)
    SourceInfo(src/fallback.rs:110:47-110:48)
  2: StorageDead(_14)
    SourceInfo(src/fallback.rs:110:48-110:49)
  3: _3 = const ()
    SourceInfo(src/fallback.rs:109:48-111:10)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:111:9-111:10)
      kind: drop(_8) -> [return: bb10, unwind: bb17]
  }
  preds [bb7]
  succs [bb10, bb17]

bb10
  0: StorageDead(_8)
    SourceInfo(src/fallback.rs:111:9-111:10)
  1: StorageDead(_9)
    SourceInfo(src/fallback.rs:111:9-111:10)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:111:9-111:10)
      kind: goto -> bb12
  }
  preds [bb9]
  succs [bb12]

bb11
  0: StorageDead(_18)
    SourceInfo(src/fallback.rs:112:28-112:29)
  1: StorageDead(_17)
    SourceInfo(src/fallback.rs:112:28-112:29)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:112:28-112:29)
      kind: goto -> bb12
  }
  preds [bb1]
  succs [bb12]

bb12
  0: StorageDead(_3)
    SourceInfo(src/fallback.rs:113:5-113:6)
  1: _0 = const ()
    SourceInfo(src/fallback.rs:100:79-123:2)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:123:1-123:2)
      kind: drop(_2) -> [return: bb13, unwind: bb18]
  }
  preds [bb10, bb11]
  succs [bb13, bb18]

bb13
  Terminator {
      source_info: SourceInfo(src/fallback.rs:123:2-123:2)
      kind: return
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(src/fallback.rs:112:28-112:29)
      kind: drop(_18) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb17]

bb15
  Terminator {
      source_info: SourceInfo(src/fallback.rs:110:47-110:48)
      kind: drop(_16) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(src/fallback.rs:111:9-111:10)
      kind: drop(_8) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(src/fallback.rs:123:1-123:2)
      kind: drop(_2) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb4, bb5, bb9, bb14, bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(src/fallback.rs:100:1-123:2)
      kind: resume
  }
  preds [bb12, bb17]
  succs []

