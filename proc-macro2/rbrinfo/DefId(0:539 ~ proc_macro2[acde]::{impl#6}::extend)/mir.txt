bb0
  0: StorageLive(_3)
    SourceInfo(src/lib.rs:281:9-281:35)
  1: StorageLive(_4)
    SourceInfo(src/lib.rs:281:9-281:19)
  2: _4 = &mut ((*_1).0: imp::TokenStream)
    SourceInfo(src/lib.rs:281:9-281:19)
  3: StorageLive(_5)
    SourceInfo(src/lib.rs:281:27-281:34)
  4: _5 = move _2
    SourceInfo(src/lib.rs:281:27-281:34)
  Terminator {
      source_info: SourceInfo(src/lib.rs:281:9-281:35)
      kind: _3 = <imp::TokenStream as std::iter::Extend<TokenTree>>::extend::<I>(move _4, move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(src/lib.rs:281:34-281:35)
  1: StorageDead(_4)
    SourceInfo(src/lib.rs:281:34-281:35)
  2: StorageDead(_3)
    SourceInfo(src/lib.rs:281:35-281:36)
  3: _0 = const ()
    SourceInfo(src/lib.rs:280:73-282:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:282:5-282:6)
      kind: drop(_2) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  Terminator {
      source_info: SourceInfo(src/lib.rs:282:6-282:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/lib.rs:281:34-281:35)
      kind: drop(_5) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(src/lib.rs:282:5-282:6)
      kind: drop(_2) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/lib.rs:280:5-282:6)
      kind: resume
  }
  preds [bb1, bb4]
  succs []

