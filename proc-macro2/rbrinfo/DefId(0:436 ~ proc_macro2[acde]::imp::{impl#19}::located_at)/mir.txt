bb0
  0: StorageLive(_3)
    SourceInfo(src/wrapper.rs:444:15-444:28)
  1: StorageLive(_4)
    SourceInfo(src/wrapper.rs:444:16-444:20)
  2: _4 = _1
    SourceInfo(src/wrapper.rs:444:16-444:20)
  3: StorageLive(_5)
    SourceInfo(src/wrapper.rs:444:22-444:27)
  4: _5 = _2
    SourceInfo(src/wrapper.rs:444:22-444:27)
  5: _3 = (move _4, move _5)
    SourceInfo(src/wrapper.rs:444:15-444:28)
  6: StorageDead(_5)
    SourceInfo(src/wrapper.rs:444:27-444:28)
  7: StorageDead(_4)
    SourceInfo(src/wrapper.rs:444:27-444:28)
  8: PlaceMention(_3)
    SourceInfo(src/wrapper.rs:444:15-444:28)
  9: _8 = discriminant((*(_3.0: &imp::Span)))
    SourceInfo(src/wrapper.rs:444:15-444:28)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:444:9-444:28)
      kind: switchInt(move _8) -> [0: bb2, 1: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb5]

bb1
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(src/wrapper.rs:444:15-444:28)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:444:15-444:28)
      kind: unreachable
  }
  preds [bb0, bb2, bb5]
  succs []

bb2
  0: _6 = discriminant((_3.1: imp::Span))
    SourceInfo(src/wrapper.rs:444:15-444:28)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:444:9-444:28)
      kind: switchInt(move _6) -> [0: bb3, 1: bb4, otherwise: bb1]
  }
  preds [bb0]
  succs [bb1, bb3, bb4]

bb3
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:445:13-445:51)
      kind: falseEdge -> [real: bb8, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb8]

bb4
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:447:13-447:51)
      kind: falseEdge -> [real: bb12, imaginary: bb7]
  }
  preds [bb2, bb6]
  succs [bb7, bb12]

bb5
  0: _7 = discriminant((_3.1: imp::Span))
    SourceInfo(src/wrapper.rs:444:15-444:28)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:444:9-444:28)
      kind: switchInt(move _7) -> [0: bb7, 1: bb6, otherwise: bb1]
  }
  preds [bb0, bb3]
  succs [bb1, bb6, bb7]

bb6
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:446:13-446:51)
      kind: falseEdge -> [real: bb10, imaginary: bb4]
  }
  preds [bb5]
  succs [bb4, bb10]

bb7
  0: StorageLive(_20)
    SourceInfo(src/wrapper.rs:448:55-448:72)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:448:55-448:72)
      kind: _20 = imp::mismatch(const 448_u32) -> bb14
  }
  preds [bb4, bb5]
  succs [bb14]

bb8
  0: StorageLive(_9)
    SourceInfo(src/wrapper.rs:445:29-445:30)
  1: _9 = &(((*(_3.0: &imp::Span)) as Compiler).0: proc_macro::Span)
    SourceInfo(src/wrapper.rs:445:29-445:30)
  2: StorageLive(_10)
    SourceInfo(src/wrapper.rs:445:48-445:49)
  3: _10 = (((_3.1: imp::Span) as Compiler).0: proc_macro::Span)
    SourceInfo(src/wrapper.rs:445:48-445:49)
  4: StorageLive(_11)
    SourceInfo(src/wrapper.rs:445:70-445:85)
  5: StorageLive(_12)
    SourceInfo(src/wrapper.rs:445:70-445:71)
  6: _12 = &(*_9)
    SourceInfo(src/wrapper.rs:445:70-445:71)
  7: StorageLive(_13)
    SourceInfo(src/wrapper.rs:445:83-445:84)
  8: _13 = _10
    SourceInfo(src/wrapper.rs:445:83-445:84)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:445:70-445:85)
      kind: _11 = proc_macro::Span::located_at(move _12, move _13) -> [return: bb9, unwind: bb14]
  }
  preds [bb3]
  succs [bb9, bb14]

bb9
  0: StorageDead(_13)
    SourceInfo(src/wrapper.rs:445:84-445:85)
  1: StorageDead(_12)
    SourceInfo(src/wrapper.rs:445:84-445:85)
  2: _0 = imp::Span::Compiler(move _11)
    SourceInfo(src/wrapper.rs:445:55-445:86)
  3: StorageDead(_11)
    SourceInfo(src/wrapper.rs:445:85-445:86)
  4: StorageDead(_10)
    SourceInfo(src/wrapper.rs:445:85-445:86)
  5: StorageDead(_9)
    SourceInfo(src/wrapper.rs:445:85-445:86)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:445:85-445:86)
      kind: goto -> bb13
  }
  preds [bb8]
  succs [bb13]

bb10
  0: StorageLive(_14)
    SourceInfo(src/wrapper.rs:446:29-446:30)
  1: _14 = &(((*(_3.0: &imp::Span)) as Fallback).0: fallback::Span)
    SourceInfo(src/wrapper.rs:446:29-446:30)
  2: StorageLive(_15)
    SourceInfo(src/wrapper.rs:446:48-446:49)
  3: _15 = (((_3.1: imp::Span) as Fallback).0: fallback::Span)
    SourceInfo(src/wrapper.rs:446:48-446:49)
  4: StorageLive(_16)
    SourceInfo(src/wrapper.rs:446:70-446:85)
  5: StorageLive(_17)
    SourceInfo(src/wrapper.rs:446:70-446:71)
  6: _17 = &(*_14)
    SourceInfo(src/wrapper.rs:446:70-446:71)
  7: StorageLive(_18)
    SourceInfo(src/wrapper.rs:446:83-446:84)
  8: _18 = _15
    SourceInfo(src/wrapper.rs:446:83-446:84)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:446:70-446:85)
      kind: _16 = fallback::Span::located_at(move _17, move _18) -> [return: bb11, unwind: bb14]
  }
  preds [bb6]
  succs [bb11, bb14]

bb11
  0: StorageDead(_18)
    SourceInfo(src/wrapper.rs:446:84-446:85)
  1: StorageDead(_17)
    SourceInfo(src/wrapper.rs:446:84-446:85)
  2: _0 = imp::Span::Fallback(move _16)
    SourceInfo(src/wrapper.rs:446:55-446:86)
  3: StorageDead(_16)
    SourceInfo(src/wrapper.rs:446:85-446:86)
  4: StorageDead(_15)
    SourceInfo(src/wrapper.rs:446:85-446:86)
  5: StorageDead(_14)
    SourceInfo(src/wrapper.rs:446:85-446:86)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:446:85-446:86)
      kind: goto -> bb13
  }
  preds [bb10]
  succs [bb13]

bb12
  0: StorageLive(_19)
    SourceInfo(src/wrapper.rs:447:55-447:72)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:447:55-447:72)
      kind: _19 = imp::mismatch(const 447_u32) -> bb14
  }
  preds [bb4]
  succs [bb14]

bb13
  0: StorageDead(_3)
    SourceInfo(src/wrapper.rs:450:5-450:6)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:450:6-450:6)
      kind: return
  }
  preds [bb9, bb11]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:443:5-450:6)
      kind: resume
  }
  preds [bb7, bb8, bb10, bb12]
  succs []

