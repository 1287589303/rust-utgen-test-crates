bb0
  0: StorageLive(_1)
    SourceInfo(src/detection.rs:28:9-28:18)
  Terminator {
      source_info: SourceInfo(src/detection.rs:28:21-28:47)
      kind: _1 = proc_macro::is_available() -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: FakeRead(ForLet(None), _1)
    SourceInfo(src/detection.rs:28:9-28:18)
  1: StorageLive(_2)
    SourceInfo(src/detection.rs:29:5-29:59)
  2: StorageLive(_3)
    SourceInfo(src/detection.rs:29:5-29:10)
  3: StorageLive(_4)
    SourceInfo(src/detection.rs:29:5-29:10)
  4: _4 = const {alloc1: &std::sync::atomic::AtomicUsize}
    SourceInfo(src/detection.rs:29:5-29:10)
  5: _3 = &(*_4)
    SourceInfo(src/detection.rs:29:5-29:10)
  6: StorageLive(_5)
    SourceInfo(src/detection.rs:29:17-29:39)
  7: StorageLive(_6)
    SourceInfo(src/detection.rs:29:17-29:35)
  8: StorageLive(_7)
    SourceInfo(src/detection.rs:29:17-29:26)
  9: _7 = _1
    SourceInfo(src/detection.rs:29:17-29:26)
  10: _6 = move _7 as usize (IntToInt)
    SourceInfo(src/detection.rs:29:17-29:35)
  11: StorageDead(_7)
    SourceInfo(src/detection.rs:29:34-29:35)
  12: _8 = AddWithOverflow(_6, const 1_usize)
    SourceInfo(src/detection.rs:29:17-29:39)
  Terminator {
      source_info: SourceInfo(src/detection.rs:29:17-29:39)
      kind: assert(!move (_8.1: bool), "attempt to compute `{} + {}`, which would overflow", move _6, const 1_usize) -> [success: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: _5 = move (_8.0: usize)
    SourceInfo(src/detection.rs:29:17-29:39)
  1: StorageDead(_6)
    SourceInfo(src/detection.rs:29:38-29:39)
  2: StorageLive(_9)
    SourceInfo(src/detection.rs:29:41-29:58)
  3: _9 = std::sync::atomic::Ordering::Relaxed
    SourceInfo(src/detection.rs:29:41-29:58)
  Terminator {
      source_info: SourceInfo(src/detection.rs:29:5-29:59)
      kind: _2 = std::sync::atomic::AtomicUsize::store(move _3, move _5, move _9) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_9)
    SourceInfo(src/detection.rs:29:58-29:59)
  1: StorageDead(_5)
    SourceInfo(src/detection.rs:29:58-29:59)
  2: StorageDead(_3)
    SourceInfo(src/detection.rs:29:58-29:59)
  3: StorageDead(_4)
    SourceInfo(src/detection.rs:29:59-29:60)
  4: StorageDead(_2)
    SourceInfo(src/detection.rs:29:59-29:60)
  5: _0 = const ()
    SourceInfo(src/detection.rs:27:17-30:2)
  6: StorageDead(_1)
    SourceInfo(src/detection.rs:30:1-30:2)
  Terminator {
      source_info: SourceInfo(src/detection.rs:30:2-30:2)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/detection.rs:27:1-30:2)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

