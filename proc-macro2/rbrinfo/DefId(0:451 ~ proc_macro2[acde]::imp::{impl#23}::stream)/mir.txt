bb0
  0: PlaceMention(_1)
    SourceInfo(src/wrapper.rs:613:15-613:19)
  1: _2 = discriminant((*_1))
    SourceInfo(src/wrapper.rs:613:15-613:19)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:613:9-613:19)
      kind: switchInt(move _2) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/wrapper.rs:613:15-613:19)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:613:15-613:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:614:13-614:31)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_7)
    SourceInfo(src/wrapper.rs:615:29-615:30)
  1: _7 = &(((*_1) as Fallback).0: fallback::Group)
    SourceInfo(src/wrapper.rs:615:29-615:30)
  2: StorageLive(_8)
    SourceInfo(src/wrapper.rs:615:57-615:67)
  3: StorageLive(_9)
    SourceInfo(src/wrapper.rs:615:57-615:58)
  4: _9 = &(*_7)
    SourceInfo(src/wrapper.rs:615:57-615:58)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:615:57-615:67)
      kind: _8 = fallback::Group::stream(move _9) -> [return: bb8, unwind: bb12]
  }
  preds [bb0, bb2]
  succs [bb8, bb12]

bb4
  0: StorageLive(_3)
    SourceInfo(src/wrapper.rs:614:29-614:30)
  1: _3 = &(((*_1) as Compiler).0: proc_macro::Group)
    SourceInfo(src/wrapper.rs:614:29-614:30)
  2: StorageLive(_4)
    SourceInfo(src/wrapper.rs:614:57-614:93)
  3: StorageLive(_5)
    SourceInfo(src/wrapper.rs:614:82-614:92)
  4: StorageLive(_6)
    SourceInfo(src/wrapper.rs:614:82-614:83)
  5: _6 = &(*_3)
    SourceInfo(src/wrapper.rs:614:82-614:83)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:614:82-614:92)
      kind: _5 = proc_macro::Group::stream(move _6) -> [return: bb5, unwind: bb12]
  }
  preds [bb2]
  succs [bb5, bb12]

bb5
  0: StorageDead(_6)
    SourceInfo(src/wrapper.rs:614:91-614:92)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:614:57-614:93)
      kind: _4 = imp::DeferredTokenStream::new(move _5) -> [return: bb6, unwind: bb11]
  }
  preds [bb4]
  succs [bb6, bb11]

bb6
  0: StorageDead(_5)
    SourceInfo(src/wrapper.rs:614:92-614:93)
  1: _0 = imp::TokenStream::Compiler(move _4)
    SourceInfo(src/wrapper.rs:614:35-614:94)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:614:93-614:94)
      kind: drop(_4) -> [return: bb7, unwind: bb12]
  }
  preds [bb5]
  succs [bb7, bb12]

bb7
  0: StorageDead(_4)
    SourceInfo(src/wrapper.rs:614:93-614:94)
  1: StorageDead(_3)
    SourceInfo(src/wrapper.rs:614:93-614:94)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:614:93-614:94)
      kind: goto -> bb10
  }
  preds [bb6]
  succs [bb10]

bb8
  0: StorageDead(_9)
    SourceInfo(src/wrapper.rs:615:66-615:67)
  1: _0 = imp::TokenStream::Fallback(move _8)
    SourceInfo(src/wrapper.rs:615:35-615:68)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:615:67-615:68)
      kind: drop(_8) -> [return: bb9, unwind: bb12]
  }
  preds [bb3]
  succs [bb9, bb12]

bb9
  0: StorageDead(_8)
    SourceInfo(src/wrapper.rs:615:67-615:68)
  1: StorageDead(_7)
    SourceInfo(src/wrapper.rs:615:67-615:68)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:615:67-615:68)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:617:6-617:6)
      kind: return
  }
  preds [bb7, bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:614:92-614:93)
      kind: drop(_5) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:612:5-617:6)
      kind: resume
  }
  preds [bb3, bb4, bb6, bb8, bb11]
  succs []

