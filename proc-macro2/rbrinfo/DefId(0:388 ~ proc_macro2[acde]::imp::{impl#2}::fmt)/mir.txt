bb0
  0: PlaceMention(_1)
    SourceInfo(src/wrapper.rs:124:15-124:19)
  1: _3 = discriminant((*_1))
    SourceInfo(src/wrapper.rs:124:15-124:19)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:124:9-124:19)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/wrapper.rs:124:15-124:19)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:124:15-124:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:125:13-125:39)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_11)
    SourceInfo(src/wrapper.rs:126:35-126:38)
  1: _11 = &(((*_1) as Fallback).0: fallback::TokenStream)
    SourceInfo(src/wrapper.rs:126:35-126:38)
  2: StorageLive(_12)
    SourceInfo(src/wrapper.rs:126:56-126:59)
  3: _12 = &(*_11)
    SourceInfo(src/wrapper.rs:126:56-126:59)
  4: StorageLive(_13)
    SourceInfo(src/wrapper.rs:126:61-126:62)
  5: _13 = &mut (*_2)
    SourceInfo(src/wrapper.rs:126:61-126:62)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:126:43-126:63)
      kind: _0 = <fallback::TokenStream as std::fmt::Display>::fmt(move _12, move _13) -> [return: bb9, unwind: bb13]
  }
  preds [bb0, bb2]
  succs [bb9, bb13]

bb4
  0: StorageLive(_4)
    SourceInfo(src/wrapper.rs:125:35-125:38)
  1: _4 = &(((*_1) as Compiler).0: imp::DeferredTokenStream)
    SourceInfo(src/wrapper.rs:125:35-125:38)
  2: StorageLive(_5)
    SourceInfo(src/wrapper.rs:125:56-125:88)
  3: StorageLive(_6)
    SourceInfo(src/wrapper.rs:125:56-125:88)
  4: StorageLive(_7)
    SourceInfo(src/wrapper.rs:125:57-125:88)
  5: StorageLive(_8)
    SourceInfo(src/wrapper.rs:125:57-125:68)
  6: StorageLive(_9)
    SourceInfo(src/wrapper.rs:125:57-125:60)
  7: _9 = &(*_4)
    SourceInfo(src/wrapper.rs:125:57-125:60)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:125:57-125:68)
      kind: _8 = <imp::DeferredTokenStream as std::clone::Clone>::clone(move _9) -> [return: bb5, unwind: bb13]
  }
  preds [bb2]
  succs [bb5, bb13]

bb5
  0: StorageDead(_9)
    SourceInfo(src/wrapper.rs:125:67-125:68)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:125:57-125:88)
      kind: _7 = imp::DeferredTokenStream::into_token_stream(move _8) -> [return: bb6, unwind: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  0: StorageDead(_8)
    SourceInfo(src/wrapper.rs:125:87-125:88)
  1: _6 = &_7
    SourceInfo(src/wrapper.rs:125:56-125:88)
  2: _5 = &(*_6)
    SourceInfo(src/wrapper.rs:125:56-125:88)
  3: StorageLive(_10)
    SourceInfo(src/wrapper.rs:125:90-125:91)
  4: _10 = &mut (*_2)
    SourceInfo(src/wrapper.rs:125:90-125:91)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:125:43-125:92)
      kind: _0 = <proc_macro::TokenStream as std::fmt::Display>::fmt(move _5, move _10) -> [return: bb7, unwind: bb11]
  }
  preds [bb5]
  succs [bb7, bb11]

bb7
  0: StorageDead(_10)
    SourceInfo(src/wrapper.rs:125:91-125:92)
  1: StorageDead(_5)
    SourceInfo(src/wrapper.rs:125:91-125:92)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:125:91-125:92)
      kind: drop(_7) -> [return: bb8, unwind: bb13]
  }
  preds [bb6]
  succs [bb8, bb13]

bb8
  0: StorageDead(_7)
    SourceInfo(src/wrapper.rs:125:91-125:92)
  1: StorageDead(_6)
    SourceInfo(src/wrapper.rs:125:91-125:92)
  2: StorageDead(_4)
    SourceInfo(src/wrapper.rs:125:91-125:92)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:125:91-125:92)
      kind: goto -> bb10
  }
  preds [bb7]
  succs [bb10]

bb9
  0: StorageDead(_13)
    SourceInfo(src/wrapper.rs:126:62-126:63)
  1: StorageDead(_12)
    SourceInfo(src/wrapper.rs:126:62-126:63)
  2: StorageDead(_11)
    SourceInfo(src/wrapper.rs:126:62-126:63)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:126:62-126:63)
      kind: goto -> bb10
  }
  preds [bb3]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:128:6-128:6)
      kind: return
  }
  preds [bb8, bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:125:91-125:92)
      kind: drop(_7) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb13]

bb12
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:125:87-125:88)
      kind: drop(_8) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:123:5-128:6)
      kind: resume
  }
  preds [bb3, bb4, bb7, bb11, bb12]
  succs []

