bb0
  0: StorageLive(_4)
    SourceInfo(src/parse.rs:415:30-415:61)
  1: StorageLive(_5)
    SourceInfo(src/parse.rs:415:30-415:61)
  2: StorageLive(_6)
    SourceInfo(src/parse.rs:415:30-415:60)
  3: StorageLive(_7)
    SourceInfo(src/parse.rs:415:54-415:59)
  4: _7 = _1
    SourceInfo(src/parse.rs:415:54-415:59)
  Terminator {
      source_info: SourceInfo(src/parse.rs:415:30-415:60)
      kind: _6 = parse::delimiter_of_raw_string(move _7) -> [return: bb1, unwind: bb39]
  }
  preds []
  succs [bb1, bb39]

bb1
  0: StorageDead(_7)
    SourceInfo(src/parse.rs:415:59-415:60)
  Terminator {
      source_info: SourceInfo(src/parse.rs:415:30-415:61)
      kind: _5 = <std::result::Result<(parse::Cursor<'_>, &str), parse::Reject> as std::ops::Try>::branch(move _6) -> [return: bb2, unwind: bb39]
  }
  preds [bb0]
  succs [bb2, bb39]

bb2
  0: StorageDead(_6)
    SourceInfo(src/parse.rs:415:60-415:61)
  1: PlaceMention(_5)
    SourceInfo(src/parse.rs:415:30-415:61)
  2: _8 = discriminant(_5)
    SourceInfo(src/parse.rs:415:30-415:61)
  Terminator {
      source_info: SourceInfo(src/parse.rs:415:30-415:61)
      kind: switchInt(move _8) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(src/parse.rs:415:30-415:61)
  Terminator {
      source_info: SourceInfo(src/parse.rs:415:30-415:61)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/parse.rs:415:60-415:61)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_12)
    SourceInfo(src/parse.rs:415:30-415:61)
  1: _12 = ((_5 as Continue).0: (parse::Cursor<'_>, &str))
    SourceInfo(src/parse.rs:415:30-415:61)
  2: _4 = _12
    SourceInfo(src/parse.rs:415:30-415:61)
  3: StorageDead(_12)
    SourceInfo(src/parse.rs:415:60-415:61)
  4: PlaceMention(_4)
    SourceInfo(src/parse.rs:415:30-415:61)
  5: StorageLive(_2)
    SourceInfo(src/parse.rs:415:10-415:15)
  6: _2 = (_4.0: parse::Cursor<'_>)
    SourceInfo(src/parse.rs:415:10-415:15)
  7: StorageLive(_3)
    SourceInfo(src/parse.rs:415:17-415:26)
  8: _3 = (_4.1: &str)
    SourceInfo(src/parse.rs:415:17-415:26)
  9: StorageDead(_5)
    SourceInfo(src/parse.rs:415:61-415:62)
  10: StorageDead(_4)
    SourceInfo(src/parse.rs:415:61-415:62)
  11: StorageLive(_13)
    SourceInfo(src/parse.rs:416:9-416:18)
  12: StorageLive(_14)
    SourceInfo(src/parse.rs:416:21-416:34)
  13: StorageLive(_15)
    SourceInfo(src/parse.rs:416:21-416:26)
  14: _15 = &_2
    SourceInfo(src/parse.rs:416:21-416:26)
  Terminator {
      source_info: SourceInfo(src/parse.rs:416:21-416:34)
      kind: _14 = parse::Cursor::<'_>::bytes(move _15) -> [return: bb8, unwind: bb39]
  }
  preds [bb2, bb4]
  succs [bb8, bb39]

bb6
  0: StorageLive(_9)
    SourceInfo(src/parse.rs:415:60-415:61)
  1: _9 = move ((_5 as Break).0: std::result::Result<std::convert::Infallible, parse::Reject>)
    SourceInfo(src/parse.rs:415:60-415:61)
  2: StorageLive(_11)
    SourceInfo(src/parse.rs:415:60-415:61)
  3: _11 = move _9
    SourceInfo(src/parse.rs:415:60-415:61)
  Terminator {
      source_info: SourceInfo(src/parse.rs:415:30-415:61)
      kind: _0 = <std::result::Result<parse::Cursor<'_>, parse::Reject> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, parse::Reject>>>::from_residual(move _11) -> [return: bb7, unwind: bb39]
  }
  preds [bb4]
  succs [bb7, bb39]

bb7
  0: StorageDead(_11)
    SourceInfo(src/parse.rs:415:60-415:61)
  1: StorageDead(_9)
    SourceInfo(src/parse.rs:415:60-415:61)
  2: StorageDead(_5)
    SourceInfo(src/parse.rs:415:61-415:62)
  3: StorageDead(_4)
    SourceInfo(src/parse.rs:415:61-415:62)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb6]
  succs [bb38]

bb8
  0: StorageDead(_15)
    SourceInfo(src/parse.rs:416:33-416:34)
  Terminator {
      source_info: SourceInfo(src/parse.rs:416:21-416:46)
      kind: _13 = <std::str::Bytes<'_> as std::iter::Iterator>::enumerate(move _14) -> [return: bb9, unwind: bb39]
  }
  preds [bb5]
  succs [bb9, bb39]

bb9
  0: StorageDead(_14)
    SourceInfo(src/parse.rs:416:45-416:46)
  1: FakeRead(ForLet(None), _13)
    SourceInfo(src/parse.rs:416:9-416:18)
  2: StorageLive(_16)
    SourceInfo(src/parse.rs:417:5-429:6)
  Terminator {
      source_info: SourceInfo(src/parse.rs:417:5-429:6)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/parse.rs:417:5-429:6)
      kind: falseUnwind -> [real: bb11, unwind: bb39]
  }
  preds [bb9, bb35]
  succs [bb11, bb39]

bb11
  0: StorageLive(_18)
    SourceInfo(src/parse.rs:417:33-417:45)
  1: StorageLive(_19)
    SourceInfo(src/parse.rs:417:33-417:38)
  2: _19 = &mut _13
    SourceInfo(src/parse.rs:417:33-417:38)
  Terminator {
      source_info: SourceInfo(src/parse.rs:417:33-417:45)
      kind: _18 = <std::iter::Enumerate<std::str::Bytes<'_>> as std::iter::Iterator>::next(move _19) -> [return: bb12, unwind: bb39]
  }
  preds [bb10]
  succs [bb12, bb39]

bb12
  0: StorageDead(_19)
    SourceInfo(src/parse.rs:417:44-417:45)
  1: PlaceMention(_18)
    SourceInfo(src/parse.rs:417:33-417:45)
  2: _20 = discriminant(_18)
    SourceInfo(src/parse.rs:417:33-417:45)
  Terminator {
      source_info: SourceInfo(src/parse.rs:417:15-417:30)
      kind: switchInt(move _20) -> [1: bb13, otherwise: bb36]
  }
  preds [bb11]
  succs [bb13, bb36]

bb13
  Terminator {
      source_info: SourceInfo(src/parse.rs:417:15-417:30)
      kind: falseEdge -> [real: bb14, imaginary: bb36]
  }
  preds [bb12]
  succs [bb14, bb36]

bb14
  0: StorageLive(_21)
    SourceInfo(src/parse.rs:417:21-417:22)
  1: _21 = (((_18 as Some).0: (usize, u8)).0: usize)
    SourceInfo(src/parse.rs:417:21-417:22)
  2: StorageLive(_22)
    SourceInfo(src/parse.rs:417:24-417:28)
  3: _22 = (((_18 as Some).0: (usize, u8)).1: u8)
    SourceInfo(src/parse.rs:417:24-417:28)
  4: PlaceMention(_22)
    SourceInfo(src/parse.rs:418:15-418:19)
  Terminator {
      source_info: SourceInfo(src/parse.rs:418:9-418:19)
      kind: switchInt(_22) -> [34: bb16, 13: bb17, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16, bb17]

bb15
  0: _17 = const ()
    SourceInfo(src/parse.rs:427:18-427:20)
  Terminator {
      source_info: SourceInfo(src/parse.rs:427:18-427:20)
      kind: goto -> bb35
  }
  preds [bb14, bb17, bb23]
  succs [bb35]

bb16
  Terminator {
      source_info: SourceInfo(src/parse.rs:419:13-419:17)
      kind: falseEdge -> [real: bb18, imaginary: bb17]
  }
  preds [bb14]
  succs [bb17, bb18]

bb17
  Terminator {
      source_info: SourceInfo(src/parse.rs:423:13-423:18)
      kind: falseEdge -> [real: bb29, imaginary: bb15]
  }
  preds [bb14, bb16, bb23]
  succs [bb15, bb29]

bb18
  0: _23 = &fake shallow _22
    SourceInfo(src/parse.rs:418:15-418:19)
  1: StorageLive(_24)
    SourceInfo(src/parse.rs:419:21-419:63)
  2: StorageLive(_25)
    SourceInfo(src/parse.rs:419:21-419:40)
  3: StorageLive(_26)
    SourceInfo(src/parse.rs:419:31-419:40)
  4: StorageLive(_27)
    SourceInfo(src/parse.rs:419:21-419:31)
  5: _27 = &(*(_2.0: &str))
    SourceInfo(src/parse.rs:419:21-419:31)
  6: StorageLive(_28)
    SourceInfo(src/parse.rs:419:32-419:39)
  7: StorageLive(_29)
    SourceInfo(src/parse.rs:419:32-419:37)
  8: StorageLive(_30)
    SourceInfo(src/parse.rs:419:32-419:33)
  9: _30 = _21
    SourceInfo(src/parse.rs:419:32-419:33)
  10: _31 = AddWithOverflow(_30, const 1_usize)
    SourceInfo(src/parse.rs:419:32-419:37)
  Terminator {
      source_info: SourceInfo(src/parse.rs:419:32-419:37)
      kind: assert(!move (_31.1: bool), "attempt to compute `{} + {}`, which would overflow", move _30, const 1_usize) -> [success: bb19, unwind: bb39]
  }
  preds [bb16]
  succs [bb19, bb39]

bb19
  0: _29 = move (_31.0: usize)
    SourceInfo(src/parse.rs:419:32-419:37)
  1: StorageDead(_30)
    SourceInfo(src/parse.rs:419:36-419:37)
  2: _28 = std::ops::RangeFrom::<usize> { start: move _29 }
    SourceInfo(src/parse.rs:419:32-419:39)
  3: StorageDead(_29)
    SourceInfo(src/parse.rs:419:38-419:39)
  Terminator {
      source_info: SourceInfo(src/parse.rs:419:31-419:40)
      kind: _26 = <str as std::ops::Index<std::ops::RangeFrom<usize>>>::index(move _27, move _28) -> [return: bb20, unwind: bb39]
  }
  preds [bb18]
  succs [bb20, bb39]

bb20
  0: _25 = &(*_26)
    SourceInfo(src/parse.rs:419:21-419:40)
  1: StorageDead(_28)
    SourceInfo(src/parse.rs:419:39-419:40)
  2: StorageDead(_27)
    SourceInfo(src/parse.rs:419:39-419:40)
  3: StorageLive(_32)
    SourceInfo(src/parse.rs:419:53-419:62)
  4: _32 = _3
    SourceInfo(src/parse.rs:419:53-419:62)
  Terminator {
      source_info: SourceInfo(src/parse.rs:419:21-419:63)
      kind: _24 = core::str::<impl str>::starts_with::<'_, &str>(move _25, move _32) -> [return: bb21, unwind: bb39]
  }
  preds [bb19]
  succs [bb21, bb39]

bb21
  Terminator {
      source_info: SourceInfo(src/parse.rs:419:21-419:63)
      kind: switchInt(move _24) -> [0: bb23, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb23]

bb22
  0: StorageDead(_32)
    SourceInfo(src/parse.rs:419:62-419:63)
  1: StorageDead(_26)
    SourceInfo(src/parse.rs:419:62-419:63)
  2: StorageDead(_25)
    SourceInfo(src/parse.rs:419:62-419:63)
  3: StorageDead(_24)
    SourceInfo(src/parse.rs:419:62-419:63)
  4: FakeRead(ForMatchGuard, _23)
    SourceInfo(src/parse.rs:419:62-419:63)
  5: StorageLive(_34)
    SourceInfo(src/parse.rs:420:21-420:25)
  6: StorageLive(_35)
    SourceInfo(src/parse.rs:420:28-420:33)
  7: _35 = &_2
    SourceInfo(src/parse.rs:420:28-420:33)
  8: StorageLive(_36)
    SourceInfo(src/parse.rs:420:42-420:65)
  9: StorageLive(_37)
    SourceInfo(src/parse.rs:420:42-420:47)
  10: StorageLive(_38)
    SourceInfo(src/parse.rs:420:42-420:43)
  11: _38 = _21
    SourceInfo(src/parse.rs:420:42-420:43)
  12: _39 = AddWithOverflow(_38, const 1_usize)
    SourceInfo(src/parse.rs:420:42-420:47)
  Terminator {
      source_info: SourceInfo(src/parse.rs:420:42-420:47)
      kind: assert(!move (_39.1: bool), "attempt to compute `{} + {}`, which would overflow", move _38, const 1_usize) -> [success: bb24, unwind: bb39]
  }
  preds [bb21]
  succs [bb24, bb39]

bb23
  0: StorageDead(_32)
    SourceInfo(src/parse.rs:419:62-419:63)
  1: StorageDead(_26)
    SourceInfo(src/parse.rs:419:62-419:63)
  2: StorageDead(_25)
    SourceInfo(src/parse.rs:419:62-419:63)
  3: StorageDead(_24)
    SourceInfo(src/parse.rs:419:62-419:63)
  Terminator {
      source_info: SourceInfo(src/parse.rs:419:21-419:63)
      kind: falseEdge -> [real: bb15, imaginary: bb17]
  }
  preds [bb21]
  succs [bb15, bb17]

bb24
  0: _37 = move (_39.0: usize)
    SourceInfo(src/parse.rs:420:42-420:47)
  1: StorageDead(_38)
    SourceInfo(src/parse.rs:420:46-420:47)
  2: StorageLive(_40)
    SourceInfo(src/parse.rs:420:50-420:65)
  3: StorageLive(_41)
    SourceInfo(src/parse.rs:420:50-420:59)
  4: _41 = &(*_3)
    SourceInfo(src/parse.rs:420:50-420:59)
  Terminator {
      source_info: SourceInfo(src/parse.rs:420:50-420:65)
      kind: _40 = core::str::<impl str>::len(move _41) -> [return: bb25, unwind: bb39]
  }
  preds [bb22]
  succs [bb25, bb39]

bb25
  0: StorageDead(_41)
    SourceInfo(src/parse.rs:420:64-420:65)
  1: _42 = AddWithOverflow(_37, _40)
    SourceInfo(src/parse.rs:420:42-420:65)
  Terminator {
      source_info: SourceInfo(src/parse.rs:420:42-420:65)
      kind: assert(!move (_42.1: bool), "attempt to compute `{} + {}`, which would overflow", move _37, move _40) -> [success: bb26, unwind: bb39]
  }
  preds [bb24]
  succs [bb26, bb39]

bb26
  0: _36 = move (_42.0: usize)
    SourceInfo(src/parse.rs:420:42-420:65)
  1: StorageDead(_40)
    SourceInfo(src/parse.rs:420:64-420:65)
  2: StorageDead(_37)
    SourceInfo(src/parse.rs:420:64-420:65)
  Terminator {
      source_info: SourceInfo(src/parse.rs:420:28-420:66)
      kind: _34 = parse::Cursor::<'_>::advance(move _35, move _36) -> [return: bb27, unwind: bb39]
  }
  preds [bb25]
  succs [bb27, bb39]

bb27
  0: StorageDead(_36)
    SourceInfo(src/parse.rs:420:65-420:66)
  1: StorageDead(_35)
    SourceInfo(src/parse.rs:420:65-420:66)
  2: FakeRead(ForLet(None), _34)
    SourceInfo(src/parse.rs:420:21-420:25)
  3: StorageLive(_43)
    SourceInfo(src/parse.rs:421:27-421:47)
  4: StorageLive(_44)
    SourceInfo(src/parse.rs:421:42-421:46)
  5: _44 = _34
    SourceInfo(src/parse.rs:421:42-421:46)
  Terminator {
      source_info: SourceInfo(src/parse.rs:421:27-421:47)
      kind: _43 = parse::literal_suffix(move _44) -> [return: bb28, unwind: bb39]
  }
  preds [bb26]
  succs [bb28, bb39]

bb28
  0: StorageDead(_44)
    SourceInfo(src/parse.rs:421:46-421:47)
  1: _0 = std::result::Result::<parse::Cursor<'_>, parse::Reject>::Ok(move _43)
    SourceInfo(src/parse.rs:421:24-421:48)
  2: StorageDead(_43)
    SourceInfo(src/parse.rs:421:47-421:48)
  3: StorageDead(_34)
    SourceInfo(src/parse.rs:422:13-422:14)
  4: StorageDead(_22)
    SourceInfo(src/parse.rs:429:5-429:6)
  5: StorageDead(_21)
    SourceInfo(src/parse.rs:429:5-429:6)
  6: StorageDead(_18)
    SourceInfo(src/parse.rs:429:5-429:6)
  7: StorageDead(_16)
    SourceInfo(src/parse.rs:429:5-429:6)
  8: StorageDead(_13)
    SourceInfo(src/parse.rs:431:1-431:2)
  9: StorageDead(_3)
    SourceInfo(src/parse.rs:431:1-431:2)
  10: StorageDead(_2)
    SourceInfo(src/parse.rs:431:1-431:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb27]
  succs [bb38]

bb29
  0: StorageLive(_45)
    SourceInfo(src/parse.rs:423:28-423:40)
  1: StorageLive(_46)
    SourceInfo(src/parse.rs:423:28-423:33)
  2: _46 = &mut _13
    SourceInfo(src/parse.rs:423:28-423:33)
  Terminator {
      source_info: SourceInfo(src/parse.rs:423:28-423:40)
      kind: _45 = <std::iter::Enumerate<std::str::Bytes<'_>> as std::iter::Iterator>::next(move _46) -> [return: bb30, unwind: bb39]
  }
  preds [bb17]
  succs [bb30, bb39]

bb30
  0: StorageDead(_46)
    SourceInfo(src/parse.rs:423:39-423:40)
  1: PlaceMention(_45)
    SourceInfo(src/parse.rs:423:28-423:40)
  2: _47 = discriminant(_45)
    SourceInfo(src/parse.rs:423:28-423:40)
  Terminator {
      source_info: SourceInfo(src/parse.rs:423:22-423:40)
      kind: switchInt(move _47) -> [1: bb32, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb32]

bb31
  0: _16 = const ()
    SourceInfo(src/parse.rs:425:22-425:27)
  1: StorageDead(_45)
    SourceInfo(src/parse.rs:426:13-426:14)
  2: StorageDead(_22)
    SourceInfo(src/parse.rs:429:5-429:6)
  3: StorageDead(_21)
    SourceInfo(src/parse.rs:429:5-429:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb37
  }
  preds [bb30, bb32, bb33]
  succs [bb37]

bb32
  Terminator {
      source_info: SourceInfo(src/parse.rs:423:22-423:40)
      kind: switchInt((((_45 as Some).0: (usize, u8)).1: u8)) -> [10: bb33, otherwise: bb31]
  }
  preds [bb30]
  succs [bb31, bb33]

bb33
  Terminator {
      source_info: SourceInfo(src/parse.rs:424:17-424:33)
      kind: falseEdge -> [real: bb34, imaginary: bb31]
  }
  preds [bb32]
  succs [bb31, bb34]

bb34
  0: _17 = const ()
    SourceInfo(src/parse.rs:424:37-424:39)
  1: StorageDead(_45)
    SourceInfo(src/parse.rs:426:13-426:14)
  Terminator {
      source_info: SourceInfo(src/parse.rs:426:13-426:14)
      kind: goto -> bb35
  }
  preds [bb33]
  succs [bb35]

bb35
  0: StorageDead(_22)
    SourceInfo(src/parse.rs:429:5-429:6)
  1: StorageDead(_21)
    SourceInfo(src/parse.rs:429:5-429:6)
  2: StorageDead(_18)
    SourceInfo(src/parse.rs:429:5-429:6)
  Terminator {
      source_info: SourceInfo(src/parse.rs:417:5-429:6)
      kind: goto -> bb10
  }
  preds [bb15, bb34]
  succs [bb10]

bb36
  0: StorageLive(_50)
    SourceInfo(src/parse.rs:417:5-429:6)
  1: _16 = const ()
    SourceInfo(src/parse.rs:417:5-429:6)
  2: StorageDead(_50)
    SourceInfo(src/parse.rs:429:5-429:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb37
  }
  preds [bb12, bb13]
  succs [bb37]

bb37
  0: StorageDead(_18)
    SourceInfo(src/parse.rs:429:5-429:6)
  1: StorageDead(_16)
    SourceInfo(src/parse.rs:429:5-429:6)
  2: StorageLive(_52)
    SourceInfo(src/parse.rs:430:9-430:15)
  3: _52 = parse::Reject
    SourceInfo(src/parse.rs:430:9-430:15)
  4: _0 = std::result::Result::<parse::Cursor<'_>, parse::Reject>::Err(move _52)
    SourceInfo(src/parse.rs:430:5-430:16)
  5: StorageDead(_52)
    SourceInfo(src/parse.rs:430:15-430:16)
  6: StorageDead(_13)
    SourceInfo(src/parse.rs:431:1-431:2)
  7: StorageDead(_3)
    SourceInfo(src/parse.rs:431:1-431:2)
  8: StorageDead(_2)
    SourceInfo(src/parse.rs:431:1-431:2)
  Terminator {
      source_info: SourceInfo(src/parse.rs:431:2-431:2)
      kind: goto -> bb38
  }
  preds [bb31, bb36]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(src/parse.rs:431:2-431:2)
      kind: return
  }
  preds [bb7, bb28, bb37]
  succs []

bb39
  Terminator {
      source_info: SourceInfo(src/parse.rs:414:1-431:2)
      kind: resume
  }
  preds [bb0, bb1, bb5, bb6, bb8, bb10, bb11, bb18, bb19, bb20, bb22, bb24, bb25, bb26, bb27, bb29]
  succs []

