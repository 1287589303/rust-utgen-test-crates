{
  "src/parse.rs:417:11:417:45": [
    {
      "Bool": {
        "Other": "let Some((i, byte)) = bytes.next()"
      }
    }
  ],
  "src/parse.rs:420:42:420:47": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "i + 1",
          "lhs": "i",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/parse.rs:418:15:418:19": [
    {
      "Match": {
        "match_source": "src/parse.rs:418:15:418:19",
        "match_str": "byte",
        "match_kind": "Other",
        "arms": {
          "src/parse.rs:423:13:423:18": {
            "pat": {
              "pat_str": "b'\\r'",
              "kind": {
                "Other": 13
              }
            },
            "guard": null,
            "body_source": "src/parse.rs:423:22:426:14"
          },
          "src/parse.rs:419:13:419:17": {
            "pat": {
              "pat_str": "b'\"'",
              "kind": {
                "Other": 34
              }
            },
            "guard": {
              "src/parse.rs:419:21:419:63": [
                {
                  "Bool": {
                    "Other": "input.rest[i + 1..].starts_with(delimiter)"
                  }
                }
              ]
            },
            "body_source": "src/parse.rs:419:67:422:14"
          },
          "src/parse.rs:427:13:427:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "src/parse.rs:427:18:427:20"
          }
        }
      }
    }
  ],
  "src/parse.rs:415:30:415:61": [
    {
      "Try": "delimiter_of_raw_string(input)?"
    }
  ],
  "src/parse.rs:420:42:420:65": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "i + 1 + delimiter.len()",
          "lhs": "i + 1",
          "rhs": "delimiter.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/parse.rs:419:21:419:63": [
    {
      "Bool": {
        "Other": "input.rest[i + 1..].starts_with(delimiter)"
      }
    }
  ],
  "src/parse.rs:419:32:419:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "i + 1",
          "lhs": "i",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/parse.rs:423:28:423:40": [
    {
      "Match": {
        "match_source": "src/parse.rs:423:28:423:40",
        "match_str": "bytes.next()",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "src/parse.rs:424:17:424:33": {
            "pat": {
              "pat_str": "Some((_, b'\\n'))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "src/parse.rs:424:37:424:39"
          },
          "src/parse.rs:425:17:425:18": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "src/parse.rs:425:22:425:27"
          }
        }
      }
    }
  ]
}