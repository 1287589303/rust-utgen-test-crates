Body {
    params: [
        Param {
            hir_id: HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).1),
            pat: Pat {
                hir_id: HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).2),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).2),
                    cursor#0,
                    None,
                ),
                span: src/parse.rs:253:14: 253:20 (#0),
                default_binding_modes: true,
            },
            ty_span: src/parse.rs:253:22: 253:28 (#0),
            span: src/parse.rs:253:14: 253:28 (#0),
        },
    ],
    value: Expr {
        hir_id: HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).14),
        kind: Block(
            Block {
                stmts: [
                    Stmt {
                        hir_id: HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).3),
                        kind: Let(
                            LetStmt {
                                pat: Pat {
                                    hir_id: HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).7),
                                    kind: Wild,
                                    span: src/parse.rs:255:9: 255:10 (#0),
                                    default_binding_modes: true,
                                },
                                ty: None,
                                init: Some(
                                    Expr {
                                        hir_id: HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).4),
                                        kind: Path(
                                            Resolved(
                                                None,
                                                Path {
                                                    span: src/parse.rs:255:13: 255:19 (#0),
                                                    res: Local(
                                                        HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).2),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            ident: cursor#0,
                                                            hir_id: HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).5),
                                                            res: Local(
                                                                HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).2),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                    ],
                                                },
                                            ),
                                        ),
                                        span: src/parse.rs:255:13: 255:19 (#0),
                                    },
                                ),
                                els: None,
                                hir_id: HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).6),
                                span: src/parse.rs:255:5: 255:20 (#0),
                                source: Normal,
                            },
                        ),
                        span: src/parse.rs:255:5: 255:20 (#0),
                    },
                ],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).8),
                        kind: Struct(
                            Resolved(
                                None,
                                Path {
                                    span: src/parse.rs:256:5: 256:13 (#0),
                                    res: Def(
                                        Struct,
                                        DefId(0:719 ~ proc_macro2[acde]::fallback::LexError),
                                    ),
                                    segments: [
                                        PathSegment {
                                            ident: LexError#0,
                                            hir_id: HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).9),
                                            res: Def(
                                                Struct,
                                                DefId(0:719 ~ proc_macro2[acde]::fallback::LexError),
                                            ),
                                            args: None,
                                            infer_args: true,
                                        },
                                    ],
                                },
                            ),
                            [
                                ExprField {
                                    hir_id: HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).10),
                                    ident: span#0,
                                    expr: Expr {
                                        hir_id: HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).11),
                                        kind: Struct(
                                            Resolved(
                                                None,
                                                Path {
                                                    span: src/parse.rs:257:15: 257:19 (#0),
                                                    res: Def(
                                                        Struct,
                                                        DefId(0:723 ~ proc_macro2[acde]::fallback::Span),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            ident: Span#0,
                                                            hir_id: HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).12),
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:723 ~ proc_macro2[acde]::fallback::Span),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                    ],
                                                },
                                            ),
                                            [],
                                            None,
                                        ),
                                        span: src/parse.rs:257:15: 262:10 (#0),
                                    },
                                    span: src/parse.rs:257:9: 262:10 (#0),
                                    is_shorthand: false,
                                },
                            ],
                            None,
                        ),
                        span: src/parse.rs:256:5: 263:6 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:61 ~ proc_macro2[acde]::parse::lex_error).13),
                rules: DefaultBlock,
                span: src/parse.rs:253:42: 264:2 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: src/parse.rs:253:42: 264:2 (#0),
    },
}