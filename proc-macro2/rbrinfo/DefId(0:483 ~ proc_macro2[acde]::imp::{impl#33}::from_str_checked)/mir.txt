bb0
  0: StorageLive(_2)
    SourceInfo(src/wrapper.rs:808:12-808:31)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:808:12-808:31)
      kind: _2 = detection::inside_proc_macro() -> [return: bb1, unwind: bb32]
  }
  preds []
  succs [bb1, bb32]

bb1
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:808:12-808:31)
      kind: switchInt(move _2) -> [0: bb11, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb11]

bb2
  0: StorageLive(_3)
    SourceInfo(src/wrapper.rs:809:17-809:24)
  1: StorageLive(_4)
    SourceInfo(src/wrapper.rs:809:27-809:71)
  2: StorageLive(_5)
    SourceInfo(src/wrapper.rs:809:27-809:70)
  3: StorageLive(_6)
    SourceInfo(src/wrapper.rs:809:65-809:69)
  4: _6 = &(*_1)
    SourceInfo(src/wrapper.rs:809:65-809:69)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:809:27-809:70)
      kind: _5 = <proc_macro::Literal as fallback::FromStr2>::from_str_checked(move _6) -> [return: bb3, unwind: bb32]
  }
  preds [bb1]
  succs [bb3, bb32]

bb3
  0: StorageDead(_6)
    SourceInfo(src/wrapper.rs:809:69-809:70)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:809:27-809:71)
      kind: _4 = <std::result::Result<proc_macro::Literal, imp::LexError> as std::ops::Try>::branch(move _5) -> [return: bb4, unwind: bb32]
  }
  preds [bb2]
  succs [bb4, bb32]

bb4
  0: StorageDead(_5)
    SourceInfo(src/wrapper.rs:809:70-809:71)
  1: PlaceMention(_4)
    SourceInfo(src/wrapper.rs:809:27-809:71)
  2: _7 = discriminant(_4)
    SourceInfo(src/wrapper.rs:809:27-809:71)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:809:27-809:71)
      kind: switchInt(move _7) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(src/wrapper.rs:809:27-809:71)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:809:27-809:71)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:809:70-809:71)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_11)
    SourceInfo(src/wrapper.rs:809:27-809:71)
  1: _11 = move ((_4 as Continue).0: proc_macro::Literal)
    SourceInfo(src/wrapper.rs:809:27-809:71)
  2: _3 = move _11
    SourceInfo(src/wrapper.rs:809:27-809:71)
  3: StorageDead(_11)
    SourceInfo(src/wrapper.rs:809:70-809:71)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(src/wrapper.rs:809:17-809:24)
  5: StorageDead(_4)
    SourceInfo(src/wrapper.rs:809:71-809:72)
  6: StorageLive(_12)
    SourceInfo(src/wrapper.rs:810:16-810:42)
  7: StorageLive(_13)
    SourceInfo(src/wrapper.rs:810:34-810:41)
  8: _13 = move _3
    SourceInfo(src/wrapper.rs:810:34-810:41)
  9: _12 = imp::Literal::Compiler(move _13)
    SourceInfo(src/wrapper.rs:810:16-810:42)
  10: StorageDead(_13)
    SourceInfo(src/wrapper.rs:810:41-810:42)
  11: _0 = std::result::Result::<imp::Literal, imp::LexError>::Ok(move _12)
    SourceInfo(src/wrapper.rs:810:13-810:43)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:810:42-810:43)
      kind: drop(_12) -> [return: bb10, unwind: bb32]
  }
  preds [bb4, bb6]
  succs [bb10, bb32]

bb8
  0: StorageLive(_8)
    SourceInfo(src/wrapper.rs:809:70-809:71)
  1: _8 = move ((_4 as Break).0: std::result::Result<std::convert::Infallible, imp::LexError>)
    SourceInfo(src/wrapper.rs:809:70-809:71)
  2: StorageLive(_10)
    SourceInfo(src/wrapper.rs:809:70-809:71)
  3: _10 = move _8
    SourceInfo(src/wrapper.rs:809:70-809:71)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:809:27-809:71)
      kind: _0 = <std::result::Result<imp::Literal, imp::LexError> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, imp::LexError>>>::from_residual(move _10) -> [return: bb9, unwind: bb32]
  }
  preds [bb6]
  succs [bb9, bb32]

bb9
  0: StorageDead(_10)
    SourceInfo(src/wrapper.rs:809:70-809:71)
  1: StorageDead(_8)
    SourceInfo(src/wrapper.rs:809:70-809:71)
  2: StorageDead(_4)
    SourceInfo(src/wrapper.rs:809:71-809:72)
  3: StorageDead(_3)
    SourceInfo(src/wrapper.rs:811:9-811:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb26
  }
  preds [bb8]
  succs [bb26]

bb10
  0: StorageDead(_12)
    SourceInfo(src/wrapper.rs:810:42-810:43)
  1: StorageDead(_3)
    SourceInfo(src/wrapper.rs:811:9-811:10)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:808:9-814:10)
      kind: goto -> bb24
  }
  preds [bb7]
  succs [bb24]

bb11
  0: StorageLive(_14)
    SourceInfo(src/wrapper.rs:812:17-812:24)
  1: StorageLive(_15)
    SourceInfo(src/wrapper.rs:812:27-812:69)
  2: StorageLive(_16)
    SourceInfo(src/wrapper.rs:812:27-812:68)
  3: StorageLive(_17)
    SourceInfo(src/wrapper.rs:812:63-812:67)
  4: _17 = &(*_1)
    SourceInfo(src/wrapper.rs:812:63-812:67)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:812:27-812:68)
      kind: _16 = fallback::Literal::from_str_checked(move _17) -> [return: bb12, unwind: bb32]
  }
  preds [bb1]
  succs [bb12, bb32]

bb12
  0: StorageDead(_17)
    SourceInfo(src/wrapper.rs:812:67-812:68)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:812:27-812:69)
      kind: _15 = <std::result::Result<fallback::Literal, fallback::LexError> as std::ops::Try>::branch(move _16) -> [return: bb13, unwind: bb31]
  }
  preds [bb11]
  succs [bb13, bb31]

bb13
  0: StorageDead(_16)
    SourceInfo(src/wrapper.rs:812:68-812:69)
  1: PlaceMention(_15)
    SourceInfo(src/wrapper.rs:812:27-812:69)
  2: _18 = discriminant(_15)
    SourceInfo(src/wrapper.rs:812:27-812:69)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:812:27-812:69)
      kind: switchInt(move _18) -> [0: bb16, 1: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15, bb16]

bb14
  0: FakeRead(ForMatchedPlace(None), _15)
    SourceInfo(src/wrapper.rs:812:27-812:69)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:812:27-812:69)
      kind: unreachable
  }
  preds [bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:812:68-812:69)
      kind: falseEdge -> [real: bb17, imaginary: bb16]
  }
  preds [bb13]
  succs [bb16, bb17]

bb16
  0: StorageLive(_22)
    SourceInfo(src/wrapper.rs:812:27-812:69)
  1: _22 = move ((_15 as Continue).0: fallback::Literal)
    SourceInfo(src/wrapper.rs:812:27-812:69)
  2: _14 = move _22
    SourceInfo(src/wrapper.rs:812:27-812:69)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:812:68-812:69)
      kind: drop(_22) -> [return: bb19, unwind: bb30]
  }
  preds [bb13, bb15]
  succs [bb19, bb30]

bb17
  0: StorageLive(_19)
    SourceInfo(src/wrapper.rs:812:68-812:69)
  1: _19 = move ((_15 as Break).0: std::result::Result<std::convert::Infallible, fallback::LexError>)
    SourceInfo(src/wrapper.rs:812:68-812:69)
  2: StorageLive(_21)
    SourceInfo(src/wrapper.rs:812:68-812:69)
  3: _21 = move _19
    SourceInfo(src/wrapper.rs:812:68-812:69)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:812:27-812:69)
      kind: _0 = <std::result::Result<imp::Literal, imp::LexError> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, fallback::LexError>>>::from_residual(move _21) -> [return: bb18, unwind: bb30]
  }
  preds [bb15]
  succs [bb18, bb30]

bb18
  0: StorageDead(_21)
    SourceInfo(src/wrapper.rs:812:68-812:69)
  1: StorageDead(_19)
    SourceInfo(src/wrapper.rs:812:68-812:69)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:812:69-812:70)
      kind: drop(_15) -> [return: bb25, unwind: bb32]
  }
  preds [bb17]
  succs [bb25, bb32]

bb19
  0: StorageDead(_22)
    SourceInfo(src/wrapper.rs:812:68-812:69)
  1: FakeRead(ForLet(None), _14)
    SourceInfo(src/wrapper.rs:812:17-812:24)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:812:69-812:70)
      kind: drop(_15) -> [return: bb20, unwind: bb29]
  }
  preds [bb16]
  succs [bb20, bb29]

bb20
  0: StorageDead(_15)
    SourceInfo(src/wrapper.rs:812:69-812:70)
  1: StorageLive(_23)
    SourceInfo(src/wrapper.rs:813:16-813:42)
  2: StorageLive(_24)
    SourceInfo(src/wrapper.rs:813:34-813:41)
  3: _24 = move _14
    SourceInfo(src/wrapper.rs:813:34-813:41)
  4: _23 = imp::Literal::Fallback(move _24)
    SourceInfo(src/wrapper.rs:813:16-813:42)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:813:41-813:42)
      kind: drop(_24) -> [return: bb21, unwind: bb28]
  }
  preds [bb19]
  succs [bb21, bb28]

bb21
  0: StorageDead(_24)
    SourceInfo(src/wrapper.rs:813:41-813:42)
  1: _0 = std::result::Result::<imp::Literal, imp::LexError>::Ok(move _23)
    SourceInfo(src/wrapper.rs:813:13-813:43)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:813:42-813:43)
      kind: drop(_23) -> [return: bb22, unwind: bb29]
  }
  preds [bb20]
  succs [bb22, bb29]

bb22
  0: StorageDead(_23)
    SourceInfo(src/wrapper.rs:813:42-813:43)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:814:9-814:10)
      kind: drop(_14) -> [return: bb23, unwind: bb32]
  }
  preds [bb21]
  succs [bb23, bb32]

bb23
  0: StorageDead(_14)
    SourceInfo(src/wrapper.rs:814:9-814:10)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:808:9-814:10)
      kind: goto -> bb24
  }
  preds [bb22]
  succs [bb24]

bb24
  0: StorageDead(_2)
    SourceInfo(src/wrapper.rs:814:9-814:10)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:815:6-815:6)
      kind: goto -> bb27
  }
  preds [bb10, bb23]
  succs [bb27]

bb25
  0: StorageDead(_15)
    SourceInfo(src/wrapper.rs:812:69-812:70)
  1: StorageDead(_14)
    SourceInfo(src/wrapper.rs:814:9-814:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb26
  }
  preds [bb18]
  succs [bb26]

bb26
  0: StorageDead(_2)
    SourceInfo(src/wrapper.rs:814:9-814:10)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:815:6-815:6)
      kind: goto -> bb27
  }
  preds [bb9, bb25]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:815:6-815:6)
      kind: return
  }
  preds [bb24, bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:813:42-813:43)
      kind: drop(_23) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:814:9-814:10)
      kind: drop(_14) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb19, bb21, bb28]
  succs [bb32]

bb30
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:812:69-812:70)
      kind: drop(_15) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb16, bb17]
  succs [bb32]

bb31
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:812:68-812:69)
      kind: drop(_16) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:807:5-815:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb7, bb8, bb11, bb18, bb22, bb29, bb30, bb31]
  succs []

