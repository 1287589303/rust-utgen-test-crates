bb0
  0: StorageLive(_2)
    SourceInfo(src/wrapper.rs:61:9-61:31)
  1: StorageLive(_3)
    SourceInfo(src/wrapper.rs:61:9-61:20)
  2: _3 = &((*_1).0: proc_macro::TokenStream)
    SourceInfo(src/wrapper.rs:61:9-61:20)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:61:9-61:31)
      kind: _2 = proc_macro::TokenStream::is_empty(move _3) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:61:9-61:31)
      kind: switchInt(move _2) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(src/wrapper.rs:61:30-61:31)
  1: StorageLive(_4)
    SourceInfo(src/wrapper.rs:61:35-61:45)
  2: _4 = &((*_1).1: std::vec::Vec<proc_macro::TokenTree>)
    SourceInfo(src/wrapper.rs:61:35-61:45)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:61:35-61:56)
      kind: _0 = std::vec::Vec::<proc_macro::TokenTree>::is_empty(move _4) -> [return: bb4, unwind: bb6]
  }
  preds [bb1]
  succs [bb4, bb6]

bb3
  0: StorageDead(_3)
    SourceInfo(src/wrapper.rs:61:30-61:31)
  1: _0 = const false
    SourceInfo(src/wrapper.rs:61:9-61:56)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:61:9-61:56)
      kind: goto -> bb5
  }
  preds [bb1]
  succs [bb5]

bb4
  0: StorageDead(_4)
    SourceInfo(src/wrapper.rs:61:55-61:56)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:61:9-61:56)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb5
  0: StorageDead(_2)
    SourceInfo(src/wrapper.rs:61:55-61:56)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:62:6-62:6)
      kind: return
  }
  preds [bb3, bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:60:5-62:6)
      kind: resume
  }
  preds [bb0, bb2]
  succs []

