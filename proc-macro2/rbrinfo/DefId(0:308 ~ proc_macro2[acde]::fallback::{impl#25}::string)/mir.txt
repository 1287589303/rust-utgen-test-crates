bb0
  0: StorageLive(_2)
    SourceInfo(src/fallback.rs:1054:13-1054:21)
  1: StorageLive(_3)
    SourceInfo(src/fallback.rs:1054:46-1054:62)
  2: StorageLive(_4)
    SourceInfo(src/fallback.rs:1054:46-1054:58)
  3: StorageLive(_5)
    SourceInfo(src/fallback.rs:1054:46-1054:52)
  4: _5 = &(*_1)
    SourceInfo(src/fallback.rs:1054:46-1054:52)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1054:46-1054:58)
      kind: _4 = core::str::<impl str>::len(move _5) -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  0: StorageDead(_5)
    SourceInfo(src/fallback.rs:1054:57-1054:58)
  1: _6 = AddWithOverflow(_4, const 2_usize)
    SourceInfo(src/fallback.rs:1054:46-1054:62)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1054:46-1054:62)
      kind: assert(!move (_6.1: bool), "attempt to compute `{} + {}`, which would overflow", move _4, const 2_usize) -> [success: bb2, unwind: bb11]
  }
  preds [bb0]
  succs [bb2, bb11]

bb2
  0: _3 = move (_6.0: usize)
    SourceInfo(src/fallback.rs:1054:46-1054:62)
  1: StorageDead(_4)
    SourceInfo(src/fallback.rs:1054:61-1054:62)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1054:24-1054:63)
      kind: _2 = std::string::String::with_capacity(move _3) -> [return: bb3, unwind: bb11]
  }
  preds [bb1]
  succs [bb3, bb11]

bb3
  0: StorageDead(_3)
    SourceInfo(src/fallback.rs:1054:62-1054:63)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(src/fallback.rs:1054:13-1054:21)
  2: StorageLive(_7)
    SourceInfo(src/fallback.rs:1055:9-1055:23)
  3: StorageLive(_8)
    SourceInfo(src/fallback.rs:1055:9-1055:13)
  4: _8 = &mut _2
    SourceInfo(src/fallback.rs:1055:9-1055:13)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1055:9-1055:23)
      kind: _7 = std::string::String::push(move _8, const '"') -> [return: bb4, unwind: bb10]
  }
  preds [bb2]
  succs [bb4, bb10]

bb4
  0: StorageDead(_8)
    SourceInfo(src/fallback.rs:1055:22-1055:23)
  1: StorageDead(_7)
    SourceInfo(src/fallback.rs:1055:23-1055:24)
  2: StorageLive(_9)
    SourceInfo(src/fallback.rs:1056:9-1056:39)
  3: StorageLive(_10)
    SourceInfo(src/fallback.rs:1056:21-1056:27)
  4: _10 = &(*_1)
    SourceInfo(src/fallback.rs:1056:21-1056:27)
  5: StorageLive(_11)
    SourceInfo(src/fallback.rs:1056:29-1056:38)
  6: StorageLive(_12)
    SourceInfo(src/fallback.rs:1056:29-1056:38)
  7: _12 = &mut _2
    SourceInfo(src/fallback.rs:1056:29-1056:38)
  8: _11 = &mut (*_12)
    SourceInfo(src/fallback.rs:1056:29-1056:38)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1056:9-1056:39)
      kind: _9 = fallback::escape_utf8(move _10, move _11) -> [return: bb5, unwind: bb10]
  }
  preds [bb3]
  succs [bb5, bb10]

bb5
  0: StorageDead(_11)
    SourceInfo(src/fallback.rs:1056:38-1056:39)
  1: StorageDead(_10)
    SourceInfo(src/fallback.rs:1056:38-1056:39)
  2: StorageDead(_12)
    SourceInfo(src/fallback.rs:1056:39-1056:40)
  3: StorageDead(_9)
    SourceInfo(src/fallback.rs:1056:39-1056:40)
  4: StorageLive(_13)
    SourceInfo(src/fallback.rs:1057:9-1057:23)
  5: StorageLive(_14)
    SourceInfo(src/fallback.rs:1057:9-1057:13)
  6: _14 = &mut _2
    SourceInfo(src/fallback.rs:1057:9-1057:13)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1057:9-1057:23)
      kind: _13 = std::string::String::push(move _14, const '"') -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_14)
    SourceInfo(src/fallback.rs:1057:22-1057:23)
  1: StorageDead(_13)
    SourceInfo(src/fallback.rs:1057:23-1057:24)
  2: StorageLive(_15)
    SourceInfo(src/fallback.rs:1058:23-1058:27)
  3: _15 = move _2
    SourceInfo(src/fallback.rs:1058:23-1058:27)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1058:9-1058:28)
      kind: _0 = fallback::Literal::_new(move _15) -> [return: bb7, unwind: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: StorageDead(_15)
    SourceInfo(src/fallback.rs:1058:27-1058:28)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1059:5-1059:6)
      kind: drop(_2) -> [return: bb8, unwind: bb11]
  }
  preds [bb6]
  succs [bb8, bb11]

bb8
  0: StorageDead(_2)
    SourceInfo(src/fallback.rs:1059:5-1059:6)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1059:6-1059:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1058:27-1058:28)
      kind: drop(_15) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1059:5-1059:6)
      kind: drop(_2) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb3, bb4, bb5, bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1053:5-1059:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb7, bb10]
  succs []

