bb0
  0: PlaceMention(_2)
    SourceInfo(src/wrapper.rs:568:11-568:15)
  1: _3 = discriminant(_2)
    SourceInfo(src/wrapper.rs:568:11-568:15)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:568:5-568:15)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(src/wrapper.rs:568:11-568:15)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:568:11-568:15)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:569:9-569:26)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_12)
    SourceInfo(src/wrapper.rs:572:24-572:25)
  1: _12 = ((_2 as Fallback).0: fallback::Span)
    SourceInfo(src/wrapper.rs:572:24-572:25)
  2: StorageLive(_13)
    SourceInfo(src/wrapper.rs:572:71-572:76)
  3: _13 = &mut (*_1)
    SourceInfo(src/wrapper.rs:572:71-572:76)
  4: StorageLive(_14)
    SourceInfo(src/wrapper.rs:572:78-572:79)
  5: _14 = _12
    SourceInfo(src/wrapper.rs:572:78-572:79)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:572:30-572:80)
      kind: _0 = fallback::debug_span_field_if_nontrivial(move _13, move _14) -> [return: bb6, unwind: bb8]
  }
  preds [bb0, bb2]
  succs [bb6, bb8]

bb4
  0: StorageLive(_4)
    SourceInfo(src/wrapper.rs:569:24-569:25)
  1: _4 = ((_2 as Compiler).0: proc_macro::Span)
    SourceInfo(src/wrapper.rs:569:24-569:25)
  2: StorageLive(_5)
    SourceInfo(src/wrapper.rs:570:13-570:36)
  3: StorageLive(_6)
    SourceInfo(src/wrapper.rs:570:13-570:18)
  4: _6 = &mut (*_1)
    SourceInfo(src/wrapper.rs:570:13-570:18)
  5: StorageLive(_7)
    SourceInfo(src/wrapper.rs:570:25-570:31)
  6: StorageLive(_8)
    SourceInfo(src/wrapper.rs:570:25-570:31)
  7: _8 = const "span"
    SourceInfo(src/wrapper.rs:570:25-570:31)
  8: _7 = &(*_8)
    SourceInfo(src/wrapper.rs:570:25-570:31)
  9: StorageLive(_9)
    SourceInfo(src/wrapper.rs:570:33-570:35)
  10: StorageLive(_10)
    SourceInfo(src/wrapper.rs:570:33-570:35)
  11: StorageLive(_11)
    SourceInfo(src/wrapper.rs:570:33-570:35)
  12: _11 = &_4
    SourceInfo(src/wrapper.rs:570:33-570:35)
  13: _10 = &(*_11)
    SourceInfo(src/wrapper.rs:570:33-570:35)
  14: _9 = move _10 as &dyn std::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(src/wrapper.rs:570:33-570:35)
  15: StorageDead(_10)
    SourceInfo(src/wrapper.rs:570:34-570:35)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:570:13-570:36)
      kind: _5 = std::fmt::DebugStruct::<'_, '_>::field(move _6, move _7, move _9) -> [return: bb5, unwind: bb8]
  }
  preds [bb2]
  succs [bb5, bb8]

bb5
  0: StorageDead(_9)
    SourceInfo(src/wrapper.rs:570:35-570:36)
  1: StorageDead(_7)
    SourceInfo(src/wrapper.rs:570:35-570:36)
  2: StorageDead(_6)
    SourceInfo(src/wrapper.rs:570:35-570:36)
  3: StorageDead(_11)
    SourceInfo(src/wrapper.rs:570:36-570:37)
  4: StorageDead(_8)
    SourceInfo(src/wrapper.rs:570:36-570:37)
  5: StorageDead(_5)
    SourceInfo(src/wrapper.rs:570:36-570:37)
  6: _0 = const ()
    SourceInfo(src/wrapper.rs:569:30-571:10)
  7: StorageDead(_4)
    SourceInfo(src/wrapper.rs:571:9-571:10)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:571:9-571:10)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: StorageDead(_14)
    SourceInfo(src/wrapper.rs:572:79-572:80)
  1: StorageDead(_13)
    SourceInfo(src/wrapper.rs:572:79-572:80)
  2: StorageDead(_12)
    SourceInfo(src/wrapper.rs:572:79-572:80)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:572:79-572:80)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:574:2-574:2)
      kind: return
  }
  preds [bb5, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:567:1-574:2)
      kind: resume
  }
  preds [bb3, bb4]
  succs []

