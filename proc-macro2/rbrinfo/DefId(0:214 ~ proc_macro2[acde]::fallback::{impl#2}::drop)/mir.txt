bb0
  0: StorageLive(_2)
    SourceInfo(src/fallback.rs:128:13-128:22)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:128:25-128:35)
      kind: _2 = std::vec::Vec::<rcvec::RcVecIntoIter<TokenTree>>::new() -> [return: bb1, unwind: bb70]
  }
  preds []
  succs [bb1, bb70]

bb1
  0: FakeRead(ForLet(None), _2)
    SourceInfo(src/fallback.rs:128:13-128:22)
  1: StorageLive(_3)
    SourceInfo(src/fallback.rs:129:13-129:24)
  2: StorageLive(_4)
    SourceInfo(src/fallback.rs:129:33-129:53)
  3: StorageLive(_5)
    SourceInfo(src/fallback.rs:129:33-129:43)
  4: _5 = &mut ((*_1).0: rcvec::RcVec<TokenTree>)
    SourceInfo(src/fallback.rs:129:33-129:43)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:129:33-129:53)
      kind: _4 = rcvec::RcVec::<TokenTree>::get_mut(move _5) -> [return: bb2, unwind: bb69]
  }
  preds [bb0]
  succs [bb2, bb69]

bb2
  0: StorageDead(_5)
    SourceInfo(src/fallback.rs:129:52-129:53)
  1: PlaceMention(_4)
    SourceInfo(src/fallback.rs:129:33-129:53)
  2: _6 = discriminant(_4)
    SourceInfo(src/fallback.rs:129:33-129:53)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:129:27-129:53)
      kind: switchInt(move _6) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(src/fallback.rs:129:33-129:53)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:129:33-129:53)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/fallback.rs:130:13-130:24)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: _0 = const ()
    SourceInfo(src/fallback.rs:131:21-131:27)
  1: StorageDead(_4)
    SourceInfo(src/fallback.rs:132:10-132:11)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb56
  }
  preds [bb2, bb4]
  succs [bb56]

bb6
  0: StorageLive(_7)
    SourceInfo(src/fallback.rs:130:18-130:23)
  1: _7 = move ((_4 as Some).0: rcvec::RcVecMut<'_, TokenTree>)
    SourceInfo(src/fallback.rs:130:18-130:23)
  2: StorageLive(_8)
    SourceInfo(src/fallback.rs:130:28-130:40)
  3: StorageLive(_9)
    SourceInfo(src/fallback.rs:130:28-130:33)
  4: _9 = move _7
    SourceInfo(src/fallback.rs:130:28-130:33)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:130:28-130:40)
      kind: _8 = rcvec::RcVecMut::<'_, TokenTree>::take(move _9) -> [return: bb7, unwind: bb69]
  }
  preds [bb4]
  succs [bb7, bb69]

bb7
  0: StorageDead(_9)
    SourceInfo(src/fallback.rs:130:39-130:40)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:130:28-130:52)
      kind: _3 = <rcvec::RcVecBuilder<TokenTree> as std::iter::IntoIterator>::into_iter(move _8) -> [return: bb8, unwind: bb68]
  }
  preds [bb6]
  succs [bb8, bb68]

bb8
  0: StorageDead(_8)
    SourceInfo(src/fallback.rs:130:51-130:52)
  1: StorageDead(_7)
    SourceInfo(src/fallback.rs:130:51-130:52)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(src/fallback.rs:129:13-129:24)
  3: StorageDead(_4)
    SourceInfo(src/fallback.rs:132:10-132:11)
  4: StorageLive(_11)
    SourceInfo(src/fallback.rs:133:9-154:10)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:133:9-154:10)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/fallback.rs:133:9-154:10)
      kind: falseUnwind -> [real: bb10, unwind: bb67]
  }
  preds [bb8, bb54]
  succs [bb10, bb67]

bb10
  0: StorageLive(_13)
    SourceInfo(src/fallback.rs:134:13-149:14)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:134:13-149:14)
      kind: goto -> bb11
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/fallback.rs:134:13-149:14)
      kind: falseUnwind -> [real: bb12, unwind: bb67]
  }
  preds [bb10, bb39, bb44]
  succs [bb12, bb67]

bb12
  0: StorageLive(_14)
    SourceInfo(src/fallback.rs:134:37-134:51)
  1: StorageLive(_15)
    SourceInfo(src/fallback.rs:134:37-134:44)
  2: _15 = &mut _3
    SourceInfo(src/fallback.rs:134:37-134:44)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:134:37-134:51)
      kind: _14 = <rcvec::RcVecIntoIter<TokenTree> as std::iter::Iterator>::next(move _15) -> [return: bb13, unwind: bb67]
  }
  preds [bb11]
  succs [bb13, bb67]

bb13
  0: StorageDead(_15)
    SourceInfo(src/fallback.rs:134:50-134:51)
  1: PlaceMention(_14)
    SourceInfo(src/fallback.rs:134:37-134:51)
  2: _16 = discriminant(_14)
    SourceInfo(src/fallback.rs:134:37-134:51)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:134:23-134:34)
      kind: switchInt(move _16) -> [1: bb14, otherwise: bb37]
  }
  preds [bb12]
  succs [bb14, bb37]

bb14
  Terminator {
      source_info: SourceInfo(src/fallback.rs:134:23-134:34)
      kind: falseEdge -> [real: bb15, imaginary: bb37]
  }
  preds [bb13]
  succs [bb15, bb37]

bb15
  0: StorageLive(_17)
    SourceInfo(src/fallback.rs:134:28-134:33)
  1: _17 = move ((_14 as Some).0: TokenTree)
    SourceInfo(src/fallback.rs:134:28-134:33)
  2: StorageLive(_18)
    SourceInfo(src/fallback.rs:135:21-135:26)
  3: PlaceMention(_17)
    SourceInfo(src/fallback.rs:135:35-135:40)
  4: _19 = discriminant(_17)
    SourceInfo(src/fallback.rs:135:35-135:40)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:135:29-135:40)
      kind: switchInt(move _19) -> [0: bb16, otherwise: bb42]
  }
  preds [bb14]
  succs [bb16, bb42]

bb16
  Terminator {
      source_info: SourceInfo(src/fallback.rs:136:21-136:44)
      kind: falseEdge -> [real: bb17, imaginary: bb42]
  }
  preds [bb15]
  succs [bb17, bb42]

bb17
  0: StorageLive(_20)
    SourceInfo(src/fallback.rs:136:38-136:43)
  1: _20 = move ((_17 as Group).0: Group)
    SourceInfo(src/fallback.rs:136:38-136:43)
  2: _18 = move (_20.0: imp::Group)
    SourceInfo(src/fallback.rs:136:48-136:59)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:136:58-136:59)
      kind: drop(_20) -> [return: bb18, unwind: bb65]
  }
  preds [bb16]
  succs [bb18, bb65]

bb18
  0: StorageDead(_20)
    SourceInfo(src/fallback.rs:136:58-136:59)
  1: FakeRead(ForLet(None), _18)
    SourceInfo(src/fallback.rs:135:21-135:26)
  2: StorageLive(_22)
    SourceInfo(src/fallback.rs:140:21-140:26)
  3: PlaceMention(_18)
    SourceInfo(src/fallback.rs:140:35-140:40)
  4: _23 = discriminant(_18)
    SourceInfo(src/fallback.rs:140:35-140:40)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:140:29-140:40)
      kind: switchInt(move _23) -> [0: bb41, 1: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20, bb41]

bb19
  0: FakeRead(ForMatchedPlace(None), _18)
    SourceInfo(src/fallback.rs:140:35-140:40)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:140:35-140:40)
      kind: unreachable
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(src/fallback.rs:141:21-141:55)
      kind: falseEdge -> [real: bb21, imaginary: bb41]
  }
  preds [bb18]
  succs [bb21, bb41]

bb21
  0: StorageLive(_24)
    SourceInfo(src/fallback.rs:141:49-141:54)
  1: _24 = move ((_18 as Fallback).0: fallback::Group)
    SourceInfo(src/fallback.rs:141:49-141:54)
  2: _22 = move _24
    SourceInfo(src/fallback.rs:141:59-141:64)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:141:63-141:64)
      kind: drop(_24) -> [return: bb22, unwind: bb64]
  }
  preds [bb20]
  succs [bb22, bb64]

bb22
  0: StorageDead(_24)
    SourceInfo(src/fallback.rs:141:63-141:64)
  1: FakeRead(ForLet(None), _22)
    SourceInfo(src/fallback.rs:140:21-140:26)
  2: StorageLive(_26)
    SourceInfo(src/fallback.rs:144:21-144:30)
  3: _26 = move _22
    SourceInfo(src/fallback.rs:144:33-144:38)
  4: FakeRead(ForLet(None), _26)
    SourceInfo(src/fallback.rs:144:21-144:30)
  5: StorageLive(_27)
    SourceInfo(src/fallback.rs:145:38-145:66)
  6: StorageLive(_28)
    SourceInfo(src/fallback.rs:145:38-145:56)
  7: _28 = &mut ((_26.1: fallback::TokenStream).0: rcvec::RcVec<TokenTree>)
    SourceInfo(src/fallback.rs:145:38-145:56)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:145:38-145:66)
      kind: _27 = rcvec::RcVec::<TokenTree>::get_mut(move _28) -> [return: bb23, unwind: bb62]
  }
  preds [bb21]
  succs [bb23, bb62]

bb23
  0: StorageDead(_28)
    SourceInfo(src/fallback.rs:145:65-145:66)
  1: PlaceMention(_27)
    SourceInfo(src/fallback.rs:145:38-145:66)
  2: _29 = discriminant(_27)
    SourceInfo(src/fallback.rs:145:38-145:66)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:145:24-145:35)
      kind: switchInt(move _29) -> [1: bb24, otherwise: bb32]
  }
  preds [bb22]
  succs [bb24, bb32]

bb24
  Terminator {
      source_info: SourceInfo(src/fallback.rs:145:24-145:35)
      kind: falseEdge -> [real: bb25, imaginary: bb32]
  }
  preds [bb23]
  succs [bb25, bb32]

bb25
  0: StorageLive(_30)
    SourceInfo(src/fallback.rs:145:29-145:34)
  1: _30 = move ((_27 as Some).0: rcvec::RcVecMut<'_, TokenTree>)
    SourceInfo(src/fallback.rs:145:29-145:34)
  2: StorageLive(_31)
    SourceInfo(src/fallback.rs:146:21-146:40)
  3: StorageLive(_32)
    SourceInfo(src/fallback.rs:146:21-146:26)
  4: _32 = &mut _2
    SourceInfo(src/fallback.rs:146:21-146:26)
  5: StorageLive(_33)
    SourceInfo(src/fallback.rs:146:32-146:39)
  6: _33 = move _3
    SourceInfo(src/fallback.rs:146:32-146:39)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:146:21-146:40)
      kind: _31 = std::vec::Vec::<rcvec::RcVecIntoIter<TokenTree>>::push(move _32, move _33) -> [return: bb26, unwind: bb61]
  }
  preds [bb24]
  succs [bb26, bb61]

bb26
  0: StorageDead(_33)
    SourceInfo(src/fallback.rs:146:39-146:40)
  1: StorageDead(_32)
    SourceInfo(src/fallback.rs:146:39-146:40)
  2: StorageDead(_31)
    SourceInfo(src/fallback.rs:146:40-146:41)
  3: StorageLive(_34)
    SourceInfo(src/fallback.rs:147:31-147:55)
  4: StorageLive(_35)
    SourceInfo(src/fallback.rs:147:31-147:43)
  5: StorageLive(_36)
    SourceInfo(src/fallback.rs:147:31-147:36)
  6: _36 = move _30
    SourceInfo(src/fallback.rs:147:31-147:36)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:147:31-147:43)
      kind: _35 = rcvec::RcVecMut::<'_, TokenTree>::take(move _36) -> [return: bb27, unwind: bb62]
  }
  preds [bb25]
  succs [bb27, bb62]

bb27
  0: StorageDead(_36)
    SourceInfo(src/fallback.rs:147:42-147:43)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:147:31-147:55)
      kind: _34 = <rcvec::RcVecBuilder<TokenTree> as std::iter::IntoIterator>::into_iter(move _35) -> [return: bb28, unwind: bb60]
  }
  preds [bb26]
  succs [bb28, bb60]

bb28
  0: StorageDead(_35)
    SourceInfo(src/fallback.rs:147:54-147:55)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:147:21-147:28)
      kind: drop(_3) -> [return: bb29, unwind: bb30]
  }
  preds [bb27]
  succs [bb29, bb30]

bb29
  0: _3 = move _34
    SourceInfo(src/fallback.rs:147:21-147:28)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:147:54-147:55)
      kind: drop(_34) -> [return: bb31, unwind: bb62]
  }
  preds [bb28]
  succs [bb31, bb62]

bb30
  0: _3 = move _34
    SourceInfo(src/fallback.rs:147:21-147:28)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:147:54-147:55)
      kind: drop(_34) -> [return: bb62, unwind terminate(cleanup)]
  }
  preds [bb28]
  succs [bb62]

bb31
  0: StorageDead(_34)
    SourceInfo(src/fallback.rs:147:54-147:55)
  1: _12 = const ()
    SourceInfo(src/fallback.rs:145:67-148:18)
  2: StorageDead(_30)
    SourceInfo(src/fallback.rs:148:17-148:18)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:145:17-148:18)
      kind: goto -> bb33
  }
  preds [bb29]
  succs [bb33]

bb32
  0: _12 = const ()
    SourceInfo(src/fallback.rs:148:18-148:18)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:145:17-148:18)
      kind: goto -> bb33
  }
  preds [bb23, bb24]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(src/fallback.rs:149:13-149:14)
      kind: drop(_26) -> [return: bb34, unwind: bb63]
  }
  preds [bb31, bb32]
  succs [bb34, bb63]

bb34
  0: StorageDead(_26)
    SourceInfo(src/fallback.rs:149:13-149:14)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:149:13-149:14)
      kind: drop(_22) -> [return: bb35, unwind: bb64]
  }
  preds [bb33]
  succs [bb35, bb64]

bb35
  0: StorageDead(_22)
    SourceInfo(src/fallback.rs:149:13-149:14)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:149:13-149:14)
      kind: drop(_18) -> [return: bb36, unwind: bb65]
  }
  preds [bb34]
  succs [bb36, bb65]

bb36
  0: StorageDead(_18)
    SourceInfo(src/fallback.rs:149:13-149:14)
  1: StorageDead(_27)
    SourceInfo(src/fallback.rs:149:13-149:14)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:149:13-149:14)
      kind: drop(_17) -> [return: bb38, unwind: bb66]
  }
  preds [bb35]
  succs [bb38, bb66]

bb37
  0: StorageLive(_38)
    SourceInfo(src/fallback.rs:134:13-149:14)
  1: _13 = const ()
    SourceInfo(src/fallback.rs:134:13-149:14)
  2: StorageDead(_38)
    SourceInfo(src/fallback.rs:149:13-149:14)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:149:13-149:14)
      kind: drop(_14) -> [return: bb40, unwind: bb67]
  }
  preds [bb13, bb14]
  succs [bb40, bb67]

bb38
  0: StorageDead(_17)
    SourceInfo(src/fallback.rs:149:13-149:14)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:149:13-149:14)
      kind: drop(_14) -> [return: bb39, unwind: bb67]
  }
  preds [bb36]
  succs [bb39, bb67]

bb39
  0: StorageDead(_14)
    SourceInfo(src/fallback.rs:149:13-149:14)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:134:13-149:14)
      kind: goto -> bb11
  }
  preds [bb38]
  succs [bb11]

bb40
  0: StorageDead(_14)
    SourceInfo(src/fallback.rs:149:13-149:14)
  1: StorageDead(_13)
    SourceInfo(src/fallback.rs:149:13-149:14)
  2: StorageLive(_40)
    SourceInfo(src/fallback.rs:150:19-150:30)
  3: StorageLive(_41)
    SourceInfo(src/fallback.rs:150:19-150:24)
  4: _41 = &mut _2
    SourceInfo(src/fallback.rs:150:19-150:24)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:150:19-150:30)
      kind: _40 = std::vec::Vec::<rcvec::RcVecIntoIter<TokenTree>>::pop(move _41) -> [return: bb45, unwind: bb67]
  }
  preds [bb37]
  succs [bb45, bb67]

bb41
  0: StorageDead(_22)
    SourceInfo(src/fallback.rs:149:13-149:14)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:149:13-149:14)
      kind: drop(_18) -> [return: bb42, unwind: bb65]
  }
  preds [bb18, bb20]
  succs [bb42, bb65]

bb42
  0: StorageDead(_18)
    SourceInfo(src/fallback.rs:149:13-149:14)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:149:13-149:14)
      kind: drop(_17) -> [return: bb43, unwind: bb66]
  }
  preds [bb15, bb16, bb41]
  succs [bb43, bb66]

bb43
  0: StorageDead(_17)
    SourceInfo(src/fallback.rs:149:13-149:14)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:149:13-149:14)
      kind: drop(_14) -> [return: bb44, unwind: bb67]
  }
  preds [bb42]
  succs [bb44, bb67]

bb44
  0: StorageDead(_14)
    SourceInfo(src/fallback.rs:149:13-149:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb11
  }
  preds [bb43]
  succs [bb11]

bb45
  0: StorageDead(_41)
    SourceInfo(src/fallback.rs:150:29-150:30)
  1: PlaceMention(_40)
    SourceInfo(src/fallback.rs:150:19-150:30)
  2: _42 = discriminant(_40)
    SourceInfo(src/fallback.rs:150:19-150:30)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:150:13-150:30)
      kind: switchInt(move _42) -> [0: bb48, 1: bb47, otherwise: bb46]
  }
  preds [bb40]
  succs [bb46, bb47, bb48]

bb46
  0: FakeRead(ForMatchedPlace(None), _40)
    SourceInfo(src/fallback.rs:150:19-150:30)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:150:19-150:30)
      kind: unreachable
  }
  preds [bb45]
  succs []

bb47
  Terminator {
      source_info: SourceInfo(src/fallback.rs:151:17-151:27)
      kind: falseEdge -> [real: bb49, imaginary: bb48]
  }
  preds [bb45]
  succs [bb48, bb49]

bb48
  0: _0 = const ()
    SourceInfo(src/fallback.rs:152:25-152:31)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:154:9-154:10)
      kind: drop(_40) -> [return: bb55, unwind: bb67]
  }
  preds [bb45, bb47]
  succs [bb55, bb67]

bb49
  0: StorageLive(_43)
    SourceInfo(src/fallback.rs:151:22-151:26)
  1: _43 = move ((_40 as Some).0: rcvec::RcVecIntoIter<TokenTree>)
    SourceInfo(src/fallback.rs:151:22-151:26)
  2: StorageLive(_44)
    SourceInfo(src/fallback.rs:151:41-151:45)
  3: _44 = move _43
    SourceInfo(src/fallback.rs:151:41-151:45)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:151:31-151:38)
      kind: drop(_3) -> [return: bb50, unwind: bb51]
  }
  preds [bb47]
  succs [bb50, bb51]

bb50
  0: _3 = move _44
    SourceInfo(src/fallback.rs:151:31-151:38)
  1: _12 = const ()
    SourceInfo(src/fallback.rs:151:31-151:45)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:151:44-151:45)
      kind: drop(_44) -> [return: bb52, unwind: bb58]
  }
  preds [bb49]
  succs [bb52, bb58]

bb51
  0: _3 = move _44
    SourceInfo(src/fallback.rs:151:31-151:38)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:151:44-151:45)
      kind: drop(_44) -> [return: bb58, unwind terminate(cleanup)]
  }
  preds [bb49]
  succs [bb58]

bb52
  0: StorageDead(_44)
    SourceInfo(src/fallback.rs:151:44-151:45)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:151:44-151:45)
      kind: drop(_43) -> [return: bb53, unwind: bb59]
  }
  preds [bb50]
  succs [bb53, bb59]

bb53
  0: StorageDead(_43)
    SourceInfo(src/fallback.rs:151:44-151:45)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:154:9-154:10)
      kind: drop(_40) -> [return: bb54, unwind: bb67]
  }
  preds [bb52]
  succs [bb54, bb67]

bb54
  0: StorageDead(_40)
    SourceInfo(src/fallback.rs:154:9-154:10)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:133:9-154:10)
      kind: goto -> bb9
  }
  preds [bb53]
  succs [bb9]

bb55
  0: StorageDead(_40)
    SourceInfo(src/fallback.rs:154:9-154:10)
  1: StorageDead(_11)
    SourceInfo(src/fallback.rs:154:9-154:10)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:155:5-155:6)
      kind: drop(_3) -> [return: bb56, unwind: bb69]
  }
  preds [bb48]
  succs [bb56, bb69]

bb56
  0: StorageDead(_3)
    SourceInfo(src/fallback.rs:155:5-155:6)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:155:5-155:6)
      kind: drop(_2) -> [return: bb57, unwind: bb70]
  }
  preds [bb5, bb55]
  succs [bb57, bb70]

bb57
  0: StorageDead(_2)
    SourceInfo(src/fallback.rs:155:5-155:6)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:155:6-155:6)
      kind: return
  }
  preds [bb56]
  succs []

bb58
  Terminator {
      source_info: SourceInfo(src/fallback.rs:151:44-151:45)
      kind: drop(_43) -> [return: bb59, unwind terminate(cleanup)]
  }
  preds [bb50, bb51]
  succs [bb59]

bb59
  Terminator {
      source_info: SourceInfo(src/fallback.rs:154:9-154:10)
      kind: drop(_40) -> [return: bb67, unwind terminate(cleanup)]
  }
  preds [bb52, bb58]
  succs [bb67]

bb60
  Terminator {
      source_info: SourceInfo(src/fallback.rs:147:54-147:55)
      kind: drop(_35) -> [return: bb62, unwind terminate(cleanup)]
  }
  preds [bb27]
  succs [bb62]

bb61
  Terminator {
      source_info: SourceInfo(src/fallback.rs:146:39-146:40)
      kind: drop(_33) -> [return: bb62, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb62]

bb62
  Terminator {
      source_info: SourceInfo(src/fallback.rs:149:13-149:14)
      kind: drop(_26) -> [return: bb63, unwind terminate(cleanup)]
  }
  preds [bb22, bb26, bb29, bb30, bb60, bb61]
  succs [bb63]

bb63
  Terminator {
      source_info: SourceInfo(src/fallback.rs:149:13-149:14)
      kind: drop(_22) -> [return: bb64, unwind terminate(cleanup)]
  }
  preds [bb33, bb62]
  succs [bb64]

bb64
  Terminator {
      source_info: SourceInfo(src/fallback.rs:149:13-149:14)
      kind: drop(_18) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb21, bb34, bb63]
  succs [bb65]

bb65
  Terminator {
      source_info: SourceInfo(src/fallback.rs:149:13-149:14)
      kind: drop(_17) -> [return: bb66, unwind terminate(cleanup)]
  }
  preds [bb17, bb35, bb41, bb64]
  succs [bb66]

bb66
  Terminator {
      source_info: SourceInfo(src/fallback.rs:149:13-149:14)
      kind: drop(_14) -> [return: bb67, unwind terminate(cleanup)]
  }
  preds [bb36, bb42, bb65]
  succs [bb67]

bb67
  Terminator {
      source_info: SourceInfo(src/fallback.rs:155:5-155:6)
      kind: drop(_3) -> [return: bb69, unwind terminate(cleanup)]
  }
  preds [bb9, bb11, bb12, bb37, bb38, bb40, bb43, bb48, bb53, bb59, bb66]
  succs [bb69]

bb68
  Terminator {
      source_info: SourceInfo(src/fallback.rs:130:51-130:52)
      kind: drop(_8) -> [return: bb69, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb69]

bb69
  Terminator {
      source_info: SourceInfo(src/fallback.rs:155:5-155:6)
      kind: drop(_2) -> [return: bb70, unwind terminate(cleanup)]
  }
  preds [bb1, bb6, bb55, bb67, bb68]
  succs [bb70]

bb70
  Terminator {
      source_info: SourceInfo(src/fallback.rs:127:5-155:6)
      kind: resume
  }
  preds [bb0, bb56, bb69]
  succs []

