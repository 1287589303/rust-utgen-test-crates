bb0
  0: StorageLive(_2)
    SourceInfo(src/parse.rs:364:11-364:31)
  1: StorageLive(_3)
    SourceInfo(src/parse.rs:364:25-364:30)
  2: _3 = _1
    SourceInfo(src/parse.rs:364:25-364:30)
  Terminator {
      source_info: SourceInfo(src/parse.rs:364:11-364:31)
      kind: _2 = parse::ident_not_raw(move _3) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_3)
    SourceInfo(src/parse.rs:364:30-364:31)
  1: PlaceMention(_2)
    SourceInfo(src/parse.rs:364:11-364:31)
  2: _4 = discriminant(_2)
    SourceInfo(src/parse.rs:364:11-364:31)
  Terminator {
      source_info: SourceInfo(src/parse.rs:364:5-364:31)
      kind: switchInt(move _4) -> [0: bb3, 1: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(src/parse.rs:364:11-364:31)
  Terminator {
      source_info: SourceInfo(src/parse.rs:364:11-364:31)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/parse.rs:365:9-365:23)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: _0 = _1
    SourceInfo(src/parse.rs:366:24-366:29)
  Terminator {
      source_info: SourceInfo(src/parse.rs:366:24-366:29)
      kind: goto -> bb6
  }
  preds [bb1, bb3]
  succs [bb6]

bb5
  0: StorageLive(_5)
    SourceInfo(src/parse.rs:365:13-365:18)
  1: _5 = (((_2 as Ok).0: (parse::Cursor<'_>, &str)).0: parse::Cursor<'_>)
    SourceInfo(src/parse.rs:365:13-365:18)
  2: _0 = _5
    SourceInfo(src/parse.rs:365:27-365:32)
  3: StorageDead(_5)
    SourceInfo(src/parse.rs:365:31-365:32)
  Terminator {
      source_info: SourceInfo(src/parse.rs:365:31-365:32)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb6
  0: StorageDead(_2)
    SourceInfo(src/parse.rs:368:1-368:2)
  Terminator {
      source_info: SourceInfo(src/parse.rs:368:2-368:2)
      kind: return
  }
  preds [bb4, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/parse.rs:363:1-368:2)
      kind: resume
  }
  preds [bb0]
  succs []

