bb0
  0: StorageLive(_2)
    SourceInfo(src/parse.rs:625:9-631:10)
  1: StorageLive(_3)
    SourceInfo(src/parse.rs:625:15-625:28)
  2: StorageLive(_4)
    SourceInfo(src/parse.rs:625:15-625:21)
  3: _4 = &mut (*_1)
    SourceInfo(src/parse.rs:625:15-625:21)
  Terminator {
      source_info: SourceInfo(src/parse.rs:625:15-625:28)
      kind: _3 = <I as std::iter::Iterator>::next(move _4) -> [return: bb1, unwind: bb56]
  }
  preds []
  succs [bb1, bb56]

bb1
  0: StorageDead(_4)
    SourceInfo(src/parse.rs:625:27-625:28)
  1: PlaceMention(_3)
    SourceInfo(src/parse.rs:625:15-625:28)
  2: _5 = discriminant(_3)
    SourceInfo(src/parse.rs:625:15-625:28)
  Terminator {
      source_info: SourceInfo(src/parse.rs:625:9-625:28)
      kind: switchInt(move _5) -> [0: bb4, 1: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(src/parse.rs:625:15-625:28)
  Terminator {
      source_info: SourceInfo(src/parse.rs:625:15-625:28)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/parse.rs:626:13-626:26)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_10)
    SourceInfo(src/parse.rs:630:32-630:38)
  1: _10 = parse::Reject
    SourceInfo(src/parse.rs:630:32-630:38)
  2: _0 = std::result::Result::<char, parse::Reject>::Err(move _10)
    SourceInfo(src/parse.rs:630:28-630:39)
  3: StorageDead(_10)
    SourceInfo(src/parse.rs:630:38-630:39)
  Terminator {
      source_info: SourceInfo(src/parse.rs:630:21-630:39)
      kind: goto -> bb54
  }
  preds [bb1, bb3]
  succs [bb54]

bb5
  0: StorageLive(_6)
    SourceInfo(src/parse.rs:626:22-626:24)
  1: _6 = (((_3 as Some).0: (usize, char)).1: char)
    SourceInfo(src/parse.rs:626:22-626:24)
  2: PlaceMention(_6)
    SourceInfo(src/parse.rs:626:36-626:38)
  Terminator {
      source_info: SourceInfo(src/parse.rs:626:30-626:38)
      kind: switchInt(_6) -> [123: bb7, otherwise: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_8)
    SourceInfo(src/parse.rs:628:33-628:39)
  1: _8 = parse::Reject
    SourceInfo(src/parse.rs:628:33-628:39)
  2: _0 = std::result::Result::<char, parse::Reject>::Err(move _8)
    SourceInfo(src/parse.rs:628:29-628:40)
  3: StorageDead(_8)
    SourceInfo(src/parse.rs:628:39-628:40)
  4: StorageDead(_6)
    SourceInfo(src/parse.rs:629:13-629:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb54
  }
  preds [bb5, bb7]
  succs [bb54]

bb7
  Terminator {
      source_info: SourceInfo(src/parse.rs:670:22-670:25)
      kind: falseEdge -> [real: bb8, imaginary: bb6]
  }
  preds [bb5]
  succs [bb6, bb8]

bb8
  0: _2 = _6
    SourceInfo(src/parse.rs:627:25-627:27)
  1: StorageDead(_6)
    SourceInfo(src/parse.rs:629:13-629:14)
  2: StorageDead(_3)
    SourceInfo(src/parse.rs:631:9-631:10)
  3: StorageDead(_2)
    SourceInfo(src/parse.rs:631:9-631:10)
  4: StorageLive(_11)
    SourceInfo(src/parse.rs:671:9-671:18)
  5: _11 = const 0_u32
    SourceInfo(src/parse.rs:671:21-671:22)
  6: FakeRead(ForLet(None), _11)
    SourceInfo(src/parse.rs:671:9-671:18)
  7: StorageLive(_12)
    SourceInfo(src/parse.rs:672:9-672:16)
  8: _12 = const 0_i32
    SourceInfo(src/parse.rs:672:19-672:20)
  9: FakeRead(ForLet(None), _12)
    SourceInfo(src/parse.rs:672:9-672:16)
  10: StorageLive(_13)
    SourceInfo(src/parse.rs:673:5-688:6)
  11: StorageLive(_14)
    SourceInfo(src/parse.rs:673:20-673:25)
  12: StorageLive(_15)
    SourceInfo(src/parse.rs:673:20-673:25)
  13: _15 = move _1
    SourceInfo(src/parse.rs:673:20-673:25)
  Terminator {
      source_info: SourceInfo(src/parse.rs:673:20-673:25)
      kind: _14 = <&mut I as std::iter::IntoIterator>::into_iter(move _15) -> [return: bb9, unwind: bb56]
  }
  preds [bb7]
  succs [bb9, bb56]

bb9
  0: StorageDead(_15)
    SourceInfo(src/parse.rs:673:24-673:25)
  1: PlaceMention(_14)
    SourceInfo(src/parse.rs:673:20-673:25)
  2: StorageLive(_16)
    SourceInfo(src/parse.rs:673:20-673:25)
  3: _16 = move _14
    SourceInfo(src/parse.rs:673:20-673:25)
  Terminator {
      source_info: SourceInfo(src/parse.rs:673:5-688:6)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/parse.rs:673:5-688:6)
      kind: falseUnwind -> [real: bb11, unwind: bb56]
  }
  preds [bb9, bb38, bb51]
  succs [bb11, bb56]

bb11
  0: StorageLive(_18)
    SourceInfo(src/parse.rs:673:20-673:25)
  1: StorageLive(_19)
    SourceInfo(src/parse.rs:673:20-673:25)
  2: StorageLive(_20)
    SourceInfo(src/parse.rs:673:20-673:25)
  3: StorageLive(_21)
    SourceInfo(src/parse.rs:673:20-673:25)
  4: _21 = &mut _16
    SourceInfo(src/parse.rs:673:20-673:25)
  5: _20 = &mut (*_21)
    SourceInfo(src/parse.rs:673:20-673:25)
  Terminator {
      source_info: SourceInfo(src/parse.rs:673:20-673:25)
      kind: _19 = <&mut I as std::iter::Iterator>::next(move _20) -> [return: bb12, unwind: bb56]
  }
  preds [bb10]
  succs [bb12, bb56]

bb12
  0: StorageDead(_20)
    SourceInfo(src/parse.rs:673:24-673:25)
  1: PlaceMention(_19)
    SourceInfo(src/parse.rs:673:20-673:25)
  2: _22 = discriminant(_19)
    SourceInfo(src/parse.rs:673:20-673:25)
  Terminator {
      source_info: SourceInfo(src/parse.rs:673:20-673:25)
      kind: switchInt(move _22) -> [0: bb14, 1: bb15, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _19)
    SourceInfo(src/parse.rs:673:20-673:25)
  Terminator {
      source_info: SourceInfo(src/parse.rs:673:20-673:25)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(src/parse.rs:673:5-688:6)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_24)
    SourceInfo(src/parse.rs:673:13-673:15)
  1: _24 = (((_19 as Some).0: (usize, char)).1: char)
    SourceInfo(src/parse.rs:673:13-673:15)
  2: StorageLive(_25)
    SourceInfo(src/parse.rs:674:13-674:18)
  3: PlaceMention(_24)
    SourceInfo(src/parse.rs:674:27-674:29)
  4: _31 = Le(const '0', _24)
    SourceInfo(src/parse.rs:675:13-675:22)
  Terminator {
      source_info: SourceInfo(src/parse.rs:675:13-675:22)
      kind: switchInt(move _31) -> [0: bb19, otherwise: bb28]
  }
  preds [bb12, bb14]
  succs [bb19, bb28]

bb16
  0: _13 = const ()
    SourceInfo(src/parse.rs:673:5-688:6)
  Terminator {
      source_info: SourceInfo(src/parse.rs:673:5-688:6)
      kind: goto -> bb53
  }
  preds [bb14]
  succs [bb53]

bb17
  0: _13 = const ()
    SourceInfo(src/parse.rs:680:18-680:23)
  Terminator {
      source_info: SourceInfo(src/parse.rs:680:18-680:23)
      kind: goto -> bb52
  }
  preds [bb23, bb25, bb39, bb42, bb42]
  succs [bb52]

bb18
  Terminator {
      source_info: SourceInfo(src/parse.rs:675:13-675:22)
      kind: falseEdge -> [real: bb29, imaginary: bb19]
  }
  preds [bb28]
  succs [bb19, bb29]

bb19
  0: _29 = Le(const 'a', _24)
    SourceInfo(src/parse.rs:676:13-676:22)
  Terminator {
      source_info: SourceInfo(src/parse.rs:676:13-676:22)
      kind: switchInt(move _29) -> [0: bb21, otherwise: bb27]
  }
  preds [bb15, bb18, bb28]
  succs [bb21, bb27]

bb20
  Terminator {
      source_info: SourceInfo(src/parse.rs:676:13-676:22)
      kind: falseEdge -> [real: bb31, imaginary: bb21]
  }
  preds [bb27]
  succs [bb21, bb31]

bb21
  0: _27 = Le(const 'A', _24)
    SourceInfo(src/parse.rs:677:13-677:22)
  Terminator {
      source_info: SourceInfo(src/parse.rs:677:13-677:22)
      kind: switchInt(move _27) -> [0: bb23, otherwise: bb26]
  }
  preds [bb19, bb20, bb27]
  succs [bb23, bb26]

bb22
  Terminator {
      source_info: SourceInfo(src/parse.rs:677:13-677:22)
      kind: falseEdge -> [real: bb34, imaginary: bb23]
  }
  preds [bb26]
  succs [bb23, bb34]

bb23
  Terminator {
      source_info: SourceInfo(src/parse.rs:674:21-674:29)
      kind: switchInt(_24) -> [95: bb24, 125: bb25, otherwise: bb17]
  }
  preds [bb21, bb22, bb26]
  succs [bb17, bb24, bb25]

bb24
  Terminator {
      source_info: SourceInfo(src/parse.rs:678:13-678:16)
      kind: falseEdge -> [real: bb37, imaginary: bb25]
  }
  preds [bb23]
  succs [bb25, bb37]

bb25
  Terminator {
      source_info: SourceInfo(src/parse.rs:679:13-679:16)
      kind: falseEdge -> [real: bb40, imaginary: bb17]
  }
  preds [bb23, bb24, bb39]
  succs [bb17, bb40]

bb26
  0: _28 = Le(_24, const 'F')
    SourceInfo(src/parse.rs:677:13-677:22)
  Terminator {
      source_info: SourceInfo(src/parse.rs:677:13-677:22)
      kind: switchInt(move _28) -> [0: bb23, otherwise: bb22]
  }
  preds [bb21]
  succs [bb22, bb23]

bb27
  0: _30 = Le(_24, const 'f')
    SourceInfo(src/parse.rs:676:13-676:22)
  Terminator {
      source_info: SourceInfo(src/parse.rs:676:13-676:22)
      kind: switchInt(move _30) -> [0: bb21, otherwise: bb20]
  }
  preds [bb19]
  succs [bb20, bb21]

bb28
  0: _32 = Le(_24, const '9')
    SourceInfo(src/parse.rs:675:13-675:22)
  Terminator {
      source_info: SourceInfo(src/parse.rs:675:13-675:22)
      kind: switchInt(move _32) -> [0: bb19, otherwise: bb18]
  }
  preds [bb15]
  succs [bb18, bb19]

bb29
  0: StorageLive(_33)
    SourceInfo(src/parse.rs:675:26-675:34)
  1: StorageLive(_34)
    SourceInfo(src/parse.rs:675:26-675:28)
  2: _34 = _24
    SourceInfo(src/parse.rs:675:26-675:28)
  3: _33 = move _34 as u8 (IntToInt)
    SourceInfo(src/parse.rs:675:26-675:34)
  4: StorageDead(_34)
    SourceInfo(src/parse.rs:675:33-675:34)
  5: _35 = SubWithOverflow(_33, const 48_u8)
    SourceInfo(src/parse.rs:675:26-675:41)
  Terminator {
      source_info: SourceInfo(src/parse.rs:675:26-675:41)
      kind: assert(!move (_35.1: bool), "attempt to compute `{} - {}`, which would overflow", move _33, const 48_u8) -> [success: bb30, unwind: bb56]
  }
  preds [bb18]
  succs [bb30, bb56]

bb30
  0: _25 = move (_35.0: u8)
    SourceInfo(src/parse.rs:675:26-675:41)
  1: StorageDead(_33)
    SourceInfo(src/parse.rs:675:40-675:41)
  Terminator {
      source_info: SourceInfo(src/parse.rs:675:40-675:41)
      kind: goto -> bb45
  }
  preds [bb29]
  succs [bb45]

bb31
  0: StorageLive(_36)
    SourceInfo(src/parse.rs:676:26-676:39)
  1: StorageLive(_37)
    SourceInfo(src/parse.rs:676:31-676:39)
  2: StorageLive(_38)
    SourceInfo(src/parse.rs:676:31-676:33)
  3: _38 = _24
    SourceInfo(src/parse.rs:676:31-676:33)
  4: _37 = move _38 as u8 (IntToInt)
    SourceInfo(src/parse.rs:676:31-676:39)
  5: StorageDead(_38)
    SourceInfo(src/parse.rs:676:38-676:39)
  6: _39 = AddWithOverflow(const 10_u8, _37)
    SourceInfo(src/parse.rs:676:26-676:39)
  Terminator {
      source_info: SourceInfo(src/parse.rs:676:26-676:39)
      kind: assert(!move (_39.1: bool), "attempt to compute `{} + {}`, which would overflow", const 10_u8, move _37) -> [success: bb32, unwind: bb56]
  }
  preds [bb20]
  succs [bb32, bb56]

bb32
  0: _36 = move (_39.0: u8)
    SourceInfo(src/parse.rs:676:26-676:39)
  1: StorageDead(_37)
    SourceInfo(src/parse.rs:676:38-676:39)
  2: _40 = SubWithOverflow(_36, const 97_u8)
    SourceInfo(src/parse.rs:676:26-676:46)
  Terminator {
      source_info: SourceInfo(src/parse.rs:676:26-676:46)
      kind: assert(!move (_40.1: bool), "attempt to compute `{} - {}`, which would overflow", move _36, const 97_u8) -> [success: bb33, unwind: bb56]
  }
  preds [bb31]
  succs [bb33, bb56]

bb33
  0: _25 = move (_40.0: u8)
    SourceInfo(src/parse.rs:676:26-676:46)
  1: StorageDead(_36)
    SourceInfo(src/parse.rs:676:45-676:46)
  Terminator {
      source_info: SourceInfo(src/parse.rs:676:45-676:46)
      kind: goto -> bb45
  }
  preds [bb32]
  succs [bb45]

bb34
  0: StorageLive(_41)
    SourceInfo(src/parse.rs:677:26-677:39)
  1: StorageLive(_42)
    SourceInfo(src/parse.rs:677:31-677:39)
  2: StorageLive(_43)
    SourceInfo(src/parse.rs:677:31-677:33)
  3: _43 = _24
    SourceInfo(src/parse.rs:677:31-677:33)
  4: _42 = move _43 as u8 (IntToInt)
    SourceInfo(src/parse.rs:677:31-677:39)
  5: StorageDead(_43)
    SourceInfo(src/parse.rs:677:38-677:39)
  6: _44 = AddWithOverflow(const 10_u8, _42)
    SourceInfo(src/parse.rs:677:26-677:39)
  Terminator {
      source_info: SourceInfo(src/parse.rs:677:26-677:39)
      kind: assert(!move (_44.1: bool), "attempt to compute `{} + {}`, which would overflow", const 10_u8, move _42) -> [success: bb35, unwind: bb56]
  }
  preds [bb22]
  succs [bb35, bb56]

bb35
  0: _41 = move (_44.0: u8)
    SourceInfo(src/parse.rs:677:26-677:39)
  1: StorageDead(_42)
    SourceInfo(src/parse.rs:677:38-677:39)
  2: _45 = SubWithOverflow(_41, const 65_u8)
    SourceInfo(src/parse.rs:677:26-677:46)
  Terminator {
      source_info: SourceInfo(src/parse.rs:677:26-677:46)
      kind: assert(!move (_45.1: bool), "attempt to compute `{} - {}`, which would overflow", move _41, const 65_u8) -> [success: bb36, unwind: bb56]
  }
  preds [bb34]
  succs [bb36, bb56]

bb36
  0: _25 = move (_45.0: u8)
    SourceInfo(src/parse.rs:677:26-677:46)
  1: StorageDead(_41)
    SourceInfo(src/parse.rs:677:45-677:46)
  Terminator {
      source_info: SourceInfo(src/parse.rs:677:45-677:46)
      kind: goto -> bb45
  }
  preds [bb35]
  succs [bb45]

bb37
  0: _26 = &fake shallow _24
    SourceInfo(src/parse.rs:674:27-674:29)
  1: StorageLive(_46)
    SourceInfo(src/parse.rs:678:20-678:27)
  2: StorageLive(_47)
    SourceInfo(src/parse.rs:678:20-678:23)
  3: _47 = _12
    SourceInfo(src/parse.rs:678:20-678:23)
  4: _46 = Gt(move _47, const 0_i32)
    SourceInfo(src/parse.rs:678:20-678:27)
  Terminator {
      source_info: SourceInfo(src/parse.rs:678:20-678:27)
      kind: switchInt(move _46) -> [0: bb39, otherwise: bb38]
  }
  preds [bb24]
  succs [bb38, bb39]

bb38
  0: StorageDead(_47)
    SourceInfo(src/parse.rs:678:26-678:27)
  1: StorageDead(_46)
    SourceInfo(src/parse.rs:678:26-678:27)
  2: FakeRead(ForMatchGuard, _26)
    SourceInfo(src/parse.rs:678:26-678:27)
  3: StorageDead(_25)
    SourceInfo(src/parse.rs:688:5-688:6)
  4: StorageDead(_24)
    SourceInfo(src/parse.rs:688:5-688:6)
  5: StorageDead(_21)
    SourceInfo(src/parse.rs:688:5-688:6)
  6: StorageDead(_19)
    SourceInfo(src/parse.rs:688:5-688:6)
  7: StorageDead(_18)
    SourceInfo(src/parse.rs:688:5-688:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb10
  }
  preds [bb37]
  succs [bb10]

bb39
  0: StorageDead(_47)
    SourceInfo(src/parse.rs:678:26-678:27)
  1: StorageDead(_46)
    SourceInfo(src/parse.rs:678:26-678:27)
  Terminator {
      source_info: SourceInfo(src/parse.rs:678:20-678:27)
      kind: falseEdge -> [real: bb17, imaginary: bb25]
  }
  preds [bb37]
  succs [bb17, bb25]

bb40
  0: _26 = &fake shallow _24
    SourceInfo(src/parse.rs:674:27-674:29)
  1: StorageLive(_49)
    SourceInfo(src/parse.rs:679:20-679:27)
  2: StorageLive(_50)
    SourceInfo(src/parse.rs:679:20-679:23)
  3: _50 = _12
    SourceInfo(src/parse.rs:679:20-679:23)
  4: _49 = Gt(move _50, const 0_i32)
    SourceInfo(src/parse.rs:679:20-679:27)
  Terminator {
      source_info: SourceInfo(src/parse.rs:679:20-679:27)
      kind: switchInt(move _49) -> [0: bb42, otherwise: bb41]
  }
  preds [bb25]
  succs [bb41, bb42]

bb41
  0: StorageDead(_50)
    SourceInfo(src/parse.rs:679:26-679:27)
  1: StorageDead(_49)
    SourceInfo(src/parse.rs:679:26-679:27)
  2: FakeRead(ForMatchGuard, _26)
    SourceInfo(src/parse.rs:679:26-679:27)
  3: StorageLive(_52)
    SourceInfo(src/parse.rs:679:38-679:59)
  4: StorageLive(_53)
    SourceInfo(src/parse.rs:679:53-679:58)
  5: _53 = _11
    SourceInfo(src/parse.rs:679:53-679:58)
  Terminator {
      source_info: SourceInfo(src/parse.rs:679:38-679:59)
      kind: _52 = std::char::from_u32(move _53) -> [return: bb43, unwind: bb56]
  }
  preds [bb40]
  succs [bb43, bb56]

bb42
  0: StorageDead(_50)
    SourceInfo(src/parse.rs:679:26-679:27)
  1: StorageDead(_49)
    SourceInfo(src/parse.rs:679:26-679:27)
  Terminator {
      source_info: SourceInfo(src/parse.rs:679:20-679:27)
      kind: falseEdge -> [real: bb17, imaginary: bb17]
  }
  preds [bb40]
  succs [bb17, bb17]

bb43
  0: StorageDead(_53)
    SourceInfo(src/parse.rs:679:58-679:59)
  1: StorageLive(_54)
    SourceInfo(src/parse.rs:679:66-679:72)
  2: _54 = parse::Reject
    SourceInfo(src/parse.rs:679:66-679:72)
  Terminator {
      source_info: SourceInfo(src/parse.rs:679:38-679:73)
      kind: _0 = std::option::Option::<char>::ok_or::<parse::Reject>(move _52, move _54) -> [return: bb44, unwind: bb56]
  }
  preds [bb41]
  succs [bb44, bb56]

bb44
  0: StorageDead(_54)
    SourceInfo(src/parse.rs:679:72-679:73)
  1: StorageDead(_52)
    SourceInfo(src/parse.rs:679:72-679:73)
  2: StorageDead(_25)
    SourceInfo(src/parse.rs:688:5-688:6)
  3: StorageDead(_24)
    SourceInfo(src/parse.rs:688:5-688:6)
  4: StorageDead(_21)
    SourceInfo(src/parse.rs:688:5-688:6)
  5: StorageDead(_19)
    SourceInfo(src/parse.rs:688:5-688:6)
  6: StorageDead(_18)
    SourceInfo(src/parse.rs:688:5-688:6)
  7: StorageDead(_16)
    SourceInfo(src/parse.rs:688:5-688:6)
  8: StorageDead(_14)
    SourceInfo(src/parse.rs:688:5-688:6)
  9: StorageDead(_13)
    SourceInfo(src/parse.rs:688:5-688:6)
  10: StorageDead(_12)
    SourceInfo(src/parse.rs:690:1-690:2)
  11: StorageDead(_11)
    SourceInfo(src/parse.rs:690:1-690:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb43]
  succs [bb55]

bb45
  0: FakeRead(ForLet(None), _25)
    SourceInfo(src/parse.rs:674:13-674:18)
  1: StorageLive(_56)
    SourceInfo(src/parse.rs:682:9-684:10)
  2: StorageLive(_57)
    SourceInfo(src/parse.rs:682:12-682:20)
  3: StorageLive(_58)
    SourceInfo(src/parse.rs:682:12-682:15)
  4: _58 = _12
    SourceInfo(src/parse.rs:682:12-682:15)
  5: _57 = Eq(move _58, const 6_i32)
    SourceInfo(src/parse.rs:682:12-682:20)
  Terminator {
      source_info: SourceInfo(src/parse.rs:682:12-682:20)
      kind: switchInt(move _57) -> [0: bb47, otherwise: bb46]
  }
  preds [bb30, bb33, bb36]
  succs [bb46, bb47]

bb46
  0: StorageDead(_58)
    SourceInfo(src/parse.rs:682:19-682:20)
  1: _13 = const ()
    SourceInfo(src/parse.rs:683:13-683:18)
  2: StorageDead(_57)
    SourceInfo(src/parse.rs:684:9-684:10)
  3: StorageDead(_56)
    SourceInfo(src/parse.rs:684:9-684:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb52
  }
  preds [bb45]
  succs [bb52]

bb47
  0: StorageDead(_58)
    SourceInfo(src/parse.rs:682:19-682:20)
  1: _56 = const ()
    SourceInfo(src/parse.rs:684:10-684:10)
  2: StorageDead(_57)
    SourceInfo(src/parse.rs:684:9-684:10)
  3: StorageDead(_56)
    SourceInfo(src/parse.rs:684:9-684:10)
  4: _60 = MulWithOverflow(_11, const 16_u32)
    SourceInfo(src/parse.rs:685:9-685:22)
  Terminator {
      source_info: SourceInfo(src/parse.rs:685:9-685:22)
      kind: assert(!move (_60.1: bool), "attempt to compute `{} * {}`, which would overflow", _11, const 16_u32) -> [success: bb48, unwind: bb56]
  }
  preds [bb45]
  succs [bb48, bb56]

bb48
  0: _11 = move (_60.0: u32)
    SourceInfo(src/parse.rs:685:9-685:22)
  1: StorageLive(_61)
    SourceInfo(src/parse.rs:686:18-686:34)
  2: StorageLive(_62)
    SourceInfo(src/parse.rs:686:28-686:33)
  3: _62 = _25
    SourceInfo(src/parse.rs:686:28-686:33)
  Terminator {
      source_info: SourceInfo(src/parse.rs:686:18-686:34)
      kind: _61 = <u32 as std::convert::From<u8>>::from(move _62) -> [return: bb49, unwind: bb56]
  }
  preds [bb47]
  succs [bb49, bb56]

bb49
  0: StorageDead(_62)
    SourceInfo(src/parse.rs:686:33-686:34)
  1: _63 = AddWithOverflow(_11, _61)
    SourceInfo(src/parse.rs:686:9-686:34)
  Terminator {
      source_info: SourceInfo(src/parse.rs:686:9-686:34)
      kind: assert(!move (_63.1: bool), "attempt to compute `{} + {}`, which would overflow", _11, move _61) -> [success: bb50, unwind: bb56]
  }
  preds [bb48]
  succs [bb50, bb56]

bb50
  0: _11 = move (_63.0: u32)
    SourceInfo(src/parse.rs:686:9-686:34)
  1: StorageDead(_61)
    SourceInfo(src/parse.rs:686:33-686:34)
  2: _64 = AddWithOverflow(_12, const 1_i32)
    SourceInfo(src/parse.rs:687:9-687:17)
  Terminator {
      source_info: SourceInfo(src/parse.rs:687:9-687:17)
      kind: assert(!move (_64.1: bool), "attempt to compute `{} + {}`, which would overflow", _12, const 1_i32) -> [success: bb51, unwind: bb56]
  }
  preds [bb49]
  succs [bb51, bb56]

bb51
  0: _12 = move (_64.0: i32)
    SourceInfo(src/parse.rs:687:9-687:17)
  1: _18 = const ()
    SourceInfo(src/parse.rs:673:26-688:6)
  2: StorageDead(_25)
    SourceInfo(src/parse.rs:688:5-688:6)
  3: StorageDead(_24)
    SourceInfo(src/parse.rs:688:5-688:6)
  4: StorageDead(_21)
    SourceInfo(src/parse.rs:688:5-688:6)
  5: StorageDead(_19)
    SourceInfo(src/parse.rs:688:5-688:6)
  6: StorageDead(_18)
    SourceInfo(src/parse.rs:688:5-688:6)
  7: _17 = const ()
    SourceInfo(src/parse.rs:673:5-688:6)
  Terminator {
      source_info: SourceInfo(src/parse.rs:673:5-688:6)
      kind: goto -> bb10
  }
  preds [bb50]
  succs [bb10]

bb52
  0: StorageDead(_25)
    SourceInfo(src/parse.rs:688:5-688:6)
  1: StorageDead(_24)
    SourceInfo(src/parse.rs:688:5-688:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb53
  }
  preds [bb17, bb46]
  succs [bb53]

bb53
  0: StorageDead(_21)
    SourceInfo(src/parse.rs:688:5-688:6)
  1: StorageDead(_19)
    SourceInfo(src/parse.rs:688:5-688:6)
  2: StorageDead(_18)
    SourceInfo(src/parse.rs:688:5-688:6)
  3: StorageDead(_16)
    SourceInfo(src/parse.rs:688:5-688:6)
  4: StorageDead(_14)
    SourceInfo(src/parse.rs:688:5-688:6)
  5: StorageDead(_13)
    SourceInfo(src/parse.rs:688:5-688:6)
  6: StorageLive(_65)
    SourceInfo(src/parse.rs:689:9-689:15)
  7: _65 = parse::Reject
    SourceInfo(src/parse.rs:689:9-689:15)
  8: _0 = std::result::Result::<char, parse::Reject>::Err(move _65)
    SourceInfo(src/parse.rs:689:5-689:16)
  9: StorageDead(_65)
    SourceInfo(src/parse.rs:689:15-689:16)
  10: StorageDead(_12)
    SourceInfo(src/parse.rs:690:1-690:2)
  11: StorageDead(_11)
    SourceInfo(src/parse.rs:690:1-690:2)
  Terminator {
      source_info: SourceInfo(src/parse.rs:690:2-690:2)
      kind: goto -> bb55
  }
  preds [bb16, bb52]
  succs [bb55]

bb54
  0: StorageDead(_3)
    SourceInfo(src/parse.rs:631:9-631:10)
  1: StorageDead(_2)
    SourceInfo(src/parse.rs:631:9-631:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb4, bb6]
  succs [bb55]

bb55
  Terminator {
      source_info: SourceInfo(src/parse.rs:690:2-690:2)
      kind: return
  }
  preds [bb44, bb53, bb54]
  succs []

bb56
  Terminator {
      source_info: SourceInfo(src/parse.rs:666:1-690:2)
      kind: resume
  }
  preds [bb0, bb8, bb10, bb11, bb29, bb31, bb32, bb34, bb35, bb41, bb43, bb47, bb48, bb49, bb50]
  succs []

