bb0
  0: StorageLive(_2)
    SourceInfo(src/rcvec.rs:47:13-47:18)
  1: StorageLive(_3)
    SourceInfo(src/rcvec.rs:47:21-47:50)
  2: StorageLive(_4)
    SourceInfo(src/rcvec.rs:47:21-47:49)
  3: StorageLive(_5)
    SourceInfo(src/rcvec.rs:47:33-47:48)
  4: StorageLive(_6)
    SourceInfo(src/rcvec.rs:47:33-47:48)
  5: _6 = &mut ((*_1).0: std::rc::Rc<std::vec::Vec<T>>)
    SourceInfo(src/rcvec.rs:47:33-47:48)
  6: _5 = &mut (*_6)
    SourceInfo(src/rcvec.rs:47:33-47:48)
  Terminator {
      source_info: SourceInfo(src/rcvec.rs:47:21-47:49)
      kind: _4 = std::rc::Rc::<std::vec::Vec<T>>::get_mut(move _5) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_5)
    SourceInfo(src/rcvec.rs:47:48-47:49)
  Terminator {
      source_info: SourceInfo(src/rcvec.rs:47:21-47:50)
      kind: _3 = <std::option::Option<&mut std::vec::Vec<T>> as std::ops::Try>::branch(move _4) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_4)
    SourceInfo(src/rcvec.rs:47:49-47:50)
  1: PlaceMention(_3)
    SourceInfo(src/rcvec.rs:47:21-47:50)
  2: _7 = discriminant(_3)
    SourceInfo(src/rcvec.rs:47:21-47:50)
  Terminator {
      source_info: SourceInfo(src/rcvec.rs:47:21-47:50)
      kind: switchInt(move _7) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(src/rcvec.rs:47:21-47:50)
  Terminator {
      source_info: SourceInfo(src/rcvec.rs:47:21-47:50)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/rcvec.rs:47:49-47:50)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_11)
    SourceInfo(src/rcvec.rs:47:21-47:50)
  1: _11 = move ((_3 as Continue).0: &mut std::vec::Vec<T>)
    SourceInfo(src/rcvec.rs:47:21-47:50)
  2: _2 = move _11
    SourceInfo(src/rcvec.rs:47:21-47:50)
  3: StorageDead(_11)
    SourceInfo(src/rcvec.rs:47:49-47:50)
  4: FakeRead(ForLet(None), _2)
    SourceInfo(src/rcvec.rs:47:13-47:18)
  5: StorageDead(_6)
    SourceInfo(src/rcvec.rs:47:50-47:51)
  6: StorageDead(_3)
    SourceInfo(src/rcvec.rs:47:50-47:51)
  7: StorageLive(_12)
    SourceInfo(src/rcvec.rs:48:14-48:32)
  8: StorageLive(_13)
    SourceInfo(src/rcvec.rs:48:25-48:30)
  9: _13 = &mut (*_2)
    SourceInfo(src/rcvec.rs:48:25-48:30)
  10: _12 = rcvec::RcVecMut::<'_, T> { inner: move _13 }
    SourceInfo(src/rcvec.rs:48:14-48:32)
  11: StorageDead(_13)
    SourceInfo(src/rcvec.rs:48:31-48:32)
  12: _0 = std::option::Option::<rcvec::RcVecMut<'_, T>>::Some(move _12)
    SourceInfo(src/rcvec.rs:48:9-48:33)
  13: StorageDead(_12)
    SourceInfo(src/rcvec.rs:48:32-48:33)
  14: StorageDead(_2)
    SourceInfo(src/rcvec.rs:49:5-49:6)
  Terminator {
      source_info: SourceInfo(src/rcvec.rs:49:6-49:6)
      kind: goto -> bb8
  }
  preds [bb2, bb4]
  succs [bb8]

bb6
  0: StorageLive(_8)
    SourceInfo(src/rcvec.rs:47:49-47:50)
  1: _8 = ((_3 as Break).0: std::option::Option<std::convert::Infallible>)
    SourceInfo(src/rcvec.rs:47:49-47:50)
  2: StorageLive(_10)
    SourceInfo(src/rcvec.rs:47:49-47:50)
  3: _10 = _8
    SourceInfo(src/rcvec.rs:47:49-47:50)
  Terminator {
      source_info: SourceInfo(src/rcvec.rs:47:21-47:50)
      kind: _0 = <std::option::Option<rcvec::RcVecMut<'_, T>> as std::ops::FromResidual<std::option::Option<std::convert::Infallible>>>::from_residual(move _10) -> [return: bb7, unwind: bb9]
  }
  preds [bb4]
  succs [bb7, bb9]

bb7
  0: StorageDead(_10)
    SourceInfo(src/rcvec.rs:47:49-47:50)
  1: StorageDead(_8)
    SourceInfo(src/rcvec.rs:47:49-47:50)
  2: StorageDead(_6)
    SourceInfo(src/rcvec.rs:47:50-47:51)
  3: StorageDead(_3)
    SourceInfo(src/rcvec.rs:47:50-47:51)
  4: StorageDead(_2)
    SourceInfo(src/rcvec.rs:49:5-49:6)
  Terminator {
      source_info: SourceInfo(src/rcvec.rs:49:6-49:6)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(src/rcvec.rs:49:6-49:6)
      kind: return
  }
  preds [bb5, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/rcvec.rs:46:5-49:6)
      kind: resume
  }
  preds [bb0, bb1, bb6]
  succs []

