bb0
  0: StorageLive(_5)
    SourceInfo(src/fallback.rs:766:29-771:10)
  1: PlaceMention(((*_1).0: Delimiter))
    SourceInfo(src/fallback.rs:766:35-766:49)
  2: _6 = discriminant(((*_1).0: Delimiter))
    SourceInfo(src/fallback.rs:766:35-766:49)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:766:29-766:49)
      kind: switchInt(move _6) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb5]

bb1
  0: FakeRead(ForMatchedPlace(None), ((*_1).0: Delimiter))
    SourceInfo(src/fallback.rs:766:35-766:49)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:766:35-766:49)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/fallback.rs:767:13-767:35)
      kind: falseEdge -> [real: bb6, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(src/fallback.rs:768:13-768:29)
      kind: falseEdge -> [real: bb7, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb7]

bb4
  Terminator {
      source_info: SourceInfo(src/fallback.rs:769:13-769:31)
      kind: falseEdge -> [real: bb8, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb8]

bb5
  0: _5 = (const "", const "")
    SourceInfo(src/fallback.rs:770:32-770:40)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:770:32-770:40)
      kind: goto -> bb9
  }
  preds [bb0, bb4]
  succs [bb9]

bb6
  0: _5 = (const "(", const ")")
    SourceInfo(src/fallback.rs:767:39-767:49)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:767:39-767:49)
      kind: goto -> bb9
  }
  preds [bb2]
  succs [bb9]

bb7
  0: _5 = (const "{ ", const "}")
    SourceInfo(src/fallback.rs:768:33-768:44)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:768:33-768:44)
      kind: goto -> bb9
  }
  preds [bb3]
  succs [bb9]

bb8
  0: _5 = (const "[", const "]")
    SourceInfo(src/fallback.rs:769:35-769:45)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:769:35-769:45)
      kind: goto -> bb9
  }
  preds [bb4]
  succs [bb9]

bb9
  0: PlaceMention(_5)
    SourceInfo(src/fallback.rs:766:29-771:10)
  1: StorageLive(_3)
    SourceInfo(src/fallback.rs:766:14-766:18)
  2: _3 = (_5.0: &str)
    SourceInfo(src/fallback.rs:766:14-766:18)
  3: StorageLive(_4)
    SourceInfo(src/fallback.rs:766:20-766:25)
  4: _4 = (_5.1: &str)
    SourceInfo(src/fallback.rs:766:20-766:25)
  5: StorageDead(_5)
    SourceInfo(src/fallback.rs:771:10-771:11)
  6: StorageLive(_7)
    SourceInfo(src/fallback.rs:773:9-773:27)
  7: StorageLive(_8)
    SourceInfo(src/fallback.rs:773:9-773:27)
  8: StorageLive(_9)
    SourceInfo(src/fallback.rs:773:9-773:26)
  9: StorageLive(_10)
    SourceInfo(src/fallback.rs:773:9-773:10)
  10: _10 = &mut (*_2)
    SourceInfo(src/fallback.rs:773:9-773:10)
  11: StorageLive(_11)
    SourceInfo(src/fallback.rs:773:21-773:25)
  12: _11 = &(*_3)
    SourceInfo(src/fallback.rs:773:21-773:25)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:773:9-773:26)
      kind: _9 = std::fmt::Formatter::<'_>::write_str(move _10, move _11) -> [return: bb10, unwind: bb48]
  }
  preds [bb5, bb6, bb7, bb8]
  succs [bb10, bb48]

bb10
  0: StorageDead(_11)
    SourceInfo(src/fallback.rs:773:25-773:26)
  1: StorageDead(_10)
    SourceInfo(src/fallback.rs:773:25-773:26)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:773:9-773:27)
      kind: _8 = <std::result::Result<(), std::fmt::Error> as std::ops::Try>::branch(move _9) -> [return: bb11, unwind: bb48]
  }
  preds [bb9]
  succs [bb11, bb48]

bb11
  0: StorageDead(_9)
    SourceInfo(src/fallback.rs:773:26-773:27)
  1: PlaceMention(_8)
    SourceInfo(src/fallback.rs:773:9-773:27)
  2: _12 = discriminant(_8)
    SourceInfo(src/fallback.rs:773:9-773:27)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:773:9-773:27)
      kind: switchInt(move _12) -> [0: bb14, 1: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(src/fallback.rs:773:9-773:27)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:773:9-773:27)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(src/fallback.rs:773:26-773:27)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_16)
    SourceInfo(src/fallback.rs:773:9-773:27)
  1: _16 = ((_8 as Continue).0: ())
    SourceInfo(src/fallback.rs:773:9-773:27)
  2: _7 = _16
    SourceInfo(src/fallback.rs:773:9-773:27)
  3: StorageDead(_16)
    SourceInfo(src/fallback.rs:773:26-773:27)
  4: StorageDead(_8)
    SourceInfo(src/fallback.rs:773:27-773:28)
  5: StorageDead(_7)
    SourceInfo(src/fallback.rs:773:27-773:28)
  6: StorageLive(_17)
    SourceInfo(src/fallback.rs:774:9-774:39)
  7: StorageLive(_18)
    SourceInfo(src/fallback.rs:774:9-774:39)
  8: StorageLive(_19)
    SourceInfo(src/fallback.rs:774:9-774:38)
  9: StorageLive(_20)
    SourceInfo(src/fallback.rs:774:22-774:34)
  10: StorageLive(_21)
    SourceInfo(src/fallback.rs:774:22-774:34)
  11: _21 = &((*_1).1: fallback::TokenStream)
    SourceInfo(src/fallback.rs:774:22-774:34)
  12: _20 = &(*_21)
    SourceInfo(src/fallback.rs:774:22-774:34)
  13: StorageLive(_22)
    SourceInfo(src/fallback.rs:774:36-774:37)
  14: _22 = &mut (*_2)
    SourceInfo(src/fallback.rs:774:36-774:37)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:774:9-774:38)
      kind: _19 = <fallback::TokenStream as std::fmt::Display>::fmt(move _20, move _22) -> [return: bb17, unwind: bb48]
  }
  preds [bb11, bb13]
  succs [bb17, bb48]

bb15
  0: StorageLive(_13)
    SourceInfo(src/fallback.rs:773:26-773:27)
  1: _13 = ((_8 as Break).0: std::result::Result<std::convert::Infallible, std::fmt::Error>)
    SourceInfo(src/fallback.rs:773:26-773:27)
  2: StorageLive(_15)
    SourceInfo(src/fallback.rs:773:26-773:27)
  3: _15 = _13
    SourceInfo(src/fallback.rs:773:26-773:27)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:773:9-773:27)
      kind: _0 = <std::result::Result<(), std::fmt::Error> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, std::fmt::Error>>>::from_residual(move _15) -> [return: bb16, unwind: bb48]
  }
  preds [bb13]
  succs [bb16, bb48]

bb16
  0: StorageDead(_15)
    SourceInfo(src/fallback.rs:773:26-773:27)
  1: StorageDead(_13)
    SourceInfo(src/fallback.rs:773:26-773:27)
  2: StorageDead(_8)
    SourceInfo(src/fallback.rs:773:27-773:28)
  3: StorageDead(_7)
    SourceInfo(src/fallback.rs:773:27-773:28)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb15]
  succs [bb46]

bb17
  0: StorageDead(_22)
    SourceInfo(src/fallback.rs:774:37-774:38)
  1: StorageDead(_20)
    SourceInfo(src/fallback.rs:774:37-774:38)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:774:9-774:39)
      kind: _18 = <std::result::Result<(), std::fmt::Error> as std::ops::Try>::branch(move _19) -> [return: bb18, unwind: bb48]
  }
  preds [bb14]
  succs [bb18, bb48]

bb18
  0: StorageDead(_19)
    SourceInfo(src/fallback.rs:774:38-774:39)
  1: PlaceMention(_18)
    SourceInfo(src/fallback.rs:774:9-774:39)
  2: _23 = discriminant(_18)
    SourceInfo(src/fallback.rs:774:9-774:39)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:774:9-774:39)
      kind: switchInt(move _23) -> [0: bb21, 1: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20, bb21]

bb19
  0: FakeRead(ForMatchedPlace(None), _18)
    SourceInfo(src/fallback.rs:774:9-774:39)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:774:9-774:39)
      kind: unreachable
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(src/fallback.rs:774:38-774:39)
      kind: falseEdge -> [real: bb22, imaginary: bb21]
  }
  preds [bb18]
  succs [bb21, bb22]

bb21
  0: StorageLive(_27)
    SourceInfo(src/fallback.rs:774:9-774:39)
  1: _27 = ((_18 as Continue).0: ())
    SourceInfo(src/fallback.rs:774:9-774:39)
  2: _17 = _27
    SourceInfo(src/fallback.rs:774:9-774:39)
  3: StorageDead(_27)
    SourceInfo(src/fallback.rs:774:38-774:39)
  4: StorageDead(_21)
    SourceInfo(src/fallback.rs:774:39-774:40)
  5: StorageDead(_18)
    SourceInfo(src/fallback.rs:774:39-774:40)
  6: StorageDead(_17)
    SourceInfo(src/fallback.rs:774:39-774:40)
  7: StorageLive(_28)
    SourceInfo(src/fallback.rs:775:9-777:10)
  8: StorageLive(_29)
    SourceInfo(src/fallback.rs:775:12-775:46)
  9: StorageLive(_30)
    SourceInfo(src/fallback.rs:775:12-775:26)
  10: _30 = &((*_1).0: Delimiter)
    SourceInfo(src/fallback.rs:775:12-775:26)
  11: StorageLive(_31)
    SourceInfo(src/fallback.rs:775:30-775:46)
  12: StorageLive(_32)
    SourceInfo(src/fallback.rs:775:30-775:46)
  13: _32 = Delimiter::Brace
    SourceInfo(src/fallback.rs:775:30-775:46)
  14: _31 = &_32
    SourceInfo(src/fallback.rs:775:30-775:46)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:775:12-775:46)
      kind: _29 = <Delimiter as std::cmp::PartialEq>::eq(move _30, move _31) -> [return: bb24, unwind: bb48]
  }
  preds [bb18, bb20]
  succs [bb24, bb48]

bb22
  0: StorageLive(_24)
    SourceInfo(src/fallback.rs:774:38-774:39)
  1: _24 = ((_18 as Break).0: std::result::Result<std::convert::Infallible, std::fmt::Error>)
    SourceInfo(src/fallback.rs:774:38-774:39)
  2: StorageLive(_26)
    SourceInfo(src/fallback.rs:774:38-774:39)
  3: _26 = _24
    SourceInfo(src/fallback.rs:774:38-774:39)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:774:9-774:39)
      kind: _0 = <std::result::Result<(), std::fmt::Error> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, std::fmt::Error>>>::from_residual(move _26) -> [return: bb23, unwind: bb48]
  }
  preds [bb20]
  succs [bb23, bb48]

bb23
  0: StorageDead(_26)
    SourceInfo(src/fallback.rs:774:38-774:39)
  1: StorageDead(_24)
    SourceInfo(src/fallback.rs:774:38-774:39)
  2: StorageDead(_21)
    SourceInfo(src/fallback.rs:774:39-774:40)
  3: StorageDead(_18)
    SourceInfo(src/fallback.rs:774:39-774:40)
  4: StorageDead(_17)
    SourceInfo(src/fallback.rs:774:39-774:40)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb22]
  succs [bb46]

bb24
  Terminator {
      source_info: SourceInfo(src/fallback.rs:775:12-775:46)
      kind: switchInt(move _29) -> [0: bb36, otherwise: bb25]
  }
  preds [bb21]
  succs [bb25, bb36]

bb25
  0: StorageDead(_32)
    SourceInfo(src/fallback.rs:775:45-775:46)
  1: StorageDead(_31)
    SourceInfo(src/fallback.rs:775:45-775:46)
  2: StorageDead(_30)
    SourceInfo(src/fallback.rs:775:45-775:46)
  3: StorageLive(_33)
    SourceInfo(src/fallback.rs:775:51-775:79)
  4: StorageLive(_34)
    SourceInfo(src/fallback.rs:775:51-775:68)
  5: _34 = &(((*_1).1: fallback::TokenStream).0: rcvec::RcVec<TokenTree>)
    SourceInfo(src/fallback.rs:775:51-775:68)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:775:51-775:79)
      kind: _33 = rcvec::RcVec::<TokenTree>::is_empty(move _34) -> [return: bb26, unwind: bb48]
  }
  preds [bb24]
  succs [bb26, bb48]

bb26
  Terminator {
      source_info: SourceInfo(src/fallback.rs:775:51-775:79)
      kind: switchInt(move _33) -> [0: bb28, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb28]

bb27
  0: StorageDead(_34)
    SourceInfo(src/fallback.rs:775:78-775:79)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:775:80-777:10)
      kind: goto -> bb37
  }
  preds [bb26]
  succs [bb37]

bb28
  0: StorageDead(_34)
    SourceInfo(src/fallback.rs:775:78-775:79)
  1: StorageLive(_35)
    SourceInfo(src/fallback.rs:776:13-776:30)
  2: StorageLive(_36)
    SourceInfo(src/fallback.rs:776:13-776:30)
  3: StorageLive(_37)
    SourceInfo(src/fallback.rs:776:13-776:29)
  4: StorageLive(_38)
    SourceInfo(src/fallback.rs:776:13-776:14)
  5: _38 = &mut (*_2)
    SourceInfo(src/fallback.rs:776:13-776:14)
  6: StorageLive(_39)
    SourceInfo(src/fallback.rs:776:25-776:28)
  7: StorageLive(_40)
    SourceInfo(src/fallback.rs:776:25-776:28)
  8: _40 = const " "
    SourceInfo(src/fallback.rs:776:25-776:28)
  9: _39 = &(*_40)
    SourceInfo(src/fallback.rs:776:25-776:28)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:776:13-776:29)
      kind: _37 = std::fmt::Formatter::<'_>::write_str(move _38, move _39) -> [return: bb29, unwind: bb48]
  }
  preds [bb26]
  succs [bb29, bb48]

bb29
  0: StorageDead(_39)
    SourceInfo(src/fallback.rs:776:28-776:29)
  1: StorageDead(_38)
    SourceInfo(src/fallback.rs:776:28-776:29)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:776:13-776:30)
      kind: _36 = <std::result::Result<(), std::fmt::Error> as std::ops::Try>::branch(move _37) -> [return: bb30, unwind: bb48]
  }
  preds [bb28]
  succs [bb30, bb48]

bb30
  0: StorageDead(_37)
    SourceInfo(src/fallback.rs:776:29-776:30)
  1: PlaceMention(_36)
    SourceInfo(src/fallback.rs:776:13-776:30)
  2: _41 = discriminant(_36)
    SourceInfo(src/fallback.rs:776:13-776:30)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:776:13-776:30)
      kind: switchInt(move _41) -> [0: bb33, 1: bb32, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb32, bb33]

bb31
  0: FakeRead(ForMatchedPlace(None), _36)
    SourceInfo(src/fallback.rs:776:13-776:30)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:776:13-776:30)
      kind: unreachable
  }
  preds [bb30]
  succs []

bb32
  Terminator {
      source_info: SourceInfo(src/fallback.rs:776:29-776:30)
      kind: falseEdge -> [real: bb34, imaginary: bb33]
  }
  preds [bb30]
  succs [bb33, bb34]

bb33
  0: StorageLive(_45)
    SourceInfo(src/fallback.rs:776:13-776:30)
  1: _45 = ((_36 as Continue).0: ())
    SourceInfo(src/fallback.rs:776:13-776:30)
  2: _35 = _45
    SourceInfo(src/fallback.rs:776:13-776:30)
  3: StorageDead(_45)
    SourceInfo(src/fallback.rs:776:29-776:30)
  4: StorageDead(_40)
    SourceInfo(src/fallback.rs:776:30-776:31)
  5: StorageDead(_36)
    SourceInfo(src/fallback.rs:776:30-776:31)
  6: StorageDead(_35)
    SourceInfo(src/fallback.rs:776:30-776:31)
  7: _28 = const ()
    SourceInfo(src/fallback.rs:775:80-777:10)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:775:9-777:10)
      kind: goto -> bb38
  }
  preds [bb30, bb32]
  succs [bb38]

bb34
  0: StorageLive(_42)
    SourceInfo(src/fallback.rs:776:29-776:30)
  1: _42 = ((_36 as Break).0: std::result::Result<std::convert::Infallible, std::fmt::Error>)
    SourceInfo(src/fallback.rs:776:29-776:30)
  2: StorageLive(_44)
    SourceInfo(src/fallback.rs:776:29-776:30)
  3: _44 = _42
    SourceInfo(src/fallback.rs:776:29-776:30)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:776:13-776:30)
      kind: _0 = <std::result::Result<(), std::fmt::Error> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, std::fmt::Error>>>::from_residual(move _44) -> [return: bb35, unwind: bb48]
  }
  preds [bb32]
  succs [bb35, bb48]

bb35
  0: StorageDead(_44)
    SourceInfo(src/fallback.rs:776:29-776:30)
  1: StorageDead(_42)
    SourceInfo(src/fallback.rs:776:29-776:30)
  2: StorageDead(_40)
    SourceInfo(src/fallback.rs:776:30-776:31)
  3: StorageDead(_36)
    SourceInfo(src/fallback.rs:776:30-776:31)
  4: StorageDead(_35)
    SourceInfo(src/fallback.rs:776:30-776:31)
  5: StorageDead(_33)
    SourceInfo(src/fallback.rs:777:9-777:10)
  6: StorageDead(_29)
    SourceInfo(src/fallback.rs:777:9-777:10)
  7: StorageDead(_28)
    SourceInfo(src/fallback.rs:777:9-777:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb34]
  succs [bb46]

bb36
  0: StorageDead(_32)
    SourceInfo(src/fallback.rs:775:45-775:46)
  1: StorageDead(_31)
    SourceInfo(src/fallback.rs:775:45-775:46)
  2: StorageDead(_30)
    SourceInfo(src/fallback.rs:775:45-775:46)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb37
  }
  preds [bb24]
  succs [bb37]

bb37
  0: _28 = const ()
    SourceInfo(src/fallback.rs:777:10-777:10)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:775:9-777:10)
      kind: goto -> bb38
  }
  preds [bb27, bb36]
  succs [bb38]

bb38
  0: StorageDead(_33)
    SourceInfo(src/fallback.rs:777:9-777:10)
  1: StorageDead(_29)
    SourceInfo(src/fallback.rs:777:9-777:10)
  2: StorageDead(_28)
    SourceInfo(src/fallback.rs:777:9-777:10)
  3: StorageLive(_46)
    SourceInfo(src/fallback.rs:778:9-778:28)
  4: StorageLive(_47)
    SourceInfo(src/fallback.rs:778:9-778:28)
  5: StorageLive(_48)
    SourceInfo(src/fallback.rs:778:9-778:27)
  6: StorageLive(_49)
    SourceInfo(src/fallback.rs:778:9-778:10)
  7: _49 = &mut (*_2)
    SourceInfo(src/fallback.rs:778:9-778:10)
  8: StorageLive(_50)
    SourceInfo(src/fallback.rs:778:21-778:26)
  9: _50 = &(*_4)
    SourceInfo(src/fallback.rs:778:21-778:26)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:778:9-778:27)
      kind: _48 = std::fmt::Formatter::<'_>::write_str(move _49, move _50) -> [return: bb39, unwind: bb48]
  }
  preds [bb33, bb37]
  succs [bb39, bb48]

bb39
  0: StorageDead(_50)
    SourceInfo(src/fallback.rs:778:26-778:27)
  1: StorageDead(_49)
    SourceInfo(src/fallback.rs:778:26-778:27)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:778:9-778:28)
      kind: _47 = <std::result::Result<(), std::fmt::Error> as std::ops::Try>::branch(move _48) -> [return: bb40, unwind: bb48]
  }
  preds [bb38]
  succs [bb40, bb48]

bb40
  0: StorageDead(_48)
    SourceInfo(src/fallback.rs:778:27-778:28)
  1: PlaceMention(_47)
    SourceInfo(src/fallback.rs:778:9-778:28)
  2: _51 = discriminant(_47)
    SourceInfo(src/fallback.rs:778:9-778:28)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:778:9-778:28)
      kind: switchInt(move _51) -> [0: bb43, 1: bb42, otherwise: bb41]
  }
  preds [bb39]
  succs [bb41, bb42, bb43]

bb41
  0: FakeRead(ForMatchedPlace(None), _47)
    SourceInfo(src/fallback.rs:778:9-778:28)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:778:9-778:28)
      kind: unreachable
  }
  preds [bb40]
  succs []

bb42
  Terminator {
      source_info: SourceInfo(src/fallback.rs:778:27-778:28)
      kind: falseEdge -> [real: bb44, imaginary: bb43]
  }
  preds [bb40]
  succs [bb43, bb44]

bb43
  0: StorageLive(_55)
    SourceInfo(src/fallback.rs:778:9-778:28)
  1: _55 = ((_47 as Continue).0: ())
    SourceInfo(src/fallback.rs:778:9-778:28)
  2: _46 = _55
    SourceInfo(src/fallback.rs:778:9-778:28)
  3: StorageDead(_55)
    SourceInfo(src/fallback.rs:778:27-778:28)
  4: StorageDead(_47)
    SourceInfo(src/fallback.rs:778:28-778:29)
  5: StorageDead(_46)
    SourceInfo(src/fallback.rs:778:28-778:29)
  6: StorageLive(_56)
    SourceInfo(src/fallback.rs:780:12-780:14)
  7: _56 = ()
    SourceInfo(src/fallback.rs:780:12-780:14)
  8: _0 = std::result::Result::<(), std::fmt::Error>::Ok(move _56)
    SourceInfo(src/fallback.rs:780:9-780:15)
  9: StorageDead(_56)
    SourceInfo(src/fallback.rs:780:14-780:15)
  10: StorageDead(_4)
    SourceInfo(src/fallback.rs:781:5-781:6)
  11: StorageDead(_3)
    SourceInfo(src/fallback.rs:781:5-781:6)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:781:6-781:6)
      kind: goto -> bb47
  }
  preds [bb40, bb42]
  succs [bb47]

bb44
  0: StorageLive(_52)
    SourceInfo(src/fallback.rs:778:27-778:28)
  1: _52 = ((_47 as Break).0: std::result::Result<std::convert::Infallible, std::fmt::Error>)
    SourceInfo(src/fallback.rs:778:27-778:28)
  2: StorageLive(_54)
    SourceInfo(src/fallback.rs:778:27-778:28)
  3: _54 = _52
    SourceInfo(src/fallback.rs:778:27-778:28)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:778:9-778:28)
      kind: _0 = <std::result::Result<(), std::fmt::Error> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, std::fmt::Error>>>::from_residual(move _54) -> [return: bb45, unwind: bb48]
  }
  preds [bb42]
  succs [bb45, bb48]

bb45
  0: StorageDead(_54)
    SourceInfo(src/fallback.rs:778:27-778:28)
  1: StorageDead(_52)
    SourceInfo(src/fallback.rs:778:27-778:28)
  2: StorageDead(_47)
    SourceInfo(src/fallback.rs:778:28-778:29)
  3: StorageDead(_46)
    SourceInfo(src/fallback.rs:778:28-778:29)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb44]
  succs [bb46]

bb46
  0: StorageDead(_4)
    SourceInfo(src/fallback.rs:781:5-781:6)
  1: StorageDead(_3)
    SourceInfo(src/fallback.rs:781:5-781:6)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:781:6-781:6)
      kind: goto -> bb47
  }
  preds [bb16, bb23, bb35, bb45]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(src/fallback.rs:781:6-781:6)
      kind: return
  }
  preds [bb43, bb46]
  succs []

bb48
  Terminator {
      source_info: SourceInfo(src/fallback.rs:765:5-781:6)
      kind: resume
  }
  preds [bb9, bb10, bb14, bb15, bb17, bb21, bb22, bb25, bb28, bb29, bb34, bb38, bb39, bb44]
  succs []

