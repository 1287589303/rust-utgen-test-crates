bb0
  0: StorageLive(_2)
    SourceInfo(src/fallback.rs:1275:9-1275:39)
  1: StorageLive(_3)
    SourceInfo(src/fallback.rs:1275:9-1275:39)
  2: StorageLive(_4)
    SourceInfo(src/fallback.rs:1275:35-1275:38)
  3: _4 = &(*_1)
    SourceInfo(src/fallback.rs:1275:35-1275:38)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1275:9-1275:39)
      kind: _3 = fallback::Literal::from_str_checked(move _4) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: _2 = &_3
    SourceInfo(src/fallback.rs:1275:9-1275:39)
  1: StorageDead(_4)
    SourceInfo(src/fallback.rs:1275:38-1275:39)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1275:9-1275:47)
      kind: _0 = std::result::Result::<fallback::Literal, fallback::LexError>::is_ok(move _2) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_2)
    SourceInfo(src/fallback.rs:1275:46-1275:47)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1276:5-1276:6)
      kind: drop(_3) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_3)
    SourceInfo(src/fallback.rs:1276:5-1276:6)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1276:6-1276:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1276:5-1276:6)
      kind: drop(_3) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/fallback.rs:1274:5-1276:6)
      kind: resume
  }
  preds [bb0, bb2, bb4]
  succs []

