bb0
  0: StorageLive(_3)
    SourceInfo(src/wrapper.rs:712:15-712:27)
  1: StorageLive(_4)
    SourceInfo(src/wrapper.rs:712:16-712:20)
  2: _4 = move _1
    SourceInfo(src/wrapper.rs:712:16-712:20)
  3: StorageLive(_5)
    SourceInfo(src/wrapper.rs:712:22-712:26)
  4: _5 = _2
    SourceInfo(src/wrapper.rs:712:22-712:26)
  5: _3 = (move _4, move _5)
    SourceInfo(src/wrapper.rs:712:15-712:27)
  6: StorageDead(_5)
    SourceInfo(src/wrapper.rs:712:26-712:27)
  7: StorageDead(_4)
    SourceInfo(src/wrapper.rs:712:26-712:27)
  8: PlaceMention(_3)
    SourceInfo(src/wrapper.rs:712:15-712:27)
  9: _8 = discriminant((*(_3.0: &mut imp::Ident)))
    SourceInfo(src/wrapper.rs:712:15-712:27)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:712:9-712:27)
      kind: switchInt(move _8) -> [0: bb2, 1: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb5]

bb1
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(src/wrapper.rs:712:15-712:27)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:712:15-712:27)
      kind: unreachable
  }
  preds [bb0, bb2, bb5]
  succs []

bb2
  0: _6 = discriminant((_3.1: imp::Span))
    SourceInfo(src/wrapper.rs:712:15-712:27)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:712:9-712:27)
      kind: switchInt(move _6) -> [0: bb3, 1: bb4, otherwise: bb1]
  }
  preds [bb0]
  succs [bb1, bb3, bb4]

bb3
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:713:13-713:52)
      kind: falseEdge -> [real: bb8, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb8]

bb4
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:715:13-715:52)
      kind: falseEdge -> [real: bb12, imaginary: bb7]
  }
  preds [bb2, bb6]
  succs [bb7, bb12]

bb5
  0: _7 = discriminant((_3.1: imp::Span))
    SourceInfo(src/wrapper.rs:712:15-712:27)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:712:9-712:27)
      kind: switchInt(move _7) -> [0: bb7, 1: bb6, otherwise: bb1]
  }
  preds [bb0, bb3]
  succs [bb1, bb6, bb7]

bb6
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:714:13-714:52)
      kind: falseEdge -> [real: bb10, imaginary: bb4]
  }
  preds [bb5]
  succs [bb4, bb10]

bb7
  0: StorageLive(_18)
    SourceInfo(src/wrapper.rs:716:56-716:73)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:716:56-716:73)
      kind: _18 = imp::mismatch(const 716_u32) -> bb14
  }
  preds [bb4, bb5]
  succs [bb14]

bb8
  0: StorageLive(_9)
    SourceInfo(src/wrapper.rs:713:30-713:31)
  1: _9 = &mut (((*(_3.0: &mut imp::Ident)) as Compiler).0: proc_macro::Ident)
    SourceInfo(src/wrapper.rs:713:30-713:31)
  2: StorageLive(_10)
    SourceInfo(src/wrapper.rs:713:49-713:50)
  3: _10 = (((_3.1: imp::Span) as Compiler).0: proc_macro::Span)
    SourceInfo(src/wrapper.rs:713:49-713:50)
  4: StorageLive(_11)
    SourceInfo(src/wrapper.rs:713:56-713:57)
  5: _11 = &mut (*_9)
    SourceInfo(src/wrapper.rs:713:56-713:57)
  6: StorageLive(_12)
    SourceInfo(src/wrapper.rs:713:67-713:68)
  7: _12 = _10
    SourceInfo(src/wrapper.rs:713:67-713:68)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:713:56-713:69)
      kind: _0 = proc_macro::Ident::set_span(move _11, move _12) -> [return: bb9, unwind: bb14]
  }
  preds [bb3]
  succs [bb9, bb14]

bb9
  0: StorageDead(_12)
    SourceInfo(src/wrapper.rs:713:68-713:69)
  1: StorageDead(_11)
    SourceInfo(src/wrapper.rs:713:68-713:69)
  2: StorageDead(_10)
    SourceInfo(src/wrapper.rs:713:68-713:69)
  3: StorageDead(_9)
    SourceInfo(src/wrapper.rs:713:68-713:69)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:713:68-713:69)
      kind: goto -> bb13
  }
  preds [bb8]
  succs [bb13]

bb10
  0: StorageLive(_13)
    SourceInfo(src/wrapper.rs:714:30-714:31)
  1: _13 = &mut (((*(_3.0: &mut imp::Ident)) as Fallback).0: fallback::Ident)
    SourceInfo(src/wrapper.rs:714:30-714:31)
  2: StorageLive(_14)
    SourceInfo(src/wrapper.rs:714:49-714:50)
  3: _14 = (((_3.1: imp::Span) as Fallback).0: fallback::Span)
    SourceInfo(src/wrapper.rs:714:49-714:50)
  4: StorageLive(_15)
    SourceInfo(src/wrapper.rs:714:56-714:57)
  5: _15 = &mut (*_13)
    SourceInfo(src/wrapper.rs:714:56-714:57)
  6: StorageLive(_16)
    SourceInfo(src/wrapper.rs:714:67-714:68)
  7: _16 = _14
    SourceInfo(src/wrapper.rs:714:67-714:68)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:714:56-714:69)
      kind: _0 = fallback::Ident::set_span(move _15, move _16) -> [return: bb11, unwind: bb14]
  }
  preds [bb6]
  succs [bb11, bb14]

bb11
  0: StorageDead(_16)
    SourceInfo(src/wrapper.rs:714:68-714:69)
  1: StorageDead(_15)
    SourceInfo(src/wrapper.rs:714:68-714:69)
  2: StorageDead(_14)
    SourceInfo(src/wrapper.rs:714:68-714:69)
  3: StorageDead(_13)
    SourceInfo(src/wrapper.rs:714:68-714:69)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:714:68-714:69)
      kind: goto -> bb13
  }
  preds [bb10]
  succs [bb13]

bb12
  0: StorageLive(_17)
    SourceInfo(src/wrapper.rs:715:56-715:73)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:715:56-715:73)
      kind: _17 = imp::mismatch(const 715_u32) -> bb14
  }
  preds [bb4]
  succs [bb14]

bb13
  0: StorageDead(_3)
    SourceInfo(src/wrapper.rs:718:5-718:6)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:718:6-718:6)
      kind: return
  }
  preds [bb9, bb11]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:711:5-718:6)
      kind: resume
  }
  preds [bb7, bb8, bb10, bb12]
  succs []

