bb0
  0: StorageLive(_2)
    SourceInfo(src/lib.rs:247:15-247:54)
  1: StorageLive(_3)
    SourceInfo(src/lib.rs:247:50-247:53)
  2: _3 = &(*_1)
    SourceInfo(src/lib.rs:247:50-247:53)
  Terminator {
      source_info: SourceInfo(src/lib.rs:247:15-247:54)
      kind: _2 = imp::TokenStream::from_str_checked(move _3) -> [return: bb1, unwind: bb14]
  }
  preds []
  succs [bb1, bb14]

bb1
  0: StorageDead(_3)
    SourceInfo(src/lib.rs:247:53-247:54)
  1: PlaceMention(_2)
    SourceInfo(src/lib.rs:247:15-247:54)
  2: _4 = discriminant(_2)
    SourceInfo(src/lib.rs:247:15-247:54)
  Terminator {
      source_info: SourceInfo(src/lib.rs:247:9-247:54)
      kind: switchInt(move _4) -> [0: bb3, 1: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(src/lib.rs:247:15-247:54)
  Terminator {
      source_info: SourceInfo(src/lib.rs:247:15-247:54)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/lib.rs:248:13-248:23)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_8)
    SourceInfo(src/lib.rs:249:17-249:20)
  1: _8 = move ((_2 as Err).0: imp::LexError)
    SourceInfo(src/lib.rs:249:17-249:20)
  2: StorageLive(_9)
    SourceInfo(src/lib.rs:249:29-252:14)
  3: StorageLive(_10)
    SourceInfo(src/lib.rs:250:24-250:27)
  4: _10 = move _8
    SourceInfo(src/lib.rs:250:24-250:27)
  5: _9 = LexError { inner: move _10, _marker: const marker::MARKER }
    SourceInfo(src/lib.rs:249:29-252:14)
  6: StorageDead(_10)
    SourceInfo(src/lib.rs:252:13-252:14)
  7: _0 = std::result::Result::<TokenStream, LexError>::Err(move _9)
    SourceInfo(src/lib.rs:249:25-252:15)
  8: StorageDead(_9)
    SourceInfo(src/lib.rs:252:14-252:15)
  9: StorageDead(_8)
    SourceInfo(src/lib.rs:252:14-252:15)
  Terminator {
      source_info: SourceInfo(src/lib.rs:252:14-252:15)
      kind: goto -> bb9
  }
  preds [bb1, bb3]
  succs [bb9]

bb5
  0: StorageLive(_5)
    SourceInfo(src/lib.rs:248:16-248:22)
  1: _5 = move ((_2 as Ok).0: imp::TokenStream)
    SourceInfo(src/lib.rs:248:16-248:22)
  2: StorageLive(_6)
    SourceInfo(src/lib.rs:248:30-248:55)
  3: StorageLive(_7)
    SourceInfo(src/lib.rs:248:48-248:54)
  4: _7 = move _5
    SourceInfo(src/lib.rs:248:48-248:54)
  Terminator {
      source_info: SourceInfo(src/lib.rs:248:30-248:55)
      kind: _6 = TokenStream::_new(move _7) -> [return: bb6, unwind: bb11]
  }
  preds [bb3]
  succs [bb6, bb11]

bb6
  0: StorageDead(_7)
    SourceInfo(src/lib.rs:248:54-248:55)
  1: _0 = std::result::Result::<TokenStream, LexError>::Ok(move _6)
    SourceInfo(src/lib.rs:248:27-248:56)
  Terminator {
      source_info: SourceInfo(src/lib.rs:248:55-248:56)
      kind: drop(_6) -> [return: bb7, unwind: bb12]
  }
  preds [bb5]
  succs [bb7, bb12]

bb7
  0: StorageDead(_6)
    SourceInfo(src/lib.rs:248:55-248:56)
  Terminator {
      source_info: SourceInfo(src/lib.rs:248:55-248:56)
      kind: drop(_5) -> [return: bb8, unwind: bb13]
  }
  preds [bb6]
  succs [bb8, bb13]

bb8
  0: StorageDead(_5)
    SourceInfo(src/lib.rs:248:55-248:56)
  Terminator {
      source_info: SourceInfo(src/lib.rs:248:55-248:56)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/lib.rs:254:5-254:6)
      kind: drop(_2) -> [return: bb10, unwind: bb14]
  }
  preds [bb4, bb8]
  succs [bb10, bb14]

bb10
  0: StorageDead(_2)
    SourceInfo(src/lib.rs:254:5-254:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:254:6-254:6)
      kind: return
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(src/lib.rs:248:54-248:55)
      kind: drop(_7) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/lib.rs:248:55-248:56)
      kind: drop(_5) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb6, bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(src/lib.rs:254:5-254:6)
      kind: drop(_2) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb7, bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/lib.rs:246:5-254:6)
      kind: resume
  }
  preds [bb0, bb9, bb13]
  succs []

