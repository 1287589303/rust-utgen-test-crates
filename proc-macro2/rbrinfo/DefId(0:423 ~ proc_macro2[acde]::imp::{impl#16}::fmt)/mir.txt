bb0
  0: PlaceMention(_1)
    SourceInfo(src/wrapper.rs:294:15-294:19)
  1: _3 = discriminant((*_1))
    SourceInfo(src/wrapper.rs:294:15-294:19)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:294:9-294:19)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, 2: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/wrapper.rs:294:15-294:19)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:294:15-294:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:295:13-295:34)
      kind: falseEdge -> [real: bb5, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb5]

bb3
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:296:13-296:34)
      kind: falseEdge -> [real: bb7, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb7]

bb4
  0: StorageLive(_10)
    SourceInfo(src/wrapper.rs:298:21-298:29)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:298:32-298:63)
      kind: _10 = fallback::LexError::call_site() -> [return: bb9, unwind: bb12]
  }
  preds [bb0, bb3]
  succs [bb9, bb12]

bb5
  0: StorageLive(_4)
    SourceInfo(src/wrapper.rs:295:32-295:33)
  1: _4 = &(((*_1) as Compiler).0: proc_macro::LexError)
    SourceInfo(src/wrapper.rs:295:32-295:33)
  2: StorageLive(_5)
    SourceInfo(src/wrapper.rs:295:51-295:52)
  3: _5 = &(*_4)
    SourceInfo(src/wrapper.rs:295:51-295:52)
  4: StorageLive(_6)
    SourceInfo(src/wrapper.rs:295:54-295:55)
  5: _6 = &mut (*_2)
    SourceInfo(src/wrapper.rs:295:54-295:55)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:295:38-295:56)
      kind: _0 = <proc_macro::LexError as std::fmt::Display>::fmt(move _5, move _6) -> [return: bb6, unwind: bb12]
  }
  preds [bb2]
  succs [bb6, bb12]

bb6
  0: StorageDead(_6)
    SourceInfo(src/wrapper.rs:295:55-295:56)
  1: StorageDead(_5)
    SourceInfo(src/wrapper.rs:295:55-295:56)
  2: StorageDead(_4)
    SourceInfo(src/wrapper.rs:295:55-295:56)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:295:55-295:56)
      kind: goto -> bb11
  }
  preds [bb5]
  succs [bb11]

bb7
  0: StorageLive(_7)
    SourceInfo(src/wrapper.rs:296:32-296:33)
  1: _7 = &(((*_1) as Fallback).0: fallback::LexError)
    SourceInfo(src/wrapper.rs:296:32-296:33)
  2: StorageLive(_8)
    SourceInfo(src/wrapper.rs:296:51-296:52)
  3: _8 = &(*_7)
    SourceInfo(src/wrapper.rs:296:51-296:52)
  4: StorageLive(_9)
    SourceInfo(src/wrapper.rs:296:54-296:55)
  5: _9 = &mut (*_2)
    SourceInfo(src/wrapper.rs:296:54-296:55)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:296:38-296:56)
      kind: _0 = <fallback::LexError as std::fmt::Display>::fmt(move _8, move _9) -> [return: bb8, unwind: bb12]
  }
  preds [bb3]
  succs [bb8, bb12]

bb8
  0: StorageDead(_9)
    SourceInfo(src/wrapper.rs:296:55-296:56)
  1: StorageDead(_8)
    SourceInfo(src/wrapper.rs:296:55-296:56)
  2: StorageDead(_7)
    SourceInfo(src/wrapper.rs:296:55-296:56)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:296:55-296:56)
      kind: goto -> bb11
  }
  preds [bb7]
  succs [bb11]

bb9
  0: FakeRead(ForLet(None), _10)
    SourceInfo(src/wrapper.rs:298:21-298:29)
  1: StorageLive(_11)
    SourceInfo(src/wrapper.rs:299:30-299:39)
  2: StorageLive(_12)
    SourceInfo(src/wrapper.rs:299:30-299:39)
  3: _12 = &_10
    SourceInfo(src/wrapper.rs:299:30-299:39)
  4: _11 = &(*_12)
    SourceInfo(src/wrapper.rs:299:30-299:39)
  5: StorageLive(_13)
    SourceInfo(src/wrapper.rs:299:41-299:42)
  6: _13 = &mut (*_2)
    SourceInfo(src/wrapper.rs:299:41-299:42)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:299:17-299:43)
      kind: _0 = <fallback::LexError as std::fmt::Display>::fmt(move _11, move _13) -> [return: bb10, unwind: bb12]
  }
  preds [bb4]
  succs [bb10, bb12]

bb10
  0: StorageDead(_13)
    SourceInfo(src/wrapper.rs:299:42-299:43)
  1: StorageDead(_11)
    SourceInfo(src/wrapper.rs:299:42-299:43)
  2: StorageDead(_10)
    SourceInfo(src/wrapper.rs:300:13-300:14)
  3: StorageDead(_12)
    SourceInfo(src/wrapper.rs:300:13-300:14)
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:300:13-300:14)
      kind: goto -> bb11
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:302:6-302:6)
      kind: return
  }
  preds [bb6, bb8, bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(src/wrapper.rs:293:5-302:6)
      kind: resume
  }
  preds [bb4, bb5, bb7, bb9]
  succs []

