bb0
  0: StorageLive(_2)
    SourceInfo(src/fallback.rs:260:13-260:23)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:260:26-260:45)
      kind: _2 = rcvec::RcVecBuilder::<TokenTree>::new() -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  0: FakeRead(ForLet(None), _2)
    SourceInfo(src/fallback.rs:260:13-260:23)
  1: StorageLive(_3)
    SourceInfo(src/fallback.rs:261:9-261:58)
  2: StorageLive(_4)
    SourceInfo(src/fallback.rs:261:36-261:51)
  3: StorageLive(_5)
    SourceInfo(src/fallback.rs:261:36-261:42)
  4: _5 = &mut _2
    SourceInfo(src/fallback.rs:261:36-261:42)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:261:36-261:51)
      kind: _4 = rcvec::RcVecBuilder::<TokenTree>::as_mut(move _5) -> [return: bb2, unwind: bb10]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: StorageDead(_5)
    SourceInfo(src/fallback.rs:261:50-261:51)
  1: StorageLive(_6)
    SourceInfo(src/fallback.rs:261:53-261:57)
  2: _6 = move _1
    SourceInfo(src/fallback.rs:261:53-261:57)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:261:9-261:58)
      kind: _3 = fallback::push_token_from_proc_macro(move _4, move _6) -> [return: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: StorageDead(_6)
    SourceInfo(src/fallback.rs:261:57-261:58)
  1: StorageDead(_4)
    SourceInfo(src/fallback.rs:261:57-261:58)
  2: StorageDead(_3)
    SourceInfo(src/fallback.rs:261:58-261:59)
  3: StorageLive(_7)
    SourceInfo(src/fallback.rs:263:20-263:34)
  4: StorageLive(_8)
    SourceInfo(src/fallback.rs:263:20-263:26)
  5: _8 = move _2
    SourceInfo(src/fallback.rs:263:20-263:26)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:263:20-263:34)
      kind: _7 = rcvec::RcVecBuilder::<TokenTree>::build(move _8) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_8)
    SourceInfo(src/fallback.rs:263:33-263:34)
  1: _0 = fallback::TokenStream { inner: move _7 }
    SourceInfo(src/fallback.rs:262:9-264:10)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:264:9-264:10)
      kind: drop(_7) -> [return: bb5, unwind: bb10]
  }
  preds [bb3]
  succs [bb5, bb10]

bb5
  0: StorageDead(_7)
    SourceInfo(src/fallback.rs:264:9-264:10)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:265:5-265:6)
      kind: drop(_2) -> [return: bb6, unwind: bb11]
  }
  preds [bb4]
  succs [bb6, bb11]

bb6
  0: StorageDead(_2)
    SourceInfo(src/fallback.rs:265:5-265:6)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:265:5-265:6)
      kind: drop(_1) -> [return: bb7, unwind: bb12]
  }
  preds [bb5]
  succs [bb7, bb12]

bb7
  Terminator {
      source_info: SourceInfo(src/fallback.rs:265:6-265:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/fallback.rs:263:33-263:34)
      kind: drop(_8) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb10]

bb9
  Terminator {
      source_info: SourceInfo(src/fallback.rs:261:57-261:58)
      kind: drop(_6) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/fallback.rs:265:5-265:6)
      kind: drop(_2) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb1, bb4, bb8, bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/fallback.rs:265:5-265:6)
      kind: drop(_1) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb0, bb5, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/fallback.rs:259:5-265:6)
      kind: resume
  }
  preds [bb6, bb11]
  succs []

