bb0
  0: StorageLive(_2)
    SourceInfo(src/fallback.rs:74:13-74:23)
  1: StorageLive(_3)
    SourceInfo(src/fallback.rs:74:37-74:40)
  2: _3 = &(*_1)
    SourceInfo(src/fallback.rs:74:37-74:40)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:74:26-74:41)
      kind: _2 = fallback::get_cursor(move _3) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_3)
    SourceInfo(src/fallback.rs:74:40-74:41)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(src/fallback.rs:74:13-74:23)
  2: StorageLive(_4)
    SourceInfo(src/fallback.rs:78:9-80:10)
  3: StorageLive(_5)
    SourceInfo(src/fallback.rs:78:12-78:47)
  4: StorageLive(_6)
    SourceInfo(src/fallback.rs:78:12-78:18)
  5: _6 = &_2
    SourceInfo(src/fallback.rs:78:12-78:18)
  6: StorageLive(_7)
    SourceInfo(src/fallback.rs:78:31-78:46)
  7: StorageLive(_8)
    SourceInfo(src/fallback.rs:78:31-78:46)
  8: _8 = const fallback::TokenStream::from_str_checked::BYTE_ORDER_MARK
    SourceInfo(src/fallback.rs:78:31-78:46)
  9: _7 = &(*_8)
    SourceInfo(src/fallback.rs:78:31-78:46)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:78:12-78:47)
      kind: _5 = parse::Cursor::<'_>::starts_with(move _6, move _7) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  Terminator {
      source_info: SourceInfo(src/fallback.rs:78:12-78:47)
      kind: switchInt(move _5) -> [0: bb6, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_8)
    SourceInfo(src/fallback.rs:78:46-78:47)
  1: StorageDead(_7)
    SourceInfo(src/fallback.rs:78:46-78:47)
  2: StorageDead(_6)
    SourceInfo(src/fallback.rs:78:46-78:47)
  3: StorageLive(_9)
    SourceInfo(src/fallback.rs:79:22-79:59)
  4: StorageLive(_10)
    SourceInfo(src/fallback.rs:79:22-79:28)
  5: _10 = &_2
    SourceInfo(src/fallback.rs:79:22-79:28)
  6: StorageLive(_11)
    SourceInfo(src/fallback.rs:79:37-79:58)
  7: StorageLive(_12)
    SourceInfo(src/fallback.rs:79:37-79:52)
  8: StorageLive(_13)
    SourceInfo(src/fallback.rs:79:37-79:52)
  9: _13 = const fallback::TokenStream::from_str_checked::BYTE_ORDER_MARK
    SourceInfo(src/fallback.rs:79:37-79:52)
  10: _12 = &(*_13)
    SourceInfo(src/fallback.rs:79:37-79:52)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:79:37-79:58)
      kind: _11 = core::str::<impl str>::len(move _12) -> [return: bb4, unwind: bb9]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_12)
    SourceInfo(src/fallback.rs:79:57-79:58)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:79:22-79:59)
      kind: _9 = parse::Cursor::<'_>::advance(move _10, move _11) -> [return: bb5, unwind: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  0: StorageDead(_11)
    SourceInfo(src/fallback.rs:79:58-79:59)
  1: StorageDead(_10)
    SourceInfo(src/fallback.rs:79:58-79:59)
  2: _2 = move _9
    SourceInfo(src/fallback.rs:79:13-79:59)
  3: StorageDead(_9)
    SourceInfo(src/fallback.rs:79:58-79:59)
  4: StorageDead(_13)
    SourceInfo(src/fallback.rs:79:59-79:60)
  5: _4 = const ()
    SourceInfo(src/fallback.rs:78:48-80:10)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:78:9-80:10)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: StorageDead(_8)
    SourceInfo(src/fallback.rs:78:46-78:47)
  1: StorageDead(_7)
    SourceInfo(src/fallback.rs:78:46-78:47)
  2: StorageDead(_6)
    SourceInfo(src/fallback.rs:78:46-78:47)
  3: _4 = const ()
    SourceInfo(src/fallback.rs:80:10-80:10)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:78:9-80:10)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb7
  0: StorageDead(_5)
    SourceInfo(src/fallback.rs:80:9-80:10)
  1: StorageDead(_4)
    SourceInfo(src/fallback.rs:80:9-80:10)
  2: StorageLive(_14)
    SourceInfo(src/fallback.rs:82:29-82:35)
  3: _14 = _2
    SourceInfo(src/fallback.rs:82:29-82:35)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:82:9-82:36)
      kind: _0 = parse::token_stream(move _14) -> [return: bb8, unwind: bb9]
  }
  preds [bb5, bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_14)
    SourceInfo(src/fallback.rs:82:35-82:36)
  1: StorageDead(_2)
    SourceInfo(src/fallback.rs:83:5-83:6)
  Terminator {
      source_info: SourceInfo(src/fallback.rs:83:6-83:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/fallback.rs:72:5-83:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb4, bb7]
  succs []

