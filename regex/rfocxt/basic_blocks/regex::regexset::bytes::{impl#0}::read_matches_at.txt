[
    BasicBlockData {
        statements: [
            StorageLive(_5),
            _5 = &(*_1),
            StorageLive(_6),
            _6 = &mut (*_2),
            StorageLive(_7),
            _7 = &(*_3),
            StorageLive(_8),
            _8 = _4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/regexset/bytes.rs:385:9: 385:55 (#0),
                    scope: scope[0],
                },
                kind: _0 = regexset::bytes::RegexSet::matches_read_at(move _5, move _6, move _7, move _8) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            StorageDead(_6),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/regexset/bytes.rs:386:6: 386:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/regexset/bytes.rs:379:5: 386:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regexset/bytes.rs:384:10: 384:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} regexset::bytes::RegexSet,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regexset/bytes.rs:380:9: 380:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/regexset/bytes.rs:381:18: 381:29 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/regexset/bytes.rs:381:9: 381:16 (#0),
                            ),
                        ),
                        pat_span: src/regexset/bytes.rs:381:9: 381:16 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut [bool],
        user_ty: None,
        source_info: SourceInfo {
            span: src/regexset/bytes.rs:381:9: 381:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/regexset/bytes.rs:382:19: 382:24 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/regexset/bytes.rs:382:9: 382:17 (#0),
                            ),
                        ),
                        pat_span: src/regexset/bytes.rs:382:9: 382:17 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/regexset/bytes.rs:382:9: 382:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/regexset/bytes.rs:383:16: 383:21 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/regexset/bytes.rs:383:9: 383:14 (#0),
                            ),
                        ),
                        pat_span: src/regexset/bytes.rs:383:9: 383:14 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regexset/bytes.rs:383:9: 383:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/regexset/bytes.rs:385:9: 385:55 (#0),
                },
            ),
        ),
        ty: &'{erased} regexset::bytes::RegexSet,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regexset/bytes.rs:385:9: 385:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/regexset/bytes.rs:385:9: 385:55 (#0),
                },
            ),
        ),
        ty: &'{erased} mut [bool],
        user_ty: None,
        source_info: SourceInfo {
            span: src/regexset/bytes.rs:385:30: 385:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/regexset/bytes.rs:385:9: 385:55 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/regexset/bytes.rs:385:39: 385:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/regexset/bytes.rs:385:9: 385:55 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regexset/bytes.rs:385:49: 385:54 (#0),
            scope: scope[0],
        },
    },
]