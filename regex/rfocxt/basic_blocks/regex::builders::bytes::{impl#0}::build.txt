[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &((*_1).0: builders::Builder),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/builders.rs:1393:13: 1393:43 (#0),
                    scope: scope[0],
                },
                kind: _0 = builders::Builder::build_one_bytes(move _2) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/builders.rs:1394:10: 1394:10 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/builders.rs:1392:9: 1394:10 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<regex::bytes::Regex, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/builders.rs:1392:32: 1392:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} builders::bytes::RegexBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: src/builders.rs:1392:22: 1392:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/builders.rs:1393:13: 1393:43 (#0),
                },
            ),
        ),
        ty: &'{erased} builders::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: src/builders.rs:1393:13: 1393:25 (#0),
            scope: scope[0],
        },
    },
]