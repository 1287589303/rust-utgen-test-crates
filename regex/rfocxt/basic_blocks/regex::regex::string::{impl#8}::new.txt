[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = &(*_1),
            StorageLive(_5),
            _5 = _2,
            StorageLive(_6),
            _6 = _3,
            _0 = regex::string::Match::<'_> { haystack: move _4, start: move _5, end: move _6 },
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/regex/string.rs:1566:6: 1566:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: regex::string::Match<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regex/string.rs:1564:60: 1564:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/regex/string.rs:1564:22: 1564:29 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/regex/string.rs:1564:12: 1564:20 (#0),
                            ),
                        ),
                        pat_span: src/regex/string.rs:1564:12: 1564:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regex/string.rs:1564:12: 1564:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/regex/string.rs:1564:38: 1564:43 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/regex/string.rs:1564:31: 1564:36 (#0),
                            ),
                        ),
                        pat_span: src/regex/string.rs:1564:31: 1564:36 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regex/string.rs:1564:31: 1564:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/regex/string.rs:1564:50: 1564:55 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/regex/string.rs:1564:45: 1564:48 (#0),
                            ),
                        ),
                        pat_span: src/regex/string.rs:1564:45: 1564:48 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regex/string.rs:1564:45: 1564:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regex/string.rs:1565:17: 1565:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regex/string.rs:1565:27: 1565:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regex/string.rs:1565:34: 1565:37 (#0),
            scope: scope[0],
        },
    },
]