[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &mut ((*_1).0: builders::Builder),
            StorageLive(_6),
            _6 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/builders.rs:1796:13: 1796:48 (#0),
                    scope: scope[0],
                },
                kind: _4 = builders::Builder::ignore_whitespace(move _5, move _6) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_4),
            _3 = &mut (*_1),
            _0 = &mut (*_3),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/builders.rs:1798:10: 1798:10 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/builders.rs:1795:9: 1798:10 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut builders::bytes::RegexBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: src/builders.rs:1795:59: 1795:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut builders::bytes::RegexBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: src/builders.rs:1795:34: 1795:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/builders.rs:1795:50: 1795:54 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/builders.rs:1795:45: 1795:48 (#0),
                            ),
                        ),
                        pat_span: src/builders.rs:1795:45: 1795:48 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/builders.rs:1795:45: 1795:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut builders::bytes::RegexBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: src/builders.rs:1797:13: 1797:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut builders::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: src/builders.rs:1796:13: 1796:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut builders::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: src/builders.rs:1796:13: 1796:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/builders.rs:1796:44: 1796:47 (#0),
            scope: scope[0],
        },
    },
]