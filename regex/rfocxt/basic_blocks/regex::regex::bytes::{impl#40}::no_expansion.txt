[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &(*((*_1).0: &[u8])),
            _2 = alloc::borrow::Cow::<'_, [u8]>::Borrowed(move _3),
            StorageDead(_3),
            _0 = core::option::Option::<alloc::borrow::Cow<'_, [u8]>>::Some(move _2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/regex/bytes.rs:2599:35: 2599:36 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/regex/bytes.rs:2600:6: 2600:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/regex/bytes.rs:2598:5: 2600:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<alloc::borrow::Cow<'{erased}, [u8]>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regex/bytes.rs:2598:35: 2598:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut regex::bytes::NoExpand<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regex/bytes.rs:2598:21: 2598:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: alloc::borrow::Cow<'{erased}, [u8]>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/regex/bytes.rs:2599:14: 2599:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/regex/bytes.rs:2599:28: 2599:34 (#0),
            scope: scope[0],
        },
    },
]