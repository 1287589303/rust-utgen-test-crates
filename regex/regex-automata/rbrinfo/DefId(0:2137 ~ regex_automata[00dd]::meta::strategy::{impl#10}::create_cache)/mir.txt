bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1760:13-1760:22)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1760:25-1760:34)
  2: _3 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1760:25-1760:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1760:25-1760:49)
      kind: _2 = <meta::strategy::Core as meta::strategy::Strategy>::create_cache(move _3) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1760:48-1760:49)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1760:13-1760:22)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1761:27-1761:53)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1761:27-1761:38)
  4: _5 = &((*_1).3: meta::wrappers::ReverseHybrid)
    SourceInfo(regex-automata/src/meta/strategy.rs:1761:27-1761:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1761:27-1761:53)
      kind: _4 = meta::wrappers::ReverseHybrid::create_cache(move _5) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1761:52-1761:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1761:9-1761:24)
      kind: drop((_2.5: meta::wrappers::ReverseHybridCache)) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: (_2.5: meta::wrappers::ReverseHybridCache) = move _4
    SourceInfo(regex-automata/src/meta/strategy.rs:1761:9-1761:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1761:52-1761:53)
      kind: drop(_4) -> [return: bb5, unwind: bb7]
  }
  preds [bb2]
  succs [bb5, bb7]

bb4
  0: (_2.5: meta::wrappers::ReverseHybridCache) = move _4
    SourceInfo(regex-automata/src/meta/strategy.rs:1761:9-1761:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1761:52-1761:53)
      kind: drop(_4) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb7]

bb5
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1761:52-1761:53)
  1: _0 = move _2
    SourceInfo(regex-automata/src/meta/strategy.rs:1762:9-1762:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1763:5-1763:6)
      kind: drop(_2) -> [return: bb6, unwind: bb8]
  }
  preds [bb3]
  succs [bb6, bb8]

bb6
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1763:5-1763:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1763:6-1763:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1763:5-1763:6)
      kind: drop(_2) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb1, bb3, bb4]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1759:5-1763:6)
      kind: resume
  }
  preds [bb0, bb5, bb7]
  succs []

