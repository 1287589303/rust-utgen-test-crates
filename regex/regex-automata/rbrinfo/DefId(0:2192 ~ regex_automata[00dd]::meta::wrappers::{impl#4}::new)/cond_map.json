{
  "regex-automata/src/meta/wrappers.rs:205:17:205:46": [
    {
      "Bool": {
        "Other": "info.config().get_backtrack()"
      }
    }
  ],
  "regex-automata/src/meta/wrappers.rs:206:20:206:78": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "info.config().get_match_kind() != MatchKind::LeftmostFirst",
          "lhs": "info.config().get_match_kind()",
          "rhs": "MatchKind::LeftmostFirst",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/meta/wrappers.rs:211:26:214:43": [
    {
      "Try": "backtrack::Builder::new()\n                .configure(backtrack_config)\n                .build_from_nfa(nfa.clone())\n                .map_err(BuildError::nfa)?"
    }
  ]
}