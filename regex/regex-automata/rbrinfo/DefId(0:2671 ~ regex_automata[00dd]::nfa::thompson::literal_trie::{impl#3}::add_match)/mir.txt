bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:9-381:10)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:12-379:39)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:12-379:28)
  3: _4 = &((*_1).0: std::vec::Vec<nfa::thompson::literal_trie::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:12-379:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:12-379:39)
      kind: _3 = std::vec::Vec::<nfa::thompson::literal_trie::Transition>::is_empty(move _4) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:12-379:39)
      kind: switchInt(move _3) -> [0: bb6, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:38-379:39)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:44-379:66)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:44-379:55)
  3: _6 = &((*_1).1: std::vec::Vec<(usize, usize)>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:44-379:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:44-379:66)
      kind: _5 = std::vec::Vec::<(usize, usize)>::is_empty(move _6) -> [return: bb3, unwind: bb12]
  }
  preds [bb1]
  succs [bb3, bb12]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:44-379:66)
      kind: switchInt(move _5) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:65-379:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:67-381:10)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb5
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:65-379:66)
  1: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:380:13-380:19)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:381:9-381:10)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:381:9-381:10)
  4: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:381:9-381:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:385:6-385:6)
      kind: goto -> bb11
  }
  preds [bb3]
  succs [bb11]

bb6
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:379:38-379:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb7
  }
  preds [bb1]
  succs [bb7]

bb7
  0: _2 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:381:10-381:10)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:381:9-381:10)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:381:9-381:10)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:381:9-381:10)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:382:13-382:24)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:382:27-382:31)
  6: _9 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:382:27-382:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:382:27-382:52)
      kind: _8 = nfa::thompson::literal_trie::State::active_chunk_start(move _9) -> [return: bb8, unwind: bb12]
  }
  preds [bb4, bb6]
  succs [bb8, bb12]

bb8
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:382:51-382:52)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:382:13-382:24)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:383:13-383:22)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:383:25-383:41)
  4: _11 = &((*_1).0: std::vec::Vec<nfa::thompson::literal_trie::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:383:25-383:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:383:25-383:47)
      kind: _10 = std::vec::Vec::<nfa::thompson::literal_trie::Transition>::len(move _11) -> [return: bb9, unwind: bb12]
  }
  preds [bb7]
  succs [bb9, bb12]

bb9
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:383:46-383:47)
  1: FakeRead(ForLet(None), _10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:383:13-383:22)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:9-384:51)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:9-384:20)
  4: _13 = &mut ((*_1).1: std::vec::Vec<(usize, usize)>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:9-384:20)
  5: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:26-384:50)
  6: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:27-384:38)
  7: _15 = _8
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:27-384:38)
  8: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:40-384:49)
  9: _16 = _10
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:40-384:49)
  10: _14 = (move _15, move _16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:26-384:50)
  11: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:49-384:50)
  12: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:49-384:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:9-384:51)
      kind: _12 = std::vec::Vec::<(usize, usize)>::push(move _13, move _14) -> [return: bb10, unwind: bb12]
  }
  preds [bb8]
  succs [bb10, bb12]

bb10
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:50-384:51)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:50-384:51)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:384:51-384:52)
  3: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:371:29-385:6)
  4: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:385:5-385:6)
  5: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:385:5-385:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:385:6-385:6)
      kind: goto -> bb11
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:385:6-385:6)
      kind: return
  }
  preds [bb5, bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:371:5-385:6)
      kind: resume
  }
  preds [bb0, bb2, bb7, bb8, bb9]
  succs []

