bb0
  0: StorageLive(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  1: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  2: _4 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _4) -> [0: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2897:23-2897:42)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2897:23-2897:27)
  3: _7 = _2
    SourceInfo(regex-automata/src/dfa/onepass.rs:2897:23-2897:27)
  4: _6 = Lt(move _7, const dfa::onepass::Slots::LIMIT)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2897:23-2897:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2897:23-2897:42)
      kind: switchInt(move _6) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2897:41-2897:42)
  1: _5 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _3 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb5
  }
  preds [bb1]
  succs [bb5]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2897:41-2897:42)
  1: StorageLive(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _8 = core::panicking::panic(const "assertion failed: slot < Slots::LIMIT") -> bb8
  }
  preds [bb1]
  succs [bb8]

bb4
  0: _3 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb5
  }
  preds [bb0]
  succs [bb5]

bb5
  0: StorageDead(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:15-2898:45)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:15-2898:21)
  4: _10 = (_1.0: u32)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:15-2898:21)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:24-2898:45)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:25-2898:45)
  7: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:31-2898:44)
  8: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:31-2898:35)
  9: _14 = _2
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:31-2898:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2898:31-2898:44)
      kind: _13 = <usize as util::int::Usize>::as_u32(move _14) -> [return: bb6, unwind: bb8]
  }
  preds [bb2, bb4]
  succs [bb6, bb8]

bb6
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:43-2898:44)
  1: _15 = Lt(_13, const 32_u32)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:25-2898:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2898:25-2898:45)
      kind: assert(move _15, "attempt to shift left by `{}`, which would overflow", _13) -> [success: bb7, unwind: bb8]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: _12 = Shl(const 1_u32, move _13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:25-2898:45)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:44-2898:45)
  2: _11 = Not(move _12)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:24-2898:45)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:44-2898:45)
  4: _9 = BitAnd(move _10, move _11)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:15-2898:45)
  5: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:44-2898:45)
  6: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:44-2898:45)
  7: _0 = dfa::onepass::Slots(move _9)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:9-2898:46)
  8: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2898:45-2898:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2899:6-2899:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2896:5-2899:6)
      kind: resume
  }
  preds [bb3, bb5, bb6]
  succs []

