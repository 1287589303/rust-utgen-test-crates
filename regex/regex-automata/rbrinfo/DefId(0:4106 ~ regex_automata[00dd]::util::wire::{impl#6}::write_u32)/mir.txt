bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/wire.rs:888:9-888:51)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/wire.rs:888:9-888:17)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/wire.rs:888:12-888:17)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/wire.rs:888:9-888:12)
  4: _6 = &mut (*_2)
    SourceInfo(regex-automata/src/util/wire.rs:888:9-888:12)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/util/wire.rs:888:13-888:16)
  6: _7 = core::ops::RangeTo::<usize> { end: const 4_usize }
    SourceInfo(regex-automata/src/util/wire.rs:888:13-888:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:888:12-888:17)
      kind: _5 = <[u8] as core::ops::IndexMut<core::ops::RangeTo<usize>>>::index_mut(move _6, move _7) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _4 = &mut (*_5)
    SourceInfo(regex-automata/src/util/wire.rs:888:9-888:17)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/wire.rs:888:16-888:17)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/wire.rs:888:16-888:17)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/util/wire.rs:888:34-888:50)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/util/wire.rs:888:34-888:50)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/util/wire.rs:888:34-888:50)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/util/wire.rs:888:35-888:50)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/util/wire.rs:888:35-888:36)
  8: _12 = _1
    SourceInfo(regex-automata/src/util/wire.rs:888:35-888:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:888:35-888:50)
      kind: _11 = core::num::<impl u32>::to_le_bytes(move _12) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/wire.rs:888:49-888:50)
  1: _10 = &_11
    SourceInfo(regex-automata/src/util/wire.rs:888:34-888:50)
  2: _9 = &(*_10)
    SourceInfo(regex-automata/src/util/wire.rs:888:34-888:50)
  3: _8 = move _9 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/wire.rs:888:34-888:50)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/util/wire.rs:888:49-888:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:888:9-888:51)
      kind: _3 = core::slice::<impl [u8]>::copy_from_slice(move _4, move _8) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/wire.rs:888:50-888:51)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/wire.rs:888:50-888:51)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/util/wire.rs:888:51-888:52)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/util/wire.rs:888:51-888:52)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/util/wire.rs:888:51-888:52)
  5: StorageDead(_3)
    SourceInfo(regex-automata/src/util/wire.rs:888:51-888:52)
  6: _0 = const ()
    SourceInfo(regex-automata/src/util/wire.rs:887:42-889:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:889:6-889:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:887:5-889:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

