bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1649:9-1651:10)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1649:12-1649:29)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1649:12-1649:16)
  3: _5 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1649:12-1649:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1649:12-1649:29)
      kind: _4 = nfa::thompson::compiler::Compiler::is_reverse(move _5) -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1649:12-1649:29)
      kind: switchInt(move _4) -> [0: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1649:28-1649:29)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1650:20-1650:35)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1650:20-1650:24)
  3: _7 = _2
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1650:20-1650:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1650:20-1650:35)
      kind: _6 = util::look::Look::reversed(move _7) -> [return: bb3, unwind: bb11]
  }
  preds [bb1]
  succs [bb3, bb11]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1650:34-1650:35)
  1: _2 = move _6
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1650:13-1650:35)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1650:34-1650:35)
  3: _3 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1649:30-1651:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1649:9-1651:10)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1649:28-1649:29)
  1: _3 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1651:10-1651:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1649:9-1651:10)
      kind: goto -> bb5
  }
  preds [bb1]
  succs [bb5]

bb5
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1651:9-1651:10)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1651:9-1651:10)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:9-1652:34)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:9-1652:64)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:9-1652:34)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:9-1652:34)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:9-1652:21)
  7: _12 = &((*_1).2: core::cell::RefCell<nfa::thompson::builder::Builder>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:9-1652:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:9-1652:34)
      kind: _11 = core::cell::RefCell::<nfa::thompson::builder::Builder>::borrow_mut(move _12) -> [return: bb6, unwind: bb11]
  }
  preds [bb3, bb4]
  succs [bb6, bb11]

bb6
  0: _10 = &mut _11
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:9-1652:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:9-1652:64)
      kind: _9 = <core::cell::RefMut<'_, nfa::thompson::builder::Builder> as core::ops::DerefMut>::deref_mut(move _10) -> [return: bb7, unwind: bb10]
  }
  preds [bb5]
  succs [bb7, bb10]

bb7
  0: _8 = &mut (*_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:9-1652:34)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:33-1652:34)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:33-1652:34)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:59-1652:63)
  4: _13 = _2
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:59-1652:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:9-1652:64)
      kind: _0 = nfa::thompson::builder::Builder::add_look(move _8, const util::primitives::StateID::ZERO, move _13) -> [return: bb8, unwind: bb10]
  }
  preds [bb6]
  succs [bb8, bb10]

bb8
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:63-1652:64)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1652:63-1652:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1653:5-1653:6)
      kind: drop(_11) -> [return: bb9, unwind: bb11]
  }
  preds [bb7]
  succs [bb9, bb11]

bb9
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1653:5-1653:6)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1653:5-1653:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1653:6-1653:6)
      kind: return
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1653:5-1653:6)
      kind: drop(_11) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb6, bb7]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1648:5-1653:6)
      kind: resume
  }
  preds [bb0, bb2, bb5, bb8, bb10]
  succs []

