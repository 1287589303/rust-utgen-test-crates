bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1304:9-1308:10)
  1: PlaceMention(((*_1).8: core::option::Option<usize>))
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1304:30-1304:45)
  2: _3 = discriminant(((*_1).8: core::option::Option<usize>))
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1304:30-1304:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1304:16-1304:27)
      kind: switchInt(move _3) -> [1: bb1, otherwise: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1304:16-1304:27)
      kind: falseEdge -> [real: bb2, imaginary: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1304:21-1304:26)
  1: _4 = ((((*_1).8: core::option::Option<usize>) as Some).0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1304:21-1304:26)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1305:16-1305:43)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1305:16-1305:35)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1305:16-1305:20)
  5: _7 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1305:16-1305:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1305:16-1305:35)
      kind: _6 = nfa::thompson::builder::Builder::memory_usage(move _7) -> [return: bb3, unwind: bb11]
  }
  preds [bb1]
  succs [bb3, bb11]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1305:34-1305:35)
  1: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1305:38-1305:43)
  2: _8 = _4
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1305:38-1305:43)
  3: _5 = Gt(move _6, move _8)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1305:16-1305:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1305:16-1305:43)
      kind: switchInt(move _5) -> [0: bb7, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1305:42-1305:43)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1305:42-1305:43)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1306:28-1306:66)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1306:60-1306:65)
  4: _11 = _4
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1306:60-1306:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1306:28-1306:66)
      kind: _10 = nfa::thompson::error::BuildError::exceeded_size_limit(move _11) -> [return: bb5, unwind: bb11]
  }
  preds [bb3]
  succs [bb5, bb11]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1306:65-1306:66)
  1: _0 = core::result::Result::<(), nfa::thompson::error::BuildError>::Err(move _10)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1306:24-1306:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1306:66-1306:67)
      kind: drop(_10) -> [return: bb6, unwind: bb11]
  }
  preds [bb4]
  succs [bb6, bb11]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1306:66-1306:67)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1307:13-1307:14)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1308:9-1308:10)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1308:9-1308:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1310:6-1310:6)
      kind: goto -> bb10
  }
  preds [bb5]
  succs [bb10]

bb7
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1305:42-1305:43)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1305:42-1305:43)
  2: _2 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1307:14-1307:14)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1307:13-1307:14)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1308:9-1308:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1304:9-1308:10)
      kind: goto -> bb9
  }
  preds [bb3]
  succs [bb9]

bb8
  0: _2 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1308:10-1308:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1304:9-1308:10)
      kind: goto -> bb9
  }
  preds [bb0, bb1]
  succs [bb9]

bb9
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1308:9-1308:10)
  1: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1309:12-1309:14)
  2: _12 = ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1309:12-1309:14)
  3: _0 = core::result::Result::<(), nfa::thompson::error::BuildError>::Ok(move _12)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1309:9-1309:15)
  4: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1309:14-1309:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1310:6-1310:6)
      kind: goto -> bb10
  }
  preds [bb7, bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1310:6-1310:6)
      kind: return
  }
  preds [bb6, bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1303:5-1310:6)
      kind: resume
  }
  preds [bb2, bb4, bb5]
  succs []

