bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3749:9-3749:21)
  1: _3 = ((*_1).5: core::option::Option<util::alphabet::ByteSet>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3749:9-3749:21)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3749:36-3749:56)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3749:36-3749:56)
  4: _5 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3749:36-3749:56)
  5: _4 = {closure@regex-automata/src/hybrid/dfa.rs:3749:36: 3749:39} { byte: move _5 }
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3749:36-3749:56)
  6: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3749:38-3749:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3749:9-3749:57)
      kind: _0 = core::option::Option::<util::alphabet::ByteSet>::map_or::<bool, {closure@regex-automata/src/hybrid/dfa.rs:3749:36: 3749:39}>(move _3, const false, move _4) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3749:56-3749:57)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3749:56-3749:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3750:6-3750:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3748:5-3750:6)
      kind: resume
  }
  preds [bb0]
  succs []

