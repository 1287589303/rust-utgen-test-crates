bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:404:13-404:15)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:404:38-404:50)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:404:38-404:43)
  3: _6 = move _3
    SourceInfo(regex-automata/src/hybrid/regex.rs:404:38-404:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:404:38-404:50)
      kind: _5 = <I as core::convert::Into<util::search::Input<'_>>>::into(move _6) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:404:49-404:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:404:18-404:51)
      kind: _4 = util::iter::Searcher::<'_>::new(move _5) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:404:50-404:51)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:404:13-404:15)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:405:27-405:31)
  3: _7 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/regex.rs:405:27-405:31)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:405:33-405:38)
  5: _8 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/regex.rs:405:33-405:38)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:405:40-405:42)
  7: _9 = move _4
    SourceInfo(regex-automata/src/hybrid/regex.rs:405:40-405:42)
  8: _0 = hybrid::regex::FindMatches::<'_, '_, '_> { re: move _7, cache: move _8, it: move _9 }
    SourceInfo(regex-automata/src/hybrid/regex.rs:405:9-405:44)
  9: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:405:43-405:44)
  10: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:405:43-405:44)
  11: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:405:43-405:44)
  12: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:406:5-406:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:406:5-406:6)
      kind: drop(_3) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:406:6-406:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:404:49-404:50)
      kind: drop(_6) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:406:5-406:6)
      kind: drop(_3) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:399:5-406:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

