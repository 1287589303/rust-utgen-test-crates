bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1175:47)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1174:64)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1173:55)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1172:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1172:27)
      kind: _5 = core::mem::size_of::<nfa::thompson::nfa::Inner>() -> [return: bb1, unwind: bb17]
  }
  preds []
  succs [bb1, bb17]

bb1
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:15-1173:55)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:15-1173:34)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:15-1173:28)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:15-1173:28)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:15-1173:21)
  5: _10 = &((*_1).0: std::sync::Arc<nfa::thompson::nfa::Inner>)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:15-1173:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:15-1173:28)
      kind: _9 = <std::sync::Arc<nfa::thompson::nfa::Inner> as core::ops::Deref>::deref(move _10) -> [return: bb2, unwind: bb17]
  }
  preds [bb0]
  succs [bb2, bb17]

bb2
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:20-1173:21)
  1: _8 = &((*_9).0: std::vec::Vec<nfa::thompson::nfa::State>)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:15-1173:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:15-1173:34)
      kind: _7 = std::vec::Vec::<nfa::thompson::nfa::State>::len(move _8) -> [return: bb3, unwind: bb17]
  }
  preds [bb1]
  succs [bb3, bb17]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:33-1173:34)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:37-1173:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:37-1173:55)
      kind: _11 = core::mem::size_of::<nfa::thompson::nfa::State>() -> [return: bb4, unwind: bb17]
  }
  preds [bb2]
  succs [bb4, bb17]

bb4
  0: _12 = MulWithOverflow(_7, _11)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:15-1173:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:15-1173:55)
      kind: assert(!move (_12.1: bool), "attempt to compute `{} * {}`, which would overflow", move _7, move _11) -> [success: bb5, unwind: bb17]
  }
  preds [bb3]
  succs [bb5, bb17]

bb5
  0: _6 = move (_12.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:15-1173:55)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:54-1173:55)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:54-1173:55)
  3: _13 = AddWithOverflow(_5, _6)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1173:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1173:55)
      kind: assert(!move (_13.1: bool), "attempt to compute `{} + {}`, which would overflow", move _5, move _6) -> [success: bb6, unwind: bb17]
  }
  preds [bb4]
  succs [bb6, bb17]

bb6
  0: _4 = move (_13.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1173:55)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:54-1173:55)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1173:54-1173:55)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:15-1174:64)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:15-1174:41)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:15-1174:35)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:15-1174:35)
  7: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:15-1174:21)
  8: _18 = &((*_1).0: std::sync::Arc<nfa::thompson::nfa::Inner>)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:15-1174:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:15-1174:35)
      kind: _17 = <std::sync::Arc<nfa::thompson::nfa::Inner> as core::ops::Deref>::deref(move _18) -> [return: bb7, unwind: bb17]
  }
  preds [bb5]
  succs [bb7, bb17]

bb7
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:20-1174:21)
  1: _16 = &((*_17).3: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:15-1174:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:15-1174:41)
      kind: _15 = std::vec::Vec::<util::primitives::StateID>::len(move _16) -> [return: bb8, unwind: bb17]
  }
  preds [bb6]
  succs [bb8, bb17]

bb8
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:40-1174:41)
  1: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:44-1174:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:44-1174:64)
      kind: _19 = core::mem::size_of::<util::primitives::StateID>() -> [return: bb9, unwind: bb17]
  }
  preds [bb7]
  succs [bb9, bb17]

bb9
  0: _20 = MulWithOverflow(_15, _19)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:15-1174:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:15-1174:64)
      kind: assert(!move (_20.1: bool), "attempt to compute `{} * {}`, which would overflow", move _15, move _19) -> [success: bb10, unwind: bb17]
  }
  preds [bb8]
  succs [bb10, bb17]

bb10
  0: _14 = move (_20.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:15-1174:64)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:63-1174:64)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:63-1174:64)
  3: _21 = AddWithOverflow(_4, _14)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1174:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1174:64)
      kind: assert(!move (_21.1: bool), "attempt to compute `{} + {}`, which would overflow", move _4, move _14) -> [success: bb11, unwind: bb17]
  }
  preds [bb9]
  succs [bb11, bb17]

bb11
  0: _3 = move (_21.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1174:64)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:63-1174:64)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1174:63-1174:64)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1175:15-1175:47)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1175:15-1175:32)
  5: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1175:15-1175:32)
  6: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1175:15-1175:21)
  7: _25 = &((*_1).0: std::sync::Arc<nfa::thompson::nfa::Inner>)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1175:15-1175:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1175:15-1175:32)
      kind: _24 = <std::sync::Arc<nfa::thompson::nfa::Inner> as core::ops::Deref>::deref(move _25) -> [return: bb12, unwind: bb17]
  }
  preds [bb10]
  succs [bb12, bb17]

bb12
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1175:20-1175:21)
  1: _23 = &((*_24).4: util::captures::GroupInfo)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1175:15-1175:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1175:15-1175:47)
      kind: _22 = util::captures::GroupInfo::memory_usage(move _23) -> [return: bb13, unwind: bb17]
  }
  preds [bb11]
  succs [bb13, bb17]

bb13
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1175:46-1175:47)
  1: _26 = AddWithOverflow(_3, _22)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1175:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1175:47)
      kind: assert(!move (_26.1: bool), "attempt to compute `{} + {}`, which would overflow", move _3, move _22) -> [success: bb14, unwind: bb17]
  }
  preds [bb12]
  succs [bb14, bb17]

bb14
  0: _2 = move (_26.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1175:47)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1175:46-1175:47)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1175:46-1175:47)
  3: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1176:15-1176:34)
  4: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1176:15-1176:34)
  5: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1176:15-1176:21)
  6: _29 = &((*_1).0: std::sync::Arc<nfa::thompson::nfa::Inner>)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1176:15-1176:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1176:15-1176:34)
      kind: _28 = <std::sync::Arc<nfa::thompson::nfa::Inner> as core::ops::Deref>::deref(move _29) -> [return: bb15, unwind: bb17]
  }
  preds [bb13]
  succs [bb15, bb17]

bb15
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1176:20-1176:21)
  1: _27 = ((*_28).14: usize)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1176:15-1176:34)
  2: _30 = AddWithOverflow(_2, _27)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1176:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1176:34)
      kind: assert(!move (_30.1: bool), "attempt to compute `{} + {}`, which would overflow", move _2, move _27) -> [success: bb16, unwind: bb17]
  }
  preds [bb14]
  succs [bb16, bb17]

bb16
  0: _0 = move (_30.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1172:9-1176:34)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1176:33-1176:34)
  2: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1176:33-1176:34)
  3: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1177:5-1177:6)
  4: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1177:5-1177:6)
  5: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1177:5-1177:6)
  6: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1177:5-1177:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1177:6-1177:6)
      kind: return
  }
  preds [bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1169:5-1177:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb15]
  succs []

