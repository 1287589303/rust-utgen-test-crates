bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:9-2023:53)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:9-2023:17)
  2: _4 = &mut ((*_1).0: util::sparse_set::SparseSet)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:9-2023:17)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:25-2023:52)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:25-2023:46)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:25-2023:46)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:25-2023:37)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:25-2023:37)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:25-2023:27)
  9: _10 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:25-2023:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:25-2023:37)
      kind: _9 = nfa::thompson::pikevm::PikeVM::get_nfa(move _10) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: _8 = &(*_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:25-2023:37)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:36-2023:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:25-2023:46)
      kind: _7 = nfa::thompson::nfa::NFA::states(move _8) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: _6 = &(*_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:25-2023:46)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:45-2023:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:25-2023:52)
      kind: _5 = core::slice::<impl [nfa::thompson::nfa::State]>::len(move _6) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:51-2023:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:9-2023:53)
      kind: _3 = util::sparse_set::SparseSet::resize(move _4, move _5) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:52-2023:53)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:52-2023:53)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:53-2023:54)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:53-2023:54)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2023:53-2023:54)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2024:9-2024:34)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2024:9-2024:24)
  7: _12 = &mut ((*_1).1: nfa::thompson::pikevm::SlotTable)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2024:9-2024:24)
  8: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2024:31-2024:33)
  9: _13 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2024:31-2024:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2024:9-2024:34)
      kind: _11 = nfa::thompson::pikevm::SlotTable::reset(move _12, move _13) -> [return: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2024:33-2024:34)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2024:33-2024:34)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2024:34-2024:35)
  3: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2022:38-2025:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2025:6-2025:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2022:5-2025:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

