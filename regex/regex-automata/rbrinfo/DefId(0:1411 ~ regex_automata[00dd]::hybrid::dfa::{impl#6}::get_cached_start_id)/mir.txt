bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2686:13-2686:24)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2686:27-2686:32)
  2: _5 = &_3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2686:27-2686:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2686:27-2686:43)
      kind: _4 = util::start::Start::as_usize(move _5) -> [return: bb1, unwind: bb31]
  }
  preds []
  succs [bb1, bb31]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2686:42-2686:43)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2686:13-2686:24)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2687:13-2687:18)
  3: PlaceMention(_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2687:27-2687:35)
  4: _7 = discriminant(_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2687:27-2687:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2687:21-2687:35)
      kind: switchInt(move _7) -> [0: bb3, 1: bb4, 2: bb5, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb5]

bb2
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2687:27-2687:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2687:27-2687:35)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2688:13-2688:25)
      kind: falseEdge -> [real: bb6, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb6]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2689:13-2689:26)
      kind: falseEdge -> [real: bb7, imaginary: bb5]
  }
  preds [bb1, bb3]
  succs [bb5, bb7]

bb5
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2690:31-2690:34)
  1: _11 = ((_2 as Pattern).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2690:31-2690:34)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:17-2693:18)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:21-2691:72)
  4: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:21-2691:42)
  5: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:21-2691:42)
  6: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:21-2691:29)
  7: _16 = &(*((*_1).0: &hybrid::dfa::DFA))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:21-2691:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:21-2691:42)
      kind: _15 = hybrid::dfa::DFA::get_config(move _16) -> [return: bb10, unwind: bb31]
  }
  preds [bb1, bb4]
  succs [bb10, bb31]

bb6
  0: _6 = _4
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2688:29-2688:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2688:29-2688:40)
      kind: goto -> bb27
  }
  preds [bb3]
  succs [bb27]

bb7
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2689:30-2689:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2689:30-2689:42)
      kind: _8 = util::start::Start::len() -> [return: bb8, unwind: bb31]
  }
  preds [bb4]
  succs [bb8, bb31]

bb8
  0: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2689:45-2689:56)
  1: _9 = _4
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2689:45-2689:56)
  2: _10 = AddWithOverflow(_8, _9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2689:30-2689:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2689:30-2689:56)
      kind: assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", move _8, move _9) -> [success: bb9, unwind: bb31]
  }
  preds [bb7]
  succs [bb9, bb31]

bb9
  0: _6 = move (_10.0: usize)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2689:30-2689:56)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2689:55-2689:56)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2689:55-2689:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2689:55-2689:56)
      kind: goto -> bb27
  }
  preds [bb8]
  succs [bb27]

bb10
  0: _14 = &(*_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:21-2691:42)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:41-2691:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:21-2691:72)
      kind: _13 = hybrid::dfa::Config::get_starts_for_each_pattern(move _14) -> [return: bb11, unwind: bb31]
  }
  preds [bb5]
  succs [bb11, bb31]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:21-2691:72)
      kind: switchInt(move _13) -> [0: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13]

bb12
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:71-2691:72)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:71-2691:72)
  2: _12 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2693:18-2693:18)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2693:17-2693:18)
  4: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2693:17-2693:18)
  5: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:17-2696:18)
  6: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:20-2694:60)
  7: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:20-2694:34)
  8: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:20-2694:23)
  9: _23 = &_11
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:20-2694:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:20-2694:34)
      kind: _22 = util::primitives::PatternID::as_usize(move _23) -> [return: bb15, unwind: bb31]
  }
  preds [bb11]
  succs [bb15, bb31]

bb13
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:71-2691:72)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2691:71-2691:72)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2692:32-2692:74)
  3: StorageLive(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2692:65-2692:73)
  4: _19 = _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2692:65-2692:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2692:32-2692:74)
      kind: _18 = hybrid::error::StartError::unsupported_anchored(move _19) -> [return: bb14, unwind: bb31]
  }
  preds [bb11]
  succs [bb14, bb31]

bb14
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2692:73-2692:74)
  1: _0 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::StartError>::Err(move _18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2692:28-2692:75)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2692:74-2692:75)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2693:17-2693:18)
  4: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2693:17-2693:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb29
  }
  preds [bb13]
  succs [bb29]

bb15
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:33-2694:34)
  1: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:38-2694:60)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:38-2694:46)
  3: _25 = &(*((*_1).0: &hybrid::dfa::DFA))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:38-2694:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:38-2694:60)
      kind: _24 = hybrid::dfa::DFA::pattern_len(move _25) -> [return: bb16, unwind: bb31]
  }
  preds [bb12]
  succs [bb16, bb31]

bb16
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:59-2694:60)
  1: _21 = Ge(move _22, move _24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:20-2694:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:20-2694:60)
      kind: switchInt(move _21) -> [0: bb19, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb19]

bb17
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:59-2694:60)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:59-2694:60)
  2: StorageLive(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2695:31-2695:45)
  3: StorageLive(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2695:31-2695:35)
  4: _28 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2695:31-2695:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2695:31-2695:45)
      kind: _27 = hybrid::dfa::LazyRef::<'_, '_>::dead_id(move _28) -> [return: bb18, unwind: bb31]
  }
  preds [bb16]
  succs [bb18, bb31]

bb18
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2695:44-2695:45)
  1: _0 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::StartError>::Ok(move _27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2695:28-2695:46)
  2: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2695:45-2695:46)
  3: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2696:17-2696:18)
  4: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2696:17-2696:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb29
  }
  preds [bb17]
  succs [bb29]

bb19
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:59-2694:60)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2694:59-2694:60)
  2: _20 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2696:18-2696:18)
  3: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2696:17-2696:18)
  4: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2696:17-2696:18)
  5: StorageLive(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2697:17-2698:54)
  6: StorageLive(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2697:17-2697:35)
  7: StorageLive(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2697:22-2697:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2697:22-2697:34)
      kind: _31 = util::start::Start::len() -> [return: bb20, unwind: bb31]
  }
  preds [bb16]
  succs [bb20, bb31]

bb20
  0: _32 = MulWithOverflow(const 2_usize, _31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2697:17-2697:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2697:17-2697:35)
      kind: assert(!move (_32.1: bool), "attempt to compute `{} * {}`, which would overflow", const 2_usize, move _31) -> [success: bb21, unwind: bb31]
  }
  preds [bb19]
  succs [bb21, bb31]

bb21
  0: _30 = move (_32.0: usize)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2697:17-2697:35)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2697:34-2697:35)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:23-2698:54)
  3: StorageLive(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:24-2698:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:24-2698:36)
      kind: _34 = util::start::Start::len() -> [return: bb22, unwind: bb31]
  }
  preds [bb20]
  succs [bb22, bb31]

bb22
  0: StorageLive(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:39-2698:53)
  1: StorageLive(_36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:39-2698:42)
  2: _36 = &_11
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:39-2698:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:39-2698:53)
      kind: _35 = util::primitives::PatternID::as_usize(move _36) -> [return: bb23, unwind: bb31]
  }
  preds [bb21]
  succs [bb23, bb31]

bb23
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:52-2698:53)
  1: _37 = MulWithOverflow(_34, _35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:23-2698:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:23-2698:54)
      kind: assert(!move (_37.1: bool), "attempt to compute `{} * {}`, which would overflow", move _34, move _35) -> [success: bb24, unwind: bb31]
  }
  preds [bb22]
  succs [bb24, bb31]

bb24
  0: _33 = move (_37.0: usize)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:23-2698:54)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:53-2698:54)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:53-2698:54)
  3: _38 = AddWithOverflow(_30, _33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2697:17-2698:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2697:17-2698:54)
      kind: assert(!move (_38.1: bool), "attempt to compute `{} + {}`, which would overflow", move _30, move _33) -> [success: bb25, unwind: bb31]
  }
  preds [bb23]
  succs [bb25, bb31]

bb25
  0: _29 = move (_38.0: usize)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2697:17-2698:54)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:53-2698:54)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2698:53-2698:54)
  3: StorageLive(_39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2699:23-2699:34)
  4: _39 = _4
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2699:23-2699:34)
  5: _40 = AddWithOverflow(_29, _39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2697:17-2699:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2697:17-2699:34)
      kind: assert(!move (_40.1: bool), "attempt to compute `{} + {}`, which would overflow", move _29, move _39) -> [success: bb26, unwind: bb31]
  }
  preds [bb24]
  succs [bb26, bb31]

bb26
  0: _6 = move (_40.0: usize)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2697:17-2699:34)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2699:33-2699:34)
  2: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2699:33-2699:34)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2700:13-2700:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2700:13-2700:14)
      kind: goto -> bb27
  }
  preds [bb25]
  succs [bb27]

bb27
  0: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2687:13-2687:18)
  1: StorageLive(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2702:12-2702:36)
  2: StorageLive(_42)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2702:29-2702:36)
  3: StorageLive(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2702:12-2702:29)
  4: _43 = &((*((*_1).1: &hybrid::dfa::Cache)).1: std::vec::Vec<hybrid::id::LazyStateID>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2702:12-2702:29)
  5: StorageLive(_44)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2702:30-2702:35)
  6: _44 = _6
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2702:30-2702:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2702:29-2702:36)
      kind: _42 = <std::vec::Vec<hybrid::id::LazyStateID> as core::ops::Index<usize>>::index(move _43, move _44) -> [return: bb28, unwind: bb31]
  }
  preds [bb6, bb9, bb26]
  succs [bb28, bb31]

bb28
  0: _41 = (*_42)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2702:12-2702:36)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2702:35-2702:36)
  2: StorageDead(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2702:35-2702:36)
  3: _0 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::StartError>::Ok(move _41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2702:9-2702:37)
  4: StorageDead(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2702:36-2702:37)
  5: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2703:5-2703:6)
  6: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2703:5-2703:6)
  7: StorageDead(_42)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2703:5-2703:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2703:6-2703:6)
      kind: goto -> bb30
  }
  preds [bb27]
  succs [bb30]

bb29
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2700:13-2700:14)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2703:5-2703:6)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2703:5-2703:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2703:6-2703:6)
      kind: goto -> bb30
  }
  preds [bb14, bb18]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2703:6-2703:6)
      kind: return
  }
  preds [bb28, bb29]
  succs []

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2681:5-2703:6)
      kind: resume
  }
  preds [bb0, bb5, bb7, bb8, bb10, bb12, bb13, bb15, bb17, bb19, bb20, bb21, bb22, bb23, bb24, bb25, bb27]
  succs []

