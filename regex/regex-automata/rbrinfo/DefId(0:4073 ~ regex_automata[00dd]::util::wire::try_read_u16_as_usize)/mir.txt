bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/wire.rs:683:5-683:30)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/wire.rs:683:18-683:23)
  2: _4 = &(*_1)
    SourceInfo(regex-automata/src/util/wire.rs:683:18-683:23)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/wire.rs:683:25-683:29)
  4: _5 = _2
    SourceInfo(regex-automata/src/util/wire.rs:683:25-683:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:683:5-683:30)
      kind: _3 = util::wire::try_read_u16(move _4, move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/wire.rs:683:29-683:30)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/wire.rs:683:29-683:30)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/util/wire.rs:683:40-687:6)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/util/wire.rs:683:40-687:6)
  4: _7 = &_2
    SourceInfo(regex-automata/src/util/wire.rs:683:40-687:6)
  5: _6 = {closure@regex-automata/src/util/wire.rs:683:40: 683:49} { what: move _7 }
    SourceInfo(regex-automata/src/util/wire.rs:683:40-687:6)
  6: StorageDead(_7)
    SourceInfo(regex-automata/src/util/wire.rs:683:48-683:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:683:5-687:7)
      kind: _0 = core::result::Result::<(u16, usize), util::wire::DeserializeError>::and_then::<(usize, usize), {closure@regex-automata/src/util/wire.rs:683:40: 683:49}>(move _3, move _6) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/wire.rs:687:6-687:7)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/util/wire.rs:687:6-687:7)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:688:2-688:2)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:679:1-688:2)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

