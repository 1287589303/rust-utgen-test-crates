Body {
    params: [
        Param {
            hir_id: HirId(DefId(0:4513 ~ regex_automata[00dd]::util::utf8::is_leading_or_invalid_byte).1),
            pat: Pat {
                hir_id: HirId(DefId(0:4513 ~ regex_automata[00dd]::util::utf8::is_leading_or_invalid_byte).2),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:4513 ~ regex_automata[00dd]::util::utf8::is_leading_or_invalid_byte).2),
                    b#0,
                    None,
                ),
                span: regex-automata/src/util/utf8.rs:143:31: 143:32 (#0),
                default_binding_modes: true,
            },
            ty_span: regex-automata/src/util/utf8.rs:143:34: 143:36 (#0),
            span: regex-automata/src/util/utf8.rs:143:31: 143:36 (#0),
        },
    ],
    value: Expr {
        hir_id: HirId(DefId(0:4513 ~ regex_automata[00dd]::util::utf8::is_leading_or_invalid_byte).10),
        kind: Block(
            Block {
                stmts: [],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:4513 ~ regex_automata[00dd]::util::utf8::is_leading_or_invalid_byte).3),
                        kind: Binary(
                            Spanned {
                                node: Ne,
                                span: regex-automata/src/util/utf8.rs:163:23: 163:25 (#0),
                            },
                            Expr {
                                hir_id: HirId(DefId(0:4513 ~ regex_automata[00dd]::util::utf8::is_leading_or_invalid_byte).4),
                                kind: Binary(
                                    Spanned {
                                        node: BitAnd,
                                        span: regex-automata/src/util/utf8.rs:163:8: 163:9 (#0),
                                    },
                                    Expr {
                                        hir_id: HirId(DefId(0:4513 ~ regex_automata[00dd]::util::utf8::is_leading_or_invalid_byte).5),
                                        kind: Path(
                                            Resolved(
                                                None,
                                                Path {
                                                    span: regex-automata/src/util/utf8.rs:163:6: 163:7 (#0),
                                                    res: Local(
                                                        HirId(DefId(0:4513 ~ regex_automata[00dd]::util::utf8::is_leading_or_invalid_byte).2),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            ident: b#0,
                                                            hir_id: HirId(DefId(0:4513 ~ regex_automata[00dd]::util::utf8::is_leading_or_invalid_byte).6),
                                                            res: Local(
                                                                HirId(DefId(0:4513 ~ regex_automata[00dd]::util::utf8::is_leading_or_invalid_byte).2),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                    ],
                                                },
                                            ),
                                        ),
                                        span: regex-automata/src/util/utf8.rs:163:6: 163:7 (#0),
                                    },
                                    Expr {
                                        hir_id: HirId(DefId(0:4513 ~ regex_automata[00dd]::util::utf8::is_leading_or_invalid_byte).7),
                                        kind: Lit(
                                            Spanned {
                                                node: Int(
                                                    Pu128(
                                                        192,
                                                    ),
                                                    Unsuffixed,
                                                ),
                                                span: regex-automata/src/util/utf8.rs:163:10: 163:21 (#0),
                                            },
                                        ),
                                        span: regex-automata/src/util/utf8.rs:163:10: 163:21 (#0),
                                    },
                                ),
                                span: regex-automata/src/util/utf8.rs:163:5: 163:22 (#0),
                            },
                            Expr {
                                hir_id: HirId(DefId(0:4513 ~ regex_automata[00dd]::util::utf8::is_leading_or_invalid_byte).8),
                                kind: Lit(
                                    Spanned {
                                        node: Int(
                                            Pu128(
                                                128,
                                            ),
                                            Unsuffixed,
                                        ),
                                        span: regex-automata/src/util/utf8.rs:163:26: 163:37 (#0),
                                    },
                                ),
                                span: regex-automata/src/util/utf8.rs:163:26: 163:37 (#0),
                            },
                        ),
                        span: regex-automata/src/util/utf8.rs:163:5: 163:37 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:4513 ~ regex_automata[00dd]::util::utf8::is_leading_or_invalid_byte).9),
                rules: DefaultBlock,
                span: regex-automata/src/util/utf8.rs:143:46: 164:2 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: regex-automata/src/util/utf8.rs:143:46: 164:2 (#0),
    },
}