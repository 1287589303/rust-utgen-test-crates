bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:741:26-741:45)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:741:26-741:34)
  2: _5 = &((*_1).8: meta::wrappers::DFA)
    SourceInfo(regex-automata/src/meta/strategy.rs:741:26-741:34)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:741:39-741:44)
  4: _6 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:741:39-741:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:741:26-741:45)
      kind: _4 = meta::wrappers::DFA::get(move _5, move _6) -> [return: bb1, unwind: bb26]
  }
  preds []
  succs [bb1, bb26]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:741:44-741:45)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:741:44-741:45)
  2: PlaceMention(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:741:26-741:45)
  3: _7 = discriminant(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:741:26-741:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:741:16-741:23)
      kind: switchInt(move _7) -> [1: bb2, otherwise: bb11]
  }
  preds [bb0]
  succs [bb2, bb11]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:741:16-741:23)
      kind: falseEdge -> [real: bb3, imaginary: bb11]
  }
  preds [bb1]
  succs [bb3, bb11]

bb3
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:741:21-741:22)
  1: _8 = ((_4 as Some).0: &meta::wrappers::DFAEngine)
    SourceInfo(regex-automata/src/meta/strategy.rs:741:21-741:22)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:743:19-743:47)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:743:19-743:20)
  4: _10 = &(*_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:743:19-743:20)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:743:41-743:46)
  6: _11 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:743:41-743:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:743:19-743:47)
      kind: _9 = meta::wrappers::DFAEngine::try_search_half_fwd(move _10, move _11) -> [return: bb4, unwind: bb26]
  }
  preds [bb2]
  succs [bb4, bb26]

bb4
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:743:46-743:47)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:743:46-743:47)
  2: PlaceMention(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:743:19-743:47)
  3: _12 = discriminant(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:743:19-743:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:743:13-743:47)
      kind: switchInt(move _12) -> [0: bb6, 1: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _9)
    SourceInfo(regex-automata/src/meta/strategy.rs:743:19-743:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:743:19-743:47)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:744:17-744:22)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:745:21-745:25)
  1: _14 = move ((_9 as Err).0: meta::error::RetryFailError)
    SourceInfo(regex-automata/src/meta/strategy.rs:745:21-745:25)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:747:21-747:25)
  3: _15 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:747:21-747:25)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:747:45-747:50)
  5: _16 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:747:45-747:50)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:747:52-747:57)
  7: _17 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:747:52-747:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:747:21-747:58)
      kind: _0 = meta::strategy::Core::search_half_nofail(move _15, move _16, move _17) -> [return: bb9, unwind: bb26]
  }
  preds [bb4, bb6]
  succs [bb9, bb26]

bb8
  0: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:744:20-744:21)
  1: _13 = ((_9 as Ok).0: core::option::Option<util::search::HalfMatch>)
    SourceInfo(regex-automata/src/meta/strategy.rs:744:20-744:21)
  2: _0 = _13
    SourceInfo(regex-automata/src/meta/strategy.rs:744:26-744:27)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:744:26-744:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:744:26-744:27)
      kind: goto -> bb10
  }
  preds [bb6]
  succs [bb10]

bb9
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:747:57-747:58)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:747:57-747:58)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:747:57-747:58)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:748:17-748:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:748:17-748:18)
      kind: goto -> bb10
  }
  preds [bb7]
  succs [bb10]

bb10
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:750:9-750:10)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:750:9-750:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:741:9-761:10)
      kind: goto -> bb25
  }
  preds [bb8, bb9]
  succs [bb25]

bb11
  0: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:750:33-750:55)
  1: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:750:33-750:44)
  2: _19 = &((*_1).7: meta::wrappers::Hybrid)
    SourceInfo(regex-automata/src/meta/strategy.rs:750:33-750:44)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:750:49-750:54)
  4: _20 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:750:49-750:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:750:33-750:55)
      kind: _18 = meta::wrappers::Hybrid::get(move _19, move _20) -> [return: bb12, unwind: bb26]
  }
  preds [bb1, bb2]
  succs [bb12, bb26]

bb12
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:750:54-750:55)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:750:54-750:55)
  2: PlaceMention(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:750:33-750:55)
  3: _21 = discriminant(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:750:33-750:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:750:23-750:30)
      kind: switchInt(move _21) -> [1: bb13, otherwise: bb22]
  }
  preds [bb11]
  succs [bb13, bb22]

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:750:23-750:30)
      kind: falseEdge -> [real: bb14, imaginary: bb22]
  }
  preds [bb12]
  succs [bb14, bb22]

bb14
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:750:28-750:29)
  1: _22 = ((_18 as Some).0: &meta::wrappers::HybridEngine)
    SourceInfo(regex-automata/src/meta/strategy.rs:750:28-750:29)
  2: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:19-752:66)
  3: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:19-752:20)
  4: _24 = &(*_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:19-752:20)
  5: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:41-752:58)
  6: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:41-752:58)
  7: _26 = &mut ((*_2).4: meta::wrappers::HybridCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:41-752:58)
  8: _25 = &mut (*_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:41-752:58)
  9: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:60-752:65)
  10: _27 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:60-752:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:752:19-752:66)
      kind: _23 = meta::wrappers::HybridEngine::try_search_half_fwd(move _24, move _25, move _27) -> [return: bb15, unwind: bb26]
  }
  preds [bb13]
  succs [bb15, bb26]

bb15
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:65-752:66)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:65-752:66)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:65-752:66)
  3: PlaceMention(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:19-752:66)
  4: _28 = discriminant(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:19-752:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:752:13-752:66)
      kind: switchInt(move _28) -> [0: bb17, 1: bb18, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb17, bb18]

bb16
  0: FakeRead(ForMatchedPlace(None), _23)
    SourceInfo(regex-automata/src/meta/strategy.rs:752:19-752:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:752:19-752:66)
      kind: unreachable
  }
  preds [bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:753:17-753:22)
      kind: falseEdge -> [real: bb19, imaginary: bb18]
  }
  preds [bb15]
  succs [bb18, bb19]

bb18
  0: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:754:21-754:25)
  1: _30 = move ((_23 as Err).0: meta::error::RetryFailError)
    SourceInfo(regex-automata/src/meta/strategy.rs:754:21-754:25)
  2: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:756:21-756:25)
  3: _31 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:756:21-756:25)
  4: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:756:45-756:50)
  5: _32 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:756:45-756:50)
  6: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:756:52-756:57)
  7: _33 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:756:52-756:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:756:21-756:58)
      kind: _0 = meta::strategy::Core::search_half_nofail(move _31, move _32, move _33) -> [return: bb20, unwind: bb26]
  }
  preds [bb15, bb17]
  succs [bb20, bb26]

bb19
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:753:20-753:21)
  1: _29 = ((_23 as Ok).0: core::option::Option<util::search::HalfMatch>)
    SourceInfo(regex-automata/src/meta/strategy.rs:753:20-753:21)
  2: _0 = _29
    SourceInfo(regex-automata/src/meta/strategy.rs:753:26-753:27)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:753:26-753:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:753:26-753:27)
      kind: goto -> bb21
  }
  preds [bb17]
  succs [bb21]

bb20
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:756:57-756:58)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:756:57-756:58)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:756:57-756:58)
  3: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:757:17-757:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:757:17-757:18)
      kind: goto -> bb21
  }
  preds [bb18]
  succs [bb21]

bb21
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:759:9-759:10)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:759:9-759:10)
  2: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:759:9-759:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:750:16-761:10)
      kind: goto -> bb24
  }
  preds [bb19, bb20]
  succs [bb24]

bb22
  0: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:760:13-760:17)
  1: _34 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:760:13-760:17)
  2: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:760:37-760:42)
  3: _35 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:760:37-760:42)
  4: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:760:44-760:49)
  5: _36 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:760:44-760:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:760:13-760:50)
      kind: _0 = meta::strategy::Core::search_half_nofail(move _34, move _35, move _36) -> [return: bb23, unwind: bb26]
  }
  preds [bb12, bb13]
  succs [bb23, bb26]

bb23
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:760:49-760:50)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:760:49-760:50)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:760:49-760:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:750:16-761:10)
      kind: goto -> bb24
  }
  preds [bb22]
  succs [bb24]

bb24
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:761:9-761:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:741:9-761:10)
      kind: goto -> bb25
  }
  preds [bb21, bb23]
  succs [bb25]

bb25
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:762:5-762:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:762:6-762:6)
      kind: return
  }
  preds [bb10, bb24]
  succs []

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:733:5-762:6)
      kind: resume
  }
  preds [bb0, bb3, bb7, bb11, bb14, bb18, bb22]
  succs []

