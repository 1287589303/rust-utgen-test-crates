bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/hybrid/error.rs:53:19-53:70)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/error.rs:53:65-53:68)
  2: _3 = move _1
    SourceInfo(regex-automata/src/hybrid/error.rs:53:65-53:68)
  3: _2 = hybrid::error::BuildErrorKind::InsufficientStateIDCapacity { err: move _3 }
    SourceInfo(regex-automata/src/hybrid/error.rs:53:19-53:70)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/error.rs:53:69-53:70)
  5: _0 = hybrid::error::BuildError { kind: move _2 }
    SourceInfo(regex-automata/src/hybrid/error.rs:52:9-54:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/error.rs:54:9-54:10)
      kind: drop(_2) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/hybrid/error.rs:54:9-54:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/error.rs:55:6-55:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/error.rs:49:5-55:6)
      kind: resume
  }
  preds [bb0]
  succs []

