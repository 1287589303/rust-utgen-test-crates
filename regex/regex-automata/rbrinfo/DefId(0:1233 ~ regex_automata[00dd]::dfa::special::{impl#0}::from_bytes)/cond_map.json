{
  "regex-automata/src/dfa/special.rs:236:19:236:45": [
    {
      "Try": "read_id(\"special max id\")?"
    }
  ],
  "regex-automata/src/dfa/special.rs:255:9:255:28": [
    {
      "Try": "special.validate()?"
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-automata/src/dfa/special.rs:237:23:237:50": [
    {
      "Try": "read_id(\"special quit id\")?"
    }
  ],
  "regex-automata/src/dfa/special.rs:238:25:238:57": [
    {
      "Try": "read_id(\"special min match id\")?"
    }
  ],
  "regex-automata/src/dfa/special.rs:226:38:226:55": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "8 * StateID::SIZE",
          "lhs": "8",
          "rhs": "StateID::SIZE",
          "cmp_with_int": true
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21:40:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "(*left_val == *right_val)",
          "lhs": "*left_val",
          "rhs": "*right_val",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/special.rs:226:9:226:75": [
    {
      "Try": "wire::check_slice_len(slice, 8 * StateID::SIZE, \"special states\")?"
    }
  ],
  "regex-automata/src/dfa/special.rs:240:25:240:57": [
    {
      "Try": "read_id(\"special min accel id\")?"
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9:48:10": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-automata/src/dfa/special.rs:241:25:241:57": [
    {
      "Try": "read_id(\"special max accel id\")?"
    }
  ],
  "regex-automata/src/dfa/special.rs:242:25:242:57": [
    {
      "Try": "read_id(\"special min start id\")?"
    }
  ],
  "regex-automata/src/dfa/special.rs:239:25:239:57": [
    {
      "Try": "read_id(\"special max match id\")?"
    }
  ],
  "regex-automata/src/dfa/special.rs:243:25:243:57": [
    {
      "Try": "read_id(\"special max start id\")?"
    }
  ]
}