bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/pool.rs:631:31-631:35)
  1: _3 = &(*_1)
    SourceInfo(regex-automata/src/util/pool.rs:631:31-631:35)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/pool.rs:631:44-631:55)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/pool.rs:631:48-631:54)
  4: _5 = _2
    SourceInfo(regex-automata/src/util/pool.rs:631:48-631:54)
  5: _4 = core::result::Result::<std::boxed::Box<T>, usize>::Err(move _5)
    SourceInfo(regex-automata/src/util/pool.rs:631:44-631:55)
  6: StorageDead(_5)
    SourceInfo(regex-automata/src/util/pool.rs:631:54-631:55)
  7: _0 = util::pool::inner::PoolGuard::<'_, T, F> { pool: move _3, value: move _4, discard: const false }
    SourceInfo(regex-automata/src/util/pool.rs:631:13-631:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:631:72-631:73)
      kind: drop(_4) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/pool.rs:631:72-631:73)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/util/pool.rs:631:72-631:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:632:10-632:10)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:630:9-632:10)
      kind: resume
  }
  preds [bb0]
  succs []

