bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:313:9-314:24)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:313:9-313:29)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:313:9-313:29)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:313:18-313:22)
  4: _6 = _1
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:313:18-313:22)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:313:24-313:28)
  6: _7 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:313:24-313:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:313:9-313:29)
      kind: _5 = util::prefilter::prefixes::<H>(move _6, move _7) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: _4 = &_5
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:313:9-313:29)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:313:28-313:29)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:313:28-313:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:313:9-314:24)
      kind: _3 = regex_syntax::hir::literal::Seq::literals(move _4) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:314:23-314:24)
  1: StorageLive(_8)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:315:23-315:56)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:315:23-315:56)
  3: _9 = &_1
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:315:23-315:56)
  4: _8 = {closure@regex-automata/src/util/prefilter/mod.rs:315:23: 315:29} { kind: move _9 }
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:315:23-315:56)
  5: StorageDead(_9)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:315:28-315:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:313:9-315:57)
      kind: _0 = core::option::Option::<&[regex_syntax::hir::literal::Literal]>::and_then::<util::prefilter::Prefilter, {closure@regex-automata/src/util/prefilter/mod.rs:315:23: 315:29}>(move _3, move _8) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:315:56-315:57)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:315:56-315:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:316:5-316:6)
      kind: drop(_5) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:316:5-316:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:316:6-316:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:316:5-316:6)
      kind: drop(_5) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb2]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:309:5-316:6)
      kind: resume
  }
  preds [bb0, bb3, bb5]
  succs []

