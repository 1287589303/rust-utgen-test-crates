bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:571:13-571:17)
  1: _4 = &mut ((*_2).0: util::captures::Captures)
    SourceInfo(regex-automata/src/meta/strategy.rs:571:20-571:41)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/meta/strategy.rs:571:13-571:17)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:572:9-572:31)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:572:9-572:13)
  5: _6 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:572:9-572:13)
  6: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:572:26-572:30)
  7: _7 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/meta/strategy.rs:572:26-572:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:572:9-572:31)
      kind: _5 = util::captures::Captures::set_pattern(move _6, move _7) -> [return: bb1, unwind: bb21]
  }
  preds []
  succs [bb1, bb21]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:572:30-572:31)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:572:30-572:31)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:572:31-572:32)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:579:13-579:16)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:579:40-579:63)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:579:40-579:52)
  6: _10 = &((*_1).6: meta::wrappers::OnePass)
    SourceInfo(regex-automata/src/meta/strategy.rs:579:40-579:52)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:579:57-579:62)
  8: _11 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:579:57-579:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:579:40-579:63)
      kind: _9 = meta::wrappers::OnePass::get(move _10, move _11) -> [return: bb2, unwind: bb21]
  }
  preds [bb0]
  succs [bb2, bb21]

bb2
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:579:62-579:63)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:579:62-579:63)
  2: PlaceMention(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:579:40-579:63)
  3: _12 = discriminant(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:579:40-579:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:579:26-579:37)
      kind: switchInt(move _12) -> [1: bb3, otherwise: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:579:26-579:37)
      kind: falseEdge -> [real: bb4, imaginary: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:579:31-579:36)
  1: _13 = &((_9 as Some).0: &meta::wrappers::OnePassEngine)
    SourceInfo(regex-automata/src/meta/strategy.rs:579:31-579:36)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:13-581:14)
  3: _14 = &(*(*_13))
    SourceInfo(regex-automata/src/meta/strategy.rs:581:13-581:14)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:28-581:46)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:28-581:46)
  6: _16 = &mut ((*_2).3: meta::wrappers::OnePassCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:28-581:46)
  7: _15 = &mut (*_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:28-581:46)
  8: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:48-581:53)
  9: _17 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:48-581:53)
  10: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:55-581:71)
  11: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:55-581:71)
  12: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:55-581:59)
  13: _20 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:55-581:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:581:55-581:71)
      kind: _19 = util::captures::Captures::slots_mut(move _20) -> [return: bb5, unwind: bb21]
  }
  preds [bb3]
  succs [bb5, bb21]

bb5
  0: _18 = &mut (*_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:55-581:71)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:70-581:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:581:13-581:72)
      kind: _8 = meta::wrappers::OnePassEngine::search_slots(move _14, move _15, move _17, move _18) -> [return: bb6, unwind: bb21]
  }
  preds [bb4]
  succs [bb6, bb21]

bb6
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:71-581:72)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:71-581:72)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:71-581:72)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:581:71-581:72)
  4: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:582:9-582:10)
  5: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:582:9-582:10)
  6: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:582:9-582:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:579:19-592:10)
      kind: goto -> bb18
  }
  preds [bb5]
  succs [bb18]

bb7
  0: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:582:37-582:62)
  1: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:582:37-582:51)
  2: _22 = &((*_1).5: meta::wrappers::BoundedBacktracker)
    SourceInfo(regex-automata/src/meta/strategy.rs:582:37-582:51)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:582:56-582:61)
  4: _23 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:582:56-582:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:582:37-582:62)
      kind: _21 = meta::wrappers::BoundedBacktracker::get(move _22, move _23) -> [return: bb8, unwind: bb21]
  }
  preds [bb2, bb3]
  succs [bb8, bb21]

bb8
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:582:61-582:62)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:582:61-582:62)
  2: PlaceMention(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:582:37-582:62)
  3: _24 = discriminant(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:582:37-582:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:582:23-582:34)
      kind: switchInt(move _24) -> [1: bb9, otherwise: bb13]
  }
  preds [bb7]
  succs [bb9, bb13]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:582:23-582:34)
      kind: falseEdge -> [real: bb10, imaginary: bb13]
  }
  preds [bb8]
  succs [bb10, bb13]

bb10
  0: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:582:28-582:33)
  1: _25 = &((_21 as Some).0: &meta::wrappers::BoundedBacktrackerEngine)
    SourceInfo(regex-automata/src/meta/strategy.rs:582:28-582:33)
  2: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:13-587:14)
  3: _26 = &(*(*_25))
    SourceInfo(regex-automata/src/meta/strategy.rs:587:13-587:14)
  4: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:28-587:48)
  5: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:28-587:48)
  6: _28 = &mut ((*_2).2: meta::wrappers::BoundedBacktrackerCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:28-587:48)
  7: _27 = &mut (*_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:28-587:48)
  8: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:50-587:55)
  9: _29 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:50-587:55)
  10: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:57-587:73)
  11: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:57-587:73)
  12: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:57-587:61)
  13: _32 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:57-587:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:587:57-587:73)
      kind: _31 = util::captures::Captures::slots_mut(move _32) -> [return: bb11, unwind: bb21]
  }
  preds [bb9]
  succs [bb11, bb21]

bb11
  0: _30 = &mut (*_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:57-587:73)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:72-587:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:587:13-587:74)
      kind: _8 = meta::wrappers::BoundedBacktrackerEngine::search_slots(move _26, move _27, move _29, move _30) -> [return: bb12, unwind: bb21]
  }
  preds [bb10]
  succs [bb12, bb21]

bb12
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:73-587:74)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:73-587:74)
  2: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:73-587:74)
  3: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:587:73-587:74)
  4: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:588:9-588:10)
  5: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:588:9-588:10)
  6: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:588:9-588:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:582:16-592:10)
      kind: goto -> bb17
  }
  preds [bb11]
  succs [bb17]

bb13
  0: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:590:17-590:18)
  1: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:590:21-590:32)
  2: _34 = &((*_1).4: meta::wrappers::PikeVM)
    SourceInfo(regex-automata/src/meta/strategy.rs:590:21-590:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:590:21-590:38)
      kind: _33 = meta::wrappers::PikeVM::get(move _34) -> [return: bb14, unwind: bb21]
  }
  preds [bb8, bb9]
  succs [bb14, bb21]

bb14
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:590:37-590:38)
  1: FakeRead(ForLet(None), _33)
    SourceInfo(regex-automata/src/meta/strategy.rs:590:17-590:18)
  2: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:13-591:14)
  3: _35 = &(*_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:13-591:14)
  4: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:28-591:45)
  5: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:28-591:45)
  6: _37 = &mut ((*_2).1: meta::wrappers::PikeVMCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:28-591:45)
  7: _36 = &mut (*_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:28-591:45)
  8: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:47-591:52)
  9: _38 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:47-591:52)
  10: StorageLive(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:54-591:70)
  11: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:54-591:70)
  12: StorageLive(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:54-591:58)
  13: _41 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:54-591:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:591:54-591:70)
      kind: _40 = util::captures::Captures::slots_mut(move _41) -> [return: bb15, unwind: bb21]
  }
  preds [bb13]
  succs [bb15, bb21]

bb15
  0: _39 = &mut (*_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:54-591:70)
  1: StorageDead(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:69-591:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:591:13-591:71)
      kind: _8 = meta::wrappers::PikeVMEngine::search_slots(move _35, move _36, move _38, move _39) -> [return: bb16, unwind: bb21]
  }
  preds [bb14]
  succs [bb16, bb21]

bb16
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:70-591:71)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:70-591:71)
  2: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:70-591:71)
  3: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:591:70-591:71)
  4: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:592:9-592:10)
  5: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:592:9-592:10)
  6: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:592:9-592:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:582:16-592:10)
      kind: goto -> bb17
  }
  preds [bb15]
  succs [bb17]

bb17
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:592:9-592:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:579:19-592:10)
      kind: goto -> bb18
  }
  preds [bb12, bb16]
  succs [bb18]

bb18
  0: FakeRead(ForLet(None), _8)
    SourceInfo(regex-automata/src/meta/strategy.rs:579:13-579:16)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:592:10-592:11)
  2: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:593:9-593:30)
  3: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:593:9-593:13)
  4: _43 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:593:9-593:13)
  5: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:593:26-593:29)
  6: _44 = _8
    SourceInfo(regex-automata/src/meta/strategy.rs:593:26-593:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:593:9-593:30)
      kind: _42 = util::captures::Captures::set_pattern(move _43, move _44) -> [return: bb19, unwind: bb21]
  }
  preds [bb6, bb17]
  succs [bb19, bb21]

bb19
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:593:29-593:30)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:593:29-593:30)
  2: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:593:30-593:31)
  3: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:594:9-594:13)
  4: _45 = &(*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:594:9-594:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:594:9-594:25)
      kind: _0 = util::captures::Captures::get_match(move _45) -> [return: bb20, unwind: bb21]
  }
  preds [bb18]
  succs [bb20, bb21]

bb20
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:594:24-594:25)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:595:5-595:6)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:595:5-595:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:595:6-595:6)
      kind: return
  }
  preds [bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:566:5-595:6)
      kind: resume
  }
  preds [bb0, bb1, bb4, bb5, bb7, bb10, bb11, bb13, bb14, bb15, bb18, bb19]
  succs []

