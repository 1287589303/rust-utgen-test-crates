bb0
  0: PlaceMention(((*_1).0: meta::error::BuildErrorKind))
    SourceInfo(regex-automata/src/meta/error.rs:99:15-99:24)
  1: _2 = discriminant(((*_1).0: meta::error::BuildErrorKind))
    SourceInfo(regex-automata/src/meta/error.rs:99:15-99:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:99:9-99:24)
      kind: switchInt(move _2) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), ((*_1).0: meta::error::BuildErrorKind))
    SourceInfo(regex-automata/src/meta/error.rs:99:15-99:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:99:15-99:24)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:100:13-100:51)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/error.rs:101:33-101:40)
  1: _6 = &((((*_1).0: meta::error::BuildErrorKind) as NFA).0: nfa::thompson::error::BuildError)
    SourceInfo(regex-automata/src/meta/error.rs:101:33-101:40)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/error.rs:101:50-101:53)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/error.rs:101:50-101:53)
  4: _8 = &(*_6)
    SourceInfo(regex-automata/src/meta/error.rs:101:50-101:53)
  5: _7 = move _8 as &dyn core::error::Error (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/meta/error.rs:101:50-101:53)
  6: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/error.rs:101:52-101:53)
  7: _0 = core::option::Option::<&dyn core::error::Error>::Some(move _7)
    SourceInfo(regex-automata/src/meta/error.rs:101:45-101:54)
  8: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/error.rs:101:53-101:54)
  9: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/error.rs:101:53-101:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:101:53-101:54)
      kind: goto -> bb5
  }
  preds [bb0, bb2]
  succs [bb5]

bb4
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/error.rs:100:38-100:45)
  1: _3 = &((((*_1).0: meta::error::BuildErrorKind) as Syntax).1: regex_syntax::Error)
    SourceInfo(regex-automata/src/meta/error.rs:100:38-100:45)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/error.rs:100:60-100:63)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/error.rs:100:60-100:63)
  4: _5 = &(*_3)
    SourceInfo(regex-automata/src/meta/error.rs:100:60-100:63)
  5: _4 = move _5 as &dyn core::error::Error (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/meta/error.rs:100:60-100:63)
  6: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/error.rs:100:62-100:63)
  7: _0 = core::option::Option::<&dyn core::error::Error>::Some(move _4)
    SourceInfo(regex-automata/src/meta/error.rs:100:55-100:64)
  8: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/error.rs:100:63-100:64)
  9: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/error.rs:100:63-100:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:100:63-100:64)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:103:6-103:6)
      kind: return
  }
  preds [bb3, bb4]
  succs []

