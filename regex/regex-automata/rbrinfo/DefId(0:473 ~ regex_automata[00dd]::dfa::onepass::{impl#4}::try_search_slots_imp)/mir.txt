bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:13-2009:22)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:25-2009:51)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:25-2009:39)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:25-2009:39)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:25-2009:29)
  5: _9 = &(*_1)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:25-2009:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2009:25-2009:39)
      kind: _8 = dfa::onepass::DFA::get_nfa(move _9) -> [return: bb1, unwind: bb47]
  }
  preds []
  succs [bb1, bb47]

bb1
  0: _7 = &(*_8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:25-2009:39)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:38-2009:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2009:25-2009:51)
      kind: _6 = nfa::thompson::nfa::NFA::has_empty(move _7) -> [return: bb2, unwind: bb47]
  }
  preds [bb0]
  succs [bb2, bb47]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2009:25-2009:51)
      kind: switchInt(move _6) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:50-2009:51)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:50-2009:51)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:55-2009:69)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:55-2009:69)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:55-2009:59)
  5: _12 = &(*_1)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:55-2009:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2009:55-2009:69)
      kind: _11 = dfa::onepass::DFA::get_nfa(move _12) -> [return: bb5, unwind: bb47]
  }
  preds [bb2]
  succs [bb5, bb47]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:50-2009:51)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:50-2009:51)
  2: _5 = const false
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:25-2009:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2009:25-2009:79)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb5
  0: _10 = &(*_11)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:55-2009:69)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:68-2009:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2009:55-2009:79)
      kind: _5 = nfa::thompson::nfa::NFA::is_utf8(move _10) -> [return: bb6, unwind: bb47]
  }
  preds [bb3]
  succs [bb6, bb47]

bb6
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:78-2009:79)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:78-2009:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2009:25-2009:79)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:78-2009:79)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2009:13-2009:22)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:51)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:19)
  6: _16 = &(*_1)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:19)
  7: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:31-2010:36)
  8: _17 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:31-2010:36)
  9: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:38-2010:43)
  10: _18 = &(*_3)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:38-2010:43)
  11: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:45-2010:50)
  12: _19 = &mut (*_4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:45-2010:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:51)
      kind: _15 = dfa::onepass::DFA::search_imp(move _16, move _17, move _18, move _19) -> [return: bb8, unwind: bb47]
  }
  preds [bb4, bb6]
  succs [bb8, bb47]

bb8
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:50-2010:51)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:50-2010:51)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:50-2010:51)
  3: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:50-2010:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
      kind: _14 = <core::result::Result<core::option::Option<util::primitives::PatternID>, util::search::MatchError> as core::ops::Try>::branch(move _15) -> [return: bb9, unwind: bb46]
  }
  preds [bb7]
  succs [bb9, bb46]

bb9
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:51-2010:52)
  1: PlaceMention(_14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
  2: _20 = discriminant(_14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
      kind: switchInt(move _20) -> [0: bb12, 1: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2010:51-2010:52)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
  1: _24 = ((_14 as Continue).0: core::option::Option<util::primitives::PatternID>)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
  2: _13 = _24
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:51-2010:52)
  4: PlaceMention(_13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
  5: _26 = discriminant(_13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2010:9-2010:52)
      kind: switchInt(move _26) -> [0: bb16, 1: bb17, otherwise: bb15]
  }
  preds [bb9, bb11]
  succs [bb15, bb16, bb17]

bb13
  0: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:51-2010:52)
  1: _21 = move ((_14 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:51-2010:52)
  2: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:51-2010:52)
  3: _23 = move _21
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:51-2010:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
      kind: _0 = <core::result::Result<core::option::Option<util::primitives::PatternID>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _23) -> [return: bb14, unwind: bb43]
  }
  preds [bb11]
  succs [bb14, bb43]

bb14
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:51-2010:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2010:51-2010:52)
      kind: drop(_21) -> [return: bb39, unwind: bb45]
  }
  preds [bb13]
  succs [bb39, bb45]

bb15
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2011:13-2011:17)
      kind: falseEdge -> [real: bb19, imaginary: bb17]
  }
  preds [bb12]
  succs [bb17, bb19]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2012:13-2012:22)
      kind: falseEdge -> [real: bb20, imaginary: bb18]
  }
  preds [bb12, bb16]
  succs [bb18, bb20]

bb18
  0: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2013:18-2013:21)
  1: _35 = ((_13 as Some).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2013:18-2013:21)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2017:21-2017:31)
  3: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2017:34-2017:48)
  4: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2017:34-2017:37)
  5: _38 = &_35
    SourceInfo(regex-automata/src/dfa/onepass.rs:2017:34-2017:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2017:34-2017:48)
      kind: _37 = util::primitives::PatternID::as_usize(move _38) -> [return: bb23, unwind: bb45]
  }
  preds [bb17, bb21]
  succs [bb23, bb45]

bb19
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2011:31-2011:35)
  1: _28 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/dfa/onepass.rs:2011:31-2011:35)
  2: _0 = core::result::Result::<core::option::Option<util::primitives::PatternID>, util::search::MatchError>::Ok(move _28)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2011:28-2011:36)
  3: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2011:35-2011:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2011:21-2011:36)
      kind: goto -> bb40
  }
  preds [bb16]
  succs [bb40]

bb20
  0: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:18-2012:21)
  1: _30 = &((_13 as Some).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:18-2012:21)
  2: _25 = &fake shallow _13
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:15-2010:52)
  3: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:27-2012:36)
  4: _31 = _5
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:27-2012:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2012:27-2012:36)
      kind: switchInt(move _31) -> [0: bb22, otherwise: bb21]
  }
  preds [bb17]
  succs [bb21, bb22]

bb21
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:35-2012:36)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:59-2012:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2012:26-2012:36)
      kind: goto -> bb18
  }
  preds [bb20]
  succs [bb18]

bb22
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:35-2012:36)
  1: FakeRead(ForMatchGuard, _25)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:35-2012:36)
  2: FakeRead(ForGuardBinding, _30)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:35-2012:36)
  3: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:18-2012:21)
  4: _29 = ((_13 as Some).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:18-2012:21)
  5: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:50-2012:59)
  6: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:55-2012:58)
  7: _34 = _29
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:55-2012:58)
  8: _33 = core::option::Option::<util::primitives::PatternID>::Some(move _34)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:50-2012:59)
  9: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:58-2012:59)
  10: _0 = core::result::Result::<core::option::Option<util::primitives::PatternID>, util::search::MatchError>::Ok(move _33)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:47-2012:60)
  11: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:59-2012:60)
  12: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:59-2012:60)
  13: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2012:59-2012:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb40
  }
  preds [bb20]
  succs [bb40]

bb23
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2017:47-2017:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2017:34-2017:64)
      kind: _36 = core::num::<impl usize>::wrapping_mul(move _37, const 2_usize) -> [return: bb24, unwind: bb45]
  }
  preds [bb18]
  succs [bb24, bb45]

bb24
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2017:63-2017:64)
  1: FakeRead(ForLet(None), _36)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2017:21-2017:31)
  2: StorageLive(_39)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2018:21-2018:29)
  3: StorageLive(_40)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2018:32-2018:42)
  4: _40 = _36
    SourceInfo(regex-automata/src/dfa/onepass.rs:2018:32-2018:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2018:32-2018:58)
      kind: _39 = core::num::<impl usize>::wrapping_add(move _40, const 1_usize) -> [return: bb25, unwind: bb45]
  }
  preds [bb23]
  succs [bb25, bb45]

bb25
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2018:57-2018:58)
  1: FakeRead(ForLet(None), _39)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2018:21-2018:29)
  2: StorageLive(_41)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2024:21-2024:26)
  3: StorageLive(_42)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2024:29-2024:55)
  4: StorageLive(_43)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2024:29-2024:46)
  5: StorageLive(_44)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2024:35-2024:45)
  6: _44 = _36
    SourceInfo(regex-automata/src/dfa/onepass.rs:2024:35-2024:45)
  7: _45 = Len((*_4))
    SourceInfo(regex-automata/src/dfa/onepass.rs:2024:29-2024:46)
  8: _46 = Lt(_44, _45)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2024:29-2024:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2024:29-2024:46)
      kind: assert(move _46, "index out of bounds: the length is {} but the index is {}", move _45, _44) -> [success: bb26, unwind: bb45]
  }
  preds [bb24]
  succs [bb26, bb45]

bb26
  0: _43 = (*_4)[_44]
    SourceInfo(regex-automata/src/dfa/onepass.rs:2024:29-2024:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2024:29-2024:55)
      kind: _42 = core::option::Option::<util::primitives::NonMaxUsize>::unwrap(move _43) -> [return: bb27, unwind: bb45]
  }
  preds [bb25]
  succs [bb27, bb45]

bb27
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2024:54-2024:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2024:29-2024:61)
      kind: _41 = util::primitives::NonMaxUsize::get(move _42) -> [return: bb28, unwind: bb45]
  }
  preds [bb26]
  succs [bb28, bb45]

bb28
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2024:60-2024:61)
  1: FakeRead(ForLet(None), _41)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2024:21-2024:26)
  2: StorageDead(_44)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2024:61-2024:62)
  3: StorageLive(_47)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2025:21-2025:24)
  4: StorageLive(_48)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2025:27-2025:51)
  5: StorageLive(_49)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2025:27-2025:42)
  6: StorageLive(_50)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2025:33-2025:41)
  7: _50 = _39
    SourceInfo(regex-automata/src/dfa/onepass.rs:2025:33-2025:41)
  8: _51 = Len((*_4))
    SourceInfo(regex-automata/src/dfa/onepass.rs:2025:27-2025:42)
  9: _52 = Lt(_50, _51)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2025:27-2025:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2025:27-2025:42)
      kind: assert(move _52, "index out of bounds: the length is {} but the index is {}", move _51, _50) -> [success: bb29, unwind: bb45]
  }
  preds [bb27]
  succs [bb29, bb45]

bb29
  0: _49 = (*_4)[_50]
    SourceInfo(regex-automata/src/dfa/onepass.rs:2025:27-2025:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2025:27-2025:51)
      kind: _48 = core::option::Option::<util::primitives::NonMaxUsize>::unwrap(move _49) -> [return: bb30, unwind: bb45]
  }
  preds [bb28]
  succs [bb30, bb45]

bb30
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2025:50-2025:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2025:27-2025:57)
      kind: _47 = util::primitives::NonMaxUsize::get(move _48) -> [return: bb31, unwind: bb45]
  }
  preds [bb29]
  succs [bb31, bb45]

bb31
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2025:56-2025:57)
  1: FakeRead(ForLet(None), _47)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2025:21-2025:24)
  2: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2025:57-2025:58)
  3: StorageLive(_53)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:17-2032:18)
  4: StorageLive(_54)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:20-2030:32)
  5: StorageLive(_55)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:20-2030:25)
  6: _55 = _41
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:20-2030:25)
  7: StorageLive(_56)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:29-2030:32)
  8: _56 = _47
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:29-2030:32)
  9: _54 = Eq(move _55, move _56)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:20-2030:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2030:20-2030:32)
      kind: switchInt(move _54) -> [0: bb36, otherwise: bb32]
  }
  preds [bb30]
  succs [bb32, bb36]

bb32
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:31-2030:32)
  1: StorageDead(_55)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:31-2030:32)
  2: StorageLive(_57)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:37-2030:66)
  3: StorageLive(_58)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:37-2030:42)
  4: _58 = &(*_3)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:37-2030:42)
  5: StorageLive(_59)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:60-2030:65)
  6: _59 = _41
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:60-2030:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2030:37-2030:66)
      kind: _57 = util::search::Input::<'_>::is_char_boundary(move _58, move _59) -> [return: bb33, unwind: bb45]
  }
  preds [bb31]
  succs [bb33, bb45]

bb33
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2030:37-2030:66)
      kind: switchInt(move _57) -> [0: bb35, otherwise: bb34]
  }
  preds [bb32]
  succs [bb34, bb35]

bb34
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:65-2030:66)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:65-2030:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2030:67-2032:18)
      kind: goto -> bb37
  }
  preds [bb33]
  succs [bb37]

bb35
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:65-2030:66)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:65-2030:66)
  2: StorageLive(_61)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2031:31-2031:35)
  3: _61 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/dfa/onepass.rs:2031:31-2031:35)
  4: _0 = core::result::Result::<core::option::Option<util::primitives::PatternID>, util::search::MatchError>::Ok(move _61)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2031:28-2031:36)
  5: StorageDead(_61)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2031:35-2031:36)
  6: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2032:17-2032:18)
  7: StorageDead(_54)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2032:17-2032:18)
  8: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2032:17-2032:18)
  9: StorageDead(_47)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2034:13-2034:14)
  10: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2034:13-2034:14)
  11: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2034:13-2034:14)
  12: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2034:13-2034:14)
  13: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2034:13-2034:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb40
  }
  preds [bb33]
  succs [bb40]

bb36
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:31-2030:32)
  1: StorageDead(_55)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2030:31-2030:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb37
  }
  preds [bb31]
  succs [bb37]

bb37
  0: _53 = const ()
    SourceInfo(regex-automata/src/dfa/onepass.rs:2032:18-2032:18)
  1: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2032:17-2032:18)
  2: StorageDead(_54)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2032:17-2032:18)
  3: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2032:17-2032:18)
  4: StorageLive(_62)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2033:20-2033:29)
  5: StorageLive(_63)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2033:25-2033:28)
  6: _63 = _35
    SourceInfo(regex-automata/src/dfa/onepass.rs:2033:25-2033:28)
  7: _62 = core::option::Option::<util::primitives::PatternID>::Some(move _63)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2033:20-2033:29)
  8: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2033:28-2033:29)
  9: _0 = core::result::Result::<core::option::Option<util::primitives::PatternID>, util::search::MatchError>::Ok(move _62)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2033:17-2033:30)
  10: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2033:29-2033:30)
  11: StorageDead(_47)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2034:13-2034:14)
  12: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2034:13-2034:14)
  13: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2034:13-2034:14)
  14: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2034:13-2034:14)
  15: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2034:13-2034:14)
  16: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2036:5-2036:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2036:5-2036:6)
      kind: drop(_14) -> [return: bb38, unwind: bb47]
  }
  preds [bb34, bb36]
  succs [bb38, bb47]

bb38
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2036:5-2036:6)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2036:5-2036:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2036:6-2036:6)
      kind: goto -> bb42
  }
  preds [bb37]
  succs [bb42]

bb39
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2010:51-2010:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb40
  }
  preds [bb14]
  succs [bb40]

bb40
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2036:5-2036:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2036:5-2036:6)
      kind: drop(_14) -> [return: bb41, unwind: bb47]
  }
  preds [bb19, bb22, bb35, bb39]
  succs [bb41, bb47]

bb41
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2036:5-2036:6)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2036:5-2036:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2036:6-2036:6)
      kind: goto -> bb42
  }
  preds [bb40]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2036:6-2036:6)
      kind: return
  }
  preds [bb38, bb41]
  succs []

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2010:51-2010:52)
      kind: drop(_23) -> [return: bb44, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb44]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2010:51-2010:52)
      kind: drop(_21) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb43]
  succs [bb45]

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2036:5-2036:6)
      kind: drop(_14) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb14, bb18, bb23, bb24, bb25, bb26, bb27, bb28, bb29, bb30, bb32, bb44]
  succs [bb47]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2010:51-2010:52)
      kind: drop(_15) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2003:5-2036:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb7, bb37, bb40, bb45, bb46]
  succs []

