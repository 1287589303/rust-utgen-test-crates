bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1000:16-1000:27)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1000:16-1000:20)
  2: _4 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1000:16-1000:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1000:16-1000:27)
      kind: _3 = regex_syntax::hir::Hir::kind(move _4) -> [return: bb1, unwind: bb36]
  }
  preds []
  succs [bb1, bb36]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1000:26-1000:27)
  1: PlaceMention((*_3))
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1000:15-1000:27)
  2: _6 = discriminant((*_3))
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1000:15-1000:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1000:9-1000:27)
      kind: switchInt(move _6) -> [0: bb3, 1: bb4, 2: bb5, 3: bb8, 4: bb9, 5: bb10, 6: bb11, 7: bb12, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb5, bb8, bb9, bb10, bb11, bb12]

bb2
  0: FakeRead(ForMatchedPlace(None), (*_3))
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1000:15-1000:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1000:15-1000:27)
      kind: unreachable
  }
  preds [bb1, bb5]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1001:13-1001:18)
      kind: falseEdge -> [real: bb13, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb13]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1002:13-1002:45)
      kind: falseEdge -> [real: bb15, imaginary: bb5]
  }
  preds [bb1, bb3]
  succs [bb5, bb15]

bb5
  0: _5 = discriminant((((*_3) as Class).0: regex_syntax::hir::Class))
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1000:15-1000:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1000:9-1000:27)
      kind: switchInt(move _5) -> [0: bb7, 1: bb6, otherwise: bb2]
  }
  preds [bb1, bb4]
  succs [bb2, bb6, bb7]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1003:13-1003:39)
      kind: falseEdge -> [real: bb17, imaginary: bb7]
  }
  preds [bb5]
  succs [bb7, bb17]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1004:13-1004:41)
      kind: falseEdge -> [real: bb19, imaginary: bb8]
  }
  preds [bb5, bb6]
  succs [bb8, bb19]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1005:13-1005:27)
      kind: falseEdge -> [real: bb21, imaginary: bb9]
  }
  preds [bb1, bb7]
  succs [bb9, bb21]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1006:13-1006:32)
      kind: falseEdge -> [real: bb23, imaginary: bb10]
  }
  preds [bb1, bb8]
  succs [bb10, bb23]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:13-1007:27)
      kind: falseEdge -> [real: bb25, imaginary: bb11]
  }
  preds [bb1, bb9]
  succs [bb11, bb25]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:13-1008:27)
      kind: falseEdge -> [real: bb28, imaginary: bb12]
  }
  preds [bb1, bb10]
  succs [bb12, bb28]

bb12
  0: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:25-1009:31)
  1: _39 = &(((*_3) as Alternation).0: std::vec::Vec<regex_syntax::hir::Hir>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:25-1009:31)
  2: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:36-1009:40)
  3: _40 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:36-1009:40)
  4: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:53-1009:55)
  5: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:53-1009:55)
  6: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:53-1009:55)
  7: _43 = &(*_39)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:53-1009:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:53-1009:55)
      kind: _42 = <std::vec::Vec<regex_syntax::hir::Hir> as core::ops::Deref>::deref(move _43) -> [return: bb33, unwind: bb36]
  }
  preds [bb1, bb11]
  succs [bb33, bb36]

bb13
  0: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1001:22-1001:26)
  1: _7 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1001:22-1001:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1001:22-1001:36)
      kind: _0 = nfa::thompson::compiler::Compiler::c_empty(move _7) -> [return: bb14, unwind: bb36]
  }
  preds [bb3]
  succs [bb14, bb36]

bb14
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1001:35-1001:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1001:35-1001:36)
      kind: goto -> bb35
  }
  preds [bb13]
  succs [bb35]

bb15
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1002:34-1002:43)
  1: _8 = &((((*_3) as Literal).0: regex_syntax::hir::Literal).0: std::boxed::Box<[u8]>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1002:34-1002:43)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1002:49-1002:53)
  3: _9 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1002:49-1002:53)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1002:64-1002:69)
  5: _10 = &(*(*_8))
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1002:64-1002:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1002:49-1002:70)
      kind: _0 = nfa::thompson::compiler::Compiler::c_literal(move _9, move _10) -> [return: bb16, unwind: bb36]
  }
  preds [bb4]
  succs [bb16, bb36]

bb16
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1002:69-1002:70)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1002:69-1002:70)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1002:69-1002:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1002:69-1002:70)
      kind: goto -> bb35
  }
  preds [bb15]
  succs [bb35]

bb17
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1003:32-1003:37)
  1: _11 = &(((((*_3) as Class).0: regex_syntax::hir::Class) as Bytes).0: regex_syntax::hir::ClassBytes)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1003:32-1003:37)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1003:43-1003:47)
  3: _12 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1003:43-1003:47)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1003:61-1003:62)
  5: _13 = &(*_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1003:61-1003:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1003:43-1003:63)
      kind: _0 = nfa::thompson::compiler::Compiler::c_byte_class(move _12, move _13) -> [return: bb18, unwind: bb36]
  }
  preds [bb6]
  succs [bb18, bb36]

bb18
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1003:62-1003:63)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1003:62-1003:63)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1003:62-1003:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1003:62-1003:63)
      kind: goto -> bb35
  }
  preds [bb17]
  succs [bb35]

bb19
  0: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1004:34-1004:39)
  1: _14 = &(((((*_3) as Class).0: regex_syntax::hir::Class) as Unicode).0: regex_syntax::hir::ClassUnicode)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1004:34-1004:39)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1004:45-1004:49)
  3: _15 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1004:45-1004:49)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1004:66-1004:67)
  5: _16 = &(*_14)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1004:66-1004:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1004:45-1004:68)
      kind: _0 = nfa::thompson::compiler::Compiler::c_unicode_class(move _15, move _16) -> [return: bb20, unwind: bb36]
  }
  preds [bb7]
  succs [bb20, bb36]

bb20
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1004:67-1004:68)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1004:67-1004:68)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1004:67-1004:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1004:67-1004:68)
      kind: goto -> bb35
  }
  preds [bb19]
  succs [bb35]

bb21
  0: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1005:18-1005:26)
  1: _17 = &(((*_3) as Look).0: regex_syntax::hir::Look)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1005:18-1005:26)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1005:31-1005:35)
  3: _18 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1005:31-1005:35)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1005:43-1005:47)
  5: _19 = &(*_17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1005:43-1005:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1005:31-1005:48)
      kind: _0 = nfa::thompson::compiler::Compiler::c_look(move _18, move _19) -> [return: bb22, unwind: bb36]
  }
  preds [bb8]
  succs [bb22, bb36]

bb22
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1005:47-1005:48)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1005:47-1005:48)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1005:47-1005:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1005:47-1005:48)
      kind: goto -> bb35
  }
  preds [bb21]
  succs [bb35]

bb23
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1006:24-1006:31)
  1: _20 = &(((*_3) as Repetition).0: regex_syntax::hir::Repetition)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1006:24-1006:31)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1006:36-1006:40)
  3: _21 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1006:36-1006:40)
  4: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1006:54-1006:57)
  5: _22 = &(*_20)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1006:54-1006:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1006:36-1006:58)
      kind: _0 = nfa::thompson::compiler::Compiler::c_repetition(move _21, move _22) -> [return: bb24, unwind: bb36]
  }
  preds [bb9]
  succs [bb24, bb36]

bb24
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1006:57-1006:58)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1006:57-1006:58)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1006:57-1006:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1006:57-1006:58)
      kind: goto -> bb35
  }
  preds [bb23]
  succs [bb35]

bb25
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:21-1007:26)
  1: _23 = &(((*_3) as Capture).0: regex_syntax::hir::Capture)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:21-1007:26)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:31-1007:35)
  3: _24 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:31-1007:35)
  4: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:42-1007:49)
  5: _25 = ((*_23).0: u32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:42-1007:49)
  6: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:51-1007:68)
  7: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:51-1007:57)
  8: _27 = &((*_23).1: core::option::Option<std::boxed::Box<str>>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:51-1007:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:51-1007:68)
      kind: _26 = core::option::Option::<std::boxed::Box<str>>::as_deref(move _27) -> [return: bb26, unwind: bb36]
  }
  preds [bb10]
  succs [bb26, bb36]

bb26
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:67-1007:68)
  1: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:70-1007:76)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:70-1007:76)
  3: _29 = &((*_23).2: std::boxed::Box<regex_syntax::hir::Hir>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:70-1007:76)
  4: _28 = &(*(*_29))
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:70-1007:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:31-1007:77)
      kind: _0 = nfa::thompson::compiler::Compiler::c_cap(move _24, move _25, move _26, move _28) -> [return: bb27, unwind: bb36]
  }
  preds [bb25]
  succs [bb27, bb36]

bb27
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:76-1007:77)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:76-1007:77)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:76-1007:77)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:76-1007:77)
  4: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:76-1007:77)
  5: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:76-1007:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1007:76-1007:77)
      kind: goto -> bb35
  }
  preds [bb26]
  succs [bb35]

bb28
  0: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:20-1008:26)
  1: _30 = &(((*_3) as Concat).0: std::vec::Vec<regex_syntax::hir::Hir>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:20-1008:26)
  2: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:31-1008:35)
  3: _31 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:31-1008:35)
  4: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:45-1008:73)
  5: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:45-1008:54)
  6: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:45-1008:47)
  7: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:45-1008:54)
  8: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:45-1008:47)
  9: _36 = &(*_30)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:45-1008:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:45-1008:54)
      kind: _35 = <std::vec::Vec<regex_syntax::hir::Hir> as core::ops::Deref>::deref(move _36) -> [return: bb29, unwind: bb36]
  }
  preds [bb11]
  succs [bb29, bb36]

bb29
  0: _34 = &(*_35)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:45-1008:47)
  1: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:46-1008:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:45-1008:54)
      kind: _33 = core::slice::<impl [regex_syntax::hir::Hir]>::iter(move _34) -> [return: bb30, unwind: bb36]
  }
  preds [bb28]
  succs [bb30, bb36]

bb30
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:53-1008:54)
  1: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:59-1008:72)
  2: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:59-1008:72)
  3: _38 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:59-1008:72)
  4: _37 = {closure@regex-automata/src/nfa/thompson/compiler.rs:1008:59: 1008:62} { self: move _38 }
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:59-1008:72)
  5: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:61-1008:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:45-1008:73)
      kind: _32 = <core::slice::Iter<'_, regex_syntax::hir::Hir> as core::iter::Iterator>::map::<core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError>, {closure@regex-automata/src/nfa/thompson/compiler.rs:1008:59: 1008:62}>(move _33, move _37) -> [return: bb31, unwind: bb36]
  }
  preds [bb29]
  succs [bb31, bb36]

bb31
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:72-1008:73)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:72-1008:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:31-1008:74)
      kind: _0 = nfa::thompson::compiler::Compiler::c_concat::<core::iter::Map<core::slice::Iter<'_, regex_syntax::hir::Hir>, {closure@regex-automata/src/nfa/thompson/compiler.rs:1008:59: 1008:62}>>(move _31, move _32) -> [return: bb32, unwind: bb36]
  }
  preds [bb30]
  succs [bb32, bb36]

bb32
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:73-1008:74)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:73-1008:74)
  2: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:73-1008:74)
  3: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:73-1008:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1008:73-1008:74)
      kind: goto -> bb35
  }
  preds [bb31]
  succs [bb35]

bb33
  0: _41 = &(*_42)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:53-1009:55)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:54-1009:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:36-1009:56)
      kind: _0 = nfa::thompson::compiler::Compiler::c_alt_slice(move _40, move _41) -> [return: bb34, unwind: bb36]
  }
  preds [bb12]
  succs [bb34, bb36]

bb34
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:55-1009:56)
  1: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:55-1009:56)
  2: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:55-1009:56)
  3: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:55-1009:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1009:55-1009:56)
      kind: goto -> bb35
  }
  preds [bb33]
  succs [bb35]

bb35
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1011:5-1011:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1011:6-1011:6)
      kind: return
  }
  preds [bb14, bb16, bb18, bb20, bb22, bb24, bb27, bb32, bb34]
  succs []

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:997:5-1011:6)
      kind: resume
  }
  preds [bb0, bb12, bb13, bb15, bb17, bb19, bb21, bb23, bb25, bb26, bb28, bb29, bb30, bb31, bb33]
  succs []

