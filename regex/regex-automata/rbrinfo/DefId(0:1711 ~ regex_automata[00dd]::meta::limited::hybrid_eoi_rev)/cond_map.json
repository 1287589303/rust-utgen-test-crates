{
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "regex-automata/src/meta/limited.rs:232:37:232:49": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "sp.start - 1",
          "lhs": "sp.start",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/meta/limited.rs:239:19:239:32": [
    {
      "Bool": {
        "Other": "sid.is_quit()"
      }
    }
  ],
  "regex-automata/src/meta/limited.rs:231:8:231:20": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "sp.start > 0",
          "lhs": "sp.start",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/meta/limited.rs:240:47:240:59": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "sp.start - 1",
          "lhs": "sp.start",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/meta/limited.rs:236:12:236:26": [
    {
      "Bool": {
        "Other": "sid.is_match()"
      }
    }
  ],
  "regex-automata/src/meta/limited.rs:243:16:245:57": [
    {
      "Try": "dfa\n            .next_eoi_state(cache, *sid)\n            .map_err(|_| MatchError::gave_up(sp.start))?"
    }
  ],
  "regex-automata/src/meta/limited.rs:233:16:235:57": [
    {
      "Try": "dfa\n            .next_state(cache, *sid, byte)\n            .map_err(|_| MatchError::gave_up(sp.start))?"
    }
  ],
  "regex-automata/src/meta/limited.rs:246:12:246:26": [
    {
      "Bool": {
        "Other": "sid.is_match()"
      }
    }
  ],
  "regex-automata/src/meta/limited.rs:252:24:252:37": [
    {
      "Bool": {
        "Other": "sid.is_quit()"
      }
    }
  ]
}