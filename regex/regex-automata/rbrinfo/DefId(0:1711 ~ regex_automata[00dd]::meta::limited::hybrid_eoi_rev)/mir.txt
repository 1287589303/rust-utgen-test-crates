bb0
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/limited.rs:230:9-230:11)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/limited.rs:230:14-230:19)
  2: _7 = &(*_3)
    SourceInfo(regex-automata/src/meta/limited.rs:230:14-230:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:230:14-230:30)
      kind: _6 = util::search::Input::<'_>::get_span(move _7) -> [return: bb1, unwind: bb65]
  }
  preds []
  succs [bb1, bb65]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/limited.rs:230:29-230:30)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/meta/limited.rs:230:9-230:11)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/limited.rs:231:5-253:6)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/limited.rs:231:8-231:20)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/limited.rs:231:8-231:16)
  5: _10 = (_6.0: usize)
    SourceInfo(regex-automata/src/meta/limited.rs:231:8-231:16)
  6: _9 = Gt(move _10, const 0_usize)
    SourceInfo(regex-automata/src/meta/limited.rs:231:8-231:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:231:8-231:20)
      kind: switchInt(move _9) -> [0: bb27, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb27]

bb2
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/limited.rs:231:19-231:20)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/limited.rs:232:13-232:17)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/limited.rs:232:20-232:36)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/limited.rs:232:20-232:25)
  4: _13 = &(*_3)
    SourceInfo(regex-automata/src/meta/limited.rs:232:20-232:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:232:20-232:36)
      kind: _12 = util::search::Input::<'_>::haystack(move _13) -> [return: bb3, unwind: bb65]
  }
  preds [bb1]
  succs [bb3, bb65]

bb3
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/limited.rs:232:35-232:36)
  1: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/limited.rs:232:37-232:49)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/limited.rs:232:37-232:45)
  3: _15 = (_6.0: usize)
    SourceInfo(regex-automata/src/meta/limited.rs:232:37-232:45)
  4: _16 = SubWithOverflow(_15, const 1_usize)
    SourceInfo(regex-automata/src/meta/limited.rs:232:37-232:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:232:37-232:49)
      kind: assert(!move (_16.1: bool), "attempt to compute `{} - {}`, which would overflow", move _15, const 1_usize) -> [success: bb4, unwind: bb65]
  }
  preds [bb2]
  succs [bb4, bb65]

bb4
  0: _14 = move (_16.0: usize)
    SourceInfo(regex-automata/src/meta/limited.rs:232:37-232:49)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/limited.rs:232:48-232:49)
  2: _17 = Len((*_12))
    SourceInfo(regex-automata/src/meta/limited.rs:232:20-232:50)
  3: _18 = Lt(_14, _17)
    SourceInfo(regex-automata/src/meta/limited.rs:232:20-232:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:232:20-232:50)
      kind: assert(move _18, "index out of bounds: the length is {} but the index is {}", move _17, _14) -> [success: bb5, unwind: bb65]
  }
  preds [bb3]
  succs [bb5, bb65]

bb5
  0: _11 = (*_12)[_14]
    SourceInfo(regex-automata/src/meta/limited.rs:232:20-232:50)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(regex-automata/src/meta/limited.rs:232:13-232:17)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/limited.rs:232:50-232:51)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/limited.rs:232:50-232:51)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/limited.rs:233:16-235:57)
  5: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/limited.rs:233:16-235:57)
  6: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/limited.rs:233:16-235:56)
  7: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/limited.rs:233:16-234:43)
  8: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/limited.rs:233:16-233:19)
  9: _23 = &(*_1)
    SourceInfo(regex-automata/src/meta/limited.rs:233:16-233:19)
  10: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/limited.rs:234:25-234:30)
  11: _24 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/limited.rs:234:25-234:30)
  12: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/limited.rs:234:32-234:36)
  13: _25 = (*_4)
    SourceInfo(regex-automata/src/meta/limited.rs:234:32-234:36)
  14: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/limited.rs:234:38-234:42)
  15: _26 = _11
    SourceInfo(regex-automata/src/meta/limited.rs:234:38-234:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:233:16-234:43)
      kind: _22 = hybrid::dfa::DFA::next_state(move _23, move _24, move _25, move _26) -> [return: bb6, unwind: bb65]
  }
  preds [bb4]
  succs [bb6, bb65]

bb6
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/limited.rs:234:42-234:43)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/limited.rs:234:42-234:43)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/limited.rs:234:42-234:43)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/limited.rs:234:42-234:43)
  4: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/limited.rs:235:22-235:55)
  5: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/limited.rs:235:22-235:55)
  6: _28 = &(_6.0: usize)
    SourceInfo(regex-automata/src/meta/limited.rs:235:22-235:55)
  7: _27 = {closure@regex-automata/src/meta/limited.rs:235:22: 235:25} { sp: move _28 }
    SourceInfo(regex-automata/src/meta/limited.rs:235:22-235:55)
  8: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/limited.rs:235:24-235:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:233:16-235:56)
      kind: _21 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::CacheError>::map_err::<util::search::MatchError, {closure@regex-automata/src/meta/limited.rs:235:22: 235:25}>(move _22, move _27) -> [return: bb7, unwind: bb65]
  }
  preds [bb5]
  succs [bb7, bb65]

bb7
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/limited.rs:235:55-235:56)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/limited.rs:235:55-235:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:233:16-235:57)
      kind: _20 = <core::result::Result<hybrid::id::LazyStateID, util::search::MatchError> as core::ops::Try>::branch(move _21) -> [return: bb8, unwind: bb64]
  }
  preds [bb6]
  succs [bb8, bb64]

bb8
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
  1: PlaceMention(_20)
    SourceInfo(regex-automata/src/meta/limited.rs:233:16-235:57)
  2: _29 = discriminant(_20)
    SourceInfo(regex-automata/src/meta/limited.rs:233:16-235:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:233:16-235:57)
      kind: switchInt(move _29) -> [0: bb11, 1: bb10, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10, bb11]

bb9
  0: FakeRead(ForMatchedPlace(None), _20)
    SourceInfo(regex-automata/src/meta/limited.rs:233:16-235:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:233:16-235:57)
      kind: unreachable
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
      kind: falseEdge -> [real: bb12, imaginary: bb11]
  }
  preds [bb8]
  succs [bb11, bb12]

bb11
  0: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/limited.rs:233:16-235:57)
  1: _33 = ((_20 as Continue).0: hybrid::id::LazyStateID)
    SourceInfo(regex-automata/src/meta/limited.rs:233:16-235:57)
  2: _19 = _33
    SourceInfo(regex-automata/src/meta/limited.rs:233:16-235:57)
  3: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
  4: (*_4) = move _19
    SourceInfo(regex-automata/src/meta/limited.rs:233:9-235:57)
  5: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:235:57-235:58)
      kind: drop(_20) -> [return: bb14, unwind: bb65]
  }
  preds [bb8, bb10]
  succs [bb14, bb65]

bb12
  0: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
  1: _30 = move ((_20 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
  2: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
  3: _32 = move _30
    SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:233:16-235:57)
      kind: _0 = <core::result::Result<(), util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _32) -> [return: bb13, unwind: bb61]
  }
  preds [bb10]
  succs [bb13, bb61]

bb13
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
      kind: drop(_30) -> [return: bb52, unwind: bb63]
  }
  preds [bb12]
  succs [bb52, bb63]

bb14
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/limited.rs:235:57-235:58)
  1: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/limited.rs:236:12-236:26)
  2: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/limited.rs:236:12-236:15)
  3: _35 = &(*_4)
    SourceInfo(regex-automata/src/meta/limited.rs:236:12-236:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:236:12-236:26)
      kind: _34 = hybrid::id::LazyStateID::is_match(move _35) -> [return: bb15, unwind: bb65]
  }
  preds [bb11]
  succs [bb15, bb65]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:236:12-236:26)
      kind: switchInt(move _34) -> [0: bb19, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb19]

bb16
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/limited.rs:236:25-236:26)
  1: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/limited.rs:237:17-237:24)
  2: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/limited.rs:237:27-237:30)
  3: _37 = &(*_1)
    SourceInfo(regex-automata/src/meta/limited.rs:237:27-237:30)
  4: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/limited.rs:237:45-237:50)
  5: _38 = &(*_2)
    SourceInfo(regex-automata/src/meta/limited.rs:237:45-237:50)
  6: StorageLive(_39)
    SourceInfo(regex-automata/src/meta/limited.rs:237:52-237:56)
  7: _39 = (*_4)
    SourceInfo(regex-automata/src/meta/limited.rs:237:52-237:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:237:27-237:60)
      kind: _36 = hybrid::dfa::DFA::match_pattern(move _37, move _38, move _39, const 0_usize) -> [return: bb17, unwind: bb65]
  }
  preds [bb15]
  succs [bb17, bb65]

bb17
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/limited.rs:237:59-237:60)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/limited.rs:237:59-237:60)
  2: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/limited.rs:237:59-237:60)
  3: FakeRead(ForLet(None), _36)
    SourceInfo(regex-automata/src/meta/limited.rs:237:17-237:24)
  4: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/limited.rs:238:20-238:59)
  5: StorageLive(_41)
    SourceInfo(regex-automata/src/meta/limited.rs:238:25-238:58)
  6: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/limited.rs:238:40-238:47)
  7: _42 = _36
    SourceInfo(regex-automata/src/meta/limited.rs:238:40-238:47)
  8: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/limited.rs:238:49-238:57)
  9: _43 = (_6.0: usize)
    SourceInfo(regex-automata/src/meta/limited.rs:238:49-238:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:238:25-238:58)
      kind: _41 = util::search::HalfMatch::new(move _42, move _43) -> [return: bb18, unwind: bb65]
  }
  preds [bb16]
  succs [bb18, bb65]

bb18
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/limited.rs:238:57-238:58)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/limited.rs:238:57-238:58)
  2: _40 = core::option::Option::<util::search::HalfMatch>::Some(move _41)
    SourceInfo(regex-automata/src/meta/limited.rs:238:20-238:59)
  3: StorageDead(_41)
    SourceInfo(regex-automata/src/meta/limited.rs:238:58-238:59)
  4: (*_5) = move _40
    SourceInfo(regex-automata/src/meta/limited.rs:238:13-238:59)
  5: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/limited.rs:238:58-238:59)
  6: _8 = const ()
    SourceInfo(regex-automata/src/meta/limited.rs:236:27-239:10)
  7: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/limited.rs:239:9-239:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:236:9-241:10)
      kind: goto -> bb26
  }
  preds [bb17]
  succs [bb26]

bb19
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/limited.rs:236:25-236:26)
  1: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/limited.rs:239:19-239:32)
  2: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/limited.rs:239:19-239:22)
  3: _45 = &(*_4)
    SourceInfo(regex-automata/src/meta/limited.rs:239:19-239:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:239:19-239:32)
      kind: _44 = hybrid::id::LazyStateID::is_quit(move _45) -> [return: bb20, unwind: bb65]
  }
  preds [bb15]
  succs [bb20, bb65]

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:239:19-239:32)
      kind: switchInt(move _44) -> [0: bb25, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb25]

bb21
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/limited.rs:239:31-239:32)
  1: StorageLive(_47)
    SourceInfo(regex-automata/src/meta/limited.rs:240:24-240:60)
  2: StorageLive(_48)
    SourceInfo(regex-automata/src/meta/limited.rs:240:41-240:45)
  3: _48 = _11
    SourceInfo(regex-automata/src/meta/limited.rs:240:41-240:45)
  4: StorageLive(_49)
    SourceInfo(regex-automata/src/meta/limited.rs:240:47-240:59)
  5: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/limited.rs:240:47-240:55)
  6: _50 = (_6.0: usize)
    SourceInfo(regex-automata/src/meta/limited.rs:240:47-240:55)
  7: _51 = SubWithOverflow(_50, const 1_usize)
    SourceInfo(regex-automata/src/meta/limited.rs:240:47-240:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:240:47-240:59)
      kind: assert(!move (_51.1: bool), "attempt to compute `{} - {}`, which would overflow", move _50, const 1_usize) -> [success: bb22, unwind: bb65]
  }
  preds [bb20]
  succs [bb22, bb65]

bb22
  0: _49 = move (_51.0: usize)
    SourceInfo(regex-automata/src/meta/limited.rs:240:47-240:59)
  1: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/limited.rs:240:58-240:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:240:24-240:60)
      kind: _47 = util::search::MatchError::quit(move _48, move _49) -> [return: bb23, unwind: bb65]
  }
  preds [bb21]
  succs [bb23, bb65]

bb23
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/limited.rs:240:59-240:60)
  1: StorageDead(_48)
    SourceInfo(regex-automata/src/meta/limited.rs:240:59-240:60)
  2: _0 = core::result::Result::<(), util::search::MatchError>::Err(move _47)
    SourceInfo(regex-automata/src/meta/limited.rs:240:20-240:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:240:60-240:61)
      kind: drop(_47) -> [return: bb24, unwind: bb65]
  }
  preds [bb22]
  succs [bb24, bb65]

bb24
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/limited.rs:240:60-240:61)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/limited.rs:241:9-241:10)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/limited.rs:241:9-241:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb54
  }
  preds [bb23]
  succs [bb54]

bb25
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/limited.rs:239:31-239:32)
  1: _8 = const ()
    SourceInfo(regex-automata/src/meta/limited.rs:241:10-241:10)
  2: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/limited.rs:241:9-241:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:236:9-241:10)
      kind: goto -> bb26
  }
  preds [bb20]
  succs [bb26]

bb26
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/limited.rs:241:9-241:10)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/limited.rs:242:5-242:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:231:5-253:6)
      kind: goto -> bb49
  }
  preds [bb18, bb25]
  succs [bb49]

bb27
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/limited.rs:231:19-231:20)
  1: StorageLive(_52)
    SourceInfo(regex-automata/src/meta/limited.rs:243:16-245:57)
  2: StorageLive(_53)
    SourceInfo(regex-automata/src/meta/limited.rs:243:16-245:57)
  3: StorageLive(_54)
    SourceInfo(regex-automata/src/meta/limited.rs:243:16-245:56)
  4: StorageLive(_55)
    SourceInfo(regex-automata/src/meta/limited.rs:243:16-244:41)
  5: StorageLive(_56)
    SourceInfo(regex-automata/src/meta/limited.rs:243:16-243:19)
  6: _56 = &(*_1)
    SourceInfo(regex-automata/src/meta/limited.rs:243:16-243:19)
  7: StorageLive(_57)
    SourceInfo(regex-automata/src/meta/limited.rs:244:29-244:34)
  8: _57 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/limited.rs:244:29-244:34)
  9: StorageLive(_58)
    SourceInfo(regex-automata/src/meta/limited.rs:244:36-244:40)
  10: _58 = (*_4)
    SourceInfo(regex-automata/src/meta/limited.rs:244:36-244:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:243:16-244:41)
      kind: _55 = hybrid::dfa::DFA::next_eoi_state(move _56, move _57, move _58) -> [return: bb28, unwind: bb65]
  }
  preds [bb1]
  succs [bb28, bb65]

bb28
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/limited.rs:244:40-244:41)
  1: StorageDead(_57)
    SourceInfo(regex-automata/src/meta/limited.rs:244:40-244:41)
  2: StorageDead(_56)
    SourceInfo(regex-automata/src/meta/limited.rs:244:40-244:41)
  3: StorageLive(_59)
    SourceInfo(regex-automata/src/meta/limited.rs:245:22-245:55)
  4: StorageLive(_60)
    SourceInfo(regex-automata/src/meta/limited.rs:245:22-245:55)
  5: _60 = &(_6.0: usize)
    SourceInfo(regex-automata/src/meta/limited.rs:245:22-245:55)
  6: _59 = {closure@regex-automata/src/meta/limited.rs:245:22: 245:25} { sp: move _60 }
    SourceInfo(regex-automata/src/meta/limited.rs:245:22-245:55)
  7: StorageDead(_60)
    SourceInfo(regex-automata/src/meta/limited.rs:245:24-245:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:243:16-245:56)
      kind: _54 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::CacheError>::map_err::<util::search::MatchError, {closure@regex-automata/src/meta/limited.rs:245:22: 245:25}>(move _55, move _59) -> [return: bb29, unwind: bb65]
  }
  preds [bb27]
  succs [bb29, bb65]

bb29
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/meta/limited.rs:245:55-245:56)
  1: StorageDead(_55)
    SourceInfo(regex-automata/src/meta/limited.rs:245:55-245:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:243:16-245:57)
      kind: _53 = <core::result::Result<hybrid::id::LazyStateID, util::search::MatchError> as core::ops::Try>::branch(move _54) -> [return: bb30, unwind: bb60]
  }
  preds [bb28]
  succs [bb30, bb60]

bb30
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
  1: PlaceMention(_53)
    SourceInfo(regex-automata/src/meta/limited.rs:243:16-245:57)
  2: _61 = discriminant(_53)
    SourceInfo(regex-automata/src/meta/limited.rs:243:16-245:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:243:16-245:57)
      kind: switchInt(move _61) -> [0: bb33, 1: bb32, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb32, bb33]

bb31
  0: FakeRead(ForMatchedPlace(None), _53)
    SourceInfo(regex-automata/src/meta/limited.rs:243:16-245:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:243:16-245:57)
      kind: unreachable
  }
  preds [bb30]
  succs []

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
      kind: falseEdge -> [real: bb34, imaginary: bb33]
  }
  preds [bb30]
  succs [bb33, bb34]

bb33
  0: StorageLive(_65)
    SourceInfo(regex-automata/src/meta/limited.rs:243:16-245:57)
  1: _65 = ((_53 as Continue).0: hybrid::id::LazyStateID)
    SourceInfo(regex-automata/src/meta/limited.rs:243:16-245:57)
  2: _52 = _65
    SourceInfo(regex-automata/src/meta/limited.rs:243:16-245:57)
  3: StorageDead(_65)
    SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
  4: (*_4) = move _52
    SourceInfo(regex-automata/src/meta/limited.rs:243:9-245:57)
  5: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:245:57-245:58)
      kind: drop(_53) -> [return: bb36, unwind: bb65]
  }
  preds [bb30, bb32]
  succs [bb36, bb65]

bb34
  0: StorageLive(_62)
    SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
  1: _62 = move ((_53 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
  2: StorageLive(_64)
    SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
  3: _64 = move _62
    SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:243:16-245:57)
      kind: _0 = <core::result::Result<(), util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _64) -> [return: bb35, unwind: bb57]
  }
  preds [bb32]
  succs [bb35, bb57]

bb35
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
      kind: drop(_62) -> [return: bb50, unwind: bb59]
  }
  preds [bb34]
  succs [bb50, bb59]

bb36
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/limited.rs:245:57-245:58)
  1: StorageLive(_66)
    SourceInfo(regex-automata/src/meta/limited.rs:246:9-249:10)
  2: StorageLive(_67)
    SourceInfo(regex-automata/src/meta/limited.rs:246:12-246:26)
  3: StorageLive(_68)
    SourceInfo(regex-automata/src/meta/limited.rs:246:12-246:15)
  4: _68 = &(*_4)
    SourceInfo(regex-automata/src/meta/limited.rs:246:12-246:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:246:12-246:26)
      kind: _67 = hybrid::id::LazyStateID::is_match(move _68) -> [return: bb37, unwind: bb65]
  }
  preds [bb33]
  succs [bb37, bb65]

bb37
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:246:12-246:26)
      kind: switchInt(move _67) -> [0: bb41, otherwise: bb38]
  }
  preds [bb36]
  succs [bb38, bb41]

bb38
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/meta/limited.rs:246:25-246:26)
  1: StorageLive(_69)
    SourceInfo(regex-automata/src/meta/limited.rs:247:17-247:24)
  2: StorageLive(_70)
    SourceInfo(regex-automata/src/meta/limited.rs:247:27-247:30)
  3: _70 = &(*_1)
    SourceInfo(regex-automata/src/meta/limited.rs:247:27-247:30)
  4: StorageLive(_71)
    SourceInfo(regex-automata/src/meta/limited.rs:247:45-247:50)
  5: _71 = &(*_2)
    SourceInfo(regex-automata/src/meta/limited.rs:247:45-247:50)
  6: StorageLive(_72)
    SourceInfo(regex-automata/src/meta/limited.rs:247:52-247:56)
  7: _72 = (*_4)
    SourceInfo(regex-automata/src/meta/limited.rs:247:52-247:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:247:27-247:60)
      kind: _69 = hybrid::dfa::DFA::match_pattern(move _70, move _71, move _72, const 0_usize) -> [return: bb39, unwind: bb65]
  }
  preds [bb37]
  succs [bb39, bb65]

bb39
  0: StorageDead(_72)
    SourceInfo(regex-automata/src/meta/limited.rs:247:59-247:60)
  1: StorageDead(_71)
    SourceInfo(regex-automata/src/meta/limited.rs:247:59-247:60)
  2: StorageDead(_70)
    SourceInfo(regex-automata/src/meta/limited.rs:247:59-247:60)
  3: FakeRead(ForLet(None), _69)
    SourceInfo(regex-automata/src/meta/limited.rs:247:17-247:24)
  4: StorageLive(_73)
    SourceInfo(regex-automata/src/meta/limited.rs:248:20-248:52)
  5: StorageLive(_74)
    SourceInfo(regex-automata/src/meta/limited.rs:248:25-248:51)
  6: StorageLive(_75)
    SourceInfo(regex-automata/src/meta/limited.rs:248:40-248:47)
  7: _75 = _69
    SourceInfo(regex-automata/src/meta/limited.rs:248:40-248:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:248:25-248:51)
      kind: _74 = util::search::HalfMatch::new(move _75, const 0_usize) -> [return: bb40, unwind: bb65]
  }
  preds [bb38]
  succs [bb40, bb65]

bb40
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/meta/limited.rs:248:50-248:51)
  1: _73 = core::option::Option::<util::search::HalfMatch>::Some(move _74)
    SourceInfo(regex-automata/src/meta/limited.rs:248:20-248:52)
  2: StorageDead(_74)
    SourceInfo(regex-automata/src/meta/limited.rs:248:51-248:52)
  3: (*_5) = move _73
    SourceInfo(regex-automata/src/meta/limited.rs:248:13-248:52)
  4: StorageDead(_73)
    SourceInfo(regex-automata/src/meta/limited.rs:248:51-248:52)
  5: _66 = const ()
    SourceInfo(regex-automata/src/meta/limited.rs:246:27-249:10)
  6: StorageDead(_69)
    SourceInfo(regex-automata/src/meta/limited.rs:249:9-249:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:246:9-249:10)
      kind: goto -> bb42
  }
  preds [bb39]
  succs [bb42]

bb41
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/meta/limited.rs:246:25-246:26)
  1: _66 = const ()
    SourceInfo(regex-automata/src/meta/limited.rs:249:10-249:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:246:9-249:10)
      kind: goto -> bb42
  }
  preds [bb37]
  succs [bb42]

bb42
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/meta/limited.rs:249:9-249:10)
  1: StorageDead(_66)
    SourceInfo(regex-automata/src/meta/limited.rs:249:9-249:10)
  2: StorageLive(_76)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  3: StorageLive(_77)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  4: _77 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _77) -> [0: bb47, otherwise: bb43]
  }
  preds [bb40, bb41]
  succs [bb43, bb47]

bb43
  0: StorageLive(_78)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_79)
    SourceInfo(regex-automata/src/meta/limited.rs:252:24-252:37)
  2: StorageLive(_80)
    SourceInfo(regex-automata/src/meta/limited.rs:252:24-252:27)
  3: _80 = &(*_4)
    SourceInfo(regex-automata/src/meta/limited.rs:252:24-252:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:252:24-252:37)
      kind: _79 = hybrid::id::LazyStateID::is_quit(move _80) -> [return: bb44, unwind: bb65]
  }
  preds [bb42]
  succs [bb44, bb65]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:252:24-252:37)
      kind: switchInt(move _79) -> [0: bb46, otherwise: bb45]
  }
  preds [bb43]
  succs [bb45, bb46]

bb45
  0: StorageDead(_80)
    SourceInfo(regex-automata/src/meta/limited.rs:252:36-252:37)
  1: StorageLive(_81)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _81 = core::panicking::panic(const "assertion failed: !sid.is_quit()") -> bb65
  }
  preds [bb44]
  succs [bb65]

bb46
  0: StorageDead(_80)
    SourceInfo(regex-automata/src/meta/limited.rs:252:36-252:37)
  1: _78 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_79)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_78)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _76 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb48
  }
  preds [bb44]
  succs [bb48]

bb47
  0: _76 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb48
  }
  preds [bb42]
  succs [bb48]

bb48
  0: StorageDead(_77)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_76)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: _8 = const ()
    SourceInfo(regex-automata/src/meta/limited.rs:242:12-253:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:231:5-253:6)
      kind: goto -> bb49
  }
  preds [bb46, bb47]
  succs [bb49]

bb49
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/limited.rs:253:5-253:6)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/limited.rs:253:5-253:6)
  2: StorageLive(_82)
    SourceInfo(regex-automata/src/meta/limited.rs:254:8-254:10)
  3: _82 = ()
    SourceInfo(regex-automata/src/meta/limited.rs:254:8-254:10)
  4: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _82)
    SourceInfo(regex-automata/src/meta/limited.rs:254:5-254:11)
  5: StorageDead(_82)
    SourceInfo(regex-automata/src/meta/limited.rs:254:10-254:11)
  6: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/limited.rs:255:1-255:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:255:2-255:2)
      kind: goto -> bb56
  }
  preds [bb26, bb48]
  succs [bb56]

bb50
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
  1: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:245:57-245:58)
      kind: drop(_53) -> [return: bb51, unwind: bb65]
  }
  preds [bb35]
  succs [bb51, bb65]

bb51
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/limited.rs:245:57-245:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb50]
  succs [bb55]

bb52
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:235:57-235:58)
      kind: drop(_20) -> [return: bb53, unwind: bb65]
  }
  preds [bb13]
  succs [bb53, bb65]

bb53
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/limited.rs:235:57-235:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb54
  }
  preds [bb52]
  succs [bb54]

bb54
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/limited.rs:242:5-242:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb24, bb53]
  succs [bb55]

bb55
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/limited.rs:253:5-253:6)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/limited.rs:253:5-253:6)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/limited.rs:255:1-255:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:255:2-255:2)
      kind: goto -> bb56
  }
  preds [bb51, bb54]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:255:2-255:2)
      kind: return
  }
  preds [bb49, bb55]
  succs []

bb57
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
      kind: drop(_64) -> [return: bb58, unwind terminate(cleanup)]
  }
  preds [bb34]
  succs [bb58]

bb58
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
      kind: drop(_62) -> [return: bb59, unwind terminate(cleanup)]
  }
  preds [bb57]
  succs [bb59]

bb59
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:245:57-245:58)
      kind: drop(_53) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb35, bb58]
  succs [bb65]

bb60
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:245:56-245:57)
      kind: drop(_54) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb29]
  succs [bb65]

bb61
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
      kind: drop(_32) -> [return: bb62, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb62]

bb62
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
      kind: drop(_30) -> [return: bb63, unwind terminate(cleanup)]
  }
  preds [bb61]
  succs [bb63]

bb63
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:235:57-235:58)
      kind: drop(_20) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb13, bb62]
  succs [bb65]

bb64
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:235:56-235:57)
      kind: drop(_21) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb65]

bb65
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:223:1-255:2)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb5, bb6, bb11, bb14, bb16, bb17, bb19, bb21, bb22, bb23, bb27, bb28, bb33, bb36, bb38, bb39, bb43, bb45, bb50, bb52, bb59, bb60, bb63, bb64]
  succs []

