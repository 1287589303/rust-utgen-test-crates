bb0
  0: PlaceMention(((*_2).0: core::option::Option<meta::wrappers::ReverseHybridEngine>))
    SourceInfo(regex-automata/src/meta/wrappers.rs:1203:30-1203:39)
  1: _3 = discriminant(((*_2).0: core::option::Option<meta::wrappers::ReverseHybridEngine>))
    SourceInfo(regex-automata/src/meta/wrappers.rs:1203:30-1203:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1203:16-1203:27)
      kind: switchInt(move _3) -> [1: bb1, otherwise: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1203:16-1203:27)
      kind: falseEdge -> [real: bb2, imaginary: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1203:21-1203:26)
  1: _4 = &((((*_2).0: core::option::Option<meta::wrappers::ReverseHybridEngine>) as Some).0: meta::wrappers::ReverseHybridEngine)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1203:21-1203:26)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:13-1204:49)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:13-1204:37)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:13-1204:37)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:13-1204:28)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:13-1204:19)
  7: _9 = &mut ((*_1).0: core::option::Option<hybrid::dfa::Cache>)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:13-1204:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1204:13-1204:28)
      kind: _8 = core::option::Option::<hybrid::dfa::Cache>::as_mut(move _9) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:27-1204:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1204:13-1204:37)
      kind: _7 = core::option::Option::<&mut hybrid::dfa::Cache>::unwrap(move _8) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: _6 = &mut (*_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:13-1204:37)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:36-1204:37)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:44-1204:48)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:44-1204:48)
  4: _11 = &((*_4).0: hybrid::dfa::DFA)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:44-1204:48)
  5: _10 = &(*_11)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:44-1204:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1204:13-1204:49)
      kind: _5 = hybrid::dfa::Cache::reset(move _6, move _10) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:48-1204:49)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:48-1204:49)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:49-1204:50)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:49-1204:50)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1204:49-1204:50)
  5: _0 = const ()
    SourceInfo(regex-automata/src/meta/wrappers.rs:1203:40-1205:10)
  6: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1205:9-1205:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1203:9-1205:10)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: _0 = const ()
    SourceInfo(regex-automata/src/meta/wrappers.rs:1205:10-1205:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1203:9-1205:10)
      kind: goto -> bb7
  }
  preds [bb0, bb1]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1206:6-1206:6)
      kind: return
  }
  preds [bb5, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1201:5-1206:6)
      kind: resume
  }
  preds [bb2, bb3, bb4]
  succs []

