bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/alphabet.rs:338:13-338:18)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/alphabet.rs:338:21-338:60)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/alphabet.rs:338:21-338:40)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/alphabet.rs:338:21-338:25)
  4: _5 = &(*_1)
    SourceInfo(regex-automata/src/util/alphabet.rs:338:21-338:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:338:21-338:40)
      kind: _4 = util::alphabet::ByteClasses::alphabet_len(move _5) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/alphabet.rs:338:39-338:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:338:21-338:60)
      kind: _3 = core::num::<impl usize>::next_power_of_two(move _4) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/alphabet.rs:338:59-338:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:338:21-338:77)
      kind: _2 = core::num::<impl usize>::trailing_zeros(move _3) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/alphabet.rs:338:76-338:77)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/util/alphabet.rs:338:13-338:18)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/util/alphabet.rs:339:9-339:31)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/util/alphabet.rs:339:25-339:30)
  4: _7 = _2
    SourceInfo(regex-automata/src/util/alphabet.rs:339:25-339:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:339:9-339:31)
      kind: _6 = <usize as core::convert::TryFrom<u32>>::try_from(move _7) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/alphabet.rs:339:30-339:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:339:9-339:40)
      kind: _0 = core::result::Result::<usize, core::num::TryFromIntError>::unwrap(move _6) -> [return: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/alphabet.rs:339:39-339:40)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/util/alphabet.rs:340:5-340:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:340:6-340:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:337:5-340:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

