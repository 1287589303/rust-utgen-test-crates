bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/primitives.rs:410:9-412:10)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/primitives.rs:410:12-410:42)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/primitives.rs:410:12-410:26)
  3: _4 = (((*_1).0: core::ops::Range<usize>).0: usize)
    SourceInfo(regex-automata/src/util/primitives.rs:410:12-410:26)
  4: StorageLive(_5)
    SourceInfo(regex-automata/src/util/primitives.rs:410:30-410:42)
  5: _5 = (((*_1).0: core::ops::Range<usize>).1: usize)
    SourceInfo(regex-automata/src/util/primitives.rs:410:30-410:42)
  6: _3 = Ge(move _4, move _5)
    SourceInfo(regex-automata/src/util/primitives.rs:410:12-410:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:410:12-410:42)
      kind: switchInt(move _3) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/primitives.rs:410:41-410:42)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/primitives.rs:410:41-410:42)
  2: _0 = core::option::Option::<util::primitives::SmallIndex>::None
    SourceInfo(regex-automata/src/util/primitives.rs:411:20-411:24)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/util/primitives.rs:412:9-412:10)
  4: StorageDead(_2)
    SourceInfo(regex-automata/src/util/primitives.rs:412:9-412:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:418:6-418:6)
      kind: goto -> bb6
  }
  preds [bb0]
  succs [bb6]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/primitives.rs:410:41-410:42)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/primitives.rs:410:41-410:42)
  2: _2 = const ()
    SourceInfo(regex-automata/src/util/primitives.rs:412:10-412:10)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/util/primitives.rs:412:9-412:10)
  4: StorageDead(_2)
    SourceInfo(regex-automata/src/util/primitives.rs:412:9-412:10)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/util/primitives.rs:413:13-413:20)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/util/primitives.rs:413:23-413:37)
  7: _8 = (((*_1).0: core::ops::Range<usize>).0: usize)
    SourceInfo(regex-automata/src/util/primitives.rs:413:23-413:37)
  8: _9 = AddWithOverflow(_8, const 1_usize)
    SourceInfo(regex-automata/src/util/primitives.rs:413:23-413:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:413:23-413:41)
      kind: assert(!move (_9.1: bool), "attempt to compute `{} + {}`, which would overflow", move _8, const 1_usize) -> [success: bb3, unwind: bb7]
  }
  preds [bb0]
  succs [bb3, bb7]

bb3
  0: _7 = move (_9.0: usize)
    SourceInfo(regex-automata/src/util/primitives.rs:413:23-413:41)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/primitives.rs:413:40-413:41)
  2: FakeRead(ForLet(None), _7)
    SourceInfo(regex-automata/src/util/primitives.rs:413:13-413:20)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/util/primitives.rs:414:13-414:15)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/util/primitives.rs:414:37-414:56)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/util/primitives.rs:414:37-414:56)
  6: _12 = &mut (((*_1).0: core::ops::Range<usize>).0: usize)
    SourceInfo(regex-automata/src/util/primitives.rs:414:37-414:56)
  7: _11 = &mut (*_12)
    SourceInfo(regex-automata/src/util/primitives.rs:414:37-414:56)
  8: StorageLive(_13)
    SourceInfo(regex-automata/src/util/primitives.rs:414:58-414:65)
  9: _13 = _7
    SourceInfo(regex-automata/src/util/primitives.rs:414:58-414:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:414:18-414:66)
      kind: _10 = core::mem::replace::<usize>(move _11, move _13) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/primitives.rs:414:65-414:66)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/util/primitives.rs:414:65-414:66)
  2: FakeRead(ForLet(None), _10)
    SourceInfo(regex-automata/src/util/primitives.rs:414:13-414:15)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/util/primitives.rs:414:66-414:67)
  4: StorageLive(_14)
    SourceInfo(regex-automata/src/util/primitives.rs:417:14-417:43)
  5: StorageLive(_15)
    SourceInfo(regex-automata/src/util/primitives.rs:417:40-417:42)
  6: _15 = _10
    SourceInfo(regex-automata/src/util/primitives.rs:417:40-417:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:417:14-417:43)
      kind: _14 = util::primitives::SmallIndex::new_unchecked(move _15) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/primitives.rs:417:42-417:43)
  1: _0 = core::option::Option::<util::primitives::SmallIndex>::Some(move _14)
    SourceInfo(regex-automata/src/util/primitives.rs:417:9-417:44)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/util/primitives.rs:417:43-417:44)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/util/primitives.rs:418:5-418:6)
  4: StorageDead(_7)
    SourceInfo(regex-automata/src/util/primitives.rs:418:5-418:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:418:6-418:6)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:418:6-418:6)
      kind: return
  }
  preds [bb1, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:409:5-418:6)
      kind: resume
  }
  preds [bb2, bb3, bb4]
  succs []

