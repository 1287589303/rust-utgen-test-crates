{
  "regex-automata/src/dfa/dense.rs:4511:9:4512:50": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "size_of::<u32>()   // match state length\n        + (self.slices().len() * PatternID::SIZE)",
          "lhs": "size_of::<u32>()",
          "rhs": "(self.slices().len() * PatternID::SIZE)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4515:11:4515:55": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.pattern_ids().len() * PatternID::SIZE)",
          "lhs": "self.pattern_ids().len()",
          "rhs": "PatternID::SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4511:9:4513:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "size_of::<u32>()   // match state length\n        + (self.slices().len() * PatternID::SIZE)\n        + size_of::<u32>()",
          "lhs": "size_of::<u32>()   // match state length\n        + (self.slices().len() * PatternID::SIZE)",
          "rhs": "size_of::<u32>()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4511:9:4515:55": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "size_of::<u32>()   // match state length\n        + (self.slices().len() * PatternID::SIZE)\n        + size_of::<u32>() // unique pattern ID length\n        + size_of::<u32>() // pattern ID length\n        + (self.pattern_ids().len() * PatternID::SIZE)",
          "lhs": "size_of::<u32>()   // match state length\n        + (self.slices().len() * PatternID::SIZE)\n        + size_of::<u32>() // unique pattern ID length\n        + size_of::<u32>()",
          "rhs": "(self.pattern_ids().len() * PatternID::SIZE)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4512:11:4512:50": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.slices().len() * PatternID::SIZE)",
          "lhs": "self.slices().len()",
          "rhs": "PatternID::SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4511:9:4514:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "size_of::<u32>()   // match state length\n        + (self.slices().len() * PatternID::SIZE)\n        + size_of::<u32>() // unique pattern ID length\n        + size_of::<u32>()",
          "lhs": "size_of::<u32>()   // match state length\n        + (self.slices().len() * PatternID::SIZE)\n        + size_of::<u32>()",
          "rhs": "size_of::<u32>()",
          "cmp_with_int": false
        }
      }
    }
  ]
}