bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1230:9-1230:40)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1230:9-1230:14)
  2: _6 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1230:9-1230:14)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1230:28-1230:39)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1230:28-1230:33)
  5: _8 = &(*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1230:28-1230:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1230:28-1230:39)
      kind: _7 = core::slice::<impl [core::option::Option<util::primitives::NonMaxUsize>]>::len(move _8) -> [return: bb1, unwind: bb86]
  }
  preds []
  succs [bb1, bb86]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1230:38-1230:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1230:9-1230:40)
      kind: _5 = nfa::thompson::pikevm::Cache::setup_search(move _6, move _7) -> [return: bb2, unwind: bb86]
  }
  preds [bb0]
  succs [bb2, bb86]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1230:39-1230:40)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1230:39-1230:40)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1230:40-1230:41)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1231:9-1233:10)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1231:12-1231:27)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1231:12-1231:17)
  6: _11 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1231:12-1231:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1231:12-1231:27)
      kind: _10 = util::search::Input::<'_>::is_done(move _11) -> [return: bb3, unwind: bb86]
  }
  preds [bb1]
  succs [bb3, bb86]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1231:12-1231:27)
      kind: switchInt(move _10) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1231:26-1231:27)
  1: _0 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1232:20-1232:24)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1233:9-1233:10)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1233:9-1233:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb85
  }
  preds [bb3]
  succs [bb85]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1231:26-1231:27)
  1: _9 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1233:10-1233:10)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1233:9-1233:10)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1233:9-1233:10)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1240:9-1243:10)
  5: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:13-1241:54)
  6: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:13-1241:35)
  7: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:13-1241:29)
  8: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:13-1241:29)
  9: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:13-1241:18)
  10: _18 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:13-1241:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:13-1241:29)
      kind: _17 = util::search::Input::<'_>::haystack(move _18) -> [return: bb6, unwind: bb86]
  }
  preds [bb3]
  succs [bb6, bb86]

bb6
  0: _16 = &(*_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:13-1241:29)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:28-1241:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:13-1241:35)
      kind: _15 = core::slice::<impl [u8]>::len(move _16) -> [return: bb7, unwind: bb86]
  }
  preds [bb5]
  succs [bb7, bb86]

bb7
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:34-1241:35)
  1: _14 = Lt(move _15, const core::usize::MAX)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:13-1241:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:13-1241:54)
      kind: switchInt(move _14) -> [0: bb9, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:53-1241:54)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1243:9-1243:10)
  2: _13 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1243:10-1243:10)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1243:9-1243:10)
  4: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1243:9-1243:10)
  5: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1248:13-1248:23)
  6: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1249:13-1249:41)
  7: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1249:13-1249:41)
  8: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1249:13-1249:24)
  9: _28 = &((*_1).0: nfa::thompson::pikevm::Config)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1249:13-1249:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1249:13-1249:41)
      kind: _27 = nfa::thompson::pikevm::Config::get_match_kind(move _28) -> [return: bb11, unwind: bb86]
  }
  preds [bb7]
  succs [bb11, bb86]

bb9
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1241:53-1241:54)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1243:9-1243:10)
  2: StorageLive(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1242:13-1242:61)
  5: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1242:13-1242:61)
  6: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1242:13-1242:61)
  7: _24 = [const "byte slice lengths must be less than usize MAX"]
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1242:13-1242:61)
  8: _23 = &_24
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1242:13-1242:61)
  9: _22 = &(*_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1242:13-1242:61)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _21 = core::fmt::Arguments::<'_>::new_const::<1>(move _22) -> [return: bb10, unwind: bb86]
  }
  preds [bb7]
  succs [bb10, bb86]

bb10
  0: StorageDead(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _20 = core::panicking::panic_fmt(move _21) -> bb86
  }
  preds [bb9]
  succs [bb86]

bb11
  0: _26 = &_27
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1249:13-1249:41)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1249:40-1249:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1249:13-1249:69)
      kind: _25 = util::search::MatchKind::continue_past_first_match(move _26) -> [return: bb12, unwind: bb86]
  }
  preds [bb8]
  succs [bb12, bb86]

bb12
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1249:68-1249:69)
  1: FakeRead(ForLet(None), _25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1248:13-1248:23)
  2: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1249:69-1249:70)
  3: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:36-1253:10)
  4: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:42-1250:66)
  5: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:42-1250:46)
  6: _33 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:42-1250:46)
  7: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:60-1250:65)
  8: _34 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:60-1250:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:42-1250:66)
      kind: _32 = nfa::thompson::pikevm::PikeVM::start_config(move _33, move _34) -> [return: bb13, unwind: bb86]
  }
  preds [bb11]
  succs [bb13, bb86]

bb13
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:65-1250:66)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:65-1250:66)
  2: PlaceMention(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:42-1250:66)
  3: _35 = discriminant(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:42-1250:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:36-1250:66)
      kind: switchInt(move _35) -> [0: bb15, 1: bb16, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15, bb16]

bb14
  0: FakeRead(ForMatchedPlace(None), _32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:42-1250:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:42-1250:66)
      kind: unreachable
  }
  preds [bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1251:13-1251:17)
      kind: falseEdge -> [real: bb17, imaginary: bb16]
  }
  preds [bb13]
  succs [bb16, bb17]

bb16
  0: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1252:18-1252:24)
  1: _37 = ((_32 as Some).0: (bool, util::primitives::StateID))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1252:18-1252:24)
  2: _31 = _37
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1252:29-1252:35)
  3: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1252:34-1252:35)
  4: PlaceMention(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:36-1253:10)
  5: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:14-1250:22)
  6: _29 = (_31.0: bool)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:14-1250:22)
  7: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:24-1250:32)
  8: _30 = (_31.1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1250:24-1250:32)
  9: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1253:10-1253:11)
  10: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1253:10-1253:11)
  11: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1255:13-1255:16)
  12: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:16-1256:24)
  13: _39 = _29
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:16-1256:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:16-1256:24)
      kind: switchInt(move _39) -> [0: bb19, otherwise: bb18]
  }
  preds [bb13, bb15]
  succs [bb18, bb19]

bb17
  0: _0 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1251:28-1251:32)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1253:10-1253:11)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1253:10-1253:11)
  3: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1383:5-1383:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb85
  }
  preds [bb15]
  succs [bb85]

bb18
  0: _38 = core::option::Option::<&util::prefilter::Prefilter>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:27-1256:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:13-1256:76)
      kind: goto -> bb22
  }
  preds [bb16]
  succs [bb22]

bb19
  0: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:41-1256:58)
  1: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:41-1256:58)
  2: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:41-1256:45)
  3: _42 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:41-1256:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:41-1256:58)
      kind: _41 = nfa::thompson::pikevm::PikeVM::get_config(move _42) -> [return: bb20, unwind: bb86]
  }
  preds [bb16]
  succs [bb20, bb86]

bb20
  0: _40 = &(*_41)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:41-1256:58)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:57-1256:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:41-1256:74)
      kind: _38 = nfa::thompson::pikevm::Config::get_prefilter(move _40) -> [return: bb21, unwind: bb86]
  }
  preds [bb19]
  succs [bb21, bb86]

bb21
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:73-1256:74)
  1: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:75-1256:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:13-1256:76)
      kind: goto -> bb22
  }
  preds [bb20]
  succs [bb22]

bb22
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1256:75-1256:76)
  1: FakeRead(ForLet(None), _38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1255:13-1255:16)
  2: PlaceMention(_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1257:67-1257:72)
  3: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1257:21-1257:34)
  4: _43 = &mut ((*_2).0: std::vec::Vec<nfa::thompson::pikevm::FollowEpsilon>)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1257:21-1257:34)
  5: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1257:36-1257:48)
  6: _44 = &mut ((*_2).1: nfa::thompson::pikevm::ActiveStates)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1257:36-1257:48)
  7: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1257:50-1257:62)
  8: _45 = &mut ((*_2).2: nfa::thompson::pikevm::ActiveStates)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1257:50-1257:62)
  9: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1258:13-1258:19)
  10: _46 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1258:22-1258:26)
  11: FakeRead(ForLet(None), _46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1258:13-1258:19)
  12: StorageLive(_47)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1270:13-1270:19)
  13: StorageLive(_48)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1270:22-1270:27)
  14: _48 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1270:22-1270:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1270:22-1270:35)
      kind: _47 = util::search::Input::<'_>::start(move _48) -> [return: bb23, unwind: bb86]
  }
  preds [bb18, bb21]
  succs [bb23, bb86]

bb23
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1270:34-1270:35)
  1: FakeRead(ForLet(None), _47)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1270:13-1270:19)
  2: StorageLive(_49)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:9-1380:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:9-1380:10)
      kind: goto -> bb24
  }
  preds [bb22]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:9-1380:10)
      kind: falseUnwind -> [real: bb25, unwind: bb86]
  }
  preds [bb23, bb81]
  succs [bb25, bb86]

bb25
  0: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:15-1271:32)
  1: StorageLive(_52)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:15-1271:17)
  2: _52 = _47
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:15-1271:17)
  3: StorageLive(_53)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:21-1271:32)
  4: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:21-1271:26)
  5: _54 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:21-1271:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:21-1271:32)
      kind: _53 = util::search::Input::<'_>::end(move _54) -> [return: bb26, unwind: bb86]
  }
  preds [bb24]
  succs [bb26, bb86]

bb26
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:31-1271:32)
  1: _51 = Le(move _52, move _53)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:15-1271:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:15-1271:32)
      kind: switchInt(move _51) -> [0: bb82, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb82]

bb27
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:31-1271:32)
  1: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:31-1271:32)
  2: StorageLive(_55)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1274:13-1300:14)
  3: StorageLive(_56)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1274:16-1274:35)
  4: StorageLive(_57)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1274:16-1274:24)
  5: _57 = &((*_44).0: util::sparse_set::SparseSet)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1274:16-1274:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1274:16-1274:35)
      kind: _56 = util::sparse_set::SparseSet::is_empty(move _57) -> [return: bb28, unwind: bb86]
  }
  preds [bb26]
  succs [bb28, bb86]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1274:16-1274:35)
      kind: switchInt(move _56) -> [0: bb51, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb51]

bb29
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1274:34-1274:35)
  1: StorageLive(_58)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1277:17-1279:18)
  2: StorageLive(_59)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1277:20-1277:32)
  3: StorageLive(_60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1277:20-1277:22)
  4: _60 = &_46
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1277:20-1277:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1277:20-1277:32)
      kind: _59 = core::option::Option::<util::search::HalfMatch>::is_some(move _60) -> [return: bb30, unwind: bb86]
  }
  preds [bb28]
  succs [bb30, bb86]

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1277:20-1277:32)
      kind: switchInt(move _59) -> [0: bb33, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb33]

bb31
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1277:31-1277:32)
  1: StorageLive(_61)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1277:37-1277:47)
  2: _61 = _25
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1277:37-1277:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1277:37-1277:47)
      kind: switchInt(move _61) -> [0: bb32, otherwise: bb34]
  }
  preds [bb30]
  succs [bb32, bb34]

bb32
  0: _49 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1278:21-1278:26)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1279:17-1279:18)
  2: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1279:17-1279:18)
  3: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1279:17-1279:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb83
  }
  preds [bb31]
  succs [bb83]

bb33
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1277:31-1277:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb34
  }
  preds [bb30]
  succs [bb34]

bb34
  0: _58 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1279:18-1279:18)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1279:17-1279:18)
  2: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1279:17-1279:18)
  3: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1279:17-1279:18)
  4: StorageLive(_63)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:17-1285:18)
  5: StorageLive(_64)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:20-1283:28)
  6: _64 = _29
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:20-1283:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:20-1283:28)
      kind: switchInt(move _64) -> [0: bb39, otherwise: bb35]
  }
  preds [bb31, bb33]
  succs [bb35, bb39]

bb35
  0: StorageLive(_65)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:32-1283:50)
  1: StorageLive(_66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:32-1283:34)
  2: _66 = _47
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:32-1283:34)
  3: StorageLive(_67)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:37-1283:50)
  4: StorageLive(_68)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:37-1283:42)
  5: _68 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:37-1283:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:37-1283:50)
      kind: _67 = util::search::Input::<'_>::start(move _68) -> [return: bb36, unwind: bb86]
  }
  preds [bb34]
  succs [bb36, bb86]

bb36
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:49-1283:50)
  1: _65 = Gt(move _66, move _67)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:32-1283:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:32-1283:50)
      kind: switchInt(move _65) -> [0: bb38, otherwise: bb37]
  }
  preds [bb35]
  succs [bb37, bb38]

bb37
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:49-1283:50)
  1: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:49-1283:50)
  2: _49 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1284:21-1284:26)
  3: StorageDead(_65)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1285:17-1285:18)
  4: StorageDead(_64)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1285:17-1285:18)
  5: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1285:17-1285:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb83
  }
  preds [bb36]
  succs [bb83]

bb38
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:49-1283:50)
  1: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1283:49-1283:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb39
  }
  preds [bb36]
  succs [bb39]

bb39
  0: _63 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1285:18-1285:18)
  1: StorageDead(_65)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1285:17-1285:18)
  2: StorageDead(_64)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1285:17-1285:18)
  3: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1285:17-1285:18)
  4: PlaceMention(_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1293:40-1293:43)
  5: _70 = discriminant(_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1293:40-1293:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1293:24-1293:37)
      kind: switchInt(move _70) -> [1: bb41, otherwise: bb40]
  }
  preds [bb34, bb38]
  succs [bb40, bb41]

bb40
  0: _55 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1299:18-1299:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1293:17-1299:18)
      kind: goto -> bb52
  }
  preds [bb39, bb41]
  succs [bb52]

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1293:24-1293:37)
      kind: falseEdge -> [real: bb42, imaginary: bb40]
  }
  preds [bb39]
  succs [bb40, bb42]

bb42
  0: StorageLive(_71)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1293:29-1293:36)
  1: _71 = &((_38 as Some).0: &util::prefilter::Prefilter)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1293:29-1293:36)
  2: StorageLive(_72)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:25-1294:29)
  3: StorageLive(_73)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:43-1294:58)
  4: StorageLive(_74)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:43-1294:45)
  5: _74 = _47
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:43-1294:45)
  6: StorageLive(_75)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:47-1294:58)
  7: StorageLive(_76)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:47-1294:52)
  8: _76 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:47-1294:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:47-1294:58)
      kind: _75 = util::search::Input::<'_>::end(move _76) -> [return: bb43, unwind: bb86]
  }
  preds [bb41]
  succs [bb43, bb86]

bb43
  0: StorageDead(_76)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:57-1294:58)
  1: _73 = core::ops::Range::<usize> { start: move _74, end: move _75 }
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:43-1294:58)
  2: StorageDead(_75)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:57-1294:58)
  3: StorageDead(_74)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:57-1294:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:32-1294:59)
      kind: _72 = <util::search::Span as core::convert::From<core::ops::Range<usize>>>::from(move _73) -> [return: bb44, unwind: bb86]
  }
  preds [bb42]
  succs [bb44, bb86]

bb44
  0: StorageDead(_73)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:58-1294:59)
  1: FakeRead(ForLet(None), _72)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1294:25-1294:29)
  2: StorageLive(_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:27-1295:59)
  3: StorageLive(_78)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:27-1295:30)
  4: _78 = &(*(*_71))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:27-1295:30)
  5: StorageLive(_79)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:36-1295:52)
  6: StorageLive(_80)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:36-1295:52)
  7: StorageLive(_81)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:36-1295:41)
  8: _81 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:36-1295:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:36-1295:52)
      kind: _80 = util::search::Input::<'_>::haystack(move _81) -> [return: bb45, unwind: bb86]
  }
  preds [bb43]
  succs [bb45, bb86]

bb45
  0: _79 = &(*_80)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:36-1295:52)
  1: StorageDead(_81)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:51-1295:52)
  2: StorageLive(_82)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:54-1295:58)
  3: _82 = _72
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:54-1295:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:27-1295:59)
      kind: _77 = util::prefilter::Prefilter::find(move _78, move _79, move _82) -> [return: bb46, unwind: bb86]
  }
  preds [bb44]
  succs [bb46, bb86]

bb46
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:58-1295:59)
  1: StorageDead(_79)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:58-1295:59)
  2: StorageDead(_78)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:58-1295:59)
  3: PlaceMention(_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:27-1295:59)
  4: _83 = discriminant(_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:27-1295:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:21-1295:59)
      kind: switchInt(move _83) -> [0: bb48, 1: bb49, otherwise: bb47]
  }
  preds [bb45]
  succs [bb47, bb48, bb49]

bb47
  0: FakeRead(ForMatchedPlace(None), _77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:27-1295:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1295:27-1295:59)
      kind: unreachable
  }
  preds [bb46]
  succs []

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1296:25-1296:29)
      kind: falseEdge -> [real: bb50, imaginary: bb49]
  }
  preds [bb46]
  succs [bb49, bb50]

bb49
  0: StorageLive(_85)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1297:30-1297:38)
  1: _85 = &((_77 as Some).0: util::search::Span)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1297:30-1297:38)
  2: StorageLive(_86)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1297:48-1297:58)
  3: _86 = ((*_85).0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1297:48-1297:58)
  4: _47 = move _86
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1297:43-1297:58)
  5: _55 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1297:43-1297:58)
  6: StorageDead(_86)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1297:57-1297:58)
  7: StorageDead(_85)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1297:57-1297:58)
  8: StorageDead(_72)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1299:17-1299:18)
  9: StorageDead(_80)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1299:17-1299:18)
  10: StorageDead(_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1299:17-1299:18)
  11: StorageDead(_71)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1299:17-1299:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1293:17-1299:18)
      kind: goto -> bb52
  }
  preds [bb46, bb48]
  succs [bb52]

bb50
  0: _49 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1296:33-1296:38)
  1: StorageDead(_72)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1299:17-1299:18)
  2: StorageDead(_80)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1299:17-1299:18)
  3: StorageDead(_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1299:17-1299:18)
  4: StorageDead(_71)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1299:17-1299:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb83
  }
  preds [bb48]
  succs [bb83]

bb51
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1274:34-1274:35)
  1: _55 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1300:14-1300:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1274:13-1300:14)
      kind: goto -> bb52
  }
  preds [bb28]
  succs [bb52]

bb52
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1300:13-1300:14)
  1: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1300:13-1300:14)
  2: StorageLive(_87)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1347:13-1365:14)
  3: StorageLive(_88)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1347:18-1347:30)
  4: StorageLive(_89)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1347:18-1347:20)
  5: _89 = &_46
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1347:18-1347:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1347:18-1347:30)
      kind: _88 = core::option::Option::<util::search::HalfMatch>::is_some(move _89) -> [return: bb53, unwind: bb86]
  }
  preds [bb40, bb49, bb51]
  succs [bb53, bb86]

bb53
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1347:18-1347:30)
      kind: switchInt(move _88) -> [0: bb55, otherwise: bb54]
  }
  preds [bb52]
  succs [bb54, bb55]

bb54
  0: StorageDead(_89)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1347:29-1347:30)
  1: StorageLive(_90)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1347:34-1347:44)
  2: _90 = _25
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1347:34-1347:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1347:34-1347:44)
      kind: switchInt(move _90) -> [0: bb64, otherwise: bb56]
  }
  preds [bb53]
  succs [bb56, bb64]

bb55
  0: StorageDead(_89)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1347:29-1347:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1349:13-1365:14)
      kind: goto -> bb56
  }
  preds [bb53]
  succs [bb56]

bb56
  0: StorageLive(_91)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:22-1348:30)
  1: _91 = _29
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:22-1348:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:22-1348:30)
      kind: switchInt(move _91) -> [0: bb60, otherwise: bb57]
  }
  preds [bb54, bb55]
  succs [bb57, bb60]

bb57
  0: StorageLive(_92)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:34-1348:53)
  1: StorageLive(_93)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:34-1348:36)
  2: _93 = _47
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:34-1348:36)
  3: StorageLive(_94)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:40-1348:53)
  4: StorageLive(_95)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:40-1348:45)
  5: _95 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:40-1348:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:40-1348:53)
      kind: _94 = util::search::Input::<'_>::start(move _95) -> [return: bb58, unwind: bb86]
  }
  preds [bb56]
  succs [bb58, bb86]

bb58
  0: StorageDead(_95)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:52-1348:53)
  1: _92 = Eq(move _93, move _94)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:34-1348:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:34-1348:53)
      kind: switchInt(move _92) -> [0: bb63, otherwise: bb59]
  }
  preds [bb57]
  succs [bb59, bb63]

bb59
  0: StorageDead(_94)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:52-1348:53)
  1: StorageDead(_93)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:52-1348:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1349:13-1365:14)
      kind: goto -> bb60
  }
  preds [bb58]
  succs [bb60]

bb60
  0: StorageLive(_96)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1363:21-1363:26)
  1: StorageLive(_97)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1363:29-1363:44)
  2: _97 = &mut ((*_45).1: nfa::thompson::pikevm::SlotTable)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1363:29-1363:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1363:29-1363:57)
      kind: _96 = nfa::thompson::pikevm::SlotTable::all_absent(move _97) -> [return: bb61, unwind: bb86]
  }
  preds [bb56, bb59]
  succs [bb61, bb86]

bb61
  0: StorageDead(_97)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1363:56-1363:57)
  1: FakeRead(ForLet(None), _96)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1363:21-1363:26)
  2: StorageLive(_98)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:17-1364:78)
  3: StorageLive(_99)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:17-1364:21)
  4: _99 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:17-1364:21)
  5: StorageLive(_100)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:38-1364:43)
  6: _100 = &mut (*_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:38-1364:43)
  7: StorageLive(_101)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:45-1364:50)
  8: _101 = &mut (*_96)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:45-1364:50)
  9: StorageLive(_102)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:52-1364:56)
  10: _102 = &mut (*_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:52-1364:56)
  11: StorageLive(_103)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:58-1364:63)
  12: _103 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:58-1364:63)
  13: StorageLive(_104)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:65-1364:67)
  14: _104 = _47
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:65-1364:67)
  15: StorageLive(_105)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:69-1364:77)
  16: _105 = _30
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:69-1364:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:17-1364:78)
      kind: _98 = nfa::thompson::pikevm::PikeVM::epsilon_closure(move _99, move _100, move _101, move _102, move _103, move _104, move _105) -> [return: bb62, unwind: bb86]
  }
  preds [bb60]
  succs [bb62, bb86]

bb62
  0: StorageDead(_105)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:77-1364:78)
  1: StorageDead(_104)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:77-1364:78)
  2: StorageDead(_103)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:77-1364:78)
  3: StorageDead(_102)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:77-1364:78)
  4: StorageDead(_101)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:77-1364:78)
  5: StorageDead(_100)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:77-1364:78)
  6: StorageDead(_99)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:77-1364:78)
  7: StorageDead(_98)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1364:78-1364:79)
  8: _87 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1349:13-1365:14)
  9: StorageDead(_96)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1365:13-1365:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1347:13-1365:14)
      kind: goto -> bb65
  }
  preds [bb61]
  succs [bb65]

bb63
  0: StorageDead(_94)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:52-1348:53)
  1: StorageDead(_93)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1348:52-1348:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb64
  }
  preds [bb58]
  succs [bb64]

bb64
  0: _87 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1365:14-1365:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1347:13-1365:14)
      kind: goto -> bb65
  }
  preds [bb54, bb63]
  succs [bb65]

bb65
  0: StorageDead(_92)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1365:13-1365:14)
  1: StorageDead(_91)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1365:13-1365:14)
  2: StorageDead(_90)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1365:13-1365:14)
  3: StorageDead(_88)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1365:13-1365:14)
  4: StorageDead(_87)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1365:13-1365:14)
  5: StorageLive(_106)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:13-1369:14)
  6: StorageLive(_107)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:32-1366:79)
  7: StorageLive(_108)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:32-1366:36)
  8: _108 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:32-1366:36)
  9: StorageLive(_109)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:43-1366:48)
  10: _109 = &mut (*_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:43-1366:48)
  11: StorageLive(_110)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:50-1366:54)
  12: _110 = &mut (*_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:50-1366:54)
  13: StorageLive(_111)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:56-1366:60)
  14: _111 = &mut (*_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:56-1366:60)
  15: StorageLive(_112)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:62-1366:67)
  16: _112 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:62-1366:67)
  17: StorageLive(_113)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:69-1366:71)
  18: _113 = _47
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:69-1366:71)
  19: StorageLive(_114)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:73-1366:78)
  20: _114 = &mut (*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:73-1366:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:32-1366:79)
      kind: _107 = nfa::thompson::pikevm::PikeVM::nexts(move _108, move _109, move _110, move _111, move _112, move _113, move _114) -> [return: bb66, unwind: bb86]
  }
  preds [bb62, bb64]
  succs [bb66, bb86]

bb66
  0: StorageDead(_114)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:78-1366:79)
  1: StorageDead(_113)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:78-1366:79)
  2: StorageDead(_112)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:78-1366:79)
  3: StorageDead(_111)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:78-1366:79)
  4: StorageDead(_110)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:78-1366:79)
  5: StorageDead(_109)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:78-1366:79)
  6: StorageDead(_108)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:78-1366:79)
  7: PlaceMention(_107)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:32-1366:79)
  8: _115 = discriminant(_107)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:32-1366:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:20-1366:29)
      kind: switchInt(move _115) -> [1: bb67, otherwise: bb70]
  }
  preds [bb65]
  succs [bb67, bb70]

bb67
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:20-1366:29)
      kind: falseEdge -> [real: bb68, imaginary: bb70]
  }
  preds [bb66]
  succs [bb68, bb70]

bb68
  0: StorageLive(_116)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:25-1366:28)
  1: _116 = ((_107 as Some).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:25-1366:28)
  2: StorageLive(_117)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1368:22-1368:51)
  3: StorageLive(_118)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1368:27-1368:50)
  4: StorageLive(_119)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1368:42-1368:45)
  5: _119 = _116
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1368:42-1368:45)
  6: StorageLive(_120)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1368:47-1368:49)
  7: _120 = _47
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1368:47-1368:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1368:27-1368:50)
      kind: _118 = util::search::HalfMatch::new(move _119, move _120) -> [return: bb69, unwind: bb86]
  }
  preds [bb67]
  succs [bb69, bb86]

bb69
  0: StorageDead(_120)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1368:49-1368:50)
  1: StorageDead(_119)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1368:49-1368:50)
  2: _117 = core::option::Option::<util::search::HalfMatch>::Some(move _118)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1368:22-1368:51)
  3: StorageDead(_118)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1368:50-1368:51)
  4: _46 = move _117
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1368:17-1368:51)
  5: StorageDead(_117)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1368:50-1368:51)
  6: _106 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1367:13-1369:14)
  7: StorageDead(_116)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1369:13-1369:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:13-1369:14)
      kind: goto -> bb71
  }
  preds [bb68]
  succs [bb71]

bb70
  0: _106 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1369:14-1369:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1366:13-1369:14)
      kind: goto -> bb71
  }
  preds [bb66, bb67]
  succs [bb71]

bb71
  0: StorageDead(_107)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1369:13-1369:14)
  1: StorageDead(_106)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1369:13-1369:14)
  2: StorageLive(_121)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:13-1376:14)
  3: StorageLive(_122)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:16-1374:36)
  4: StorageLive(_123)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:16-1374:21)
  5: _123 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:16-1374:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:16-1374:36)
      kind: _122 = util::search::Input::<'_>::get_earliest(move _123) -> [return: bb72, unwind: bb86]
  }
  preds [bb69, bb70]
  succs [bb72, bb86]

bb72
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:16-1374:36)
      kind: switchInt(move _122) -> [0: bb77, otherwise: bb73]
  }
  preds [bb71]
  succs [bb73, bb77]

bb73
  0: StorageDead(_123)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:35-1374:36)
  1: StorageLive(_124)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:40-1374:52)
  2: StorageLive(_125)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:40-1374:42)
  3: _125 = &_46
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:40-1374:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:40-1374:52)
      kind: _124 = core::option::Option::<util::search::HalfMatch>::is_some(move _125) -> [return: bb74, unwind: bb86]
  }
  preds [bb72]
  succs [bb74, bb86]

bb74
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:40-1374:52)
      kind: switchInt(move _124) -> [0: bb76, otherwise: bb75]
  }
  preds [bb73]
  succs [bb75, bb76]

bb75
  0: StorageDead(_125)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:51-1374:52)
  1: _49 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1375:17-1375:22)
  2: StorageDead(_124)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1376:13-1376:14)
  3: StorageDead(_122)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1376:13-1376:14)
  4: StorageDead(_121)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1376:13-1376:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb84
  }
  preds [bb74]
  succs [bb84]

bb76
  0: StorageDead(_125)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:51-1374:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb74]
  succs [bb78]

bb77
  0: StorageDead(_123)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1374:35-1374:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb72]
  succs [bb78]

bb78
  0: _121 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1376:14-1376:14)
  1: StorageDead(_124)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1376:13-1376:14)
  2: StorageDead(_122)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1376:13-1376:14)
  3: StorageDead(_121)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1376:13-1376:14)
  4: StorageLive(_127)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1377:13-1377:40)
  5: StorageLive(_128)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1377:29-1377:33)
  6: _128 = &mut (*_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1377:29-1377:33)
  7: StorageLive(_129)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1377:35-1377:39)
  8: _129 = &mut (*_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1377:35-1377:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1377:13-1377:40)
      kind: _127 = core::mem::swap::<nfa::thompson::pikevm::ActiveStates>(move _128, move _129) -> [return: bb79, unwind: bb86]
  }
  preds [bb76, bb77]
  succs [bb79, bb86]

bb79
  0: StorageDead(_129)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1377:39-1377:40)
  1: StorageDead(_128)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1377:39-1377:40)
  2: StorageDead(_127)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1377:40-1377:41)
  3: StorageLive(_130)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1378:13-1378:29)
  4: StorageLive(_131)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1378:13-1378:21)
  5: _131 = &mut ((*_45).0: util::sparse_set::SparseSet)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1378:13-1378:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1378:13-1378:29)
      kind: _130 = util::sparse_set::SparseSet::clear(move _131) -> [return: bb80, unwind: bb86]
  }
  preds [bb78]
  succs [bb80, bb86]

bb80
  0: StorageDead(_131)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1378:28-1378:29)
  1: StorageDead(_130)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1378:29-1378:30)
  2: _132 = AddWithOverflow(_47, const 1_usize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1379:13-1379:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1379:13-1379:20)
      kind: assert(!move (_132.1: bool), "attempt to compute `{} + {}`, which would overflow", _47, const 1_usize) -> [success: bb81, unwind: bb86]
  }
  preds [bb79]
  succs [bb81, bb86]

bb81
  0: _47 = move (_132.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1379:13-1379:20)
  1: _50 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:33-1380:10)
  2: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1380:9-1380:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:9-1380:10)
      kind: goto -> bb24
  }
  preds [bb80]
  succs [bb24]

bb82
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:31-1271:32)
  1: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:31-1271:32)
  2: StorageLive(_134)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:9-1380:10)
  3: _49 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1271:9-1380:10)
  4: StorageDead(_134)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1380:9-1380:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb84
  }
  preds [bb26]
  succs [bb84]

bb83
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1300:13-1300:14)
  1: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1300:13-1300:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb84
  }
  preds [bb32, bb37, bb50]
  succs [bb84]

bb84
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1380:9-1380:10)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1380:9-1380:10)
  2: _0 = _46
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1382:9-1382:11)
  3: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1383:5-1383:6)
  4: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1383:5-1383:6)
  5: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1383:5-1383:6)
  6: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1383:5-1383:6)
  7: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1383:5-1383:6)
  8: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1383:5-1383:6)
  9: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1383:5-1383:6)
  10: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1383:5-1383:6)
  11: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1383:5-1383:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1383:6-1383:6)
      kind: goto -> bb85
  }
  preds [bb75, bb82, bb83]
  succs [bb85]

bb85
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1383:6-1383:6)
      kind: return
  }
  preds [bb4, bb17, bb84]
  succs []

bb86
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1224:5-1383:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb5, bb6, bb8, bb9, bb10, bb11, bb12, bb19, bb20, bb22, bb24, bb25, bb27, bb29, bb35, bb42, bb43, bb44, bb45, bb52, bb57, bb60, bb61, bb65, bb68, bb71, bb73, bb78, bb79, bb80]
  succs []

