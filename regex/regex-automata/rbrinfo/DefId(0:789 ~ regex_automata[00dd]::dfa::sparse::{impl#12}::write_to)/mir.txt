bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1957:13-1957:19)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1957:22-1957:26)
  2: _4 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1957:22-1957:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1957:22-1957:41)
      kind: _3 = dfa::sparse::StartTable::<T>::write_to_len(move _4) -> [return: bb1, unwind: bb57]
  }
  preds []
  succs [bb1, bb57]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1957:40-1957:41)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1957:13-1957:19)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1958:9-1962:10)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1958:12-1958:30)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1958:12-1958:21)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1958:12-1958:15)
  6: _8 = &(*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1958:12-1958:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1958:12-1958:21)
      kind: _7 = core::slice::<impl [u8]>::len(move _8) -> [return: bb2, unwind: bb57]
  }
  preds [bb0]
  succs [bb2, bb57]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1958:20-1958:21)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1958:24-1958:30)
  2: _9 = _3
    SourceInfo(regex-automata/src/dfa/sparse.rs:1958:24-1958:30)
  3: _6 = Lt(move _7, move _9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1958:12-1958:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1958:12-1958:30)
      kind: switchInt(move _6) -> [0: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1958:29-1958:30)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1958:29-1958:30)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1959:24-1961:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1959:24-1961:14)
      kind: _11 = util::wire::SerializeError::buffer_too_small(const "sparse starting table ids") -> [return: bb4, unwind: bb57]
  }
  preds [bb2]
  succs [bb4, bb57]

bb4
  0: _0 = core::result::Result::<usize, util::wire::SerializeError>::Err(move _11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1959:20-1961:15)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1961:14-1961:15)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1962:9-1962:10)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1962:9-1962:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb3]
  succs [bb55]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1958:29-1958:30)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1958:29-1958:30)
  2: _5 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:1962:10-1962:10)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1962:9-1962:10)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1962:9-1962:10)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:15-1963:33)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:15-1963:33)
  7: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:23-1963:33)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:20-1963:23)
  9: _15 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:20-1963:23)
  10: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:24-1963:32)
  11: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:26-1963:32)
  12: _17 = _3
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:26-1963:32)
  13: _16 = core::ops::RangeTo::<usize> { end: move _17 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:24-1963:32)
  14: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:31-1963:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1963:23-1963:33)
      kind: _14 = <[u8] as core::ops::IndexMut<core::ops::RangeTo<usize>>>::index_mut(move _15, move _16) -> [return: bb6, unwind: bb57]
  }
  preds [bb2]
  succs [bb6, bb57]

bb6
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:32-1963:33)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:32-1963:33)
  2: _13 = &mut (*_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:15-1963:33)
  3: _12 = &mut (*_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:15-1963:33)
  4: _2 = move _12
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:9-1963:33)
  5: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:32-1963:33)
  6: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:33-1963:34)
  7: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1963:33-1963:34)
  8: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:13-1966:15)
  9: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:47)
  10: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:46)
  11: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:27)
  12: _21 = &((*_1).1: dfa::start::StartKind)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:27)
  13: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:42-1966:45)
  14: _22 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:42-1966:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:46)
      kind: _20 = dfa::start::StartKind::write_to::<E>(move _21, move _22) -> [return: bb7, unwind: bb57]
  }
  preds [bb5]
  succs [bb7, bb57]

bb7
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:45-1966:46)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:45-1966:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:47)
      kind: _19 = <core::result::Result<usize, util::wire::SerializeError> as core::ops::Try>::branch(move _20) -> [return: bb8, unwind: bb57]
  }
  preds [bb6]
  succs [bb8, bb57]

bb8
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:46-1966:47)
  1: PlaceMention(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:47)
  2: _23 = discriminant(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:47)
      kind: switchInt(move _23) -> [0: bb11, 1: bb10, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10, bb11]

bb9
  0: FakeRead(ForMatchedPlace(None), _19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:47)
      kind: unreachable
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1966:46-1966:47)
      kind: falseEdge -> [real: bb12, imaginary: bb11]
  }
  preds [bb8]
  succs [bb11, bb12]

bb11
  0: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:47)
  1: _27 = ((_19 as Continue).0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:47)
  2: _18 = _27
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:47)
  3: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:46-1966:47)
  4: FakeRead(ForLet(None), _18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:13-1966:15)
  5: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:47-1966:48)
  6: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:15-1967:29)
  7: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:15-1967:29)
  8: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:23-1967:29)
  9: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:20-1967:23)
  10: _31 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:20-1967:23)
  11: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:24-1967:28)
  12: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:24-1967:26)
  13: _33 = _18
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:24-1967:26)
  14: _32 = core::ops::RangeFrom::<usize> { start: move _33 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:24-1967:28)
  15: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:27-1967:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1967:23-1967:29)
      kind: _30 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _31, move _32) -> [return: bb14, unwind: bb57]
  }
  preds [bb8, bb10]
  succs [bb14, bb57]

bb12
  0: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:46-1966:47)
  1: _24 = move ((_19 as Break).0: core::result::Result<core::convert::Infallible, util::wire::SerializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:46-1966:47)
  2: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:46-1966:47)
  3: _26 = move _24
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:46-1966:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1966:18-1966:47)
      kind: _0 = <core::result::Result<usize, util::wire::SerializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::SerializeError>>>::from_residual(move _26) -> [return: bb13, unwind: bb57]
  }
  preds [bb10]
  succs [bb13, bb57]

bb13
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:46-1966:47)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:46-1966:47)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1966:47-1966:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb54
  }
  preds [bb12]
  succs [bb54]

bb14
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:28-1967:29)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:28-1967:29)
  2: _29 = &mut (*_30)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:15-1967:29)
  3: _28 = &mut (*_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:15-1967:29)
  4: _2 = move _28
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:9-1967:29)
  5: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:28-1967:29)
  6: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:29-1967:30)
  7: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1967:29-1967:30)
  8: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:13-1969:15)
  9: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:47)
  10: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:46)
  11: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:32)
  12: _37 = &((*_1).2: util::start::StartByteMap)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:32)
  13: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:42-1969:45)
  14: _38 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:42-1969:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:46)
      kind: _36 = util::start::StartByteMap::write_to(move _37, move _38) -> [return: bb15, unwind: bb57]
  }
  preds [bb11]
  succs [bb15, bb57]

bb15
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:45-1969:46)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:45-1969:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:47)
      kind: _35 = <core::result::Result<usize, util::wire::SerializeError> as core::ops::Try>::branch(move _36) -> [return: bb16, unwind: bb57]
  }
  preds [bb14]
  succs [bb16, bb57]

bb16
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:46-1969:47)
  1: PlaceMention(_35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:47)
  2: _39 = discriminant(_35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:47)
      kind: switchInt(move _39) -> [0: bb19, 1: bb18, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18, bb19]

bb17
  0: FakeRead(ForMatchedPlace(None), _35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:47)
      kind: unreachable
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1969:46-1969:47)
      kind: falseEdge -> [real: bb20, imaginary: bb19]
  }
  preds [bb16]
  succs [bb19, bb20]

bb19
  0: StorageLive(_43)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:47)
  1: _43 = ((_35 as Continue).0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:47)
  2: _34 = _43
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:47)
  3: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:46-1969:47)
  4: FakeRead(ForLet(None), _34)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:13-1969:15)
  5: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:47-1969:48)
  6: StorageLive(_44)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:15-1970:29)
  7: StorageLive(_45)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:15-1970:29)
  8: StorageLive(_46)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:23-1970:29)
  9: StorageLive(_47)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:20-1970:23)
  10: _47 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:20-1970:23)
  11: StorageLive(_48)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:24-1970:28)
  12: StorageLive(_49)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:24-1970:26)
  13: _49 = _34
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:24-1970:26)
  14: _48 = core::ops::RangeFrom::<usize> { start: move _49 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:24-1970:28)
  15: StorageDead(_49)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:27-1970:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1970:23-1970:29)
      kind: _46 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _47, move _48) -> [return: bb22, unwind: bb57]
  }
  preds [bb16, bb18]
  succs [bb22, bb57]

bb20
  0: StorageLive(_40)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:46-1969:47)
  1: _40 = move ((_35 as Break).0: core::result::Result<core::convert::Infallible, util::wire::SerializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:46-1969:47)
  2: StorageLive(_42)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:46-1969:47)
  3: _42 = move _40
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:46-1969:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1969:18-1969:47)
      kind: _0 = <core::result::Result<usize, util::wire::SerializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::SerializeError>>>::from_residual(move _42) -> [return: bb21, unwind: bb57]
  }
  preds [bb18]
  succs [bb21, bb57]

bb21
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:46-1969:47)
  1: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:46-1969:47)
  2: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1969:47-1969:48)
  3: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1999:5-1999:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb54
  }
  preds [bb20]
  succs [bb54]

bb22
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:28-1970:29)
  1: StorageDead(_47)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:28-1970:29)
  2: _45 = &mut (*_46)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:15-1970:29)
  3: _44 = &mut (*_45)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:15-1970:29)
  4: _2 = move _44
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:9-1970:29)
  5: StorageDead(_44)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:28-1970:29)
  6: StorageDead(_46)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:29-1970:30)
  7: StorageDead(_45)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1970:29-1970:30)
  8: StorageLive(_50)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1972:9-1972:63)
  9: StorageLive(_51)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1972:22-1972:57)
  10: StorageLive(_52)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1972:22-1972:48)
  11: StorageLive(_53)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1972:36-1972:47)
  12: _53 = ((*_1).3: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1972:36-1972:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1972:22-1972:48)
      kind: _52 = <u32 as core::convert::TryFrom<usize>>::try_from(move _53) -> [return: bb23, unwind: bb57]
  }
  preds [bb19]
  succs [bb23, bb57]

bb23
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1972:47-1972:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1972:22-1972:57)
      kind: _51 = core::result::Result::<u32, core::num::TryFromIntError>::unwrap(move _52) -> [return: bb24, unwind: bb57]
  }
  preds [bb22]
  succs [bb24, bb57]

bb24
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1972:56-1972:57)
  1: StorageLive(_54)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1972:59-1972:62)
  2: _54 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1972:59-1972:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1972:9-1972:63)
      kind: _50 = <E as util::wire::Endian>::write_u32(move _51, move _54) -> [return: bb25, unwind: bb57]
  }
  preds [bb23]
  succs [bb25, bb57]

bb25
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1972:62-1972:63)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1972:62-1972:63)
  2: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1972:63-1972:64)
  3: StorageLive(_55)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:15-1973:43)
  4: StorageLive(_56)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:15-1973:43)
  5: StorageLive(_57)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:23-1973:43)
  6: StorageLive(_58)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:20-1973:23)
  7: _58 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:20-1973:23)
  8: StorageLive(_59)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:24-1973:42)
  9: StorageLive(_60)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:24-1973:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1973:24-1973:40)
      kind: _60 = core::mem::size_of::<u32>() -> [return: bb26, unwind: bb57]
  }
  preds [bb24]
  succs [bb26, bb57]

bb26
  0: _59 = core::ops::RangeFrom::<usize> { start: move _60 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:24-1973:42)
  1: StorageDead(_60)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:41-1973:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1973:23-1973:43)
      kind: _57 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _58, move _59) -> [return: bb27, unwind: bb57]
  }
  preds [bb25]
  succs [bb27, bb57]

bb27
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:42-1973:43)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:42-1973:43)
  2: _56 = &mut (*_57)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:15-1973:43)
  3: _55 = &mut (*_56)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:15-1973:43)
  4: _2 = move _55
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:9-1973:43)
  5: StorageDead(_55)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:42-1973:43)
  6: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:43-1973:44)
  7: StorageDead(_56)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1973:43-1973:44)
  8: StorageLive(_61)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1975:9-1978:10)
  9: StorageLive(_62)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1976:13-1976:76)
  10: StorageLive(_63)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1976:13-1976:67)
  11: StorageLive(_64)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1976:27-1976:66)
  12: StorageLive(_65)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1976:27-1976:43)
  13: _65 = ((*_1).4: core::option::Option<usize>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1976:27-1976:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1976:27-1976:66)
      kind: _64 = core::option::Option::<usize>::unwrap_or(move _65, const 4294967295_usize) -> [return: bb28, unwind: bb57]
  }
  preds [bb26]
  succs [bb28, bb57]

bb28
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1976:65-1976:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1976:13-1976:67)
      kind: _63 = <u32 as core::convert::TryFrom<usize>>::try_from(move _64) -> [return: bb29, unwind: bb57]
  }
  preds [bb27]
  succs [bb29, bb57]

bb29
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1976:66-1976:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1976:13-1976:76)
      kind: _62 = core::result::Result::<u32, core::num::TryFromIntError>::unwrap(move _63) -> [return: bb30, unwind: bb57]
  }
  preds [bb28]
  succs [bb30, bb57]

bb30
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1976:75-1976:76)
  1: StorageLive(_66)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1977:13-1977:16)
  2: _66 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1977:13-1977:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1975:9-1978:10)
      kind: _61 = <E as util::wire::Endian>::write_u32(move _62, move _66) -> [return: bb31, unwind: bb57]
  }
  preds [bb29]
  succs [bb31, bb57]

bb31
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1978:9-1978:10)
  1: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1978:9-1978:10)
  2: StorageDead(_61)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1978:10-1978:11)
  3: StorageLive(_67)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:15-1979:43)
  4: StorageLive(_68)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:15-1979:43)
  5: StorageLive(_69)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:23-1979:43)
  6: StorageLive(_70)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:20-1979:23)
  7: _70 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:20-1979:23)
  8: StorageLive(_71)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:24-1979:42)
  9: StorageLive(_72)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:24-1979:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1979:24-1979:40)
      kind: _72 = core::mem::size_of::<u32>() -> [return: bb32, unwind: bb57]
  }
  preds [bb30]
  succs [bb32, bb57]

bb32
  0: _71 = core::ops::RangeFrom::<usize> { start: move _72 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:24-1979:42)
  1: StorageDead(_72)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:41-1979:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1979:23-1979:43)
      kind: _69 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _70, move _71) -> [return: bb33, unwind: bb57]
  }
  preds [bb31]
  succs [bb33, bb57]

bb33
  0: StorageDead(_71)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:42-1979:43)
  1: StorageDead(_70)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:42-1979:43)
  2: _68 = &mut (*_69)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:15-1979:43)
  3: _67 = &mut (*_68)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:15-1979:43)
  4: _2 = move _67
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:9-1979:43)
  5: StorageDead(_67)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:42-1979:43)
  6: StorageDead(_69)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:43-1979:44)
  7: StorageDead(_68)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1979:43-1979:44)
  8: StorageLive(_73)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1981:9-1985:10)
  9: StorageLive(_74)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1982:13-1983:54)
  10: StorageLive(_75)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1982:13-1982:44)
  11: _75 = ((*_1).5: core::option::Option<util::primitives::StateID>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1982:13-1982:44)
  12: StorageLive(_76)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1983:35-1983:53)
  13: _76 = {closure@regex-automata/src/dfa/sparse.rs:1983:35: 1983:40}
    SourceInfo(regex-automata/src/dfa/sparse.rs:1983:35-1983:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1982:13-1983:54)
      kind: _74 = core::option::Option::<util::primitives::StateID>::map_or::<u32, {closure@regex-automata/src/dfa/sparse.rs:1983:35: 1983:40}>(move _75, const core::num::<impl u32>::MAX, move _76) -> [return: bb34, unwind: bb57]
  }
  preds [bb32]
  succs [bb34, bb57]

bb34
  0: StorageDead(_76)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1983:53-1983:54)
  1: StorageDead(_75)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1983:53-1983:54)
  2: StorageLive(_77)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1984:13-1984:16)
  3: _77 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1984:13-1984:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1981:9-1985:10)
      kind: _73 = <E as util::wire::Endian>::write_u32(move _74, move _77) -> [return: bb35, unwind: bb57]
  }
  preds [bb33]
  succs [bb35, bb57]

bb35
  0: StorageDead(_77)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1985:9-1985:10)
  1: StorageDead(_74)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1985:9-1985:10)
  2: StorageDead(_73)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1985:10-1985:11)
  3: StorageLive(_78)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:15-1986:43)
  4: StorageLive(_79)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:15-1986:43)
  5: StorageLive(_80)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:23-1986:43)
  6: StorageLive(_81)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:20-1986:23)
  7: _81 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:20-1986:23)
  8: StorageLive(_82)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:24-1986:42)
  9: StorageLive(_83)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:24-1986:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1986:24-1986:40)
      kind: _83 = core::mem::size_of::<u32>() -> [return: bb36, unwind: bb57]
  }
  preds [bb34]
  succs [bb36, bb57]

bb36
  0: _82 = core::ops::RangeFrom::<usize> { start: move _83 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:24-1986:42)
  1: StorageDead(_83)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:41-1986:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1986:23-1986:43)
      kind: _80 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _81, move _82) -> [return: bb37, unwind: bb57]
  }
  preds [bb35]
  succs [bb37, bb57]

bb37
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:42-1986:43)
  1: StorageDead(_81)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:42-1986:43)
  2: _79 = &mut (*_80)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:15-1986:43)
  3: _78 = &mut (*_79)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:15-1986:43)
  4: _2 = move _78
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:9-1986:43)
  5: StorageDead(_78)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:42-1986:43)
  6: StorageDead(_80)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:43-1986:44)
  7: StorageDead(_79)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1986:43-1986:44)
  8: StorageLive(_84)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1988:9-1991:10)
  9: StorageLive(_85)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1989:13-1989:79)
  10: StorageLive(_86)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1989:13-1989:42)
  11: _86 = ((*_1).6: core::option::Option<util::primitives::StateID>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1989:13-1989:42)
  12: StorageLive(_87)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1989:60-1989:78)
  13: _87 = {closure@regex-automata/src/dfa/sparse.rs:1989:60: 1989:65}
    SourceInfo(regex-automata/src/dfa/sparse.rs:1989:60-1989:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1989:13-1989:79)
      kind: _85 = core::option::Option::<util::primitives::StateID>::map_or::<u32, {closure@regex-automata/src/dfa/sparse.rs:1989:60: 1989:65}>(move _86, const core::num::<impl u32>::MAX, move _87) -> [return: bb38, unwind: bb57]
  }
  preds [bb36]
  succs [bb38, bb57]

bb38
  0: StorageDead(_87)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1989:78-1989:79)
  1: StorageDead(_86)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1989:78-1989:79)
  2: StorageLive(_88)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1990:13-1990:16)
  3: _88 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1990:13-1990:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1988:9-1991:10)
      kind: _84 = <E as util::wire::Endian>::write_u32(move _85, move _88) -> [return: bb39, unwind: bb57]
  }
  preds [bb37]
  succs [bb39, bb57]

bb39
  0: StorageDead(_88)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1991:9-1991:10)
  1: StorageDead(_85)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1991:9-1991:10)
  2: StorageDead(_84)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1991:10-1991:11)
  3: StorageLive(_89)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:15-1992:43)
  4: StorageLive(_90)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:15-1992:43)
  5: StorageLive(_91)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:23-1992:43)
  6: StorageLive(_92)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:20-1992:23)
  7: _92 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:20-1992:23)
  8: StorageLive(_93)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:24-1992:42)
  9: StorageLive(_94)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:24-1992:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1992:24-1992:40)
      kind: _94 = core::mem::size_of::<u32>() -> [return: bb40, unwind: bb57]
  }
  preds [bb38]
  succs [bb40, bb57]

bb40
  0: _93 = core::ops::RangeFrom::<usize> { start: move _94 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:24-1992:42)
  1: StorageDead(_94)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:41-1992:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1992:23-1992:43)
      kind: _91 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _92, move _93) -> [return: bb41, unwind: bb57]
  }
  preds [bb39]
  succs [bb41, bb57]

bb41
  0: StorageDead(_93)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:42-1992:43)
  1: StorageDead(_92)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:42-1992:43)
  2: _90 = &mut (*_91)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:15-1992:43)
  3: _89 = &mut (*_90)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:15-1992:43)
  4: _2 = move _89
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:9-1992:43)
  5: StorageDead(_89)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:42-1992:43)
  6: StorageDead(_91)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:43-1992:44)
  7: StorageDead(_90)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1992:43-1992:44)
  8: StorageLive(_95)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:9-1997:10)
  9: StorageLive(_96)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
  10: StorageLive(_97)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
  11: StorageLive(_98)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:32)
  12: _98 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
      kind: _97 = dfa::sparse::StartTable::<T>::iter(move _98) -> [return: bb42, unwind: bb57]
  }
  preds [bb40]
  succs [bb42, bb57]

bb42
  0: StorageDead(_98)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:38-1994:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
      kind: _96 = <dfa::sparse::StartStateIter<'_, T> as core::iter::IntoIterator>::into_iter(move _97) -> [return: bb43, unwind: bb57]
  }
  preds [bb41]
  succs [bb43, bb57]

bb43
  0: StorageDead(_97)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:38-1994:39)
  1: PlaceMention(_96)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
  2: StorageLive(_99)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
  3: _99 = move _96
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1994:9-1997:10)
      kind: goto -> bb44
  }
  preds [bb42]
  succs [bb44]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1994:9-1997:10)
      kind: falseUnwind -> [real: bb45, unwind: bb57]
  }
  preds [bb43, bb53]
  succs [bb45, bb57]

bb45
  0: StorageLive(_101)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
  1: StorageLive(_102)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
  2: StorageLive(_103)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
  3: StorageLive(_104)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
  4: _104 = &mut _99
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
  5: _103 = &mut (*_104)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
      kind: _102 = <dfa::sparse::StartStateIter<'_, T> as core::iter::Iterator>::next(move _103) -> [return: bb46, unwind: bb57]
  }
  preds [bb44]
  succs [bb46, bb57]

bb46
  0: StorageDead(_103)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:38-1994:39)
  1: PlaceMention(_102)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
  2: _105 = discriminant(_102)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
      kind: switchInt(move _105) -> [0: bb48, 1: bb49, otherwise: bb47]
  }
  preds [bb45]
  succs [bb47, bb48, bb49]

bb47
  0: FakeRead(ForMatchedPlace(None), _102)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1994:28-1994:39)
      kind: unreachable
  }
  preds [bb46]
  succs []

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1994:9-1997:10)
      kind: falseEdge -> [real: bb50, imaginary: bb49]
  }
  preds [bb46]
  succs [bb49, bb50]

bb49
  0: StorageLive(_107)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:14-1994:17)
  1: _107 = (((_102 as Some).0: (util::primitives::StateID, util::search::Anchored, util::start::Start)).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:14-1994:17)
  2: StorageLive(_108)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1995:13-1995:44)
  3: StorageLive(_109)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1995:26-1995:38)
  4: StorageLive(_110)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1995:26-1995:29)
  5: _110 = &_107
    SourceInfo(regex-automata/src/dfa/sparse.rs:1995:26-1995:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1995:26-1995:38)
      kind: _109 = util::primitives::StateID::as_u32(move _110) -> [return: bb51, unwind: bb57]
  }
  preds [bb46, bb48]
  succs [bb51, bb57]

bb50
  0: _95 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:9-1997:10)
  1: StorageDead(_104)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1997:9-1997:10)
  2: StorageDead(_102)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1997:9-1997:10)
  3: StorageDead(_101)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1997:9-1997:10)
  4: StorageDead(_99)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1997:9-1997:10)
  5: StorageDead(_96)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1997:9-1997:10)
  6: StorageDead(_95)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1997:9-1997:10)
  7: StorageLive(_117)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1998:12-1998:18)
  8: _117 = _3
    SourceInfo(regex-automata/src/dfa/sparse.rs:1998:12-1998:18)
  9: _0 = core::result::Result::<usize, util::wire::SerializeError>::Ok(move _117)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1998:9-1998:19)
  10: StorageDead(_117)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1998:18-1998:19)
  11: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1999:5-1999:6)
  12: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1999:5-1999:6)
  13: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1999:5-1999:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1999:6-1999:6)
      kind: goto -> bb56
  }
  preds [bb48]
  succs [bb56]

bb51
  0: StorageDead(_110)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1995:37-1995:38)
  1: StorageLive(_111)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1995:40-1995:43)
  2: _111 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1995:40-1995:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1995:13-1995:44)
      kind: _108 = <E as util::wire::Endian>::write_u32(move _109, move _111) -> [return: bb52, unwind: bb57]
  }
  preds [bb49]
  succs [bb52, bb57]

bb52
  0: StorageDead(_111)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1995:43-1995:44)
  1: StorageDead(_109)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1995:43-1995:44)
  2: StorageDead(_108)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1995:44-1995:45)
  3: StorageLive(_112)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:19-1996:44)
  4: StorageLive(_113)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:19-1996:44)
  5: StorageLive(_114)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:27-1996:44)
  6: StorageLive(_115)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:24-1996:27)
  7: _115 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:24-1996:27)
  8: StorageLive(_116)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:28-1996:43)
  9: _116 = core::ops::RangeFrom::<usize> { start: const util::primitives::StateID::SIZE }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:28-1996:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1996:27-1996:44)
      kind: _114 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _115, move _116) -> [return: bb53, unwind: bb57]
  }
  preds [bb51]
  succs [bb53, bb57]

bb53
  0: StorageDead(_116)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:43-1996:44)
  1: StorageDead(_115)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:43-1996:44)
  2: _113 = &mut (*_114)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:19-1996:44)
  3: _112 = &mut (*_113)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:19-1996:44)
  4: _2 = move _112
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:13-1996:44)
  5: StorageDead(_112)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:43-1996:44)
  6: StorageDead(_114)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:44-1996:45)
  7: StorageDead(_113)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1996:44-1996:45)
  8: _101 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:40-1997:10)
  9: StorageDead(_107)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1997:9-1997:10)
  10: StorageDead(_104)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1997:9-1997:10)
  11: StorageDead(_102)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1997:9-1997:10)
  12: StorageDead(_101)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1997:9-1997:10)
  13: _100 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:1994:9-1997:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1994:9-1997:10)
      kind: goto -> bb44
  }
  preds [bb52]
  succs [bb44]

bb54
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1999:5-1999:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb13, bb21]
  succs [bb55]

bb55
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1999:5-1999:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1999:6-1999:6)
      kind: goto -> bb56
  }
  preds [bb4, bb54]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1999:6-1999:6)
      kind: return
  }
  preds [bb50, bb55]
  succs []

bb57
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1953:5-1999:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb6, bb7, bb11, bb12, bb14, bb15, bb19, bb20, bb22, bb23, bb24, bb25, bb26, bb27, bb28, bb29, bb30, bb31, bb32, bb33, bb34, bb35, bb36, bb37, bb38, bb39, bb40, bb41, bb42, bb44, bb45, bb49, bb51, bb52]
  succs []

