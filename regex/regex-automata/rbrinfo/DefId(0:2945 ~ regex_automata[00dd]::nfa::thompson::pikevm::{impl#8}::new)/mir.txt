bb0
  0: StorageLive(_2)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _2 = std::vec::Vec::<nfa::thompson::pikevm::FollowEpsilon>::new() -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1903:19-1903:40)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1903:37-1903:39)
  2: _4 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1903:37-1903:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1903:19-1903:40)
      kind: _3 = nfa::thompson::pikevm::ActiveStates::new(move _4) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1903:39-1903:40)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1904:19-1904:40)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1904:37-1904:39)
  3: _6 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1904:37-1904:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1904:19-1904:40)
      kind: _5 = nfa::thompson::pikevm::ActiveStates::new(move _6) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1904:39-1904:40)
  1: _0 = nfa::thompson::pikevm::Cache { stack: move _2, curr: move _3, next: move _5 }
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1901:9-1905:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1905:9-1905:10)
      kind: drop(_5) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1905:9-1905:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1905:9-1905:10)
      kind: drop(_3) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1905:9-1905:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1905:9-1905:10)
      kind: drop(_2) -> [return: bb6, unwind: bb9]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1905:9-1905:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1906:6-1906:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1905:9-1905:10)
      kind: drop(_3) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb2, bb3]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1905:9-1905:10)
      kind: drop(_2) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb1, bb4, bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1900:5-1906:6)
      kind: resume
  }
  preds [bb0, bb5, bb8]
  succs []

