bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:105:17-105:22)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:105:25-106:55)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:105:25-105:59)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:105:50-105:58)
  4: _7 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:105:50-105:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:105:25-105:59)
      kind: _6 = aho_corasick::Input::<'_>::new::<[u8]>(move _7) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:105:58-105:59)
  1: StorageLive(_8)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:106:27-106:54)
  2: _8 = aho_corasick::Anchored::Yes
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:106:27-106:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:105:25-106:55)
      kind: _5 = aho_corasick::Input::<'_>::anchored(move _6, move _8) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:106:54-106:55)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:106:54-106:55)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:107:23-107:43)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:107:23-107:33)
  4: _10 = (_3.0: usize)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:107:23-107:33)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:107:35-107:43)
  6: _11 = (_3.1: usize)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:107:35-107:43)
  7: _9 = core::ops::Range::<usize> { start: move _10, end: move _11 }
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:107:23-107:43)
  8: StorageDead(_11)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:107:42-107:43)
  9: StorageDead(_10)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:107:42-107:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:105:25-107:44)
      kind: _4 = aho_corasick::Input::<'_>::span::<core::ops::Range<usize>>(move _5, move _9) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:107:43-107:44)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:107:43-107:44)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:105:17-105:22)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:108:13-109:29)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:108:13-108:20)
  5: _13 = &((*_1).0: aho_corasick::AhoCorasick)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:108:13-108:20)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:109:23-109:28)
  7: _14 = move _4
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:109:23-109:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:108:13-109:29)
      kind: _12 = aho_corasick::AhoCorasick::find::<'_, aho_corasick::Input<'_>>(move _13, move _14) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:109:28-109:29)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:109:28-109:29)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:110:22-110:65)
  3: _15 = {closure@regex-automata/src/util/prefilter/aho_corasick.rs:110:22: 110:25}
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:110:22-110:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:108:13-110:66)
      kind: _0 = core::option::Option::<aho_corasick::Match>::map::<util::search::Span, {closure@regex-automata/src/util/prefilter/aho_corasick.rs:110:22: 110:25}>(move _12, move _15) -> [return: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:110:65-110:66)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:110:65-110:66)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:111:9-111:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:112:6-112:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:98:5-112:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

