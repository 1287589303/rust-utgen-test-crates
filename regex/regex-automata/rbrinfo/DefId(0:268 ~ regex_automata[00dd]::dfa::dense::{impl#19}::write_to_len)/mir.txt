bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4130:27)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4129:27)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4128:27)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4127:27)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4126:40)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4125:33)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4125:18)
  7: _8 = &((*_1).1: dfa::start::StartKind)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4125:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4125:33)
      kind: _7 = dfa::start::StartKind::write_to_len(move _8) -> [return: bb1, unwind: bb16]
  }
  preds []
  succs [bb1, bb16]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:32-4125:33)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:4126:11-4126:40)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:4126:11-4126:25)
  3: _10 = &((*_1).2: util::start::StartByteMap)
    SourceInfo(regex-automata/src/dfa/dense.rs:4126:11-4126:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4126:11-4126:40)
      kind: _9 = util::start::StartByteMap::write_to_len(move _10) -> [return: bb2, unwind: bb16]
  }
  preds [bb0]
  succs [bb2, bb16]

bb2
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:4126:39-4126:40)
  1: _11 = AddWithOverflow(_7, _9)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4126:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4126:40)
      kind: assert(!move (_11.1: bool), "attempt to compute `{} + {}`, which would overflow", move _7, move _9) -> [success: bb3, unwind: bb16]
  }
  preds [bb1]
  succs [bb3, bb16]

bb3
  0: _6 = move (_11.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4126:40)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:4126:39-4126:40)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:4126:39-4126:40)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:4127:11-4127:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4127:11-4127:27)
      kind: _12 = core::mem::size_of::<u32>() -> [return: bb4, unwind: bb16]
  }
  preds [bb2]
  succs [bb4, bb16]

bb4
  0: _13 = AddWithOverflow(_6, _12)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4127:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4127:27)
      kind: assert(!move (_13.1: bool), "attempt to compute `{} + {}`, which would overflow", move _6, move _12) -> [success: bb5, unwind: bb16]
  }
  preds [bb3]
  succs [bb5, bb16]

bb5
  0: _5 = move (_13.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4127:27)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:4127:26-4127:27)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:4127:26-4127:27)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/dense.rs:4128:11-4128:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4128:11-4128:27)
      kind: _14 = core::mem::size_of::<u32>() -> [return: bb6, unwind: bb16]
  }
  preds [bb4]
  succs [bb6, bb16]

bb6
  0: _15 = AddWithOverflow(_5, _14)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4128:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4128:27)
      kind: assert(!move (_15.1: bool), "attempt to compute `{} + {}`, which would overflow", move _5, move _14) -> [success: bb7, unwind: bb16]
  }
  preds [bb5]
  succs [bb7, bb16]

bb7
  0: _4 = move (_15.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4128:27)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/dense.rs:4128:26-4128:27)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:4128:26-4128:27)
  3: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:4129:11-4129:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4129:11-4129:27)
      kind: _16 = core::mem::size_of::<u32>() -> [return: bb8, unwind: bb16]
  }
  preds [bb6]
  succs [bb8, bb16]

bb8
  0: _17 = AddWithOverflow(_4, _16)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4129:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4129:27)
      kind: assert(!move (_17.1: bool), "attempt to compute `{} + {}`, which would overflow", move _4, move _16) -> [success: bb9, unwind: bb16]
  }
  preds [bb7]
  succs [bb9, bb16]

bb9
  0: _3 = move (_17.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4129:27)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:4129:26-4129:27)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:4129:26-4129:27)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/dense.rs:4130:11-4130:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4130:11-4130:27)
      kind: _18 = core::mem::size_of::<u32>() -> [return: bb10, unwind: bb16]
  }
  preds [bb8]
  succs [bb10, bb16]

bb10
  0: _19 = AddWithOverflow(_3, _18)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4130:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4130:27)
      kind: assert(!move (_19.1: bool), "attempt to compute `{} + {}`, which would overflow", move _3, move _18) -> [success: bb11, unwind: bb16]
  }
  preds [bb9]
  succs [bb11, bb16]

bb11
  0: _2 = move (_19.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4130:27)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/dense.rs:4130:26-4130:27)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:4130:26-4130:27)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/dense.rs:4131:11-4131:47)
  4: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/dense.rs:4131:12-4131:30)
  5: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/dense.rs:4131:12-4131:24)
  6: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/dense.rs:4131:12-4131:24)
  7: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/dense.rs:4131:12-4131:16)
  8: _24 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:4131:12-4131:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4131:12-4131:24)
      kind: _23 = dfa::dense::StartTable::<T>::table(move _24) -> [return: bb12, unwind: bb16]
  }
  preds [bb10]
  succs [bb12, bb16]

bb12
  0: _22 = &(*_23)
    SourceInfo(regex-automata/src/dfa/dense.rs:4131:12-4131:24)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/dense.rs:4131:23-4131:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4131:12-4131:30)
      kind: _21 = core::slice::<impl [util::primitives::StateID]>::len(move _22) -> [return: bb13, unwind: bb16]
  }
  preds [bb11]
  succs [bb13, bb16]

bb13
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/dense.rs:4131:29-4131:30)
  1: _25 = MulWithOverflow(_21, const util::primitives::StateID::SIZE)
    SourceInfo(regex-automata/src/dfa/dense.rs:4131:11-4131:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4131:11-4131:47)
      kind: assert(!move (_25.1: bool), "attempt to compute `{} * {}`, which would overflow", move _21, const util::primitives::StateID::SIZE) -> [success: bb14, unwind: bb16]
  }
  preds [bb12]
  succs [bb14, bb16]

bb14
  0: _20 = move (_25.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4131:11-4131:47)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/dense.rs:4131:46-4131:47)
  2: _26 = AddWithOverflow(_2, _20)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4131:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4131:47)
      kind: assert(!move (_26.1: bool), "attempt to compute `{} + {}`, which would overflow", move _2, move _20) -> [success: bb15, unwind: bb16]
  }
  preds [bb13]
  succs [bb15, bb16]

bb15
  0: _0 = move (_26.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4125:9-4131:47)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/dense.rs:4131:46-4131:47)
  2: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/dense.rs:4131:46-4131:47)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/dense.rs:4132:5-4132:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4132:6-4132:6)
      kind: return
  }
  preds [bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4124:5-4132:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14]
  succs []

