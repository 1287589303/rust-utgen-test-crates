bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1411:9-1411:30)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1411:9-1411:14)
  2: _6 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1411:9-1411:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1411:9-1411:30)
      kind: _5 = nfa::thompson::pikevm::Cache::setup_search(move _6, const 0_usize) -> [return: bb1, unwind: bb60]
  }
  preds []
  succs [bb1, bb60]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1411:29-1411:30)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1411:30-1411:31)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1412:9-1414:10)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1412:12-1412:27)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1412:12-1412:17)
  5: _9 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1412:12-1412:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1412:12-1412:27)
      kind: _8 = util::search::Input::<'_>::is_done(move _9) -> [return: bb2, unwind: bb60]
  }
  preds [bb0]
  succs [bb2, bb60]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1412:12-1412:27)
      kind: switchInt(move _8) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1412:26-1412:27)
  1: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1413:13-1413:19)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1414:9-1414:10)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1414:9-1414:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb59
  }
  preds [bb2]
  succs [bb59]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1412:26-1412:27)
  1: _7 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1414:10-1414:10)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1414:9-1414:10)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1414:9-1414:10)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1415:9-1418:10)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:13-1416:54)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:13-1416:35)
  7: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:13-1416:29)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:13-1416:29)
  9: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:13-1416:18)
  10: _16 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:13-1416:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:13-1416:29)
      kind: _15 = util::search::Input::<'_>::haystack(move _16) -> [return: bb5, unwind: bb60]
  }
  preds [bb2]
  succs [bb5, bb60]

bb5
  0: _14 = &(*_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:13-1416:29)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:28-1416:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:13-1416:35)
      kind: _13 = core::slice::<impl [u8]>::len(move _14) -> [return: bb6, unwind: bb60]
  }
  preds [bb4]
  succs [bb6, bb60]

bb6
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:34-1416:35)
  1: _12 = Lt(move _13, const core::usize::MAX)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:13-1416:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:13-1416:54)
      kind: switchInt(move _12) -> [0: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:53-1416:54)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1418:9-1418:10)
  2: _11 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1418:10-1418:10)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1418:9-1418:10)
  4: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1418:9-1418:10)
  5: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1421:13-1421:23)
  6: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1422:13-1422:41)
  7: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1422:13-1422:41)
  8: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1422:13-1422:24)
  9: _26 = &((*_1).0: nfa::thompson::pikevm::Config)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1422:13-1422:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1422:13-1422:41)
      kind: _25 = nfa::thompson::pikevm::Config::get_match_kind(move _26) -> [return: bb10, unwind: bb60]
  }
  preds [bb6]
  succs [bb10, bb60]

bb8
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1416:53-1416:54)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1418:9-1418:10)
  2: StorageLive(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1417:13-1417:61)
  5: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1417:13-1417:61)
  6: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1417:13-1417:61)
  7: _22 = [const "byte slice lengths must be less than usize MAX"]
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1417:13-1417:61)
  8: _21 = &_22
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1417:13-1417:61)
  9: _20 = &(*_21)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1417:13-1417:61)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _19 = core::fmt::Arguments::<'_>::new_const::<1>(move _20) -> [return: bb9, unwind: bb60]
  }
  preds [bb6]
  succs [bb9, bb60]

bb9
  0: StorageDead(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _18 = core::panicking::panic_fmt(move _19) -> bb60
  }
  preds [bb8]
  succs [bb60]

bb10
  0: _24 = &_25
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1422:13-1422:41)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1422:40-1422:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1422:13-1422:69)
      kind: _23 = util::search::MatchKind::continue_past_first_match(move _24) -> [return: bb11, unwind: bb60]
  }
  preds [bb7]
  succs [bb11, bb60]

bb11
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1422:68-1422:69)
  1: FakeRead(ForLet(None), _23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1421:13-1421:23)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1422:69-1422:70)
  3: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:36-1426:10)
  4: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:42-1423:66)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:42-1423:46)
  6: _31 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:42-1423:46)
  7: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:60-1423:65)
  8: _32 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:60-1423:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:42-1423:66)
      kind: _30 = nfa::thompson::pikevm::PikeVM::start_config(move _31, move _32) -> [return: bb12, unwind: bb60]
  }
  preds [bb10]
  succs [bb12, bb60]

bb12
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:65-1423:66)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:65-1423:66)
  2: PlaceMention(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:42-1423:66)
  3: _33 = discriminant(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:42-1423:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:36-1423:66)
      kind: switchInt(move _33) -> [0: bb14, 1: bb15, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:42-1423:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:42-1423:66)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1424:13-1424:17)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1425:18-1425:24)
  1: _35 = ((_30 as Some).0: (bool, util::primitives::StateID))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1425:18-1425:24)
  2: _29 = _35
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1425:29-1425:35)
  3: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1425:34-1425:35)
  4: PlaceMention(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:36-1426:10)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:14-1423:22)
  6: _27 = (_29.0: bool)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:14-1423:22)
  7: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:24-1423:32)
  8: _28 = (_29.1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1423:24-1423:32)
  9: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1426:10-1426:11)
  10: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1426:10-1426:11)
  11: PlaceMention(_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1428:67-1428:72)
  12: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1428:21-1428:34)
  13: _36 = &mut ((*_2).0: std::vec::Vec<nfa::thompson::pikevm::FollowEpsilon>)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1428:21-1428:34)
  14: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1428:36-1428:48)
  15: _37 = &mut ((*_2).1: nfa::thompson::pikevm::ActiveStates)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1428:36-1428:48)
  16: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1428:50-1428:62)
  17: _38 = &mut ((*_2).2: nfa::thompson::pikevm::ActiveStates)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1428:50-1428:62)
  18: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:9-1453:10)
  19: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
  20: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
  21: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:32)
  22: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:24)
  23: _43 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:32)
      kind: _42 = util::search::Input::<'_>::start(move _43) -> [return: bb17, unwind: bb60]
  }
  preds [bb12, bb14]
  succs [bb17, bb60]

bb16
  0: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1424:21-1424:27)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1426:10-1426:11)
  2: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1426:10-1426:11)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1455:5-1455:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb59
  }
  preds [bb14]
  succs [bb59]

bb17
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:31-1429:32)
  1: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:35-1429:46)
  2: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:35-1429:40)
  3: _45 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:35-1429:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:35-1429:46)
      kind: _44 = util::search::Input::<'_>::end(move _45) -> [return: bb18, unwind: bb60]
  }
  preds [bb15]
  succs [bb18, bb60]

bb18
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:45-1429:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
      kind: _41 = core::ops::RangeInclusive::<usize>::new(move _42, move _44) -> [return: bb19, unwind: bb60]
  }
  preds [bb17]
  succs [bb19, bb60]

bb19
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:45-1429:46)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:45-1429:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
      kind: _40 = <core::ops::RangeInclusive<usize> as core::iter::IntoIterator>::into_iter(move _41) -> [return: bb20, unwind: bb60]
  }
  preds [bb18]
  succs [bb20, bb60]

bb20
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:45-1429:46)
  1: PlaceMention(_40)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
  2: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
  3: _46 = move _40
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:9-1453:10)
      kind: goto -> bb21
  }
  preds [bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:9-1453:10)
      kind: falseUnwind -> [real: bb22, unwind: bb60]
  }
  preds [bb20, bb55]
  succs [bb22, bb60]

bb22
  0: StorageLive(_48)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
  1: StorageLive(_49)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
  2: StorageLive(_50)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
  3: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
  4: _51 = &mut _46
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
  5: _50 = &mut (*_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
      kind: _49 = <core::ops::RangeInclusive<usize> as core::iter::Iterator>::next(move _50) -> [return: bb23, unwind: bb60]
  }
  preds [bb21]
  succs [bb23, bb60]

bb23
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:45-1429:46)
  1: PlaceMention(_49)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
  2: _52 = discriminant(_49)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
      kind: switchInt(move _52) -> [0: bb25, 1: bb26, otherwise: bb24]
  }
  preds [bb22]
  succs [bb24, bb25, bb26]

bb24
  0: FakeRead(ForMatchedPlace(None), _49)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:19-1429:46)
      kind: unreachable
  }
  preds [bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:9-1453:10)
      kind: falseEdge -> [real: bb27, imaginary: bb26]
  }
  preds [bb23]
  succs [bb26, bb27]

bb26
  0: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:13-1429:15)
  1: _54 = ((_49 as Some).0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:13-1429:15)
  2: StorageLive(_55)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1430:17-1430:28)
  3: StorageLive(_56)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1430:32-1430:49)
  4: StorageLive(_57)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1430:32-1430:38)
  5: _57 = &(*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1430:32-1430:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1430:32-1430:49)
      kind: _56 = util::search::PatternSet::is_empty(move _57) -> [return: bb28, unwind: bb60]
  }
  preds [bb23, bb25]
  succs [bb28, bb60]

bb27
  0: _39 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:9-1453:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:9-1453:10)
      kind: goto -> bb58
  }
  preds [bb25]
  succs [bb58]

bb28
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1430:48-1430:49)
  1: _55 = Not(move _56)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1430:31-1430:49)
  2: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1430:48-1430:49)
  3: FakeRead(ForLet(None), _55)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1430:17-1430:28)
  4: StorageLive(_58)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1431:13-1438:14)
  5: StorageLive(_59)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1431:16-1431:35)
  6: StorageLive(_60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1431:16-1431:24)
  7: _60 = &((*_37).0: util::sparse_set::SparseSet)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1431:16-1431:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1431:16-1431:35)
      kind: _59 = util::sparse_set::SparseSet::is_empty(move _60) -> [return: bb29, unwind: bb60]
  }
  preds [bb26]
  succs [bb29, bb60]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1431:16-1431:35)
      kind: switchInt(move _59) -> [0: bb39, otherwise: bb30]
  }
  preds [bb28]
  succs [bb30, bb39]

bb30
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1431:34-1431:35)
  1: StorageLive(_61)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1432:17-1434:18)
  2: StorageLive(_62)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1432:20-1432:31)
  3: _62 = _55
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1432:20-1432:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1432:20-1432:31)
      kind: switchInt(move _62) -> [0: bb33, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb33]

bb31
  0: StorageLive(_63)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1432:36-1432:46)
  1: _63 = _23
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1432:36-1432:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1432:36-1432:46)
      kind: switchInt(move _63) -> [0: bb32, otherwise: bb33]
  }
  preds [bb30]
  succs [bb32, bb33]

bb32
  0: _39 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1433:21-1433:26)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1434:17-1434:18)
  2: StorageDead(_62)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1434:17-1434:18)
  3: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1434:17-1434:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb56
  }
  preds [bb31]
  succs [bb56]

bb33
  0: _61 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1434:18-1434:18)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1434:17-1434:18)
  2: StorageDead(_62)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1434:17-1434:18)
  3: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1434:17-1434:18)
  4: StorageLive(_65)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:20-1435:28)
  5: _65 = _27
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:20-1435:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:20-1435:28)
      kind: switchInt(move _65) -> [0: bb38, otherwise: bb34]
  }
  preds [bb30, bb31]
  succs [bb34, bb38]

bb34
  0: StorageLive(_66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:32-1435:50)
  1: StorageLive(_67)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:32-1435:34)
  2: _67 = _54
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:32-1435:34)
  3: StorageLive(_68)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:37-1435:50)
  4: StorageLive(_69)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:37-1435:42)
  5: _69 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:37-1435:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:37-1435:50)
      kind: _68 = util::search::Input::<'_>::start(move _69) -> [return: bb35, unwind: bb60]
  }
  preds [bb33]
  succs [bb35, bb60]

bb35
  0: StorageDead(_69)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:49-1435:50)
  1: _66 = Gt(move _67, move _68)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:32-1435:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:32-1435:50)
      kind: switchInt(move _66) -> [0: bb37, otherwise: bb36]
  }
  preds [bb34]
  succs [bb36, bb37]

bb36
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:49-1435:50)
  1: StorageDead(_67)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:49-1435:50)
  2: _39 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1436:21-1436:26)
  3: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1437:17-1437:18)
  4: StorageDead(_65)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1437:17-1437:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb56
  }
  preds [bb35]
  succs [bb56]

bb37
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:49-1435:50)
  1: StorageDead(_67)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1435:49-1435:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb35]
  succs [bb38]

bb38
  0: _58 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1437:18-1437:18)
  1: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1437:17-1437:18)
  2: StorageDead(_65)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1437:17-1437:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1431:13-1438:14)
      kind: goto -> bb40
  }
  preds [bb33, bb37]
  succs [bb40]

bb39
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1431:34-1431:35)
  1: _58 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1438:14-1438:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1431:13-1438:14)
      kind: goto -> bb40
  }
  preds [bb29]
  succs [bb40]

bb40
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1438:13-1438:14)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1438:13-1438:14)
  2: StorageLive(_71)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1439:13-1442:14)
  3: StorageLive(_72)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1439:17-1439:28)
  4: _72 = _55
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1439:17-1439:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1439:17-1439:28)
      kind: switchInt(move _72) -> [0: bb42, otherwise: bb41]
  }
  preds [bb38, bb39]
  succs [bb41, bb42]

bb41
  0: StorageLive(_73)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1439:32-1439:42)
  1: _73 = _23
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1439:32-1439:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1439:32-1439:42)
      kind: switchInt(move _73) -> [0: bb44, otherwise: bb42]
  }
  preds [bb40]
  succs [bb42, bb44]

bb42
  0: StorageLive(_74)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1440:21-1440:26)
  1: StorageLive(_75)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1440:34-1440:36)
  2: _75 = []
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1440:34-1440:36)
  3: _74 = &mut _75
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1440:29-1440:36)
  4: FakeRead(ForLet(None), _74)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1440:21-1440:26)
  5: StorageLive(_76)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:17-1441:78)
  6: StorageLive(_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:17-1441:21)
  7: _77 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:17-1441:21)
  8: StorageLive(_78)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:38-1441:43)
  9: _78 = &mut (*_36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:38-1441:43)
  10: StorageLive(_79)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:45-1441:50)
  11: StorageLive(_80)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:45-1441:50)
  12: _80 = &mut (*_74)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:45-1441:50)
  13: _79 = move _80 as &mut [core::option::Option<util::primitives::NonMaxUsize>] (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:45-1441:50)
  14: StorageDead(_80)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:49-1441:50)
  15: StorageLive(_81)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:52-1441:56)
  16: _81 = &mut (*_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:52-1441:56)
  17: StorageLive(_82)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:58-1441:63)
  18: _82 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:58-1441:63)
  19: StorageLive(_83)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:65-1441:67)
  20: _83 = _54
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:65-1441:67)
  21: StorageLive(_84)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:69-1441:77)
  22: _84 = _28
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:69-1441:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:17-1441:78)
      kind: _76 = nfa::thompson::pikevm::PikeVM::epsilon_closure(move _77, move _78, move _79, move _81, move _82, move _83, move _84) -> [return: bb43, unwind: bb60]
  }
  preds [bb40, bb41]
  succs [bb43, bb60]

bb43
  0: StorageDead(_84)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:77-1441:78)
  1: StorageDead(_83)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:77-1441:78)
  2: StorageDead(_82)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:77-1441:78)
  3: StorageDead(_81)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:77-1441:78)
  4: StorageDead(_79)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:77-1441:78)
  5: StorageDead(_78)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:77-1441:78)
  6: StorageDead(_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:77-1441:78)
  7: StorageDead(_76)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1441:78-1441:79)
  8: _71 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1439:43-1442:14)
  9: StorageDead(_75)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1442:13-1442:14)
  10: StorageDead(_74)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1442:13-1442:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1439:13-1442:14)
      kind: goto -> bb45
  }
  preds [bb42]
  succs [bb45]

bb44
  0: _71 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1442:14-1442:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1439:13-1442:14)
      kind: goto -> bb45
  }
  preds [bb41]
  succs [bb45]

bb45
  0: StorageDead(_73)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1442:13-1442:14)
  1: StorageDead(_72)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1442:13-1442:14)
  2: StorageDead(_71)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1442:13-1442:14)
  3: StorageLive(_85)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:13-1443:73)
  4: StorageLive(_86)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:13-1443:17)
  5: _86 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:13-1443:17)
  6: StorageLive(_87)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:36-1443:41)
  7: _87 = &mut (*_36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:36-1443:41)
  8: StorageLive(_88)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:43-1443:47)
  9: _88 = &mut (*_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:43-1443:47)
  10: StorageLive(_89)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:49-1443:53)
  11: _89 = &mut (*_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:49-1443:53)
  12: StorageLive(_90)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:55-1443:60)
  13: _90 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:55-1443:60)
  14: StorageLive(_91)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:62-1443:64)
  15: _91 = _54
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:62-1443:64)
  16: StorageLive(_92)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:66-1443:72)
  17: _92 = &mut (*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:66-1443:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:13-1443:73)
      kind: _85 = nfa::thompson::pikevm::PikeVM::nexts_overlapping(move _86, move _87, move _88, move _89, move _90, move _91, move _92) -> [return: bb46, unwind: bb60]
  }
  preds [bb43, bb44]
  succs [bb46, bb60]

bb46
  0: StorageDead(_92)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:72-1443:73)
  1: StorageDead(_91)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:72-1443:73)
  2: StorageDead(_90)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:72-1443:73)
  3: StorageDead(_89)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:72-1443:73)
  4: StorageDead(_88)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:72-1443:73)
  5: StorageDead(_87)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:72-1443:73)
  6: StorageDead(_86)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:72-1443:73)
  7: StorageDead(_85)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1443:73-1443:74)
  8: StorageLive(_93)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:13-1450:14)
  9: StorageLive(_94)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:16-1448:32)
  10: StorageLive(_95)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:16-1448:22)
  11: _95 = &(*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:16-1448:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:16-1448:32)
      kind: _94 = util::search::PatternSet::is_full(move _95) -> [return: bb47, unwind: bb60]
  }
  preds [bb45]
  succs [bb47, bb60]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:16-1448:32)
      kind: switchInt(move _94) -> [0: bb49, otherwise: bb48]
  }
  preds [bb46]
  succs [bb48, bb49]

bb48
  0: StorageDead(_95)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:31-1448:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:57-1450:14)
      kind: goto -> bb52
  }
  preds [bb47]
  succs [bb52]

bb49
  0: StorageDead(_95)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:31-1448:32)
  1: StorageLive(_96)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:36-1448:56)
  2: StorageLive(_97)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:36-1448:41)
  3: _97 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:36-1448:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:36-1448:56)
      kind: _96 = util::search::Input::<'_>::get_earliest(move _97) -> [return: bb50, unwind: bb60]
  }
  preds [bb47]
  succs [bb50, bb60]

bb50
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:36-1448:56)
      kind: switchInt(move _96) -> [0: bb53, otherwise: bb51]
  }
  preds [bb49]
  succs [bb51, bb53]

bb51
  0: StorageDead(_97)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:55-1448:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:57-1450:14)
      kind: goto -> bb52
  }
  preds [bb50]
  succs [bb52]

bb52
  0: _39 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1449:17-1449:22)
  1: StorageDead(_96)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1450:13-1450:14)
  2: StorageDead(_94)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1450:13-1450:14)
  3: StorageDead(_93)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1450:13-1450:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb57
  }
  preds [bb48, bb51]
  succs [bb57]

bb53
  0: StorageDead(_97)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1448:55-1448:56)
  1: _93 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1450:14-1450:14)
  2: StorageDead(_96)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1450:13-1450:14)
  3: StorageDead(_94)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1450:13-1450:14)
  4: StorageDead(_93)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1450:13-1450:14)
  5: StorageLive(_99)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1451:13-1451:40)
  6: StorageLive(_100)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1451:29-1451:33)
  7: _100 = &mut (*_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1451:29-1451:33)
  8: StorageLive(_101)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1451:35-1451:39)
  9: _101 = &mut (*_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1451:35-1451:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1451:13-1451:40)
      kind: _99 = core::mem::swap::<nfa::thompson::pikevm::ActiveStates>(move _100, move _101) -> [return: bb54, unwind: bb60]
  }
  preds [bb50]
  succs [bb54, bb60]

bb54
  0: StorageDead(_101)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1451:39-1451:40)
  1: StorageDead(_100)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1451:39-1451:40)
  2: StorageDead(_99)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1451:40-1451:41)
  3: StorageLive(_102)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1452:13-1452:29)
  4: StorageLive(_103)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1452:13-1452:21)
  5: _103 = &mut ((*_38).0: util::sparse_set::SparseSet)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1452:13-1452:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1452:13-1452:29)
      kind: _102 = util::sparse_set::SparseSet::clear(move _103) -> [return: bb55, unwind: bb60]
  }
  preds [bb53]
  succs [bb55, bb60]

bb55
  0: StorageDead(_103)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1452:28-1452:29)
  1: StorageDead(_102)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1452:29-1452:30)
  2: _48 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:47-1453:10)
  3: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1453:9-1453:10)
  4: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1453:9-1453:10)
  5: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1453:9-1453:10)
  6: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1453:9-1453:10)
  7: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1453:9-1453:10)
  8: _47 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:9-1453:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1429:9-1453:10)
      kind: goto -> bb21
  }
  preds [bb54]
  succs [bb21]

bb56
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1438:13-1438:14)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1438:13-1438:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb57
  }
  preds [bb32, bb36]
  succs [bb57]

bb57
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1453:9-1453:10)
  1: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1453:9-1453:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb58
  }
  preds [bb52, bb56]
  succs [bb58]

bb58
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1453:9-1453:10)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1453:9-1453:10)
  2: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1453:9-1453:10)
  3: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1453:9-1453:10)
  4: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1453:9-1453:10)
  5: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1453:9-1453:10)
  6: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1397:7-1455:6)
  7: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1455:5-1455:6)
  8: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1455:5-1455:6)
  9: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1455:5-1455:6)
  10: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1455:5-1455:6)
  11: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1455:5-1455:6)
  12: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1455:5-1455:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1455:6-1455:6)
      kind: goto -> bb59
  }
  preds [bb27, bb57]
  succs [bb59]

bb59
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1455:6-1455:6)
      kind: return
  }
  preds [bb3, bb16, bb58]
  succs []

bb60
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1392:5-1455:6)
      kind: resume
  }
  preds [bb0, bb1, bb4, bb5, bb7, bb8, bb9, bb10, bb11, bb15, bb17, bb18, bb19, bb21, bb22, bb26, bb28, bb34, bb42, bb45, bb46, bb49, bb53, bb54]
  succs []

