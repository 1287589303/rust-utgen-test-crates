bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:91:17-91:24)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:92:45-92:55)
  2: _5 = (_3.0: usize)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:92:45-92:55)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:92:62-92:70)
  4: _6 = (_3.1: usize)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:92:62-92:70)
  5: _4 = aho_corasick::Span { start: move _5, end: move _6 }
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:92:17-92:72)
  6: StorageDead(_6)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:92:71-92:72)
  7: StorageDead(_5)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:92:71-92:72)
  8: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:91:17-91:24)
  9: StorageLive(_7)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:93:13-94:44)
  10: StorageLive(_8)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:93:13-93:26)
  11: _8 = &((*_1).0: aho_corasick::packed::Searcher)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:93:13-93:26)
  12: StorageLive(_9)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:94:26-94:34)
  13: _9 = _2
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:94:26-94:34)
  14: StorageLive(_10)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:94:36-94:43)
  15: _10 = _4
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:94:36-94:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:93:13-94:44)
      kind: _7 = aho_corasick::packed::Searcher::find_in::<&[u8]>(move _8, move _9, move _10) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:94:43-94:44)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:94:43-94:44)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:94:43-94:44)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:95:22-95:65)
  4: _11 = {closure@regex-automata/src/util/prefilter/teddy.rs:95:22: 95:25}
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:95:22-95:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:93:13-95:66)
      kind: _0 = core::option::Option::<aho_corasick::Match>::map::<util::search::Span, {closure@regex-automata/src/util/prefilter/teddy.rs:95:22: 95:25}>(move _7, move _11) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:95:65-95:66)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:95:65-95:66)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:96:9-96:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:97:6-97:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:84:5-97:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

