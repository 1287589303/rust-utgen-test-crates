bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:667:17-667:20)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:667:23-667:29)
  2: _5 = &((*_1).0: hybrid::regex::Regex)
    SourceInfo(regex-automata/src/meta/wrappers.rs:667:23-667:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:667:23-667:39)
      kind: _4 = hybrid::regex::Regex::forward(move _5) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:667:38-667:39)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:667:17-667:20)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:17-668:29)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:32-668:72)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:32-668:57)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:32-668:57)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:32-668:48)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:32-668:39)
  8: _11 = &mut ((*_2).0: core::option::Option<hybrid::regex::Cache>)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:32-668:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:668:32-668:48)
      kind: _10 = core::option::Option::<hybrid::regex::Cache>::as_mut(move _11) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:47-668:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:668:32-668:57)
      kind: _9 = core::option::Option::<&mut hybrid::regex::Cache>::unwrap(move _10) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: _8 = &mut (*_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:32-668:57)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:56-668:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:668:32-668:72)
      kind: _7 = hybrid::regex::Cache::as_parts_mut(move _8) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:71-668:72)
  1: _6 = move (_7.0: &mut hybrid::dfa::Cache)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:32-668:74)
  2: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:17-668:29)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:74-668:75)
  4: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:668:74-668:75)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:13-669:53)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:13-669:16)
  7: _13 = &(*_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:13-669:16)
  8: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:32-669:45)
  9: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:32-669:45)
  10: _15 = &mut _6
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:32-669:45)
  11: _14 = &mut (*(*_15))
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:32-669:45)
  12: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:47-669:52)
  13: _16 = &(*_3)
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:47-669:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:669:13-669:53)
      kind: _12 = hybrid::dfa::DFA::try_search_fwd(move _13, move _14, move _16) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:52-669:53)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:52-669:53)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:52-669:53)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:62-669:74)
  4: _17 = {closure@regex-automata/src/meta/wrappers.rs:669:62: 669:65}
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:62-669:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:669:13-669:75)
      kind: _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::map_err::<meta::error::RetryFailError, {closure@regex-automata/src/meta/wrappers.rs:669:62: 669:65}>(move _12, move _17) -> [return: bb6, unwind: bb7]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:74-669:75)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/wrappers.rs:669:74-669:75)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:670:9-670:10)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:670:9-670:10)
  4: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/wrappers.rs:677:5-677:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:677:6-677:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:669:74-669:75)
      kind: drop(_12) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:660:5-677:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb7]
  succs []

