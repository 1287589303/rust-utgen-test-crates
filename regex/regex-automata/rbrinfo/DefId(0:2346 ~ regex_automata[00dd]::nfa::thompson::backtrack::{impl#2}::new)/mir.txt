bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:457:9-457:38)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:457:9-457:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:457:9-457:38)
      kind: _3 = nfa::thompson::backtrack::BoundedBacktracker::builder() -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: _2 = &_3
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:457:9-457:38)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:457:45-457:52)
  2: _4 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:457:45-457:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:457:9-457:53)
      kind: _0 = nfa::thompson::backtrack::Builder::build(move _2, move _4) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:457:52-457:53)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:457:52-457:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:458:5-458:6)
      kind: drop(_3) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:458:5-458:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:458:6-458:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:458:5-458:6)
      kind: drop(_3) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:456:5-458:6)
      kind: resume
  }
  preds [bb0, bb2, bb4]
  succs []

