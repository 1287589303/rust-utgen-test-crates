bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1106:13-1106:23)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1106:26-1106:30)
  2: _3 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1106:26-1106:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1106:26-1106:51)
      kind: _2 = nfa::thompson::builder::Builder::current_pattern_id(move _3) -> [return: bb1, unwind: bb18]
  }
  preds []
  succs [bb1, bb18]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1106:50-1106:51)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1106:13-1106:23)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:13-1107:16)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:57)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:56)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:23)
  6: _7 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:23)
  7: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:28-1107:55)
  8: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:43-1107:53)
  9: _9 = _2
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:43-1107:53)
  10: _8 = nfa::thompson::builder::State::Match { pattern_id: move _9 }
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:28-1107:55)
  11: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:54-1107:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:56)
      kind: _6 = nfa::thompson::builder::Builder::add(move _7, move _8) -> [return: bb2, unwind: bb17]
  }
  preds [bb0]
  succs [bb2, bb17]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:55-1107:56)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:55-1107:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:57)
      kind: _5 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _6) -> [return: bb3, unwind: bb16]
  }
  preds [bb1]
  succs [bb3, bb16]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:56-1107:57)
  1: PlaceMention(_5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:57)
  2: _10 = discriminant(_5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:57)
      kind: switchInt(move _10) -> [0: bb6, 1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:57)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:56-1107:57)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:57)
  1: _14 = ((_5 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:57)
  2: _4 = _14
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:57)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:56-1107:57)
  4: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:13-1107:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:57-1107:58)
      kind: drop(_5) -> [return: bb9, unwind: bb18]
  }
  preds [bb3, bb5]
  succs [bb9, bb18]

bb7
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:56-1107:57)
  1: _11 = move ((_5 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:56-1107:57)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:56-1107:57)
  3: _13 = move _11
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:56-1107:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:19-1107:57)
      kind: _0 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _13) -> [return: bb8, unwind: bb13]
  }
  preds [bb5]
  succs [bb8, bb13]

bb8
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:56-1107:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:56-1107:57)
      kind: drop(_11) -> [return: bb10, unwind: bb15]
  }
  preds [bb7]
  succs [bb10, bb15]

bb9
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:57-1107:58)
  1: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1108:12-1108:15)
  2: _15 = _4
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1108:12-1108:15)
  3: _0 = core::result::Result::<util::primitives::StateID, nfa::thompson::error::BuildError>::Ok(move _15)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1108:9-1108:16)
  4: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1108:15-1108:16)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1109:5-1109:6)
  6: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1109:5-1109:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1109:6-1109:6)
      kind: goto -> bb12
  }
  preds [bb6]
  succs [bb12]

bb10
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:56-1107:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:57-1107:58)
      kind: drop(_5) -> [return: bb11, unwind: bb18]
  }
  preds [bb8]
  succs [bb11, bb18]

bb11
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:57-1107:58)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1109:5-1109:6)
  2: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1109:5-1109:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1109:6-1109:6)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1109:6-1109:6)
      kind: return
  }
  preds [bb9, bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:56-1107:57)
      kind: drop(_13) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:56-1107:57)
      kind: drop(_11) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:57-1107:58)
      kind: drop(_5) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb8, bb14]
  succs [bb18]

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:56-1107:57)
      kind: drop(_6) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb18]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1107:55-1107:56)
      kind: drop(_8) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1105:5-1109:6)
      kind: resume
  }
  preds [bb0, bb6, bb10, bb15, bb16, bb17]
  succs []

