bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:9-679:59)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:21-679:59)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:10-679:21)
  3: _4 = &((*_1).1: [regex_syntax::utf8::Utf8Range; 4])
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:10-679:21)
  4: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:22-679:58)
  5: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:24-679:58)
  6: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:24-679:49)
  7: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:40-679:48)
  8: _8 = ((*_1).2: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:40-679:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:24-679:49)
      kind: _7 = <usize as core::convert::TryFrom<u8>>::try_from(move _8) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:48-679:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:24-679:58)
      kind: _6 = core::result::Result::<usize, core::convert::Infallible>::unwrap(move _7) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:57-679:58)
  1: _5 = core::ops::RangeTo::<usize> { end: move _6 }
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:22-679:58)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:57-679:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:21-679:59)
      kind: _3 = <[regex_syntax::utf8::Utf8Range; 4] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _4, move _5) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:58-679:59)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:58-679:59)
  2: _2 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:9-679:59)
  3: _0 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:679:9-679:59)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:680:5-680:6)
  5: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:680:5-680:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:680:6-680:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:678:5-680:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

