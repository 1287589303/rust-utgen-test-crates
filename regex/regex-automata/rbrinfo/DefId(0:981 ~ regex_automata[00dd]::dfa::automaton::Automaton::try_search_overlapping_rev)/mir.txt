bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1724:13-1724:22)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1724:25-1724:41)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1724:25-1724:29)
  3: _6 = &(*_1)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1724:25-1724:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1724:25-1724:41)
      kind: _5 = <Self as dfa::automaton::Automaton>::has_empty(move _6) -> [return: bb1, unwind: bb32]
  }
  preds []
  succs [bb1, bb32]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1724:25-1724:41)
      kind: switchInt(move _5) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1724:40-1724:41)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1724:45-1724:49)
  2: _7 = &(*_1)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1724:45-1724:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1724:45-1724:59)
      kind: _4 = <Self as dfa::automaton::Automaton>::is_utf8(move _7) -> [return: bb4, unwind: bb32]
  }
  preds [bb1]
  succs [bb4, bb32]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1724:40-1724:41)
  1: _4 = const false
    SourceInfo(regex-automata/src/dfa/automaton.rs:1724:25-1724:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1724:25-1724:59)
      kind: goto -> bb5
  }
  preds [bb1]
  succs [bb5]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1724:58-1724:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1724:25-1724:59)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb5
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1724:58-1724:59)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1724:13-1724:22)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:9-1725:58)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:9-1725:58)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:9-1725:57)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:38-1725:42)
  6: _11 = &(*_1)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:38-1725:42)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:44-1725:49)
  8: _12 = &(*_2)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:44-1725:49)
  9: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:51-1725:56)
  10: _13 = &mut (*_3)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:51-1725:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1725:9-1725:57)
      kind: _10 = dfa::search::find_overlapping_rev::<Self>(move _11, move _12, move _13) -> [return: bb6, unwind: bb32]
  }
  preds [bb3, bb4]
  succs [bb6, bb32]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:56-1725:57)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:56-1725:57)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:56-1725:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1725:9-1725:58)
      kind: _9 = <core::result::Result<(), util::search::MatchError> as core::ops::Try>::branch(move _10) -> [return: bb7, unwind: bb31]
  }
  preds [bb5]
  succs [bb7, bb31]

bb7
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:57-1725:58)
  1: PlaceMention(_9)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:9-1725:58)
  2: _14 = discriminant(_9)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:9-1725:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1725:9-1725:58)
      kind: switchInt(move _14) -> [0: bb10, 1: bb9, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9, bb10]

bb8
  0: FakeRead(ForMatchedPlace(None), _9)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:9-1725:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1725:9-1725:58)
      kind: unreachable
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1725:57-1725:58)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:9-1725:58)
  1: _18 = ((_9 as Continue).0: ())
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:9-1725:58)
  2: _8 = _18
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:9-1725:58)
  3: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:57-1725:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1725:58-1725:59)
      kind: drop(_9) -> [return: bb13, unwind: bb32]
  }
  preds [bb7, bb9]
  succs [bb13, bb32]

bb11
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:57-1725:58)
  1: _15 = move ((_9 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:57-1725:58)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:57-1725:58)
  3: _17 = move _15
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:57-1725:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1725:9-1725:58)
      kind: _0 = <core::result::Result<(), util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _17) -> [return: bb12, unwind: bb28]
  }
  preds [bb9]
  succs [bb12, bb28]

bb12
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:57-1725:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1725:57-1725:58)
      kind: drop(_15) -> [return: bb25, unwind: bb30]
  }
  preds [bb11]
  succs [bb25, bb30]

bb13
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:58-1725:59)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:58-1725:59)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1726:15-1726:32)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1726:15-1726:20)
  4: _20 = &(*_3)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1726:15-1726:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1726:15-1726:32)
      kind: _19 = dfa::automaton::OverlappingState::get_match(move _20) -> [return: bb14, unwind: bb32]
  }
  preds [bb10]
  succs [bb14, bb32]

bb14
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1726:31-1726:32)
  1: PlaceMention(_19)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1726:15-1726:32)
  2: _22 = discriminant(_19)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1726:15-1726:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1726:9-1726:32)
      kind: switchInt(move _22) -> [0: bb16, 1: bb17, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16, bb17]

bb15
  0: FakeRead(ForMatchedPlace(None), _19)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1726:15-1726:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1726:15-1726:32)
      kind: unreachable
  }
  preds [bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1727:13-1727:17)
      kind: falseEdge -> [real: bb19, imaginary: bb17]
  }
  preds [bb14]
  succs [bb17, bb19]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1728:13-1728:20)
      kind: falseEdge -> [real: bb20, imaginary: bb18]
  }
  preds [bb14, bb16]
  succs [bb18, bb20]

bb18
  0: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1730:17-1730:22)
  1: _26 = &(*_2)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1730:17-1730:22)
  2: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1731:17-1731:22)
  3: _27 = &mut (*_3)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1731:17-1731:22)
  4: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1732:17-1734:18)
  5: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1732:17-1734:18)
  6: _29 = &(*_1)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1732:17-1734:18)
  7: _28 = {closure@regex-automata/src/dfa/automaton.rs:1732:17: 1732:31} { self: move _29 }
    SourceInfo(regex-automata/src/dfa/automaton.rs:1732:17-1734:18)
  8: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1732:30-1732:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1729:24-1735:14)
      kind: _0 = dfa::automaton::skip_empty_utf8_splits_overlapping::<{closure@regex-automata/src/dfa/automaton.rs:1732:17: 1732:31}>(move _26, move _27, move _28) -> [return: bb23, unwind: bb32]
  }
  preds [bb17, bb21]
  succs [bb23, bb32]

bb19
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1727:24-1727:26)
  1: _23 = ()
    SourceInfo(regex-automata/src/dfa/automaton.rs:1727:24-1727:26)
  2: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _23)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1727:21-1727:27)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1727:26-1727:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1727:26-1727:27)
      kind: goto -> bb24
  }
  preds [bb16]
  succs [bb24]

bb20
  0: _21 = &fake shallow _19
    SourceInfo(regex-automata/src/dfa/automaton.rs:1726:15-1726:32)
  1: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1728:25-1728:34)
  2: _24 = _4
    SourceInfo(regex-automata/src/dfa/automaton.rs:1728:25-1728:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1728:25-1728:34)
      kind: switchInt(move _24) -> [0: bb22, otherwise: bb21]
  }
  preds [bb17]
  succs [bb21, bb22]

bb21
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1728:33-1728:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1728:13-1728:44)
      kind: goto -> bb18
  }
  preds [bb20]
  succs [bb18]

bb22
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1728:33-1728:34)
  1: FakeRead(ForMatchGuard, _21)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1728:33-1728:34)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1728:41-1728:43)
  3: _25 = ()
    SourceInfo(regex-automata/src/dfa/automaton.rs:1728:41-1728:43)
  4: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _25)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1728:38-1728:44)
  5: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1728:43-1728:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1728:43-1728:44)
      kind: goto -> bb24
  }
  preds [bb20]
  succs [bb24]

bb23
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1735:13-1735:14)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1735:13-1735:14)
  2: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1735:13-1735:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1735:13-1735:14)
      kind: goto -> bb24
  }
  preds [bb18]
  succs [bb24]

bb24
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1737:5-1737:6)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1737:5-1737:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1737:6-1737:6)
      kind: goto -> bb27
  }
  preds [bb19, bb22, bb23]
  succs [bb27]

bb25
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:57-1725:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1725:58-1725:59)
      kind: drop(_9) -> [return: bb26, unwind: bb32]
  }
  preds [bb12]
  succs [bb26, bb32]

bb26
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:58-1725:59)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1725:58-1725:59)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1737:5-1737:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1737:6-1737:6)
      kind: goto -> bb27
  }
  preds [bb25]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1737:6-1737:6)
      kind: return
  }
  preds [bb24, bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1725:57-1725:58)
      kind: drop(_17) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1725:57-1725:58)
      kind: drop(_15) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb28]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1725:58-1725:59)
      kind: drop(_9) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb12, bb29]
  succs [bb32]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1725:57-1725:58)
      kind: drop(_10) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1719:5-1737:6)
      kind: resume
  }
  preds [bb0, bb2, bb5, bb10, bb13, bb18, bb25, bb30, bb31]
  succs []

