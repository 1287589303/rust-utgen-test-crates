bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/search.rs:449:17-449:21)
  1: _5 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/hybrid/search.rs:449:17-449:21)
  2: ((*_4).0: core::option::Option<util::search::HalfMatch>) = move _5
    SourceInfo(regex-automata/src/hybrid/search.rs:449:5-449:21)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/search.rs:449:20-449:21)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/search.rs:450:5-452:6)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/search.rs:450:8-450:23)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/search.rs:450:8-450:13)
  7: _8 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:450:8-450:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:450:8-450:23)
      kind: _7 = util::search::Input::<'_>::is_done(move _8) -> [return: bb1, unwind: bb18]
  }
  preds []
  succs [bb1, bb18]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:450:8-450:23)
      kind: switchInt(move _7) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/search.rs:450:22-450:23)
  1: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/search.rs:451:19-451:21)
  2: _10 = ()
    SourceInfo(regex-automata/src/hybrid/search.rs:451:19-451:21)
  3: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _10)
    SourceInfo(regex-automata/src/hybrid/search.rs:451:16-451:22)
  4: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/search.rs:451:21-451:22)
  5: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/search.rs:452:5-452:6)
  6: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/search.rs:452:5-452:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:463:2-463:2)
      kind: goto -> bb17
  }
  preds [bb1]
  succs [bb17]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/search.rs:450:22-450:23)
  1: _6 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:452:6-452:6)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/search.rs:452:5-452:6)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/search.rs:452:5-452:6)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/search.rs:453:9-453:12)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/search.rs:453:18-453:52)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/search.rs:453:18-453:38)
  7: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/search.rs:453:18-453:38)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/search.rs:453:18-453:23)
  9: _15 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:453:18-453:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:453:18-453:38)
      kind: _14 = util::search::Input::<'_>::get_anchored(move _15) -> [return: bb4, unwind: bb18]
  }
  preds [bb1]
  succs [bb4, bb18]

bb4
  0: _13 = &_14
    SourceInfo(regex-automata/src/hybrid/search.rs:453:18-453:38)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/search.rs:453:37-453:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:453:18-453:52)
      kind: _12 = util::search::Anchored::is_anchored(move _13) -> [return: bb5, unwind: bb18]
  }
  preds [bb3]
  succs [bb5, bb18]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:453:18-453:52)
      kind: switchInt(move _12) -> [0: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/search.rs:453:51-453:52)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/search.rs:453:51-453:52)
  2: _11 = core::option::Option::<&util::prefilter::Prefilter>::None
    SourceInfo(regex-automata/src/hybrid/search.rs:454:9-454:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:453:15-457:6)
      kind: goto -> bb10
  }
  preds [bb5]
  succs [bb10]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/search.rs:453:51-453:52)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/search.rs:453:51-453:52)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/search.rs:456:9-456:25)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/search.rs:456:9-456:25)
  4: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/search.rs:456:9-456:12)
  5: _18 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/search.rs:456:9-456:12)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:456:9-456:25)
      kind: _17 = hybrid::dfa::DFA::get_config(move _18) -> [return: bb8, unwind: bb18]
  }
  preds [bb5]
  succs [bb8, bb18]

bb8
  0: _16 = &(*_17)
    SourceInfo(regex-automata/src/hybrid/search.rs:456:9-456:25)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/search.rs:456:24-456:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:456:9-456:41)
      kind: _11 = hybrid::dfa::Config::get_prefilter(move _16) -> [return: bb9, unwind: bb18]
  }
  preds [bb7]
  succs [bb9, bb18]

bb9
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/search.rs:456:40-456:41)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/search.rs:457:5-457:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:453:15-457:6)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/search.rs:457:5-457:6)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(regex-automata/src/hybrid/search.rs:453:9-453:12)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/hybrid/search.rs:458:8-458:21)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/search.rs:458:8-458:11)
  4: _20 = &_11
    SourceInfo(regex-automata/src/hybrid/search.rs:458:8-458:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:458:8-458:21)
      kind: _19 = core::option::Option::<&util::prefilter::Prefilter>::is_some(move _20) -> [return: bb11, unwind: bb18]
  }
  preds [bb6, bb9]
  succs [bb11, bb18]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:458:8-458:21)
      kind: switchInt(move _19) -> [0: bb14, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb14]

bb12
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/search.rs:458:20-458:21)
  1: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/search.rs:459:34-459:37)
  2: _21 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/search.rs:459:34-459:37)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/search.rs:459:39-459:44)
  4: _22 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:459:39-459:44)
  5: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/search.rs:459:46-459:51)
  6: _23 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:459:46-459:51)
  7: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/search.rs:459:53-459:56)
  8: _24 = _11
    SourceInfo(regex-automata/src/hybrid/search.rs:459:53-459:56)
  9: StorageLive(_25)
    SourceInfo(regex-automata/src/hybrid/search.rs:459:58-459:63)
  10: _25 = &mut (*_4)
    SourceInfo(regex-automata/src/hybrid/search.rs:459:58-459:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:459:9-459:64)
      kind: _0 = hybrid::search::find_overlapping_fwd_imp(move _21, move _22, move _23, move _24, move _25) -> [return: bb13, unwind: bb18]
  }
  preds [bb11]
  succs [bb13, bb18]

bb13
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/hybrid/search.rs:459:63-459:64)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/search.rs:459:63-459:64)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/search.rs:459:63-459:64)
  3: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/search.rs:459:63-459:64)
  4: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/search.rs:459:63-459:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:458:5-462:6)
      kind: goto -> bb16
  }
  preds [bb12]
  succs [bb16]

bb14
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/search.rs:458:20-458:21)
  1: StorageLive(_26)
    SourceInfo(regex-automata/src/hybrid/search.rs:461:34-461:37)
  2: _26 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/search.rs:461:34-461:37)
  3: StorageLive(_27)
    SourceInfo(regex-automata/src/hybrid/search.rs:461:39-461:44)
  4: _27 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:461:39-461:44)
  5: StorageLive(_28)
    SourceInfo(regex-automata/src/hybrid/search.rs:461:46-461:51)
  6: _28 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:461:46-461:51)
  7: StorageLive(_29)
    SourceInfo(regex-automata/src/hybrid/search.rs:461:53-461:57)
  8: _29 = core::option::Option::<&util::prefilter::Prefilter>::None
    SourceInfo(regex-automata/src/hybrid/search.rs:461:53-461:57)
  9: StorageLive(_30)
    SourceInfo(regex-automata/src/hybrid/search.rs:461:59-461:64)
  10: _30 = &mut (*_4)
    SourceInfo(regex-automata/src/hybrid/search.rs:461:59-461:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:461:9-461:65)
      kind: _0 = hybrid::search::find_overlapping_fwd_imp(move _26, move _27, move _28, move _29, move _30) -> [return: bb15, unwind: bb18]
  }
  preds [bb11]
  succs [bb15, bb18]

bb15
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/search.rs:461:64-461:65)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/search.rs:461:64-461:65)
  2: StorageDead(_28)
    SourceInfo(regex-automata/src/hybrid/search.rs:461:64-461:65)
  3: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/search.rs:461:64-461:65)
  4: StorageDead(_26)
    SourceInfo(regex-automata/src/hybrid/search.rs:461:64-461:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:458:5-462:6)
      kind: goto -> bb16
  }
  preds [bb14]
  succs [bb16]

bb16
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/search.rs:462:5-462:6)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/search.rs:463:1-463:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:463:2-463:2)
      kind: goto -> bb17
  }
  preds [bb13, bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:463:2-463:2)
      kind: return
  }
  preds [bb2, bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:443:1-463:2)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb7, bb8, bb10, bb12, bb14]
  succs []

