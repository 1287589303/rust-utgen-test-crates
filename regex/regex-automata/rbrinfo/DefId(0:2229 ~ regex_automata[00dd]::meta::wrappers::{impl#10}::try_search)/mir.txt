bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:648:17-648:22)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:648:25-648:41)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:648:25-648:32)
  3: _6 = &mut ((*_2).0: core::option::Option<hybrid::regex::Cache>)
    SourceInfo(regex-automata/src/meta/wrappers.rs:648:25-648:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:648:25-648:41)
      kind: _5 = core::option::Option::<hybrid::regex::Cache>::as_mut(move _6) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:648:40-648:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:648:25-648:50)
      kind: _4 = core::option::Option::<&mut hybrid::regex::Cache>::unwrap(move _5) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:648:49-648:50)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:648:17-648:22)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:649:13-649:44)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:649:13-649:19)
  4: _8 = &((*_1).0: hybrid::regex::Regex)
    SourceInfo(regex-automata/src/meta/wrappers.rs:649:13-649:19)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:649:31-649:36)
  6: _9 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:649:31-649:36)
  7: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:649:38-649:43)
  8: _10 = &(*_3)
    SourceInfo(regex-automata/src/meta/wrappers.rs:649:38-649:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:649:13-649:44)
      kind: _7 = hybrid::regex::Regex::try_search(move _8, move _9, move _10) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:649:43-649:44)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:649:43-649:44)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:649:43-649:44)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/wrappers.rs:649:53-649:65)
  4: _11 = {closure@regex-automata/src/meta/wrappers.rs:649:53: 649:56}
    SourceInfo(regex-automata/src/meta/wrappers.rs:649:53-649:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:649:13-649:66)
      kind: _0 = core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::map_err::<meta::error::RetryFailError, {closure@regex-automata/src/meta/wrappers.rs:649:53: 649:56}>(move _7, move _11) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/wrappers.rs:649:65-649:66)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:649:65-649:66)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:650:9-650:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:657:6-657:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:649:65-649:66)
      kind: drop(_7) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:641:5-657:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb5]
  succs []

