Body {
    params: [],
    value: Expr {
        hir_id: HirId(DefId(0:2861 ~ regex_automata[00dd]::nfa::thompson::pikevm::{impl#0}::new).7),
        kind: Block(
            Block {
                stmts: [],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:2861 ~ regex_automata[00dd]::nfa::thompson::pikevm::{impl#0}::new).1),
                        kind: Call(
                            Expr {
                                hir_id: HirId(DefId(0:2861 ~ regex_automata[00dd]::nfa::thompson::pikevm::{impl#0}::new).2),
                                kind: Path(
                                    TypeRelative(
                                        Ty {
                                            hir_id: HirId(DefId(0:2861 ~ regex_automata[00dd]::nfa::thompson::pikevm::{impl#0}::new).4),
                                            kind: Path(
                                                Resolved(
                                                    None,
                                                    Path {
                                                        span: regex-automata/src/nfa/thompson/pikevm.rs:74:9: 74:15 (#0),
                                                        res: Def(
                                                            Struct,
                                                            DefId(0:5861 ~ regex_automata[00dd]::nfa::thompson::pikevm::Config),
                                                        ),
                                                        segments: [
                                                            PathSegment {
                                                                ident: Config#0,
                                                                hir_id: HirId(DefId(0:2861 ~ regex_automata[00dd]::nfa::thompson::pikevm::{impl#0}::new).3),
                                                                res: Def(
                                                                    Struct,
                                                                    DefId(0:5861 ~ regex_automata[00dd]::nfa::thompson::pikevm::Config),
                                                                ),
                                                                args: None,
                                                                infer_args: true,
                                                            },
                                                        ],
                                                    },
                                                ),
                                            ),
                                            span: regex-automata/src/nfa/thompson/pikevm.rs:74:9: 74:15 (#0),
                                        },
                                        PathSegment {
                                            ident: default#0,
                                            hir_id: HirId(DefId(0:2861 ~ regex_automata[00dd]::nfa::thompson::pikevm::{impl#0}::new).5),
                                            res: Err,
                                            args: None,
                                            infer_args: true,
                                        },
                                    ),
                                ),
                                span: regex-automata/src/nfa/thompson/pikevm.rs:74:9: 74:24 (#0),
                            },
                            [],
                        ),
                        span: regex-automata/src/nfa/thompson/pikevm.rs:74:9: 74:26 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:2861 ~ regex_automata[00dd]::nfa::thompson::pikevm::{impl#0}::new).6),
                rules: DefaultBlock,
                span: regex-automata/src/nfa/thompson/pikevm.rs:73:28: 75:6 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: regex-automata/src/nfa/thompson/pikevm.rs:73:28: 75:6 (#0),
    },
}