bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:13-39:52)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:28-39:34)
  2: _5 = ((*_1).0: u8)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:28-39:34)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:36-39:51)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:36-39:51)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:45-39:51)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:37-39:45)
  7: _9 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:37-39:45)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:46-39:50)
  9: _10 = _3
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:46-39:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:45-39:51)
      kind: _8 = <[u8] as core::ops::Index<util::search::Span>>::index(move _9, move _10) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:50-39:51)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:50-39:51)
  2: _7 = &(*_8)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:36-39:51)
  3: _6 = &(*_7)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:36-39:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:13-39:52)
      kind: _4 = memchr::memchr(move _5, move _6) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:51-39:52)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:51-39:52)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:57-43:14)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:57-43:14)
  4: _12 = &(_3.0: usize)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:57-43:14)
  5: _11 = {closure@regex-automata/src/util/prefilter/memchr.rs:39:57: 39:60} { span: move _12 }
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:57-43:14)
  6: StorageDead(_12)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:59-39:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memchr.rs:39:13-43:15)
      kind: _0 = core::option::Option::<usize>::map::<util::search::Span, {closure@regex-automata/src/util/prefilter/memchr.rs:39:57: 39:60}>(move _4, move _11) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:43:14-43:15)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:43:14-43:15)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:45:5-45:6)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/util/prefilter/memchr.rs:45:5-45:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memchr.rs:45:6-45:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memchr.rs:32:5-45:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

