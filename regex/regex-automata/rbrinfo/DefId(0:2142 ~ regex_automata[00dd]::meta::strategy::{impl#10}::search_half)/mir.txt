bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1806:9-1808:10)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1806:12-1806:46)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1806:12-1806:32)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1806:12-1806:32)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1806:12-1806:17)
  5: _8 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1806:12-1806:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1806:12-1806:32)
      kind: _7 = util::search::Input::<'_>::get_anchored(move _8) -> [return: bb1, unwind: bb24]
  }
  preds []
  succs [bb1, bb24]

bb1
  0: _6 = &_7
    SourceInfo(regex-automata/src/meta/strategy.rs:1806:12-1806:32)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1806:31-1806:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1806:12-1806:46)
      kind: _5 = util::search::Anchored::is_anchored(move _6) -> [return: bb2, unwind: bb24]
  }
  preds [bb0]
  succs [bb2, bb24]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1806:12-1806:46)
      kind: switchInt(move _5) -> [0: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1806:45-1806:46)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1806:45-1806:46)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1807:20-1807:29)
  3: _10 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1807:20-1807:29)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1807:42-1807:47)
  5: _11 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1807:42-1807:47)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1807:49-1807:54)
  7: _12 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1807:49-1807:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1807:20-1807:55)
      kind: _0 = <meta::strategy::Core as meta::strategy::Strategy>::search_half(move _10, move _11, move _12) -> [return: bb4, unwind: bb24]
  }
  preds [bb2]
  succs [bb4, bb24]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1807:54-1807:55)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1807:54-1807:55)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1807:54-1807:55)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1808:9-1808:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1808:9-1808:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1821:6-1821:6)
      kind: goto -> bb23
  }
  preds [bb3]
  succs [bb23]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1806:45-1806:46)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1806:45-1806:46)
  2: _4 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1808:10-1808:10)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1808:9-1808:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1808:9-1808:10)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:15-1809:49)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:15-1809:19)
  7: _14 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:15-1809:19)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:36-1809:41)
  9: _15 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:36-1809:41)
  10: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:43-1809:48)
  11: _16 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:43-1809:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1809:15-1809:49)
      kind: _13 = meta::strategy::ReverseInner::try_search_full(move _14, move _15, move _16) -> [return: bb6, unwind: bb24]
  }
  preds [bb2]
  succs [bb6, bb24]

bb6
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:48-1809:49)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:48-1809:49)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:48-1809:49)
  3: PlaceMention(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:15-1809:49)
  4: _19 = discriminant(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:15-1809:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1809:9-1809:49)
      kind: switchInt(move _19) -> [0: bb11, 1: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb11]

bb7
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:15-1809:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1809:15-1809:49)
      kind: unreachable
  }
  preds [bb6, bb8, bb11]
  succs []

bb8
  0: _17 = discriminant(((_13 as Err).0: meta::error::RetryError))
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:15-1809:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1809:9-1809:49)
      kind: switchInt(move _17) -> [0: bb9, 1: bb10, otherwise: bb7]
  }
  preds [bb6]
  succs [bb7, bb9, bb10]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1810:13-1810:45)
      kind: falseEdge -> [real: bb14, imaginary: bb10]
  }
  preds [bb8]
  succs [bb10, bb14]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1814:13-1814:40)
      kind: falseEdge -> [real: bb16, imaginary: bb11]
  }
  preds [bb8, bb9]
  succs [bb11, bb16]

bb11
  0: _18 = discriminant(((_13 as Ok).0: core::option::Option<util::search::Match>))
    SourceInfo(regex-automata/src/meta/strategy.rs:1809:15-1809:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1809:9-1809:49)
      kind: switchInt(move _18) -> [0: bb12, 1: bb13, otherwise: bb7]
  }
  preds [bb6, bb10]
  succs [bb7, bb12, bb13]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1818:13-1818:21)
      kind: falseEdge -> [real: bb18, imaginary: bb13]
  }
  preds [bb11]
  succs [bb13, bb18]

bb13
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:21-1819:22)
  1: _28 = ((((_13 as Ok).0: core::option::Option<util::search::Match>) as Some).0: util::search::Match)
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:21-1819:22)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:33-1819:69)
  3: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:48-1819:59)
  4: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:48-1819:49)
  5: _31 = &_28
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:48-1819:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1819:48-1819:59)
      kind: _30 = util::search::Match::pattern(move _31) -> [return: bb19, unwind: bb24]
  }
  preds [bb11, bb12]
  succs [bb19, bb24]

bb14
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1810:39-1810:43)
  1: _20 = move ((((_13 as Err).0: meta::error::RetryError) as Quadratic).0: meta::error::RetryQuadraticError)
    SourceInfo(regex-automata/src/meta/strategy.rs:1810:39-1810:43)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1812:17-1812:26)
  3: _21 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1812:17-1812:26)
  4: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1812:39-1812:44)
  5: _22 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1812:39-1812:44)
  6: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1812:46-1812:51)
  7: _23 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1812:46-1812:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1812:17-1812:52)
      kind: _0 = <meta::strategy::Core as meta::strategy::Strategy>::search_half(move _21, move _22, move _23) -> [return: bb15, unwind: bb24]
  }
  preds [bb9]
  succs [bb15, bb24]

bb15
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1812:51-1812:52)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1812:51-1812:52)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1812:51-1812:52)
  3: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1813:13-1813:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1813:13-1813:14)
      kind: goto -> bb22
  }
  preds [bb14]
  succs [bb22]

bb16
  0: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1814:34-1814:38)
  1: _24 = move ((((_13 as Err).0: meta::error::RetryError) as Fail).0: meta::error::RetryFailError)
    SourceInfo(regex-automata/src/meta/strategy.rs:1814:34-1814:38)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1816:17-1816:26)
  3: _25 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1816:17-1816:26)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1816:46-1816:51)
  5: _26 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1816:46-1816:51)
  6: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1816:53-1816:58)
  7: _27 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1816:53-1816:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1816:17-1816:59)
      kind: _0 = meta::strategy::Core::search_half_nofail(move _25, move _26, move _27) -> [return: bb17, unwind: bb24]
  }
  preds [bb10]
  succs [bb17, bb24]

bb17
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1816:58-1816:59)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1816:58-1816:59)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1816:58-1816:59)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1817:13-1817:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1817:13-1817:14)
      kind: goto -> bb22
  }
  preds [bb16]
  succs [bb22]

bb18
  0: _0 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/meta/strategy.rs:1818:25-1818:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1818:25-1818:29)
      kind: goto -> bb22
  }
  preds [bb12]
  succs [bb22]

bb19
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:58-1819:59)
  1: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:61-1819:68)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:61-1819:62)
  3: _33 = &_28
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:61-1819:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1819:61-1819:68)
      kind: _32 = util::search::Match::end(move _33) -> [return: bb20, unwind: bb24]
  }
  preds [bb13]
  succs [bb20, bb24]

bb20
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:67-1819:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1819:33-1819:69)
      kind: _29 = util::search::HalfMatch::new(move _30, move _32) -> [return: bb21, unwind: bb24]
  }
  preds [bb19]
  succs [bb21, bb24]

bb21
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:68-1819:69)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:68-1819:69)
  2: _0 = core::option::Option::<util::search::HalfMatch>::Some(move _29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:28-1819:70)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:69-1819:70)
  4: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1819:69-1819:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1819:69-1819:70)
      kind: goto -> bb22
  }
  preds [bb20]
  succs [bb22]

bb22
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1821:5-1821:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1821:6-1821:6)
      kind: goto -> bb23
  }
  preds [bb15, bb17, bb18, bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1821:6-1821:6)
      kind: return
  }
  preds [bb4, bb22]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1801:5-1821:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb13, bb14, bb16, bb19, bb20]
  succs []

