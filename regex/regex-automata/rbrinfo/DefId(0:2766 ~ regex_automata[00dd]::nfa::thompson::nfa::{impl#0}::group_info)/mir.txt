bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:697:9-697:29)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:697:10-697:29)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:697:10-697:16)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:697:10-697:29)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:697:10-697:16)
  5: _6 = &((*_1).0: std::sync::Arc<nfa::thompson::nfa::Inner>)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:697:10-697:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:697:10-697:29)
      kind: _5 = <std::sync::Arc<nfa::thompson::nfa::Inner> as core::ops::Deref>::deref(move _6) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _4 = &(*_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:697:10-697:16)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:697:15-697:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:697:10-697:29)
      kind: _3 = nfa::thompson::nfa::Inner::group_info(move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:697:28-697:29)
  1: _2 = &_3
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:697:9-697:29)
  2: _0 = &(*(*_2))
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:697:9-697:29)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:698:5-698:6)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:698:5-698:6)
  5: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:698:5-698:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:698:6-698:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:696:5-698:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

