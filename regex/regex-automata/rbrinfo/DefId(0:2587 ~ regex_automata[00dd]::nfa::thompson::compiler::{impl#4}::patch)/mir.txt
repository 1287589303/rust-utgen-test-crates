bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:9-1615:34)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:9-1615:50)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:9-1615:34)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:9-1615:34)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:9-1615:21)
  5: _8 = &((*_1).2: core::cell::RefCell<nfa::thompson::builder::Builder>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:9-1615:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:9-1615:34)
      kind: _7 = core::cell::RefCell::<nfa::thompson::builder::Builder>::borrow_mut(move _8) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: _6 = &mut _7
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:9-1615:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:9-1615:50)
      kind: _5 = <core::cell::RefMut<'_, nfa::thompson::builder::Builder> as core::ops::DerefMut>::deref_mut(move _6) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: _4 = &mut (*_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:9-1615:34)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:33-1615:34)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:33-1615:34)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:41-1615:45)
  4: _9 = _2
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:41-1615:45)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:47-1615:49)
  6: _10 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:47-1615:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:9-1615:50)
      kind: _0 = nfa::thompson::builder::Builder::patch(move _4, move _9, move _10) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:49-1615:50)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:49-1615:50)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1615:49-1615:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1616:5-1616:6)
      kind: drop(_7) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1616:5-1616:6)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1616:5-1616:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1616:6-1616:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1616:5-1616:6)
      kind: drop(_7) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb2]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1614:5-1616:6)
      kind: resume
  }
  preds [bb0, bb3, bb5]
  succs []

