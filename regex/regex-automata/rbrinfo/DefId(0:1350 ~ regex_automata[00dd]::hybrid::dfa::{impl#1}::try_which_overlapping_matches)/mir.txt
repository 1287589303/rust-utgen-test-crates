bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1134:13-1134:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1134:25-1134:50)
      kind: _5 = hybrid::dfa::OverlappingState::start() -> [return: bb1, unwind: bb33]
  }
  preds []
  succs [bb1, bb33]

bb1
  0: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1134:13-1134:22)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1135:9-1145:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1135:9-1145:10)
      kind: goto -> bb2
  }
  preds [bb0]
  succs [bb2]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1135:9-1145:10)
      kind: falseUnwind -> [real: bb3, unwind: bb33]
  }
  preds [bb1, bb23]
  succs [bb3, bb33]

bb3
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1135:29-1138:10)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:71)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:71)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:70)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:17)
  5: _12 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:17)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:45-1136:50)
  7: _13 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:45-1136:50)
  8: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:52-1136:57)
  9: _14 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:52-1136:57)
  10: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:59-1136:69)
  11: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:59-1136:69)
  12: _16 = &mut _5
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:59-1136:69)
  13: _15 = &mut (*_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:59-1136:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:70)
      kind: _11 = hybrid::dfa::DFA::try_search_overlapping_fwd(move _12, move _13, move _14, move _15) -> [return: bb4, unwind: bb33]
  }
  preds [bb2]
  succs [bb4, bb33]

bb4
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:69-1136:70)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:69-1136:70)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:69-1136:70)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:69-1136:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:71)
      kind: _10 = <core::result::Result<(), util::search::MatchError> as core::ops::Try>::branch(move _11) -> [return: bb5, unwind: bb32]
  }
  preds [bb3]
  succs [bb5, bb32]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:70-1136:71)
  1: PlaceMention(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:71)
  2: _17 = discriminant(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:71)
      kind: switchInt(move _17) -> [0: bb8, 1: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:71)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:70-1136:71)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:71)
  1: _21 = ((_10 as Continue).0: ())
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:71)
  2: _9 = _21
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:71)
  3: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:70-1136:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:71-1136:72)
      kind: drop(_10) -> [return: bb11, unwind: bb33]
  }
  preds [bb5, bb7]
  succs [bb11, bb33]

bb9
  0: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:70-1136:71)
  1: _18 = move ((_10 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:70-1136:71)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:70-1136:71)
  3: _20 = move _18
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:70-1136:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:13-1136:71)
      kind: _0 = <core::result::Result<(), util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _20) -> [return: bb10, unwind: bb29]
  }
  preds [bb7]
  succs [bb10, bb29]

bb10
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:70-1136:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:70-1136:71)
      kind: drop(_18) -> [return: bb26, unwind: bb31]
  }
  preds [bb9]
  succs [bb26, bb31]

bb11
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:71-1136:72)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:71-1136:72)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:71-1136:72)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1137:13-1137:18)
  4: _22 = &_5
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1137:13-1137:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1137:13-1137:30)
      kind: _8 = hybrid::dfa::OverlappingState::get_match(move _22) -> [return: bb12, unwind: bb33]
  }
  preds [bb8]
  succs [bb12, bb33]

bb12
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1137:29-1137:30)
  1: PlaceMention(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1135:29-1138:10)
  2: _23 = discriminant(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1135:29-1138:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1135:19-1135:26)
      kind: switchInt(move _23) -> [1: bb13, otherwise: bb24]
  }
  preds [bb11]
  succs [bb13, bb24]

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1135:19-1135:26)
      kind: falseEdge -> [real: bb14, imaginary: bb24]
  }
  preds [bb12]
  succs [bb14, bb24]

bb14
  0: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1135:24-1135:25)
  1: _24 = ((_8 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1135:24-1135:25)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1139:21-1139:51)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1139:21-1139:27)
  4: _26 = &mut (*_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1139:21-1139:27)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1139:39-1139:50)
  6: StorageLive(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1139:39-1139:40)
  7: _28 = &_24
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1139:39-1139:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1139:39-1139:50)
      kind: _27 = util::search::HalfMatch::pattern(move _28) -> [return: bb15, unwind: bb33]
  }
  preds [bb13]
  succs [bb15, bb33]

bb15
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1139:49-1139:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1139:21-1139:51)
      kind: _25 = util::search::PatternSet::try_insert(move _26, move _27) -> [return: bb16, unwind: bb33]
  }
  preds [bb14]
  succs [bb16, bb33]

bb16
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1139:50-1139:51)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1139:50-1139:51)
  2: PlaceMention(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1139:21-1139:51)
  3: StorageDead(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1139:51-1139:52)
  4: StorageLive(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:16-1142:32)
  5: StorageLive(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:16-1142:22)
  6: _30 = &(*_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:16-1142:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:16-1142:32)
      kind: _29 = util::search::PatternSet::is_full(move _30) -> [return: bb17, unwind: bb33]
  }
  preds [bb15]
  succs [bb17, bb33]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:16-1142:32)
      kind: switchInt(move _29) -> [0: bb19, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19]

bb18
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:31-1142:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:57-1144:14)
      kind: goto -> bb22
  }
  preds [bb17]
  succs [bb22]

bb19
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:31-1142:32)
  1: StorageLive(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:36-1142:56)
  2: StorageLive(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:36-1142:41)
  3: _32 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:36-1142:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:36-1142:56)
      kind: _31 = util::search::Input::<'_>::get_earliest(move _32) -> [return: bb20, unwind: bb33]
  }
  preds [bb17]
  succs [bb20, bb33]

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:36-1142:56)
      kind: switchInt(move _31) -> [0: bb23, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb23]

bb21
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:55-1142:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:57-1144:14)
      kind: goto -> bb22
  }
  preds [bb20]
  succs [bb22]

bb22
  0: _6 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1143:17-1143:22)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1144:13-1144:14)
  2: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1144:13-1144:14)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1145:9-1145:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb25
  }
  preds [bb18, bb21]
  succs [bb25]

bb23
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1142:55-1142:56)
  1: _7 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1144:14-1144:14)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1144:13-1144:14)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1144:13-1144:14)
  4: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1145:9-1145:10)
  5: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1145:9-1145:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1135:9-1145:10)
      kind: goto -> bb2
  }
  preds [bb20]
  succs [bb2]

bb24
  0: StorageLive(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1135:9-1145:10)
  1: _6 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1135:9-1145:10)
  2: StorageDead(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1145:9-1145:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb25
  }
  preds [bb12, bb13]
  succs [bb25]

bb25
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1145:9-1145:10)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1145:9-1145:10)
  2: StorageLive(_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1146:12-1146:14)
  3: _37 = ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1146:12-1146:14)
  4: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1146:9-1146:15)
  5: StorageDead(_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1146:14-1146:15)
  6: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1147:5-1147:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1147:6-1147:6)
      kind: goto -> bb28
  }
  preds [bb22, bb24]
  succs [bb28]

bb26
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:70-1136:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:71-1136:72)
      kind: drop(_10) -> [return: bb27, unwind: bb33]
  }
  preds [bb10]
  succs [bb27, bb33]

bb27
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:71-1136:72)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:71-1136:72)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:71-1136:72)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1145:9-1145:10)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1145:9-1145:10)
  5: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1147:5-1147:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1147:6-1147:6)
      kind: goto -> bb28
  }
  preds [bb26]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1147:6-1147:6)
      kind: return
  }
  preds [bb25, bb27]
  succs []

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:70-1136:71)
      kind: drop(_20) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:70-1136:71)
      kind: drop(_18) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb29]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:71-1136:72)
      kind: drop(_10) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb10, bb30]
  succs [bb33]

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1136:70-1136:71)
      kind: drop(_11) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1128:5-1147:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb8, bb11, bb14, bb15, bb16, bb19, bb26, bb31, bb32]
  succs []

