bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:9-349:46)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:9-349:13)
  2: _5 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:9-349:13)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:25-349:30)
  4: _6 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:25-349:30)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:32-349:45)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:32-349:45)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:33-349:45)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:33-349:38)
  9: _10 = move _3
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:33-349:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:349:33-349:45)
      kind: _9 = <I as core::convert::Into<util::search::Input<'_>>>::into(move _10) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:44-349:45)
  1: _8 = &_9
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:32-349:45)
  2: _7 = &(*_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:32-349:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:349:9-349:46)
      kind: _4 = hybrid::regex::Regex::try_search(move _5, move _6, move _7) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:45-349:46)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:45-349:46)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:45-349:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:349:9-349:55)
      kind: _0 = core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::unwrap(move _4) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:349:54-349:55)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:350:5-350:6)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:350:5-350:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:350:5-350:6)
      kind: drop(_3) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:350:6-350:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:349:54-349:55)
      kind: drop(_4) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb7]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:349:44-349:45)
      kind: drop(_10) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:350:5-350:6)
      kind: drop(_3) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb1, bb5, bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:344:5-350:6)
      kind: resume
  }
  preds [bb3, bb7]
  succs []

