bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/primitives.rs:247:13-247:15)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/primitives.rs:247:37-247:42)
  2: _3 = _1
    SourceInfo(regex-automata/src/util/primitives.rs:247:37-247:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:247:18-247:43)
      kind: _2 = core::num::<impl u32>::from_ne_bytes(move _3) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/primitives.rs:247:42-247:43)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/util/primitives.rs:247:13-247:15)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/primitives.rs:248:9-250:10)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/primitives.rs:248:12-248:41)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/util/primitives.rs:248:12-248:14)
  5: _6 = _2
    SourceInfo(regex-automata/src/util/primitives.rs:248:12-248:14)
  6: StorageLive(_7)
    SourceInfo(regex-automata/src/util/primitives.rs:248:17-248:41)
  7: StorageLive(_8)
    SourceInfo(regex-automata/src/util/primitives.rs:248:17-248:32)
  8: StorageLive(_9)
    SourceInfo(regex-automata/src/util/primitives.rs:248:17-248:32)
  9: _9 = const util::primitives::SmallIndex::MAX
    SourceInfo(regex-automata/src/util/primitives.rs:248:17-248:32)
  10: _8 = &_9
    SourceInfo(regex-automata/src/util/primitives.rs:248:17-248:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:248:17-248:41)
      kind: _7 = util::primitives::SmallIndex::as_u32(move _8) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/primitives.rs:248:40-248:41)
  1: _5 = Gt(move _6, move _7)
    SourceInfo(regex-automata/src/util/primitives.rs:248:12-248:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:248:12-248:41)
      kind: switchInt(move _5) -> [0: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/primitives.rs:248:40-248:41)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/primitives.rs:248:40-248:41)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/primitives.rs:248:40-248:41)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/util/primitives.rs:249:24-249:68)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/util/primitives.rs:249:53-249:66)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/util/primitives.rs:249:63-249:65)
  6: _13 = _2
    SourceInfo(regex-automata/src/util/primitives.rs:249:63-249:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:249:53-249:66)
      kind: _12 = <u64 as core::convert::From<u32>>::from(move _13) -> [return: bb4, unwind: bb9]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/primitives.rs:249:65-249:66)
  1: _11 = util::primitives::SmallIndexError { attempted: move _12 }
    SourceInfo(regex-automata/src/util/primitives.rs:249:24-249:68)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/util/primitives.rs:249:67-249:68)
  3: _0 = core::result::Result::<util::primitives::SmallIndex, util::primitives::SmallIndexError>::Err(move _11)
    SourceInfo(regex-automata/src/util/primitives.rs:249:20-249:69)
  4: StorageDead(_11)
    SourceInfo(regex-automata/src/util/primitives.rs:249:68-249:69)
  5: StorageDead(_5)
    SourceInfo(regex-automata/src/util/primitives.rs:250:9-250:10)
  6: StorageDead(_4)
    SourceInfo(regex-automata/src/util/primitives.rs:250:9-250:10)
  7: StorageDead(_2)
    SourceInfo(regex-automata/src/util/primitives.rs:252:5-252:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:252:6-252:6)
      kind: goto -> bb8
  }
  preds [bb3]
  succs [bb8]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/primitives.rs:248:40-248:41)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/primitives.rs:248:40-248:41)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/primitives.rs:248:40-248:41)
  3: _4 = const ()
    SourceInfo(regex-automata/src/util/primitives.rs:250:10-250:10)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/util/primitives.rs:250:9-250:10)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/util/primitives.rs:250:9-250:10)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/util/primitives.rs:251:12-251:52)
  7: StorageLive(_15)
    SourceInfo(regex-automata/src/util/primitives.rs:251:38-251:51)
  8: StorageLive(_16)
    SourceInfo(regex-automata/src/util/primitives.rs:251:38-251:40)
  9: _16 = _2
    SourceInfo(regex-automata/src/util/primitives.rs:251:38-251:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:251:38-251:51)
      kind: _15 = <u32 as util::int::U32>::as_usize(move _16) -> [return: bb6, unwind: bb9]
  }
  preds [bb2]
  succs [bb6, bb9]

bb6
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/util/primitives.rs:251:50-251:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:251:12-251:52)
      kind: _14 = util::primitives::SmallIndex::new_unchecked(move _15) -> [return: bb7, unwind: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/primitives.rs:251:51-251:52)
  1: _0 = core::result::Result::<util::primitives::SmallIndex, util::primitives::SmallIndexError>::Ok(move _14)
    SourceInfo(regex-automata/src/util/primitives.rs:251:9-251:53)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/util/primitives.rs:251:52-251:53)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/util/primitives.rs:252:5-252:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:252:6-252:6)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:252:6-252:6)
      kind: return
  }
  preds [bb4, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:244:5-252:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb6]
  succs []

