bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/captures.rs:2147:9-2150:72)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/captures.rs:2147:9-2149:65)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/captures.rs:2147:9-2148:73)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/captures.rs:2147:9-2147:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2147:9-2147:30)
      kind: _5 = core::mem::size_of::<util::captures::GroupInfoInner>() -> [return: bb1, unwind: bb19]
  }
  preds []
  succs [bb1, bb19]

bb1
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/util/captures.rs:2148:15-2148:73)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/util/captures.rs:2148:15-2148:39)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/util/captures.rs:2148:15-2148:33)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/util/captures.rs:2148:15-2148:33)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/util/captures.rs:2148:15-2148:21)
  5: _10 = &((*_1).0: std::sync::Arc<util::captures::GroupInfoInner>)
    SourceInfo(regex-automata/src/util/captures.rs:2148:15-2148:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2148:15-2148:33)
      kind: _9 = <std::sync::Arc<util::captures::GroupInfoInner> as core::ops::Deref>::deref(move _10) -> [return: bb2, unwind: bb19]
  }
  preds [bb0]
  succs [bb2, bb19]

bb2
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/captures.rs:2148:20-2148:21)
  1: _8 = &((*_9).0: std::vec::Vec<(util::primitives::SmallIndex, util::primitives::SmallIndex)>)
    SourceInfo(regex-automata/src/util/captures.rs:2148:15-2148:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2148:15-2148:39)
      kind: _7 = std::vec::Vec::<(util::primitives::SmallIndex, util::primitives::SmallIndex)>::len(move _8) -> [return: bb3, unwind: bb19]
  }
  preds [bb1]
  succs [bb3, bb19]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/captures.rs:2148:38-2148:39)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/util/captures.rs:2148:42-2148:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2148:42-2148:73)
      kind: _11 = core::mem::size_of::<(util::primitives::SmallIndex, util::primitives::SmallIndex)>() -> [return: bb4, unwind: bb19]
  }
  preds [bb2]
  succs [bb4, bb19]

bb4
  0: _12 = MulWithOverflow(_7, _11)
    SourceInfo(regex-automata/src/util/captures.rs:2148:15-2148:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2148:15-2148:73)
      kind: assert(!move (_12.1: bool), "attempt to compute `{} * {}`, which would overflow", move _7, move _11) -> [success: bb5, unwind: bb19]
  }
  preds [bb3]
  succs [bb5, bb19]

bb5
  0: _6 = move (_12.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:2148:15-2148:73)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/util/captures.rs:2148:72-2148:73)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/util/captures.rs:2148:72-2148:73)
  3: _13 = AddWithOverflow(_5, _6)
    SourceInfo(regex-automata/src/util/captures.rs:2147:9-2148:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2147:9-2148:73)
      kind: assert(!move (_13.1: bool), "attempt to compute `{} + {}`, which would overflow", move _5, move _6) -> [success: bb6, unwind: bb19]
  }
  preds [bb4]
  succs [bb6, bb19]

bb6
  0: _4 = move (_13.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:2147:9-2148:73)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/util/captures.rs:2148:72-2148:73)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/util/captures.rs:2148:72-2148:73)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/util/captures.rs:2149:15-2149:65)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/util/captures.rs:2149:15-2149:41)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/util/captures.rs:2149:15-2149:35)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/util/captures.rs:2149:15-2149:35)
  7: StorageLive(_18)
    SourceInfo(regex-automata/src/util/captures.rs:2149:15-2149:21)
  8: _18 = &((*_1).0: std::sync::Arc<util::captures::GroupInfoInner>)
    SourceInfo(regex-automata/src/util/captures.rs:2149:15-2149:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2149:15-2149:35)
      kind: _17 = <std::sync::Arc<util::captures::GroupInfoInner> as core::ops::Deref>::deref(move _18) -> [return: bb7, unwind: bb19]
  }
  preds [bb5]
  succs [bb7, bb19]

bb7
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/util/captures.rs:2149:20-2149:21)
  1: _16 = &((*_17).1: std::vec::Vec<std::collections::HashMap<std::sync::Arc<str>, util::primitives::SmallIndex>>)
    SourceInfo(regex-automata/src/util/captures.rs:2149:15-2149:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2149:15-2149:41)
      kind: _15 = std::vec::Vec::<std::collections::HashMap<std::sync::Arc<str>, util::primitives::SmallIndex>>::len(move _16) -> [return: bb8, unwind: bb19]
  }
  preds [bb6]
  succs [bb8, bb19]

bb8
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/util/captures.rs:2149:40-2149:41)
  1: StorageLive(_19)
    SourceInfo(regex-automata/src/util/captures.rs:2149:44-2149:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2149:44-2149:65)
      kind: _19 = core::mem::size_of::<std::collections::HashMap<std::sync::Arc<str>, util::primitives::SmallIndex>>() -> [return: bb9, unwind: bb19]
  }
  preds [bb7]
  succs [bb9, bb19]

bb9
  0: _20 = MulWithOverflow(_15, _19)
    SourceInfo(regex-automata/src/util/captures.rs:2149:15-2149:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2149:15-2149:65)
      kind: assert(!move (_20.1: bool), "attempt to compute `{} * {}`, which would overflow", move _15, move _19) -> [success: bb10, unwind: bb19]
  }
  preds [bb8]
  succs [bb10, bb19]

bb10
  0: _14 = move (_20.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:2149:15-2149:65)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/util/captures.rs:2149:64-2149:65)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/util/captures.rs:2149:64-2149:65)
  3: _21 = AddWithOverflow(_4, _14)
    SourceInfo(regex-automata/src/util/captures.rs:2147:9-2149:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2147:9-2149:65)
      kind: assert(!move (_21.1: bool), "attempt to compute `{} + {}`, which would overflow", move _4, move _14) -> [success: bb11, unwind: bb19]
  }
  preds [bb9]
  succs [bb11, bb19]

bb11
  0: _3 = move (_21.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:2147:9-2149:65)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/util/captures.rs:2149:64-2149:65)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/captures.rs:2149:64-2149:65)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/util/captures.rs:2150:15-2150:72)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/util/captures.rs:2150:15-2150:41)
  5: StorageLive(_24)
    SourceInfo(regex-automata/src/util/captures.rs:2150:15-2150:35)
  6: StorageLive(_25)
    SourceInfo(regex-automata/src/util/captures.rs:2150:15-2150:35)
  7: StorageLive(_26)
    SourceInfo(regex-automata/src/util/captures.rs:2150:15-2150:21)
  8: _26 = &((*_1).0: std::sync::Arc<util::captures::GroupInfoInner>)
    SourceInfo(regex-automata/src/util/captures.rs:2150:15-2150:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2150:15-2150:35)
      kind: _25 = <std::sync::Arc<util::captures::GroupInfoInner> as core::ops::Deref>::deref(move _26) -> [return: bb12, unwind: bb19]
  }
  preds [bb10]
  succs [bb12, bb19]

bb12
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/util/captures.rs:2150:20-2150:21)
  1: _24 = &((*_25).2: std::vec::Vec<std::vec::Vec<core::option::Option<std::sync::Arc<str>>>>)
    SourceInfo(regex-automata/src/util/captures.rs:2150:15-2150:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2150:15-2150:41)
      kind: _23 = std::vec::Vec::<std::vec::Vec<core::option::Option<std::sync::Arc<str>>>>::len(move _24) -> [return: bb13, unwind: bb19]
  }
  preds [bb11]
  succs [bb13, bb19]

bb13
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/util/captures.rs:2150:40-2150:41)
  1: StorageLive(_27)
    SourceInfo(regex-automata/src/util/captures.rs:2150:44-2150:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2150:44-2150:72)
      kind: _27 = core::mem::size_of::<std::vec::Vec<core::option::Option<std::sync::Arc<str>>>>() -> [return: bb14, unwind: bb19]
  }
  preds [bb12]
  succs [bb14, bb19]

bb14
  0: _28 = MulWithOverflow(_23, _27)
    SourceInfo(regex-automata/src/util/captures.rs:2150:15-2150:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2150:15-2150:72)
      kind: assert(!move (_28.1: bool), "attempt to compute `{} * {}`, which would overflow", move _23, move _27) -> [success: bb15, unwind: bb19]
  }
  preds [bb13]
  succs [bb15, bb19]

bb15
  0: _22 = move (_28.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:2150:15-2150:72)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/util/captures.rs:2150:71-2150:72)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/util/captures.rs:2150:71-2150:72)
  3: _29 = AddWithOverflow(_3, _22)
    SourceInfo(regex-automata/src/util/captures.rs:2147:9-2150:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2147:9-2150:72)
      kind: assert(!move (_29.1: bool), "attempt to compute `{} + {}`, which would overflow", move _3, move _22) -> [success: bb16, unwind: bb19]
  }
  preds [bb14]
  succs [bb16, bb19]

bb16
  0: _2 = move (_29.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:2147:9-2150:72)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/util/captures.rs:2150:71-2150:72)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/util/captures.rs:2150:71-2150:72)
  3: StorageLive(_30)
    SourceInfo(regex-automata/src/util/captures.rs:2151:15-2151:34)
  4: StorageLive(_31)
    SourceInfo(regex-automata/src/util/captures.rs:2151:15-2151:34)
  5: StorageLive(_32)
    SourceInfo(regex-automata/src/util/captures.rs:2151:15-2151:21)
  6: _32 = &((*_1).0: std::sync::Arc<util::captures::GroupInfoInner>)
    SourceInfo(regex-automata/src/util/captures.rs:2151:15-2151:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2151:15-2151:34)
      kind: _31 = <std::sync::Arc<util::captures::GroupInfoInner> as core::ops::Deref>::deref(move _32) -> [return: bb17, unwind: bb19]
  }
  preds [bb15]
  succs [bb17, bb19]

bb17
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/util/captures.rs:2151:20-2151:21)
  1: _30 = ((*_31).3: usize)
    SourceInfo(regex-automata/src/util/captures.rs:2151:15-2151:34)
  2: _33 = AddWithOverflow(_2, _30)
    SourceInfo(regex-automata/src/util/captures.rs:2147:9-2151:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2147:9-2151:34)
      kind: assert(!move (_33.1: bool), "attempt to compute `{} + {}`, which would overflow", move _2, move _30) -> [success: bb18, unwind: bb19]
  }
  preds [bb16]
  succs [bb18, bb19]

bb18
  0: _0 = move (_33.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:2147:9-2151:34)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/util/captures.rs:2151:33-2151:34)
  2: StorageDead(_2)
    SourceInfo(regex-automata/src/util/captures.rs:2151:33-2151:34)
  3: StorageDead(_31)
    SourceInfo(regex-automata/src/util/captures.rs:2152:5-2152:6)
  4: StorageDead(_25)
    SourceInfo(regex-automata/src/util/captures.rs:2152:5-2152:6)
  5: StorageDead(_17)
    SourceInfo(regex-automata/src/util/captures.rs:2152:5-2152:6)
  6: StorageDead(_9)
    SourceInfo(regex-automata/src/util/captures.rs:2152:5-2152:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2152:6-2152:6)
      kind: return
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2144:5-2152:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb15, bb16, bb17]
  succs []

