bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:9-4666:57)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:10-4666:29)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:10-4666:23)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:10-4666:23)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:10-4666:14)
  5: _6 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:10-4666:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4666:10-4666:23)
      kind: _5 = dfa::dense::MatchStates::<T>::slices(move _6) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: _4 = &(*_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:10-4666:23)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:22-4666:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4666:10-4666:29)
      kind: _3 = core::slice::<impl [util::primitives::PatternID]>::len(move _4) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:28-4666:29)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:32-4666:56)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:32-4666:50)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:32-4666:50)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:32-4666:36)
  5: _10 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:32-4666:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4666:32-4666:50)
      kind: _9 = dfa::dense::MatchStates::<T>::pattern_ids(move _10) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: _8 = &(*_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:32-4666:50)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:49-4666:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4666:32-4666:56)
      kind: _7 = core::slice::<impl [util::primitives::PatternID]>::len(move _8) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:55-4666:56)
  1: _11 = AddWithOverflow(_3, _7)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:9-4666:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4666:9-4666:57)
      kind: assert(!move (_11.1: bool), "attempt to compute `{} + {}`, which would overflow", move _3, move _7) -> [success: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: _2 = move (_11.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:9-4666:57)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:56-4666:57)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:56-4666:57)
  3: _12 = MulWithOverflow(_2, const util::primitives::PatternID::SIZE)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:9-4666:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4666:9-4666:75)
      kind: assert(!move (_12.1: bool), "attempt to compute `{} * {}`, which would overflow", move _2, const util::primitives::PatternID::SIZE) -> [success: bb6, unwind: bb7]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: _0 = move (_12.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:9-4666:75)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/dense.rs:4666:74-4666:75)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:4667:5-4667:6)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:4667:5-4667:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4667:6-4667:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4665:5-4667:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5]
  succs []

