bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/wire.rs:612:5-612:36)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/wire.rs:612:18-612:30)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/wire.rs:612:18-612:21)
  3: _5 = &_1
    SourceInfo(regex-automata/src/util/wire.rs:612:18-612:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:612:18-612:30)
      kind: _4 = util::primitives::PatternID::as_u32(move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/wire.rs:612:29-612:30)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/util/wire.rs:612:32-612:35)
  2: _6 = &mut (*_2)
    SourceInfo(regex-automata/src/util/wire.rs:612:32-612:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:612:5-612:36)
      kind: _3 = <E as util::wire::Endian>::write_u32(move _4, move _6) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/wire.rs:612:35-612:36)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/wire.rs:612:35-612:36)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/util/wire.rs:612:36-612:37)
  3: _0 = const util::primitives::PatternID::SIZE
    SourceInfo(regex-automata/src/util/wire.rs:613:5-613:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:614:2-614:2)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:608:1-614:2)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

