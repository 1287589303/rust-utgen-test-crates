bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1699:9-1699:29)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1699:9-1699:20)
  2: _3 = &((*_1).0: T)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1699:9-1699:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1699:9-1699:29)
      kind: _2 = <T as core::convert::AsRef<[u8]>>::as_ref(move _3) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _0 = &(*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1699:9-1699:29)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1699:28-1699:29)
  2: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1700:5-1700:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1700:6-1700:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1698:5-1700:6)
      kind: resume
  }
  preds [bb0]
  succs []

