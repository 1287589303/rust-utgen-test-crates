bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/search.rs:848:23-848:42)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/search.rs:848:23-848:33)
  2: _4 = ((*_1).0: usize)
    SourceInfo(regex-automata/src/util/search.rs:848:23-848:33)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/search.rs:848:36-848:42)
  4: _5 = _2
    SourceInfo(regex-automata/src/util/search.rs:848:36-848:42)
  5: _6 = AddWithOverflow(_4, _5)
    SourceInfo(regex-automata/src/util/search.rs:848:23-848:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:848:23-848:42)
      kind: assert(!move (_6.1: bool), "attempt to compute `{} + {}`, which would overflow", move _4, move _5) -> [success: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _3 = move (_6.0: usize)
    SourceInfo(regex-automata/src/util/search.rs:848:23-848:42)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/search.rs:848:41-848:42)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/search.rs:848:41-848:42)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/util/search.rs:848:49-848:66)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/util/search.rs:848:49-848:57)
  5: _8 = ((*_1).1: usize)
    SourceInfo(regex-automata/src/util/search.rs:848:49-848:57)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/util/search.rs:848:60-848:66)
  7: _9 = _2
    SourceInfo(regex-automata/src/util/search.rs:848:60-848:66)
  8: _10 = AddWithOverflow(_8, _9)
    SourceInfo(regex-automata/src/util/search.rs:848:49-848:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:848:49-848:66)
      kind: assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", move _8, move _9) -> [success: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: _7 = move (_10.0: usize)
    SourceInfo(regex-automata/src/util/search.rs:848:49-848:66)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/util/search.rs:848:65-848:66)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/util/search.rs:848:65-848:66)
  3: _0 = util::search::Span { start: move _3, end: move _7 }
    SourceInfo(regex-automata/src/util/search.rs:848:9-848:68)
  4: StorageDead(_7)
    SourceInfo(regex-automata/src/util/search.rs:848:67-848:68)
  5: StorageDead(_3)
    SourceInfo(regex-automata/src/util/search.rs:848:67-848:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:849:6-849:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:847:5-849:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

