bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/util/wire.rs:821:11-821:27)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/util/wire.rs:821:11-821:12)
  2: _5 = _1
    SourceInfo(regex-automata/src/util/wire.rs:821:11-821:12)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/wire.rs:821:25-821:26)
  4: _6 = _2
    SourceInfo(regex-automata/src/util/wire.rs:821:25-821:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:821:11-821:27)
      kind: _4 = core::num::<impl usize>::checked_add(move _5, move _6) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/wire.rs:821:26-821:27)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/wire.rs:821:26-821:27)
  2: PlaceMention(_4)
    SourceInfo(regex-automata/src/util/wire.rs:821:11-821:27)
  3: _7 = discriminant(_4)
    SourceInfo(regex-automata/src/util/wire.rs:821:11-821:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:821:5-821:27)
      kind: switchInt(move _7) -> [0: bb4, 1: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-automata/src/util/wire.rs:821:11-821:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:821:11-821:27)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:822:9-822:16)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/util/wire.rs:823:21-823:64)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/util/wire.rs:823:59-823:63)
  2: _11 = _3
    SourceInfo(regex-automata/src/util/wire.rs:823:59-823:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:823:21-823:64)
      kind: _10 = util::wire::DeserializeError::arithmetic_overflow(move _11) -> [return: bb6, unwind: bb8]
  }
  preds [bb1, bb3]
  succs [bb6, bb8]

bb5
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/util/wire.rs:822:14-822:15)
  1: _8 = ((_4 as Some).0: usize)
    SourceInfo(regex-automata/src/util/wire.rs:822:14-822:15)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/util/wire.rs:822:23-822:24)
  3: _9 = _8
    SourceInfo(regex-automata/src/util/wire.rs:822:23-822:24)
  4: _0 = core::result::Result::<usize, util::wire::DeserializeError>::Ok(move _9)
    SourceInfo(regex-automata/src/util/wire.rs:822:20-822:25)
  5: StorageDead(_9)
    SourceInfo(regex-automata/src/util/wire.rs:822:24-822:25)
  6: StorageDead(_8)
    SourceInfo(regex-automata/src/util/wire.rs:822:24-822:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:822:24-822:25)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb6
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/util/wire.rs:823:63-823:64)
  1: _0 = core::result::Result::<usize, util::wire::DeserializeError>::Err(move _10)
    SourceInfo(regex-automata/src/util/wire.rs:823:17-823:65)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/util/wire.rs:823:64-823:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:823:64-823:65)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb7
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/wire.rs:825:1-825:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:825:2-825:2)
      kind: return
  }
  preds [bb5, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:816:1-825:2)
      kind: resume
  }
  preds [bb0, bb4]
  succs []

