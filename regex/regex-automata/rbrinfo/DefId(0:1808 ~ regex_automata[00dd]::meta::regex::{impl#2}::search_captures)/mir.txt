bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1064:9-1064:31)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1064:9-1064:13)
  2: _5 = &mut (*_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1064:9-1064:13)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1064:26-1064:30)
  4: _6 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/meta/regex.rs:1064:26-1064:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1064:9-1064:31)
      kind: _4 = util::captures::Captures::set_pattern(move _5, move _6) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1064:30-1064:31)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1064:30-1064:31)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1064:31-1064:32)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:13-1065:16)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:19-1065:23)
  5: _8 = &(*_1)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:19-1065:23)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:37-1065:42)
  7: _9 = &(*_2)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:37-1065:42)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:44-1065:60)
  9: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:44-1065:60)
  10: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:44-1065:48)
  11: _12 = &mut (*_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:44-1065:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1065:44-1065:60)
      kind: _11 = util::captures::Captures::slots_mut(move _12) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: _10 = &mut (*_11)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:44-1065:60)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:59-1065:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1065:19-1065:61)
      kind: _7 = meta::regex::Regex::search_slots(move _8, move _9, move _10) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:60-1065:61)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:60-1065:61)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:60-1065:61)
  3: FakeRead(ForLet(None), _7)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:13-1065:16)
  4: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:1065:61-1065:62)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:1066:9-1066:30)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:1066:9-1066:13)
  7: _14 = &mut (*_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1066:9-1066:13)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:1066:26-1066:29)
  9: _15 = _7
    SourceInfo(regex-automata/src/meta/regex.rs:1066:26-1066:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1066:9-1066:30)
      kind: _13 = util::captures::Captures::set_pattern(move _14, move _15) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:1066:29-1066:30)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:1066:29-1066:30)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:1066:30-1066:31)
  3: _0 = const ()
    SourceInfo(regex-automata/src/meta/regex.rs:1063:75-1067:6)
  4: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1067:5-1067:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1067:6-1067:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1063:5-1067:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

