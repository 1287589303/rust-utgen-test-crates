bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1301:13-1301:22)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1301:25-1301:41)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1301:25-1301:29)
  3: _5 = &(*_1)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1301:25-1301:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1301:25-1301:41)
      kind: _4 = <Self as dfa::automaton::Automaton>::has_empty(move _5) -> [return: bb1, unwind: bb32]
  }
  preds []
  succs [bb1, bb32]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1301:25-1301:41)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1301:40-1301:41)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1301:45-1301:49)
  2: _6 = &(*_1)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1301:45-1301:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1301:45-1301:59)
      kind: _3 = <Self as dfa::automaton::Automaton>::is_utf8(move _6) -> [return: bb4, unwind: bb32]
  }
  preds [bb1]
  succs [bb4, bb32]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1301:40-1301:41)
  1: _3 = const false
    SourceInfo(regex-automata/src/dfa/automaton.rs:1301:25-1301:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1301:25-1301:59)
      kind: goto -> bb5
  }
  preds [bb1]
  succs [bb5]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1301:58-1301:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1301:25-1301:59)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb5
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1301:58-1301:59)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1301:13-1301:22)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:13-1302:15)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:54)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:41-1302:46)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:41-1302:46)
  8: _12 = &_1
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:41-1302:46)
  9: _11 = &(*_12)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:41-1302:46)
  10: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:48-1302:53)
  11: _13 = &(*_2)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:48-1302:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:54)
      kind: _10 = dfa::search::find_fwd::<&Self>(move _11, move _13) -> [return: bb6, unwind: bb32]
  }
  preds [bb3, bb4]
  succs [bb6, bb32]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:53-1302:54)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:53-1302:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
      kind: _9 = <core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError> as core::ops::Try>::branch(move _10) -> [return: bb7, unwind: bb31]
  }
  preds [bb5]
  succs [bb7, bb31]

bb7
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:54-1302:55)
  1: PlaceMention(_9)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
  2: _14 = discriminant(_9)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
      kind: switchInt(move _14) -> [0: bb10, 1: bb9, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9, bb10]

bb8
  0: FakeRead(ForMatchedPlace(None), _9)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
      kind: unreachable
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1302:54-1302:55)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
  1: _18 = ((_9 as Continue).0: core::option::Option<util::search::HalfMatch>)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
  2: _8 = _18
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
  3: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:54-1302:55)
  4: PlaceMention(_8)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
  5: _20 = discriminant(_8)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1302:18-1302:55)
      kind: switchInt(move _20) -> [0: bb14, 1: bb15, otherwise: bb13]
  }
  preds [bb7, bb9]
  succs [bb13, bb14, bb15]

bb11
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:54-1302:55)
  1: _15 = move ((_9 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:54-1302:55)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:54-1302:55)
  3: _17 = move _15
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:54-1302:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
      kind: _0 = <core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _17) -> [return: bb12, unwind: bb28]
  }
  preds [bb9]
  succs [bb12, bb28]

bb12
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:54-1302:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1302:54-1302:55)
      kind: drop(_15) -> [return: bb24, unwind: bb30]
  }
  preds [bb11]
  succs [bb24, bb30]

bb13
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1303:13-1303:17)
      kind: falseEdge -> [real: bb17, imaginary: bb15]
  }
  preds [bb10]
  succs [bb15, bb17]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1304:13-1304:21)
      kind: falseEdge -> [real: bb18, imaginary: bb16]
  }
  preds [bb10, bb14]
  succs [bb16, bb18]

bb16
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1305:18-1305:20)
  1: _29 = ((_8 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1305:18-1305:20)
  2: _7 = _29
    SourceInfo(regex-automata/src/dfa/automaton.rs:1305:25-1305:27)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1305:26-1305:27)
  4: FakeRead(ForLet(None), _7)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:13-1302:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1306:10-1306:11)
      kind: drop(_9) -> [return: bb21, unwind: bb32]
  }
  preds [bb15, bb19]
  succs [bb21, bb32]

bb17
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1303:31-1303:35)
  1: _22 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/dfa/automaton.rs:1303:31-1303:35)
  2: _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::Ok(move _22)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1303:28-1303:36)
  3: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1303:35-1303:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1303:21-1303:36)
      kind: goto -> bb25
  }
  preds [bb14]
  succs [bb25]

bb18
  0: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:18-1304:20)
  1: _24 = &((_8 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:18-1304:20)
  2: _19 = &fake shallow _8
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:24-1302:55)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:26-1304:35)
  4: _25 = _3
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:26-1304:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1304:26-1304:35)
      kind: switchInt(move _25) -> [0: bb20, otherwise: bb19]
  }
  preds [bb15]
  succs [bb19, bb20]

bb19
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:34-1304:35)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:57-1304:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1304:25-1304:35)
      kind: goto -> bb16
  }
  preds [bb18]
  succs [bb16]

bb20
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:34-1304:35)
  1: FakeRead(ForMatchGuard, _19)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:34-1304:35)
  2: FakeRead(ForGuardBinding, _24)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:34-1304:35)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:18-1304:20)
  4: _23 = ((_8 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:18-1304:20)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:49-1304:57)
  6: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:54-1304:56)
  7: _28 = _23
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:54-1304:56)
  8: _27 = core::option::Option::<util::search::HalfMatch>::Some(move _28)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:49-1304:57)
  9: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:56-1304:57)
  10: _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::Ok(move _27)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:46-1304:58)
  11: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:57-1304:58)
  12: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:57-1304:58)
  13: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1304:57-1304:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb25
  }
  preds [bb18]
  succs [bb25]

bb21
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1306:10-1306:11)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1306:10-1306:11)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1306:10-1306:11)
  3: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1321:32-1321:37)
  4: _30 = &(*_2)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1321:32-1321:37)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1321:39-1321:41)
  6: _31 = _7
    SourceInfo(regex-automata/src/dfa/automaton.rs:1321:39-1321:41)
  7: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1321:43-1321:54)
  8: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1321:43-1321:45)
  9: _33 = &_7
    SourceInfo(regex-automata/src/dfa/automaton.rs:1321:43-1321:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1321:43-1321:54)
      kind: _32 = util::search::HalfMatch::offset(move _33) -> [return: bb22, unwind: bb32]
  }
  preds [bb16]
  succs [bb22, bb32]

bb22
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1321:53-1321:54)
  1: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1321:56-1324:10)
  2: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1321:56-1324:10)
  3: _35 = &_1
    SourceInfo(regex-automata/src/dfa/automaton.rs:1321:56-1324:10)
  4: _34 = {closure@regex-automata/src/dfa/automaton.rs:1321:56: 1321:63} { self: move _35 }
    SourceInfo(regex-automata/src/dfa/automaton.rs:1321:56-1324:10)
  5: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1321:62-1321:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1321:9-1324:11)
      kind: _0 = util::empty::skip_splits_fwd::<util::search::HalfMatch, {closure@regex-automata/src/dfa/automaton.rs:1321:56: 1321:63}>(move _30, move _31, move _32, move _34) -> [return: bb23, unwind: bb32]
  }
  preds [bb21]
  succs [bb23, bb32]

bb23
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1324:10-1324:11)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1324:10-1324:11)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1324:10-1324:11)
  3: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1324:10-1324:11)
  4: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1325:5-1325:6)
  5: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1325:5-1325:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1325:6-1325:6)
      kind: goto -> bb27
  }
  preds [bb22]
  succs [bb27]

bb24
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1302:54-1302:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb25
  }
  preds [bb12]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1306:10-1306:11)
      kind: drop(_9) -> [return: bb26, unwind: bb32]
  }
  preds [bb17, bb20, bb24]
  succs [bb26, bb32]

bb26
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1306:10-1306:11)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1306:10-1306:11)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1306:10-1306:11)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1325:5-1325:6)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/automaton.rs:1325:5-1325:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1325:6-1325:6)
      kind: goto -> bb27
  }
  preds [bb25]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1325:6-1325:6)
      kind: return
  }
  preds [bb23, bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1302:54-1302:55)
      kind: drop(_17) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1302:54-1302:55)
      kind: drop(_15) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb28]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1306:10-1306:11)
      kind: drop(_9) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb12, bb29]
  succs [bb32]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1302:54-1302:55)
      kind: drop(_10) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/automaton.rs:1297:5-1325:6)
      kind: resume
  }
  preds [bb0, bb2, bb5, bb16, bb21, bb22, bb25, bb30, bb31]
  succs []

