bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/util/memchr.rs:28:25-28:27)
  1: _5 = _1
    SourceInfo(regex-automata/src/util/memchr.rs:28:25-28:27)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/util/memchr.rs:28:29-28:31)
  3: _6 = _2
    SourceInfo(regex-automata/src/util/memchr.rs:28:29-28:31)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/util/memchr.rs:28:33-28:35)
  5: _7 = _3
    SourceInfo(regex-automata/src/util/memchr.rs:28:33-28:35)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/util/memchr.rs:28:37-28:45)
  7: _8 = &(*_4)
    SourceInfo(regex-automata/src/util/memchr.rs:28:37-28:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/memchr.rs:28:9-28:46)
      kind: _0 = memchr::memchr3(move _5, move _6, move _7, move _8) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/memchr.rs:28:45-28:46)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/memchr.rs:28:45-28:46)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/memchr.rs:28:45-28:46)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/util/memchr.rs:28:45-28:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/memchr.rs:29:6-29:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/memchr.rs:22:5-29:6)
      kind: resume
  }
  preds [bb0]
  succs []

