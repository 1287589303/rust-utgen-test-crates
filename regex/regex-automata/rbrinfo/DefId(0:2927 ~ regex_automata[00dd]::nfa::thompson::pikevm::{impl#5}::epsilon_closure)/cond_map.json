{
  "regex-automata/src/nfa/thompson/pikevm.rs:1625:15:1625:44": [
    {
      "Bool": {
        "Other": "let Some(frame) = stack.pop()"
      }
    }
  ],
  "regex-automata/src/nfa/thompson/pikevm.rs:1626:19:1626:24": [
    {
      "Match": {
        "match_source": "regex-automata/src/nfa/thompson/pikevm.rs:1626:19:1626:24",
        "match_str": "frame",
        "match_kind": {
          "Enum": [
            "Explore",
            "RestoreCapture"
          ]
        },
        "arms": {
          "regex-automata/src/nfa/thompson/pikevm.rs:1630:17:1630:44": {
            "pat": {
              "pat_str": "FollowEpsilon::Explore(sid)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/pikevm.rs:1630:48:1634:18"
          },
          "regex-automata/src/nfa/thompson/pikevm.rs:1627:17:1627:68": {
            "pat": {
              "pat_str": "FollowEpsilon::RestoreCapture { slot, offset: pos }",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/pikevm.rs:1627:72:1629:18"
          }
        }
      }
    }
  ]
}