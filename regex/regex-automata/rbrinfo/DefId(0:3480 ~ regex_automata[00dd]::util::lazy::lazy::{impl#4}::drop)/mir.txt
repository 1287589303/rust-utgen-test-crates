bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/lazy.rs:215:17-215:20)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/lazy.rs:215:24-215:43)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/lazy.rs:215:24-215:33)
  3: _4 = &mut ((*_1).0: core::sync::atomic::AtomicPtr<T>)
    SourceInfo(regex-automata/src/util/lazy.rs:215:24-215:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/lazy.rs:215:24-215:43)
      kind: _3 = core::sync::atomic::AtomicPtr::<T>::get_mut(move _4) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/lazy.rs:215:42-215:43)
  1: _2 = (*_3)
    SourceInfo(regex-automata/src/util/lazy.rs:215:23-215:43)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/util/lazy.rs:215:17-215:20)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/util/lazy.rs:215:43-215:44)
  4: StorageLive(_5)
    SourceInfo(regex-automata/src/util/lazy.rs:216:17-216:30)
  5: StorageLive(_6)
    SourceInfo(regex-automata/src/util/lazy.rs:216:17-216:20)
  6: _6 = _2
    SourceInfo(regex-automata/src/util/lazy.rs:216:17-216:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/lazy.rs:216:17-216:30)
      kind: _5 = core::ptr::mut_ptr::<impl *mut T>::is_null(move _6) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/lazy.rs:216:17-216:30)
      kind: switchInt(move _5) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/lazy.rs:216:29-216:30)
  1: _0 = const ()
    SourceInfo(regex-automata/src/util/lazy.rs:220:14-220:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/lazy.rs:216:13-220:14)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/lazy.rs:216:29-216:30)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/util/lazy.rs:219:17-219:52)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/util/lazy.rs:219:22-219:51)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/util/lazy.rs:219:45-219:48)
  4: _9 = _2
    SourceInfo(regex-automata/src/util/lazy.rs:219:45-219:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/lazy.rs:219:31-219:49)
      kind: _8 = std::boxed::Box::<T>::from_raw(move _9) -> [return: bb5, unwind: bb9]
  }
  preds [bb2]
  succs [bb5, bb9]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/lazy.rs:219:48-219:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/lazy.rs:219:17-219:52)
      kind: _7 = core::mem::drop::<std::boxed::Box<T>>(move _8) -> [return: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/lazy.rs:219:51-219:52)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/lazy.rs:219:52-219:53)
  2: _0 = const ()
    SourceInfo(regex-automata/src/util/lazy.rs:216:31-220:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/lazy.rs:216:13-220:14)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/lazy.rs:220:13-220:14)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/util/lazy.rs:221:9-221:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/lazy.rs:221:10-221:10)
      kind: return
  }
  preds [bb3, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/lazy.rs:219:51-219:52)
      kind: drop(_8) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/lazy.rs:214:9-221:10)
      kind: resume
  }
  preds [bb0, bb1, bb4, bb8]
  succs []

