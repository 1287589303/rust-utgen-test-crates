bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1848:13-1848:19)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1848:22-1848:38)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1848:22-1848:38)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1848:22-1848:27)
  4: _7 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1848:22-1848:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1848:22-1848:38)
      kind: _6 = util::search::Input::<'_>::get_span(move _7) -> [return: bb1, unwind: bb40]
  }
  preds []
  succs [bb1, bb40]

bb1
  0: _5 = &_6
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1848:22-1848:38)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1848:37-1848:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1848:22-1848:44)
      kind: _4 = util::search::Span::len(move _5) -> [return: bb2, unwind: bb40]
  }
  preds [bb0]
  succs [bb2, bb40]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1848:43-1848:44)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1848:13-1848:19)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1848:44-1848:45)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1849:13-1849:16)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1849:19-1849:59)
  5: _9 = &_4
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1849:19-1849:59)
  6: _8 = {closure@regex-automata/src/nfa/thompson/backtrack.rs:1849:19: 1849:21} { haylen: move _9 }
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1849:19-1849:59)
  7: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1849:20-1849:21)
  8: FakeRead(ForLet(None), _8)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1849:13-1849:16)
  9: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1853:23-1853:29)
  10: _10 = _4
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1853:23-1853:29)
  11: _11 = AddWithOverflow(_10, const 1_usize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1853:23-1853:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1853:23-1853:33)
      kind: assert(!move (_11.1: bool), "attempt to compute `{} + {}`, which would overflow", move _10, const 1_usize) -> [success: bb3, unwind: bb40]
  }
  preds [bb1]
  succs [bb3, bb40]

bb3
  0: ((*_1).1: usize) = move (_11.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1853:9-1853:33)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1853:32-1853:33)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1854:13-1854:28)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:71)
  4: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:46)
  5: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:40)
  6: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:40)
  7: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:31)
  8: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:31)
  9: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:21)
  10: _19 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:31)
      kind: _18 = nfa::thompson::backtrack::BoundedBacktracker::get_nfa(move _19) -> [return: bb4, unwind: bb40]
  }
  preds [bb2]
  succs [bb4, bb40]

bb4
  0: _17 = &(*_18)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:31)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:30-1855:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:40)
      kind: _16 = nfa::thompson::nfa::NFA::states(move _17) -> [return: bb5, unwind: bb40]
  }
  preds [bb3]
  succs [bb5, bb40]

bb5
  0: _15 = &(*_16)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:40)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:39-1855:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:46)
      kind: _14 = core::slice::<impl [nfa::thompson::nfa::State]>::len(move _15) -> [return: bb6, unwind: bb40]
  }
  preds [bb4]
  succs [bb6, bb40]

bb6
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:45-1855:46)
  1: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:59-1855:70)
  2: _20 = ((*_1).1: usize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:59-1855:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:71)
      kind: _13 = core::num::<impl usize>::checked_mul(move _14, move _20) -> [return: bb7, unwind: bb40]
  }
  preds [bb5]
  succs [bb7, bb40]

bb7
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:70-1855:71)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:70-1855:71)
  2: PlaceMention(_13)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:71)
  3: _21 = discriminant(_13)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:13-1855:71)
      kind: switchInt(move _21) -> [0: bb9, 1: bb10, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9, bb10]

bb8
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1855:19-1855:71)
      kind: unreachable
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1856:17-1856:21)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1857:22-1857:30)
  1: _26 = ((_13 as Some).0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1857:22-1857:30)
  2: _12 = _26
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1857:35-1857:43)
  3: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1857:42-1857:43)
  4: FakeRead(ForLet(None), _12)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1854:13-1854:28)
  5: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1858:14-1858:15)
  6: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1858:14-1858:15)
  7: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1858:14-1858:15)
  8: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:13-1859:25)
  9: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:32-1859:70)
  10: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:32-1859:47)
  11: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:32-1859:47)
  12: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:32-1859:34)
  13: _31 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:32-1859:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:32-1859:47)
      kind: _30 = nfa::thompson::backtrack::BoundedBacktracker::get_config(move _31) -> [return: bb14, unwind: bb40]
  }
  preds [bb7, bb9]
  succs [bb14, bb40]

bb11
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1856:36-1856:41)
  1: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1856:36-1856:39)
  2: _24 = &_8
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1856:36-1856:39)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1856:36-1856:41)
  4: _25 = ()
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1856:36-1856:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1856:36-1856:41)
      kind: _23 = <{closure@regex-automata/src/nfa/thompson/backtrack.rs:1849:19: 1849:21} as core::ops::Fn<()>>::call(move _24, move _25) -> [return: bb12, unwind: bb40]
  }
  preds [bb9]
  succs [bb12, bb40]

bb12
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1856:40-1856:41)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1856:40-1856:41)
  2: _0 = core::result::Result::<(), util::search::MatchError>::Err(move _23)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1856:32-1856:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1856:41-1856:42)
      kind: drop(_23) -> [return: bb13, unwind: bb40]
  }
  preds [bb11]
  succs [bb13, bb40]

bb13
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1856:41-1856:42)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1858:14-1858:15)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1858:14-1858:15)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1858:14-1858:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb12]
  succs [bb38]

bb14
  0: _29 = &(*_30)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:32-1859:47)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:46-1859:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:32-1859:70)
      kind: _28 = nfa::thompson::backtrack::Config::get_visited_capacity(move _29) -> [return: bb15, unwind: bb40]
  }
  preds [bb10]
  succs [bb15, bb40]

bb15
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:69-1859:70)
  1: _32 = MulWithOverflow(const 8_usize, _28)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:28-1859:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:28-1859:70)
      kind: assert(!move (_32.1: bool), "attempt to compute `{} * {}`, which would overflow", const 8_usize, move _28) -> [success: bb16, unwind: bb40]
  }
  preds [bb14]
  succs [bb16, bb40]

bb16
  0: _27 = move (_32.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:28-1859:70)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:69-1859:70)
  2: FakeRead(ForLet(None), _27)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:13-1859:25)
  3: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1859:70-1859:71)
  4: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1860:9-1862:10)
  5: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1860:12-1860:42)
  6: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1860:12-1860:27)
  7: _35 = _12
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1860:12-1860:27)
  8: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1860:30-1860:42)
  9: _36 = _27
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1860:30-1860:42)
  10: _34 = Gt(move _35, move _36)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1860:12-1860:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1860:12-1860:42)
      kind: switchInt(move _34) -> [0: bb20, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb20]

bb17
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1860:41-1860:42)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1860:41-1860:42)
  2: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1861:24-1861:29)
  3: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1861:24-1861:27)
  4: _39 = &_8
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1861:24-1861:27)
  5: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1861:24-1861:29)
  6: _40 = ()
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1861:24-1861:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1861:24-1861:29)
      kind: _38 = <{closure@regex-automata/src/nfa/thompson/backtrack.rs:1849:19: 1849:21} as core::ops::Fn<()>>::call(move _39, move _40) -> [return: bb18, unwind: bb40]
  }
  preds [bb16]
  succs [bb18, bb40]

bb18
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1861:28-1861:29)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1861:28-1861:29)
  2: _0 = core::result::Result::<(), util::search::MatchError>::Err(move _38)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1861:20-1861:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1861:29-1861:30)
      kind: drop(_38) -> [return: bb19, unwind: bb40]
  }
  preds [bb17]
  succs [bb19, bb40]

bb19
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1861:29-1861:30)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1862:9-1862:10)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1862:9-1862:10)
  3: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1872:5-1872:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb18]
  succs [bb38]

bb20
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1860:41-1860:42)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1860:41-1860:42)
  2: _33 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1862:10-1862:10)
  3: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1862:9-1862:10)
  4: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1862:9-1862:10)
  5: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1863:13-1863:26)
  6: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1863:38-1863:53)
  7: _42 = _12
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1863:38-1863:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1863:29-1863:75)
      kind: _41 = nfa::thompson::backtrack::div_ceil(move _42, const nfa::thompson::backtrack::Visited::BLOCK_SIZE) -> [return: bb21, unwind: bb40]
  }
  preds [bb16]
  succs [bb21, bb40]

bb21
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1863:74-1863:75)
  1: FakeRead(ForLet(None), _41)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1863:13-1863:26)
  2: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1864:9-1864:44)
  3: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1864:9-1864:20)
  4: _44 = &mut ((*_1).0: std::vec::Vec<usize>)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1864:9-1864:20)
  5: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1864:30-1864:43)
  6: _45 = _41
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1864:30-1864:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1864:9-1864:44)
      kind: _43 = std::vec::Vec::<usize>::truncate(move _44, move _45) -> [return: bb22, unwind: bb40]
  }
  preds [bb20]
  succs [bb22, bb40]

bb22
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1864:43-1864:44)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1864:43-1864:44)
  2: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1864:44-1864:45)
  3: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:9-1867:10)
  4: StorageLive(_47)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  5: StorageLive(_48)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  6: StorageLive(_49)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:33)
  7: StorageLive(_50)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  8: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:33)
  9: _51 = &mut ((*_1).0: std::vec::Vec<usize>)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
      kind: _50 = <std::vec::Vec<usize> as core::ops::DerefMut>::deref_mut(move _51) -> [return: bb23, unwind: bb40]
  }
  preds [bb21]
  succs [bb23, bb40]

bb23
  0: _49 = &mut (*_50)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:33)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:32-1865:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
      kind: _48 = core::slice::<impl [usize]>::iter_mut(move _49) -> [return: bb24, unwind: bb40]
  }
  preds [bb22]
  succs [bb24, bb40]

bb24
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:43-1865:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
      kind: _47 = <core::slice::IterMut<'_, usize> as core::iter::IntoIterator>::into_iter(move _48) -> [return: bb25, unwind: bb40]
  }
  preds [bb23]
  succs [bb25, bb40]

bb25
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:43-1865:44)
  1: PlaceMention(_47)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  2: StorageLive(_52)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  3: _52 = move _47
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:9-1867:10)
      kind: goto -> bb26
  }
  preds [bb24]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:9-1867:10)
      kind: falseUnwind -> [real: bb27, unwind: bb40]
  }
  preds [bb25, bb31]
  succs [bb27, bb40]

bb27
  0: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  1: StorageLive(_55)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  2: StorageLive(_56)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  3: StorageLive(_57)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  4: _57 = &mut _52
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  5: _56 = &mut (*_57)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
      kind: _55 = <core::slice::IterMut<'_, usize> as core::iter::Iterator>::next(move _56) -> [return: bb28, unwind: bb40]
  }
  preds [bb26]
  succs [bb28, bb40]

bb28
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:43-1865:44)
  1: PlaceMention(_55)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  2: _58 = discriminant(_55)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
      kind: switchInt(move _58) -> [0: bb30, 1: bb31, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb30, bb31]

bb29
  0: FakeRead(ForMatchedPlace(None), _55)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:22-1865:44)
      kind: unreachable
  }
  preds [bb28]
  succs []

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:9-1867:10)
      kind: falseEdge -> [real: bb32, imaginary: bb31]
  }
  preds [bb28]
  succs [bb31, bb32]

bb31
  0: StorageLive(_60)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:13-1865:18)
  1: _60 = move ((_55 as Some).0: &mut usize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:13-1865:18)
  2: (*_60) = const 0_usize
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1866:13-1866:23)
  3: _54 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:45-1867:10)
  4: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1867:9-1867:10)
  5: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1867:9-1867:10)
  6: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1867:9-1867:10)
  7: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1867:9-1867:10)
  8: _53 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:9-1867:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:9-1867:10)
      kind: goto -> bb26
  }
  preds [bb28, bb30]
  succs [bb26]

bb32
  0: _46 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1865:9-1867:10)
  1: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1867:9-1867:10)
  2: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1867:9-1867:10)
  3: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1867:9-1867:10)
  4: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1867:9-1867:10)
  5: StorageDead(_50)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1867:9-1867:10)
  6: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1867:9-1867:10)
  7: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1867:9-1867:10)
  8: StorageLive(_61)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:9-1870:10)
  9: StorageLive(_62)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:12-1868:45)
  10: StorageLive(_63)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:12-1868:25)
  11: _63 = _41
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:12-1868:25)
  12: StorageLive(_64)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:28-1868:45)
  13: StorageLive(_65)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:28-1868:39)
  14: _65 = &((*_1).0: std::vec::Vec<usize>)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:28-1868:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:28-1868:45)
      kind: _64 = std::vec::Vec::<usize>::len(move _65) -> [return: bb33, unwind: bb40]
  }
  preds [bb30]
  succs [bb33, bb40]

bb33
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:44-1868:45)
  1: _62 = Gt(move _63, move _64)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:12-1868:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:12-1868:45)
      kind: switchInt(move _62) -> [0: bb36, otherwise: bb34]
  }
  preds [bb32]
  succs [bb34, bb36]

bb34
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:44-1868:45)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:44-1868:45)
  2: StorageLive(_66)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1869:13-1869:49)
  3: StorageLive(_67)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1869:13-1869:24)
  4: _67 = &mut ((*_1).0: std::vec::Vec<usize>)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1869:13-1869:24)
  5: StorageLive(_68)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1869:32-1869:45)
  6: _68 = _41
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1869:32-1869:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1869:13-1869:49)
      kind: _66 = std::vec::Vec::<usize>::resize(move _67, move _68, const 0_usize) -> [return: bb35, unwind: bb40]
  }
  preds [bb33]
  succs [bb35, bb40]

bb35
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1869:48-1869:49)
  1: StorageDead(_67)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1869:48-1869:49)
  2: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1869:49-1869:50)
  3: _61 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:46-1870:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:9-1870:10)
      kind: goto -> bb37
  }
  preds [bb34]
  succs [bb37]

bb36
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:44-1868:45)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:44-1868:45)
  2: _61 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1870:10-1870:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1868:9-1870:10)
      kind: goto -> bb37
  }
  preds [bb33]
  succs [bb37]

bb37
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1870:9-1870:10)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1870:9-1870:10)
  2: StorageLive(_69)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1871:12-1871:14)
  3: _69 = ()
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1871:12-1871:14)
  4: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _69)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1871:9-1871:15)
  5: StorageDead(_69)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1871:14-1871:15)
  6: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1872:5-1872:6)
  7: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1872:5-1872:6)
  8: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1872:5-1872:6)
  9: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1872:5-1872:6)
  10: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1872:5-1872:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1872:6-1872:6)
      kind: goto -> bb39
  }
  preds [bb35, bb36]
  succs [bb39]

bb38
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1872:5-1872:6)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1872:5-1872:6)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1872:5-1872:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1872:6-1872:6)
      kind: goto -> bb39
  }
  preds [bb13, bb19]
  succs [bb39]

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1872:6-1872:6)
      kind: return
  }
  preds [bb37, bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:1841:5-1872:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb10, bb11, bb12, bb14, bb15, bb17, bb18, bb20, bb21, bb22, bb23, bb24, bb26, bb27, bb32, bb34]
  succs []

