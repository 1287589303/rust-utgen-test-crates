bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:3656:9-3656:35)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:3656:17-3656:34)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:3656:17-3656:21)
  3: _5 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:3656:17-3656:21)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:3656:31-3656:33)
  5: _6 = _2
    SourceInfo(regex-automata/src/dfa/dense.rs:3656:31-3656:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3656:17-3656:34)
      kind: _4 = dfa::dense::TransitionTable::<T>::is_valid(move _5, move _6) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3656:17-3656:34)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:3656:33-3656:34)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:3656:33-3656:34)
  2: _3 = const ()
    SourceInfo(regex-automata/src/dfa/dense.rs:3656:35-3656:35)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:3656:34-3656:35)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:3656:34-3656:35)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:3658:13-3658:14)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:3658:17-3658:19)
  7: _9 = &_2
    SourceInfo(regex-automata/src/dfa/dense.rs:3658:17-3658:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3658:17-3658:30)
      kind: _8 = util::primitives::StateID::as_usize(move _9) -> [return: bb4, unwind: bb9]
  }
  preds [bb1]
  succs [bb4, bb9]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:3656:33-3656:34)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:3656:33-3656:34)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:3656:9-3656:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3656:9-3656:35)
      kind: _7 = core::panicking::panic(const "assertion failed: self.is_valid(id)") -> bb9
  }
  preds [bb1]
  succs [bb9]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:3658:29-3658:30)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(regex-automata/src/dfa/dense.rs:3658:13-3658:14)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:3660:13-3660:15)
  3: _10 = _2
    SourceInfo(regex-automata/src/dfa/dense.rs:3660:13-3660:15)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/dense.rs:3661:22-3661:34)
  5: _11 = ((*_1).2: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:3661:22-3661:34)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:26-3662:67)
  7: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:26-3662:67)
  8: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:39-3662:67)
  9: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:27-3662:39)
  10: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:27-3662:39)
  11: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:27-3662:31)
  12: _17 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:27-3662:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3662:27-3662:39)
      kind: _16 = dfa::dense::TransitionTable::<T>::table(move _17) -> [return: bb5, unwind: bb9]
  }
  preds [bb2]
  succs [bb5, bb9]

bb5
  0: _15 = &(*_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:27-3662:39)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:38-3662:39)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:40-3662:66)
  3: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:40-3662:41)
  4: _19 = _8
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:40-3662:41)
  5: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:43-3662:66)
  6: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:43-3662:44)
  7: _21 = _8
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:43-3662:44)
  8: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:47-3662:66)
  9: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:47-3662:51)
  10: _23 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:47-3662:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3662:47-3662:66)
      kind: _22 = dfa::dense::TransitionTable::<T>::alphabet_len(move _23) -> [return: bb6, unwind: bb9]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:65-3662:66)
  1: _24 = AddWithOverflow(_21, _22)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:43-3662:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3662:43-3662:66)
      kind: assert(!move (_24.1: bool), "attempt to compute `{} + {}`, which would overflow", move _21, move _22) -> [success: bb7, unwind: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: _20 = move (_24.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:43-3662:66)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:65-3662:66)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:65-3662:66)
  3: _18 = core::ops::Range::<usize> { start: move _19, end: move _20 }
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:40-3662:66)
  4: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:65-3662:66)
  5: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:65-3662:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3662:39-3662:67)
      kind: _14 = <[util::primitives::StateID] as core::ops::Index<core::ops::Range<usize>>>::index(move _15, move _18) -> [return: bb8, unwind: bb9]
  }
  preds [bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:66-3662:67)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:66-3662:67)
  2: _13 = &(*_14)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:26-3662:67)
  3: _12 = &(*_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:3662:26-3662:67)
  4: _0 = dfa::dense::State::<'_> { id: move _10, stride2: move _11, transitions: move _12 }
    SourceInfo(regex-automata/src/dfa/dense.rs:3659:9-3663:10)
  5: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:3663:9-3663:10)
  6: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/dense.rs:3663:9-3663:10)
  7: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:3663:9-3663:10)
  8: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:3664:5-3664:6)
  9: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:3664:5-3664:6)
  10: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/dense.rs:3664:5-3664:6)
  11: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:3664:5-3664:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3664:6-3664:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3655:5-3664:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb5, bb6, bb7]
  succs []

