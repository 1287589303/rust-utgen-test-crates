bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:59:54-64:14)
  1: PlaceMention(_1)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:59:60-59:64)
  2: _6 = discriminant(_1)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:59:60-59:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:59:54-59:64)
      kind: switchInt(move _6) -> [0: bb2, 1: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb2]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:59:60-59:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:59:60-59:64)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  0: StorageLive(_7)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:61:21-61:67)
  1: _7 = aho_corasick::packed::MatchKind::LeftmostFirst
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:61:21-61:67)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:62:21-62:59)
  3: _8 = aho_corasick::MatchKind::LeftmostFirst
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:62:21-62:59)
  4: _5 = (move _7, move _8)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:60:62-63:18)
  5: StorageDead(_8)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:63:17-63:18)
  6: StorageDead(_7)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:63:17-63:18)
  7: PlaceMention(_5)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:59:54-64:14)
  8: StorageLive(_3)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:59:18-59:35)
  9: _3 = (_5.0: aho_corasick::packed::MatchKind)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:59:18-59:35)
  10: StorageLive(_4)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:59:37-59:50)
  11: _4 = (_5.1: aho_corasick::MatchKind)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:59:37-59:50)
  12: StorageDead(_5)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:64:14-64:15)
  13: StorageLive(_9)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:65:17-65:28)
  14: StorageLive(_10)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:17-66:63)
  15: StorageLive(_11)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:17-66:57)
  16: StorageLive(_12)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:17-66:31)
  17: StorageLive(_13)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:17-66:24)
  18: _13 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:17-66:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:17-66:31)
      kind: _12 = core::slice::<impl [B]>::iter(move _13) -> [return: bb3, unwind: bb56]
  }
  preds [bb0, bb0]
  succs [bb3, bb56]

bb3
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:30-66:31)
  1: StorageLive(_14)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:36-66:56)
  2: _14 = {closure@regex-automata/src/util/prefilter/teddy.rs:66:36: 66:39}
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:36-66:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:17-66:57)
      kind: _11 = <core::slice::Iter<'_, B> as core::iter::Iterator>::map::<usize, {closure@regex-automata/src/util/prefilter/teddy.rs:66:36: 66:39}>(move _12, move _14) -> [return: bb4, unwind: bb56]
  }
  preds [bb2]
  succs [bb4, bb56]

bb4
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:56-66:57)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:56-66:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:17-66:63)
      kind: _10 = <core::iter::Map<core::slice::Iter<'_, B>, {closure@regex-automata/src/util/prefilter/teddy.rs:66:36: 66:39}> as core::iter::Iterator>::min(move _11) -> [return: bb5, unwind: bb56]
  }
  preds [bb3]
  succs [bb5, bb56]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:62-66:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:17-66:76)
      kind: _9 = core::option::Option::<usize>::unwrap_or(move _10, const 0_usize) -> [return: bb6, unwind: bb56]
  }
  preds [bb4]
  succs [bb6, bb56]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:66:75-66:76)
  1: FakeRead(ForLet(None), _9)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:65:17-65:28)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:17-67:23)
  3: StorageLive(_16)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-71:26)
  4: StorageLive(_17)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-71:25)
  5: StorageLive(_18)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-70:33)
  6: StorageLive(_19)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-70:33)
  7: StorageLive(_20)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-69:27)
  8: StorageLive(_21)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-69:27)
  9: StorageLive(_22)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-68:47)
  10: StorageLive(_23)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-68:47)
  11: StorageLive(_24)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-67:61)
  12: StorageLive(_25)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-67:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-67:61)
      kind: _25 = aho_corasick::packed::Config::new() -> [return: bb7, unwind: bb56]
  }
  preds [bb5]
  succs [bb7, bb56]

bb7
  0: _24 = &mut _25
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-67:61)
  1: StorageLive(_26)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:68:29-68:46)
  2: _26 = _3
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:68:29-68:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-68:47)
      kind: _23 = aho_corasick::packed::Config::match_kind(move _24, move _26) -> [return: bb8, unwind: bb56]
  }
  preds [bb6]
  succs [bb8, bb56]

bb8
  0: _22 = &(*_23)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-68:47)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:68:46-68:47)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:68:46-68:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-69:27)
      kind: _21 = aho_corasick::packed::Config::builder(move _22) -> [return: bb9, unwind: bb56]
  }
  preds [bb7]
  succs [bb9, bb56]

bb9
  0: _20 = &mut _21
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-69:27)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:69:26-69:27)
  2: StorageLive(_27)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:70:25-70:32)
  3: _27 = _2
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:70:25-70:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-70:33)
      kind: _19 = aho_corasick::packed::Builder::extend::<&[B], &B>(move _20, move _27) -> [return: bb10, unwind: bb55]
  }
  preds [bb8]
  succs [bb10, bb55]

bb10
  0: _18 = &(*_19)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-70:33)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:70:32-70:33)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:70:32-70:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-71:25)
      kind: _17 = aho_corasick::packed::Builder::build(move _18) -> [return: bb11, unwind: bb55]
  }
  preds [bb9]
  succs [bb11, bb55]

bb11
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:24-71:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-71:26)
      kind: _16 = <core::option::Option<aho_corasick::packed::Searcher> as core::ops::Try>::branch(move _17) -> [return: bb12, unwind: bb54]
  }
  preds [bb10]
  succs [bb12, bb54]

bb12
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:25-71:26)
  1: PlaceMention(_16)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-71:26)
  2: _28 = discriminant(_16)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-71:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-71:26)
      kind: switchInt(move _28) -> [0: bb15, 1: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-71:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-71:26)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:25-71:26)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_32)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-71:26)
  1: _32 = move ((_16 as Continue).0: aho_corasick::packed::Searcher)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-71:26)
  2: _15 = move _32
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-71:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:25-71:26)
      kind: drop(_32) -> [return: bb18, unwind: bb53]
  }
  preds [bb12, bb14]
  succs [bb18, bb53]

bb16
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:25-71:26)
  1: _29 = ((_16 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:25-71:26)
  2: StorageLive(_31)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:25-71:26)
  3: _31 = _29
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:25-71:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:26-71:26)
      kind: _0 = <core::option::Option<util::prefilter::teddy::Teddy> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _31) -> [return: bb17, unwind: bb53]
  }
  preds [bb14]
  succs [bb17, bb53]

bb17
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:25-71:26)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:25-71:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
      kind: drop(_16) -> [return: bb41, unwind: bb55]
  }
  preds [bb16]
  succs [bb41, bb55]

bb18
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:25-71:26)
  1: FakeRead(ForLet(None), _15)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:67:17-67:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
      kind: drop(_16) -> [return: bb19, unwind: bb51]
  }
  preds [bb15]
  succs [bb19, bb51]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
      kind: drop(_21) -> [return: bb20, unwind: bb52]
  }
  preds [bb18]
  succs [bb20, bb52]

bb20
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
  4: StorageDead(_16)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
  5: StorageLive(_33)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:17-72:28)
  6: StorageLive(_34)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-77:23)
  7: StorageLive(_35)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-77:22)
  8: StorageLive(_36)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-76:32)
  9: StorageLive(_37)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-75:34)
  10: StorageLive(_38)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-75:34)
  11: StorageLive(_39)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-74:63)
  12: StorageLive(_40)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-74:63)
  13: StorageLive(_41)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-73:43)
  14: StorageLive(_42)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-73:43)
  15: StorageLive(_43)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-72:64)
  16: StorageLive(_44)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-72:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-72:64)
      kind: _44 = aho_corasick::dfa::DFA::builder() -> [return: bb21, unwind: bb52]
  }
  preds [bb19]
  succs [bb21, bb52]

bb21
  0: _43 = &mut _44
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-72:64)
  1: StorageLive(_45)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:73:29-73:42)
  2: _45 = _4
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:73:29-73:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-73:43)
      kind: _42 = aho_corasick::dfa::Builder::match_kind(move _43, move _45) -> [return: bb22, unwind: bb52]
  }
  preds [bb20]
  succs [bb22, bb52]

bb22
  0: _41 = &mut (*_42)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-73:43)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:73:42-73:43)
  2: StorageDead(_43)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:73:42-73:43)
  3: StorageLive(_46)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:74:29-74:62)
  4: _46 = aho_corasick::StartKind::Anchored
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:74:29-74:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-74:63)
      kind: _40 = aho_corasick::dfa::Builder::start_kind(move _41, move _46) -> [return: bb23, unwind: bb52]
  }
  preds [bb21]
  succs [bb23, bb52]

bb23
  0: _39 = &mut (*_40)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-74:63)
  1: StorageDead(_46)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:74:62-74:63)
  2: StorageDead(_41)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:74:62-74:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-75:34)
      kind: _38 = aho_corasick::dfa::Builder::prefilter(move _39, const false) -> [return: bb24, unwind: bb52]
  }
  preds [bb22]
  succs [bb24, bb52]

bb24
  0: _37 = &(*_38)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-75:34)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:75:33-75:34)
  2: StorageLive(_47)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:76:24-76:31)
  3: _47 = _2
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:76:24-76:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-76:32)
      kind: _36 = aho_corasick::dfa::Builder::build::<&[B], &B>(move _37, move _47) -> [return: bb25, unwind: bb52]
  }
  preds [bb23]
  succs [bb25, bb52]

bb25
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:76:31-76:32)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:76:31-76:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-77:22)
      kind: _35 = core::result::Result::<aho_corasick::dfa::DFA, aho_corasick::BuildError>::ok(move _36) -> [return: bb26, unwind: bb50]
  }
  preds [bb24]
  succs [bb26, bb50]

bb26
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:21-77:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-77:23)
      kind: _34 = <core::option::Option<aho_corasick::dfa::DFA> as core::ops::Try>::branch(move _35) -> [return: bb27, unwind: bb49]
  }
  preds [bb25]
  succs [bb27, bb49]

bb27
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:22-77:23)
  1: PlaceMention(_34)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-77:23)
  2: _48 = discriminant(_34)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-77:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-77:23)
      kind: switchInt(move _48) -> [0: bb30, 1: bb29, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb29, bb30]

bb28
  0: FakeRead(ForMatchedPlace(None), _34)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-77:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-77:23)
      kind: unreachable
  }
  preds [bb27]
  succs []

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:22-77:23)
      kind: falseEdge -> [real: bb31, imaginary: bb30]
  }
  preds [bb27]
  succs [bb30, bb31]

bb30
  0: StorageLive(_52)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-77:23)
  1: _52 = move ((_34 as Continue).0: aho_corasick::dfa::DFA)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-77:23)
  2: _33 = move _52
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-77:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:22-77:23)
      kind: drop(_52) -> [return: bb33, unwind: bb48]
  }
  preds [bb27, bb29]
  succs [bb33, bb48]

bb31
  0: StorageLive(_49)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:22-77:23)
  1: _49 = ((_34 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:22-77:23)
  2: StorageLive(_51)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:22-77:23)
  3: _51 = _49
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:22-77:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:31-77:23)
      kind: _0 = <core::option::Option<util::prefilter::teddy::Teddy> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _51) -> [return: bb32, unwind: bb48]
  }
  preds [bb29]
  succs [bb32, bb48]

bb32
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:22-77:23)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:22-77:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:23-77:24)
      kind: drop(_34) -> [return: bb40, unwind: bb52]
  }
  preds [bb31]
  succs [bb40, bb52]

bb33
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:22-77:23)
  1: FakeRead(ForLet(None), _33)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:72:17-72:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:23-77:24)
      kind: drop(_34) -> [return: bb34, unwind: bb47]
  }
  preds [bb30]
  succs [bb34, bb47]

bb34
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:23-77:24)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:23-77:24)
  2: StorageDead(_40)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:23-77:24)
  3: StorageDead(_38)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:23-77:24)
  4: StorageDead(_34)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:23-77:24)
  5: StorageLive(_53)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:18-78:70)
  6: StorageLive(_54)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:36-78:42)
  7: _54 = move _15
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:36-78:42)
  8: StorageLive(_55)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:44-78:55)
  9: _55 = move _33
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:44-78:55)
  10: StorageLive(_56)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:57-78:68)
  11: _56 = _9
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:57-78:68)
  12: _53 = util::prefilter::teddy::Teddy { searcher: move _54, anchored_ac: move _55, minimum_len: move _56 }
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:18-78:70)
  13: StorageDead(_56)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:69-78:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:69-78:70)
      kind: drop(_55) -> [return: bb35, unwind: bb45]
  }
  preds [bb33]
  succs [bb35, bb45]

bb35
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:69-78:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:69-78:70)
      kind: drop(_54) -> [return: bb36, unwind: bb46]
  }
  preds [bb34]
  succs [bb36, bb46]

bb36
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:69-78:70)
  1: _0 = core::option::Option::<util::prefilter::teddy::Teddy>::Some(move _53)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:13-78:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:70-78:71)
      kind: drop(_53) -> [return: bb37, unwind: bb47]
  }
  preds [bb35]
  succs [bb37, bb47]

bb37
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:70-78:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
      kind: drop(_33) -> [return: bb38, unwind: bb52]
  }
  preds [bb36]
  succs [bb38, bb52]

bb38
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
      kind: drop(_15) -> [return: bb39, unwind: bb56]
  }
  preds [bb37]
  succs [bb39, bb56]

bb39
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:80:6-80:6)
      kind: goto -> bb44
  }
  preds [bb38]
  succs [bb44]

bb40
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:23-77:24)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:23-77:24)
  2: StorageDead(_40)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:23-77:24)
  3: StorageDead(_38)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:23-77:24)
  4: StorageDead(_34)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:23-77:24)
  5: StorageDead(_33)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
      kind: drop(_15) -> [return: bb43, unwind: bb56]
  }
  preds [bb32]
  succs [bb43, bb56]

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
      kind: drop(_21) -> [return: bb42, unwind: bb56]
  }
  preds [bb17]
  succs [bb42, bb56]

bb42
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
  4: StorageDead(_16)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb43
  }
  preds [bb41]
  succs [bb43]

bb43
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:80:6-80:6)
      kind: goto -> bb44
  }
  preds [bb40, bb42]
  succs [bb44]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:80:6-80:6)
      kind: return
  }
  preds [bb39, bb43]
  succs []

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:69-78:70)
      kind: drop(_54) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb34]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:78:70-78:71)
      kind: drop(_53) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb35, bb45]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
      kind: drop(_33) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb33, bb36, bb46]
  succs [bb52]

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:23-77:24)
      kind: drop(_34) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb30, bb31]
  succs [bb52]

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:22-77:23)
      kind: drop(_35) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb26]
  succs [bb52]

bb50
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:77:21-77:22)
      kind: drop(_36) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb52]

bb51
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
      kind: drop(_21) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb18]
  succs [bb52]

bb52
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:79:9-79:10)
      kind: drop(_15) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb19, bb20, bb21, bb22, bb23, bb24, bb32, bb37, bb47, bb48, bb49, bb50, bb51]
  succs [bb56]

bb53
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
      kind: drop(_16) -> [return: bb55, unwind terminate(cleanup)]
  }
  preds [bb15, bb16]
  succs [bb55]

bb54
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:25-71:26)
      kind: drop(_17) -> [return: bb55, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb55]

bb55
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:71:26-71:27)
      kind: drop(_21) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb9, bb10, bb17, bb53, bb54]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:39:5-80:6)
      kind: resume
  }
  preds [bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb38, bb40, bb41, bb52, bb55]
  succs []

