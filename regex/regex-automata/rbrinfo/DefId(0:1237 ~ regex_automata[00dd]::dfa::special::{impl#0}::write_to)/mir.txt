bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/special.rs:359:9-361:10)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/special.rs:359:12-359:43)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/special.rs:359:12-359:21)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/special.rs:359:12-359:15)
  4: _6 = &(*_2)
    SourceInfo(regex-automata/src/dfa/special.rs:359:12-359:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:359:12-359:21)
      kind: _5 = core::slice::<impl [u8]>::len(move _6) -> [return: bb1, unwind: bb39]
  }
  preds []
  succs [bb1, bb39]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/special.rs:359:20-359:21)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/special.rs:359:24-359:43)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/special.rs:359:24-359:28)
  3: _8 = &(*_1)
    SourceInfo(regex-automata/src/dfa/special.rs:359:24-359:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:359:24-359:43)
      kind: _7 = dfa::special::Special::write_to_len(move _8) -> [return: bb2, unwind: bb39]
  }
  preds [bb0]
  succs [bb2, bb39]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/special.rs:359:42-359:43)
  1: _4 = Lt(move _5, move _7)
    SourceInfo(regex-automata/src/dfa/special.rs:359:12-359:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:359:12-359:43)
      kind: switchInt(move _4) -> [0: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/special.rs:359:42-359:43)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/special.rs:359:42-359:43)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/special.rs:360:24-360:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:360:24-360:77)
      kind: _10 = util::wire::SerializeError::buffer_too_small(const "special state ids") -> [return: bb4, unwind: bb39]
  }
  preds [bb2]
  succs [bb4, bb39]

bb4
  0: _0 = core::result::Result::<usize, util::wire::SerializeError>::Err(move _10)
    SourceInfo(regex-automata/src/dfa/special.rs:360:20-360:78)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/special.rs:360:77-360:78)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/special.rs:361:9-361:10)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/special.rs:361:9-361:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:384:6-384:6)
      kind: goto -> bb38
  }
  preds [bb3]
  succs [bb38]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/special.rs:359:42-359:43)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/special.rs:359:42-359:43)
  2: _3 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:361:10-361:10)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/special.rs:361:9-361:10)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/special.rs:361:9-361:10)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/special.rs:363:13-363:23)
  6: _11 = const 0_usize
    SourceInfo(regex-automata/src/dfa/special.rs:363:26-363:27)
  7: FakeRead(ForLet(None), _11)
    SourceInfo(regex-automata/src/dfa/special.rs:363:13-363:23)
  8: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/special.rs:364:19-364:59)
  9: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/special.rs:364:30-364:38)
  10: _13 = ((*_1).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:364:30-364:38)
  11: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/special.rs:364:40-364:58)
  12: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/special.rs:364:40-364:58)
  13: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/special.rs:364:48-364:58)
  14: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/special.rs:364:45-364:48)
  15: _17 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/special.rs:364:45-364:48)
  16: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/special.rs:364:49-364:57)
  17: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/special.rs:364:49-364:55)
  18: _19 = _11
    SourceInfo(regex-automata/src/dfa/special.rs:364:49-364:55)
  19: _18 = core::ops::RangeFrom::<usize> { start: move _19 }
    SourceInfo(regex-automata/src/dfa/special.rs:364:49-364:57)
  20: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/special.rs:364:56-364:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:364:48-364:58)
      kind: _16 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _17, move _18) -> [return: bb6, unwind: bb39]
  }
  preds [bb2]
  succs [bb6, bb39]

bb6
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/special.rs:364:57-364:58)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/special.rs:364:57-364:58)
  2: _15 = &mut (*_16)
    SourceInfo(regex-automata/src/dfa/special.rs:364:40-364:58)
  3: _14 = &mut (*_15)
    SourceInfo(regex-automata/src/dfa/special.rs:364:40-364:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:364:19-364:59)
      kind: _12 = util::wire::write_state_id::<E>(move _13, move _14) -> [return: bb7, unwind: bb39]
  }
  preds [bb5]
  succs [bb7, bb39]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/special.rs:364:58-364:59)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/special.rs:364:58-364:59)
  2: _20 = AddWithOverflow(_11, _12)
    SourceInfo(regex-automata/src/dfa/special.rs:364:9-364:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:364:9-364:59)
      kind: assert(!move (_20.1: bool), "attempt to compute `{} + {}`, which would overflow", _11, move _12) -> [success: bb8, unwind: bb39]
  }
  preds [bb6]
  succs [bb8, bb39]

bb8
  0: _11 = move (_20.0: usize)
    SourceInfo(regex-automata/src/dfa/special.rs:364:9-364:59)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/special.rs:364:58-364:59)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/special.rs:364:59-364:60)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/special.rs:364:59-364:60)
  4: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/special.rs:365:19-365:63)
  5: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/special.rs:365:30-365:42)
  6: _22 = ((*_1).1: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:365:30-365:42)
  7: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/special.rs:365:44-365:62)
  8: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/special.rs:365:44-365:62)
  9: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/special.rs:365:52-365:62)
  10: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/special.rs:365:49-365:52)
  11: _26 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/special.rs:365:49-365:52)
  12: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/special.rs:365:53-365:61)
  13: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/special.rs:365:53-365:59)
  14: _28 = _11
    SourceInfo(regex-automata/src/dfa/special.rs:365:53-365:59)
  15: _27 = core::ops::RangeFrom::<usize> { start: move _28 }
    SourceInfo(regex-automata/src/dfa/special.rs:365:53-365:61)
  16: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/special.rs:365:60-365:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:365:52-365:62)
      kind: _25 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _26, move _27) -> [return: bb9, unwind: bb39]
  }
  preds [bb7]
  succs [bb9, bb39]

bb9
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/special.rs:365:61-365:62)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/special.rs:365:61-365:62)
  2: _24 = &mut (*_25)
    SourceInfo(regex-automata/src/dfa/special.rs:365:44-365:62)
  3: _23 = &mut (*_24)
    SourceInfo(regex-automata/src/dfa/special.rs:365:44-365:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:365:19-365:63)
      kind: _21 = util::wire::write_state_id::<E>(move _22, move _23) -> [return: bb10, unwind: bb39]
  }
  preds [bb8]
  succs [bb10, bb39]

bb10
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/special.rs:365:62-365:63)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/special.rs:365:62-365:63)
  2: _29 = AddWithOverflow(_11, _21)
    SourceInfo(regex-automata/src/dfa/special.rs:365:9-365:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:365:9-365:63)
      kind: assert(!move (_29.1: bool), "attempt to compute `{} + {}`, which would overflow", _11, move _21) -> [success: bb11, unwind: bb39]
  }
  preds [bb9]
  succs [bb11, bb39]

bb11
  0: _11 = move (_29.0: usize)
    SourceInfo(regex-automata/src/dfa/special.rs:365:9-365:63)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/special.rs:365:62-365:63)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/special.rs:365:63-365:64)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/special.rs:365:63-365:64)
  4: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/special.rs:366:19-366:65)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/special.rs:366:30-366:44)
  6: _31 = ((*_1).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:366:30-366:44)
  7: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/special.rs:366:46-366:64)
  8: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/special.rs:366:46-366:64)
  9: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/special.rs:366:54-366:64)
  10: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/special.rs:366:51-366:54)
  11: _35 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/special.rs:366:51-366:54)
  12: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/special.rs:366:55-366:63)
  13: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/special.rs:366:55-366:61)
  14: _37 = _11
    SourceInfo(regex-automata/src/dfa/special.rs:366:55-366:61)
  15: _36 = core::ops::RangeFrom::<usize> { start: move _37 }
    SourceInfo(regex-automata/src/dfa/special.rs:366:55-366:63)
  16: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/special.rs:366:62-366:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:366:54-366:64)
      kind: _34 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _35, move _36) -> [return: bb12, unwind: bb39]
  }
  preds [bb10]
  succs [bb12, bb39]

bb12
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/special.rs:366:63-366:64)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/special.rs:366:63-366:64)
  2: _33 = &mut (*_34)
    SourceInfo(regex-automata/src/dfa/special.rs:366:46-366:64)
  3: _32 = &mut (*_33)
    SourceInfo(regex-automata/src/dfa/special.rs:366:46-366:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:366:19-366:65)
      kind: _30 = util::wire::write_state_id::<E>(move _31, move _32) -> [return: bb13, unwind: bb39]
  }
  preds [bb11]
  succs [bb13, bb39]

bb13
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/special.rs:366:64-366:65)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/special.rs:366:64-366:65)
  2: _38 = AddWithOverflow(_11, _30)
    SourceInfo(regex-automata/src/dfa/special.rs:366:9-366:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:366:9-366:65)
      kind: assert(!move (_38.1: bool), "attempt to compute `{} + {}`, which would overflow", _11, move _30) -> [success: bb14, unwind: bb39]
  }
  preds [bb12]
  succs [bb14, bb39]

bb14
  0: _11 = move (_38.0: usize)
    SourceInfo(regex-automata/src/dfa/special.rs:366:9-366:65)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/special.rs:366:64-366:65)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/special.rs:366:65-366:66)
  3: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/special.rs:366:65-366:66)
  4: StorageLive(_39)
    SourceInfo(regex-automata/src/dfa/special.rs:367:19-367:65)
  5: StorageLive(_40)
    SourceInfo(regex-automata/src/dfa/special.rs:367:30-367:44)
  6: _40 = ((*_1).3: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:367:30-367:44)
  7: StorageLive(_41)
    SourceInfo(regex-automata/src/dfa/special.rs:367:46-367:64)
  8: StorageLive(_42)
    SourceInfo(regex-automata/src/dfa/special.rs:367:46-367:64)
  9: StorageLive(_43)
    SourceInfo(regex-automata/src/dfa/special.rs:367:54-367:64)
  10: StorageLive(_44)
    SourceInfo(regex-automata/src/dfa/special.rs:367:51-367:54)
  11: _44 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/special.rs:367:51-367:54)
  12: StorageLive(_45)
    SourceInfo(regex-automata/src/dfa/special.rs:367:55-367:63)
  13: StorageLive(_46)
    SourceInfo(regex-automata/src/dfa/special.rs:367:55-367:61)
  14: _46 = _11
    SourceInfo(regex-automata/src/dfa/special.rs:367:55-367:61)
  15: _45 = core::ops::RangeFrom::<usize> { start: move _46 }
    SourceInfo(regex-automata/src/dfa/special.rs:367:55-367:63)
  16: StorageDead(_46)
    SourceInfo(regex-automata/src/dfa/special.rs:367:62-367:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:367:54-367:64)
      kind: _43 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _44, move _45) -> [return: bb15, unwind: bb39]
  }
  preds [bb13]
  succs [bb15, bb39]

bb15
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/dfa/special.rs:367:63-367:64)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/dfa/special.rs:367:63-367:64)
  2: _42 = &mut (*_43)
    SourceInfo(regex-automata/src/dfa/special.rs:367:46-367:64)
  3: _41 = &mut (*_42)
    SourceInfo(regex-automata/src/dfa/special.rs:367:46-367:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:367:19-367:65)
      kind: _39 = util::wire::write_state_id::<E>(move _40, move _41) -> [return: bb16, unwind: bb39]
  }
  preds [bb14]
  succs [bb16, bb39]

bb16
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/special.rs:367:64-367:65)
  1: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/special.rs:367:64-367:65)
  2: _47 = AddWithOverflow(_11, _39)
    SourceInfo(regex-automata/src/dfa/special.rs:367:9-367:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:367:9-367:65)
      kind: assert(!move (_47.1: bool), "attempt to compute `{} + {}`, which would overflow", _11, move _39) -> [success: bb17, unwind: bb39]
  }
  preds [bb15]
  succs [bb17, bb39]

bb17
  0: _11 = move (_47.0: usize)
    SourceInfo(regex-automata/src/dfa/special.rs:367:9-367:65)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/special.rs:367:64-367:65)
  2: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/special.rs:367:65-367:66)
  3: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/special.rs:367:65-367:66)
  4: StorageLive(_48)
    SourceInfo(regex-automata/src/dfa/special.rs:368:19-368:65)
  5: StorageLive(_49)
    SourceInfo(regex-automata/src/dfa/special.rs:368:30-368:44)
  6: _49 = ((*_1).4: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:368:30-368:44)
  7: StorageLive(_50)
    SourceInfo(regex-automata/src/dfa/special.rs:368:46-368:64)
  8: StorageLive(_51)
    SourceInfo(regex-automata/src/dfa/special.rs:368:46-368:64)
  9: StorageLive(_52)
    SourceInfo(regex-automata/src/dfa/special.rs:368:54-368:64)
  10: StorageLive(_53)
    SourceInfo(regex-automata/src/dfa/special.rs:368:51-368:54)
  11: _53 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/special.rs:368:51-368:54)
  12: StorageLive(_54)
    SourceInfo(regex-automata/src/dfa/special.rs:368:55-368:63)
  13: StorageLive(_55)
    SourceInfo(regex-automata/src/dfa/special.rs:368:55-368:61)
  14: _55 = _11
    SourceInfo(regex-automata/src/dfa/special.rs:368:55-368:61)
  15: _54 = core::ops::RangeFrom::<usize> { start: move _55 }
    SourceInfo(regex-automata/src/dfa/special.rs:368:55-368:63)
  16: StorageDead(_55)
    SourceInfo(regex-automata/src/dfa/special.rs:368:62-368:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:368:54-368:64)
      kind: _52 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _53, move _54) -> [return: bb18, unwind: bb39]
  }
  preds [bb16]
  succs [bb18, bb39]

bb18
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/dfa/special.rs:368:63-368:64)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/special.rs:368:63-368:64)
  2: _51 = &mut (*_52)
    SourceInfo(regex-automata/src/dfa/special.rs:368:46-368:64)
  3: _50 = &mut (*_51)
    SourceInfo(regex-automata/src/dfa/special.rs:368:46-368:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:368:19-368:65)
      kind: _48 = util::wire::write_state_id::<E>(move _49, move _50) -> [return: bb19, unwind: bb39]
  }
  preds [bb17]
  succs [bb19, bb39]

bb19
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/special.rs:368:64-368:65)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/dfa/special.rs:368:64-368:65)
  2: _56 = AddWithOverflow(_11, _48)
    SourceInfo(regex-automata/src/dfa/special.rs:368:9-368:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:368:9-368:65)
      kind: assert(!move (_56.1: bool), "attempt to compute `{} + {}`, which would overflow", _11, move _48) -> [success: bb20, unwind: bb39]
  }
  preds [bb18]
  succs [bb20, bb39]

bb20
  0: _11 = move (_56.0: usize)
    SourceInfo(regex-automata/src/dfa/special.rs:368:9-368:65)
  1: StorageDead(_48)
    SourceInfo(regex-automata/src/dfa/special.rs:368:64-368:65)
  2: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/special.rs:368:65-368:66)
  3: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/special.rs:368:65-368:66)
  4: StorageLive(_57)
    SourceInfo(regex-automata/src/dfa/special.rs:369:19-369:65)
  5: StorageLive(_58)
    SourceInfo(regex-automata/src/dfa/special.rs:369:30-369:44)
  6: _58 = ((*_1).5: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:369:30-369:44)
  7: StorageLive(_59)
    SourceInfo(regex-automata/src/dfa/special.rs:369:46-369:64)
  8: StorageLive(_60)
    SourceInfo(regex-automata/src/dfa/special.rs:369:46-369:64)
  9: StorageLive(_61)
    SourceInfo(regex-automata/src/dfa/special.rs:369:54-369:64)
  10: StorageLive(_62)
    SourceInfo(regex-automata/src/dfa/special.rs:369:51-369:54)
  11: _62 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/special.rs:369:51-369:54)
  12: StorageLive(_63)
    SourceInfo(regex-automata/src/dfa/special.rs:369:55-369:63)
  13: StorageLive(_64)
    SourceInfo(regex-automata/src/dfa/special.rs:369:55-369:61)
  14: _64 = _11
    SourceInfo(regex-automata/src/dfa/special.rs:369:55-369:61)
  15: _63 = core::ops::RangeFrom::<usize> { start: move _64 }
    SourceInfo(regex-automata/src/dfa/special.rs:369:55-369:63)
  16: StorageDead(_64)
    SourceInfo(regex-automata/src/dfa/special.rs:369:62-369:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:369:54-369:64)
      kind: _61 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _62, move _63) -> [return: bb21, unwind: bb39]
  }
  preds [bb19]
  succs [bb21, bb39]

bb21
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/special.rs:369:63-369:64)
  1: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/special.rs:369:63-369:64)
  2: _60 = &mut (*_61)
    SourceInfo(regex-automata/src/dfa/special.rs:369:46-369:64)
  3: _59 = &mut (*_60)
    SourceInfo(regex-automata/src/dfa/special.rs:369:46-369:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:369:19-369:65)
      kind: _57 = util::wire::write_state_id::<E>(move _58, move _59) -> [return: bb22, unwind: bb39]
  }
  preds [bb20]
  succs [bb22, bb39]

bb22
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/dfa/special.rs:369:64-369:65)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/special.rs:369:64-369:65)
  2: _65 = AddWithOverflow(_11, _57)
    SourceInfo(regex-automata/src/dfa/special.rs:369:9-369:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:369:9-369:65)
      kind: assert(!move (_65.1: bool), "attempt to compute `{} + {}`, which would overflow", _11, move _57) -> [success: bb23, unwind: bb39]
  }
  preds [bb21]
  succs [bb23, bb39]

bb23
  0: _11 = move (_65.0: usize)
    SourceInfo(regex-automata/src/dfa/special.rs:369:9-369:65)
  1: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/special.rs:369:64-369:65)
  2: StorageDead(_61)
    SourceInfo(regex-automata/src/dfa/special.rs:369:65-369:66)
  3: StorageDead(_60)
    SourceInfo(regex-automata/src/dfa/special.rs:369:65-369:66)
  4: StorageLive(_66)
    SourceInfo(regex-automata/src/dfa/special.rs:370:19-370:65)
  5: StorageLive(_67)
    SourceInfo(regex-automata/src/dfa/special.rs:370:30-370:44)
  6: _67 = ((*_1).6: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:370:30-370:44)
  7: StorageLive(_68)
    SourceInfo(regex-automata/src/dfa/special.rs:370:46-370:64)
  8: StorageLive(_69)
    SourceInfo(regex-automata/src/dfa/special.rs:370:46-370:64)
  9: StorageLive(_70)
    SourceInfo(regex-automata/src/dfa/special.rs:370:54-370:64)
  10: StorageLive(_71)
    SourceInfo(regex-automata/src/dfa/special.rs:370:51-370:54)
  11: _71 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/special.rs:370:51-370:54)
  12: StorageLive(_72)
    SourceInfo(regex-automata/src/dfa/special.rs:370:55-370:63)
  13: StorageLive(_73)
    SourceInfo(regex-automata/src/dfa/special.rs:370:55-370:61)
  14: _73 = _11
    SourceInfo(regex-automata/src/dfa/special.rs:370:55-370:61)
  15: _72 = core::ops::RangeFrom::<usize> { start: move _73 }
    SourceInfo(regex-automata/src/dfa/special.rs:370:55-370:63)
  16: StorageDead(_73)
    SourceInfo(regex-automata/src/dfa/special.rs:370:62-370:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:370:54-370:64)
      kind: _70 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _71, move _72) -> [return: bb24, unwind: bb39]
  }
  preds [bb22]
  succs [bb24, bb39]

bb24
  0: StorageDead(_72)
    SourceInfo(regex-automata/src/dfa/special.rs:370:63-370:64)
  1: StorageDead(_71)
    SourceInfo(regex-automata/src/dfa/special.rs:370:63-370:64)
  2: _69 = &mut (*_70)
    SourceInfo(regex-automata/src/dfa/special.rs:370:46-370:64)
  3: _68 = &mut (*_69)
    SourceInfo(regex-automata/src/dfa/special.rs:370:46-370:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:370:19-370:65)
      kind: _66 = util::wire::write_state_id::<E>(move _67, move _68) -> [return: bb25, unwind: bb39]
  }
  preds [bb23]
  succs [bb25, bb39]

bb25
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/dfa/special.rs:370:64-370:65)
  1: StorageDead(_67)
    SourceInfo(regex-automata/src/dfa/special.rs:370:64-370:65)
  2: _74 = AddWithOverflow(_11, _66)
    SourceInfo(regex-automata/src/dfa/special.rs:370:9-370:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:370:9-370:65)
      kind: assert(!move (_74.1: bool), "attempt to compute `{} + {}`, which would overflow", _11, move _66) -> [success: bb26, unwind: bb39]
  }
  preds [bb24]
  succs [bb26, bb39]

bb26
  0: _11 = move (_74.0: usize)
    SourceInfo(regex-automata/src/dfa/special.rs:370:9-370:65)
  1: StorageDead(_66)
    SourceInfo(regex-automata/src/dfa/special.rs:370:64-370:65)
  2: StorageDead(_70)
    SourceInfo(regex-automata/src/dfa/special.rs:370:65-370:66)
  3: StorageDead(_69)
    SourceInfo(regex-automata/src/dfa/special.rs:370:65-370:66)
  4: StorageLive(_75)
    SourceInfo(regex-automata/src/dfa/special.rs:371:19-371:65)
  5: StorageLive(_76)
    SourceInfo(regex-automata/src/dfa/special.rs:371:30-371:44)
  6: _76 = ((*_1).7: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:371:30-371:44)
  7: StorageLive(_77)
    SourceInfo(regex-automata/src/dfa/special.rs:371:46-371:64)
  8: StorageLive(_78)
    SourceInfo(regex-automata/src/dfa/special.rs:371:46-371:64)
  9: StorageLive(_79)
    SourceInfo(regex-automata/src/dfa/special.rs:371:54-371:64)
  10: StorageLive(_80)
    SourceInfo(regex-automata/src/dfa/special.rs:371:51-371:54)
  11: _80 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/special.rs:371:51-371:54)
  12: StorageLive(_81)
    SourceInfo(regex-automata/src/dfa/special.rs:371:55-371:63)
  13: StorageLive(_82)
    SourceInfo(regex-automata/src/dfa/special.rs:371:55-371:61)
  14: _82 = _11
    SourceInfo(regex-automata/src/dfa/special.rs:371:55-371:61)
  15: _81 = core::ops::RangeFrom::<usize> { start: move _82 }
    SourceInfo(regex-automata/src/dfa/special.rs:371:55-371:63)
  16: StorageDead(_82)
    SourceInfo(regex-automata/src/dfa/special.rs:371:62-371:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:371:54-371:64)
      kind: _79 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _80, move _81) -> [return: bb27, unwind: bb39]
  }
  preds [bb25]
  succs [bb27, bb39]

bb27
  0: StorageDead(_81)
    SourceInfo(regex-automata/src/dfa/special.rs:371:63-371:64)
  1: StorageDead(_80)
    SourceInfo(regex-automata/src/dfa/special.rs:371:63-371:64)
  2: _78 = &mut (*_79)
    SourceInfo(regex-automata/src/dfa/special.rs:371:46-371:64)
  3: _77 = &mut (*_78)
    SourceInfo(regex-automata/src/dfa/special.rs:371:46-371:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:371:19-371:65)
      kind: _75 = util::wire::write_state_id::<E>(move _76, move _77) -> [return: bb28, unwind: bb39]
  }
  preds [bb26]
  succs [bb28, bb39]

bb28
  0: StorageDead(_77)
    SourceInfo(regex-automata/src/dfa/special.rs:371:64-371:65)
  1: StorageDead(_76)
    SourceInfo(regex-automata/src/dfa/special.rs:371:64-371:65)
  2: _83 = AddWithOverflow(_11, _75)
    SourceInfo(regex-automata/src/dfa/special.rs:371:9-371:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:371:9-371:65)
      kind: assert(!move (_83.1: bool), "attempt to compute `{} + {}`, which would overflow", _11, move _75) -> [success: bb29, unwind: bb39]
  }
  preds [bb27]
  succs [bb29, bb39]

bb29
  0: _11 = move (_83.0: usize)
    SourceInfo(regex-automata/src/dfa/special.rs:371:9-371:65)
  1: StorageDead(_75)
    SourceInfo(regex-automata/src/dfa/special.rs:371:64-371:65)
  2: StorageDead(_79)
    SourceInfo(regex-automata/src/dfa/special.rs:371:65-371:66)
  3: StorageDead(_78)
    SourceInfo(regex-automata/src/dfa/special.rs:371:65-371:66)
  4: StorageLive(_84)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:9-61:10)
  5: StorageLive(_85)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15-51:32)
  6: StorageLive(_86)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:16-51:22)
  7: StorageLive(_87)
    SourceInfo(regex-automata/src/dfa/special.rs:374:13-374:32)
  8: StorageLive(_88)
    SourceInfo(regex-automata/src/dfa/special.rs:374:13-374:17)
  9: _88 = &(*_1)
    SourceInfo(regex-automata/src/dfa/special.rs:374:13-374:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:374:13-374:32)
      kind: _87 = dfa::special::Special::write_to_len(move _88) -> [return: bb30, unwind: bb39]
  }
  preds [bb28]
  succs [bb30, bb39]

bb30
  0: StorageDead(_88)
    SourceInfo(regex-automata/src/dfa/special.rs:374:31-374:32)
  1: _86 = &_87
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:16-51:22)
  2: StorageLive(_89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:24-51:31)
  3: _89 = &_11
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:24-51:31)
  4: _85 = (move _86, move _89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15-51:32)
  5: StorageDead(_89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:31-51:32)
  6: StorageDead(_86)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:31-51:32)
  7: PlaceMention(_85)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15-51:32)
  8: StorageLive(_90)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:14-52:22)
  9: _90 = (_85.0: &usize)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:14-52:22)
  10: StorageLive(_91)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:24-52:33)
  11: _91 = (_85.1: &usize)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:24-52:33)
  12: StorageLive(_92)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:21-53:46)
  13: StorageLive(_93)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:22-53:31)
  14: _93 = (*_90)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:22-53:31)
  15: StorageLive(_94)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:35-53:45)
  16: _94 = (*_91)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:35-53:45)
  17: _92 = Eq(move _93, move _94)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:21-53:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:21-53:46)
      kind: switchInt(move _92) -> [0: bb32, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb32]

bb31
  0: StorageDead(_94)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  1: StorageDead(_93)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  2: _84 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:59:18-59:18)
  3: StorageDead(_92)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:59:17-59:18)
  4: StorageDead(_91)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:60:13-60:14)
  5: StorageDead(_90)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:60:13-60:14)
  6: StorageDead(_87)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  7: StorageDead(_85)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  8: StorageDead(_84)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  9: StorageLive(_108)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:9-61:10)
  10: StorageLive(_109)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15-51:32)
  11: StorageLive(_110)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:16-51:22)
  12: StorageLive(_111)
    SourceInfo(regex-automata/src/dfa/special.rs:379:13-379:23)
  13: StorageLive(_112)
    SourceInfo(regex-automata/src/dfa/special.rs:379:13-379:19)
  14: _112 = _11
    SourceInfo(regex-automata/src/dfa/special.rs:379:13-379:19)
  15: _113 = Eq(const 8_usize, const 0_usize)
    SourceInfo(regex-automata/src/dfa/special.rs:379:13-379:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:379:13-379:23)
      kind: assert(!move _113, "attempt to calculate the remainder of `{}` with a divisor of zero", _112) -> [success: bb34, unwind: bb39]
  }
  preds [bb30]
  succs [bb34, bb39]

bb32
  0: StorageDead(_94)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  1: StorageDead(_93)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  2: StorageLive(_96)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:54:25-54:29)
  3: _96 = core::panicking::AssertKind::Eq
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:54:32-54:65)
  4: FakeRead(ForLet(None), _96)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:54:25-54:29)
  5: StorageLive(_97)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:21-58:146)
  6: StorageLive(_98)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:54-58:58)
  7: _98 = move _96
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:54-58:58)
  8: StorageLive(_99)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  9: StorageLive(_100)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  10: _100 = &(*_90)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  11: _99 = &(*_100)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  12: StorageLive(_101)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  13: StorageLive(_102)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  14: _102 = &(*_91)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  15: _101 = &(*_102)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  16: StorageLive(_103)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:85-58:145)
  17: StorageLive(_104)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:114-58:144)
  18: StorageLive(_105)
    SourceInfo(regex-automata/src/dfa/special.rs:376:13-376:56)
  19: StorageLive(_106)
    SourceInfo(regex-automata/src/dfa/special.rs:376:13-376:56)
  20: StorageLive(_107)
    SourceInfo(regex-automata/src/dfa/special.rs:376:13-376:56)
  21: _107 = [const "expected to write certain number of bytes"]
    SourceInfo(regex-automata/src/dfa/special.rs:376:13-376:56)
  22: _106 = &_107
    SourceInfo(regex-automata/src/dfa/special.rs:376:13-376:56)
  23: _105 = &(*_106)
    SourceInfo(regex-automata/src/dfa/special.rs:376:13-376:56)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:114-58:144)
      kind: _104 = core::fmt::Arguments::<'_>::new_const::<1>(move _105) -> [return: bb33, unwind: bb39]
  }
  preds [bb30]
  succs [bb33, bb39]

bb33
  0: StorageDead(_105)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:143-58:144)
  1: _103 = core::option::Option::<core::fmt::Arguments<'_>>::Some(move _104)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:85-58:145)
  2: StorageDead(_104)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:144-58:145)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:21-58:146)
      kind: _97 = core::panicking::assert_failed::<usize, usize>(move _98, move _99, move _101, move _103) -> bb39
  }
  preds [bb32]
  succs [bb39]

bb34
  0: _111 = Rem(move _112, const 8_usize)
    SourceInfo(regex-automata/src/dfa/special.rs:379:13-379:23)
  1: StorageDead(_112)
    SourceInfo(regex-automata/src/dfa/special.rs:379:22-379:23)
  2: _110 = &_111
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:16-51:22)
  3: StorageLive(_114)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:24-51:31)
  4: StorageLive(_115)
    SourceInfo(regex-automata/src/dfa/special.rs:380:13-380:14)
  5: _115 = const 0_usize
    SourceInfo(regex-automata/src/dfa/special.rs:380:13-380:14)
  6: _114 = &_115
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:24-51:31)
  7: _109 = (move _110, move _114)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15-51:32)
  8: StorageDead(_114)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:31-51:32)
  9: StorageDead(_110)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:31-51:32)
  10: PlaceMention(_109)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15-51:32)
  11: StorageLive(_116)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:14-52:22)
  12: _116 = (_109.0: &usize)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:14-52:22)
  13: StorageLive(_117)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:24-52:33)
  14: _117 = (_109.1: &usize)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:24-52:33)
  15: StorageLive(_118)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:21-53:46)
  16: StorageLive(_119)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:22-53:31)
  17: _119 = (*_116)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:22-53:31)
  18: StorageLive(_120)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:35-53:45)
  19: _120 = (*_117)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:35-53:45)
  20: _118 = Eq(move _119, move _120)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:21-53:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:21-53:46)
      kind: switchInt(move _118) -> [0: bb36, otherwise: bb35]
  }
  preds [bb31]
  succs [bb35, bb36]

bb35
  0: StorageDead(_120)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  1: StorageDead(_119)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  2: _108 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:59:18-59:18)
  3: StorageDead(_118)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:59:17-59:18)
  4: StorageDead(_117)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:60:13-60:14)
  5: StorageDead(_116)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:60:13-60:14)
  6: StorageDead(_115)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  7: StorageDead(_111)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  8: StorageDead(_109)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  9: StorageDead(_108)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  10: StorageLive(_134)
    SourceInfo(regex-automata/src/dfa/special.rs:383:12-383:18)
  11: _134 = _11
    SourceInfo(regex-automata/src/dfa/special.rs:383:12-383:18)
  12: _0 = core::result::Result::<usize, util::wire::SerializeError>::Ok(move _134)
    SourceInfo(regex-automata/src/dfa/special.rs:383:9-383:19)
  13: StorageDead(_134)
    SourceInfo(regex-automata/src/dfa/special.rs:383:18-383:19)
  14: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/special.rs:384:5-384:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:384:6-384:6)
      kind: goto -> bb38
  }
  preds [bb34]
  succs [bb38]

bb36
  0: StorageDead(_120)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  1: StorageDead(_119)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  2: StorageLive(_122)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:54:25-54:29)
  3: _122 = core::panicking::AssertKind::Eq
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:54:32-54:65)
  4: FakeRead(ForLet(None), _122)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:54:25-54:29)
  5: StorageLive(_123)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:21-58:146)
  6: StorageLive(_124)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:54-58:58)
  7: _124 = move _122
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:54-58:58)
  8: StorageLive(_125)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  9: StorageLive(_126)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  10: _126 = &(*_116)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  11: _125 = &(*_126)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  12: StorageLive(_127)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  13: StorageLive(_128)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  14: _128 = &(*_117)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  15: _127 = &(*_128)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  16: StorageLive(_129)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:85-58:145)
  17: StorageLive(_130)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:114-58:144)
  18: StorageLive(_131)
    SourceInfo(regex-automata/src/dfa/special.rs:381:13-381:71)
  19: StorageLive(_132)
    SourceInfo(regex-automata/src/dfa/special.rs:381:13-381:71)
  20: StorageLive(_133)
    SourceInfo(regex-automata/src/dfa/special.rs:381:13-381:71)
  21: _133 = [const "expected to write multiple of 8 bytes for special states"]
    SourceInfo(regex-automata/src/dfa/special.rs:381:13-381:71)
  22: _132 = &_133
    SourceInfo(regex-automata/src/dfa/special.rs:381:13-381:71)
  23: _131 = &(*_132)
    SourceInfo(regex-automata/src/dfa/special.rs:381:13-381:71)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:114-58:144)
      kind: _130 = core::fmt::Arguments::<'_>::new_const::<1>(move _131) -> [return: bb37, unwind: bb39]
  }
  preds [bb34]
  succs [bb37, bb39]

bb37
  0: StorageDead(_131)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:143-58:144)
  1: _129 = core::option::Option::<core::fmt::Arguments<'_>>::Some(move _130)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:85-58:145)
  2: StorageDead(_130)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:144-58:145)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:21-58:146)
      kind: _123 = core::panicking::assert_failed::<usize, usize>(move _124, move _125, move _127, move _129) -> bb39
  }
  preds [bb36]
  succs [bb39]

bb38
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:384:6-384:6)
      kind: return
  }
  preds [bb4, bb35]
  succs []

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:353:5-384:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb15, bb16, bb17, bb18, bb19, bb20, bb21, bb22, bb23, bb24, bb25, bb26, bb27, bb28, bb29, bb31, bb32, bb33, bb36, bb37]
  succs []

