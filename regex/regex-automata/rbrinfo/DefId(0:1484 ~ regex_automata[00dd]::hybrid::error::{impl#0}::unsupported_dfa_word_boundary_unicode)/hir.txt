Body {
    params: [],
    value: Expr {
        hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).15),
        kind: Block(
            Block {
                stmts: [
                    Stmt {
                        hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).1),
                        kind: Let(
                            LetStmt {
                                pat: Pat {
                                    hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).4),
                                    kind: Binding(
                                        BindingMode(
                                            No,
                                            Not,
                                        ),
                                        HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).4),
                                        msg#0,
                                        None,
                                    ),
                                    span: regex-automata/src/hybrid/error.rs:58:13: 58:16 (#0),
                                    default_binding_modes: true,
                                },
                                ty: None,
                                init: Some(
                                    Expr {
                                        hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).2),
                                        kind: Lit(
                                            Spanned {
                                                node: Str(
                                                    "cannot build lazy DFAs for regexes with Unicode word boundaries; switch to ASCII word boundaries, or heuristically enable Unicode word boundaries or use a different regex engine",
                                                    Cooked,
                                                ),
                                                span: regex-automata/src/hybrid/error.rs:58:19: 61:43 (#0),
                                            },
                                        ),
                                        span: regex-automata/src/hybrid/error.rs:58:19: 61:43 (#0),
                                    },
                                ),
                                els: None,
                                hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).3),
                                span: regex-automata/src/hybrid/error.rs:58:9: 61:44 (#0),
                                source: Normal,
                            },
                        ),
                        span: regex-automata/src/hybrid/error.rs:58:9: 61:44 (#0),
                    },
                ],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).5),
                        kind: Struct(
                            Resolved(
                                None,
                                Path {
                                    span: regex-automata/src/hybrid/error.rs:62:9: 62:19 (#0),
                                    res: Def(
                                        Struct,
                                        DefId(0:5057 ~ regex_automata[00dd]::hybrid::error::BuildError),
                                    ),
                                    segments: [
                                        PathSegment {
                                            ident: BuildError#0,
                                            hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).6),
                                            res: Def(
                                                Struct,
                                                DefId(0:5057 ~ regex_automata[00dd]::hybrid::error::BuildError),
                                            ),
                                            args: None,
                                            infer_args: true,
                                        },
                                    ],
                                },
                            ),
                            [
                                ExprField {
                                    hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).7),
                                    ident: kind#0,
                                    expr: Expr {
                                        hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).8),
                                        kind: Call(
                                            Expr {
                                                hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).9),
                                                kind: Path(
                                                    Resolved(
                                                        None,
                                                        Path {
                                                            span: regex-automata/src/hybrid/error.rs:62:28: 62:55 (#0),
                                                            res: Def(
                                                                Ctor(
                                                                    Variant,
                                                                    Fn,
                                                                ),
                                                                DefId(0:5073 ~ regex_automata[00dd]::hybrid::error::BuildErrorKind::Unsupported::{constructor#0}),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    ident: BuildErrorKind#0,
                                                                    hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).10),
                                                                    res: Def(
                                                                        Enum,
                                                                        DefId(0:5063 ~ regex_automata[00dd]::hybrid::error::BuildErrorKind),
                                                                    ),
                                                                    args: None,
                                                                    infer_args: true,
                                                                },
                                                                PathSegment {
                                                                    ident: Unsupported#0,
                                                                    hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).11),
                                                                    res: Def(
                                                                        Ctor(
                                                                            Variant,
                                                                            Fn,
                                                                        ),
                                                                        DefId(0:5073 ~ regex_automata[00dd]::hybrid::error::BuildErrorKind::Unsupported::{constructor#0}),
                                                                    ),
                                                                    args: None,
                                                                    infer_args: true,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                ),
                                                span: regex-automata/src/hybrid/error.rs:62:28: 62:55 (#0),
                                            },
                                            [
                                                Expr {
                                                    hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).12),
                                                    kind: Path(
                                                        Resolved(
                                                            None,
                                                            Path {
                                                                span: regex-automata/src/hybrid/error.rs:62:56: 62:59 (#0),
                                                                res: Local(
                                                                    HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).4),
                                                                ),
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: msg#0,
                                                                        hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).13),
                                                                        res: Local(
                                                                            HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).4),
                                                                        ),
                                                                        args: None,
                                                                        infer_args: true,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                    span: regex-automata/src/hybrid/error.rs:62:56: 62:59 (#0),
                                                },
                                            ],
                                        ),
                                        span: regex-automata/src/hybrid/error.rs:62:28: 62:60 (#0),
                                    },
                                    span: regex-automata/src/hybrid/error.rs:62:22: 62:60 (#0),
                                    is_shorthand: false,
                                },
                            ],
                            None,
                        ),
                        span: regex-automata/src/hybrid/error.rs:62:9: 62:62 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:1484 ~ regex_automata[00dd]::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode).14),
                rules: DefaultBlock,
                span: regex-automata/src/hybrid/error.rs:57:73: 63:6 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: regex-automata/src/hybrid/error.rs:57:73: 63:6 (#0),
    },
}