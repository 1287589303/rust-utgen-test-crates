bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:9-1959:10)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:26-1957:46)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:26-1957:39)
  3: _5 = &mut ((*_1).11: core::option::Option<hybrid::dfa::SearchProgress>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:26-1957:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:26-1957:46)
      kind: _4 = core::option::Option::<hybrid::dfa::SearchProgress>::take(move _5) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:45-1957:46)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:26-1957:46)
  2: _6 = discriminant(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:26-1957:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:16-1957:23)
      kind: switchInt(move _6) -> [1: bb2, otherwise: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:16-1957:23)
      kind: falseEdge -> [real: bb3, imaginary: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:21-1957:22)
  1: _7 = move ((_4 as Some).0: hybrid::dfa::SearchProgress)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:21-1957:22)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1958:36-1958:43)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1958:36-1958:37)
  4: _9 = &_7
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1958:36-1958:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1958:36-1958:43)
      kind: _8 = hybrid::dfa::SearchProgress::len(move _9) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1958:42-1958:43)
  1: _10 = AddWithOverflow(((*_1).10: usize), _8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1958:13-1958:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1958:13-1958:43)
      kind: assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).10: usize), move _8) -> [success: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: ((*_1).10: usize) = move (_10.0: usize)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1958:13-1958:43)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1958:42-1958:43)
  2: _3 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:47-1959:10)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1959:9-1959:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:9-1959:10)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: _3 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1959:10-1959:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1957:9-1959:10)
      kind: goto -> bb7
  }
  preds [bb1, bb2]
  succs [bb7]

bb7
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1959:9-1959:10)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1959:9-1959:10)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1960:25-1960:63)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1960:30-1960:62)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1960:54-1960:56)
  5: _13 = _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1960:54-1960:56)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1960:58-1960:60)
  7: _14 = _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1960:58-1960:60)
  8: _12 = hybrid::dfa::SearchProgress { start: move _13, at: move _14 }
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1960:30-1960:62)
  9: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1960:61-1960:62)
  10: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1960:61-1960:62)
  11: _11 = core::option::Option::<hybrid::dfa::SearchProgress>::Some(move _12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1960:25-1960:63)
  12: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1960:62-1960:63)
  13: ((*_1).11: core::option::Option<hybrid::dfa::SearchProgress>) = move _11
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1960:9-1960:63)
  14: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1960:62-1960:63)
  15: _0 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1954:47-1961:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1961:6-1961:6)
      kind: return
  }
  preds [bb5, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1954:5-1961:6)
      kind: resume
  }
  preds [bb0, bb3, bb4]
  succs []

