bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:13-606:14)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:50)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:49)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:21)
  4: _7 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:21)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:36-606:41)
  6: _8 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:36-606:41)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:43-606:48)
  8: _9 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:43-606:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:49)
      kind: _6 = meta::strategy::Core::search_nofail(move _7, move _8, move _9) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:48-606:49)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:48-606:49)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:48-606:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:50)
      kind: _5 = <core::option::Option<util::search::Match> as core::ops::Try>::branch(move _6) -> [return: bb2, unwind: bb12]
  }
  preds [bb0]
  succs [bb2, bb12]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:49-606:50)
  1: PlaceMention(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:50)
  2: _10 = discriminant(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:50)
      kind: switchInt(move _10) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:50)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:606:49-606:50)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:50)
  1: _14 = ((_5 as Continue).0: util::search::Match)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:50)
  2: _4 = _14
    SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:50)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:49-606:50)
  4: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:13-606:14)
  5: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:50-606:51)
  6: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:607:14-607:50)
  7: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:607:29-607:40)
  8: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:607:29-607:30)
  9: _17 = &_4
    SourceInfo(regex-automata/src/meta/strategy.rs:607:29-607:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:607:29-607:40)
      kind: _16 = util::search::Match::pattern(move _17) -> [return: bb8, unwind: bb12]
  }
  preds [bb2, bb4]
  succs [bb8, bb12]

bb6
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:49-606:50)
  1: _11 = ((_5 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:49-606:50)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:49-606:50)
  3: _13 = _11
    SourceInfo(regex-automata/src/meta/strategy.rs:606:49-606:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:606:17-606:50)
      kind: _0 = <core::option::Option<util::search::HalfMatch> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _13) -> [return: bb7, unwind: bb12]
  }
  preds [bb4]
  succs [bb7, bb12]

bb7
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:49-606:50)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:49-606:50)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:606:50-606:51)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:608:5-608:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:608:6-608:6)
      kind: goto -> bb11
  }
  preds [bb6]
  succs [bb11]

bb8
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:607:39-607:40)
  1: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:607:42-607:49)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:607:42-607:43)
  3: _19 = &_4
    SourceInfo(regex-automata/src/meta/strategy.rs:607:42-607:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:607:42-607:49)
      kind: _18 = util::search::Match::end(move _19) -> [return: bb9, unwind: bb12]
  }
  preds [bb5]
  succs [bb9, bb12]

bb9
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:607:48-607:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:607:14-607:50)
      kind: _15 = util::search::HalfMatch::new(move _16, move _18) -> [return: bb10, unwind: bb12]
  }
  preds [bb8]
  succs [bb10, bb12]

bb10
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:607:49-607:50)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:607:49-607:50)
  2: _0 = core::option::Option::<util::search::HalfMatch>::Some(move _15)
    SourceInfo(regex-automata/src/meta/strategy.rs:607:9-607:51)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:607:50-607:51)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:608:5-608:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:608:6-608:6)
      kind: goto -> bb11
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:608:6-608:6)
      kind: return
  }
  preds [bb7, bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:597:5-608:6)
      kind: resume
  }
  preds [bb0, bb1, bb5, bb6, bb8, bb9]
  succs []

