bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1369:9-1371:10)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1369:12-1369:46)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1369:12-1369:32)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1369:12-1369:32)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1369:12-1369:17)
  5: _8 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1369:12-1369:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1369:12-1369:32)
      kind: _7 = util::search::Input::<'_>::get_anchored(move _8) -> [return: bb1, unwind: bb39]
  }
  preds []
  succs [bb1, bb39]

bb1
  0: _6 = &_7
    SourceInfo(regex-automata/src/meta/strategy.rs:1369:12-1369:32)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1369:31-1369:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1369:12-1369:46)
      kind: _5 = util::search::Anchored::is_anchored(move _6) -> [return: bb2, unwind: bb39]
  }
  preds [bb0]
  succs [bb2, bb39]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1369:12-1369:46)
      kind: switchInt(move _5) -> [0: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1369:45-1369:46)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1369:45-1369:46)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1370:20-1370:29)
  3: _10 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1370:20-1370:29)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1370:42-1370:47)
  5: _11 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1370:42-1370:47)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1370:49-1370:54)
  7: _12 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1370:49-1370:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1370:20-1370:55)
      kind: _0 = <meta::strategy::Core as meta::strategy::Strategy>::search_half(move _10, move _11, move _12) -> [return: bb4, unwind: bb39]
  }
  preds [bb2]
  succs [bb4, bb39]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1370:54-1370:55)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1370:54-1370:55)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1370:54-1370:55)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1371:9-1371:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1371:9-1371:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1417:6-1417:6)
      kind: goto -> bb38
  }
  preds [bb3]
  succs [bb38]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1369:45-1369:46)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1369:45-1369:46)
  2: _4 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1371:10-1371:10)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1371:9-1371:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1371:9-1371:10)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:15-1372:55)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:15-1372:19)
  7: _14 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:15-1372:19)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:42-1372:47)
  9: _15 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:42-1372:47)
  10: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:49-1372:54)
  11: _16 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:49-1372:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1372:15-1372:55)
      kind: _13 = meta::strategy::ReverseSuffix::try_search_half_start(move _14, move _15, move _16) -> [return: bb6, unwind: bb39]
  }
  preds [bb2]
  succs [bb6, bb39]

bb6
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:54-1372:55)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:54-1372:55)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:54-1372:55)
  3: PlaceMention(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:15-1372:55)
  4: _19 = discriminant(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:15-1372:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1372:9-1372:55)
      kind: switchInt(move _19) -> [0: bb11, 1: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb11]

bb7
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:15-1372:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1372:15-1372:55)
      kind: unreachable
  }
  preds [bb6, bb8, bb11]
  succs []

bb8
  0: _17 = discriminant(((_13 as Err).0: meta::error::RetryError))
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:15-1372:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1372:9-1372:55)
      kind: switchInt(move _17) -> [0: bb9, 1: bb10, otherwise: bb7]
  }
  preds [bb6]
  succs [bb7, bb9, bb10]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1373:13-1373:45)
      kind: falseEdge -> [real: bb14, imaginary: bb10]
  }
  preds [bb8]
  succs [bb10, bb14]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1377:13-1377:40)
      kind: falseEdge -> [real: bb16, imaginary: bb11]
  }
  preds [bb8, bb9]
  succs [bb11, bb16]

bb11
  0: _18 = discriminant(((_13 as Ok).0: core::option::Option<util::search::HalfMatch>))
    SourceInfo(regex-automata/src/meta/strategy.rs:1372:15-1372:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1372:9-1372:55)
      kind: switchInt(move _18) -> [0: bb12, 1: bb13, otherwise: bb7]
  }
  preds [bb6, bb10]
  succs [bb7, bb12, bb13]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1384:13-1384:21)
      kind: falseEdge -> [real: bb18, imaginary: bb13]
  }
  preds [bb11]
  succs [bb13, bb18]

bb13
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1385:21-1385:29)
  1: _28 = ((((_13 as Ok).0: core::option::Option<util::search::HalfMatch>) as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/meta/strategy.rs:1385:21-1385:29)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1395:21-1395:29)
  3: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1395:32-1397:69)
  4: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1395:32-1396:29)
  5: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1395:32-1395:37)
  6: _32 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1395:32-1395:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1395:32-1396:29)
      kind: _31 = <util::search::Input<'_> as core::clone::Clone>::clone(move _32) -> [return: bb19, unwind: bb39]
  }
  preds [bb11, bb12]
  succs [bb19, bb39]

bb14
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1373:39-1373:43)
  1: _20 = move ((((_13 as Err).0: meta::error::RetryError) as Quadratic).0: meta::error::RetryQuadraticError)
    SourceInfo(regex-automata/src/meta/strategy.rs:1373:39-1373:43)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1375:17-1375:26)
  3: _21 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1375:17-1375:26)
  4: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1375:39-1375:44)
  5: _22 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1375:39-1375:44)
  6: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1375:46-1375:51)
  7: _23 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1375:46-1375:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1375:17-1375:52)
      kind: _0 = <meta::strategy::Core as meta::strategy::Strategy>::search_half(move _21, move _22, move _23) -> [return: bb15, unwind: bb39]
  }
  preds [bb9]
  succs [bb15, bb39]

bb15
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1375:51-1375:52)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1375:51-1375:52)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1375:51-1375:52)
  3: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1376:13-1376:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1376:13-1376:14)
      kind: goto -> bb37
  }
  preds [bb14]
  succs [bb37]

bb16
  0: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1377:34-1377:38)
  1: _24 = move ((((_13 as Err).0: meta::error::RetryError) as Fail).0: meta::error::RetryFailError)
    SourceInfo(regex-automata/src/meta/strategy.rs:1377:34-1377:38)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1382:17-1382:26)
  3: _25 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1382:17-1382:26)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1382:46-1382:51)
  5: _26 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1382:46-1382:51)
  6: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1382:53-1382:58)
  7: _27 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1382:53-1382:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1382:17-1382:59)
      kind: _0 = meta::strategy::Core::search_half_nofail(move _25, move _26, move _27) -> [return: bb17, unwind: bb39]
  }
  preds [bb10]
  succs [bb17, bb39]

bb17
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1382:58-1382:59)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1382:58-1382:59)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1382:58-1382:59)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1383:13-1383:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1383:13-1383:14)
      kind: goto -> bb37
  }
  preds [bb16]
  succs [bb37]

bb18
  0: _0 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/meta/strategy.rs:1384:25-1384:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1384:25-1384:29)
      kind: goto -> bb37
  }
  preds [bb12]
  succs [bb37]

bb19
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1396:28-1396:29)
  1: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1397:31-1397:68)
  2: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1397:49-1397:67)
  3: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1397:49-1397:57)
  4: _35 = &_28
    SourceInfo(regex-automata/src/meta/strategy.rs:1397:49-1397:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1397:49-1397:67)
      kind: _34 = util::search::HalfMatch::pattern(move _35) -> [return: bb20, unwind: bb39]
  }
  preds [bb13]
  succs [bb20, bb39]

bb20
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1397:66-1397:67)
  1: _33 = util::search::Anchored::Pattern(move _34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1397:31-1397:68)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1397:67-1397:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1395:32-1397:69)
      kind: _30 = util::search::Input::<'_>::anchored(move _31, move _33) -> [return: bb21, unwind: bb39]
  }
  preds [bb19]
  succs [bb21, bb39]

bb21
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1397:68-1397:69)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1397:68-1397:69)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1398:27-1398:57)
  3: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1398:27-1398:44)
  4: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1398:27-1398:35)
  5: _38 = &_28
    SourceInfo(regex-automata/src/meta/strategy.rs:1398:27-1398:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1398:27-1398:44)
      kind: _37 = util::search::HalfMatch::offset(move _38) -> [return: bb22, unwind: bb39]
  }
  preds [bb20]
  succs [bb22, bb39]

bb22
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1398:43-1398:44)
  1: StorageLive(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1398:46-1398:57)
  2: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:1398:46-1398:51)
  3: _40 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1398:46-1398:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1398:46-1398:57)
      kind: _39 = util::search::Input::<'_>::end(move _40) -> [return: bb23, unwind: bb39]
  }
  preds [bb21]
  succs [bb23, bb39]

bb23
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:1398:56-1398:57)
  1: _36 = core::ops::Range::<usize> { start: move _37, end: move _39 }
    SourceInfo(regex-automata/src/meta/strategy.rs:1398:27-1398:57)
  2: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1398:56-1398:57)
  3: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1398:56-1398:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1395:32-1398:58)
      kind: _29 = util::search::Input::<'_>::span::<core::ops::Range<usize>>(move _30, move _36) -> [return: bb24, unwind: bb39]
  }
  preds [bb22]
  succs [bb24, bb39]

bb24
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1398:57-1398:58)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1398:57-1398:58)
  2: FakeRead(ForLet(None), _29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1395:21-1395:29)
  3: StorageLive(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:23-1399:65)
  4: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:23-1399:27)
  5: _42 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:23-1399:27)
  6: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:48-1399:53)
  7: _43 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:48-1399:53)
  8: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:55-1399:64)
  9: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:55-1399:64)
  10: _45 = &_29
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:55-1399:64)
  11: _44 = &(*_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:55-1399:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1399:23-1399:65)
      kind: _41 = meta::strategy::ReverseSuffix::try_search_half_fwd(move _42, move _43, move _44) -> [return: bb25, unwind: bb39]
  }
  preds [bb23]
  succs [bb25, bb39]

bb25
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:64-1399:65)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:64-1399:65)
  2: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:64-1399:65)
  3: PlaceMention(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:23-1399:65)
  4: _47 = discriminant(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:23-1399:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1399:17-1399:65)
      kind: switchInt(move _47) -> [0: bb28, 1: bb27, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27, bb28]

bb26
  0: FakeRead(ForMatchedPlace(None), _41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:23-1399:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1399:23-1399:65)
      kind: unreachable
  }
  preds [bb25, bb28]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1400:21-1400:30)
      kind: falseEdge -> [real: bb31, imaginary: bb28]
  }
  preds [bb25]
  succs [bb28, bb31]

bb28
  0: _46 = discriminant(((_41 as Ok).0: core::option::Option<util::search::HalfMatch>))
    SourceInfo(regex-automata/src/meta/strategy.rs:1399:23-1399:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1399:17-1399:65)
      kind: switchInt(move _46) -> [0: bb29, 1: bb30, otherwise: bb26]
  }
  preds [bb25, bb27]
  succs [bb26, bb29, bb30]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1407:21-1407:29)
      kind: falseEdge -> [real: bb33, imaginary: bb30]
  }
  preds [bb28]
  succs [bb30, bb33]

bb30
  0: StorageLive(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1413:29-1413:35)
  1: _61 = ((((_41 as Ok).0: core::option::Option<util::search::HalfMatch>) as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/meta/strategy.rs:1413:29-1413:35)
  2: StorageLive(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1413:46-1413:52)
  3: _62 = _61
    SourceInfo(regex-automata/src/meta/strategy.rs:1413:46-1413:52)
  4: _0 = core::option::Option::<util::search::HalfMatch>::Some(move _62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1413:41-1413:53)
  5: StorageDead(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1413:52-1413:53)
  6: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1413:52-1413:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1413:52-1413:53)
      kind: goto -> bb36
  }
  preds [bb28, bb29]
  succs [bb36]

bb31
  0: StorageLive(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:1400:25-1400:29)
  1: _48 = move ((_41 as Err).0: meta::error::RetryFailError)
    SourceInfo(regex-automata/src/meta/strategy.rs:1400:25-1400:29)
  2: StorageLive(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:1405:25-1405:34)
  3: _49 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1405:25-1405:34)
  4: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1405:54-1405:59)
  5: _50 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1405:54-1405:59)
  6: StorageLive(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1405:61-1405:66)
  7: _51 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1405:61-1405:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1405:25-1405:67)
      kind: _0 = meta::strategy::Core::search_half_nofail(move _49, move _50, move _51) -> [return: bb32, unwind: bb39]
  }
  preds [bb27]
  succs [bb32, bb39]

bb32
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1405:66-1405:67)
  1: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1405:66-1405:67)
  2: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:1405:66-1405:67)
  3: StorageDead(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:1406:21-1406:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1406:21-1406:22)
      kind: goto -> bb36
  }
  preds [bb31]
  succs [bb36]

bb33
  0: StorageLive(_53)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  1: StorageLive(_54)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageLive(_55)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  3: StorageLive(_56)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  4: StorageLive(_57)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  5: _57 = [const "internal error: entered unreachable code: suffix match plus reverse match implies there must be a match"]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  6: _56 = &_57
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  7: _55 = &(*_56)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  8: StorageLive(_58)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  9: StorageLive(_59)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  10: StorageLive(_60)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _60 = core::fmt::rt::Argument::<'_>::none() -> [return: bb34, unwind: bb39]
  }
  preds [bb29]
  succs [bb34, bb39]

bb34
  0: _59 = &_60
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  1: _58 = &(*_59)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _54 = core::fmt::Arguments::<'_>::new_v1::<1, 0>(move _55, move _58) -> [return: bb35, unwind: bb39]
  }
  preds [bb33]
  succs [bb35, bb39]

bb35
  0: StorageDead(_58)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_55)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _53 = core::panicking::panic_fmt(move _54) -> bb39
  }
  preds [bb34]
  succs [bb39]

bb36
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1415:13-1415:14)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1415:13-1415:14)
  2: StorageDead(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1415:13-1415:14)
  3: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1415:13-1415:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1415:13-1415:14)
      kind: goto -> bb37
  }
  preds [bb30, bb32]
  succs [bb37]

bb37
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1417:5-1417:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1417:6-1417:6)
      kind: goto -> bb38
  }
  preds [bb15, bb17, bb18, bb36]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1417:6-1417:6)
      kind: return
  }
  preds [bb4, bb37]
  succs []

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1364:5-1417:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb13, bb14, bb16, bb19, bb20, bb21, bb22, bb23, bb24, bb31, bb33, bb34, bb35]
  succs []

