bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1123:9-1129:10)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1123:13-1123:52)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1123:13-1123:31)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1123:13-1123:31)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1123:13-1123:22)
  5: _7 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:1123:13-1123:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1123:13-1123:31)
      kind: _6 = meta::regex::RegexInfo::config(move _7) -> [return: bb1, unwind: bb67]
  }
  preds []
  succs [bb1, bb67]

bb1
  0: _5 = &(*_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1123:13-1123:31)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1123:30-1123:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1123:13-1123:52)
      kind: _4 = meta::regex::Config::get_auto_prefilter(move _5) -> [return: bb2, unwind: bb67]
  }
  preds [bb0]
  succs [bb2, bb67]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1123:13-1123:52)
      kind: switchInt(move _4) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1123:51-1123:52)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1123:51-1123:52)
  2: _3 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1129:10-1129:10)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1129:9-1129:10)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1129:9-1129:10)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1145:9-1151:10)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1145:12-1145:48)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1145:12-1145:21)
  8: _12 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:1145:12-1145:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1145:12-1145:48)
      kind: _11 = meta::regex::RegexInfo::is_always_anchored_start(move _12) -> [return: bb6, unwind: bb67]
  }
  preds [bb2]
  succs [bb6, bb67]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1123:51-1123:52)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1123:51-1123:52)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:1128:24-1128:28)
  3: _9 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1128:24-1128:28)
  4: _0 = core::result::Result::<meta::strategy::ReverseSuffix, meta::strategy::Core>::Err(move _9)
    SourceInfo(regex-automata/src/meta/strategy.rs:1128:20-1128:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1128:28-1128:29)
      kind: drop(_9) -> [return: bb5, unwind: bb67]
  }
  preds [bb2]
  succs [bb5, bb67]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:1128:28-1128:29)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1129:9-1129:10)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1129:9-1129:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb4]
  succs [bb60]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1145:12-1145:48)
      kind: switchInt(move _11) -> [0: bb9, otherwise: bb7]
  }
  preds [bb3]
  succs [bb7, bb9]

bb7
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1145:47-1145:48)
  1: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1150:24-1150:28)
  2: _14 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1150:24-1150:28)
  3: _0 = core::result::Result::<meta::strategy::ReverseSuffix, meta::strategy::Core>::Err(move _14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1150:20-1150:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1150:28-1150:29)
      kind: drop(_14) -> [return: bb8, unwind: bb67]
  }
  preds [bb6]
  succs [bb8, bb67]

bb8
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1150:28-1150:29)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1151:9-1151:10)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1151:9-1151:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb7]
  succs [bb60]

bb9
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1145:47-1145:48)
  1: _10 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1151:10-1151:10)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1151:9-1151:10)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1151:9-1151:10)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1155:9-1161:10)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1155:13-1155:34)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:1155:13-1155:24)
  7: _17 = &(_1.7: meta::wrappers::Hybrid)
    SourceInfo(regex-automata/src/meta/strategy.rs:1155:13-1155:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1155:13-1155:34)
      kind: _16 = meta::wrappers::Hybrid::is_some(move _17) -> [return: bb10, unwind: bb67]
  }
  preds [bb6]
  succs [bb10, bb67]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1155:13-1155:34)
      kind: switchInt(move _16) -> [0: bb12, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12]

bb11
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:1155:33-1155:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1155:58-1161:10)
      kind: goto -> bb17
  }
  preds [bb10]
  succs [bb17]

bb12
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:1155:33-1155:34)
  1: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:1155:39-1155:57)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:1155:39-1155:47)
  3: _19 = &(_1.8: meta::wrappers::DFA)
    SourceInfo(regex-automata/src/meta/strategy.rs:1155:39-1155:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1155:39-1155:57)
      kind: _18 = meta::wrappers::DFA::is_some(move _19) -> [return: bb13, unwind: bb67]
  }
  preds [bb10]
  succs [bb13, bb67]

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1155:39-1155:57)
      kind: switchInt(move _18) -> [0: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15]

bb14
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:1155:56-1155:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1155:58-1161:10)
      kind: goto -> bb17
  }
  preds [bb13]
  succs [bb17]

bb15
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:1155:56-1155:57)
  1: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1160:24-1160:28)
  2: _21 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1160:24-1160:28)
  3: _0 = core::result::Result::<meta::strategy::ReverseSuffix, meta::strategy::Core>::Err(move _21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1160:20-1160:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1160:28-1160:29)
      kind: drop(_21) -> [return: bb16, unwind: bb67]
  }
  preds [bb13]
  succs [bb16, bb67]

bb16
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1160:28-1160:29)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:1161:9-1161:10)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1161:9-1161:10)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1161:9-1161:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb15]
  succs [bb60]

bb17
  0: _15 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1161:10-1161:10)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:1161:9-1161:10)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1161:9-1161:10)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1161:9-1161:10)
  4: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1162:9-1168:10)
  5: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1162:12-1162:60)
  6: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1162:12-1162:29)
  7: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1162:12-1162:20)
  8: _25 = &(_1.1: core::option::Option<util::prefilter::Prefilter>)
    SourceInfo(regex-automata/src/meta/strategy.rs:1162:12-1162:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1162:12-1162:29)
      kind: _24 = core::option::Option::<util::prefilter::Prefilter>::as_ref(move _25) -> [return: bb18, unwind: bb67]
  }
  preds [bb11, bb14]
  succs [bb18, bb67]

bb18
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1162:28-1162:29)
  1: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1162:44-1162:59)
  2: _26 = {closure@regex-automata/src/meta/strategy.rs:1162:44: 1162:47}
    SourceInfo(regex-automata/src/meta/strategy.rs:1162:44-1162:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1162:12-1162:60)
      kind: _23 = core::option::Option::<&util::prefilter::Prefilter>::map_or::<bool, {closure@regex-automata/src/meta/strategy.rs:1162:44: 1162:47}>(move _24, const false, move _26) -> [return: bb19, unwind: bb67]
  }
  preds [bb17]
  succs [bb19, bb67]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1162:12-1162:60)
      kind: switchInt(move _23) -> [0: bb22, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb22]

bb20
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1162:59-1162:60)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1162:59-1162:60)
  2: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1167:24-1167:28)
  3: _28 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1167:24-1167:28)
  4: _0 = core::result::Result::<meta::strategy::ReverseSuffix, meta::strategy::Core>::Err(move _28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1167:20-1167:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1167:28-1167:29)
      kind: drop(_28) -> [return: bb21, unwind: bb67]
  }
  preds [bb19]
  succs [bb21, bb67]

bb21
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1167:28-1167:29)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1168:9-1168:10)
  2: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1168:9-1168:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb20]
  succs [bb60]

bb22
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1162:59-1162:60)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1162:59-1162:60)
  2: _22 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1168:10-1168:10)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1168:9-1168:10)
  4: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1168:9-1168:10)
  5: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1169:13-1169:17)
  6: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1169:20-1169:38)
  7: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1169:20-1169:38)
  8: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1169:20-1169:29)
  9: _32 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:1169:20-1169:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1169:20-1169:38)
      kind: _31 = meta::regex::RegexInfo::config(move _32) -> [return: bb23, unwind: bb67]
  }
  preds [bb19]
  succs [bb23, bb67]

bb23
  0: _30 = &(*_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1169:20-1169:38)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1169:37-1169:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1169:20-1169:55)
      kind: _29 = meta::regex::Config::get_match_kind(move _30) -> [return: bb24, unwind: bb67]
  }
  preds [bb22]
  succs [bb24, bb67]

bb24
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1169:54-1169:55)
  1: FakeRead(ForLet(None), _29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1169:13-1169:17)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1169:55-1169:56)
  3: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1170:13-1170:21)
  4: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1170:57-1170:61)
  5: _34 = _29
    SourceInfo(regex-automata/src/meta/strategy.rs:1170:57-1170:61)
  6: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1170:63-1170:67)
  7: _35 = &(*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1170:63-1170:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1170:24-1170:68)
      kind: _33 = util::prefilter::suffixes::<&regex_syntax::hir::Hir>(move _34, move _35) -> [return: bb25, unwind: bb67]
  }
  preds [bb23]
  succs [bb25, bb67]

bb25
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1170:67-1170:68)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1170:67-1170:68)
  2: FakeRead(ForLet(None), _33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1170:13-1170:21)
  3: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1171:13-1171:16)
  4: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1171:25-1171:57)
  5: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1171:25-1171:33)
  6: _38 = &_33
    SourceInfo(regex-automata/src/meta/strategy.rs:1171:25-1171:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1171:25-1171:57)
      kind: _37 = regex_syntax::hir::literal::Seq::longest_common_suffix(move _38) -> [return: bb26, unwind: bb66]
  }
  preds [bb24]
  succs [bb26, bb66]

bb26
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1171:56-1171:57)
  1: PlaceMention(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1171:25-1171:57)
  2: _40 = discriminant(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1171:25-1171:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1171:19-1171:57)
      kind: switchInt(move _40) -> [0: bb28, 1: bb29, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb28, bb29]

bb27
  0: FakeRead(ForMatchedPlace(None), _37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1171:25-1171:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1171:25-1171:57)
      kind: unreachable
  }
  preds [bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1172:13-1172:17)
      kind: falseEdge -> [real: bb31, imaginary: bb29]
  }
  preds [bb26]
  succs [bb29, bb31]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1179:13-1179:22)
      kind: falseEdge -> [real: bb33, imaginary: bb30]
  }
  preds [bb26, bb28]
  succs [bb30, bb33]

bb30
  0: StorageLive(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:1186:18-1186:21)
  1: _49 = ((_37 as Some).0: &[u8])
    SourceInfo(regex-automata/src/meta/strategy.rs:1186:18-1186:21)
  2: _36 = _49
    SourceInfo(regex-automata/src/meta/strategy.rs:1186:26-1186:29)
  3: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:1186:28-1186:29)
  4: FakeRead(ForLet(None), _36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1171:13-1171:16)
  5: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1187:10-1187:11)
  6: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:13-1188:16)
  7: StorageLive(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:25-1188:53)
  8: StorageLive(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:40-1188:44)
  9: _52 = _29
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:40-1188:44)
  10: StorageLive(_53)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:46-1188:52)
  11: StorageLive(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:46-1188:52)
  12: StorageLive(_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:46-1188:52)
  13: StorageLive(_56)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:47-1188:52)
  14: StorageLive(_57)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:48-1188:51)
  15: _57 = _36
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:48-1188:51)
  16: _56 = [move _57]
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:47-1188:52)
  17: StorageDead(_57)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:51-1188:52)
  18: _55 = &_56
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:46-1188:52)
  19: _54 = &(*_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:46-1188:52)
  20: _53 = move _54 as &[&[u8]] (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:46-1188:52)
  21: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:51-1188:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1188:25-1188:53)
      kind: _51 = util::prefilter::Prefilter::new::<&[u8]>(move _52, move _53) -> [return: bb38, unwind: bb66]
  }
  preds [bb29, bb36]
  succs [bb38, bb66]

bb31
  0: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1177:28-1177:32)
  1: _42 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1177:28-1177:32)
  2: _0 = core::result::Result::<meta::strategy::ReverseSuffix, meta::strategy::Core>::Err(move _42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1177:24-1177:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1177:32-1177:33)
      kind: drop(_42) -> [return: bb32, unwind: bb66]
  }
  preds [bb28]
  succs [bb32, bb66]

bb32
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1177:32-1177:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1177:17-1177:33)
      kind: goto -> bb57
  }
  preds [bb31]
  succs [bb57]

bb33
  0: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1179:18-1179:21)
  1: _44 = &((_37 as Some).0: &[u8])
    SourceInfo(regex-automata/src/meta/strategy.rs:1179:18-1179:21)
  2: _39 = &fake shallow _37
    SourceInfo(regex-automata/src/meta/strategy.rs:1171:25-1171:57)
  3: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1179:26-1179:40)
  4: StorageLive(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:1179:26-1179:29)
  5: _46 = &(*(*_44))
    SourceInfo(regex-automata/src/meta/strategy.rs:1179:26-1179:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1179:26-1179:40)
      kind: _45 = core::slice::<impl [u8]>::is_empty(move _46) -> [return: bb34, unwind: bb66]
  }
  preds [bb29]
  succs [bb34, bb66]

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1179:26-1179:40)
      kind: switchInt(move _45) -> [0: bb36, otherwise: bb35]
  }
  preds [bb33]
  succs [bb35, bb36]

bb35
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:1179:39-1179:40)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1179:39-1179:40)
  2: FakeRead(ForMatchGuard, _39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1179:39-1179:40)
  3: FakeRead(ForGuardBinding, _44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1179:39-1179:40)
  4: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:1179:18-1179:21)
  5: _43 = ((_37 as Some).0: &[u8])
    SourceInfo(regex-automata/src/meta/strategy.rs:1179:18-1179:21)
  6: StorageLive(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:1184:28-1184:32)
  7: _48 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1184:28-1184:32)
  8: _0 = core::result::Result::<meta::strategy::ReverseSuffix, meta::strategy::Core>::Err(move _48)
    SourceInfo(regex-automata/src/meta/strategy.rs:1184:24-1184:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1184:32-1184:33)
      kind: drop(_48) -> [return: bb37, unwind: bb66]
  }
  preds [bb34]
  succs [bb37, bb66]

bb36
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:1179:39-1179:40)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1179:39-1179:40)
  2: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1185:13-1185:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1179:26-1179:40)
      kind: goto -> bb30
  }
  preds [bb34]
  succs [bb30]

bb37
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:1184:32-1184:33)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:1185:13-1185:14)
  2: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1185:13-1185:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb57
  }
  preds [bb35]
  succs [bb57]

bb38
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:52-1188:53)
  1: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:52-1188:53)
  2: PlaceMention(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:25-1188:53)
  3: _58 = discriminant(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:25-1188:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1188:19-1188:53)
      kind: switchInt(move _58) -> [0: bb41, 1: bb40, otherwise: bb39]
  }
  preds [bb30]
  succs [bb39, bb40, bb41]

bb39
  0: FakeRead(ForMatchedPlace(None), _51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:25-1188:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1188:25-1188:53)
      kind: unreachable
  }
  preds [bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1189:13-1189:22)
      kind: falseEdge -> [real: bb42, imaginary: bb41]
  }
  preds [bb38]
  succs [bb41, bb42]

bb41
  0: StorageLive(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1196:28-1196:32)
  1: _61 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1196:28-1196:32)
  2: _0 = core::result::Result::<meta::strategy::ReverseSuffix, meta::strategy::Core>::Err(move _61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1196:24-1196:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1196:32-1196:33)
      kind: drop(_61) -> [return: bb44, unwind: bb65]
  }
  preds [bb38, bb40]
  succs [bb44, bb65]

bb42
  0: StorageLive(_59)
    SourceInfo(regex-automata/src/meta/strategy.rs:1189:18-1189:21)
  1: _59 = move ((_51 as Some).0: util::prefilter::Prefilter)
    SourceInfo(regex-automata/src/meta/strategy.rs:1189:18-1189:21)
  2: _50 = move _59
    SourceInfo(regex-automata/src/meta/strategy.rs:1189:26-1189:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1189:28-1189:29)
      kind: drop(_59) -> [return: bb43, unwind: bb65]
  }
  preds [bb40]
  succs [bb43, bb65]

bb43
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/meta/strategy.rs:1189:28-1189:29)
  1: FakeRead(ForLet(None), _50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1188:13-1188:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1198:10-1198:11)
      kind: drop(_51) -> [return: bb45, unwind: bb64]
  }
  preds [bb42]
  succs [bb45, bb64]

bb44
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1196:32-1196:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1198:10-1198:11)
      kind: drop(_51) -> [return: bb55, unwind: bb66]
  }
  preds [bb41]
  succs [bb55, bb66]

bb45
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/meta/strategy.rs:1198:10-1198:11)
  1: StorageDead(_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1198:10-1198:11)
  2: StorageDead(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1198:10-1198:11)
  3: StorageLive(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1199:9-1206:10)
  4: StorageLive(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:1199:13-1199:26)
  5: StorageLive(_64)
    SourceInfo(regex-automata/src/meta/strategy.rs:1199:13-1199:16)
  6: _64 = &_50
    SourceInfo(regex-automata/src/meta/strategy.rs:1199:13-1199:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1199:13-1199:26)
      kind: _63 = util::prefilter::Prefilter::is_fast(move _64) -> [return: bb46, unwind: bb64]
  }
  preds [bb43]
  succs [bb46, bb64]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1199:13-1199:26)
      kind: switchInt(move _63) -> [0: bb48, otherwise: bb47]
  }
  preds [bb45]
  succs [bb47, bb48]

bb47
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/meta/strategy.rs:1199:25-1199:26)
  1: _62 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1206:10-1206:10)
  2: StorageDead(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:1206:9-1206:10)
  3: StorageDead(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1206:9-1206:10)
  4: StorageLive(_67)
    SourceInfo(regex-automata/src/meta/strategy.rs:1207:12-1207:39)
  5: StorageLive(_68)
    SourceInfo(regex-automata/src/meta/strategy.rs:1207:28-1207:32)
  6: _68 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1207:28-1207:32)
  7: StorageLive(_69)
    SourceInfo(regex-automata/src/meta/strategy.rs:1207:34-1207:37)
  8: _69 = move _50
    SourceInfo(regex-automata/src/meta/strategy.rs:1207:34-1207:37)
  9: _67 = meta::strategy::ReverseSuffix { core: move _68, pre: move _69 }
    SourceInfo(regex-automata/src/meta/strategy.rs:1207:12-1207:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1207:38-1207:39)
      kind: drop(_69) -> [return: bb50, unwind: bb62]
  }
  preds [bb46]
  succs [bb50, bb62]

bb48
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/meta/strategy.rs:1199:25-1199:26)
  1: StorageLive(_66)
    SourceInfo(regex-automata/src/meta/strategy.rs:1205:24-1205:28)
  2: _66 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1205:24-1205:28)
  3: _0 = core::result::Result::<meta::strategy::ReverseSuffix, meta::strategy::Core>::Err(move _66)
    SourceInfo(regex-automata/src/meta/strategy.rs:1205:20-1205:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1205:28-1205:29)
      kind: drop(_66) -> [return: bb49, unwind: bb64]
  }
  preds [bb46]
  succs [bb49, bb64]

bb49
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/meta/strategy.rs:1205:28-1205:29)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:1206:9-1206:10)
  2: StorageDead(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1206:9-1206:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
      kind: drop(_50) -> [return: bb56, unwind: bb66]
  }
  preds [bb48]
  succs [bb56, bb66]

bb50
  0: StorageDead(_69)
    SourceInfo(regex-automata/src/meta/strategy.rs:1207:38-1207:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1207:38-1207:39)
      kind: drop(_68) -> [return: bb51, unwind: bb63]
  }
  preds [bb47]
  succs [bb51, bb63]

bb51
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/meta/strategy.rs:1207:38-1207:39)
  1: _0 = core::result::Result::<meta::strategy::ReverseSuffix, meta::strategy::Core>::Ok(move _67)
    SourceInfo(regex-automata/src/meta/strategy.rs:1207:9-1207:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1207:39-1207:40)
      kind: drop(_67) -> [return: bb52, unwind: bb64]
  }
  preds [bb50]
  succs [bb52, bb64]

bb52
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/meta/strategy.rs:1207:39-1207:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
      kind: drop(_50) -> [return: bb53, unwind: bb66]
  }
  preds [bb51]
  succs [bb53, bb66]

bb53
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
  1: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
      kind: drop(_33) -> [return: bb54, unwind: bb67]
  }
  preds [bb52]
  succs [bb54, bb67]

bb54
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
      kind: drop(_1) -> [return: bb61, unwind: bb68]
  }
  preds [bb53]
  succs [bb61, bb68]

bb55
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/meta/strategy.rs:1198:10-1198:11)
  1: StorageDead(_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1198:10-1198:11)
  2: StorageDead(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1198:10-1198:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb56
  }
  preds [bb44]
  succs [bb56]

bb56
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb58
  }
  preds [bb49, bb55]
  succs [bb58]

bb57
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1187:10-1187:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb58
  }
  preds [bb32, bb37]
  succs [bb58]

bb58
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
      kind: drop(_33) -> [return: bb59, unwind: bb67]
  }
  preds [bb56, bb57]
  succs [bb59, bb67]

bb59
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb58]
  succs [bb60]

bb60
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
      kind: drop(_1) -> [return: bb61, unwind: bb68]
  }
  preds [bb5, bb8, bb16, bb21, bb59]
  succs [bb61, bb68]

bb61
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1208:6-1208:6)
      kind: return
  }
  preds [bb54, bb60]
  succs []

bb62
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1207:38-1207:39)
      kind: drop(_68) -> [return: bb63, unwind terminate(cleanup)]
  }
  preds [bb47]
  succs [bb63]

bb63
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1207:39-1207:40)
      kind: drop(_67) -> [return: bb64, unwind terminate(cleanup)]
  }
  preds [bb50, bb62]
  succs [bb64]

bb64
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
      kind: drop(_50) -> [return: bb66, unwind terminate(cleanup)]
  }
  preds [bb43, bb45, bb48, bb51, bb63]
  succs [bb66]

bb65
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1198:10-1198:11)
      kind: drop(_51) -> [return: bb66, unwind terminate(cleanup)]
  }
  preds [bb41, bb42]
  succs [bb66]

bb66
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
      kind: drop(_33) -> [return: bb67, unwind terminate(cleanup)]
  }
  preds [bb25, bb30, bb31, bb33, bb35, bb44, bb49, bb52, bb64, bb65]
  succs [bb67]

bb67
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1208:5-1208:6)
      kind: drop(_1) -> [return: bb68, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb3, bb4, bb7, bb9, bb12, bb15, bb17, bb18, bb20, bb22, bb23, bb24, bb53, bb58, bb66]
  succs [bb68]

bb68
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1122:5-1208:6)
      kind: resume
  }
  preds [bb54, bb60, bb67]
  succs []

