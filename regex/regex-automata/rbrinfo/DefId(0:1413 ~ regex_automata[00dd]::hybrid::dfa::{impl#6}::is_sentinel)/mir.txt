bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:9-2723:32)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:9-2723:11)
  2: _4 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:9-2723:11)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:15-2723:32)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:15-2723:32)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:15-2723:19)
  6: _7 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:15-2723:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:15-2723:32)
      kind: _6 = hybrid::dfa::LazyRef::<'_, '_>::unknown_id(move _7) -> [return: bb1, unwind: bb13]
  }
  preds []
  succs [bb1, bb13]

bb1
  0: _5 = &_6
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:15-2723:32)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:31-2723:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:9-2723:32)
      kind: _3 = <hybrid::id::LazyStateID as core::cmp::PartialEq>::eq(move _4, move _5) -> [return: bb2, unwind: bb13]
  }
  preds [bb0]
  succs [bb2, bb13]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:9-2723:32)
      kind: switchInt(move _3) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:31-2723:32)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:31-2723:32)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:31-2723:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:9-2723:80)
      kind: goto -> bb8
  }
  preds [bb2]
  succs [bb8]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:31-2723:32)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:31-2723:32)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:31-2723:32)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:36-2723:56)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:36-2723:38)
  5: _9 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:36-2723:38)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:42-2723:56)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:42-2723:56)
  8: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:42-2723:46)
  9: _12 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:42-2723:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:42-2723:56)
      kind: _11 = hybrid::dfa::LazyRef::<'_, '_>::dead_id(move _12) -> [return: bb5, unwind: bb13]
  }
  preds [bb2]
  succs [bb5, bb13]

bb5
  0: _10 = &_11
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:42-2723:56)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:55-2723:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:36-2723:56)
      kind: _8 = <hybrid::id::LazyStateID as core::cmp::PartialEq>::eq(move _9, move _10) -> [return: bb6, unwind: bb13]
  }
  preds [bb4]
  succs [bb6, bb13]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:36-2723:56)
      kind: switchInt(move _8) -> [0: bb9, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:55-2723:56)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:55-2723:56)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:55-2723:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:9-2723:80)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  0: _0 = const true
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:9-2723:80)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:9-2723:80)
      kind: goto -> bb12
  }
  preds [bb3, bb7]
  succs [bb12]

bb9
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:55-2723:56)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:55-2723:56)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:55-2723:56)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:60-2723:62)
  4: _13 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:60-2723:62)
  5: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:66-2723:80)
  6: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:66-2723:80)
  7: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:66-2723:70)
  8: _16 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:66-2723:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:66-2723:80)
      kind: _15 = hybrid::dfa::LazyRef::<'_, '_>::quit_id(move _16) -> [return: bb10, unwind: bb13]
  }
  preds [bb6]
  succs [bb10, bb13]

bb10
  0: _14 = &_15
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:66-2723:80)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:79-2723:80)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:60-2723:80)
      kind: _0 = <hybrid::id::LazyStateID as core::cmp::PartialEq>::eq(move _13, move _14) -> [return: bb11, unwind: bb13]
  }
  preds [bb9]
  succs [bb11, bb13]

bb11
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:79-2723:80)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:79-2723:80)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:79-2723:80)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:9-2723:80)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:79-2723:80)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2723:79-2723:80)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2724:6-2724:6)
      kind: return
  }
  preds [bb8, bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2722:5-2724:6)
      kind: resume
  }
  preds [bb0, bb1, bb4, bb5, bb9, bb10]
  succs []

