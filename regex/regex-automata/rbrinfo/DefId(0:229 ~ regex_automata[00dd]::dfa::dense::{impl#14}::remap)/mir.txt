bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:24-3530:43)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:24-3530:28)
  4: _7 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:24-3530:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3530:24-3530:43)
      kind: _6 = dfa::dense::TransitionTable::<std::vec::Vec<u32>>::alphabet_len(move _7) -> [return: bb1, unwind: bb20]
  }
  preds []
  succs [bb1, bb20]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:42-3530:43)
  1: _5 = core::ops::Range::<usize> { start: const 0_usize, end: move _6 }
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:42-3530:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
      kind: _4 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _5) -> [return: bb2, unwind: bb20]
  }
  preds [bb0]
  succs [bb2, bb20]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:42-3530:43)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  3: _8 = move _4
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3530:9-3534:10)
      kind: goto -> bb3
  }
  preds [bb1]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3530:9-3534:10)
      kind: falseUnwind -> [real: bb4, unwind: bb20]
  }
  preds [bb2, bb18]
  succs [bb4, bb20]

bb4
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  4: _13 = &mut _8
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  5: _12 = &mut (*_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
      kind: _11 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _12) -> [return: bb5, unwind: bb20]
  }
  preds [bb3]
  succs [bb5, bb20]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:42-3530:43)
  1: PlaceMention(_11)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  2: _14 = discriminant(_11)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
      kind: switchInt(move _14) -> [0: bb7, 1: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _11)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3530:21-3530:43)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3530:9-3534:10)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:13-3530:17)
  1: _16 = ((_11 as Some).0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:13-3530:17)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/dense.rs:3531:17-3531:18)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/dense.rs:3531:21-3531:34)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/dense.rs:3531:21-3531:23)
  5: _19 = &_2
    SourceInfo(regex-automata/src/dfa/dense.rs:3531:21-3531:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3531:21-3531:34)
      kind: _18 = util::primitives::StateID::as_usize(move _19) -> [return: bb10, unwind: bb20]
  }
  preds [bb5, bb7]
  succs [bb10, bb20]

bb9
  0: _0 = const ()
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:9-3534:10)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:3534:9-3534:10)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/dense.rs:3534:9-3534:10)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:3534:9-3534:10)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:3534:9-3534:10)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:3534:9-3534:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3535:5-3535:6)
      kind: drop(_3) -> [return: bb19, unwind: bb21]
  }
  preds [bb7]
  succs [bb19, bb21]

bb10
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/dense.rs:3531:33-3531:34)
  1: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/dense.rs:3531:37-3531:41)
  2: _20 = _16
    SourceInfo(regex-automata/src/dfa/dense.rs:3531:37-3531:41)
  3: _21 = AddWithOverflow(_18, _20)
    SourceInfo(regex-automata/src/dfa/dense.rs:3531:21-3531:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3531:21-3531:41)
      kind: assert(!move (_21.1: bool), "attempt to compute `{} + {}`, which would overflow", move _18, move _20) -> [success: bb11, unwind: bb20]
  }
  preds [bb8]
  succs [bb11, bb20]

bb11
  0: _17 = move (_21.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:3531:21-3531:41)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/dense.rs:3531:40-3531:41)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/dense.rs:3531:40-3531:41)
  3: FakeRead(ForLet(None), _17)
    SourceInfo(regex-automata/src/dfa/dense.rs:3531:17-3531:18)
  4: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/dense.rs:3532:17-3532:21)
  5: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/dense.rs:3532:24-3532:36)
  6: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/dense.rs:3532:24-3532:28)
  7: _24 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:3532:24-3532:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3532:24-3532:36)
      kind: _23 = dfa::dense::TransitionTable::<std::vec::Vec<u32>>::table(move _24) -> [return: bb12, unwind: bb20]
  }
  preds [bb10]
  succs [bb12, bb20]

bb12
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/dense.rs:3532:35-3532:36)
  1: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/dense.rs:3532:37-3532:38)
  2: _25 = _17
    SourceInfo(regex-automata/src/dfa/dense.rs:3532:37-3532:38)
  3: _26 = Len((*_23))
    SourceInfo(regex-automata/src/dfa/dense.rs:3532:24-3532:39)
  4: _27 = Lt(_25, _26)
    SourceInfo(regex-automata/src/dfa/dense.rs:3532:24-3532:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3532:24-3532:39)
      kind: assert(move _27, "index out of bounds: the length is {} but the index is {}", move _26, _25) -> [success: bb13, unwind: bb20]
  }
  preds [bb11]
  succs [bb13, bb20]

bb13
  0: _22 = (*_23)[_25]
    SourceInfo(regex-automata/src/dfa/dense.rs:3532:24-3532:39)
  1: FakeRead(ForLet(None), _22)
    SourceInfo(regex-automata/src/dfa/dense.rs:3532:17-3532:21)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/dense.rs:3532:39-3532:40)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/dense.rs:3532:39-3532:40)
  4: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:54-3533:63)
  5: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:54-3533:57)
  6: _29 = &_3
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:54-3533:57)
  7: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:54-3533:63)
  8: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:58-3533:62)
  9: _31 = _22
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:58-3533:62)
  10: _30 = (move _31,)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:54-3533:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3533:54-3533:63)
      kind: _28 = <impl Fn(StateID) -> StateID as core::ops::Fn<(util::primitives::StateID,)>>::call(move _29, move _30) -> [return: bb14, unwind: bb20]
  }
  preds [bb12]
  succs [bb14, bb20]

bb14
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:62-3533:63)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:62-3533:63)
  2: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:62-3533:63)
  3: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:13-3533:29)
  4: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:13-3533:17)
  5: _33 = &mut (*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:13-3533:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3533:13-3533:29)
      kind: _32 = dfa::dense::TransitionTable::<std::vec::Vec<u32>>::table_mut(move _33) -> [return: bb15, unwind: bb20]
  }
  preds [bb13]
  succs [bb15, bb20]

bb15
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:28-3533:29)
  1: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:30-3533:50)
  2: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:30-3533:43)
  3: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:30-3533:32)
  4: _36 = &_2
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:30-3533:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3533:30-3533:43)
      kind: _35 = util::primitives::StateID::as_usize(move _36) -> [return: bb16, unwind: bb20]
  }
  preds [bb14]
  succs [bb16, bb20]

bb16
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:42-3533:43)
  1: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:46-3533:50)
  2: _37 = _16
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:46-3533:50)
  3: _38 = AddWithOverflow(_35, _37)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:30-3533:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3533:30-3533:50)
      kind: assert(!move (_38.1: bool), "attempt to compute `{} + {}`, which would overflow", move _35, move _37) -> [success: bb17, unwind: bb20]
  }
  preds [bb15]
  succs [bb17, bb20]

bb17
  0: _34 = move (_38.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:30-3533:50)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:49-3533:50)
  2: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:49-3533:50)
  3: _39 = Len((*_32))
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:13-3533:51)
  4: _40 = Lt(_34, _39)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:13-3533:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3533:13-3533:51)
      kind: assert(move _40, "index out of bounds: the length is {} but the index is {}", move _39, _34) -> [success: bb18, unwind: bb20]
  }
  preds [bb16]
  succs [bb18, bb20]

bb18
  0: (*_32)[_34] = move _28
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:13-3533:63)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:62-3533:63)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:63-3533:64)
  3: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/dense.rs:3533:63-3533:64)
  4: _10 = const ()
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:44-3534:10)
  5: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/dense.rs:3534:9-3534:10)
  6: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/dense.rs:3534:9-3534:10)
  7: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:3534:9-3534:10)
  8: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:3534:9-3534:10)
  9: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/dense.rs:3534:9-3534:10)
  10: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:3534:9-3534:10)
  11: _9 = const ()
    SourceInfo(regex-automata/src/dfa/dense.rs:3530:9-3534:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3530:9-3534:10)
      kind: goto -> bb3
  }
  preds [bb17]
  succs [bb3]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3535:6-3535:6)
      kind: return
  }
  preds [bb9]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3535:5-3535:6)
      kind: drop(_3) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb3, bb4, bb8, bb10, bb11, bb12, bb13, bb14, bb15, bb16, bb17]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3529:5-3535:6)
      kind: resume
  }
  preds [bb9, bb20]
  succs []

