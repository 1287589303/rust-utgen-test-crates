bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/sparse_set.rs:65:9-65:26)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/sparse_set.rs:65:9-65:18)
  2: _3 = &mut ((*_1).0: util::sparse_set::SparseSet)
    SourceInfo(regex-automata/src/util/sparse_set.rs:65:9-65:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:65:9-65:26)
      kind: _2 = util::sparse_set::SparseSet::clear(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/sparse_set.rs:65:25-65:26)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/util/sparse_set.rs:65:26-65:27)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/sparse_set.rs:66:9-66:26)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/sparse_set.rs:66:9-66:18)
  4: _5 = &mut ((*_1).1: util::sparse_set::SparseSet)
    SourceInfo(regex-automata/src/util/sparse_set.rs:66:9-66:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:66:9-66:26)
      kind: _4 = util::sparse_set::SparseSet::clear(move _5) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/sparse_set.rs:66:25-66:26)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/sparse_set.rs:66:26-66:27)
  2: _0 = const ()
    SourceInfo(regex-automata/src/util/sparse_set.rs:64:36-67:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:67:6-67:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:64:5-67:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

