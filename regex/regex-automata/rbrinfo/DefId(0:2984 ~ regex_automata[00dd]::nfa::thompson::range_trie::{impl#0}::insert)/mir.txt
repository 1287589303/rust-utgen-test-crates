bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:296:9-296:36)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:296:18-296:35)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:296:18-296:24)
  3: _5 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:296:18-296:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:296:18-296:35)
      kind: _4 = core::slice::<impl [regex_syntax::utf8::Utf8Range]>::is_empty(move _5) -> [return: bb1, unwind: bb105]
  }
  preds []
  succs [bb1, bb105]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:296:18-296:35)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:296:34-296:35)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:296:9-296:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:296:9-296:36)
      kind: _6 = core::panicking::panic(const "assertion failed: !ranges.is_empty()") -> bb105
  }
  preds [bb1]
  succs [bb105]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:296:34-296:35)
  1: _3 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:296:36-296:36)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:296:35-296:36)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:296:35-296:36)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:9-297:35)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:17-297:34)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:17-297:29)
  7: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:17-297:23)
  8: _10 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:17-297:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:17-297:29)
      kind: _9 = core::slice::<impl [regex_syntax::utf8::Utf8Range]>::len(move _10) -> [return: bb4, unwind: bb105]
  }
  preds [bb1]
  succs [bb4, bb105]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:28-297:29)
  1: _8 = Le(move _9, const 4_usize)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:17-297:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:17-297:34)
      kind: switchInt(move _8) -> [0: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:33-297:34)
  1: _7 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:35-297:35)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:34-297:35)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:34-297:35)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:299:13-299:22)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:299:38-299:60)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:299:38-299:60)
  7: _14 = &mut ((*_1).5: std::vec::Vec<nfa::thompson::range_trie::NextInsert>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:299:38-299:60)
  8: _13 = &mut (*_14)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:299:38-299:60)
  9: StorageLive(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _15 = std::vec::Vec::<nfa::thompson::range_trie::NextInsert>::new() -> [return: bb7, unwind: bb105]
  }
  preds [bb4]
  succs [bb7, bb105]

bb6
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:33-297:34)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:9-297:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:297:9-297:35)
      kind: _11 = core::panicking::panic(const "assertion failed: ranges.len() <= 4") -> bb105
  }
  preds [bb4]
  succs [bb105]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:299:25-299:69)
      kind: _12 = core::mem::replace::<std::vec::Vec<nfa::thompson::range_trie::NextInsert>>(move _13, move _15) -> [return: bb8, unwind: bb104]
  }
  preds [bb5]
  succs [bb8, bb104]

bb8
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:299:68-299:69)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:299:68-299:69)
  2: FakeRead(ForLet(None), _12)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:299:13-299:22)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:299:69-299:70)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:300:9-300:22)
  5: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:300:9-300:14)
  6: _17 = &mut _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:300:9-300:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:300:9-300:22)
      kind: _16 = std::vec::Vec::<nfa::thompson::range_trie::NextInsert>::clear(move _17) -> [return: bb9, unwind: bb103]
  }
  preds [bb7]
  succs [bb9, bb103]

bb9
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:300:21-300:22)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:300:22-300:23)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:302:9-302:50)
  3: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:302:9-302:14)
  4: _19 = &mut _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:302:9-302:14)
  5: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:302:20-302:49)
  6: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:302:42-302:48)
  7: _21 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:302:42-302:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:302:20-302:49)
      kind: _20 = nfa::thompson::range_trie::NextInsert::new(const nfa::thompson::range_trie::ROOT, move _21) -> [return: bb10, unwind: bb103]
  }
  preds [bb8]
  succs [bb10, bb103]

bb10
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:302:48-302:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:302:9-302:50)
      kind: _18 = std::vec::Vec::<nfa::thompson::range_trie::NextInsert>::push(move _19, move _20) -> [return: bb11, unwind: bb103]
  }
  preds [bb9]
  succs [bb11, bb103]

bb11
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:302:49-302:50)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:302:49-302:50)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:302:50-302:51)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:9-424:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:9-424:10)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:9-424:10)
      kind: falseUnwind -> [real: bb13, unwind: bb103]
  }
  preds [bb11, bb30, bb96]
  succs [bb13, bb103]

bb13
  0: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:32-303:43)
  1: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:32-303:37)
  2: _25 = &mut _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:32-303:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:32-303:43)
      kind: _24 = std::vec::Vec::<nfa::thompson::range_trie::NextInsert>::pop(move _25) -> [return: bb14, unwind: bb103]
  }
  preds [bb12]
  succs [bb14, bb103]

bb14
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:42-303:43)
  1: PlaceMention(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:32-303:43)
  2: _26 = discriminant(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:32-303:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:19-303:29)
      kind: switchInt(move _26) -> [1: bb15, otherwise: bb98]
  }
  preds [bb13]
  succs [bb15, bb98]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:19-303:29)
      kind: falseEdge -> [real: bb16, imaginary: bb98]
  }
  preds [bb14]
  succs [bb16, bb98]

bb16
  0: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:24-303:28)
  1: _27 = move ((_24 as Some).0: nfa::thompson::range_trie::NextInsert)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:24-303:28)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:38-304:70)
  3: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:39-304:54)
  4: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:39-304:43)
  5: _32 = &_27
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:39-304:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:39-304:54)
      kind: _31 = nfa::thompson::range_trie::NextInsert::state_id(move _32) -> [return: bb17, unwind: bb103]
  }
  preds [bb15]
  succs [bb17, bb103]

bb17
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:53-304:54)
  1: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:56-304:69)
  2: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:56-304:60)
  3: _34 = &_27
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:56-304:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:56-304:69)
      kind: _33 = nfa::thompson::range_trie::NextInsert::ranges(move _34) -> [return: bb18, unwind: bb103]
  }
  preds [bb16]
  succs [bb18, bb103]

bb18
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:68-304:69)
  1: _30 = (move _31, move _33)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:38-304:70)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:69-304:70)
  3: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:69-304:70)
  4: PlaceMention(_30)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:38-304:70)
  5: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:18-304:26)
  6: _28 = (_30.0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:18-304:26)
  7: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:28-304:34)
  8: _29 = (_30.1: &[regex_syntax::utf8::Utf8Range])
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:28-304:34)
  9: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:304:70-304:71)
  10: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:305:13-305:40)
  11: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:305:22-305:39)
  12: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:305:22-305:28)
  13: _37 = &(*_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:305:22-305:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:305:22-305:39)
      kind: _36 = core::slice::<impl [regex_syntax::utf8::Utf8Range]>::is_empty(move _37) -> [return: bb19, unwind: bb103]
  }
  preds [bb17]
  succs [bb19, bb103]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:305:22-305:39)
      kind: switchInt(move _36) -> [0: bb21, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb21]

bb20
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:305:38-305:39)
  1: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:305:13-305:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:305:13-305:40)
      kind: _38 = core::panicking::panic(const "assertion failed: !ranges.is_empty()") -> bb103
  }
  preds [bb19]
  succs [bb103]

bb21
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:305:38-305:39)
  1: _35 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:305:40-305:40)
  2: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:305:39-305:40)
  3: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:305:39-305:40)
  4: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:35-307:60)
  5: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:36-307:45)
  6: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:43-307:44)
  7: _43 = const 0_usize
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:43-307:44)
  8: _44 = Len((*_29))
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:36-307:45)
  9: _45 = Lt(_43, _44)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:36-307:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:36-307:45)
      kind: assert(move _45, "index out of bounds: the length is {} but the index is {}", move _44, _43) -> [success: bb22, unwind: bb103]
  }
  preds [bb19]
  succs [bb22, bb103]

bb22
  0: _42 = (*_29)[_43]
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:36-307:45)
  1: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:47-307:59)
  2: StorageLive(_47)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:54-307:59)
  3: StorageLive(_48)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:48-307:54)
  4: _48 = &(*_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:48-307:54)
  5: StorageLive(_49)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:55-307:58)
  6: _49 = core::ops::RangeFrom::<usize> { start: const 1_usize }
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:55-307:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:54-307:59)
      kind: _47 = <[regex_syntax::utf8::Utf8Range] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _48, move _49) -> [return: bb23, unwind: bb103]
  }
  preds [bb21]
  succs [bb23, bb103]

bb23
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:58-307:59)
  1: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:58-307:59)
  2: _46 = &(*_47)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:47-307:59)
  3: _41 = (move _42, move _46)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:35-307:60)
  4: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:59-307:60)
  5: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:59-307:60)
  6: PlaceMention(_41)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:35-307:60)
  7: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:18-307:25)
  8: _39 = (_41.0: regex_syntax::utf8::Utf8Range)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:18-307:25)
  9: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:27-307:31)
  10: _40 = (_41.1: &[regex_syntax::utf8::Utf8Range])
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:27-307:31)
  11: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:60-307:61)
  12: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:307:60-307:61)
  13: StorageLive(_50)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:17-314:22)
  14: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:25-314:45)
  15: StorageLive(_52)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:25-314:45)
  16: StorageLive(_53)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:25-314:29)
  17: _53 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:25-314:29)
  18: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:36-314:44)
  19: _54 = _28
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:36-314:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:25-314:45)
      kind: _52 = nfa::thompson::range_trie::RangeTrie::state(move _53, move _54) -> [return: bb24, unwind: bb103]
  }
  preds [bb22]
  succs [bb24, bb103]

bb24
  0: _51 = &(*_52)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:25-314:45)
  1: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:44-314:45)
  2: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:44-314:45)
  3: StorageLive(_55)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:51-314:54)
  4: _55 = _39
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:51-314:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:25-314:55)
      kind: _50 = nfa::thompson::range_trie::State::find(move _51, move _55) -> [return: bb25, unwind: bb103]
  }
  preds [bb23]
  succs [bb25, bb103]

bb25
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:54-314:55)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:54-314:55)
  2: FakeRead(ForLet(None), _50)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:17-314:22)
  3: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:314:55-314:56)
  4: StorageLive(_56)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:13-322:14)
  5: StorageLive(_57)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:16-318:59)
  6: StorageLive(_58)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:16-318:17)
  7: _58 = _50
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:16-318:17)
  8: StorageLive(_59)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:21-318:59)
  9: StorageLive(_60)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:21-318:53)
  10: StorageLive(_61)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:21-318:41)
  11: StorageLive(_62)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:21-318:25)
  12: _62 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:21-318:25)
  13: StorageLive(_63)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:32-318:40)
  14: _63 = _28
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:32-318:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:21-318:41)
      kind: _61 = nfa::thompson::range_trie::RangeTrie::state(move _62, move _63) -> [return: bb26, unwind: bb103]
  }
  preds [bb24]
  succs [bb26, bb103]

bb26
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:40-318:41)
  1: StorageDead(_62)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:40-318:41)
  2: _60 = &((*_61).0: std::vec::Vec<nfa::thompson::range_trie::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:21-318:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:21-318:59)
      kind: _59 = std::vec::Vec::<nfa::thompson::range_trie::Transition>::len(move _60) -> [return: bb27, unwind: bb103]
  }
  preds [bb25]
  succs [bb27, bb103]

bb27
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:58-318:59)
  1: _57 = Eq(move _58, move _59)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:16-318:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:16-318:59)
      kind: switchInt(move _57) -> [0: bb31, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb31]

bb28
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:58-318:59)
  1: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:58-318:59)
  2: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:58-318:59)
  3: StorageLive(_65)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:21-319:28)
  4: StorageLive(_66)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:48-319:52)
  5: _66 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:48-319:52)
  6: StorageLive(_67)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:54-319:64)
  7: StorageLive(_68)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:54-319:64)
  8: _68 = &mut _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:54-319:64)
  9: _67 = &mut (*_68)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:54-319:64)
  10: StorageLive(_69)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:66-319:70)
  11: _69 = &(*_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:66-319:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:31-319:71)
      kind: _65 = nfa::thompson::range_trie::NextInsert::push(move _66, move _67, move _69) -> [return: bb29, unwind: bb103]
  }
  preds [bb27]
  succs [bb29, bb103]

bb29
  0: StorageDead(_69)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:70-319:71)
  1: StorageDead(_67)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:70-319:71)
  2: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:70-319:71)
  3: FakeRead(ForLet(None), _65)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:21-319:28)
  4: StorageDead(_68)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:319:71-319:72)
  5: StorageLive(_70)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:17-320:60)
  6: StorageLive(_71)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:17-320:21)
  7: _71 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:17-320:21)
  8: StorageLive(_72)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:37-320:45)
  9: _72 = _28
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:37-320:45)
  10: StorageLive(_73)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:47-320:50)
  11: _73 = _39
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:47-320:50)
  12: StorageLive(_74)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:52-320:59)
  13: _74 = _65
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:52-320:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:17-320:60)
      kind: _70 = nfa::thompson::range_trie::RangeTrie::add_transition(move _71, move _72, move _73, move _74) -> [return: bb30, unwind: bb103]
  }
  preds [bb28]
  succs [bb30, bb103]

bb30
  0: StorageDead(_74)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:59-320:60)
  1: StorageDead(_73)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:59-320:60)
  2: StorageDead(_72)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:59-320:60)
  3: StorageDead(_71)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:59-320:60)
  4: StorageDead(_70)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:320:60-320:61)
  5: StorageDead(_65)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:322:13-322:14)
  6: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:322:13-322:14)
  7: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:322:13-322:14)
  8: StorageDead(_50)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  9: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  10: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  11: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  12: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  13: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  14: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  15: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb12
  }
  preds [bb29]
  succs [bb12]

bb31
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:58-318:59)
  1: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:58-318:59)
  2: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:318:58-318:59)
  3: _56 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:322:14-322:14)
  4: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:322:13-322:14)
  5: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:322:13-322:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:330:13-423:14)
      kind: goto -> bb32
  }
  preds [bb27]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:330:13-423:14)
      kind: falseUnwind -> [real: bb33, unwind: bb103]
  }
  preds [bb31, bb97]
  succs [bb33, bb103]

bb33
  0: StorageLive(_75)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:21-331:24)
  1: StorageLive(_76)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:27-331:62)
  2: StorageLive(_77)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:59-331:62)
  3: StorageLive(_78)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:27-331:59)
  4: StorageLive(_79)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:27-331:47)
  5: StorageLive(_80)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:27-331:31)
  6: _80 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:27-331:31)
  7: StorageLive(_81)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:38-331:46)
  8: _81 = _28
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:38-331:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:27-331:47)
      kind: _79 = nfa::thompson::range_trie::RangeTrie::state(move _80, move _81) -> [return: bb34, unwind: bb103]
  }
  preds [bb32]
  succs [bb34, bb103]

bb34
  0: StorageDead(_81)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:46-331:47)
  1: StorageDead(_80)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:46-331:47)
  2: _78 = &((*_79).0: std::vec::Vec<nfa::thompson::range_trie::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:27-331:59)
  3: StorageLive(_82)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:60-331:61)
  4: _82 = _50
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:60-331:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:59-331:62)
      kind: _77 = <std::vec::Vec<nfa::thompson::range_trie::Transition> as core::ops::Index<usize>>::index(move _78, move _82) -> [return: bb35, unwind: bb103]
  }
  preds [bb33]
  succs [bb35, bb103]

bb35
  0: _76 = &(*_77)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:27-331:62)
  1: StorageDead(_82)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:61-331:62)
  2: StorageDead(_78)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:61-331:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:27-331:70)
      kind: _75 = <nfa::thompson::range_trie::Transition as core::clone::Clone>::clone(move _76) -> [return: bb36, unwind: bb103]
  }
  preds [bb34]
  succs [bb36, bb103]

bb36
  0: StorageDead(_76)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:69-331:70)
  1: FakeRead(ForLet(None), _75)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:21-331:24)
  2: StorageDead(_79)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:70-331:71)
  3: StorageDead(_77)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:331:70-331:71)
  4: StorageLive(_83)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:21-332:26)
  5: StorageLive(_84)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:35-332:61)
  6: StorageLive(_85)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:46-332:55)
  7: _85 = (_75.0: regex_syntax::utf8::Utf8Range)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:46-332:55)
  8: StorageLive(_86)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:57-332:60)
  9: _86 = _39
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:57-332:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:35-332:61)
      kind: _84 = nfa::thompson::range_trie::Split::new(move _85, move _86) -> [return: bb37, unwind: bb103]
  }
  preds [bb35]
  succs [bb37, bb103]

bb37
  0: StorageDead(_86)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:60-332:61)
  1: StorageDead(_85)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:60-332:61)
  2: PlaceMention(_84)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:35-332:61)
  3: _87 = discriminant(_84)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:35-332:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:29-332:61)
      kind: switchInt(move _87) -> [0: bb40, 1: bb39, otherwise: bb38]
  }
  preds [bb36]
  succs [bb38, bb39, bb40]

bb38
  0: FakeRead(ForMatchedPlace(None), _84)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:35-332:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:35-332:61)
      kind: unreachable
  }
  preds [bb37]
  succs []

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:333:21-333:32)
      kind: falseEdge -> [real: bb41, imaginary: bb40]
  }
  preds [bb37]
  succs [bb40, bb41]

bb40
  0: StorageLive(_90)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:29-335:36)
  1: StorageLive(_91)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:56-335:60)
  2: _91 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:56-335:60)
  3: StorageLive(_92)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:62-335:72)
  4: StorageLive(_93)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:62-335:72)
  5: _93 = &mut _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:62-335:72)
  6: _92 = &mut (*_93)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:62-335:72)
  7: StorageLive(_94)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:74-335:78)
  8: _94 = &(*_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:74-335:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:39-335:79)
      kind: _90 = nfa::thompson::range_trie::NextInsert::push(move _91, move _92, move _94) -> [return: bb42, unwind: bb103]
  }
  preds [bb37, bb39]
  succs [bb42, bb103]

bb41
  0: StorageLive(_88)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:333:26-333:31)
  1: _88 = move ((_84 as Some).0: nfa::thompson::range_trie::Split)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:333:26-333:31)
  2: _83 = move _88
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:333:36-333:41)
  3: StorageDead(_88)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:333:40-333:41)
  4: FakeRead(ForLet(None), _83)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:332:21-332:26)
  5: StorageDead(_84)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:339:18-339:19)
  6: StorageLive(_101)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:340:21-340:27)
  7: StorageLive(_102)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:340:30-340:35)
  8: _102 = &_83
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:340:30-340:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:340:30-340:46)
      kind: _101 = nfa::thompson::range_trie::Split::as_slice(move _102) -> [return: bb44, unwind: bb103]
  }
  preds [bb39]
  succs [bb44, bb103]

bb42
  0: StorageDead(_94)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:78-335:79)
  1: StorageDead(_92)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:78-335:79)
  2: StorageDead(_91)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:78-335:79)
  3: FakeRead(ForLet(None), _90)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:29-335:36)
  4: StorageDead(_93)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:335:79-335:80)
  5: StorageLive(_95)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:25-336:74)
  6: StorageLive(_96)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:25-336:29)
  7: _96 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:25-336:29)
  8: StorageLive(_97)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:48-336:49)
  9: _97 = _50
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:48-336:49)
  10: StorageLive(_98)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:51-336:59)
  11: _98 = _28
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:51-336:59)
  12: StorageLive(_99)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:61-336:64)
  13: _99 = _39
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:61-336:64)
  14: StorageLive(_100)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:66-336:73)
  15: _100 = _90
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:66-336:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:25-336:74)
      kind: _95 = nfa::thompson::range_trie::RangeTrie::add_transition_at(move _96, move _97, move _98, move _99, move _100) -> [return: bb43, unwind: bb103]
  }
  preds [bb40]
  succs [bb43, bb103]

bb43
  0: StorageDead(_100)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:73-336:74)
  1: StorageDead(_99)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:73-336:74)
  2: StorageDead(_98)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:73-336:74)
  3: StorageDead(_97)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:73-336:74)
  4: StorageDead(_96)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:73-336:74)
  5: StorageDead(_95)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:336:74-336:75)
  6: StorageDead(_90)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:338:21-338:22)
  7: StorageDead(_84)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:339:18-339:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb97
  }
  preds [bb42]
  succs [bb97]

bb44
  0: StorageDead(_102)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:340:45-340:46)
  1: FakeRead(ForLet(None), _101)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:340:21-340:27)
  2: StorageLive(_103)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:344:17-350:18)
  3: StorageLive(_104)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:344:20-344:37)
  4: StorageLive(_105)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:344:20-344:32)
  5: StorageLive(_106)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:344:20-344:26)
  6: _106 = &(*_101)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:344:20-344:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:344:20-344:32)
      kind: _105 = core::slice::<impl [nfa::thompson::range_trie::SplitRange]>::len(move _106) -> [return: bb45, unwind: bb103]
  }
  preds [bb41]
  succs [bb45, bb103]

bb45
  0: StorageDead(_106)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:344:31-344:32)
  1: _104 = Eq(move _105, const 1_usize)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:344:20-344:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:344:20-344:37)
      kind: switchInt(move _104) -> [0: bb53, otherwise: bb46]
  }
  preds [bb44]
  succs [bb46, bb53]

bb46
  0: StorageDead(_105)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:344:36-344:37)
  1: StorageLive(_108)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:346:21-348:22)
  2: StorageLive(_109)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:346:25-346:40)
  3: StorageLive(_110)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:346:25-346:29)
  4: _110 = &(*_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:346:25-346:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:346:25-346:40)
      kind: _109 = core::slice::<impl [regex_syntax::utf8::Utf8Range]>::is_empty(move _110) -> [return: bb47, unwind: bb103]
  }
  preds [bb45]
  succs [bb47, bb103]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:346:25-346:40)
      kind: switchInt(move _109) -> [0: bb49, otherwise: bb48]
  }
  preds [bb46]
  succs [bb48, bb49]

bb48
  0: StorageDead(_110)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:346:39-346:40)
  1: _108 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:348:22-348:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:346:21-348:22)
      kind: goto -> bb52
  }
  preds [bb47]
  succs [bb52]

bb49
  0: StorageDead(_110)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:346:39-346:40)
  1: StorageLive(_111)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:25-347:71)
  2: StorageLive(_112)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:25-347:30)
  3: _112 = &mut _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:25-347:30)
  4: StorageLive(_113)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:36-347:70)
  5: StorageLive(_114)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:52-347:63)
  6: _114 = (_75.1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:52-347:63)
  7: StorageLive(_115)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:65-347:69)
  8: _115 = &(*_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:65-347:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:36-347:70)
      kind: _113 = nfa::thompson::range_trie::NextInsert::new(move _114, move _115) -> [return: bb50, unwind: bb103]
  }
  preds [bb47]
  succs [bb50, bb103]

bb50
  0: StorageDead(_115)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:69-347:70)
  1: StorageDead(_114)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:69-347:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:25-347:71)
      kind: _111 = std::vec::Vec::<nfa::thompson::range_trie::NextInsert>::push(move _112, move _113) -> [return: bb51, unwind: bb103]
  }
  preds [bb49]
  succs [bb51, bb103]

bb51
  0: StorageDead(_113)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:70-347:71)
  1: StorageDead(_112)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:70-347:71)
  2: StorageDead(_111)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:347:71-347:72)
  3: _108 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:346:41-348:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:346:21-348:22)
      kind: goto -> bb52
  }
  preds [bb50]
  succs [bb52]

bb52
  0: StorageDead(_109)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:348:21-348:22)
  1: StorageDead(_108)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:348:21-348:22)
  2: _23 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:349:21-349:26)
  3: StorageDead(_104)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:350:17-350:18)
  4: StorageDead(_103)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:350:17-350:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb96
  }
  preds [bb48, bb51]
  succs [bb96]

bb53
  0: StorageDead(_105)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:344:36-344:37)
  1: _103 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:350:18-350:18)
  2: StorageDead(_104)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:350:17-350:18)
  3: StorageDead(_103)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:350:17-350:18)
  4: StorageLive(_116)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:359:21-359:30)
  5: _116 = const true
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:359:33-359:37)
  6: FakeRead(ForLet(None), _116)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:359:21-359:30)
  7: StorageLive(_117)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:360:21-360:34)
  8: StorageLive(_118)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:361:21-368:22)
  9: _118 = &mut _116
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:361:21-368:22)
  10: _117 = {closure@regex-automata/src/nfa/thompson/range_trie.rs:361:21: 361:65} { first: move _118 }
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:361:21-368:22)
  11: StorageDead(_118)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:361:64-361:65)
  12: FakeRead(ForLet(None), _117)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:360:21-360:34)
  13: StorageLive(_119)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:17-418:18)
  14: StorageLive(_120)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
  15: StorageLive(_121)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
  16: StorageLive(_122)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:50)
  17: StorageLive(_123)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:43)
  18: _123 = &(*_101)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:50)
      kind: _122 = core::slice::<impl [nfa::thompson::range_trie::SplitRange]>::iter(move _123) -> [return: bb54, unwind: bb103]
  }
  preds [bb45]
  succs [bb54, bb103]

bb54
  0: StorageDead(_123)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:49-369:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
      kind: _121 = <core::slice::Iter<'_, nfa::thompson::range_trie::SplitRange> as core::iter::Iterator>::enumerate(move _122) -> [return: bb55, unwind: bb103]
  }
  preds [bb53]
  succs [bb55, bb103]

bb55
  0: StorageDead(_122)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:61-369:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
      kind: _120 = <core::iter::Enumerate<core::slice::Iter<'_, nfa::thompson::range_trie::SplitRange>> as core::iter::IntoIterator>::into_iter(move _121) -> [return: bb56, unwind: bb103]
  }
  preds [bb54]
  succs [bb56, bb103]

bb56
  0: StorageDead(_121)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:61-369:62)
  1: PlaceMention(_120)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
  2: StorageLive(_124)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
  3: _124 = move _120
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:17-418:18)
      kind: goto -> bb57
  }
  preds [bb55]
  succs [bb57]

bb57
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:17-418:18)
      kind: falseUnwind -> [real: bb58, unwind: bb103]
  }
  preds [bb56, bb95]
  succs [bb58, bb103]

bb58
  0: StorageLive(_125)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
  1: StorageLive(_126)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
  2: StorageLive(_127)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
  3: StorageLive(_128)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
  4: _128 = &mut _124
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
  5: _127 = &mut (*_128)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
      kind: _126 = <core::iter::Enumerate<core::slice::Iter<'_, nfa::thompson::range_trie::SplitRange>> as core::iter::Iterator>::next(move _127) -> [return: bb59, unwind: bb103]
  }
  preds [bb57]
  succs [bb59, bb103]

bb59
  0: StorageDead(_127)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:61-369:62)
  1: PlaceMention(_126)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
  2: _129 = discriminant(_126)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
      kind: switchInt(move _129) -> [0: bb61, 1: bb62, otherwise: bb60]
  }
  preds [bb58]
  succs [bb60, bb61, bb62]

bb60
  0: FakeRead(ForMatchedPlace(None), _126)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:37-369:62)
      kind: unreachable
  }
  preds [bb59]
  succs []

bb61
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:17-418:18)
      kind: falseEdge -> [real: bb63, imaginary: bb62]
  }
  preds [bb59]
  succs [bb62, bb63]

bb62
  0: StorageLive(_131)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:22-369:23)
  1: _131 = (((_126 as Some).0: (usize, &nfa::thompson::range_trie::SplitRange)).0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:22-369:23)
  2: StorageLive(_132)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:26-369:32)
  3: _132 = (*(((_126 as Some).0: (usize, &nfa::thompson::range_trie::SplitRange)).1: &nfa::thompson::range_trie::SplitRange))
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:26-369:32)
  4: StorageLive(_133)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:370:21-416:22)
  5: PlaceMention(_132)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:370:27-370:33)
  6: _134 = discriminant(_132)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:370:27-370:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:370:21-370:33)
      kind: switchInt(move _134) -> [0: bb65, 1: bb66, 2: bb67, otherwise: bb64]
  }
  preds [bb59, bb61]
  succs [bb64, bb65, bb66, bb67]

bb63
  0: _119 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:17-418:18)
  1: StorageDead(_128)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  2: StorageDead(_126)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  3: StorageDead(_125)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  4: StorageDead(_124)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  5: StorageDead(_120)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  6: StorageDead(_119)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  7: _23 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:422:17-422:22)
  8: StorageDead(_117)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:423:13-423:14)
  9: StorageDead(_116)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:423:13-423:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb96
  }
  preds [bb61]
  succs [bb96]

bb64
  0: FakeRead(ForMatchedPlace(None), _132)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:370:27-370:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:370:27-370:33)
      kind: unreachable
  }
  preds [bb62]
  succs []

bb65
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:371:25-371:43)
      kind: falseEdge -> [real: bb68, imaginary: bb66]
  }
  preds [bb62]
  succs [bb66, bb68]

bb66
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:382:25-382:43)
      kind: falseEdge -> [real: bb71, imaginary: bb67]
  }
  preds [bb62, bb65]
  succs [bb67, bb71]

bb67
  0: StorageLive(_184)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:407:42-407:43)
  1: _184 = ((_132 as Both).0: regex_syntax::utf8::Utf8Range)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:407:42-407:43)
  2: StorageLive(_185)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:411:29-413:30)
  3: StorageLive(_186)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:411:33-411:48)
  4: StorageLive(_187)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:411:33-411:37)
  5: _187 = &(*_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:411:33-411:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:411:33-411:48)
      kind: _186 = core::slice::<impl [regex_syntax::utf8::Utf8Range]>::is_empty(move _187) -> [return: bb87, unwind: bb103]
  }
  preds [bb62, bb66]
  succs [bb87, bb103]

bb68
  0: StorageLive(_135)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:371:41-371:42)
  1: _135 = ((_132 as Old).0: regex_syntax::utf8::Utf8Range)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:371:41-371:42)
  2: StorageLive(_136)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:379:33-379:39)
  3: StorageLive(_137)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:379:42-379:46)
  4: _137 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:379:42-379:46)
  5: StorageLive(_138)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:379:57-379:68)
  6: _138 = (_75.1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:379:57-379:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:379:42-379:69)
      kind: _136 = nfa::thompson::range_trie::RangeTrie::duplicate(move _137, move _138) -> [return: bb69, unwind: bb103]
  }
  preds [bb65]
  succs [bb69, bb103]

bb69
  0: StorageDead(_138)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:379:68-379:69)
  1: StorageDead(_137)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:379:68-379:69)
  2: FakeRead(ForLet(None), _136)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:379:33-379:39)
  3: StorageLive(_139)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:29-380:68)
  4: StorageLive(_140)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:29-380:38)
  5: _140 = &mut _117
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:29-380:38)
  6: StorageLive(_141)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:29-380:68)
  7: StorageLive(_142)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:39-380:43)
  8: _142 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:39-380:43)
  9: StorageLive(_143)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:45-380:46)
  10: _143 = _50
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:45-380:46)
  11: StorageLive(_144)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:48-380:56)
  12: _144 = _28
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:48-380:56)
  13: StorageLive(_145)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:58-380:59)
  14: _145 = _135
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:58-380:59)
  15: StorageLive(_146)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:61-380:67)
  16: _146 = _136
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:61-380:67)
  17: _141 = (move _142, move _143, move _144, move _145, move _146)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:29-380:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:29-380:68)
      kind: _139 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:361:21: 361:65} as core::ops::FnMut<(&mut nfa::thompson::range_trie::RangeTrie, usize, util::primitives::StateID, regex_syntax::utf8::Utf8Range, util::primitives::StateID)>>::call_mut(move _140, move _141) -> [return: bb70, unwind: bb103]
  }
  preds [bb68]
  succs [bb70, bb103]

bb70
  0: StorageDead(_146)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:67-380:68)
  1: StorageDead(_145)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:67-380:68)
  2: StorageDead(_144)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:67-380:68)
  3: StorageDead(_143)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:67-380:68)
  4: StorageDead(_142)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:67-380:68)
  5: StorageDead(_141)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:67-380:68)
  6: StorageDead(_140)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:67-380:68)
  7: StorageDead(_139)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:380:68-380:69)
  8: _133 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:371:47-381:26)
  9: StorageDead(_136)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:381:25-381:26)
  10: StorageDead(_135)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:381:25-381:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:381:25-381:26)
      kind: goto -> bb94
  }
  preds [bb69]
  succs [bb94]

bb71
  0: StorageLive(_147)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:382:41-382:42)
  1: _147 = ((_132 as New).0: regex_syntax::utf8::Utf8Range)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:382:41-382:42)
  2: StorageLive(_148)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:389:29-398:30)
  3: StorageLive(_149)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:390:37-390:42)
  4: StorageLive(_150)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:390:46-390:66)
  5: StorageLive(_151)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:390:46-390:50)
  6: _151 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:390:46-390:50)
  7: StorageLive(_152)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:390:57-390:65)
  8: _152 = _28
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:390:57-390:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:390:46-390:66)
      kind: _150 = nfa::thompson::range_trie::RangeTrie::state(move _151, move _152) -> [return: bb72, unwind: bb103]
  }
  preds [bb66]
  succs [bb72, bb103]

bb72
  0: StorageDead(_152)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:390:65-390:66)
  1: StorageDead(_151)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:390:65-390:66)
  2: _149 = &((*_150).0: std::vec::Vec<nfa::thompson::range_trie::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:390:45-390:78)
  3: FakeRead(ForLet(None), _149)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:390:37-390:42)
  4: StorageLive(_153)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:36-391:57)
  5: StorageLive(_154)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:36-391:41)
  6: StorageLive(_155)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:36-391:37)
  7: _155 = _131
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:36-391:37)
  8: _156 = AddWithOverflow(_155, const 1_usize)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:36-391:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:36-391:41)
      kind: assert(!move (_156.1: bool), "attempt to compute `{} + {}`, which would overflow", move _155, const 1_usize) -> [success: bb73, unwind: bb103]
  }
  preds [bb71]
  succs [bb73, bb103]

bb73
  0: _154 = move (_156.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:36-391:41)
  1: StorageDead(_155)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:40-391:41)
  2: StorageLive(_157)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:45-391:57)
  3: StorageLive(_158)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:45-391:51)
  4: _158 = &(*_101)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:45-391:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:45-391:57)
      kind: _157 = core::slice::<impl [nfa::thompson::range_trie::SplitRange]>::len(move _158) -> [return: bb74, unwind: bb103]
  }
  preds [bb72]
  succs [bb74, bb103]

bb74
  0: StorageDead(_158)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:56-391:57)
  1: _153 = Eq(move _154, move _157)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:36-391:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:36-391:57)
      kind: switchInt(move _153) -> [0: bb83, otherwise: bb75]
  }
  preds [bb73]
  succs [bb75, bb83]

bb75
  0: StorageDead(_157)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:56-391:57)
  1: StorageDead(_154)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:56-391:57)
  2: StorageLive(_159)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:392:40-392:55)
  3: StorageLive(_160)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:392:40-392:41)
  4: _160 = _50
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:392:40-392:41)
  5: StorageLive(_161)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:392:44-392:55)
  6: StorageLive(_162)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:392:44-392:49)
  7: _162 = &(*_149)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:392:44-392:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:392:44-392:55)
      kind: _161 = std::vec::Vec::<nfa::thompson::range_trie::Transition>::len(move _162) -> [return: bb76, unwind: bb103]
  }
  preds [bb74]
  succs [bb76, bb103]

bb76
  0: StorageDead(_162)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:392:54-392:55)
  1: _159 = Lt(move _160, move _161)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:392:40-392:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:392:40-392:55)
      kind: switchInt(move _159) -> [0: bb82, otherwise: bb77]
  }
  preds [bb75]
  succs [bb77, bb82]

bb77
  0: StorageDead(_161)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:392:54-392:55)
  1: StorageDead(_160)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:392:54-392:55)
  2: StorageLive(_163)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:40-393:69)
  3: StorageLive(_164)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:51-393:52)
  4: _164 = _147
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:51-393:52)
  5: StorageLive(_165)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:54-393:68)
  6: StorageLive(_166)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:59-393:62)
  7: StorageLive(_167)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:54-393:59)
  8: _167 = &(*_149)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:54-393:59)
  9: StorageLive(_168)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:60-393:61)
  10: _168 = _50
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:60-393:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:59-393:62)
      kind: _166 = <std::vec::Vec<nfa::thompson::range_trie::Transition> as core::ops::Index<usize>>::index(move _167, move _168) -> [return: bb78, unwind: bb103]
  }
  preds [bb76]
  succs [bb78, bb103]

bb78
  0: StorageDead(_168)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:61-393:62)
  1: StorageDead(_167)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:61-393:62)
  2: _165 = ((*_166).0: regex_syntax::utf8::Utf8Range)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:54-393:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:40-393:69)
      kind: _163 = nfa::thompson::range_trie::intersects(move _164, move _165) -> [return: bb79, unwind: bb103]
  }
  preds [bb77]
  succs [bb79, bb103]

bb79
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:40-393:69)
      kind: switchInt(move _163) -> [0: bb81, otherwise: bb80]
  }
  preds [bb78]
  succs [bb80, bb81]

bb80
  0: StorageDead(_166)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:68-393:69)
  1: StorageDead(_165)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:68-393:69)
  2: StorageDead(_164)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:68-393:69)
  3: StorageLive(_170)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:395:43-395:44)
  4: _170 = _147
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:395:43-395:44)
  5: _39 = move _170
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:395:37-395:44)
  6: StorageDead(_170)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:395:43-395:44)
  7: StorageDead(_163)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:397:33-397:34)
  8: StorageDead(_159)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:397:33-397:34)
  9: StorageDead(_153)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:397:33-397:34)
  10: StorageDead(_150)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:398:29-398:30)
  11: StorageDead(_149)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:398:29-398:30)
  12: StorageDead(_148)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:398:29-398:30)
  13: StorageDead(_147)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:406:25-406:26)
  14: StorageDead(_133)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:416:21-416:22)
  15: StorageDead(_132)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  16: StorageDead(_131)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  17: StorageDead(_128)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  18: StorageDead(_126)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  19: StorageDead(_125)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  20: StorageDead(_124)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  21: StorageDead(_120)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  22: StorageDead(_119)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  23: StorageDead(_117)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:423:13-423:14)
  24: StorageDead(_116)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:423:13-423:14)
  25: StorageDead(_101)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:423:13-423:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb97
  }
  preds [bb79]
  succs [bb97]

bb81
  0: StorageDead(_166)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:68-393:69)
  1: StorageDead(_165)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:68-393:69)
  2: StorageDead(_164)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:393:68-393:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb84
  }
  preds [bb79]
  succs [bb84]

bb82
  0: StorageDead(_161)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:392:54-392:55)
  1: StorageDead(_160)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:392:54-392:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb84
  }
  preds [bb76]
  succs [bb84]

bb83
  0: StorageDead(_157)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:56-391:57)
  1: StorageDead(_154)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:391:56-391:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb84
  }
  preds [bb74]
  succs [bb84]

bb84
  0: _148 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:397:34-397:34)
  1: StorageDead(_163)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:397:33-397:34)
  2: StorageDead(_159)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:397:33-397:34)
  3: StorageDead(_153)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:397:33-397:34)
  4: StorageDead(_150)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:398:29-398:30)
  5: StorageDead(_149)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:398:29-398:30)
  6: StorageDead(_148)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:398:29-398:30)
  7: StorageLive(_171)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:403:33-403:40)
  8: StorageLive(_172)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:404:50-404:54)
  9: _172 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:404:50-404:54)
  10: StorageLive(_173)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:404:56-404:66)
  11: StorageLive(_174)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:404:56-404:66)
  12: _174 = &mut _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:404:56-404:66)
  13: _173 = &mut (*_174)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:404:56-404:66)
  14: StorageLive(_175)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:404:68-404:72)
  15: _175 = &(*_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:404:68-404:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:404:33-404:73)
      kind: _171 = nfa::thompson::range_trie::NextInsert::push(move _172, move _173, move _175) -> [return: bb85, unwind: bb103]
  }
  preds [bb81, bb82, bb83]
  succs [bb85, bb103]

bb85
  0: StorageDead(_175)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:404:72-404:73)
  1: StorageDead(_173)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:404:72-404:73)
  2: StorageDead(_172)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:404:72-404:73)
  3: FakeRead(ForLet(None), _171)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:403:33-403:40)
  4: StorageDead(_174)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:404:73-404:74)
  5: StorageLive(_176)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:29-405:69)
  6: StorageLive(_177)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:29-405:38)
  7: _177 = &mut _117
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:29-405:38)
  8: StorageLive(_178)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:29-405:69)
  9: StorageLive(_179)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:39-405:43)
  10: _179 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:39-405:43)
  11: StorageLive(_180)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:45-405:46)
  12: _180 = _50
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:45-405:46)
  13: StorageLive(_181)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:48-405:56)
  14: _181 = _28
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:48-405:56)
  15: StorageLive(_182)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:58-405:59)
  16: _182 = _147
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:58-405:59)
  17: StorageLive(_183)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:61-405:68)
  18: _183 = _171
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:61-405:68)
  19: _178 = (move _179, move _180, move _181, move _182, move _183)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:29-405:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:29-405:69)
      kind: _176 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:361:21: 361:65} as core::ops::FnMut<(&mut nfa::thompson::range_trie::RangeTrie, usize, util::primitives::StateID, regex_syntax::utf8::Utf8Range, util::primitives::StateID)>>::call_mut(move _177, move _178) -> [return: bb86, unwind: bb103]
  }
  preds [bb84]
  succs [bb86, bb103]

bb86
  0: StorageDead(_183)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:68-405:69)
  1: StorageDead(_182)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:68-405:69)
  2: StorageDead(_181)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:68-405:69)
  3: StorageDead(_180)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:68-405:69)
  4: StorageDead(_179)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:68-405:69)
  5: StorageDead(_178)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:68-405:69)
  6: StorageDead(_177)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:68-405:69)
  7: StorageDead(_176)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:405:69-405:70)
  8: _133 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:382:47-406:26)
  9: StorageDead(_171)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:406:25-406:26)
  10: StorageDead(_147)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:406:25-406:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:406:25-406:26)
      kind: goto -> bb94
  }
  preds [bb85]
  succs [bb94]

bb87
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:411:33-411:48)
      kind: switchInt(move _186) -> [0: bb89, otherwise: bb88]
  }
  preds [bb67]
  succs [bb88, bb89]

bb88
  0: StorageDead(_187)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:411:47-411:48)
  1: _185 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:413:30-413:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:411:29-413:30)
      kind: goto -> bb92
  }
  preds [bb87]
  succs [bb92]

bb89
  0: StorageDead(_187)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:411:47-411:48)
  1: StorageLive(_188)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:33-412:79)
  2: StorageLive(_189)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:33-412:38)
  3: _189 = &mut _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:33-412:38)
  4: StorageLive(_190)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:44-412:78)
  5: StorageLive(_191)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:60-412:71)
  6: _191 = (_75.1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:60-412:71)
  7: StorageLive(_192)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:73-412:77)
  8: _192 = &(*_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:73-412:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:44-412:78)
      kind: _190 = nfa::thompson::range_trie::NextInsert::new(move _191, move _192) -> [return: bb90, unwind: bb103]
  }
  preds [bb87]
  succs [bb90, bb103]

bb90
  0: StorageDead(_192)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:77-412:78)
  1: StorageDead(_191)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:77-412:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:33-412:79)
      kind: _188 = std::vec::Vec::<nfa::thompson::range_trie::NextInsert>::push(move _189, move _190) -> [return: bb91, unwind: bb103]
  }
  preds [bb89]
  succs [bb91, bb103]

bb91
  0: StorageDead(_190)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:78-412:79)
  1: StorageDead(_189)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:78-412:79)
  2: StorageDead(_188)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:412:79-412:80)
  3: _185 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:411:49-413:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:411:29-413:30)
      kind: goto -> bb92
  }
  preds [bb90]
  succs [bb92]

bb92
  0: StorageDead(_186)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:413:29-413:30)
  1: StorageDead(_185)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:413:29-413:30)
  2: StorageLive(_193)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:29-414:73)
  3: StorageLive(_194)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:29-414:38)
  4: _194 = &mut _117
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:29-414:38)
  5: StorageLive(_195)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:29-414:73)
  6: StorageLive(_196)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:39-414:43)
  7: _196 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:39-414:43)
  8: StorageLive(_197)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:45-414:46)
  9: _197 = _50
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:45-414:46)
  10: StorageLive(_198)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:48-414:56)
  11: _198 = _28
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:48-414:56)
  12: StorageLive(_199)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:58-414:59)
  13: _199 = _184
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:58-414:59)
  14: StorageLive(_200)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:61-414:72)
  15: _200 = (_75.1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:61-414:72)
  16: _195 = (move _196, move _197, move _198, move _199, move _200)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:29-414:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:29-414:73)
      kind: _193 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:361:21: 361:65} as core::ops::FnMut<(&mut nfa::thompson::range_trie::RangeTrie, usize, util::primitives::StateID, regex_syntax::utf8::Utf8Range, util::primitives::StateID)>>::call_mut(move _194, move _195) -> [return: bb93, unwind: bb103]
  }
  preds [bb88, bb91]
  succs [bb93, bb103]

bb93
  0: StorageDead(_200)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:72-414:73)
  1: StorageDead(_199)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:72-414:73)
  2: StorageDead(_198)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:72-414:73)
  3: StorageDead(_197)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:72-414:73)
  4: StorageDead(_196)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:72-414:73)
  5: StorageDead(_195)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:72-414:73)
  6: StorageDead(_194)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:72-414:73)
  7: StorageDead(_193)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:414:73-414:74)
  8: _133 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:407:48-415:26)
  9: StorageDead(_184)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:415:25-415:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:415:25-415:26)
      kind: goto -> bb94
  }
  preds [bb92]
  succs [bb94]

bb94
  0: StorageDead(_133)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:416:21-416:22)
  1: _201 = AddWithOverflow(_50, const 1_usize)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:417:21-417:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:417:21-417:27)
      kind: assert(!move (_201.1: bool), "attempt to compute `{} + {}`, which would overflow", _50, const 1_usize) -> [success: bb95, unwind: bb103]
  }
  preds [bb70, bb86, bb93]
  succs [bb95, bb103]

bb95
  0: _50 = move (_201.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:417:21-417:27)
  1: _125 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:63-418:18)
  2: StorageDead(_132)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  3: StorageDead(_131)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  4: StorageDead(_128)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  5: StorageDead(_126)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  6: StorageDead(_125)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:418:17-418:18)
  7: _23 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:17-418:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:369:17-418:18)
      kind: goto -> bb57
  }
  preds [bb94]
  succs [bb57]

bb96
  0: StorageDead(_101)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:423:13-423:14)
  1: StorageDead(_83)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:423:13-423:14)
  2: StorageDead(_75)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:423:13-423:14)
  3: StorageDead(_50)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  4: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  5: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  6: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  7: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  8: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  9: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  10: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:9-424:10)
      kind: goto -> bb12
  }
  preds [bb52, bb63]
  succs [bb12]

bb97
  0: StorageDead(_83)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:423:13-423:14)
  1: StorageDead(_75)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:423:13-423:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb43, bb80]
  succs [bb32]

bb98
  0: StorageLive(_203)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:9-424:10)
  1: _22 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:303:9-424:10)
  2: StorageDead(_203)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  4: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:424:9-424:10)
  5: StorageLive(_205)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:425:29-425:34)
  6: _205 = move _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:425:29-425:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:425:9-425:26)
      kind: drop(((*_1).5: std::vec::Vec<nfa::thompson::range_trie::NextInsert>)) -> [return: bb99, unwind: bb100]
  }
  preds [bb14, bb15]
  succs [bb99, bb100]

bb99
  0: ((*_1).5: std::vec::Vec<nfa::thompson::range_trie::NextInsert>) = move _205
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:425:9-425:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:425:33-425:34)
      kind: drop(_205) -> [return: bb101, unwind: bb103]
  }
  preds [bb98]
  succs [bb101, bb103]

bb100
  0: ((*_1).5: std::vec::Vec<nfa::thompson::range_trie::NextInsert>) = move _205
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:425:9-425:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:425:33-425:34)
      kind: drop(_205) -> [return: bb103, unwind terminate(cleanup)]
  }
  preds [bb98]
  succs [bb103]

bb101
  0: StorageDead(_205)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:425:33-425:34)
  1: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:295:52-426:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:426:5-426:6)
      kind: drop(_12) -> [return: bb102, unwind: bb105]
  }
  preds [bb99]
  succs [bb102, bb105]

bb102
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:426:5-426:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:426:6-426:6)
      kind: return
  }
  preds [bb101]
  succs []

bb103
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:426:5-426:6)
      kind: drop(_12) -> [return: bb105, unwind terminate(cleanup)]
  }
  preds [bb8, bb9, bb10, bb12, bb13, bb16, bb17, bb18, bb20, bb21, bb22, bb23, bb24, bb25, bb26, bb28, bb29, bb32, bb33, bb34, bb35, bb36, bb40, bb41, bb42, bb44, bb46, bb49, bb50, bb53, bb54, bb55, bb57, bb58, bb67, bb68, bb69, bb71, bb72, bb73, bb75, bb77, bb78, bb84, bb85, bb89, bb90, bb92, bb94, bb99, bb100]
  succs [bb105]

bb104
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:299:68-299:69)
      kind: drop(_15) -> [return: bb105, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb105]

bb105
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:295:5-426:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb5, bb6, bb101, bb103, bb104]
  succs []

