bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1869:29-1869:45)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1869:29-1869:38)
  2: _4 = &mut ((*_1).1: core::option::Option<nfa::thompson::compiler::Utf8LastTransition>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1869:29-1869:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1869:29-1869:45)
      kind: _3 = core::option::Option::<nfa::thompson::compiler::Utf8LastTransition>::take(move _4) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1869:44-1869:45)
  1: PlaceMention(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1869:29-1869:45)
  2: _5 = discriminant(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1869:29-1869:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1869:16-1869:26)
      kind: switchInt(move _5) -> [1: bb2, otherwise: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1869:16-1869:26)
      kind: falseEdge -> [real: bb3, imaginary: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1869:21-1869:25)
  1: _6 = move ((_3 as Some).0: nfa::thompson::compiler::Utf8LastTransition)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1869:21-1869:25)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1870:13-1874:15)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1870:13-1870:23)
  4: _8 = &mut ((*_1).0: std::vec::Vec<nfa::thompson::nfa::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1870:13-1870:23)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1870:29-1874:14)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1871:24-1871:34)
  7: _10 = (_6.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1871:24-1871:34)
  8: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1872:22-1872:30)
  9: _11 = (_6.1: u8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1872:22-1872:30)
  10: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1873:17-1873:21)
  11: _12 = _2
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1873:17-1873:21)
  12: _9 = nfa::thompson::nfa::Transition { start: move _10, end: move _11, next: move _12 }
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1870:29-1874:14)
  13: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1874:13-1874:14)
  14: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1874:13-1874:14)
  15: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1874:13-1874:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1870:13-1874:15)
      kind: _7 = std::vec::Vec::<nfa::thompson::nfa::Transition>::push(move _8, move _9) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1874:14-1874:15)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1874:14-1874:15)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1874:15-1874:16)
  3: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1869:46-1875:10)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1875:9-1875:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1869:9-1875:10)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb5
  0: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1875:10-1875:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1869:9-1875:10)
      kind: goto -> bb6
  }
  preds [bb1, bb2]
  succs [bb6]

bb6
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1876:5-1876:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1876:6-1876:6)
      kind: return
  }
  preds [bb4, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1868:5-1876:6)
      kind: resume
  }
  preds [bb0, bb3]
  succs []

