bb0
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1679:9-1748:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1679:9-1748:10)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1679:9-1748:10)
      kind: falseUnwind -> [real: bb2, unwind: bb49]
  }
  preds [bb0, bb46]
  succs [bb2, bb49]

bb2
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1683:13-1685:14)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1683:17-1683:37)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1683:17-1683:25)
  3: _12 = &mut ((*_4).0: util::sparse_set::SparseSet)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1683:17-1683:25)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1683:33-1683:36)
  5: _13 = _7
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1683:33-1683:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1683:17-1683:37)
      kind: _11 = util::sparse_set::SparseSet::insert(move _12, move _13) -> [return: bb3, unwind: bb49]
  }
  preds [bb1]
  succs [bb3, bb49]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1683:17-1683:37)
      kind: switchInt(move _11) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1683:36-1683:37)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1683:36-1683:37)
  2: _10 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1685:14-1685:14)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1685:13-1685:14)
  4: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1685:13-1685:14)
  5: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1686:20-1686:39)
  6: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1686:20-1686:28)
  7: _16 = &((*_1).1: nfa::thompson::nfa::NFA)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1686:20-1686:28)
  8: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1686:35-1686:38)
  9: _17 = _7
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1686:35-1686:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1686:20-1686:39)
      kind: _15 = nfa::thompson::nfa::NFA::state(move _16, move _17) -> [return: bb6, unwind: bb49]
  }
  preds [bb3]
  succs [bb6, bb49]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1683:36-1683:37)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1683:36-1683:37)
  2: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1684:17-1684:23)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1685:13-1685:14)
  4: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1685:13-1685:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb48
  }
  preds [bb3]
  succs [bb48]

bb6
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1686:38-1686:39)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1686:38-1686:39)
  2: PlaceMention((*_15))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1686:19-1686:39)
  3: _18 = discriminant((*_15))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1686:19-1686:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1686:13-1686:39)
      kind: switchInt(move _18) -> [0: bb12, 1: bb12, 2: bb12, 3: bb8, 4: bb9, 5: bb10, 6: bb11, 7: bb12, 8: bb12, otherwise: bb7]
  }
  preds [bb4]
  succs [bb7, bb8, bb9, bb10, bb11, bb12, bb12, bb12, bb12, bb12]

bb7
  0: FakeRead(ForMatchedPlace(None), (*_15))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1686:19-1686:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1686:19-1686:39)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1695:17-1695:43)
      kind: falseEdge -> [real: bb16, imaginary: bb9]
  }
  preds [bb6, bb12]
  succs [bb9, bb16]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1708:17-1708:48)
      kind: falseEdge -> [real: bb22, imaginary: bb10]
  }
  preds [bb6, bb8]
  succs [bb10, bb22]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1726:17-1726:50)
      kind: falseEdge -> [real: bb34, imaginary: bb11]
  }
  preds [bb6, bb9]
  succs [bb11, bb34]

bb11
  0: StorageLive(_64)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1731:34-1731:38)
  1: _64 = (((*_15) as Capture).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1731:34-1731:38)
  2: StorageLive(_65)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1731:40-1731:44)
  3: _65 = (((*_15) as Capture).3: util::primitives::SmallIndex)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1731:40-1731:44)
  4: StorageLive(_66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:21-1744:22)
  5: StorageLive(_67)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:24-1736:58)
  6: StorageLive(_68)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:24-1736:39)
  7: StorageLive(_69)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:24-1736:28)
  8: _69 = &_65
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:24-1736:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:24-1736:39)
      kind: _68 = util::primitives::SmallIndex::as_usize(move _69) -> [return: bb36, unwind: bb49]
  }
  preds [bb6, bb10]
  succs [bb36, bb49]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1687:17-1691:38)
      kind: falseEdge -> [real: bb13, imaginary: bb8]
  }
  preds [bb6, bb6, bb6, bb6, bb6]
  succs [bb8, bb13]

bb13
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:21-1692:79)
  1: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:21-1692:51)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:21-1692:51)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:21-1692:36)
  4: _23 = &mut ((*_4).1: nfa::thompson::pikevm::SlotTable)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:21-1692:36)
  5: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:47-1692:50)
  6: _24 = _7
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:47-1692:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:21-1692:51)
      kind: _22 = nfa::thompson::pikevm::SlotTable::for_state(move _23, move _24) -> [return: bb14, unwind: bb49]
  }
  preds [bb12]
  succs [bb14, bb49]

bb14
  0: _21 = &mut (*_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:21-1692:51)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:50-1692:51)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:50-1692:51)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:68-1692:78)
  4: _25 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:68-1692:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:21-1692:79)
      kind: _20 = core::slice::<impl [core::option::Option<util::primitives::NonMaxUsize>]>::copy_from_slice(move _21, move _25) -> [return: bb15, unwind: bb49]
  }
  preds [bb13]
  succs [bb15, bb49]

bb15
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:78-1692:79)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:78-1692:79)
  2: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:79-1692:80)
  3: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1692:79-1692:80)
  4: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1693:21-1693:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1693:21-1693:27)
      kind: goto -> bb47
  }
  preds [bb14]
  succs [bb47]

bb16
  0: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1695:31-1695:35)
  1: _26 = (((*_15) as Look).0: util::look::Look)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1695:31-1695:35)
  2: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1695:37-1695:41)
  3: _27 = (((*_15) as Look).1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1695:37-1695:41)
  4: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1699:21-1705:22)
  5: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1699:25-1703:22)
  6: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1699:25-1699:48)
  7: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1699:25-1699:48)
  8: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1699:25-1699:33)
  9: _32 = &((*_1).1: nfa::thompson::nfa::NFA)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1699:25-1699:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1699:25-1699:48)
      kind: _31 = nfa::thompson::nfa::NFA::look_matcher(move _32) -> [return: bb17, unwind: bb49]
  }
  preds [bb8]
  succs [bb17, bb49]

bb17
  0: _30 = &(*_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1699:25-1699:48)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1699:47-1699:48)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1700:25-1700:29)
  3: _33 = _26
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1700:25-1700:29)
  4: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1701:25-1701:41)
  5: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1701:25-1701:41)
  6: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1701:25-1701:30)
  7: _36 = &(*_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1701:25-1701:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1701:25-1701:41)
      kind: _35 = util::search::Input::<'_>::haystack(move _36) -> [return: bb18, unwind: bb49]
  }
  preds [bb16]
  succs [bb18, bb49]

bb18
  0: _34 = &(*_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1701:25-1701:41)
  1: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1701:40-1701:41)
  2: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1702:25-1702:27)
  3: _37 = _6
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1702:25-1702:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1699:25-1703:22)
      kind: _29 = util::look::LookMatcher::matches_inline(move _30, move _33, move _34, move _37) -> [return: bb19, unwind: bb49]
  }
  preds [bb17]
  succs [bb19, bb49]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1699:25-1703:22)
      kind: switchInt(move _29) -> [0: bb21, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb21]

bb20
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1703:21-1703:22)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1703:21-1703:22)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1703:21-1703:22)
  3: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1703:21-1703:22)
  4: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1703:21-1703:22)
  5: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1703:21-1703:22)
  6: _28 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1705:22-1705:22)
  7: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1705:21-1705:22)
  8: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1705:21-1705:22)
  9: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1706:27-1706:31)
  10: _39 = _27
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1706:27-1706:31)
  11: _7 = move _39
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1706:21-1706:31)
  12: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1706:30-1706:31)
  13: _9 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1695:47-1707:18)
  14: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1707:17-1707:18)
  15: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1707:17-1707:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1707:17-1707:18)
      kind: goto -> bb46
  }
  preds [bb19]
  succs [bb46]

bb21
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1703:21-1703:22)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1703:21-1703:22)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1703:21-1703:22)
  3: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1703:21-1703:22)
  4: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1703:21-1703:22)
  5: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1703:21-1703:22)
  6: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1704:25-1704:31)
  7: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1705:21-1705:22)
  8: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1705:21-1705:22)
  9: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1707:17-1707:18)
  10: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1707:17-1707:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb47
  }
  preds [bb19]
  succs [bb47]

bb22
  0: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1708:32-1708:46)
  1: _40 = &(((*_15) as Union).0: std::boxed::Box<[util::primitives::StateID]>)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1708:32-1708:46)
  2: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1709:27-1712:22)
  3: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1709:33-1709:50)
  4: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1709:33-1709:43)
  5: _43 = &(*(*_40))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1709:33-1709:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1709:33-1709:50)
      kind: _42 = core::slice::<impl [util::primitives::StateID]>::get::<usize>(move _43, const 0_usize) -> [return: bb23, unwind: bb49]
  }
  preds [bb9]
  succs [bb23, bb49]

bb23
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1709:49-1709:50)
  1: PlaceMention(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1709:33-1709:50)
  2: _44 = discriminant(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1709:33-1709:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1709:27-1709:50)
      kind: switchInt(move _44) -> [0: bb25, 1: bb26, otherwise: bb24]
  }
  preds [bb22]
  succs [bb24, bb25, bb26]

bb24
  0: FakeRead(ForMatchedPlace(None), _42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1709:33-1709:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1709:33-1709:50)
      kind: unreachable
  }
  preds [bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1710:25-1710:29)
      kind: falseEdge -> [real: bb27, imaginary: bb26]
  }
  preds [bb23]
  succs [bb26, bb27]

bb26
  0: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1711:31-1711:34)
  1: _46 = (*((_42 as Some).0: &util::primitives::StateID))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1711:31-1711:34)
  2: _41 = _46
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1711:39-1711:42)
  3: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1711:41-1711:42)
  4: _7 = move _41
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1709:21-1712:22)
  5: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1712:21-1712:22)
  6: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1712:22-1712:23)
  7: StorageLive(_47)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1718:21-1724:22)
  8: StorageLive(_48)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1718:21-1718:26)
  9: _48 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1718:21-1718:26)
  10: StorageLive(_49)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:25-1723:57)
  11: StorageLive(_50)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:25-1722:35)
  12: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:25-1721:38)
  13: StorageLive(_52)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:25-1720:36)
  14: StorageLive(_53)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:25-1719:40)
  15: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:35-1719:40)
  16: StorageLive(_55)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:25-1719:35)
  17: _55 = &(*(*_40))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:25-1719:35)
  18: StorageLive(_56)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:36-1719:39)
  19: _56 = core::ops::RangeFrom::<usize> { start: const 1_usize }
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:36-1719:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:35-1719:40)
      kind: _54 = <[util::primitives::StateID] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _55, move _56) -> [return: bb28, unwind: bb49]
  }
  preds [bb23, bb25]
  succs [bb28, bb49]

bb27
  0: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1710:33-1710:39)
  1: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1712:21-1712:22)
  2: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1712:22-1712:23)
  3: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1725:17-1725:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb47
  }
  preds [bb25]
  succs [bb47]

bb28
  0: _53 = &(*_54)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:25-1719:40)
  1: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:39-1719:40)
  2: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:39-1719:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:25-1720:36)
      kind: _52 = core::slice::<impl [util::primitives::StateID]>::iter(move _53) -> [return: bb29, unwind: bb49]
  }
  preds [bb26]
  succs [bb29, bb49]

bb29
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1720:35-1720:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:25-1721:38)
      kind: _51 = <core::slice::Iter<'_, util::primitives::StateID> as core::iter::Iterator>::copied::<'_, util::primitives::StateID>(move _52) -> [return: bb30, unwind: bb49]
  }
  preds [bb28]
  succs [bb30, bb49]

bb30
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1721:37-1721:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:25-1722:35)
      kind: _50 = <core::iter::Copied<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::rev(move _51) -> [return: bb31, unwind: bb49]
  }
  preds [bb29]
  succs [bb31, bb49]

bb31
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1722:34-1722:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1719:25-1723:57)
      kind: _49 = <core::iter::Rev<core::iter::Copied<core::slice::Iter<'_, util::primitives::StateID>>> as core::iter::Iterator>::map::<nfa::thompson::pikevm::FollowEpsilon, fn(util::primitives::StateID) -> nfa::thompson::pikevm::FollowEpsilon {nfa::thompson::pikevm::FollowEpsilon::Explore}>(move _50, nfa::thompson::pikevm::FollowEpsilon::Explore) -> [return: bb32, unwind: bb49]
  }
  preds [bb30]
  succs [bb32, bb49]

bb32
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1723:56-1723:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1718:21-1724:22)
      kind: _47 = <std::vec::Vec<nfa::thompson::pikevm::FollowEpsilon> as core::iter::Extend<nfa::thompson::pikevm::FollowEpsilon>>::extend::<core::iter::Map<core::iter::Rev<core::iter::Copied<core::slice::Iter<'_, util::primitives::StateID>>>, fn(util::primitives::StateID) -> nfa::thompson::pikevm::FollowEpsilon {nfa::thompson::pikevm::FollowEpsilon::Explore}>>(move _48, move _49) -> [return: bb33, unwind: bb49]
  }
  preds [bb31]
  succs [bb33, bb49]

bb33
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1724:21-1724:22)
  1: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1724:21-1724:22)
  2: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1724:22-1724:23)
  3: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1724:22-1724:23)
  4: _9 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1708:52-1725:18)
  5: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1725:17-1725:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1725:17-1725:18)
      kind: goto -> bb46
  }
  preds [bb32]
  succs [bb46]

bb34
  0: StorageLive(_57)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1726:38-1726:42)
  1: _57 = (((*_15) as BinaryUnion).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1726:38-1726:42)
  2: StorageLive(_58)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1726:44-1726:48)
  3: _58 = (((*_15) as BinaryUnion).1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1726:44-1726:48)
  4: StorageLive(_59)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1727:27-1727:31)
  5: _59 = _57
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1727:27-1727:31)
  6: _7 = move _59
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1727:21-1727:31)
  7: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1727:30-1727:31)
  8: StorageLive(_60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1729:21-1729:61)
  9: StorageLive(_61)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1729:21-1729:26)
  10: _61 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1729:21-1729:26)
  11: StorageLive(_62)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1729:32-1729:60)
  12: StorageLive(_63)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1729:55-1729:59)
  13: _63 = _58
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1729:55-1729:59)
  14: _62 = nfa::thompson::pikevm::FollowEpsilon::Explore(move _63)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1729:32-1729:60)
  15: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1729:59-1729:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1729:21-1729:61)
      kind: _60 = std::vec::Vec::<nfa::thompson::pikevm::FollowEpsilon>::push(move _61, move _62) -> [return: bb35, unwind: bb49]
  }
  preds [bb10]
  succs [bb35, bb49]

bb35
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1729:60-1729:61)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1729:60-1729:61)
  2: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1729:61-1729:62)
  3: _9 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1726:54-1730:18)
  4: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1730:17-1730:18)
  5: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1730:17-1730:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1730:17-1730:18)
      kind: goto -> bb46
  }
  preds [bb34]
  succs [bb46]

bb36
  0: StorageDead(_69)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:38-1736:39)
  1: StorageLive(_70)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:42-1736:58)
  2: StorageLive(_71)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:42-1736:52)
  3: _71 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:42-1736:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:42-1736:58)
      kind: _70 = core::slice::<impl [core::option::Option<util::primitives::NonMaxUsize>]>::len(move _71) -> [return: bb37, unwind: bb49]
  }
  preds [bb11]
  succs [bb37, bb49]

bb37
  0: StorageDead(_71)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:57-1736:58)
  1: _67 = Lt(move _68, move _70)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:24-1736:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:24-1736:58)
      kind: switchInt(move _67) -> [0: bb44, otherwise: bb38]
  }
  preds [bb36]
  succs [bb38, bb44]

bb38
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:57-1736:58)
  1: StorageDead(_68)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:57-1736:58)
  2: StorageLive(_72)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1738:25-1741:27)
  3: StorageLive(_73)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1738:25-1738:30)
  4: _73 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1738:25-1738:30)
  5: StorageLive(_74)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1738:36-1741:26)
  6: StorageLive(_75)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1739:29-1739:33)
  7: _75 = _65
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1739:29-1739:33)
  8: StorageLive(_76)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1740:37-1740:53)
  9: StorageLive(_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1740:47-1740:53)
  10: StorageLive(_78)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1740:37-1740:47)
  11: _78 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1740:37-1740:47)
  12: StorageLive(_79)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1740:48-1740:52)
  13: _79 = _65
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1740:48-1740:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1740:47-1740:53)
      kind: _77 = <[core::option::Option<util::primitives::NonMaxUsize>] as core::ops::Index<util::primitives::SmallIndex>>::index(move _78, move _79) -> [return: bb39, unwind: bb49]
  }
  preds [bb37]
  succs [bb39, bb49]

bb39
  0: _76 = (*_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1740:37-1740:53)
  1: StorageDead(_79)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1740:52-1740:53)
  2: StorageDead(_78)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1740:52-1740:53)
  3: _74 = nfa::thompson::pikevm::FollowEpsilon::RestoreCapture { slot: move _75, offset: move _76 }
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1738:36-1741:26)
  4: StorageDead(_76)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1741:25-1741:26)
  5: StorageDead(_75)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1741:25-1741:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1738:25-1741:27)
      kind: _72 = std::vec::Vec::<nfa::thompson::pikevm::FollowEpsilon>::push(move _73, move _74) -> [return: bb40, unwind: bb49]
  }
  preds [bb38]
  succs [bb40, bb49]

bb40
  0: StorageDead(_74)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1741:26-1741:27)
  1: StorageDead(_73)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1741:26-1741:27)
  2: StorageDead(_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1741:27-1741:28)
  3: StorageDead(_72)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1741:27-1741:28)
  4: StorageLive(_80)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:44-1743:79)
  5: StorageLive(_81)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:49-1743:78)
  6: StorageLive(_82)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:49-1743:69)
  7: StorageLive(_83)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:66-1743:68)
  8: _83 = _6
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:66-1743:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:49-1743:69)
      kind: _82 = util::primitives::NonMaxUsize::new(move _83) -> [return: bb41, unwind: bb49]
  }
  preds [bb39]
  succs [bb41, bb49]

bb41
  0: StorageDead(_83)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:68-1743:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:49-1743:78)
      kind: _81 = core::option::Option::<util::primitives::NonMaxUsize>::unwrap(move _82) -> [return: bb42, unwind: bb49]
  }
  preds [bb40]
  succs [bb42, bb49]

bb42
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:77-1743:78)
  1: _80 = core::option::Option::<util::primitives::NonMaxUsize>::Some(move _81)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:44-1743:79)
  2: StorageDead(_81)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:78-1743:79)
  3: StorageLive(_84)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:35-1743:41)
  4: StorageLive(_85)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:25-1743:35)
  5: _85 = &mut (*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:25-1743:35)
  6: StorageLive(_86)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:36-1743:40)
  7: _86 = _65
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:36-1743:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:35-1743:41)
      kind: _84 = <[core::option::Option<util::primitives::NonMaxUsize>] as core::ops::IndexMut<util::primitives::SmallIndex>>::index_mut(move _85, move _86) -> [return: bb43, unwind: bb49]
  }
  preds [bb41]
  succs [bb43, bb49]

bb43
  0: StorageDead(_86)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:40-1743:41)
  1: StorageDead(_85)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:40-1743:41)
  2: (*_84) = move _80
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:25-1743:79)
  3: StorageDead(_80)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:78-1743:79)
  4: StorageDead(_84)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1743:79-1743:80)
  5: _66 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:59-1744:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:21-1744:22)
      kind: goto -> bb45
  }
  preds [bb42]
  succs [bb45]

bb44
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:57-1736:58)
  1: StorageDead(_68)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:57-1736:58)
  2: _66 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1744:22-1744:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1736:21-1744:22)
      kind: goto -> bb45
  }
  preds [bb37]
  succs [bb45]

bb45
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1744:21-1744:22)
  1: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1744:21-1744:22)
  2: StorageLive(_87)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1745:27-1745:31)
  3: _87 = _64
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1745:27-1745:31)
  4: _7 = move _87
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1745:21-1745:31)
  5: StorageDead(_87)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1745:30-1745:31)
  6: _9 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1731:54-1746:18)
  7: StorageDead(_65)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1746:17-1746:18)
  8: StorageDead(_64)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1746:17-1746:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1746:17-1746:18)
      kind: goto -> bb46
  }
  preds [bb43, bb44]
  succs [bb46]

bb46
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1748:9-1748:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1679:9-1748:10)
      kind: goto -> bb1
  }
  preds [bb20, bb33, bb35, bb45]
  succs [bb1]

bb47
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1748:9-1748:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb48
  }
  preds [bb15, bb21, bb27]
  succs [bb48]

bb48
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1748:9-1748:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1749:6-1749:6)
      kind: return
  }
  preds [bb5, bb47]
  succs []

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1664:5-1749:6)
      kind: resume
  }
  preds [bb1, bb2, bb4, bb11, bb13, bb14, bb16, bb17, bb18, bb22, bb26, bb28, bb29, bb30, bb31, bb32, bb34, bb36, bb38, bb39, bb40, bb41, bb42]
  succs []

