bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:13-4059:20)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:59)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:58)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:34)
  4: _6 = &((*_1).0: hybrid::dfa::Config)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:34)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:53-4059:57)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:53-4059:57)
  7: _8 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:53-4059:57)
  8: _7 = &(*_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:53-4059:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:58)
      kind: _5 = hybrid::dfa::Config::quit_set_from_nfa(move _6, move _7) -> [return: bb1, unwind: bb45]
  }
  preds []
  succs [bb1, bb45]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:57-4059:58)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:57-4059:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:59)
      kind: _4 = <core::result::Result<util::alphabet::ByteSet, hybrid::error::BuildError> as core::ops::Try>::branch(move _5) -> [return: bb2, unwind: bb44]
  }
  preds [bb0]
  succs [bb2, bb44]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:58-4059:59)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:59)
  2: _9 = discriminant(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:59)
      kind: switchInt(move _9) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:59)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:58-4059:59)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:59)
  1: _13 = ((_4 as Continue).0: util::alphabet::ByteSet)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:59)
  2: _3 = _13
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:59)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:58-4059:59)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:13-4059:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:59-4059:60)
      kind: drop(_4) -> [return: bb8, unwind: bb45]
  }
  preds [bb2, bb4]
  succs [bb8, bb45]

bb6
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:58-4059:59)
  1: _10 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, hybrid::error::BuildError>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:58-4059:59)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:58-4059:59)
  3: _12 = move _10
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:58-4059:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:23-4059:59)
      kind: _0 = <core::result::Result<hybrid::dfa::DFA, hybrid::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hybrid::error::BuildError>>>::from_residual(move _12) -> [return: bb7, unwind: bb41]
  }
  preds [bb4]
  succs [bb7, bb41]

bb7
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:58-4059:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:58-4059:59)
      kind: drop(_10) -> [return: bb35, unwind: bb43]
  }
  preds [bb6]
  succs [bb35, bb43]

bb8
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:59-4059:60)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:59-4059:60)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:13-4060:20)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:23-4060:34)
  4: _15 = &((*_1).0: hybrid::dfa::Config)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:23-4060:34)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:57-4060:61)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:57-4060:61)
  7: _17 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:57-4060:61)
  8: _16 = &(*_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:57-4060:61)
  9: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:63-4060:71)
  10: StorageLive(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:63-4060:71)
  11: _19 = &_3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:63-4060:71)
  12: _18 = &(*_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:63-4060:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:23-4060:72)
      kind: _14 = hybrid::dfa::Config::byte_classes_from_nfa(move _15, move _16, move _18) -> [return: bb9, unwind: bb45]
  }
  preds [bb5]
  succs [bb9, bb45]

bb9
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:71-4060:72)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:71-4060:72)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:71-4060:72)
  3: FakeRead(ForLet(None), _14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:13-4060:20)
  4: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:72-4060:73)
  5: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4060:72-4060:73)
  6: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4071:13-4071:22)
  7: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4072:13-4072:17)
  8: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4072:13-4072:17)
  9: _22 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4072:13-4072:17)
  10: _21 = &(*_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4072:13-4072:17)
  11: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4073:13-4073:21)
  12: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4073:13-4073:21)
  13: _24 = &_14
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4073:13-4073:21)
  14: _23 = &(*_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4073:13-4073:21)
  15: StorageLive(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4074:13-4074:54)
  16: StorageLive(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4074:13-4074:24)
  17: _26 = &((*_1).0: hybrid::dfa::Config)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4074:13-4074:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4074:13-4074:54)
      kind: _25 = hybrid::dfa::Config::get_starts_for_each_pattern(move _26) -> [return: bb10, unwind: bb45]
  }
  preds [bb8]
  succs [bb10, bb45]

bb10
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4074:53-4074:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4071:25-4075:10)
      kind: _20 = hybrid::dfa::minimum_cache_capacity(move _21, move _23, move _25) -> [return: bb11, unwind: bb45]
  }
  preds [bb9]
  succs [bb11, bb45]

bb11
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4075:9-4075:10)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4075:9-4075:10)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4075:9-4075:10)
  3: FakeRead(ForLet(None), _20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4071:13-4071:22)
  4: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4075:10-4075:11)
  5: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4075:10-4075:11)
  6: StorageLive(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4076:13-4076:31)
  7: StorageLive(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4076:34-4076:45)
  8: _28 = &((*_1).0: hybrid::dfa::Config)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4076:34-4076:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4076:34-4076:66)
      kind: _27 = hybrid::dfa::Config::get_cache_capacity(move _28) -> [return: bb12, unwind: bb45]
  }
  preds [bb10]
  succs [bb12, bb45]

bb12
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4076:65-4076:66)
  1: FakeRead(ForLet(None), _27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4076:13-4076:31)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4077:9-4095:10)
  3: StorageLive(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4077:12-4077:38)
  4: StorageLive(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4077:12-4077:26)
  5: _31 = _27
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4077:12-4077:26)
  6: StorageLive(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4077:29-4077:38)
  7: _32 = _20
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4077:29-4077:38)
  8: _30 = Lt(move _31, move _32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4077:12-4077:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4077:12-4077:38)
      kind: switchInt(move _30) -> [0: bb19, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb19]

bb13
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4077:37-4077:38)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4077:37-4077:38)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4081:16-4081:59)
  3: StorageLive(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4081:16-4081:27)
  4: _34 = &((*_1).0: hybrid::dfa::Config)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4081:16-4081:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4081:16-4081:59)
      kind: _33 = hybrid::dfa::Config::get_skip_cache_capacity_check(move _34) -> [return: bb14, unwind: bb45]
  }
  preds [bb12]
  succs [bb14, bb45]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4081:16-4081:59)
      kind: switchInt(move _33) -> [0: bb16, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16]

bb15
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4081:58-4081:59)
  1: StorageLive(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4088:34-4088:43)
  2: _35 = _20
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4088:34-4088:43)
  3: _27 = move _35
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4088:17-4088:43)
  4: StorageDead(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4088:42-4088:43)
  5: _29 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4081:60-4089:14)
  6: StorageDead(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4094:13-4094:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4077:9-4095:10)
      kind: goto -> bb20
  }
  preds [bb14]
  succs [bb20]

bb16
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4081:58-4081:59)
  1: StorageLive(_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4090:28-4093:18)
  2: StorageLive(_38)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4091:21-4091:30)
  3: _38 = _20
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4091:21-4091:30)
  4: StorageLive(_39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4092:21-4092:35)
  5: _39 = _27
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4092:21-4092:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4090:28-4093:18)
      kind: _37 = hybrid::error::BuildError::insufficient_cache_capacity(move _38, move _39) -> [return: bb17, unwind: bb45]
  }
  preds [bb14]
  succs [bb17, bb45]

bb17
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4093:17-4093:18)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4093:17-4093:18)
  2: _0 = core::result::Result::<hybrid::dfa::DFA, hybrid::error::BuildError>::Err(move _37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4090:24-4093:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4093:18-4093:19)
      kind: drop(_37) -> [return: bb18, unwind: bb45]
  }
  preds [bb16]
  succs [bb18, bb45]

bb18
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4093:18-4093:19)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4094:13-4094:14)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4095:9-4095:10)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4095:9-4095:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb34
  }
  preds [bb17]
  succs [bb34]

bb19
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4077:37-4077:38)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4077:37-4077:38)
  2: _29 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4095:10-4095:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4077:9-4095:10)
      kind: goto -> bb20
  }
  preds [bb12]
  succs [bb20]

bb20
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4095:9-4095:10)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4095:9-4095:10)
  2: StorageLive(_40)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4100:9-4102:10)
  3: StorageLive(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4100:27-4100:58)
  4: StorageLive(_42)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4100:49-4100:57)
  5: StorageLive(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4100:49-4100:57)
  6: _43 = &_14
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4100:49-4100:57)
  7: _42 = &(*_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4100:49-4100:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4100:27-4100:58)
      kind: _41 = hybrid::dfa::minimum_lazy_state_id(move _42) -> [return: bb21, unwind: bb45]
  }
  preds [bb15, bb19]
  succs [bb21, bb45]

bb21
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4100:57-4100:58)
  1: PlaceMention(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4100:27-4100:58)
  2: _44 = discriminant(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4100:27-4100:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4100:16-4100:24)
      kind: switchInt(move _44) -> [1: bb22, otherwise: bb26]
  }
  preds [bb20]
  succs [bb22, bb26]

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4100:16-4100:24)
      kind: falseEdge -> [real: bb23, imaginary: bb26]
  }
  preds [bb21]
  succs [bb23, bb26]

bb23
  0: StorageLive(_45)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4100:20-4100:23)
  1: _45 = move ((_41 as Err).0: hybrid::id::LazyStateIDError)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4100:20-4100:23)
  2: StorageLive(_47)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4101:24-4101:71)
  3: StorageLive(_48)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4101:67-4101:70)
  4: _48 = move _45
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4101:67-4101:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4101:24-4101:71)
      kind: _47 = hybrid::error::BuildError::insufficient_state_id_capacity(move _48) -> [return: bb24, unwind: bb45]
  }
  preds [bb22]
  succs [bb24, bb45]

bb24
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4101:70-4101:71)
  1: _0 = core::result::Result::<hybrid::dfa::DFA, hybrid::error::BuildError>::Err(move _47)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4101:20-4101:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4101:71-4101:72)
      kind: drop(_47) -> [return: bb25, unwind: bb45]
  }
  preds [bb23]
  succs [bb25, bb45]

bb25
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4101:71-4101:72)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4102:9-4102:10)
  2: StorageDead(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4102:9-4102:10)
  3: StorageDead(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4102:9-4102:10)
  4: StorageDead(_40)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4102:9-4102:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb34
  }
  preds [bb24]
  succs [bb34]

bb26
  0: _40 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4102:10-4102:10)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4102:9-4102:10)
  2: StorageDead(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4102:9-4102:10)
  3: StorageDead(_40)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4102:9-4102:10)
  4: StorageLive(_49)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4103:13-4103:20)
  5: StorageLive(_50)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4103:23-4103:30)
  6: _50 = &_14
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4103:23-4103:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4103:23-4103:40)
      kind: _49 = util::alphabet::ByteClasses::stride2(move _50) -> [return: bb27, unwind: bb45]
  }
  preds [bb21, bb22]
  succs [bb27, bb45]

bb27
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4103:39-4103:40)
  1: FakeRead(ForLet(None), _49)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4103:13-4103:20)
  2: StorageLive(_51)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4104:13-4104:22)
  3: StorageLive(_52)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4104:43-4104:61)
  4: StorageLive(_53)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4104:43-4104:61)
  5: StorageLive(_54)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4104:43-4104:46)
  6: _54 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4104:43-4104:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4104:43-4104:61)
      kind: _53 = nfa::thompson::nfa::NFA::look_matcher(move _54) -> [return: bb28, unwind: bb45]
  }
  preds [bb26]
  succs [bb28, bb45]

bb28
  0: _52 = &(*_53)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4104:43-4104:61)
  1: StorageDead(_54)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4104:60-4104:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4104:25-4104:62)
      kind: _51 = util::start::StartByteMap::new(move _52) -> [return: bb29, unwind: bb45]
  }
  preds [bb27]
  succs [bb29, bb45]

bb29
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4104:61-4104:62)
  1: FakeRead(ForLet(None), _51)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4104:13-4104:22)
  2: StorageDead(_53)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4104:62-4104:63)
  3: StorageLive(_55)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4105:12-4113:10)
  4: StorageLive(_56)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4106:21-4106:40)
  5: StorageLive(_57)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4106:21-4106:32)
  6: _57 = &((*_1).0: hybrid::dfa::Config)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4106:21-4106:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4106:21-4106:40)
      kind: _56 = <hybrid::dfa::Config as core::clone::Clone>::clone(move _57) -> [return: bb30, unwind: bb45]
  }
  preds [bb28]
  succs [bb30, bb45]

bb30
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4106:39-4106:40)
  1: StorageLive(_58)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4107:13-4107:16)
  2: _58 = move _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4107:13-4107:16)
  3: StorageLive(_59)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4108:13-4108:20)
  4: _59 = _49
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4108:13-4108:20)
  5: StorageLive(_60)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4109:13-4109:22)
  6: _60 = move _51
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4109:13-4109:22)
  7: StorageLive(_61)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4110:13-4110:20)
  8: _61 = _14
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4110:13-4110:20)
  9: StorageLive(_62)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4111:13-4111:20)
  10: _62 = _3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4111:13-4111:20)
  11: StorageLive(_63)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4112:13-4112:27)
  12: _63 = _27
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4112:13-4112:27)
  13: _55 = hybrid::dfa::DFA { config: move _56, nfa: move _58, stride2: move _59, start_map: move _60, classes: move _61, quitset: move _62, cache_capacity: move _63 }
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4105:12-4113:10)
  14: StorageDead(_63)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4113:9-4113:10)
  15: StorageDead(_62)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4113:9-4113:10)
  16: StorageDead(_61)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4113:9-4113:10)
  17: StorageDead(_60)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4113:9-4113:10)
  18: StorageDead(_59)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4113:9-4113:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4113:9-4113:10)
      kind: drop(_58) -> [return: bb31, unwind: bb39]
  }
  preds [bb29]
  succs [bb31, bb39]

bb31
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4113:9-4113:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4113:9-4113:10)
      kind: drop(_56) -> [return: bb32, unwind: bb40]
  }
  preds [bb30]
  succs [bb32, bb40]

bb32
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4113:9-4113:10)
  1: _0 = core::result::Result::<hybrid::dfa::DFA, hybrid::error::BuildError>::Ok(move _55)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4105:9-4113:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4113:10-4113:11)
      kind: drop(_55) -> [return: bb33, unwind: bb45]
  }
  preds [bb31]
  succs [bb33, bb45]

bb33
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4113:10-4113:11)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4114:5-4114:6)
  2: StorageDead(_49)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4114:5-4114:6)
  3: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4114:5-4114:6)
  4: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4114:5-4114:6)
  5: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4114:5-4114:6)
  6: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4114:5-4114:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4114:5-4114:6)
      kind: drop(_2) -> [return: bb38, unwind: bb46]
  }
  preds [bb32]
  succs [bb38, bb46]

bb34
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4114:5-4114:6)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4114:5-4114:6)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4114:5-4114:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb37
  }
  preds [bb18, bb25]
  succs [bb37]

bb35
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:58-4059:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:59-4059:60)
      kind: drop(_4) -> [return: bb36, unwind: bb45]
  }
  preds [bb7]
  succs [bb36, bb45]

bb36
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:59-4059:60)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:59-4059:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb37
  }
  preds [bb35]
  succs [bb37]

bb37
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4114:5-4114:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4114:5-4114:6)
      kind: drop(_2) -> [return: bb38, unwind: bb46]
  }
  preds [bb34, bb36]
  succs [bb38, bb46]

bb38
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4114:6-4114:6)
      kind: return
  }
  preds [bb33, bb37]
  succs []

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4113:9-4113:10)
      kind: drop(_56) -> [return: bb40, unwind terminate(cleanup)]
  }
  preds [bb30]
  succs [bb40]

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4113:10-4113:11)
      kind: drop(_55) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb31, bb39]
  succs [bb45]

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:58-4059:59)
      kind: drop(_12) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:58-4059:59)
      kind: drop(_10) -> [return: bb43, unwind terminate(cleanup)]
  }
  preds [bb41]
  succs [bb43]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:59-4059:60)
      kind: drop(_4) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb7, bb42]
  succs [bb45]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4059:58-4059:59)
      kind: drop(_5) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb45]

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4114:5-4114:6)
      kind: drop(_2) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb0, bb5, bb8, bb9, bb10, bb11, bb13, bb16, bb17, bb20, bb23, bb24, bb26, bb27, bb28, bb29, bb32, bb35, bb40, bb43, bb44]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4055:5-4114:6)
      kind: resume
  }
  preds [bb33, bb37, bb45]
  succs []

