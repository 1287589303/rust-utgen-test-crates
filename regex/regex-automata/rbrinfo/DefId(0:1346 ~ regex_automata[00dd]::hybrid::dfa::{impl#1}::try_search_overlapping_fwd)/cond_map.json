{
  "regex-automata/src/hybrid/dfa.rs:906:25:906:34": [
    {
      "Bool": {
        "Other": "utf8empty"
      }
    }
  ],
  "regex-automata/src/hybrid/dfa.rs:902:25:902:51": [
    {
      "Bool": {
        "Other": "self.get_nfa().has_empty()"
      }
    }
  ],
  "regex-automata/src/hybrid/dfa.rs:903:9:903:65": [
    {
      "Try": "search::find_overlapping_fwd(self, cache, input, state)?"
    }
  ],
  "regex-automata/src/hybrid/dfa.rs:902:55:902:79": [
    {
      "Bool": {
        "Other": "self.get_nfa().is_utf8()"
      }
    }
  ],
  "regex-automata/src/hybrid/dfa.rs:904:15:904:32": [
    {
      "Match": {
        "match_source": "regex-automata/src/hybrid/dfa.rs:904:15:904:32",
        "match_str": "state.get_match()",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/hybrid/dfa.rs:907:13:907:20": {
            "pat": {
              "pat_str": "Some(_)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/hybrid/dfa.rs:907:24:913:14"
          },
          "regex-automata/src/hybrid/dfa.rs:906:13:906:20": {
            "pat": {
              "pat_str": "Some(_)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": {
              "regex-automata/src/hybrid/dfa.rs:906:25:906:34": [
                {
                  "Bool": {
                    "Other": "utf8empty"
                  }
                }
              ]
            },
            "body_source": "regex-automata/src/hybrid/dfa.rs:906:38:906:44"
          },
          "regex-automata/src/hybrid/dfa.rs:905:13:905:17": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/hybrid/dfa.rs:905:21:905:27"
          }
        }
      }
    }
  ]
}