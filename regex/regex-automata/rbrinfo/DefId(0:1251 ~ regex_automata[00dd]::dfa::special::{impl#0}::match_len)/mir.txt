bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/special.rs:458:12-458:26)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/special.rs:458:12-458:16)
  2: _4 = &(*_1)
    SourceInfo(regex-automata/src/dfa/special.rs:458:12-458:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:458:12-458:26)
      kind: _3 = dfa::special::Special::matches(move _4) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:458:12-458:26)
      kind: switchInt(move _3) -> [0: bb8, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/special.rs:458:25-458:26)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/special.rs:459:13-459:77)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/special.rs:459:14-459:67)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/special.rs:459:14-459:39)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/special.rs:459:14-459:28)
  5: _8 = &((*_1).3: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:459:14-459:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:459:14-459:39)
      kind: _7 = util::primitives::StateID::as_usize(move _8) -> [return: bb3, unwind: bb10]
  }
  preds [bb1]
  succs [bb3, bb10]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/special.rs:459:38-459:39)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/special.rs:459:42-459:67)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/special.rs:459:42-459:56)
  3: _10 = &((*_1).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:459:42-459:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:459:42-459:67)
      kind: _9 = util::primitives::StateID::as_usize(move _10) -> [return: bb4, unwind: bb10]
  }
  preds [bb2]
  succs [bb4, bb10]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/special.rs:459:66-459:67)
  1: _11 = SubWithOverflow(_7, _9)
    SourceInfo(regex-automata/src/dfa/special.rs:459:14-459:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:459:14-459:67)
      kind: assert(!move (_11.1: bool), "attempt to compute `{} - {}`, which would overflow", move _7, move _9) -> [success: bb5, unwind: bb10]
  }
  preds [bb3]
  succs [bb5, bb10]

bb5
  0: _6 = move (_11.0: usize)
    SourceInfo(regex-automata/src/dfa/special.rs:459:14-459:67)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/special.rs:459:66-459:67)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/special.rs:459:66-459:67)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/special.rs:459:70-459:76)
  4: _12 = _2
    SourceInfo(regex-automata/src/dfa/special.rs:459:70-459:76)
  5: _13 = AddWithOverflow(_6, _12)
    SourceInfo(regex-automata/src/dfa/special.rs:459:13-459:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:459:13-459:77)
      kind: assert(!move (_13.1: bool), "attempt to compute `{} + {}`, which would overflow", move _6, move _12) -> [success: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: _5 = move (_13.0: usize)
    SourceInfo(regex-automata/src/dfa/special.rs:459:13-459:77)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/special.rs:459:76-459:77)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/special.rs:459:76-459:77)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/special.rs:460:19-460:25)
  4: _14 = _2
    SourceInfo(regex-automata/src/dfa/special.rs:460:19-460:25)
  5: _15 = Eq(_14, const 0_usize)
    SourceInfo(regex-automata/src/dfa/special.rs:459:13-460:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:459:13-460:25)
      kind: assert(!move _15, "attempt to divide `{}` by zero", _5) -> [success: bb7, unwind: bb10]
  }
  preds [bb5]
  succs [bb7, bb10]

bb7
  0: _0 = Div(move _5, move _14)
    SourceInfo(regex-automata/src/dfa/special.rs:459:13-460:25)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/special.rs:460:24-460:25)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/special.rs:460:24-460:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:458:9-463:10)
      kind: goto -> bb9
  }
  preds [bb6]
  succs [bb9]

bb8
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/special.rs:458:25-458:26)
  1: _0 = const 0_usize
    SourceInfo(regex-automata/src/dfa/special.rs:462:13-462:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:458:9-463:10)
      kind: goto -> bb9
  }
  preds [bb1]
  succs [bb9]

bb9
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/special.rs:463:9-463:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:464:6-464:6)
      kind: return
  }
  preds [bb7, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:457:5-464:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb5, bb6]
  succs []

