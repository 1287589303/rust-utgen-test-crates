bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:454:9-456:10)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:454:38-454:56)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:454:38-454:49)
  3: _4 = &mut ((*_1).1: core::slice::Iter<'_, (usize, usize)>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:454:38-454:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:454:38-454:56)
      kind: _3 = <core::slice::Iter<'_, (usize, usize)> as core::iter::Iterator>::next(move _4) -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:454:55-454:56)
  1: PlaceMention(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:454:38-454:56)
  2: _5 = discriminant(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:454:38-454:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:454:16-454:35)
      kind: switchInt(move _5) -> [1: bb2, otherwise: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:454:16-454:35)
      kind: falseEdge -> [real: bb3, imaginary: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:454:23-454:28)
  1: _6 = ((*((_3 as Some).0: &(usize, usize))).0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:454:23-454:28)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:454:30-454:33)
  3: _7 = ((*((_3 as Some).0: &(usize, usize))).1: usize)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:454:30-454:33)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:25-455:54)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:25-455:54)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:42-455:54)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:26-455:42)
  8: _12 = &(*((*_1).0: &[nfa::thompson::literal_trie::Transition]))
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:26-455:42)
  9: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:43-455:53)
  10: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:43-455:48)
  11: _14 = _6
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:43-455:48)
  12: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:50-455:53)
  13: _15 = _7
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:50-455:53)
  14: _13 = core::ops::Range::<usize> { start: move _14, end: move _15 }
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:43-455:53)
  15: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:52-455:53)
  16: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:52-455:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:42-455:54)
      kind: _11 = <[nfa::thompson::literal_trie::Transition] as core::ops::Index<core::ops::Range<usize>>>::index(move _12, move _13) -> [return: bb4, unwind: bb11]
  }
  preds [bb2]
  succs [bb4, bb11]

bb4
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:53-455:54)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:53-455:54)
  2: _10 = &(*_11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:25-455:54)
  3: _9 = &(*_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:25-455:54)
  4: _0 = core::option::Option::<&[nfa::thompson::literal_trie::Transition]>::Some(move _9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:20-455:55)
  5: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:54-455:55)
  6: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:55-455:56)
  7: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:455:55-455:56)
  8: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:456:9-456:10)
  9: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:456:9-456:10)
  10: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:456:9-456:10)
  11: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:456:9-456:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb10
  }
  preds [bb3]
  succs [bb10]

bb5
  0: _2 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:456:10-456:10)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:456:9-456:10)
  2: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:456:9-456:10)
  3: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:457:9-459:10)
  4: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:457:30-457:48)
  5: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:457:30-457:41)
  6: _18 = &mut ((*_1).2: core::option::Option<&[nfa::thompson::literal_trie::Transition]>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:457:30-457:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:457:30-457:48)
      kind: _17 = core::option::Option::<&[nfa::thompson::literal_trie::Transition]>::take(move _18) -> [return: bb6, unwind: bb11]
  }
  preds [bb1, bb2]
  succs [bb6, bb11]

bb6
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:457:47-457:48)
  1: PlaceMention(_17)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:457:30-457:48)
  2: _19 = discriminant(_17)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:457:30-457:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:457:16-457:27)
      kind: switchInt(move _19) -> [1: bb7, otherwise: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:457:16-457:27)
      kind: falseEdge -> [real: bb8, imaginary: bb9]
  }
  preds [bb6]
  succs [bb8, bb9]

bb8
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:457:21-457:26)
  1: _20 = ((_17 as Some).0: &[nfa::thompson::literal_trie::Transition])
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:457:21-457:26)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:458:25-458:30)
  3: _22 = &(*_20)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:458:25-458:30)
  4: _0 = core::option::Option::<&[nfa::thompson::literal_trie::Transition]>::Some(move _22)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:458:20-458:31)
  5: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:458:30-458:31)
  6: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:459:9-459:10)
  7: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:459:9-459:10)
  8: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:459:9-459:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb10
  }
  preds [bb7]
  succs [bb10]

bb9
  0: _16 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:459:10-459:10)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:459:9-459:10)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:459:9-459:10)
  3: _0 = core::option::Option::<&[nfa::thompson::literal_trie::Transition]>::None
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:460:9-460:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:461:6-461:6)
      kind: goto -> bb10
  }
  preds [bb6, bb7]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:461:6-461:6)
      kind: return
  }
  preds [bb4, bb8, bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:453:5-461:6)
      kind: resume
  }
  preds [bb0, bb3, bb5]
  succs []

