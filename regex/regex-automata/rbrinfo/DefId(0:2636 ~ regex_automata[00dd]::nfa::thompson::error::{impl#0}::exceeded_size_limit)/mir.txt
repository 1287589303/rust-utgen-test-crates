bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:119:28-119:71)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:119:64-119:69)
  2: _3 = _1
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:119:64-119:69)
  3: _2 = nfa::thompson::error::BuildErrorKind::ExceededSizeLimit { limit: move _3 }
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:119:28-119:71)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:119:70-119:71)
  5: _0 = nfa::thompson::error::BuildError { kind: move _2 }
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:119:9-119:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/error.rs:119:72-119:73)
      kind: drop(_2) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:119:72-119:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/error.rs:120:6-120:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/error.rs:118:5-120:6)
      kind: resume
  }
  preds [bb0]
  succs []

