bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:13-1810:17)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:20-1810:39)
  2: _4 = &((*((*_1).1: &mut nfa::thompson::compiler::Utf8State)).0: nfa::thompson::map::Utf8BoundedMap)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:20-1810:39)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:45-1810:50)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:45-1810:50)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:45-1810:50)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:45-1810:50)
  7: _8 = &_2
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:45-1810:50)
  8: _7 = &(*_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:45-1810:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:45-1810:50)
      kind: _6 = <std::vec::Vec<nfa::thompson::nfa::Transition> as core::ops::Deref>::deref(move _7) -> [return: bb1, unwind: bb28]
  }
  preds []
  succs [bb1, bb28]

bb1
  0: _5 = &(*_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:45-1810:50)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:49-1810:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:20-1810:51)
      kind: _3 = nfa::thompson::map::Utf8BoundedMap::hash(move _4, move _5) -> [return: bb2, unwind: bb28]
  }
  preds [bb0]
  succs [bb2, bb28]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:50-1810:51)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:50-1810:51)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:13-1810:17)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:51-1810:52)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1810:51-1810:52)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:9-1813:10)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:27-1811:63)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:27-1811:46)
  8: _11 = &mut ((*((*_1).1: &mut nfa::thompson::compiler::Utf8State)).0: nfa::thompson::map::Utf8BoundedMap)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:27-1811:46)
  9: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:51-1811:56)
  10: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:51-1811:56)
  11: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:51-1811:56)
  12: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:51-1811:56)
  13: _15 = &_2
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:51-1811:56)
  14: _14 = &(*_15)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:51-1811:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:51-1811:56)
      kind: _13 = <std::vec::Vec<nfa::thompson::nfa::Transition> as core::ops::Deref>::deref(move _14) -> [return: bb3, unwind: bb28]
  }
  preds [bb1]
  succs [bb3, bb28]

bb3
  0: _12 = &(*_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:51-1811:56)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:55-1811:56)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:58-1811:62)
  3: _16 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:58-1811:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:27-1811:63)
      kind: _10 = nfa::thompson::map::Utf8BoundedMap::get(move _11, move _12, move _16) -> [return: bb4, unwind: bb28]
  }
  preds [bb2]
  succs [bb4, bb28]

bb4
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:62-1811:63)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:62-1811:63)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:62-1811:63)
  3: PlaceMention(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:27-1811:63)
  4: _17 = discriminant(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:27-1811:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:16-1811:24)
      kind: switchInt(move _17) -> [1: bb5, otherwise: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:16-1811:24)
      kind: falseEdge -> [real: bb6, imaginary: bb7]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:21-1811:23)
  1: _18 = ((_10 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1811:21-1811:23)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1812:23-1812:25)
  3: _20 = _18
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1812:23-1812:25)
  4: _0 = core::result::Result::<util::primitives::StateID, nfa::thompson::error::BuildError>::Ok(move _20)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1812:20-1812:26)
  5: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1812:25-1812:26)
  6: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1813:9-1813:10)
  7: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1813:9-1813:10)
  8: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1813:9-1813:10)
  9: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1813:9-1813:10)
  10: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1813:9-1813:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb20
  }
  preds [bb5]
  succs [bb20]

bb7
  0: _9 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1813:10-1813:10)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1813:9-1813:10)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1813:9-1813:10)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1813:9-1813:10)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1813:9-1813:10)
  5: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:13-1814:15)
  6: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:56)
  7: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:55)
  8: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:30)
  9: _24 = &mut (*((*_1).0: &mut nfa::thompson::builder::Builder))
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:30)
  10: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:42-1814:54)
  11: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:42-1814:46)
  12: _26 = &_2
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:42-1814:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:42-1814:54)
      kind: _25 = <std::vec::Vec<nfa::thompson::nfa::Transition> as core::clone::Clone>::clone(move _26) -> [return: bb8, unwind: bb28]
  }
  preds [bb4, bb5]
  succs [bb8, bb28]

bb8
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:53-1814:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:55)
      kind: _23 = nfa::thompson::builder::Builder::add_sparse(move _24, move _25) -> [return: bb9, unwind: bb27]
  }
  preds [bb7]
  succs [bb9, bb27]

bb9
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:54-1814:55)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:54-1814:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:56)
      kind: _22 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _23) -> [return: bb10, unwind: bb26]
  }
  preds [bb8]
  succs [bb10, bb26]

bb10
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:55-1814:56)
  1: PlaceMention(_22)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:56)
  2: _27 = discriminant(_22)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:56)
      kind: switchInt(move _27) -> [0: bb13, 1: bb12, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13]

bb11
  0: FakeRead(ForMatchedPlace(None), _22)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:56)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:55-1814:56)
      kind: falseEdge -> [real: bb14, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:56)
  1: _31 = ((_22 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:56)
  2: _21 = _31
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:56)
  3: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:55-1814:56)
  4: FakeRead(ForLet(None), _21)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:13-1814:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:56-1814:57)
      kind: drop(_22) -> [return: bb16, unwind: bb28]
  }
  preds [bb10, bb12]
  succs [bb16, bb28]

bb14
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:55-1814:56)
  1: _28 = move ((_22 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:55-1814:56)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:55-1814:56)
  3: _30 = move _28
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:55-1814:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:18-1814:56)
      kind: _0 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _30) -> [return: bb15, unwind: bb23]
  }
  preds [bb12]
  succs [bb15, bb23]

bb15
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:55-1814:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:55-1814:56)
      kind: drop(_28) -> [return: bb18, unwind: bb25]
  }
  preds [bb14]
  succs [bb18, bb25]

bb16
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:56-1814:57)
  1: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:9-1815:48)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:9-1815:28)
  3: _33 = &mut ((*((*_1).1: &mut nfa::thompson::compiler::Utf8State)).0: nfa::thompson::map::Utf8BoundedMap)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:9-1815:28)
  4: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:33-1815:37)
  5: _34 = move _2
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:33-1815:37)
  6: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:39-1815:43)
  7: _35 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:39-1815:43)
  8: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:45-1815:47)
  9: _36 = _21
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:45-1815:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:9-1815:48)
      kind: _32 = nfa::thompson::map::Utf8BoundedMap::set(move _33, move _34, move _35, move _36) -> [return: bb17, unwind: bb22]
  }
  preds [bb13]
  succs [bb17, bb22]

bb17
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:47-1815:48)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:47-1815:48)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:47-1815:48)
  3: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:47-1815:48)
  4: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:48-1815:49)
  5: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1816:12-1816:14)
  6: _37 = _21
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1816:12-1816:14)
  7: _0 = core::result::Result::<util::primitives::StateID, nfa::thompson::error::BuildError>::Ok(move _37)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1816:9-1816:15)
  8: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1816:14-1816:15)
  9: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1817:5-1817:6)
  10: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1817:5-1817:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1817:5-1817:6)
      kind: drop(_2) -> [return: bb21, unwind: bb29]
  }
  preds [bb16]
  succs [bb21, bb29]

bb18
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:55-1814:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:56-1814:57)
      kind: drop(_22) -> [return: bb19, unwind: bb28]
  }
  preds [bb15]
  succs [bb19, bb28]

bb19
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:56-1814:57)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1817:5-1817:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb20
  }
  preds [bb18]
  succs [bb20]

bb20
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1817:5-1817:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1817:5-1817:6)
      kind: drop(_2) -> [return: bb21, unwind: bb29]
  }
  preds [bb6, bb19]
  succs [bb21, bb29]

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1817:6-1817:6)
      kind: return
  }
  preds [bb17, bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1815:47-1815:48)
      kind: drop(_34) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb16]
  succs [bb28]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:55-1814:56)
      kind: drop(_30) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:55-1814:56)
      kind: drop(_28) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb23]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:56-1814:57)
      kind: drop(_22) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb15, bb24]
  succs [bb28]

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:55-1814:56)
      kind: drop(_23) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb28]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1814:54-1814:55)
      kind: drop(_25) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1817:5-1817:6)
      kind: drop(_2) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb3, bb7, bb13, bb18, bb22, bb25, bb26, bb27]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1806:5-1817:6)
      kind: resume
  }
  preds [bb17, bb20, bb28]
  succs []

