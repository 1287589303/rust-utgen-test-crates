bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1074:9-1076:10)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1074:12-1074:46)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1074:12-1074:32)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1074:12-1074:32)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:1074:12-1074:17)
  5: _9 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1074:12-1074:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1074:12-1074:32)
      kind: _8 = util::search::Input::<'_>::get_anchored(move _9) -> [return: bb1, unwind: bb34]
  }
  preds []
  succs [bb1, bb34]

bb1
  0: _7 = &_8
    SourceInfo(regex-automata/src/meta/strategy.rs:1074:12-1074:32)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:1074:31-1074:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1074:12-1074:46)
      kind: _6 = util::search::Anchored::is_anchored(move _7) -> [return: bb2, unwind: bb34]
  }
  preds [bb0]
  succs [bb2, bb34]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1074:12-1074:46)
      kind: switchInt(move _6) -> [0: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1074:45-1074:46)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1074:45-1074:46)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1075:20-1075:29)
  3: _11 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1075:20-1075:29)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1075:43-1075:48)
  5: _12 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1075:43-1075:48)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1075:50-1075:55)
  7: _13 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1075:50-1075:55)
  8: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1075:57-1075:62)
  9: _14 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1075:57-1075:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1075:20-1075:63)
      kind: _0 = <meta::strategy::Core as meta::strategy::Strategy>::search_slots(move _11, move _12, move _13, move _14) -> [return: bb4, unwind: bb34]
  }
  preds [bb2]
  succs [bb4, bb34]

bb4
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1075:62-1075:63)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1075:62-1075:63)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1075:62-1075:63)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1075:62-1075:63)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1076:9-1076:10)
  5: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1076:9-1076:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb33
  }
  preds [bb3]
  succs [bb33]

bb5
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1074:45-1074:46)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1074:45-1074:46)
  2: _5 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1076:10-1076:10)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1076:9-1076:10)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1076:9-1076:10)
  5: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1077:15-1077:62)
  6: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1077:15-1077:19)
  7: _16 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:1077:15-1077:19)
  8: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:1077:49-1077:54)
  9: _17 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1077:49-1077:54)
  10: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:1077:56-1077:61)
  11: _18 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1077:56-1077:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1077:15-1077:62)
      kind: _15 = meta::strategy::ReverseAnchored::try_search_half_anchored_rev(move _16, move _17, move _18) -> [return: bb6, unwind: bb34]
  }
  preds [bb2]
  succs [bb6, bb34]

bb6
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:1077:61-1077:62)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:1077:61-1077:62)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1077:61-1077:62)
  3: PlaceMention(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1077:15-1077:62)
  4: _20 = discriminant(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1077:15-1077:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1077:9-1077:62)
      kind: switchInt(move _20) -> [0: bb9, 1: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1077:15-1077:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1077:15-1077:62)
      kind: unreachable
  }
  preds [bb6, bb9]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1078:13-1078:22)
      kind: falseEdge -> [real: bb12, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb12]

bb9
  0: _19 = discriminant(((_15 as Ok).0: core::option::Option<util::search::HalfMatch>))
    SourceInfo(regex-automata/src/meta/strategy.rs:1077:15-1077:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1077:9-1077:62)
      kind: switchInt(move _19) -> [0: bb10, 1: bb11, otherwise: bb7]
  }
  preds [bb6, bb8]
  succs [bb7, bb10, bb11]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1082:13-1082:21)
      kind: falseEdge -> [real: bb14, imaginary: bb11]
  }
  preds [bb9]
  succs [bb11, bb14]

bb11
  0: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1083:21-1083:23)
  1: _26 = ((((_15 as Ok).0: core::option::Option<util::search::HalfMatch>) as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/meta/strategy.rs:1083:21-1083:23)
  2: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1084:17-1089:18)
  3: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1084:21-1084:68)
  4: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1084:21-1084:30)
  5: _29 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1084:21-1084:30)
  6: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1084:56-1084:67)
  7: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1084:56-1084:61)
  8: _31 = &(*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1084:56-1084:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1084:56-1084:67)
      kind: _30 = core::slice::<impl [core::option::Option<util::primitives::NonMaxUsize>]>::len(move _31) -> [return: bb15, unwind: bb34]
  }
  preds [bb9, bb10]
  succs [bb15, bb34]

bb12
  0: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1078:17-1078:21)
  1: _21 = move ((_15 as Err).0: meta::error::RetryFailError)
    SourceInfo(regex-automata/src/meta/strategy.rs:1078:17-1078:21)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1080:17-1080:26)
  3: _22 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1080:17-1080:26)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1080:47-1080:52)
  5: _23 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1080:47-1080:52)
  6: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1080:54-1080:59)
  7: _24 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1080:54-1080:59)
  8: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1080:61-1080:66)
  9: _25 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1080:61-1080:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1080:17-1080:67)
      kind: _0 = meta::strategy::Core::search_slots_nofail(move _22, move _23, move _24, move _25) -> [return: bb13, unwind: bb34]
  }
  preds [bb8]
  succs [bb13, bb34]

bb13
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1080:66-1080:67)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1080:66-1080:67)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1080:66-1080:67)
  3: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1080:66-1080:67)
  4: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1081:13-1081:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1081:13-1081:14)
      kind: goto -> bb32
  }
  preds [bb12]
  succs [bb32]

bb14
  0: _0 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/meta/strategy.rs:1082:25-1082:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1082:25-1082:29)
      kind: goto -> bb32
  }
  preds [bb10]
  succs [bb32]

bb15
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1084:66-1084:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1084:21-1084:68)
      kind: _28 = meta::strategy::Core::is_capture_search_needed(move _29, move _30) -> [return: bb16, unwind: bb34]
  }
  preds [bb11]
  succs [bb16, bb34]

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1084:21-1084:68)
      kind: switchInt(move _28) -> [0: bb18, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18]

bb17
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1084:67-1084:68)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1084:67-1084:68)
  2: _27 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1089:18-1089:18)
  3: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1089:17-1089:18)
  4: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1089:17-1089:18)
  5: StorageLive(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:1090:21-1090:26)
  6: StorageLive(_47)
    SourceInfo(regex-automata/src/meta/strategy.rs:1090:29-1090:31)
  7: _47 = &_26
    SourceInfo(regex-automata/src/meta/strategy.rs:1090:29-1090:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1090:29-1090:40)
      kind: _46 = util::search::HalfMatch::offset(move _47) -> [return: bb25, unwind: bb34]
  }
  preds [bb16]
  succs [bb25, bb34]

bb18
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1084:67-1084:68)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1084:67-1084:68)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:25-1086:26)
  3: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:40-1086:52)
  4: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:40-1086:42)
  5: _35 = &_26
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:40-1086:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1086:40-1086:52)
      kind: _34 = util::search::HalfMatch::pattern(move _35) -> [return: bb19, unwind: bb34]
  }
  preds [bb16]
  succs [bb19, bb34]

bb19
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:51-1086:52)
  1: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:54-1086:78)
  2: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:54-1086:65)
  3: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:54-1086:56)
  4: _38 = &_26
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:54-1086:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1086:54-1086:65)
      kind: _37 = util::search::HalfMatch::offset(move _38) -> [return: bb20, unwind: bb34]
  }
  preds [bb18]
  succs [bb20, bb34]

bb20
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:64-1086:65)
  1: StorageLive(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:67-1086:78)
  2: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:67-1086:72)
  3: _40 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:67-1086:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1086:67-1086:78)
      kind: _39 = util::search::Input::<'_>::end(move _40) -> [return: bb21, unwind: bb34]
  }
  preds [bb19]
  succs [bb21, bb34]

bb21
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:77-1086:78)
  1: _36 = core::ops::Range::<usize> { start: move _37, end: move _39 }
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:54-1086:78)
  2: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:77-1086:78)
  3: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:77-1086:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1086:29-1086:79)
      kind: _33 = util::search::Match::new::<core::ops::Range<usize>>(move _34, move _36) -> [return: bb22, unwind: bb34]
  }
  preds [bb20]
  succs [bb22, bb34]

bb22
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:78-1086:79)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:78-1086:79)
  2: FakeRead(ForLet(None), _33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1086:25-1086:26)
  3: StorageLive(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1087:21-1087:50)
  4: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1087:41-1087:42)
  5: _42 = _33
    SourceInfo(regex-automata/src/meta/strategy.rs:1087:41-1087:42)
  6: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:1087:44-1087:49)
  7: _43 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1087:44-1087:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1087:21-1087:50)
      kind: _41 = meta::strategy::copy_match_to_slots(move _42, move _43) -> [return: bb23, unwind: bb34]
  }
  preds [bb21]
  succs [bb23, bb34]

bb23
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:1087:49-1087:50)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1087:49-1087:50)
  2: StorageDead(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1087:50-1087:51)
  3: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1088:33-1088:44)
  4: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1088:33-1088:34)
  5: _45 = &_33
    SourceInfo(regex-automata/src/meta/strategy.rs:1088:33-1088:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1088:33-1088:44)
      kind: _44 = util::search::Match::pattern(move _45) -> [return: bb24, unwind: bb34]
  }
  preds [bb22]
  succs [bb24, bb34]

bb24
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1088:43-1088:44)
  1: _0 = core::option::Option::<util::primitives::PatternID>::Some(move _44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1088:28-1088:45)
  2: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1088:44-1088:45)
  3: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1089:17-1089:18)
  4: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1089:17-1089:18)
  5: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1089:17-1089:18)
  6: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1096:13-1096:14)
  7: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1098:5-1098:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb33
  }
  preds [bb23]
  succs [bb33]

bb25
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/strategy.rs:1090:39-1090:40)
  1: FakeRead(ForLet(None), _46)
    SourceInfo(regex-automata/src/meta/strategy.rs:1090:21-1090:26)
  2: StorageLive(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:1091:21-1091:26)
  3: StorageLive(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:1091:29-1093:46)
  4: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1091:29-1092:29)
  5: StorageLive(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1091:29-1091:34)
  6: _51 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1091:29-1091:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1091:29-1092:29)
      kind: _50 = <util::search::Input<'_> as core::clone::Clone>::clone(move _51) -> [return: bb26, unwind: bb34]
  }
  preds [bb17]
  succs [bb26, bb34]

bb26
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1092:28-1092:29)
  1: StorageLive(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:1093:27-1093:45)
  2: StorageLive(_53)
    SourceInfo(regex-automata/src/meta/strategy.rs:1093:27-1093:32)
  3: _53 = _46
    SourceInfo(regex-automata/src/meta/strategy.rs:1093:27-1093:32)
  4: StorageLive(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:1093:34-1093:45)
  5: StorageLive(_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1093:34-1093:39)
  6: _55 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1093:34-1093:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1093:34-1093:45)
      kind: _54 = util::search::Input::<'_>::end(move _55) -> [return: bb27, unwind: bb34]
  }
  preds [bb25]
  succs [bb27, bb34]

bb27
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1093:44-1093:45)
  1: _52 = core::ops::Range::<usize> { start: move _53, end: move _54 }
    SourceInfo(regex-automata/src/meta/strategy.rs:1093:27-1093:45)
  2: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:1093:44-1093:45)
  3: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/strategy.rs:1093:44-1093:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1091:29-1093:46)
      kind: _49 = util::search::Input::<'_>::span::<core::ops::Range<usize>>(move _50, move _52) -> [return: bb28, unwind: bb34]
  }
  preds [bb26]
  succs [bb28, bb34]

bb28
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:1093:45-1093:46)
  1: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1093:45-1093:46)
  2: StorageLive(_56)
    SourceInfo(regex-automata/src/meta/strategy.rs:1094:31-1094:62)
  3: StorageLive(_57)
    SourceInfo(regex-automata/src/meta/strategy.rs:1094:49-1094:61)
  4: StorageLive(_58)
    SourceInfo(regex-automata/src/meta/strategy.rs:1094:49-1094:51)
  5: _58 = &_26
    SourceInfo(regex-automata/src/meta/strategy.rs:1094:49-1094:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1094:49-1094:61)
      kind: _57 = util::search::HalfMatch::pattern(move _58) -> [return: bb29, unwind: bb34]
  }
  preds [bb27]
  succs [bb29, bb34]

bb29
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/strategy.rs:1094:60-1094:61)
  1: _56 = util::search::Anchored::Pattern(move _57)
    SourceInfo(regex-automata/src/meta/strategy.rs:1094:31-1094:62)
  2: StorageDead(_57)
    SourceInfo(regex-automata/src/meta/strategy.rs:1094:61-1094:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1091:29-1094:63)
      kind: _48 = util::search::Input::<'_>::anchored(move _49, move _56) -> [return: bb30, unwind: bb34]
  }
  preds [bb28]
  succs [bb30, bb34]

bb30
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/meta/strategy.rs:1094:62-1094:63)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:1094:62-1094:63)
  2: FakeRead(ForLet(None), _48)
    SourceInfo(regex-automata/src/meta/strategy.rs:1091:21-1091:26)
  3: StorageLive(_59)
    SourceInfo(regex-automata/src/meta/strategy.rs:1095:17-1095:26)
  4: _59 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1095:17-1095:26)
  5: StorageLive(_60)
    SourceInfo(regex-automata/src/meta/strategy.rs:1095:47-1095:52)
  6: _60 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1095:47-1095:52)
  7: StorageLive(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1095:54-1095:60)
  8: StorageLive(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1095:54-1095:60)
  9: _62 = &_48
    SourceInfo(regex-automata/src/meta/strategy.rs:1095:54-1095:60)
  10: _61 = &(*_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1095:54-1095:60)
  11: StorageLive(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:1095:62-1095:67)
  12: _63 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1095:62-1095:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1095:17-1095:68)
      kind: _0 = meta::strategy::Core::search_slots_nofail(move _59, move _60, move _61, move _63) -> [return: bb31, unwind: bb34]
  }
  preds [bb29]
  succs [bb31, bb34]

bb31
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:1095:67-1095:68)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1095:67-1095:68)
  2: StorageDead(_60)
    SourceInfo(regex-automata/src/meta/strategy.rs:1095:67-1095:68)
  3: StorageDead(_59)
    SourceInfo(regex-automata/src/meta/strategy.rs:1095:67-1095:68)
  4: StorageDead(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:1096:13-1096:14)
  5: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:1096:13-1096:14)
  6: StorageDead(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1096:13-1096:14)
  7: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1096:13-1096:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1096:13-1096:14)
      kind: goto -> bb32
  }
  preds [bb30]
  succs [bb32]

bb32
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1098:5-1098:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1098:6-1098:6)
      kind: goto -> bb33
  }
  preds [bb13, bb14, bb31]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1098:6-1098:6)
      kind: return
  }
  preds [bb4, bb24, bb32]
  succs []

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1068:5-1098:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb11, bb12, bb15, bb17, bb18, bb19, bb20, bb21, bb22, bb23, bb25, bb26, bb27, bb28, bb29, bb30]
  succs []

