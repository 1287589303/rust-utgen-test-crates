bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:994:9-994:37)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:994:9-994:18)
  2: _4 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:994:9-994:18)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:994:31-994:36)
  4: _5 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:994:31-994:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:994:9-994:37)
      kind: _3 = <meta::strategy::Core as meta::strategy::Strategy>::reset_cache(move _4, move _5) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:994:36-994:37)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:994:36-994:37)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:994:37-994:38)
  3: _0 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:993:46-995:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:995:6-995:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:993:5-995:6)
      kind: resume
  }
  preds [bb0]
  succs []

