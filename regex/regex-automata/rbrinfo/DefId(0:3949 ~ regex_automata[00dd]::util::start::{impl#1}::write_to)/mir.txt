bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/start.rs:291:13-291:19)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/start.rs:291:22-291:26)
  2: _4 = &(*_1)
    SourceInfo(regex-automata/src/util/start.rs:291:22-291:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:291:22-291:41)
      kind: _3 = util::start::StartByteMap::write_to_len(move _4) -> [return: bb1, unwind: bb19]
  }
  preds []
  succs [bb1, bb19]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/start.rs:291:40-291:41)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/start.rs:291:13-291:19)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/start.rs:292:9-294:10)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/start.rs:292:12-292:30)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/util/start.rs:292:12-292:21)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/util/start.rs:292:12-292:15)
  6: _8 = &(*_2)
    SourceInfo(regex-automata/src/util/start.rs:292:12-292:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:292:12-292:21)
      kind: _7 = core::slice::<impl [u8]>::len(move _8) -> [return: bb2, unwind: bb19]
  }
  preds [bb0]
  succs [bb2, bb19]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/start.rs:292:20-292:21)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/util/start.rs:292:24-292:30)
  2: _9 = _3
    SourceInfo(regex-automata/src/util/start.rs:292:24-292:30)
  3: _6 = Lt(move _7, move _9)
    SourceInfo(regex-automata/src/util/start.rs:292:12-292:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:292:12-292:30)
      kind: switchInt(move _6) -> [0: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/start.rs:292:29-292:30)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/start.rs:292:29-292:30)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/util/start.rs:293:24-293:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:293:24-293:74)
      kind: _11 = util::wire::SerializeError::buffer_too_small(const "start byte map") -> [return: bb4, unwind: bb19]
  }
  preds [bb2]
  succs [bb4, bb19]

bb4
  0: _0 = core::result::Result::<usize, util::wire::SerializeError>::Err(move _11)
    SourceInfo(regex-automata/src/util/start.rs:293:20-293:75)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/util/start.rs:293:74-293:75)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/start.rs:294:9-294:10)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/util/start.rs:294:9-294:10)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/util/start.rs:299:5-299:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:299:6-299:6)
      kind: goto -> bb18
  }
  preds [bb3]
  succs [bb18]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/start.rs:292:29-292:30)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/start.rs:292:29-292:30)
  2: _5 = const ()
    SourceInfo(regex-automata/src/util/start.rs:294:10-294:10)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/util/start.rs:294:9-294:10)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/util/start.rs:294:9-294:10)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/util/start.rs:295:9-297:10)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
  7: StorageLive(_14)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:43)
  9: StorageLive(_16)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:36)
  10: StorageLive(_17)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:36)
  11: _17 = &((*_1).0: [util::start::Start; 256])
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:36)
  12: _16 = move _17 as &[util::start::Start] (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:36)
  13: StorageDead(_17)
    SourceInfo(regex-automata/src/util/start.rs:295:35-295:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:295:28-295:43)
      kind: _15 = core::slice::<impl [util::start::Start]>::iter(move _16) -> [return: bb6, unwind: bb19]
  }
  preds [bb2]
  succs [bb6, bb19]

bb6
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/util/start.rs:295:42-295:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
      kind: _14 = <core::slice::Iter<'_, util::start::Start> as core::iter::Iterator>::enumerate(move _15) -> [return: bb7, unwind: bb19]
  }
  preds [bb5]
  succs [bb7, bb19]

bb7
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/start.rs:295:54-295:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
      kind: _13 = <core::iter::Enumerate<core::slice::Iter<'_, util::start::Start>> as core::iter::IntoIterator>::into_iter(move _14) -> [return: bb8, unwind: bb19]
  }
  preds [bb6]
  succs [bb8, bb19]

bb8
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/util/start.rs:295:54-295:55)
  1: PlaceMention(_13)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
  3: _18 = move _13
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:295:9-297:10)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:295:9-297:10)
      kind: falseUnwind -> [real: bb10, unwind: bb19]
  }
  preds [bb8, bb17]
  succs [bb10, bb19]

bb10
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
  1: StorageLive(_21)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
  4: _23 = &mut _18
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
  5: _22 = &mut (*_23)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
      kind: _21 = <core::iter::Enumerate<core::slice::Iter<'_, util::start::Start>> as core::iter::Iterator>::next(move _22) -> [return: bb11, unwind: bb19]
  }
  preds [bb9]
  succs [bb11, bb19]

bb11
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/util/start.rs:295:54-295:55)
  1: PlaceMention(_21)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
  2: _24 = discriminant(_21)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
      kind: switchInt(move _24) -> [0: bb13, 1: bb14, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _21)
    SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:295:28-295:55)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:295:9-297:10)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_26)
    SourceInfo(regex-automata/src/util/start.rs:295:14-295:15)
  1: _26 = (((_21 as Some).0: (usize, &util::start::Start)).0: usize)
    SourceInfo(regex-automata/src/util/start.rs:295:14-295:15)
  2: StorageLive(_27)
    SourceInfo(regex-automata/src/util/start.rs:295:18-295:23)
  3: _27 = (*(((_21 as Some).0: (usize, &util::start::Start)).1: &util::start::Start))
    SourceInfo(regex-automata/src/util/start.rs:295:18-295:23)
  4: StorageLive(_28)
    SourceInfo(regex-automata/src/util/start.rs:296:22-296:35)
  5: StorageLive(_29)
    SourceInfo(regex-automata/src/util/start.rs:296:22-296:27)
  6: _29 = &_27
    SourceInfo(regex-automata/src/util/start.rs:296:22-296:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:296:22-296:35)
      kind: _28 = util::start::Start::as_u8(move _29) -> [return: bb16, unwind: bb19]
  }
  preds [bb11, bb13]
  succs [bb16, bb19]

bb15
  0: _12 = const ()
    SourceInfo(regex-automata/src/util/start.rs:295:9-297:10)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/util/start.rs:297:9-297:10)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/util/start.rs:297:9-297:10)
  3: StorageDead(_20)
    SourceInfo(regex-automata/src/util/start.rs:297:9-297:10)
  4: StorageDead(_18)
    SourceInfo(regex-automata/src/util/start.rs:297:9-297:10)
  5: StorageDead(_13)
    SourceInfo(regex-automata/src/util/start.rs:297:9-297:10)
  6: StorageDead(_12)
    SourceInfo(regex-automata/src/util/start.rs:297:9-297:10)
  7: StorageLive(_33)
    SourceInfo(regex-automata/src/util/start.rs:298:12-298:18)
  8: _33 = _3
    SourceInfo(regex-automata/src/util/start.rs:298:12-298:18)
  9: _0 = core::result::Result::<usize, util::wire::SerializeError>::Ok(move _33)
    SourceInfo(regex-automata/src/util/start.rs:298:9-298:19)
  10: StorageDead(_33)
    SourceInfo(regex-automata/src/util/start.rs:298:18-298:19)
  11: StorageDead(_3)
    SourceInfo(regex-automata/src/util/start.rs:299:5-299:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:299:6-299:6)
      kind: goto -> bb18
  }
  preds [bb13]
  succs [bb18]

bb16
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/util/start.rs:296:34-296:35)
  1: StorageLive(_30)
    SourceInfo(regex-automata/src/util/start.rs:296:17-296:18)
  2: _30 = _26
    SourceInfo(regex-automata/src/util/start.rs:296:17-296:18)
  3: _31 = Len((*_2))
    SourceInfo(regex-automata/src/util/start.rs:296:13-296:19)
  4: _32 = Lt(_30, _31)
    SourceInfo(regex-automata/src/util/start.rs:296:13-296:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:296:13-296:19)
      kind: assert(move _32, "index out of bounds: the length is {} but the index is {}", move _31, _30) -> [success: bb17, unwind: bb19]
  }
  preds [bb14]
  succs [bb17, bb19]

bb17
  0: (*_2)[_30] = move _28
    SourceInfo(regex-automata/src/util/start.rs:296:13-296:35)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/util/start.rs:296:34-296:35)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/util/start.rs:296:35-296:36)
  3: _20 = const ()
    SourceInfo(regex-automata/src/util/start.rs:295:56-297:10)
  4: StorageDead(_27)
    SourceInfo(regex-automata/src/util/start.rs:297:9-297:10)
  5: StorageDead(_26)
    SourceInfo(regex-automata/src/util/start.rs:297:9-297:10)
  6: StorageDead(_23)
    SourceInfo(regex-automata/src/util/start.rs:297:9-297:10)
  7: StorageDead(_21)
    SourceInfo(regex-automata/src/util/start.rs:297:9-297:10)
  8: StorageDead(_20)
    SourceInfo(regex-automata/src/util/start.rs:297:9-297:10)
  9: _19 = const ()
    SourceInfo(regex-automata/src/util/start.rs:295:9-297:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:295:9-297:10)
      kind: goto -> bb9
  }
  preds [bb16]
  succs [bb9]

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:299:6-299:6)
      kind: return
  }
  preds [bb4, bb15]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:287:5-299:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb6, bb7, bb9, bb10, bb14, bb16]
  succs []

