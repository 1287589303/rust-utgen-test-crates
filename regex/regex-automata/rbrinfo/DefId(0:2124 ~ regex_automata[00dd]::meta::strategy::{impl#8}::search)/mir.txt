bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1322:9-1324:10)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1322:12-1322:46)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1322:12-1322:32)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1322:12-1322:32)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1322:12-1322:17)
  5: _8 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1322:12-1322:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1322:12-1322:32)
      kind: _7 = util::search::Input::<'_>::get_anchored(move _8) -> [return: bb1, unwind: bb43]
  }
  preds []
  succs [bb1, bb43]

bb1
  0: _6 = &_7
    SourceInfo(regex-automata/src/meta/strategy.rs:1322:12-1322:32)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1322:31-1322:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1322:12-1322:46)
      kind: _5 = util::search::Anchored::is_anchored(move _6) -> [return: bb2, unwind: bb43]
  }
  preds [bb0]
  succs [bb2, bb43]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1322:12-1322:46)
      kind: switchInt(move _5) -> [0: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1322:45-1322:46)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1322:45-1322:46)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1323:20-1323:29)
  3: _10 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1323:20-1323:29)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1323:37-1323:42)
  5: _11 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1323:37-1323:42)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1323:44-1323:49)
  7: _12 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1323:44-1323:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1323:20-1323:50)
      kind: _0 = <meta::strategy::Core as meta::strategy::Strategy>::search(move _10, move _11, move _12) -> [return: bb4, unwind: bb43]
  }
  preds [bb2]
  succs [bb4, bb43]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1323:49-1323:50)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1323:49-1323:50)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1323:49-1323:50)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1324:9-1324:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1324:9-1324:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1361:6-1361:6)
      kind: goto -> bb42
  }
  preds [bb3]
  succs [bb42]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1322:45-1322:46)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1322:45-1322:46)
  2: _4 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1324:10-1324:10)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1324:9-1324:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1324:9-1324:10)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:15-1325:55)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:15-1325:19)
  7: _14 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:15-1325:19)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:42-1325:47)
  9: _15 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:42-1325:47)
  10: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:49-1325:54)
  11: _16 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:49-1325:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1325:15-1325:55)
      kind: _13 = meta::strategy::ReverseSuffix::try_search_half_start(move _14, move _15, move _16) -> [return: bb6, unwind: bb43]
  }
  preds [bb2]
  succs [bb6, bb43]

bb6
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:54-1325:55)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:54-1325:55)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:54-1325:55)
  3: PlaceMention(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:15-1325:55)
  4: _19 = discriminant(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:15-1325:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1325:9-1325:55)
      kind: switchInt(move _19) -> [0: bb11, 1: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb11]

bb7
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:15-1325:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1325:15-1325:55)
      kind: unreachable
  }
  preds [bb6, bb8, bb11]
  succs []

bb8
  0: _17 = discriminant(((_13 as Err).0: meta::error::RetryError))
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:15-1325:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1325:9-1325:55)
      kind: switchInt(move _17) -> [0: bb9, 1: bb10, otherwise: bb7]
  }
  preds [bb6]
  succs [bb7, bb9, bb10]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1326:13-1326:45)
      kind: falseEdge -> [real: bb14, imaginary: bb10]
  }
  preds [bb8]
  succs [bb10, bb14]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1330:13-1330:40)
      kind: falseEdge -> [real: bb16, imaginary: bb11]
  }
  preds [bb8, bb9]
  succs [bb11, bb16]

bb11
  0: _18 = discriminant(((_13 as Ok).0: core::option::Option<util::search::HalfMatch>))
    SourceInfo(regex-automata/src/meta/strategy.rs:1325:15-1325:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1325:9-1325:55)
      kind: switchInt(move _18) -> [0: bb12, 1: bb13, otherwise: bb7]
  }
  preds [bb6, bb10]
  succs [bb7, bb12, bb13]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1334:13-1334:21)
      kind: falseEdge -> [real: bb18, imaginary: bb13]
  }
  preds [bb11]
  succs [bb13, bb18]

bb13
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1335:21-1335:29)
  1: _28 = ((((_13 as Ok).0: core::option::Option<util::search::HalfMatch>) as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/meta/strategy.rs:1335:21-1335:29)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1336:21-1336:29)
  3: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1336:32-1338:69)
  4: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1336:32-1337:29)
  5: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1336:32-1336:37)
  6: _32 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1336:32-1336:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1336:32-1337:29)
      kind: _31 = <util::search::Input<'_> as core::clone::Clone>::clone(move _32) -> [return: bb19, unwind: bb43]
  }
  preds [bb11, bb12]
  succs [bb19, bb43]

bb14
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1326:39-1326:43)
  1: _20 = move ((((_13 as Err).0: meta::error::RetryError) as Quadratic).0: meta::error::RetryQuadraticError)
    SourceInfo(regex-automata/src/meta/strategy.rs:1326:39-1326:43)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1328:17-1328:26)
  3: _21 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1328:17-1328:26)
  4: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1328:34-1328:39)
  5: _22 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1328:34-1328:39)
  6: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1328:41-1328:46)
  7: _23 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1328:41-1328:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1328:17-1328:47)
      kind: _0 = <meta::strategy::Core as meta::strategy::Strategy>::search(move _21, move _22, move _23) -> [return: bb15, unwind: bb43]
  }
  preds [bb9]
  succs [bb15, bb43]

bb15
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1328:46-1328:47)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1328:46-1328:47)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1328:46-1328:47)
  3: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1329:13-1329:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1329:13-1329:14)
      kind: goto -> bb41
  }
  preds [bb14]
  succs [bb41]

bb16
  0: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1330:34-1330:38)
  1: _24 = move ((((_13 as Err).0: meta::error::RetryError) as Fail).0: meta::error::RetryFailError)
    SourceInfo(regex-automata/src/meta/strategy.rs:1330:34-1330:38)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1332:17-1332:26)
  3: _25 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1332:17-1332:26)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1332:41-1332:46)
  5: _26 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1332:41-1332:46)
  6: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1332:48-1332:53)
  7: _27 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1332:48-1332:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1332:17-1332:54)
      kind: _0 = meta::strategy::Core::search_nofail(move _25, move _26, move _27) -> [return: bb17, unwind: bb43]
  }
  preds [bb10]
  succs [bb17, bb43]

bb17
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1332:53-1332:54)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1332:53-1332:54)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1332:53-1332:54)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1333:13-1333:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1333:13-1333:14)
      kind: goto -> bb41
  }
  preds [bb16]
  succs [bb41]

bb18
  0: _0 = core::option::Option::<util::search::Match>::None
    SourceInfo(regex-automata/src/meta/strategy.rs:1334:25-1334:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1334:25-1334:29)
      kind: goto -> bb41
  }
  preds [bb12]
  succs [bb41]

bb19
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1337:28-1337:29)
  1: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1338:31-1338:68)
  2: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1338:49-1338:67)
  3: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1338:49-1338:57)
  4: _35 = &_28
    SourceInfo(regex-automata/src/meta/strategy.rs:1338:49-1338:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1338:49-1338:67)
      kind: _34 = util::search::HalfMatch::pattern(move _35) -> [return: bb20, unwind: bb43]
  }
  preds [bb13]
  succs [bb20, bb43]

bb20
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1338:66-1338:67)
  1: _33 = util::search::Anchored::Pattern(move _34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1338:31-1338:68)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1338:67-1338:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1336:32-1338:69)
      kind: _30 = util::search::Input::<'_>::anchored(move _31, move _33) -> [return: bb21, unwind: bb43]
  }
  preds [bb19]
  succs [bb21, bb43]

bb21
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1338:68-1338:69)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1338:68-1338:69)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1339:27-1339:57)
  3: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1339:27-1339:44)
  4: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1339:27-1339:35)
  5: _38 = &_28
    SourceInfo(regex-automata/src/meta/strategy.rs:1339:27-1339:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1339:27-1339:44)
      kind: _37 = util::search::HalfMatch::offset(move _38) -> [return: bb22, unwind: bb43]
  }
  preds [bb20]
  succs [bb22, bb43]

bb22
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1339:43-1339:44)
  1: StorageLive(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1339:46-1339:57)
  2: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:1339:46-1339:51)
  3: _40 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1339:46-1339:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1339:46-1339:57)
      kind: _39 = util::search::Input::<'_>::end(move _40) -> [return: bb23, unwind: bb43]
  }
  preds [bb21]
  succs [bb23, bb43]

bb23
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:1339:56-1339:57)
  1: _36 = core::ops::Range::<usize> { start: move _37, end: move _39 }
    SourceInfo(regex-automata/src/meta/strategy.rs:1339:27-1339:57)
  2: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1339:56-1339:57)
  3: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1339:56-1339:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1336:32-1339:58)
      kind: _29 = util::search::Input::<'_>::span::<core::ops::Range<usize>>(move _30, move _36) -> [return: bb24, unwind: bb43]
  }
  preds [bb22]
  succs [bb24, bb43]

bb24
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1339:57-1339:58)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1339:57-1339:58)
  2: FakeRead(ForLet(None), _29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1336:21-1336:29)
  3: StorageLive(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:23-1340:65)
  4: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:23-1340:27)
  5: _42 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:23-1340:27)
  6: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:48-1340:53)
  7: _43 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:48-1340:53)
  8: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:55-1340:64)
  9: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:55-1340:64)
  10: _45 = &_29
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:55-1340:64)
  11: _44 = &(*_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:55-1340:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1340:23-1340:65)
      kind: _41 = meta::strategy::ReverseSuffix::try_search_half_fwd(move _42, move _43, move _44) -> [return: bb25, unwind: bb43]
  }
  preds [bb23]
  succs [bb25, bb43]

bb25
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:64-1340:65)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:64-1340:65)
  2: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:64-1340:65)
  3: PlaceMention(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:23-1340:65)
  4: _47 = discriminant(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:23-1340:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1340:17-1340:65)
      kind: switchInt(move _47) -> [0: bb28, 1: bb27, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27, bb28]

bb26
  0: FakeRead(ForMatchedPlace(None), _41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:23-1340:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1340:23-1340:65)
      kind: unreachable
  }
  preds [bb25, bb28]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1341:21-1341:30)
      kind: falseEdge -> [real: bb31, imaginary: bb28]
  }
  preds [bb25]
  succs [bb28, bb31]

bb28
  0: _46 = discriminant(((_41 as Ok).0: core::option::Option<util::search::HalfMatch>))
    SourceInfo(regex-automata/src/meta/strategy.rs:1340:23-1340:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1340:17-1340:65)
      kind: switchInt(move _46) -> [0: bb29, 1: bb30, otherwise: bb26]
  }
  preds [bb25, bb27]
  succs [bb26, bb29, bb30]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1348:21-1348:29)
      kind: falseEdge -> [real: bb33, imaginary: bb30]
  }
  preds [bb28]
  succs [bb30, bb33]

bb30
  0: StorageLive(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1354:29-1354:35)
  1: _61 = ((((_41 as Ok).0: core::option::Option<util::search::HalfMatch>) as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/meta/strategy.rs:1354:29-1354:35)
  2: StorageLive(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1354:46-1357:22)
  3: StorageLive(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:1355:25-1355:43)
  4: StorageLive(_64)
    SourceInfo(regex-automata/src/meta/strategy.rs:1355:25-1355:33)
  5: _64 = &_28
    SourceInfo(regex-automata/src/meta/strategy.rs:1355:25-1355:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1355:25-1355:43)
      kind: _63 = util::search::HalfMatch::pattern(move _64) -> [return: bb36, unwind: bb43]
  }
  preds [bb28, bb29]
  succs [bb36, bb43]

bb31
  0: StorageLive(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:1341:25-1341:29)
  1: _48 = move ((_41 as Err).0: meta::error::RetryFailError)
    SourceInfo(regex-automata/src/meta/strategy.rs:1341:25-1341:29)
  2: StorageLive(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:1346:25-1346:34)
  3: _49 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1346:25-1346:34)
  4: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1346:49-1346:54)
  5: _50 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1346:49-1346:54)
  6: StorageLive(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1346:56-1346:61)
  7: _51 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1346:56-1346:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1346:25-1346:62)
      kind: _0 = meta::strategy::Core::search_nofail(move _49, move _50, move _51) -> [return: bb32, unwind: bb43]
  }
  preds [bb27]
  succs [bb32, bb43]

bb32
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1346:61-1346:62)
  1: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1346:61-1346:62)
  2: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:1346:61-1346:62)
  3: StorageDead(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:1347:21-1347:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1347:21-1347:22)
      kind: goto -> bb40
  }
  preds [bb31]
  succs [bb40]

bb33
  0: StorageLive(_53)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  1: StorageLive(_54)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageLive(_55)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  3: StorageLive(_56)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  4: StorageLive(_57)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  5: _57 = [const "internal error: entered unreachable code: suffix match plus reverse match implies there must be a match"]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  6: _56 = &_57
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  7: _55 = &(*_56)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  8: StorageLive(_58)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  9: StorageLive(_59)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  10: StorageLive(_60)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _60 = core::fmt::rt::Argument::<'_>::none() -> [return: bb34, unwind: bb43]
  }
  preds [bb29]
  succs [bb34, bb43]

bb34
  0: _59 = &_60
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  1: _58 = &(*_59)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _54 = core::fmt::Arguments::<'_>::new_v1::<1, 0>(move _55, move _58) -> [return: bb35, unwind: bb43]
  }
  preds [bb33]
  succs [bb35, bb43]

bb35
  0: StorageDead(_58)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_55)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _53 = core::panicking::panic_fmt(move _54) -> bb43
  }
  preds [bb34]
  succs [bb43]

bb36
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/meta/strategy.rs:1355:42-1355:43)
  1: StorageLive(_65)
    SourceInfo(regex-automata/src/meta/strategy.rs:1356:25-1356:59)
  2: StorageLive(_66)
    SourceInfo(regex-automata/src/meta/strategy.rs:1356:25-1356:42)
  3: StorageLive(_67)
    SourceInfo(regex-automata/src/meta/strategy.rs:1356:25-1356:33)
  4: _67 = &_28
    SourceInfo(regex-automata/src/meta/strategy.rs:1356:25-1356:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1356:25-1356:42)
      kind: _66 = util::search::HalfMatch::offset(move _67) -> [return: bb37, unwind: bb43]
  }
  preds [bb30]
  succs [bb37, bb43]

bb37
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/meta/strategy.rs:1356:41-1356:42)
  1: StorageLive(_68)
    SourceInfo(regex-automata/src/meta/strategy.rs:1356:44-1356:59)
  2: StorageLive(_69)
    SourceInfo(regex-automata/src/meta/strategy.rs:1356:44-1356:50)
  3: _69 = &_61
    SourceInfo(regex-automata/src/meta/strategy.rs:1356:44-1356:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1356:44-1356:59)
      kind: _68 = util::search::HalfMatch::offset(move _69) -> [return: bb38, unwind: bb43]
  }
  preds [bb36]
  succs [bb38, bb43]

bb38
  0: StorageDead(_69)
    SourceInfo(regex-automata/src/meta/strategy.rs:1356:58-1356:59)
  1: _65 = core::ops::Range::<usize> { start: move _66, end: move _68 }
    SourceInfo(regex-automata/src/meta/strategy.rs:1356:25-1356:59)
  2: StorageDead(_68)
    SourceInfo(regex-automata/src/meta/strategy.rs:1356:58-1356:59)
  3: StorageDead(_66)
    SourceInfo(regex-automata/src/meta/strategy.rs:1356:58-1356:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1354:46-1357:22)
      kind: _62 = util::search::Match::new::<core::ops::Range<usize>>(move _63, move _65) -> [return: bb39, unwind: bb43]
  }
  preds [bb37]
  succs [bb39, bb43]

bb39
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/meta/strategy.rs:1357:21-1357:22)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:1357:21-1357:22)
  2: _0 = core::option::Option::<util::search::Match>::Some(move _62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1354:41-1357:23)
  3: StorageDead(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1357:22-1357:23)
  4: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1357:22-1357:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1357:22-1357:23)
      kind: goto -> bb40
  }
  preds [bb38]
  succs [bb40]

bb40
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1359:13-1359:14)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1359:13-1359:14)
  2: StorageDead(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1359:13-1359:14)
  3: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1359:13-1359:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1359:13-1359:14)
      kind: goto -> bb41
  }
  preds [bb32, bb39]
  succs [bb41]

bb41
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1361:5-1361:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1361:6-1361:6)
      kind: goto -> bb42
  }
  preds [bb15, bb17, bb18, bb40]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1361:6-1361:6)
      kind: return
  }
  preds [bb4, bb41]
  succs []

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1321:5-1361:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb13, bb14, bb16, bb19, bb20, bb21, bb22, bb23, bb24, bb30, bb31, bb33, bb34, bb35, bb36, bb37, bb38]
  succs []

