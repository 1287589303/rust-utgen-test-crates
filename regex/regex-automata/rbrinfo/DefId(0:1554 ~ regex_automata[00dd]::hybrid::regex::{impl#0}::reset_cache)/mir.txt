bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:9-237:55)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:9-237:23)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:9-237:23)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:9-237:13)
  4: _6 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:9-237:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:237:9-237:23)
      kind: _5 = hybrid::regex::Regex::forward(move _6) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: _4 = &(*_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:9-237:23)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:22-237:23)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:36-237:54)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:36-237:54)
  4: _8 = &mut ((*_2).0: hybrid::dfa::Cache)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:36-237:54)
  5: _7 = &mut (*_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:36-237:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:237:9-237:55)
      kind: _3 = hybrid::dfa::DFA::reset_cache(move _4, move _7) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:54-237:55)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:54-237:55)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:55-237:56)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:55-237:56)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:237:55-237:56)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:9-238:55)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:9-238:23)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:9-238:23)
  8: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:9-238:13)
  9: _12 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:9-238:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:238:9-238:23)
      kind: _11 = hybrid::regex::Regex::reverse(move _12) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: _10 = &(*_11)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:9-238:23)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:22-238:23)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:36-238:54)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:36-238:54)
  4: _14 = &mut ((*_2).1: hybrid::dfa::Cache)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:36-238:54)
  5: _13 = &mut (*_14)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:36-238:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:238:9-238:55)
      kind: _9 = hybrid::dfa::DFA::reset_cache(move _10, move _13) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:54-238:55)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:54-238:55)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:55-238:56)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:55-238:56)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:238:55-238:56)
  5: _0 = const ()
    SourceInfo(regex-automata/src/hybrid/regex.rs:236:50-239:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:239:6-239:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:236:5-239:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

