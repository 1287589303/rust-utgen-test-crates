bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:13-129:19)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:22-129:39)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:33-129:39)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:22-129:33)
  4: _7 = &((*_1).0: std::vec::Vec<nfa::thompson::literal_trie::State>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:22-129:33)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:34-129:38)
  6: _8 = _2
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:34-129:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:33-129:39)
      kind: _6 = <std::vec::Vec<nfa::thompson::literal_trie::State> as core::ops::Index<util::primitives::StateID>>::index(move _7, move _8) -> [return: bb1, unwind: bb35]
  }
  preds []
  succs [bb1, bb35]

bb1
  0: _5 = &(*_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:22-129:39)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:38-129:39)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:38-129:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:22-129:54)
      kind: _4 = nfa::thompson::literal_trie::State::active_chunk(move _5) -> [return: bb2, unwind: bb35]
  }
  preds [bb0]
  succs [bb2, bb35]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:53-129:54)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:13-129:19)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:129:54-129:55)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:15-130:61)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:15-130:21)
  5: _10 = &(*_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:15-130:21)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:43-130:48)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:43-130:48)
  8: _12 = &_3
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:43-130:48)
  9: _11 = &(*_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:43-130:48)
  10: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:50-130:60)
  11: _13 = {closure@regex-automata/src/nfa/thompson/literal_trie.rs:130:50: 130:53}
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:50-130:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:15-130:61)
      kind: _9 = core::slice::<impl [nfa::thompson::literal_trie::Transition]>::binary_search_by_key::<'_, u8, {closure@regex-automata/src/nfa/thompson/literal_trie.rs:130:50: 130:53}>(move _10, move _11, move _13) -> [return: bb3, unwind: bb35]
  }
  preds [bb1]
  succs [bb3, bb35]

bb3
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:60-130:61)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:60-130:61)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:60-130:61)
  3: PlaceMention(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:15-130:61)
  4: _14 = discriminant(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:15-130:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:9-130:61)
      kind: switchInt(move _14) -> [0: bb5, 1: bb6, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:15-130:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:130:15-130:61)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:13-131:18)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:132:17-132:18)
  1: _20 = ((_9 as Err).0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:132:17-132:18)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:21-134:25)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-136:20)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-136:19)
  5: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-134:59)
  6: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:41-134:58)
  7: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:41-134:52)
  8: _26 = &((*_1).0: std::vec::Vec<nfa::thompson::literal_trie::State>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:41-134:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:41-134:58)
      kind: _25 = std::vec::Vec::<nfa::thompson::literal_trie::State>::len(move _26) -> [return: bb9, unwind: bb35]
  }
  preds [bb3, bb5]
  succs [bb9, bb35]

bb7
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:16-131:17)
  1: _15 = ((_9 as Ok).0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:16-131:17)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:25-131:39)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:32-131:33)
  4: _17 = _15
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:32-131:33)
  5: _18 = Len((*_4))
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:25-131:34)
  6: _19 = Lt(_17, _18)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:25-131:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:25-131:34)
      kind: assert(move _19, "index out of bounds: the length is {} but the index is {}", move _18, _17) -> [success: bb8, unwind: bb35]
  }
  preds [bb5]
  succs [bb8, bb35]

bb8
  0: _16 = ((*_4)[_17].1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:25-131:39)
  1: _0 = core::result::Result::<util::primitives::StateID, nfa::thompson::error::BuildError>::Ok(move _16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:22-131:40)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:39-131:40)
  3: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:39-131:40)
  4: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:39-131:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:131:39-131:40)
      kind: goto -> bb26
  }
  preds [bb7]
  succs [bb26]

bb9
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:57-134:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-134:59)
      kind: _24 = util::primitives::StateID::new(move _25) -> [return: bb10, unwind: bb35]
  }
  preds [bb6]
  succs [bb10, bb35]

bb10
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:58-134:59)
  1: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:68-136:18)
  2: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:68-136:18)
  3: _28 = &((*_1).0: std::vec::Vec<nfa::thompson::literal_trie::State>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:68-136:18)
  4: _27 = {closure@regex-automata/src/nfa/thompson/literal_trie.rs:134:68: 134:71} { self: move _28 }
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:68-136:18)
  5: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:70-134:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-136:19)
      kind: _23 = core::result::Result::<util::primitives::StateID, util::primitives::StateIDError>::map_err::<nfa::thompson::error::BuildError, {closure@regex-automata/src/nfa/thompson/literal_trie.rs:134:68: 134:71}>(move _24, move _27) -> [return: bb11, unwind: bb35]
  }
  preds [bb9]
  succs [bb11, bb35]

bb11
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:18-136:19)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:18-136:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-136:20)
      kind: _22 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _23) -> [return: bb12, unwind: bb34]
  }
  preds [bb10]
  succs [bb12, bb34]

bb12
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:19-136:20)
  1: PlaceMention(_22)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-136:20)
  2: _29 = discriminant(_22)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-136:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-136:20)
      kind: switchInt(move _29) -> [0: bb15, 1: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _22)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-136:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-136:20)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:19-136:20)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-136:20)
  1: _33 = ((_22 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-136:20)
  2: _21 = _33
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-136:20)
  3: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:19-136:20)
  4: FakeRead(ForLet(None), _21)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:21-134:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:20-136:21)
      kind: drop(_22) -> [return: bb18, unwind: bb35]
  }
  preds [bb12, bb14]
  succs [bb18, bb35]

bb16
  0: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:19-136:20)
  1: _30 = move ((_22 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:19-136:20)
  2: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:19-136:20)
  3: _32 = move _30
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:19-136:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:134:28-136:20)
      kind: _0 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _32) -> [return: bb17, unwind: bb31]
  }
  preds [bb14]
  succs [bb17, bb31]

bb17
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:19-136:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:19-136:20)
      kind: drop(_30) -> [return: bb27, unwind: bb33]
  }
  preds [bb16]
  succs [bb27, bb33]

bb18
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:20-136:21)
  1: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:137:17-137:51)
  2: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:137:17-137:28)
  3: _35 = &mut ((*_1).0: std::vec::Vec<nfa::thompson::literal_trie::State>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:137:17-137:28)
  4: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:137:34-137:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:137:34-137:50)
      kind: _36 = <nfa::thompson::literal_trie::State as core::default::Default>::default() -> [return: bb19, unwind: bb35]
  }
  preds [bb15]
  succs [bb19, bb35]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:137:17-137:51)
      kind: _34 = std::vec::Vec::<nfa::thompson::literal_trie::State>::push(move _35, move _36) -> [return: bb20, unwind: bb30]
  }
  preds [bb18]
  succs [bb20, bb30]

bb20
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:137:50-137:51)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:137:50-137:51)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:137:51-137:52)
  3: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:21-140:22)
  4: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:25-140:63)
  5: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:25-140:42)
  6: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:36-140:42)
  7: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:25-140:36)
  8: _41 = &((*_1).0: std::vec::Vec<nfa::thompson::literal_trie::State>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:25-140:36)
  9: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:37-140:41)
  10: _42 = _2
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:37-140:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:36-140:42)
      kind: _40 = <std::vec::Vec<nfa::thompson::literal_trie::State> as core::ops::Index<util::primitives::StateID>>::index(move _41, move _42) -> [return: bb21, unwind: bb35]
  }
  preds [bb19]
  succs [bb21, bb35]

bb21
  0: _39 = &(*_40)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:25-140:42)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:41-140:42)
  2: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:41-140:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:25-140:63)
      kind: _38 = nfa::thompson::literal_trie::State::active_chunk_start(move _39) -> [return: bb22, unwind: bb35]
  }
  preds [bb20]
  succs [bb22, bb35]

bb22
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:62-140:63)
  1: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:66-140:67)
  2: _43 = _20
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:66-140:67)
  3: _44 = AddWithOverflow(_38, _43)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:25-140:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:25-140:67)
      kind: assert(!move (_44.1: bool), "attempt to compute `{} + {}`, which would overflow", move _38, move _43) -> [success: bb23, unwind: bb35]
  }
  preds [bb21]
  succs [bb23, bb35]

bb23
  0: _37 = move (_44.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:25-140:67)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:66-140:67)
  2: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:66-140:67)
  3: FakeRead(ForLet(None), _37)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:21-140:22)
  4: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:140:67-140:68)
  5: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:141:21-141:22)
  6: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:141:38-141:42)
  7: _46 = _3
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:141:38-141:42)
  8: StorageLive(_47)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:141:44-141:48)
  9: _47 = _21
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:141:44-141:48)
  10: _45 = nfa::thompson::literal_trie::Transition { byte: move _46, next: move _47 }
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:141:25-141:50)
  11: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:141:49-141:50)
  12: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:141:49-141:50)
  13: FakeRead(ForLet(None), _45)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:141:21-141:22)
  14: StorageLive(_48)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:17-142:59)
  15: StorageLive(_49)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:17-142:46)
  16: StorageLive(_50)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:28-142:34)
  17: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:17-142:28)
  18: _51 = &mut ((*_1).0: std::vec::Vec<nfa::thompson::literal_trie::State>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:17-142:28)
  19: StorageLive(_52)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:29-142:33)
  20: _52 = _2
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:29-142:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:28-142:34)
      kind: _50 = <std::vec::Vec<nfa::thompson::literal_trie::State> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _51, move _52) -> [return: bb24, unwind: bb35]
  }
  preds [bb22]
  succs [bb24, bb35]

bb24
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:33-142:34)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:33-142:34)
  2: _49 = &mut ((*_50).0: std::vec::Vec<nfa::thompson::literal_trie::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:17-142:46)
  3: StorageLive(_53)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:54-142:55)
  4: _53 = _37
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:54-142:55)
  5: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:57-142:58)
  6: _54 = _45
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:57-142:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:17-142:59)
      kind: _48 = std::vec::Vec::<nfa::thompson::literal_trie::Transition>::insert(move _49, move _53, move _54) -> [return: bb25, unwind: bb35]
  }
  preds [bb23]
  succs [bb25, bb35]

bb25
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:58-142:59)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:58-142:59)
  2: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:58-142:59)
  3: StorageDead(_50)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:59-142:60)
  4: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:142:59-142:60)
  5: StorageLive(_55)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:143:20-143:24)
  6: _55 = _21
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:143:20-143:24)
  7: _0 = core::result::Result::<util::primitives::StateID, nfa::thompson::error::BuildError>::Ok(move _55)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:143:17-143:25)
  8: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:143:24-143:25)
  9: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:144:13-144:14)
  10: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:144:13-144:14)
  11: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:144:13-144:14)
  12: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:144:13-144:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:144:13-144:14)
      kind: goto -> bb26
  }
  preds [bb24]
  succs [bb26]

bb26
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:146:5-146:6)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:146:5-146:6)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:146:5-146:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:146:6-146:6)
      kind: goto -> bb29
  }
  preds [bb8, bb25]
  succs [bb29]

bb27
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:19-136:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:20-136:21)
      kind: drop(_22) -> [return: bb28, unwind: bb35]
  }
  preds [bb17]
  succs [bb28, bb35]

bb28
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:20-136:21)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:144:13-144:14)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:144:13-144:14)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:146:5-146:6)
  4: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:146:5-146:6)
  5: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:146:5-146:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:146:6-146:6)
      kind: goto -> bb29
  }
  preds [bb27]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:146:6-146:6)
      kind: return
  }
  preds [bb26, bb28]
  succs []

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:137:50-137:51)
      kind: drop(_36) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb35]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:19-136:20)
      kind: drop(_32) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb16]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:19-136:20)
      kind: drop(_30) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb31]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:20-136:21)
      kind: drop(_22) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb17, bb32]
  succs [bb35]

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:136:19-136:20)
      kind: drop(_23) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:124:5-146:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb6, bb7, bb9, bb10, bb15, bb18, bb20, bb21, bb22, bb23, bb24, bb27, bb30, bb33, bb34]
  succs []

