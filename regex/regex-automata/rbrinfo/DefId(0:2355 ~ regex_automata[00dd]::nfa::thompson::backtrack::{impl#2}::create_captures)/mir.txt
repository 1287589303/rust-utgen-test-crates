bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:23-665:58)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:23-665:50)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:23-665:50)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:23-665:37)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:23-665:37)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:23-665:27)
  6: _7 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:23-665:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:23-665:37)
      kind: _6 = nfa::thompson::backtrack::BoundedBacktracker::get_nfa(move _7) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: _5 = &(*_6)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:23-665:37)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:36-665:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:23-665:50)
      kind: _4 = nfa::thompson::nfa::NFA::group_info(move _5) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: _3 = &(*_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:23-665:50)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:49-665:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:23-665:58)
      kind: _2 = <util::captures::GroupInfo as core::clone::Clone>::clone(move _3) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:57-665:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:9-665:59)
      kind: _0 = util::captures::Captures::all(move _2) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:58-665:59)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:666:5-666:6)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:666:5-666:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:666:6-666:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:665:58-665:59)
      kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:664:5-666:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb5]
  succs []

