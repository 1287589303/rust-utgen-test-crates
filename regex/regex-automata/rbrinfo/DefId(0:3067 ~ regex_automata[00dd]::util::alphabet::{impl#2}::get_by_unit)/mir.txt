bb0
  0: PlaceMention((_2.0: util::alphabet::UnitKind))
    SourceInfo(regex-automata/src/util/alphabet.rs:302:15-302:21)
  1: _3 = discriminant((_2.0: util::alphabet::UnitKind))
    SourceInfo(regex-automata/src/util/alphabet.rs:302:15-302:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:302:9-302:21)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), (_2.0: util::alphabet::UnitKind))
    SourceInfo(regex-automata/src/util/alphabet.rs:302:15-302:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:302:15-302:21)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:303:13-303:28)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/util/alphabet.rs:304:27-304:28)
  1: _8 = (((_2.0: util::alphabet::UnitKind) as EOI).0: u16)
    SourceInfo(regex-automata/src/util/alphabet.rs:304:27-304:28)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/util/alphabet.rs:304:45-304:46)
  3: _9 = _8
    SourceInfo(regex-automata/src/util/alphabet.rs:304:45-304:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:304:33-304:47)
      kind: _0 = <usize as core::convert::From<u16>>::from(move _9) -> [return: bb7, unwind: bb9]
  }
  preds [bb0, bb2]
  succs [bb7, bb9]

bb4
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/util/alphabet.rs:303:26-303:27)
  1: _4 = (((_2.0: util::alphabet::UnitKind) as U8).0: u8)
    SourceInfo(regex-automata/src/util/alphabet.rs:303:26-303:27)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/alphabet.rs:303:44-303:55)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/alphabet.rs:303:44-303:48)
  4: _6 = &(*_1)
    SourceInfo(regex-automata/src/util/alphabet.rs:303:44-303:48)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/util/alphabet.rs:303:53-303:54)
  6: _7 = _4
    SourceInfo(regex-automata/src/util/alphabet.rs:303:53-303:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:303:44-303:55)
      kind: _5 = util::alphabet::ByteClasses::get(move _6, move _7) -> [return: bb5, unwind: bb9]
  }
  preds [bb2]
  succs [bb5, bb9]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/alphabet.rs:303:54-303:55)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/util/alphabet.rs:303:54-303:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:303:32-303:56)
      kind: _0 = <usize as core::convert::From<u8>>::from(move _5) -> [return: bb6, unwind: bb9]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/alphabet.rs:303:55-303:56)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/alphabet.rs:303:55-303:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:303:55-303:56)
      kind: goto -> bb8
  }
  preds [bb5]
  succs [bb8]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/alphabet.rs:304:46-304:47)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/alphabet.rs:304:46-304:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:304:46-304:47)
      kind: goto -> bb8
  }
  preds [bb3]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:306:6-306:6)
      kind: return
  }
  preds [bb6, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:301:5-306:6)
      kind: resume
  }
  preds [bb3, bb4, bb5]
  succs []

