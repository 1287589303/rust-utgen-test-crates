bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/util/determinize/state.rs:748:19-748:36)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:748:31-748:35)
  2: _5 = &(*_1)
    SourceInfo(regex-automata/src/util/determinize/state.rs:748:31-748:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:748:19-748:36)
      kind: _4 = util::determinize::state::read_varu32(move _5) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:748:35-748:36)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/util/determinize/state.rs:748:19-748:36)
  2: StorageLive(_2)
    SourceInfo(regex-automata/src/util/determinize/state.rs:748:10-748:12)
  3: _2 = (_4.0: u32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:748:10-748:12)
  4: StorageLive(_3)
    SourceInfo(regex-automata/src/util/determinize/state.rs:748:14-748:15)
  5: _3 = (_4.1: usize)
    SourceInfo(regex-automata/src/util/determinize/state.rs:748:14-748:15)
  6: StorageDead(_4)
    SourceInfo(regex-automata/src/util/determinize/state.rs:748:36-748:37)
  7: StorageLive(_6)
    SourceInfo(regex-automata/src/util/determinize/state.rs:749:9-749:14)
  8: StorageLive(_7)
    SourceInfo(regex-automata/src/util/determinize/state.rs:749:32-749:39)
  9: StorageLive(_8)
    SourceInfo(regex-automata/src/util/determinize/state.rs:749:32-749:34)
  10: _8 = _2
    SourceInfo(regex-automata/src/util/determinize/state.rs:749:32-749:34)
  11: _9 = const 1_i32 as u32 (IntToInt)
    SourceInfo(regex-automata/src/util/determinize/state.rs:749:32-749:39)
  12: _10 = Lt(move _9, const 32_u32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:749:32-749:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:749:32-749:39)
      kind: assert(move _10, "attempt to shift right by `{}`, which would overflow", const 1_i32) -> [success: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: _7 = Shr(move _8, const 1_i32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:749:32-749:39)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/determinize/state.rs:749:38-749:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:749:17-749:40)
      kind: _6 = <i32 as util::int::I32>::from_bits(move _7) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/determinize/state.rs:749:39-749:40)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/util/determinize/state.rs:749:9-749:14)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/util/determinize/state.rs:750:5-752:6)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/util/determinize/state.rs:750:8-750:19)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/util/determinize/state.rs:750:8-750:14)
  5: StorageLive(_14)
    SourceInfo(regex-automata/src/util/determinize/state.rs:750:8-750:10)
  6: _14 = _2
    SourceInfo(regex-automata/src/util/determinize/state.rs:750:8-750:10)
  7: _13 = BitAnd(move _14, const 1_u32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:750:8-750:14)
  8: StorageDead(_14)
    SourceInfo(regex-automata/src/util/determinize/state.rs:750:13-750:14)
  9: _12 = Ne(move _13, const 0_u32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:750:8-750:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:750:8-750:19)
      kind: switchInt(move _12) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/determinize/state.rs:750:18-750:19)
  1: StorageLive(_15)
    SourceInfo(regex-automata/src/util/determinize/state.rs:751:14-751:15)
  2: _15 = _6
    SourceInfo(regex-automata/src/util/determinize/state.rs:751:14-751:15)
  3: _6 = Not(move _15)
    SourceInfo(regex-automata/src/util/determinize/state.rs:751:9-751:15)
  4: StorageDead(_15)
    SourceInfo(regex-automata/src/util/determinize/state.rs:751:14-751:15)
  5: _11 = const ()
    SourceInfo(regex-automata/src/util/determinize/state.rs:750:20-752:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:750:5-752:6)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/determinize/state.rs:750:18-750:19)
  1: _11 = const ()
    SourceInfo(regex-automata/src/util/determinize/state.rs:752:6-752:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:750:5-752:6)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/determinize/state.rs:752:5-752:6)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/util/determinize/state.rs:752:5-752:6)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/util/determinize/state.rs:753:6-753:7)
  3: _16 = _6
    SourceInfo(regex-automata/src/util/determinize/state.rs:753:6-753:7)
  4: StorageLive(_17)
    SourceInfo(regex-automata/src/util/determinize/state.rs:753:9-753:10)
  5: _17 = _3
    SourceInfo(regex-automata/src/util/determinize/state.rs:753:9-753:10)
  6: _0 = (move _16, move _17)
    SourceInfo(regex-automata/src/util/determinize/state.rs:753:5-753:11)
  7: StorageDead(_17)
    SourceInfo(regex-automata/src/util/determinize/state.rs:753:10-753:11)
  8: StorageDead(_16)
    SourceInfo(regex-automata/src/util/determinize/state.rs:753:10-753:11)
  9: StorageDead(_6)
    SourceInfo(regex-automata/src/util/determinize/state.rs:754:1-754:2)
  10: StorageDead(_3)
    SourceInfo(regex-automata/src/util/determinize/state.rs:754:1-754:2)
  11: StorageDead(_2)
    SourceInfo(regex-automata/src/util/determinize/state.rs:754:1-754:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:754:2-754:2)
      kind: return
  }
  preds [bb4, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:747:1-754:2)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

