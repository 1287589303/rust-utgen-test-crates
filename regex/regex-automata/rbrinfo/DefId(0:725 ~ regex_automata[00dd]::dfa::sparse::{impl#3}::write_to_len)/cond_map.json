{
  "regex-automata/src/dfa/sparse.rs:838:9:842:36": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()\n        + wire::write_version_len()\n        + size_of::<u32>() // unused, intended for future flexibility\n        + self.flags.write_to_len()",
          "lhs": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()\n        + wire::write_version_len()\n        + size_of::<u32>()",
          "rhs": "self.flags.write_to_len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:838:9:841:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()\n        + wire::write_version_len()\n        + size_of::<u32>()",
          "lhs": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()\n        + wire::write_version_len()",
          "rhs": "size_of::<u32>()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:838:9:839:45": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()",
          "lhs": "wire::write_label_len(LABEL)",
          "rhs": "wire::write_endianness_check_len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:838:9:840:36": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()\n        + wire::write_version_len()",
          "lhs": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()",
          "rhs": "wire::write_version_len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:838:9:845:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()\n        + wire::write_version_len()\n        + size_of::<u32>() // unused, intended for future flexibility\n        + self.flags.write_to_len()\n        + self.tt.write_to_len()\n        + self.st.write_to_len()\n        + self.special.write_to_len()",
          "lhs": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()\n        + wire::write_version_len()\n        + size_of::<u32>() // unused, intended for future flexibility\n        + self.flags.write_to_len()\n        + self.tt.write_to_len()\n        + self.st.write_to_len()",
          "rhs": "self.special.write_to_len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:838:9:843:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()\n        + wire::write_version_len()\n        + size_of::<u32>() // unused, intended for future flexibility\n        + self.flags.write_to_len()\n        + self.tt.write_to_len()",
          "lhs": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()\n        + wire::write_version_len()\n        + size_of::<u32>() // unused, intended for future flexibility\n        + self.flags.write_to_len()",
          "rhs": "self.tt.write_to_len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:838:9:846:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()\n        + wire::write_version_len()\n        + size_of::<u32>() // unused, intended for future flexibility\n        + self.flags.write_to_len()\n        + self.tt.write_to_len()\n        + self.st.write_to_len()\n        + self.special.write_to_len()\n        + self.quitset.write_to_len()",
          "lhs": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()\n        + wire::write_version_len()\n        + size_of::<u32>() // unused, intended for future flexibility\n        + self.flags.write_to_len()\n        + self.tt.write_to_len()\n        + self.st.write_to_len()\n        + self.special.write_to_len()",
          "rhs": "self.quitset.write_to_len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:838:9:844:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()\n        + wire::write_version_len()\n        + size_of::<u32>() // unused, intended for future flexibility\n        + self.flags.write_to_len()\n        + self.tt.write_to_len()\n        + self.st.write_to_len()",
          "lhs": "wire::write_label_len(LABEL)\n        + wire::write_endianness_check_len()\n        + wire::write_version_len()\n        + size_of::<u32>() // unused, intended for future flexibility\n        + self.flags.write_to_len()\n        + self.tt.write_to_len()",
          "rhs": "self.st.write_to_len()",
          "cmp_with_int": false
        }
      }
    }
  ]
}