bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:2201:15-2201:33)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:2201:15-2201:26)
  2: _3 = &mut ((*_1).0: meta::regex::FindMatches<'_, '_>)
    SourceInfo(regex-automata/src/meta/regex.rs:2201:15-2201:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2201:15-2201:33)
      kind: _2 = <meta::regex::FindMatches<'_, '_> as core::iter::Iterator>::next(move _3) -> [return: bb1, unwind: bb18]
  }
  preds []
  succs [bb1, bb18]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:2201:32-2201:33)
  1: PlaceMention(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:2201:15-2201:33)
  2: _4 = discriminant(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:2201:15-2201:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2201:9-2201:33)
      kind: switchInt(move _4) -> [0: bb3, 1: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(regex-automata/src/meta/regex.rs:2201:15-2201:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2201:15-2201:33)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2202:13-2202:17)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/regex.rs:2212:18-2212:19)
  1: _21 = ((_2 as Some).0: util::search::Match)
    SourceInfo(regex-automata/src/meta/regex.rs:2212:18-2212:19)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/regex.rs:2213:21-2213:25)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/regex.rs:2213:39-2213:59)
  4: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/regex.rs:2213:39-2213:48)
  5: _24 = ((*_1).1: usize)
    SourceInfo(regex-automata/src/meta/regex.rs:2213:39-2213:48)
  6: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/regex.rs:2213:50-2213:59)
  7: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/regex.rs:2213:50-2213:51)
  8: _26 = &_21
    SourceInfo(regex-automata/src/meta/regex.rs:2213:50-2213:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2213:50-2213:59)
      kind: _25 = util::search::Match::start(move _26) -> [return: bb14, unwind: bb18]
  }
  preds [bb1, bb3]
  succs [bb14, bb18]

bb5
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:21-2203:24)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:27-2203:60)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:27-2203:60)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:27-2203:49)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:27-2203:49)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:27-2203:41)
  6: _10 = &(((*_1).0: meta::regex::FindMatches<'_, '_>).2: util::iter::Searcher<'_>)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:27-2203:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2203:27-2203:49)
      kind: _9 = util::iter::Searcher::<'_>::input(move _10) -> [return: bb6, unwind: bb18]
  }
  preds [bb3]
  succs [bb6, bb18]

bb6
  0: _8 = &(*_9)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:27-2203:49)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:48-2203:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2203:27-2203:60)
      kind: _7 = util::search::Input::<'_>::haystack(move _8) -> [return: bb7, unwind: bb18]
  }
  preds [bb5]
  succs [bb7, bb18]

bb7
  0: _6 = &(*_7)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:27-2203:60)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:59-2203:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2203:27-2203:66)
      kind: _5 = core::slice::<impl [u8]>::len(move _6) -> [return: bb8, unwind: bb18]
  }
  preds [bb6]
  succs [bb8, bb18]

bb8
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:65-2203:66)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:21-2203:24)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:66-2203:67)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:2203:66-2203:67)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:2204:20-2204:35)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:2204:20-2204:29)
  6: _12 = ((*_1).1: usize)
    SourceInfo(regex-automata/src/meta/regex.rs:2204:20-2204:29)
  7: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:2204:32-2204:35)
  8: _13 = _5
    SourceInfo(regex-automata/src/meta/regex.rs:2204:32-2204:35)
  9: _11 = Gt(move _12, move _13)
    SourceInfo(regex-automata/src/meta/regex.rs:2204:20-2204:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2204:20-2204:35)
      kind: switchInt(move _11) -> [0: bb10, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10]

bb9
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:2204:34-2204:35)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:2204:34-2204:35)
  2: _0 = core::option::Option::<util::search::Span>::None
    SourceInfo(regex-automata/src/meta/regex.rs:2205:21-2205:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2204:17-2210:18)
      kind: goto -> bb13
  }
  preds [bb8]
  succs [bb13]

bb10
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:2204:34-2204:35)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:2204:34-2204:35)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:2207:25-2207:29)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:2207:43-2207:57)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:2207:43-2207:52)
  5: _16 = ((*_1).1: usize)
    SourceInfo(regex-automata/src/meta/regex.rs:2207:43-2207:52)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:2207:54-2207:57)
  7: _17 = _5
    SourceInfo(regex-automata/src/meta/regex.rs:2207:54-2207:57)
  8: _15 = core::ops::Range::<usize> { start: move _16, end: move _17 }
    SourceInfo(regex-automata/src/meta/regex.rs:2207:43-2207:57)
  9: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:2207:56-2207:57)
  10: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:2207:56-2207:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2207:32-2207:58)
      kind: _14 = <util::search::Span as core::convert::From<core::ops::Range<usize>>>::from(move _15) -> [return: bb11, unwind: bb18]
  }
  preds [bb8]
  succs [bb11, bb18]

bb11
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:2207:57-2207:58)
  1: FakeRead(ForLet(None), _14)
    SourceInfo(regex-automata/src/meta/regex.rs:2207:25-2207:29)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/regex.rs:2208:33-2208:36)
  3: _18 = _5
    SourceInfo(regex-automata/src/meta/regex.rs:2208:33-2208:36)
  4: _19 = AddWithOverflow(_18, const 1_usize)
    SourceInfo(regex-automata/src/meta/regex.rs:2208:33-2208:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2208:33-2208:40)
      kind: assert(!move (_19.1: bool), "attempt to compute `{} + {}`, which would overflow", move _18, const 1_usize) -> [success: bb12, unwind: bb18]
  }
  preds [bb10]
  succs [bb12, bb18]

bb12
  0: ((*_1).1: usize) = move (_19.0: usize)
    SourceInfo(regex-automata/src/meta/regex.rs:2208:21-2208:40)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/regex.rs:2208:39-2208:40)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/regex.rs:2209:26-2209:30)
  3: _20 = _14
    SourceInfo(regex-automata/src/meta/regex.rs:2209:26-2209:30)
  4: _0 = core::option::Option::<util::search::Span>::Some(move _20)
    SourceInfo(regex-automata/src/meta/regex.rs:2209:21-2209:31)
  5: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/regex.rs:2209:30-2209:31)
  6: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:2210:17-2210:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2204:17-2210:18)
      kind: goto -> bb13
  }
  preds [bb11]
  succs [bb13]

bb13
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:2210:17-2210:18)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:2211:13-2211:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2211:13-2211:14)
      kind: goto -> bb17
  }
  preds [bb9, bb12]
  succs [bb17]

bb14
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/regex.rs:2213:58-2213:59)
  1: _23 = core::ops::Range::<usize> { start: move _24, end: move _25 }
    SourceInfo(regex-automata/src/meta/regex.rs:2213:39-2213:59)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/regex.rs:2213:58-2213:59)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/regex.rs:2213:58-2213:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2213:28-2213:60)
      kind: _22 = <util::search::Span as core::convert::From<core::ops::Range<usize>>>::from(move _23) -> [return: bb15, unwind: bb18]
  }
  preds [bb4]
  succs [bb15, bb18]

bb15
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/regex.rs:2213:59-2213:60)
  1: FakeRead(ForLet(None), _22)
    SourceInfo(regex-automata/src/meta/regex.rs:2213:21-2213:25)
  2: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/regex.rs:2214:29-2214:36)
  3: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/regex.rs:2214:29-2214:30)
  4: _28 = &_21
    SourceInfo(regex-automata/src/meta/regex.rs:2214:29-2214:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2214:29-2214:36)
      kind: _27 = util::search::Match::end(move _28) -> [return: bb16, unwind: bb18]
  }
  preds [bb14]
  succs [bb16, bb18]

bb16
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/regex.rs:2214:35-2214:36)
  1: ((*_1).1: usize) = move _27
    SourceInfo(regex-automata/src/meta/regex.rs:2214:17-2214:36)
  2: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/regex.rs:2214:35-2214:36)
  3: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/regex.rs:2215:22-2215:26)
  4: _29 = _22
    SourceInfo(regex-automata/src/meta/regex.rs:2215:22-2215:26)
  5: _0 = core::option::Option::<util::search::Span>::Some(move _29)
    SourceInfo(regex-automata/src/meta/regex.rs:2215:17-2215:27)
  6: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/regex.rs:2215:26-2215:27)
  7: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/regex.rs:2216:13-2216:14)
  8: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/regex.rs:2216:13-2216:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2216:13-2216:14)
      kind: goto -> bb17
  }
  preds [bb15]
  succs [bb17]

bb17
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:2218:5-2218:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2218:6-2218:6)
      kind: return
  }
  preds [bb13, bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2200:5-2218:6)
      kind: resume
  }
  preds [bb0, bb4, bb5, bb6, bb7, bb10, bb11, bb14, bb15]
  succs []

