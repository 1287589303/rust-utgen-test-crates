bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/captures.rs:1072:20-1072:24)
  1: _2 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/util/captures.rs:1072:20-1072:24)
  2: ((*_1).1: core::option::Option<util::primitives::PatternID>) = move _2
    SourceInfo(regex-automata/src/util/captures.rs:1072:9-1072:24)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/util/captures.rs:1072:23-1072:24)
  4: StorageLive(_3)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  5: StorageLive(_4)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  6: StorageLive(_5)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:31)
  7: StorageLive(_6)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  8: StorageLive(_7)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:31)
  9: _7 = &mut ((*_1).2: std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>>)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
      kind: _6 = <std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>> as core::ops::DerefMut>::deref_mut(move _7) -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  0: _5 = &mut (*_6)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:31)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/captures.rs:1073:30-1073:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
      kind: _4 = core::slice::<impl [core::option::Option<util::primitives::NonMaxUsize>]>::iter_mut(move _5) -> [return: bb2, unwind: bb11]
  }
  preds [bb0]
  succs [bb2, bb11]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/captures.rs:1073:41-1073:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
      kind: _3 = <core::slice::IterMut<'_, core::option::Option<util::primitives::NonMaxUsize>> as core::iter::IntoIterator>::into_iter(move _4) -> [return: bb3, unwind: bb11]
  }
  preds [bb1]
  succs [bb3, bb11]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/captures.rs:1073:41-1073:42)
  1: PlaceMention(_3)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  3: _8 = move _3
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1073:9-1075:10)
      kind: goto -> bb4
  }
  preds [bb2]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1073:9-1075:10)
      kind: falseUnwind -> [real: bb5, unwind: bb11]
  }
  preds [bb3, bb9]
  succs [bb5, bb11]

bb5
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  4: _13 = &mut _8
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  5: _12 = &mut (*_13)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
      kind: _11 = <core::slice::IterMut<'_, core::option::Option<util::primitives::NonMaxUsize>> as core::iter::Iterator>::next(move _12) -> [return: bb6, unwind: bb11]
  }
  preds [bb4]
  succs [bb6, bb11]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/captures.rs:1073:41-1073:42)
  1: PlaceMention(_11)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  2: _14 = discriminant(_11)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
      kind: switchInt(move _14) -> [0: bb8, 1: bb9, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _11)
    SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1073:21-1073:42)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1073:9-1075:10)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_16)
    SourceInfo(regex-automata/src/util/captures.rs:1073:13-1073:17)
  1: _16 = move ((_11 as Some).0: &mut core::option::Option<util::primitives::NonMaxUsize>)
    SourceInfo(regex-automata/src/util/captures.rs:1073:13-1073:17)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/util/captures.rs:1074:21-1074:25)
  3: _17 = core::option::Option::<util::primitives::NonMaxUsize>::None
    SourceInfo(regex-automata/src/util/captures.rs:1074:21-1074:25)
  4: (*_16) = move _17
    SourceInfo(regex-automata/src/util/captures.rs:1074:13-1074:25)
  5: StorageDead(_17)
    SourceInfo(regex-automata/src/util/captures.rs:1074:24-1074:25)
  6: _10 = const ()
    SourceInfo(regex-automata/src/util/captures.rs:1073:43-1075:10)
  7: StorageDead(_16)
    SourceInfo(regex-automata/src/util/captures.rs:1075:9-1075:10)
  8: StorageDead(_13)
    SourceInfo(regex-automata/src/util/captures.rs:1075:9-1075:10)
  9: StorageDead(_11)
    SourceInfo(regex-automata/src/util/captures.rs:1075:9-1075:10)
  10: StorageDead(_10)
    SourceInfo(regex-automata/src/util/captures.rs:1075:9-1075:10)
  11: _9 = const ()
    SourceInfo(regex-automata/src/util/captures.rs:1073:9-1075:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1073:9-1075:10)
      kind: goto -> bb4
  }
  preds [bb6, bb8]
  succs [bb4]

bb10
  0: _0 = const ()
    SourceInfo(regex-automata/src/util/captures.rs:1073:9-1075:10)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/util/captures.rs:1075:9-1075:10)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/util/captures.rs:1075:9-1075:10)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/util/captures.rs:1075:9-1075:10)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/util/captures.rs:1075:9-1075:10)
  5: StorageDead(_6)
    SourceInfo(regex-automata/src/util/captures.rs:1075:9-1075:10)
  6: StorageDead(_3)
    SourceInfo(regex-automata/src/util/captures.rs:1075:9-1075:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1076:6-1076:6)
      kind: return
  }
  preds [bb8]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1071:5-1076:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb5]
  succs []

