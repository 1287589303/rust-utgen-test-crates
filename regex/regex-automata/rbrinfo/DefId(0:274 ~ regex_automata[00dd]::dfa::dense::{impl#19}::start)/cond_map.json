{
  "regex-automata/src/dfa/dense.rs:4200:27:4200:35": [
    {
      "Match": {
        "match_source": "regex-automata/src/dfa/dense.rs:4200:27:4200:35",
        "match_str": "anchored",
        "match_kind": {
          "Enum": [
            "No",
            "Yes",
            "Pattern"
          ]
        },
        "arms": {
          "regex-automata/src/dfa/dense.rs:4201:13:4201:25": {
            "pat": {
              "pat_str": "Anchored::No",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/dense.rs:4201:29:4206:14"
          },
          "regex-automata/src/dfa/dense.rs:4207:13:4207:26": {
            "pat": {
              "pat_str": "Anchored::Yes",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/dense.rs:4207:30:4212:14"
          },
          "regex-automata/src/dfa/dense.rs:4213:13:4213:35": {
            "pat": {
              "pat_str": "Anchored::Pattern(pid)",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/dense.rs:4213:39:4226:14"
          }
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4220:20:4220:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "pid.as_usize() >= len",
          "lhs": "pid.as_usize()",
          "rhs": "len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4223:17:4224:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(2 * self.stride)\n                    + (self.stride * pid.as_usize())",
          "lhs": "(2 * self.stride)",
          "rhs": "(self.stride * pid.as_usize())",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4211:17:4211:42": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.stride + start_index",
          "lhs": "self.stride",
          "rhs": "start_index",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4202:21:4202:47": [
    {
      "Bool": {
        "Other": "self.kind.has_unanchored()"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4223:17:4223:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(2 * self.stride)",
          "lhs": "2",
          "rhs": "self.stride",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4214:33:4214:49": [
    {
      "Match": {
        "match_source": "regex-automata/src/dfa/dense.rs:4214:33:4214:49",
        "match_str": "self.pattern_len",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/dfa/dense.rs:4215:21:4215:25": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/dense.rs:4215:29:4217:22"
          },
          "regex-automata/src/dfa/dense.rs:4218:21:4218:30": {
            "pat": {
              "pat_str": "Some(len)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/dense.rs:4218:34:4218:37"
          }
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4208:21:4208:45": [
    {
      "Bool": {
        "Other": "self.kind.has_anchored()"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4224:23:4224:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.stride * pid.as_usize())",
          "lhs": "self.stride",
          "rhs": "pid.as_usize()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4223:17:4225:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(2 * self.stride)\n                    + (self.stride * pid.as_usize())\n                    + start_index",
          "lhs": "(2 * self.stride)\n                    + (self.stride * pid.as_usize())",
          "rhs": "start_index",
          "cmp_with_int": false
        }
      }
    }
  ]
}