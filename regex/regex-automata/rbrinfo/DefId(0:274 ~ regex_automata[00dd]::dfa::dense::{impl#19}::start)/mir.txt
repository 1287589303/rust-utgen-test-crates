bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:4199:13-4199:24)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:4199:27-4199:32)
  2: _5 = &_3
    SourceInfo(regex-automata/src/dfa/dense.rs:4199:27-4199:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4199:27-4199:43)
      kind: _4 = util::start::Start::as_usize(move _5) -> [return: bb1, unwind: bb36]
  }
  preds []
  succs [bb1, bb36]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:4199:42-4199:43)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/dfa/dense.rs:4199:13-4199:24)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:4200:13-4200:18)
  3: PlaceMention(_2)
    SourceInfo(regex-automata/src/dfa/dense.rs:4200:27-4200:35)
  4: _7 = discriminant(_2)
    SourceInfo(regex-automata/src/dfa/dense.rs:4200:27-4200:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4200:21-4200:35)
      kind: switchInt(move _7) -> [0: bb3, 1: bb4, 2: bb5, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb5]

bb2
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(regex-automata/src/dfa/dense.rs:4200:27-4200:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4200:27-4200:35)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4201:13-4201:25)
      kind: falseEdge -> [real: bb6, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb6]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4207:13-4207:26)
      kind: falseEdge -> [real: bb11, imaginary: bb5]
  }
  preds [bb1, bb3]
  succs [bb5, bb11]

bb5
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/dense.rs:4213:31-4213:34)
  1: _23 = ((_2 as Pattern).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/dfa/dense.rs:4213:31-4213:34)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/dense.rs:4214:21-4214:24)
  3: PlaceMention(((*_1).4: core::option::Option<usize>))
    SourceInfo(regex-automata/src/dfa/dense.rs:4214:33-4214:49)
  4: _25 = discriminant(((*_1).4: core::option::Option<usize>))
    SourceInfo(regex-automata/src/dfa/dense.rs:4214:33-4214:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4214:27-4214:49)
      kind: switchInt(move _25) -> [0: bb18, 1: bb19, otherwise: bb17]
  }
  preds [bb1, bb4]
  succs [bb17, bb18, bb19]

bb6
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:4202:17-4204:18)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:4202:21-4202:47)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:4202:21-4202:30)
  3: _10 = &((*_1).1: dfa::start::StartKind)
    SourceInfo(regex-automata/src/dfa/dense.rs:4202:21-4202:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4202:21-4202:47)
      kind: _9 = dfa::start::StartKind::has_unanchored(move _10) -> [return: bb7, unwind: bb36]
  }
  preds [bb3]
  succs [bb7, bb36]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4202:21-4202:47)
      kind: switchInt(move _9) -> [0: bb9, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:4202:46-4202:47)
  1: _8 = const ()
    SourceInfo(regex-automata/src/dfa/dense.rs:4204:18-4204:18)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:4204:17-4204:18)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:4204:17-4204:18)
  4: _6 = _4
    SourceInfo(regex-automata/src/dfa/dense.rs:4205:17-4205:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4205:17-4205:28)
      kind: goto -> bb30
  }
  preds [bb7]
  succs [bb30]

bb9
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:4202:46-4202:47)
  1: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:4203:32-4203:74)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:4203:65-4203:73)
  3: _13 = _2
    SourceInfo(regex-automata/src/dfa/dense.rs:4203:65-4203:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4203:32-4203:74)
      kind: _12 = dfa::automaton::StartError::unsupported_anchored(move _13) -> [return: bb10, unwind: bb36]
  }
  preds [bb7]
  succs [bb10, bb36]

bb10
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:4203:73-4203:74)
  1: _0 = core::result::Result::<util::primitives::StateID, dfa::automaton::StartError>::Err(move _12)
    SourceInfo(regex-automata/src/dfa/dense.rs:4203:28-4203:75)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:4203:74-4203:75)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:4204:17-4204:18)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:4204:17-4204:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb34
  }
  preds [bb9]
  succs [bb34]

bb11
  0: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/dense.rs:4208:17-4210:18)
  1: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/dense.rs:4208:21-4208:45)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:4208:21-4208:30)
  3: _16 = &((*_1).1: dfa::start::StartKind)
    SourceInfo(regex-automata/src/dfa/dense.rs:4208:21-4208:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4208:21-4208:45)
      kind: _15 = dfa::start::StartKind::has_anchored(move _16) -> [return: bb12, unwind: bb36]
  }
  preds [bb4]
  succs [bb12, bb36]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4208:21-4208:45)
      kind: switchInt(move _15) -> [0: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14]

bb13
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:4208:44-4208:45)
  1: _14 = const ()
    SourceInfo(regex-automata/src/dfa/dense.rs:4210:18-4210:18)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/dense.rs:4210:17-4210:18)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/dense.rs:4210:17-4210:18)
  4: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/dense.rs:4211:17-4211:28)
  5: _20 = ((*_1).3: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4211:17-4211:28)
  6: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/dense.rs:4211:31-4211:42)
  7: _21 = _4
    SourceInfo(regex-automata/src/dfa/dense.rs:4211:31-4211:42)
  8: _22 = AddWithOverflow(_20, _21)
    SourceInfo(regex-automata/src/dfa/dense.rs:4211:17-4211:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4211:17-4211:42)
      kind: assert(!move (_22.1: bool), "attempt to compute `{} + {}`, which would overflow", move _20, move _21) -> [success: bb16, unwind: bb36]
  }
  preds [bb12]
  succs [bb16, bb36]

bb14
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:4208:44-4208:45)
  1: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/dense.rs:4209:32-4209:74)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/dense.rs:4209:65-4209:73)
  3: _19 = _2
    SourceInfo(regex-automata/src/dfa/dense.rs:4209:65-4209:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4209:32-4209:74)
      kind: _18 = dfa::automaton::StartError::unsupported_anchored(move _19) -> [return: bb15, unwind: bb36]
  }
  preds [bb12]
  succs [bb15, bb36]

bb15
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/dense.rs:4209:73-4209:74)
  1: _0 = core::result::Result::<util::primitives::StateID, dfa::automaton::StartError>::Err(move _18)
    SourceInfo(regex-automata/src/dfa/dense.rs:4209:28-4209:75)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/dense.rs:4209:74-4209:75)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/dense.rs:4210:17-4210:18)
  4: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/dense.rs:4210:17-4210:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb34
  }
  preds [bb14]
  succs [bb34]

bb16
  0: _6 = move (_22.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4211:17-4211:42)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/dense.rs:4211:41-4211:42)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/dense.rs:4211:41-4211:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4211:41-4211:42)
      kind: goto -> bb30
  }
  preds [bb13]
  succs [bb30]

bb17
  0: FakeRead(ForMatchedPlace(None), ((*_1).4: core::option::Option<usize>))
    SourceInfo(regex-automata/src/dfa/dense.rs:4214:33-4214:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4214:33-4214:49)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4215:21-4215:25)
      kind: falseEdge -> [real: bb20, imaginary: bb19]
  }
  preds [bb5]
  succs [bb19, bb20]

bb19
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/dense.rs:4218:26-4218:29)
  1: _29 = ((((*_1).4: core::option::Option<usize>) as Some).0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4218:26-4218:29)
  2: _24 = _29
    SourceInfo(regex-automata/src/dfa/dense.rs:4218:34-4218:37)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/dense.rs:4218:36-4218:37)
  4: FakeRead(ForLet(None), _24)
    SourceInfo(regex-automata/src/dfa/dense.rs:4214:21-4214:24)
  5: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/dense.rs:4220:17-4222:18)
  6: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/dense.rs:4220:20-4220:41)
  7: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/dense.rs:4220:20-4220:34)
  8: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/dense.rs:4220:20-4220:23)
  9: _33 = &_23
    SourceInfo(regex-automata/src/dfa/dense.rs:4220:20-4220:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4220:20-4220:34)
      kind: _32 = util::primitives::PatternID::as_usize(move _33) -> [return: bb22, unwind: bb36]
  }
  preds [bb5, bb18]
  succs [bb22, bb36]

bb20
  0: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/dense.rs:4216:36-4216:78)
  1: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/dense.rs:4216:69-4216:77)
  2: _28 = _2
    SourceInfo(regex-automata/src/dfa/dense.rs:4216:69-4216:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4216:36-4216:78)
      kind: _27 = dfa::automaton::StartError::unsupported_anchored(move _28) -> [return: bb21, unwind: bb36]
  }
  preds [bb18]
  succs [bb21, bb36]

bb21
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/dense.rs:4216:77-4216:78)
  1: _0 = core::result::Result::<util::primitives::StateID, dfa::automaton::StartError>::Err(move _27)
    SourceInfo(regex-automata/src/dfa/dense.rs:4216:32-4216:79)
  2: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/dense.rs:4216:78-4216:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4216:25-4216:79)
      kind: goto -> bb33
  }
  preds [bb20]
  succs [bb33]

bb22
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/dense.rs:4220:33-4220:34)
  1: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/dense.rs:4220:38-4220:41)
  2: _34 = _24
    SourceInfo(regex-automata/src/dfa/dense.rs:4220:38-4220:41)
  3: _31 = Ge(move _32, move _34)
    SourceInfo(regex-automata/src/dfa/dense.rs:4220:20-4220:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4220:20-4220:41)
      kind: switchInt(move _31) -> [0: bb24, otherwise: bb23]
  }
  preds [bb19]
  succs [bb23, bb24]

bb23
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/dense.rs:4220:40-4220:41)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/dense.rs:4220:40-4220:41)
  2: _0 = core::result::Result::<util::primitives::StateID, dfa::automaton::StartError>::Ok(const dfa::DEAD)
    SourceInfo(regex-automata/src/dfa/dense.rs:4221:28-4221:36)
  3: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/dense.rs:4222:17-4222:18)
  4: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/dense.rs:4222:17-4222:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb33
  }
  preds [bb22]
  succs [bb33]

bb24
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/dense.rs:4220:40-4220:41)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/dense.rs:4220:40-4220:41)
  2: _30 = const ()
    SourceInfo(regex-automata/src/dfa/dense.rs:4222:18-4222:18)
  3: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/dense.rs:4222:17-4222:18)
  4: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/dense.rs:4222:17-4222:18)
  5: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/dense.rs:4223:17-4224:53)
  6: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/dense.rs:4223:17-4223:34)
  7: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/dense.rs:4223:22-4223:33)
  8: _38 = ((*_1).3: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4223:22-4223:33)
  9: _39 = MulWithOverflow(const 2_usize, _38)
    SourceInfo(regex-automata/src/dfa/dense.rs:4223:17-4223:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4223:17-4223:34)
      kind: assert(!move (_39.1: bool), "attempt to compute `{} * {}`, which would overflow", const 2_usize, move _38) -> [success: bb25, unwind: bb36]
  }
  preds [bb22]
  succs [bb25, bb36]

bb25
  0: _37 = move (_39.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4223:17-4223:34)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/dense.rs:4223:33-4223:34)
  2: StorageLive(_40)
    SourceInfo(regex-automata/src/dfa/dense.rs:4224:23-4224:53)
  3: StorageLive(_41)
    SourceInfo(regex-automata/src/dfa/dense.rs:4224:24-4224:35)
  4: _41 = ((*_1).3: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4224:24-4224:35)
  5: StorageLive(_42)
    SourceInfo(regex-automata/src/dfa/dense.rs:4224:38-4224:52)
  6: StorageLive(_43)
    SourceInfo(regex-automata/src/dfa/dense.rs:4224:38-4224:41)
  7: _43 = &_23
    SourceInfo(regex-automata/src/dfa/dense.rs:4224:38-4224:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4224:38-4224:52)
      kind: _42 = util::primitives::PatternID::as_usize(move _43) -> [return: bb26, unwind: bb36]
  }
  preds [bb24]
  succs [bb26, bb36]

bb26
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/dense.rs:4224:51-4224:52)
  1: _44 = MulWithOverflow(_41, _42)
    SourceInfo(regex-automata/src/dfa/dense.rs:4224:23-4224:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4224:23-4224:53)
      kind: assert(!move (_44.1: bool), "attempt to compute `{} * {}`, which would overflow", move _41, move _42) -> [success: bb27, unwind: bb36]
  }
  preds [bb25]
  succs [bb27, bb36]

bb27
  0: _40 = move (_44.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4224:23-4224:53)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/dense.rs:4224:52-4224:53)
  2: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/dense.rs:4224:52-4224:53)
  3: _45 = AddWithOverflow(_37, _40)
    SourceInfo(regex-automata/src/dfa/dense.rs:4223:17-4224:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4223:17-4224:53)
      kind: assert(!move (_45.1: bool), "attempt to compute `{} + {}`, which would overflow", move _37, move _40) -> [success: bb28, unwind: bb36]
  }
  preds [bb26]
  succs [bb28, bb36]

bb28
  0: _36 = move (_45.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4223:17-4224:53)
  1: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/dense.rs:4224:52-4224:53)
  2: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/dense.rs:4224:52-4224:53)
  3: StorageLive(_46)
    SourceInfo(regex-automata/src/dfa/dense.rs:4225:23-4225:34)
  4: _46 = _4
    SourceInfo(regex-automata/src/dfa/dense.rs:4225:23-4225:34)
  5: _47 = AddWithOverflow(_36, _46)
    SourceInfo(regex-automata/src/dfa/dense.rs:4223:17-4225:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4223:17-4225:34)
      kind: assert(!move (_47.1: bool), "attempt to compute `{} + {}`, which would overflow", move _36, move _46) -> [success: bb29, unwind: bb36]
  }
  preds [bb27]
  succs [bb29, bb36]

bb29
  0: _6 = move (_47.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4223:17-4225:34)
  1: StorageDead(_46)
    SourceInfo(regex-automata/src/dfa/dense.rs:4225:33-4225:34)
  2: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/dense.rs:4225:33-4225:34)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/dense.rs:4226:13-4226:14)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/dense.rs:4226:13-4226:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4226:13-4226:14)
      kind: goto -> bb30
  }
  preds [bb28]
  succs [bb30]

bb30
  0: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/dfa/dense.rs:4200:13-4200:18)
  1: StorageLive(_48)
    SourceInfo(regex-automata/src/dfa/dense.rs:4228:12-4228:31)
  2: StorageLive(_49)
    SourceInfo(regex-automata/src/dfa/dense.rs:4228:12-4228:24)
  3: StorageLive(_50)
    SourceInfo(regex-automata/src/dfa/dense.rs:4228:12-4228:16)
  4: _50 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:4228:12-4228:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4228:12-4228:24)
      kind: _49 = dfa::dense::StartTable::<T>::table(move _50) -> [return: bb31, unwind: bb36]
  }
  preds [bb8, bb16, bb29]
  succs [bb31, bb36]

bb31
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/dense.rs:4228:23-4228:24)
  1: StorageLive(_51)
    SourceInfo(regex-automata/src/dfa/dense.rs:4228:25-4228:30)
  2: _51 = _6
    SourceInfo(regex-automata/src/dfa/dense.rs:4228:25-4228:30)
  3: _52 = Len((*_49))
    SourceInfo(regex-automata/src/dfa/dense.rs:4228:12-4228:31)
  4: _53 = Lt(_51, _52)
    SourceInfo(regex-automata/src/dfa/dense.rs:4228:12-4228:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4228:12-4228:31)
      kind: assert(move _53, "index out of bounds: the length is {} but the index is {}", move _52, _51) -> [success: bb32, unwind: bb36]
  }
  preds [bb30]
  succs [bb32, bb36]

bb32
  0: _48 = (*_49)[_51]
    SourceInfo(regex-automata/src/dfa/dense.rs:4228:12-4228:31)
  1: _0 = core::result::Result::<util::primitives::StateID, dfa::automaton::StartError>::Ok(move _48)
    SourceInfo(regex-automata/src/dfa/dense.rs:4228:9-4228:32)
  2: StorageDead(_48)
    SourceInfo(regex-automata/src/dfa/dense.rs:4228:31-4228:32)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:4229:5-4229:6)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:4229:5-4229:6)
  5: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/dense.rs:4229:5-4229:6)
  6: StorageDead(_49)
    SourceInfo(regex-automata/src/dfa/dense.rs:4229:5-4229:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4229:6-4229:6)
      kind: goto -> bb35
  }
  preds [bb31]
  succs [bb35]

bb33
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/dense.rs:4226:13-4226:14)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/dense.rs:4226:13-4226:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb34
  }
  preds [bb21, bb23]
  succs [bb34]

bb34
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:4229:5-4229:6)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:4229:5-4229:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4229:6-4229:6)
      kind: goto -> bb35
  }
  preds [bb10, bb15, bb33]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4229:6-4229:6)
      kind: return
  }
  preds [bb32, bb34]
  succs []

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4194:5-4229:6)
      kind: resume
  }
  preds [bb0, bb6, bb9, bb11, bb13, bb14, bb19, bb20, bb24, bb25, bb26, bb27, bb28, bb30, bb31]
  succs []

