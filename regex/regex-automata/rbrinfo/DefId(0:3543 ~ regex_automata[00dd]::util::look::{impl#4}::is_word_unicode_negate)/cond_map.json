{
  "regex-automata/src/util/look.rs:1083:26:1083:45": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "at < haystack.len()",
          "lhs": "at",
          "rhs": "haystack.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:1088:12:1088:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "word_before == word_after",
          "lhs": "word_before",
          "rhs": "word_after",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:1086:32:1086:64": [
    {
      "Try": "is_word_char::fwd(haystack, at)?"
    }
  ],
  "regex-automata/src/util/look.rs:1081:32:1081:64": [
    {
      "Try": "is_word_char::rev(haystack, at)?"
    }
  ],
  "regex-automata/src/util/look.rs:1078:27:1078:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "at > 0",
          "lhs": "at",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:1084:22:1084:51": [
    {
      "Match": {
        "match_source": "regex-automata/src/util/look.rs:1084:22:1084:51",
        "match_str": "utf8::decode(&haystack[at..])",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/util/look.rs:1085:17:1085:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1085:40:1085:56"
          },
          "regex-automata/src/util/look.rs:1086:17:1086:28": {
            "pat": {
              "pat_str": "Some(Ok(_))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1086:32:1086:64"
          },
          "regex-automata/src/util/look.rs:1085:24:1085:36": {
            "pat": {
              "pat_str": "Some(Err(_))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1085:40:1085:56"
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "regex-automata/src/util/look.rs:1084:22:1084:51",
        "match_str": "utf8::decode(&haystack[at..])",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/util/look.rs:1085:17:1085:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1085:40:1085:56"
          },
          "regex-automata/src/util/look.rs:1085:24:1085:36": {
            "pat": {
              "pat_str": "Some(Err(_))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1085:40:1085:56"
          },
          "regex-automata/src/util/look.rs:1086:17:1086:28": {
            "pat": {
              "pat_str": "Some(Ok(_))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1086:32:1086:64"
          }
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:1079:22:1079:56": [
    {
      "Match": {
        "match_source": "regex-automata/src/util/look.rs:1079:22:1079:56",
        "match_str": "utf8::decode_last(&haystack[..at])",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/util/look.rs:1080:24:1080:36": {
            "pat": {
              "pat_str": "Some(Err(_))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1080:40:1080:56"
          },
          "regex-automata/src/util/look.rs:1081:17:1081:28": {
            "pat": {
              "pat_str": "Some(Ok(_))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1081:32:1081:64"
          },
          "regex-automata/src/util/look.rs:1080:17:1080:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1080:40:1080:56"
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "regex-automata/src/util/look.rs:1079:22:1079:56",
        "match_str": "utf8::decode_last(&haystack[..at])",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/util/look.rs:1080:17:1080:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1080:40:1080:56"
          },
          "regex-automata/src/util/look.rs:1081:17:1081:28": {
            "pat": {
              "pat_str": "Some(Ok(_))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1081:32:1081:64"
          },
          "regex-automata/src/util/look.rs:1080:24:1080:36": {
            "pat": {
              "pat_str": "Some(Err(_))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1080:40:1080:56"
          }
        }
      }
    }
  ]
}