bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/util/determinize/state.rs:721:13-721:18)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:721:21-721:33)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/util/determinize/state.rs:721:21-721:24)
  3: _6 = &_3
    SourceInfo(regex-automata/src/util/determinize/state.rs:721:21-721:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:721:21-721:33)
      kind: _5 = util::primitives::StateID::as_i32(move _6) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/determinize/state.rs:721:32-721:33)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/util/determinize/state.rs:721:36-721:49)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/util/determinize/state.rs:721:36-721:40)
  3: _8 = &(*_2)
    SourceInfo(regex-automata/src/util/determinize/state.rs:721:36-721:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:721:36-721:49)
      kind: _7 = util::primitives::StateID::as_i32(move _8) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/determinize/state.rs:721:48-721:49)
  1: _9 = SubWithOverflow(_5, _7)
    SourceInfo(regex-automata/src/util/determinize/state.rs:721:21-721:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:721:21-721:49)
      kind: assert(!move (_9.1: bool), "attempt to compute `{} - {}`, which would overflow", move _5, move _7) -> [success: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: _4 = move (_9.0: i32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:721:21-721:49)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/determinize/state.rs:721:48-721:49)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:721:48-721:49)
  3: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/util/determinize/state.rs:721:13-721:18)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/util/determinize/state.rs:722:9-722:36)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/util/determinize/state.rs:722:22-722:28)
  6: _11 = &mut (*((*_1).0: &mut std::vec::Vec<u8>))
    SourceInfo(regex-automata/src/util/determinize/state.rs:722:22-722:28)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/util/determinize/state.rs:722:30-722:35)
  8: _12 = _4
    SourceInfo(regex-automata/src/util/determinize/state.rs:722:30-722:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:722:9-722:36)
      kind: _10 = util::determinize::state::write_vari32(move _11, move _12) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/determinize/state.rs:722:35-722:36)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/util/determinize/state.rs:722:35-722:36)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/util/determinize/state.rs:722:36-722:37)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/util/determinize/state.rs:723:17-723:20)
  4: _13 = _3
    SourceInfo(regex-automata/src/util/determinize/state.rs:723:17-723:20)
  5: (*_2) = move _13
    SourceInfo(regex-automata/src/util/determinize/state.rs:723:9-723:20)
  6: StorageDead(_13)
    SourceInfo(regex-automata/src/util/determinize/state.rs:723:19-723:20)
  7: _0 = const ()
    SourceInfo(regex-automata/src/util/determinize/state.rs:720:70-724:6)
  8: StorageDead(_4)
    SourceInfo(regex-automata/src/util/determinize/state.rs:724:5-724:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:724:6-724:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:720:5-724:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

