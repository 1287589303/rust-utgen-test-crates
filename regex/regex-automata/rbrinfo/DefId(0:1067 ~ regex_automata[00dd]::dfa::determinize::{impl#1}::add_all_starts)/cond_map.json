{
  "regex-automata/src/dfa/determinize.rs:331:12:331:50": [
    {
      "Bool": {
        "Other": "self.dfa.start_kind().has_unanchored()"
      }
    }
  ],
  "regex-automata/src/dfa/determinize.rs:350:17:350:77": [
    {
      "Try": "self.add_start_group(Anchored::Pattern(pid), dfa_state_ids)?"
    }
  ],
  "regex-automata/src/dfa/determinize.rs:327:17:327:41": [
    {
      "Bool": {
        "Other": "dfa_state_ids.is_empty()"
      }
    }
  ],
  "regex-automata/src/dfa/determinize.rs:335:13:335:64": [
    {
      "Try": "self.add_start_group(Anchored::Yes, dfa_state_ids)?"
    }
  ],
  "regex-automata/src/dfa/determinize.rs:334:12:334:48": [
    {
      "Bool": {
        "Other": "self.dfa.start_kind().has_anchored()"
      }
    }
  ],
  "regex-automata/src/dfa/determinize.rs:348:12:348:46": [
    {
      "Bool": {
        "Other": "self.dfa.starts_for_each_pattern()"
      }
    }
  ],
  "regex-automata/src/dfa/determinize.rs:349:24:349:43": [
    {
      "For": {
        "iter_var": "pid",
        "iter_range": "self.nfa.patterns()"
      }
    }
  ],
  "regex-automata/src/dfa/determinize.rs:332:13:332:63": [
    {
      "Try": "self.add_start_group(Anchored::No, dfa_state_ids)?"
    }
  ]
}