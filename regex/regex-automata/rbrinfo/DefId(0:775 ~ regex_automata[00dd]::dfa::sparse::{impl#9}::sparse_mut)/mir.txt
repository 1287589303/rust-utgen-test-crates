bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1750:9-1750:29)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1750:9-1750:29)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1750:9-1750:20)
  3: _4 = &mut ((*_1).0: T)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1750:9-1750:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1750:9-1750:29)
      kind: _3 = <T as core::convert::AsMut<[u8]>>::as_mut(move _4) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _2 = &mut (*_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1750:9-1750:29)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1750:28-1750:29)
  2: _0 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1750:9-1750:29)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1751:5-1751:6)
  4: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1751:5-1751:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1751:6-1751:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1749:5-1751:6)
      kind: resume
  }
  preds [bb0]
  succs []

