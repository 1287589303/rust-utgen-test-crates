bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:662:9-662:18)
  1: _3 = _2
    SourceInfo(regex-automata/src/meta/strategy.rs:662:9-662:18)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:662:21-662:62)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:662:21-662:42)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:662:21-662:42)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:662:21-662:29)
  6: _7 = &((*_1).2: nfa::thompson::nfa::NFA)
    SourceInfo(regex-automata/src/meta/strategy.rs:662:21-662:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:662:21-662:42)
      kind: _6 = nfa::thompson::nfa::NFA::group_info(move _7) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _5 = &(*_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:662:21-662:42)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:662:41-662:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:662:21-662:62)
      kind: _4 = util::captures::GroupInfo::implicit_slot_len(move _5) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:662:61-662:62)
  1: _0 = Gt(move _3, move _4)
    SourceInfo(regex-automata/src/meta/strategy.rs:662:9-662:62)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:662:61-662:62)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:662:61-662:62)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:663:5-663:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:663:6-663:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:661:5-663:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

