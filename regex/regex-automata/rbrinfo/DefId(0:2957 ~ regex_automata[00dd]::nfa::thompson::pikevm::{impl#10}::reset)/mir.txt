bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2088:13-2088:16)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2088:19-2088:21)
  2: _4 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2088:19-2088:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2088:19-2088:31)
      kind: _3 = nfa::thompson::pikevm::PikeVM::get_nfa(move _4) -> [return: bb1, unwind: bb14]
  }
  preds []
  succs [bb1, bb14]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2088:30-2088:31)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2088:13-2088:16)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2089:32-2089:59)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2089:32-2089:48)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2089:32-2089:48)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2089:32-2089:35)
  6: _8 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2089:32-2089:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2089:32-2089:48)
      kind: _7 = nfa::thompson::nfa::NFA::group_info(move _8) -> [return: bb2, unwind: bb14]
  }
  preds [bb0]
  succs [bb2, bb14]

bb2
  0: _6 = &(*_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2089:32-2089:48)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2089:47-2089:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2089:32-2089:59)
      kind: _5 = util::captures::GroupInfo::slot_len(move _6) -> [return: bb3, unwind: bb14]
  }
  preds [bb1]
  succs [bb3, bb14]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2089:58-2089:59)
  1: ((*_1).1: usize) = move _5
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2089:9-2089:59)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2089:58-2089:59)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2089:59-2089:60)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2094:35-2097:10)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2095:13-2095:33)
  6: _10 = ((*_1).1: usize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2095:13-2095:33)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2096:13-2096:54)
  8: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2096:13-2096:45)
  9: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2096:13-2096:30)
  10: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2096:13-2096:16)
  11: _14 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2096:13-2096:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2096:13-2096:30)
      kind: _13 = nfa::thompson::nfa::NFA::pattern_len(move _14) -> [return: bb4, unwind: bb14]
  }
  preds [bb2]
  succs [bb4, bb14]

bb4
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2096:29-2096:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2096:13-2096:45)
      kind: _12 = core::num::<impl usize>::checked_mul(move _13, const 2_usize) -> [return: bb5, unwind: bb14]
  }
  preds [bb3]
  succs [bb5, bb14]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2096:44-2096:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2096:13-2096:54)
      kind: _11 = core::option::Option::<usize>::unwrap(move _12) -> [return: bb6, unwind: bb14]
  }
  preds [bb4]
  succs [bb6, bb14]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2096:53-2096:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2094:35-2097:10)
      kind: _9 = core::cmp::max::<usize>(move _10, move _11) -> [return: bb7, unwind: bb14]
  }
  preds [bb5]
  succs [bb7, bb14]

bb7
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2097:9-2097:10)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2097:9-2097:10)
  2: ((*_1).2: usize) = move _9
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2094:9-2097:10)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2097:9-2097:10)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:13-2098:16)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:19-2103:66)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:19-2101:47)
  7: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:19-2100:19)
  8: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:19-2099:22)
  9: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:19-2099:22)
  10: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:19-2098:22)
  11: _21 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:19-2098:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:19-2099:22)
      kind: _20 = nfa::thompson::nfa::NFA::states(move _21) -> [return: bb8, unwind: bb14]
  }
  preds [bb6]
  succs [bb8, bb14]

bb8
  0: _19 = &(*_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:19-2099:22)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2099:21-2099:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:19-2100:19)
      kind: _18 = core::slice::<impl [nfa::thompson::nfa::State]>::len(move _19) -> [return: bb9, unwind: bb14]
  }
  preds [bb7]
  succs [bb9, bb14]

bb9
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2100:18-2100:19)
  1: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2101:26-2101:46)
  2: _22 = ((*_1).1: usize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2101:26-2101:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:19-2101:47)
      kind: _17 = core::num::<impl usize>::checked_mul(move _18, move _22) -> [return: bb10, unwind: bb14]
  }
  preds [bb8]
  succs [bb10, bb14]

bb10
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2101:46-2101:47)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2101:46-2101:47)
  2: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2103:23-2103:65)
  3: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2103:23-2103:65)
  4: _24 = &((*_1).2: usize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2103:23-2103:65)
  5: _23 = {closure@regex-automata/src/nfa/thompson/pikevm.rs:2103:23: 2103:26} { self: move _24 }
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2103:23-2103:65)
  6: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2103:25-2103:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:19-2103:66)
      kind: _16 = core::option::Option::<usize>::and_then::<usize, {closure@regex-automata/src/nfa/thompson/pikevm.rs:2103:23: 2103:26}>(move _17, move _23) -> [return: bb11, unwind: bb14]
  }
  preds [bb9]
  succs [bb11, bb14]

bb11
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2103:65-2103:66)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2103:65-2103:66)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2109:21-2109:57)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2109:21-2109:57)
  4: _26 = const "slot table length doesn't overflow"
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2109:21-2109:57)
  5: _25 = &(*_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2109:21-2109:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:19-2109:58)
      kind: _15 = core::option::Option::<usize>::expect(move _16, move _25) -> [return: bb12, unwind: bb14]
  }
  preds [bb10]
  succs [bb12, bb14]

bb12
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2109:57-2109:58)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2109:57-2109:58)
  2: FakeRead(ForLet(None), _15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2098:13-2098:16)
  3: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2109:58-2109:59)
  4: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2109:58-2109:59)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2119:9-2119:37)
  6: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2119:9-2119:19)
  7: _28 = &mut ((*_1).0: std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>>)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2119:9-2119:19)
  8: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2119:27-2119:30)
  9: _29 = _15
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2119:27-2119:30)
  10: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2119:32-2119:36)
  11: _30 = core::option::Option::<util::primitives::NonMaxUsize>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2119:32-2119:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2119:9-2119:37)
      kind: _27 = std::vec::Vec::<core::option::Option<util::primitives::NonMaxUsize>>::resize(move _28, move _29, move _30) -> [return: bb13, unwind: bb14]
  }
  preds [bb11]
  succs [bb13, bb14]

bb13
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2119:36-2119:37)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2119:36-2119:37)
  2: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2119:36-2119:37)
  3: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2119:37-2119:38)
  4: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2087:38-2120:6)
  5: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2120:5-2120:6)
  6: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2120:5-2120:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2120:6-2120:6)
      kind: return
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:2087:5-2120:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10, bb11, bb12]
  succs []

