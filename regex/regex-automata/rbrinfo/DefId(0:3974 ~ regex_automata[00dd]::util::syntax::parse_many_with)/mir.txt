bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/syntax.rs:122:9-122:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:122:23-122:43)
      kind: _3 = regex_syntax::ParserBuilder::new() -> [return: bb1, unwind: bb40]
  }
  preds []
  succs [bb1, bb40]

bb1
  0: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/syntax.rs:122:9-122:20)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/syntax.rs:123:5-123:31)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/syntax.rs:123:5-123:11)
  3: _5 = &(*_2)
    SourceInfo(regex-automata/src/util/syntax.rs:123:5-123:11)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/util/syntax.rs:123:18-123:30)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/util/syntax.rs:123:18-123:30)
  6: _7 = &mut _3
    SourceInfo(regex-automata/src/util/syntax.rs:123:18-123:30)
  7: _6 = &mut (*_7)
    SourceInfo(regex-automata/src/util/syntax.rs:123:18-123:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:123:5-123:31)
      kind: _4 = util::syntax::Config::apply(move _5, move _6) -> [return: bb2, unwind: bb40]
  }
  preds [bb0]
  succs [bb2, bb40]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/syntax.rs:123:30-123:31)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/syntax.rs:123:30-123:31)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/util/syntax.rs:123:31-123:32)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/util/syntax.rs:123:31-123:32)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/util/syntax.rs:124:9-124:17)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _8 = std::vec::Vec::<regex_syntax::hir::Hir>::new() -> [return: bb3, unwind: bb40]
  }
  preds [bb1]
  succs [bb3, bb40]

bb3
  0: FakeRead(ForLet(None), _8)
    SourceInfo(regex-automata/src/util/syntax.rs:124:9-124:17)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/util/syntax.rs:125:5-127:6)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:22)
  5: _12 = &(*_1)
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
      kind: _11 = core::slice::<impl [P]>::iter(move _12) -> [return: bb4, unwind: bb39]
  }
  preds [bb2]
  succs [bb4, bb39]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/syntax.rs:125:28-125:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
      kind: _10 = <core::slice::Iter<'_, P> as core::iter::IntoIterator>::into_iter(move _11) -> [return: bb5, unwind: bb39]
  }
  preds [bb3]
  succs [bb5, bb39]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/util/syntax.rs:125:28-125:29)
  1: PlaceMention(_10)
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
  3: _13 = move _10
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:125:5-127:6)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:125:5-127:6)
      kind: falseUnwind -> [real: bb7, unwind: bb39]
  }
  preds [bb5, bb25]
  succs [bb7, bb39]

bb7
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
  1: StorageLive(_16)
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
  4: _18 = &mut _13
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
  5: _17 = &mut (*_18)
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
      kind: _16 = <core::slice::Iter<'_, P> as core::iter::Iterator>::next(move _17) -> [return: bb8, unwind: bb39]
  }
  preds [bb6]
  succs [bb8, bb39]

bb8
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/util/syntax.rs:125:28-125:29)
  1: PlaceMention(_16)
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
  2: _19 = discriminant(_16)
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
      kind: switchInt(move _19) -> [0: bb10, 1: bb11, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10, bb11]

bb9
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:125:14-125:29)
      kind: unreachable
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:125:5-127:6)
      kind: falseEdge -> [real: bb12, imaginary: bb11]
  }
  preds [bb8]
  succs [bb11, bb12]

bb11
  0: StorageLive(_21)
    SourceInfo(regex-automata/src/util/syntax.rs:125:9-125:10)
  1: _21 = ((_16 as Some).0: &P)
    SourceInfo(regex-automata/src/util/syntax.rs:125:9-125:10)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/util/syntax.rs:126:9-126:54)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/util/syntax.rs:126:9-126:13)
  4: _23 = &mut _8
    SourceInfo(regex-automata/src/util/syntax.rs:126:9-126:13)
  5: StorageLive(_24)
    SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:53)
  6: StorageLive(_25)
    SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:53)
  7: StorageLive(_26)
    SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:52)
  8: StorageLive(_27)
    SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:34)
  9: StorageLive(_28)
    SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:34)
  10: StorageLive(_29)
    SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:26)
  11: _29 = &_3
    SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:34)
      kind: _28 = regex_syntax::ParserBuilder::build(move _29) -> [return: bb13, unwind: bb39]
  }
  preds [bb8, bb10]
  succs [bb13, bb39]

bb12
  0: _9 = const ()
    SourceInfo(regex-automata/src/util/syntax.rs:125:5-127:6)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  4: StorageDead(_13)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  5: StorageDead(_10)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  6: StorageDead(_9)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  7: StorageLive(_38)
    SourceInfo(regex-automata/src/util/syntax.rs:128:8-128:12)
  8: _38 = move _8
    SourceInfo(regex-automata/src/util/syntax.rs:128:8-128:12)
  9: _0 = core::result::Result::<std::vec::Vec<regex_syntax::hir::Hir>, regex_syntax::Error>::Ok(move _38)
    SourceInfo(regex-automata/src/util/syntax.rs:128:5-128:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:128:12-128:13)
      kind: drop(_38) -> [return: bb26, unwind: bb39]
  }
  preds [bb10]
  succs [bb26, bb39]

bb13
  0: _27 = &mut _28
    SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:34)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/util/syntax.rs:126:33-126:34)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/util/syntax.rs:126:41-126:51)
  3: StorageLive(_31)
    SourceInfo(regex-automata/src/util/syntax.rs:126:41-126:51)
  4: StorageLive(_32)
    SourceInfo(regex-automata/src/util/syntax.rs:126:41-126:42)
  5: _32 = &(*_21)
    SourceInfo(regex-automata/src/util/syntax.rs:126:41-126:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:41-126:51)
      kind: _31 = <P as core::convert::AsRef<str>>::as_ref(move _32) -> [return: bb14, unwind: bb38]
  }
  preds [bb11]
  succs [bb14, bb38]

bb14
  0: _30 = &(*_31)
    SourceInfo(regex-automata/src/util/syntax.rs:126:41-126:51)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/util/syntax.rs:126:50-126:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:52)
      kind: _26 = regex_syntax::Parser::parse(move _27, move _30) -> [return: bb15, unwind: bb38]
  }
  preds [bb13]
  succs [bb15, bb38]

bb15
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/util/syntax.rs:126:51-126:52)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/util/syntax.rs:126:51-126:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:53)
      kind: _25 = <core::result::Result<regex_syntax::hir::Hir, regex_syntax::Error> as core::ops::Try>::branch(move _26) -> [return: bb16, unwind: bb37]
  }
  preds [bb14]
  succs [bb16, bb37]

bb16
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/util/syntax.rs:126:52-126:53)
  1: PlaceMention(_25)
    SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:53)
  2: _33 = discriminant(_25)
    SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:53)
      kind: switchInt(move _33) -> [0: bb19, 1: bb18, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18, bb19]

bb17
  0: FakeRead(ForMatchedPlace(None), _25)
    SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:53)
      kind: unreachable
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:52-126:53)
      kind: falseEdge -> [real: bb20, imaginary: bb19]
  }
  preds [bb16]
  succs [bb19, bb20]

bb19
  0: StorageLive(_37)
    SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:53)
  1: _37 = move ((_25 as Continue).0: regex_syntax::hir::Hir)
    SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:53)
  2: _24 = move _37
    SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:52-126:53)
      kind: drop(_37) -> [return: bb22, unwind: bb36]
  }
  preds [bb16, bb18]
  succs [bb22, bb36]

bb20
  0: StorageLive(_34)
    SourceInfo(regex-automata/src/util/syntax.rs:126:52-126:53)
  1: _34 = move ((_25 as Break).0: core::result::Result<core::convert::Infallible, regex_syntax::Error>)
    SourceInfo(regex-automata/src/util/syntax.rs:126:52-126:53)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/util/syntax.rs:126:52-126:53)
  3: _36 = move _34
    SourceInfo(regex-automata/src/util/syntax.rs:126:52-126:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:19-126:53)
      kind: _0 = <core::result::Result<std::vec::Vec<regex_syntax::hir::Hir>, regex_syntax::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, regex_syntax::Error>>>::from_residual(move _36) -> [return: bb21, unwind: bb34]
  }
  preds [bb18]
  succs [bb21, bb34]

bb21
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/util/syntax.rs:126:52-126:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:52-126:53)
      kind: drop(_34) -> [return: bb28, unwind: bb36]
  }
  preds [bb20]
  succs [bb28, bb36]

bb22
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/util/syntax.rs:126:52-126:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:9-126:54)
      kind: _22 = std::vec::Vec::<regex_syntax::hir::Hir>::push(move _23, move _24) -> [return: bb23, unwind: bb33]
  }
  preds [bb19]
  succs [bb23, bb33]

bb23
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/util/syntax.rs:126:53-126:54)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/util/syntax.rs:126:53-126:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:54-126:55)
      kind: drop(_25) -> [return: bb24, unwind: bb38]
  }
  preds [bb22]
  succs [bb24, bb38]

bb24
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/util/syntax.rs:126:54-126:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:54-126:55)
      kind: drop(_28) -> [return: bb25, unwind: bb39]
  }
  preds [bb23]
  succs [bb25, bb39]

bb25
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/util/syntax.rs:126:54-126:55)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/util/syntax.rs:126:54-126:55)
  2: StorageDead(_22)
    SourceInfo(regex-automata/src/util/syntax.rs:126:54-126:55)
  3: _15 = const ()
    SourceInfo(regex-automata/src/util/syntax.rs:125:30-127:6)
  4: StorageDead(_21)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  5: StorageDead(_18)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  6: StorageDead(_16)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  7: StorageDead(_15)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  8: _14 = const ()
    SourceInfo(regex-automata/src/util/syntax.rs:125:5-127:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:125:5-127:6)
      kind: goto -> bb6
  }
  preds [bb24]
  succs [bb6]

bb26
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/util/syntax.rs:128:12-128:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:129:1-129:2)
      kind: drop(_8) -> [return: bb27, unwind: bb40]
  }
  preds [bb12]
  succs [bb27, bb40]

bb27
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/syntax.rs:129:1-129:2)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/util/syntax.rs:129:1-129:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:129:2-129:2)
      kind: goto -> bb32
  }
  preds [bb26]
  succs [bb32]

bb28
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/util/syntax.rs:126:52-126:53)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/util/syntax.rs:126:53-126:54)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/util/syntax.rs:126:53-126:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:54-126:55)
      kind: drop(_25) -> [return: bb29, unwind: bb38]
  }
  preds [bb21]
  succs [bb29, bb38]

bb29
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/util/syntax.rs:126:54-126:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:54-126:55)
      kind: drop(_28) -> [return: bb30, unwind: bb39]
  }
  preds [bb28]
  succs [bb30, bb39]

bb30
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/util/syntax.rs:126:54-126:55)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/util/syntax.rs:126:54-126:55)
  2: StorageDead(_22)
    SourceInfo(regex-automata/src/util/syntax.rs:126:54-126:55)
  3: StorageDead(_21)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  4: StorageDead(_18)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  5: StorageDead(_16)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  6: StorageDead(_15)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  7: StorageDead(_13)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  8: StorageDead(_10)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  9: StorageDead(_9)
    SourceInfo(regex-automata/src/util/syntax.rs:127:5-127:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:129:1-129:2)
      kind: drop(_8) -> [return: bb31, unwind: bb40]
  }
  preds [bb29]
  succs [bb31, bb40]

bb31
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/syntax.rs:129:1-129:2)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/util/syntax.rs:129:1-129:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:129:2-129:2)
      kind: goto -> bb32
  }
  preds [bb30]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:129:2-129:2)
      kind: return
  }
  preds [bb27, bb31]
  succs []

bb33
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:53-126:54)
      kind: drop(_24) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb22]
  succs [bb36]

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:52-126:53)
      kind: drop(_36) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:52-126:53)
      kind: drop(_34) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb34]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:54-126:55)
      kind: drop(_25) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb19, bb21, bb33, bb35]
  succs [bb38]

bb37
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:52-126:53)
      kind: drop(_26) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:126:54-126:55)
      kind: drop(_28) -> [return: bb39, unwind terminate(cleanup)]
  }
  preds [bb13, bb14, bb23, bb28, bb36, bb37]
  succs [bb39]

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:129:1-129:2)
      kind: drop(_8) -> [return: bb40, unwind terminate(cleanup)]
  }
  preds [bb3, bb4, bb6, bb7, bb11, bb12, bb24, bb29, bb38]
  succs [bb40]

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:118:1-129:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb26, bb30, bb39]
  succs []

