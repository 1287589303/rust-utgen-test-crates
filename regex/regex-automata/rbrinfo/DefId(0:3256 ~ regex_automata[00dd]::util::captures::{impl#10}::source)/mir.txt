bb0
  0: PlaceMention(((*_1).0: util::captures::GroupInfoErrorKind))
    SourceInfo(regex-automata/src/util/captures.rs:2420:15-2420:24)
  1: _2 = discriminant(((*_1).0: util::captures::GroupInfoErrorKind))
    SourceInfo(regex-automata/src/util/captures.rs:2420:15-2420:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2420:9-2420:24)
      kind: switchInt(move _2) -> [0: bb2, 1: bb2, 2: bb2, 3: bb2, 4: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb2, bb2, bb2, bb2]

bb1
  0: FakeRead(ForMatchedPlace(None), ((*_1).0: util::captures::GroupInfoErrorKind))
    SourceInfo(regex-automata/src/util/captures.rs:2420:15-2420:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2420:15-2420:24)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  0: _0 = core::option::Option::<&dyn core::error::Error>::None
    SourceInfo(regex-automata/src/util/captures.rs:2425:55-2425:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2427:6-2427:6)
      kind: return
  }
  preds [bb0, bb0, bb0, bb0, bb0]
  succs []

