bb0
  0: PlaceMention(((*_1).0: dfa::dense::BuildErrorKind))
    SourceInfo(regex-automata/src/dfa/dense.rs:5018:15-5018:24)
  1: _2 = discriminant(((*_1).0: dfa::dense::BuildErrorKind))
    SourceInfo(regex-automata/src/dfa/dense.rs:5018:15-5018:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:5018:9-5018:24)
      kind: switchInt(move _2) -> [0: bb2, 1: bb2, 2: bb3, 3: bb3, 4: bb3, 5: bb3, 6: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb2, bb3, bb3, bb3, bb3, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), ((*_1).0: dfa::dense::BuildErrorKind))
    SourceInfo(regex-automata/src/dfa/dense.rs:5018:15-5018:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:5018:15-5018:24)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:5019:13-5019:36)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0, bb0]
  succs [bb3, bb4]

bb3
  0: _0 = const true
    SourceInfo(regex-automata/src/dfa/dense.rs:5024:54-5024:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:5024:54-5024:58)
      kind: goto -> bb5
  }
  preds [bb0, bb0, bb0, bb0, bb0, bb2]
  succs [bb5]

bb4
  0: _0 = const false
    SourceInfo(regex-automata/src/dfa/dense.rs:5019:40-5019:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:5019:40-5019:45)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:5026:6-5026:6)
      kind: return
  }
  preds [bb3, bb4]
  succs []

