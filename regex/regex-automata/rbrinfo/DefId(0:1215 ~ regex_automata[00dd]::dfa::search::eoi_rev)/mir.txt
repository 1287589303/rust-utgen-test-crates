bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/search.rs:611:9-611:11)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/search.rs:611:14-611:19)
  2: _6 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:611:14-611:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:611:14-611:30)
      kind: _5 = util::search::Input::<'_>::get_span(move _6) -> [return: bb1, unwind: bb29]
  }
  preds []
  succs [bb1, bb29]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/search.rs:611:29-611:30)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/dfa/search.rs:611:9-611:11)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/search.rs:612:5-627:6)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/search.rs:612:8-612:20)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/search.rs:612:8-612:16)
  5: _9 = (_5.0: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:612:8-612:16)
  6: _8 = Gt(move _9, const 0_usize)
    SourceInfo(regex-automata/src/dfa/search.rs:612:8-612:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:612:8-612:20)
      kind: switchInt(move _8) -> [0: bb19, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb19]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/search.rs:612:19-612:20)
  1: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/search.rs:613:13-613:17)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/search.rs:613:20-613:36)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/search.rs:613:20-613:25)
  4: _12 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:613:20-613:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:613:20-613:36)
      kind: _11 = util::search::Input::<'_>::haystack(move _12) -> [return: bb3, unwind: bb29]
  }
  preds [bb1]
  succs [bb3, bb29]

bb3
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/search.rs:613:35-613:36)
  1: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/search.rs:613:37-613:49)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/search.rs:613:37-613:45)
  3: _14 = (_5.0: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:613:37-613:45)
  4: _15 = SubWithOverflow(_14, const 1_usize)
    SourceInfo(regex-automata/src/dfa/search.rs:613:37-613:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:613:37-613:49)
      kind: assert(!move (_15.1: bool), "attempt to compute `{} - {}`, which would overflow", move _14, const 1_usize) -> [success: bb4, unwind: bb29]
  }
  preds [bb2]
  succs [bb4, bb29]

bb4
  0: _13 = move (_15.0: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:613:37-613:49)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/search.rs:613:48-613:49)
  2: _16 = Len((*_11))
    SourceInfo(regex-automata/src/dfa/search.rs:613:20-613:50)
  3: _17 = Lt(_13, _16)
    SourceInfo(regex-automata/src/dfa/search.rs:613:20-613:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:613:20-613:50)
      kind: assert(move _17, "index out of bounds: the length is {} but the index is {}", move _16, _13) -> [success: bb5, unwind: bb29]
  }
  preds [bb3]
  succs [bb5, bb29]

bb5
  0: _10 = (*_11)[_13]
    SourceInfo(regex-automata/src/dfa/search.rs:613:20-613:50)
  1: FakeRead(ForLet(None), _10)
    SourceInfo(regex-automata/src/dfa/search.rs:613:13-613:17)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/search.rs:613:50-613:51)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/search.rs:613:50-613:51)
  4: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/search.rs:614:16-614:42)
  5: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/search.rs:614:16-614:19)
  6: _19 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:614:16-614:19)
  7: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/search.rs:614:31-614:35)
  8: _20 = (*_3)
    SourceInfo(regex-automata/src/dfa/search.rs:614:31-614:35)
  9: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/search.rs:614:37-614:41)
  10: _21 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:614:37-614:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:614:16-614:42)
      kind: _18 = <A as dfa::automaton::Automaton>::next_state(move _19, move _20, move _21) -> [return: bb6, unwind: bb29]
  }
  preds [bb4]
  succs [bb6, bb29]

bb6
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/search.rs:614:41-614:42)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/search.rs:614:41-614:42)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/search.rs:614:41-614:42)
  3: (*_3) = move _18
    SourceInfo(regex-automata/src/dfa/search.rs:614:9-614:42)
  4: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/search.rs:614:41-614:42)
  5: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/search.rs:615:12-615:36)
  6: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/search.rs:615:12-615:15)
  7: _23 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:615:12-615:15)
  8: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/search.rs:615:31-615:35)
  9: _24 = (*_3)
    SourceInfo(regex-automata/src/dfa/search.rs:615:31-615:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:615:12-615:36)
      kind: _22 = <A as dfa::automaton::Automaton>::is_match_state(move _23, move _24) -> [return: bb7, unwind: bb29]
  }
  preds [bb5]
  succs [bb7, bb29]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:615:12-615:36)
      kind: switchInt(move _22) -> [0: bb11, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb11]

bb8
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/search.rs:615:35-615:36)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/search.rs:615:35-615:36)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/search.rs:616:17-616:24)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/search.rs:616:27-616:30)
  4: _26 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:616:27-616:30)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/search.rs:616:45-616:49)
  6: _27 = (*_3)
    SourceInfo(regex-automata/src/dfa/search.rs:616:45-616:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:616:27-616:53)
      kind: _25 = <A as dfa::automaton::Automaton>::match_pattern(move _26, move _27, const 0_usize) -> [return: bb9, unwind: bb29]
  }
  preds [bb7]
  succs [bb9, bb29]

bb9
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/search.rs:616:52-616:53)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/search.rs:616:52-616:53)
  2: FakeRead(ForLet(None), _25)
    SourceInfo(regex-automata/src/dfa/search.rs:616:17-616:24)
  3: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/search.rs:617:20-617:59)
  4: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/search.rs:617:25-617:58)
  5: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/search.rs:617:40-617:47)
  6: _30 = _25
    SourceInfo(regex-automata/src/dfa/search.rs:617:40-617:47)
  7: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/search.rs:617:49-617:57)
  8: _31 = (_5.0: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:617:49-617:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:617:25-617:58)
      kind: _29 = util::search::HalfMatch::new(move _30, move _31) -> [return: bb10, unwind: bb29]
  }
  preds [bb8]
  succs [bb10, bb29]

bb10
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/search.rs:617:57-617:58)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/search.rs:617:57-617:58)
  2: _28 = core::option::Option::<util::search::HalfMatch>::Some(move _29)
    SourceInfo(regex-automata/src/dfa/search.rs:617:20-617:59)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/search.rs:617:58-617:59)
  4: (*_4) = move _28
    SourceInfo(regex-automata/src/dfa/search.rs:617:13-617:59)
  5: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/search.rs:617:58-617:59)
  6: _7 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:615:37-618:10)
  7: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/search.rs:618:9-618:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:615:9-620:10)
      kind: goto -> bb18
  }
  preds [bb9]
  succs [bb18]

bb11
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/search.rs:615:35-615:36)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/search.rs:615:35-615:36)
  2: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/search.rs:618:19-618:42)
  3: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/search.rs:618:19-618:22)
  4: _33 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:618:19-618:22)
  5: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/search.rs:618:37-618:41)
  6: _34 = (*_3)
    SourceInfo(regex-automata/src/dfa/search.rs:618:37-618:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:618:19-618:42)
      kind: _32 = <A as dfa::automaton::Automaton>::is_quit_state(move _33, move _34) -> [return: bb12, unwind: bb29]
  }
  preds [bb7]
  succs [bb12, bb29]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:618:19-618:42)
      kind: switchInt(move _32) -> [0: bb17, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb17]

bb13
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/search.rs:618:41-618:42)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/search.rs:618:41-618:42)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/search.rs:619:24-619:60)
  3: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/search.rs:619:41-619:45)
  4: _37 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:619:41-619:45)
  5: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/search.rs:619:47-619:59)
  6: StorageLive(_39)
    SourceInfo(regex-automata/src/dfa/search.rs:619:47-619:55)
  7: _39 = (_5.0: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:619:47-619:55)
  8: _40 = SubWithOverflow(_39, const 1_usize)
    SourceInfo(regex-automata/src/dfa/search.rs:619:47-619:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:619:47-619:59)
      kind: assert(!move (_40.1: bool), "attempt to compute `{} - {}`, which would overflow", move _39, const 1_usize) -> [success: bb14, unwind: bb29]
  }
  preds [bb12]
  succs [bb14, bb29]

bb14
  0: _38 = move (_40.0: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:619:47-619:59)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/search.rs:619:58-619:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:619:24-619:60)
      kind: _36 = util::search::MatchError::quit(move _37, move _38) -> [return: bb15, unwind: bb29]
  }
  preds [bb13]
  succs [bb15, bb29]

bb15
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/search.rs:619:59-619:60)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/search.rs:619:59-619:60)
  2: _0 = core::result::Result::<(), util::search::MatchError>::Err(move _36)
    SourceInfo(regex-automata/src/dfa/search.rs:619:20-619:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:619:60-619:61)
      kind: drop(_36) -> [return: bb16, unwind: bb29]
  }
  preds [bb14]
  succs [bb16, bb29]

bb16
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/search.rs:619:60-619:61)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/search.rs:620:9-620:10)
  2: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/search.rs:620:9-620:10)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/search.rs:621:5-621:6)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/search.rs:627:5-627:6)
  5: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/search.rs:627:5-627:6)
  6: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/search.rs:629:1-629:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:629:2-629:2)
      kind: goto -> bb28
  }
  preds [bb15]
  succs [bb28]

bb17
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/search.rs:618:41-618:42)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/search.rs:618:41-618:42)
  2: _7 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:620:10-620:10)
  3: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/search.rs:620:9-620:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:615:9-620:10)
      kind: goto -> bb18
  }
  preds [bb12]
  succs [bb18]

bb18
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/search.rs:620:9-620:10)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/search.rs:621:5-621:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:612:5-627:6)
      kind: goto -> bb27
  }
  preds [bb10, bb17]
  succs [bb27]

bb19
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/search.rs:612:19-612:20)
  1: StorageLive(_41)
    SourceInfo(regex-automata/src/dfa/search.rs:622:16-622:40)
  2: StorageLive(_42)
    SourceInfo(regex-automata/src/dfa/search.rs:622:16-622:19)
  3: _42 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:622:16-622:19)
  4: StorageLive(_43)
    SourceInfo(regex-automata/src/dfa/search.rs:622:35-622:39)
  5: _43 = (*_3)
    SourceInfo(regex-automata/src/dfa/search.rs:622:35-622:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:622:16-622:40)
      kind: _41 = <A as dfa::automaton::Automaton>::next_eoi_state(move _42, move _43) -> [return: bb20, unwind: bb29]
  }
  preds [bb1]
  succs [bb20, bb29]

bb20
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/search.rs:622:39-622:40)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/search.rs:622:39-622:40)
  2: (*_3) = move _41
    SourceInfo(regex-automata/src/dfa/search.rs:622:9-622:40)
  3: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/search.rs:622:39-622:40)
  4: StorageLive(_44)
    SourceInfo(regex-automata/src/dfa/search.rs:623:12-623:36)
  5: StorageLive(_45)
    SourceInfo(regex-automata/src/dfa/search.rs:623:12-623:15)
  6: _45 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:623:12-623:15)
  7: StorageLive(_46)
    SourceInfo(regex-automata/src/dfa/search.rs:623:31-623:35)
  8: _46 = (*_3)
    SourceInfo(regex-automata/src/dfa/search.rs:623:31-623:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:623:12-623:36)
      kind: _44 = <A as dfa::automaton::Automaton>::is_match_state(move _45, move _46) -> [return: bb21, unwind: bb29]
  }
  preds [bb19]
  succs [bb21, bb29]

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:623:12-623:36)
      kind: switchInt(move _44) -> [0: bb25, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb25]

bb22
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/dfa/search.rs:623:35-623:36)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/dfa/search.rs:623:35-623:36)
  2: StorageLive(_47)
    SourceInfo(regex-automata/src/dfa/search.rs:624:17-624:24)
  3: StorageLive(_48)
    SourceInfo(regex-automata/src/dfa/search.rs:624:27-624:30)
  4: _48 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:624:27-624:30)
  5: StorageLive(_49)
    SourceInfo(regex-automata/src/dfa/search.rs:624:45-624:49)
  6: _49 = (*_3)
    SourceInfo(regex-automata/src/dfa/search.rs:624:45-624:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:624:27-624:53)
      kind: _47 = <A as dfa::automaton::Automaton>::match_pattern(move _48, move _49, const 0_usize) -> [return: bb23, unwind: bb29]
  }
  preds [bb21]
  succs [bb23, bb29]

bb23
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/dfa/search.rs:624:52-624:53)
  1: StorageDead(_48)
    SourceInfo(regex-automata/src/dfa/search.rs:624:52-624:53)
  2: FakeRead(ForLet(None), _47)
    SourceInfo(regex-automata/src/dfa/search.rs:624:17-624:24)
  3: StorageLive(_50)
    SourceInfo(regex-automata/src/dfa/search.rs:625:20-625:52)
  4: StorageLive(_51)
    SourceInfo(regex-automata/src/dfa/search.rs:625:25-625:51)
  5: StorageLive(_52)
    SourceInfo(regex-automata/src/dfa/search.rs:625:40-625:47)
  6: _52 = _47
    SourceInfo(regex-automata/src/dfa/search.rs:625:40-625:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:625:25-625:51)
      kind: _51 = util::search::HalfMatch::new(move _52, const 0_usize) -> [return: bb24, unwind: bb29]
  }
  preds [bb22]
  succs [bb24, bb29]

bb24
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/search.rs:625:50-625:51)
  1: _50 = core::option::Option::<util::search::HalfMatch>::Some(move _51)
    SourceInfo(regex-automata/src/dfa/search.rs:625:20-625:52)
  2: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/search.rs:625:51-625:52)
  3: (*_4) = move _50
    SourceInfo(regex-automata/src/dfa/search.rs:625:13-625:52)
  4: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/search.rs:625:51-625:52)
  5: _7 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:623:37-626:10)
  6: StorageDead(_47)
    SourceInfo(regex-automata/src/dfa/search.rs:626:9-626:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:623:9-626:10)
      kind: goto -> bb26
  }
  preds [bb23]
  succs [bb26]

bb25
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/dfa/search.rs:623:35-623:36)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/dfa/search.rs:623:35-623:36)
  2: _7 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:626:10-626:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:623:9-626:10)
      kind: goto -> bb26
  }
  preds [bb21]
  succs [bb26]

bb26
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/dfa/search.rs:626:9-626:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:612:5-627:6)
      kind: goto -> bb27
  }
  preds [bb24, bb25]
  succs [bb27]

bb27
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/search.rs:627:5-627:6)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/search.rs:627:5-627:6)
  2: StorageLive(_53)
    SourceInfo(regex-automata/src/dfa/search.rs:628:8-628:10)
  3: _53 = ()
    SourceInfo(regex-automata/src/dfa/search.rs:628:8-628:10)
  4: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _53)
    SourceInfo(regex-automata/src/dfa/search.rs:628:5-628:11)
  5: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/search.rs:628:10-628:11)
  6: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/search.rs:629:1-629:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:629:2-629:2)
      kind: goto -> bb28
  }
  preds [bb18, bb26]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:629:2-629:2)
      kind: return
  }
  preds [bb16, bb27]
  succs []

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:605:1-629:2)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb5, bb6, bb8, bb9, bb11, bb13, bb14, bb15, bb19, bb20, bb22, bb23]
  succs []

