{
  "regex-automata/src/nfa/thompson/builder.rs:1017:12:1017:62": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "group_index.as_usize() >= self.captures[pid].len()",
          "lhs": "group_index.as_usize()",
          "rhs": "self.captures[pid].len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/builder.rs:1020:25:1020:76": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(group_index.as_usize() - self.captures[pid].len())",
          "lhs": "group_index.as_usize()",
          "rhs": "self.captures[pid].len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/builder.rs:1006:26:1006:64": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(pid.as_usize() - self.captures.len())",
          "lhs": "pid.as_usize()",
          "rhs": "self.captures.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/builder.rs:1005:12:1005:49": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "pid.as_usize() >= self.captures.len()",
          "lhs": "pid.as_usize()",
          "rhs": "self.captures.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/builder.rs:1020:22:1020:76": [
    {
      "For": {
        "iter_var": "_",
        "iter_range": "0..(group_index.as_usize() - self.captures[pid].len())"
      }
    }
  ],
  "regex-automata/src/nfa/thompson/builder.rs:998:33:998:66": [
    {
      "Match": {
        "match_source": "regex-automata/src/nfa/thompson/builder.rs:998:33:998:66",
        "match_str": "SmallIndex::try_from(group_index)",
        "match_kind": {
          "Enum": [
            "Ok",
            "Err"
          ]
        },
        "arms": {
          "regex-automata/src/nfa/thompson/builder.rs:999:13:999:19": {
            "pat": {
              "pat_str": "Err(_)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/builder.rs:999:23:1001:14"
          },
          "regex-automata/src/nfa/thompson/builder.rs:1002:13:1002:28": {
            "pat": {
              "pat_str": "Ok(group_index)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/builder.rs:1002:32:1002:43"
          }
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/builder.rs:1006:22:1006:64": [
    {
      "For": {
        "iter_var": "_",
        "iter_range": "0..=(pid.as_usize() - self.captures.len())"
      }
    }
  ]
}