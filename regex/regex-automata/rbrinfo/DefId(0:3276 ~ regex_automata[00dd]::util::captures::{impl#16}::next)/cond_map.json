{
  "regex-automata/src/util/captures.rs:2528:12:2528:54": [
    {
      "Bool": {
        "Other": "self.group_info.0.index_to_name.is_empty()"
      }
    }
  ],
  "regex-automata/src/util/captures.rs:2538:41:2538:76": [
    {
      "Match": {
        "match_source": "regex-automata/src/util/captures.rs:2538:41:2538:76",
        "match_str": "self.names.as_mut().unwrap().next()",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/util/captures.rs:2539:13:2539:38": {
            "pat": {
              "pat_str": "Some((group_index, name))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/captures.rs:2539:42:2539:61"
          },
          "regex-automata/src/util/captures.rs:2540:13:2540:17": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/captures.rs:2540:21:2544:14"
          }
        }
      }
    }
  ],
  "regex-automata/src/util/captures.rs:2535:12:2535:32": [
    {
      "Bool": {
        "Other": "self.names.is_none()"
      }
    }
  ],
  "regex-automata/src/util/captures.rs:2531:12:2531:38": [
    {
      "Bool": {
        "Other": "self.current_pid.is_none()"
      }
    }
  ],
  "regex-automata/src/util/captures.rs:2532:37:2532:54": [
    {
      "Try": "self.pids.next()?"
    }
  ]
}