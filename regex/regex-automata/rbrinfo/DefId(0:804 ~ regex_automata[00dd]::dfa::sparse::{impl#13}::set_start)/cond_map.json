{
  "regex-automata/src/dfa/sparse.rs:2148:25:2148:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "pid < len",
          "lhs": "pid",
          "rhs": "len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2140:27:2140:35": [
    {
      "Match": {
        "match_source": "regex-automata/src/dfa/sparse.rs:2140:27:2140:35",
        "match_str": "anchored",
        "match_kind": {
          "Enum": [
            "No",
            "Yes",
            "Pattern"
          ]
        },
        "arms": {
          "regex-automata/src/dfa/sparse.rs:2142:13:2142:26": {
            "pat": {
              "pat_str": "Anchored::Yes",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/sparse.rs:2142:30:2142:55"
          },
          "regex-automata/src/dfa/sparse.rs:2141:13:2141:25": {
            "pat": {
              "pat_str": "Anchored::No",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/sparse.rs:2141:29:2141:40"
          },
          "regex-automata/src/dfa/sparse.rs:2143:13:2143:35": {
            "pat": {
              "pat_str": "Anchored::Pattern(pid)",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/sparse.rs:2143:39:2156:14"
          }
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2158:21:2158:42": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index * StateID::SIZE",
          "lhs": "index",
          "rhs": "StateID::SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2142:30:2142:55": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.stride + start_index",
          "lhs": "self.stride",
          "rhs": "start_index",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2159:19:2159:40": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "start + StateID::SIZE",
          "lhs": "start",
          "rhs": "StateID::SIZE",
          "cmp_with_int": false
        }
      }
    }
  ]
}