bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/determinize/state.rs:764:5-767:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:764:5-767:6)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:764:5-767:6)
      kind: falseUnwind -> [real: bb2, unwind: bb10]
  }
  preds [bb0, bb6]
  succs [bb2, bb10]

bb2
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:764:11-764:27)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/util/determinize/state.rs:764:11-764:12)
  2: _6 = _2
    SourceInfo(regex-automata/src/util/determinize/state.rs:764:11-764:12)
  3: _5 = Ge(move _6, const 128_u32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:764:11-764:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:764:11-764:27)
      kind: switchInt(move _5) -> [0: bb7, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/determinize/state.rs:764:26-764:27)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/util/determinize/state.rs:765:9-765:44)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/util/determinize/state.rs:765:9-765:13)
  3: _8 = &mut (*_1)
    SourceInfo(regex-automata/src/util/determinize/state.rs:765:9-765:13)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/util/determinize/state.rs:765:19-765:43)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/util/determinize/state.rs:765:19-765:29)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/util/determinize/state.rs:765:19-765:20)
  7: _11 = _2
    SourceInfo(regex-automata/src/util/determinize/state.rs:765:19-765:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:765:19-765:29)
      kind: _10 = <u32 as util::int::U32>::low_u8(move _11) -> [return: bb4, unwind: bb10]
  }
  preds [bb2]
  succs [bb4, bb10]

bb4
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/util/determinize/state.rs:765:28-765:29)
  1: _9 = BitOr(move _10, const 128_u8)
    SourceInfo(regex-automata/src/util/determinize/state.rs:765:19-765:43)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/util/determinize/state.rs:765:42-765:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:765:9-765:44)
      kind: _7 = std::vec::Vec::<u8>::push(move _8, move _9) -> [return: bb5, unwind: bb10]
  }
  preds [bb3]
  succs [bb5, bb10]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/determinize/state.rs:765:43-765:44)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/determinize/state.rs:765:43-765:44)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/util/determinize/state.rs:765:44-765:45)
  3: _12 = const 7_i32 as u32 (IntToInt)
    SourceInfo(regex-automata/src/util/determinize/state.rs:766:9-766:16)
  4: _13 = Lt(move _12, const 32_u32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:766:9-766:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:766:9-766:16)
      kind: assert(move _13, "attempt to shift right by `{}`, which would overflow", const 7_i32) -> [success: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: _2 = Shr(_2, const 7_i32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:766:9-766:16)
  1: _4 = const ()
    SourceInfo(regex-automata/src/util/determinize/state.rs:764:28-767:6)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:767:5-767:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:764:5-767:6)
      kind: goto -> bb1
  }
  preds [bb5]
  succs [bb1]

bb7
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/determinize/state.rs:764:26-764:27)
  1: StorageLive(_15)
    SourceInfo(regex-automata/src/util/determinize/state.rs:764:5-767:6)
  2: _3 = const ()
    SourceInfo(regex-automata/src/util/determinize/state.rs:764:5-767:6)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/util/determinize/state.rs:767:5-767:6)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:767:5-767:6)
  5: StorageDead(_3)
    SourceInfo(regex-automata/src/util/determinize/state.rs:767:5-767:6)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/util/determinize/state.rs:768:5-768:26)
  7: StorageLive(_18)
    SourceInfo(regex-automata/src/util/determinize/state.rs:768:5-768:9)
  8: _18 = &mut (*_1)
    SourceInfo(regex-automata/src/util/determinize/state.rs:768:5-768:9)
  9: StorageLive(_19)
    SourceInfo(regex-automata/src/util/determinize/state.rs:768:15-768:25)
  10: StorageLive(_20)
    SourceInfo(regex-automata/src/util/determinize/state.rs:768:15-768:16)
  11: _20 = _2
    SourceInfo(regex-automata/src/util/determinize/state.rs:768:15-768:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:768:15-768:25)
      kind: _19 = <u32 as util::int::U32>::low_u8(move _20) -> [return: bb8, unwind: bb10]
  }
  preds [bb2]
  succs [bb8, bb10]

bb8
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/util/determinize/state.rs:768:24-768:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:768:5-768:26)
      kind: _17 = std::vec::Vec::<u8>::push(move _18, move _19) -> [return: bb9, unwind: bb10]
  }
  preds [bb7]
  succs [bb9, bb10]

bb9
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/util/determinize/state.rs:768:25-768:26)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/util/determinize/state.rs:768:25-768:26)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/util/determinize/state.rs:768:26-768:27)
  3: _0 = const ()
    SourceInfo(regex-automata/src/util/determinize/state.rs:763:49-769:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:769:2-769:2)
      kind: return
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:763:1-769:2)
      kind: resume
  }
  preds [bb1, bb3, bb4, bb5, bb7, bb8]
  succs []

