{
  "regex-automata/src/dfa/sparse.rs:248:45:248:76": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "StateID::SIZE * dfa.state_len()",
          "lhs": "StateID::SIZE",
          "rhs": "dfa.state_len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:311:34:311:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(1 << 15)",
          "lhs": "1",
          "rhs": "15",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:354:29:354:61": [
    {
      "For": {
        "iter_var": "&pid",
        "iter_range": "dfa.pattern_id_slice(state.id())"
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:392:38:392:56": [
    {
      "For": {
        "iter_var": "(i, (_, _, next))",
        "iter_range": "sparse.enumerate()"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:101:9:111:10": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:101:15:101:36",
        "match_str": "(&($left), &($right))",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:102:13:102:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:102:24:102:33"
                  ],
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:102:14:102:22"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:310:29:310:59": [
    {
      "Bool": {
        "Other": "dfa.is_match_state(state.id())"
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:379:17:379:57": [
    {
      "Try": "StartTable::from_dense_dfa(dfa, &remap)?"
    }
  ],
  "regex-automata/src/dfa/sparse.rs:264:23:264:53": [
    {
      "Match": {
        "match_source": "regex-automata/src/dfa/sparse.rs:264:23:264:53",
        "match_str": "(unit1.as_u8(), unit2.as_u8())",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "regex-automata/src/dfa/sparse.rs:270:21:270:33": {
            "pat": {
              "pat_str": "(None, None)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "regex-automata/src/dfa/sparse.rs:270:22:270:26"
                  ],
                  "1": [
                    null,
                    "regex-automata/src/dfa/sparse.rs:270:28:270:32"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/sparse.rs:270:37:270:39"
          },
          "regex-automata/src/dfa/sparse.rs:271:21:271:36": {
            "pat": {
              "pat_str": "(Some(_), None)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "regex-automata/src/dfa/sparse.rs:271:22:271:29"
                  ],
                  "1": [
                    null,
                    "regex-automata/src/dfa/sparse.rs:271:31:271:35"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/sparse.rs:271:58:275:22"
          },
          "regex-automata/src/dfa/sparse.rs:271:39:271:54": {
            "pat": {
              "pat_str": "(None, Some(_))",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "regex-automata/src/dfa/sparse.rs:271:46:271:53"
                  ],
                  "0": [
                    null,
                    "regex-automata/src/dfa/sparse.rs:271:40:271:44"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/sparse.rs:271:58:275:22"
          },
          "regex-automata/src/dfa/sparse.rs:265:21:265:41": {
            "pat": {
              "pat_str": "(Some(b1), Some(b2))",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "regex-automata/src/dfa/sparse.rs:265:22:265:30"
                  ],
                  "1": [
                    null,
                    "regex-automata/src/dfa/sparse.rs:265:32:265:40"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/sparse.rs:265:45:269:22"
          }
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:253:22:253:34": [
    {
      "For": {
        "iter_var": "state",
        "iter_range": "dfa.states()"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:103:20:103:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "*left_val == *right_val",
          "lhs": "*left_val",
          "rhs": "*right_val",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:388:26:388:38": [
    {
      "For": {
        "iter_var": "old_state",
        "iter_range": "dfa.states()"
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:301:17:301:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "transition_len <= 257",
          "lhs": "transition_len",
          "rhs": "257",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:263:38:263:64": [
    {
      "For": {
        "iter_var": "(unit1, unit2, _)",
        "iter_range": "state.sparse_transitions()"
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:328:16:328:46": [
    {
      "Bool": {
        "Other": "dfa.is_match_state(state.id())"
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:256:47:257:61": [
    {
      "Try": "StateID::new(pos)\n                .map_err(|_| BuildError::too_many_states())?"
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:101:15:101:36": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:101:15:101:36",
        "match_str": "(&($left), &($right))",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:102:13:102:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:102:24:102:33"
                  ],
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:102:14:102:22"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:311:17:311:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "transition_len | (1 << 15)",
          "lhs": "transition_len",
          "rhs": "(1 << 15)",
          "cmp_with_int": false
        }
      }
    }
  ]
}