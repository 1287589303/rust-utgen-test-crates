bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:248:13-248:23)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:248:45-248:76)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:248:61-248:76)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:248:61-248:64)
  4: _5 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:248:61-248:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:248:61-248:76)
      kind: _4 = dfa::dense::DFA::<T>::state_len(move _5) -> [return: bb1, unwind: bb202]
  }
  preds []
  succs [bb1, bb202]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:248:75-248:76)
  1: _6 = MulWithOverflow(const util::primitives::StateID::SIZE, _4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:248:45-248:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:248:45-248:76)
      kind: assert(!move (_6.1: bool), "attempt to compute `{} * {}`, which would overflow", const util::primitives::StateID::SIZE, move _4) -> [success: bb2, unwind: bb202]
  }
  preds [bb0]
  succs [bb2, bb202]

bb2
  0: _3 = move (_6.0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:248:45-248:76)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:248:75-248:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:248:26-248:77)
      kind: _2 = std::vec::Vec::<u8>::with_capacity(move _3) -> [return: bb3, unwind: bb202]
  }
  preds [bb1]
  succs [bb3, bb202]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:248:76-248:77)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:248:13-248:23)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:252:13-252:22)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:252:50-252:65)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:252:50-252:53)
  5: _9 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:252:50-252:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:252:50-252:65)
      kind: _8 = dfa::dense::DFA::<T>::state_len(move _9) -> [return: bb4, unwind: bb201]
  }
  preds [bb2]
  succs [bb4, bb201]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:252:64-252:65)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
      kind: _7 = std::vec::from_elem::<util::primitives::StateID>(const dfa::DEAD, move _8) -> [return: bb5, unwind: bb201]
  }
  preds [bb3]
  succs [bb5, bb201]

bb5
  0: StorageDead(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  1: FakeRead(ForLet(None), _7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:252:13-252:22)
  2: AscribeUserType(_7, o, UserTypeProjection { base: UserType(2), projs: [] })
    SourceInfo(regex-automata/src/dfa/sparse.rs:252:24-252:36)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:9-370:10)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:25)
  7: _13 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
      kind: _12 = dfa::dense::DFA::<T>::states(move _13) -> [return: bb6, unwind: bb200]
  }
  preds [bb4]
  succs [bb6, bb200]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:33-253:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
      kind: _11 = <dfa::dense::StateIter<'_, T> as core::iter::IntoIterator>::into_iter(move _12) -> [return: bb7, unwind: bb200]
  }
  preds [bb5]
  succs [bb7, bb200]

bb7
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:33-253:34)
  1: PlaceMention(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
  3: _14 = move _11
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:253:9-370:10)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:253:9-370:10)
      kind: falseUnwind -> [real: bb9, unwind: bb200]
  }
  preds [bb7, bb120]
  succs [bb9, bb200]

bb9
  0: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
  1: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
  3: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
  4: _19 = &mut _14
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
  5: _18 = &mut (*_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
      kind: _17 = <dfa::dense::StateIter<'_, T> as core::iter::Iterator>::next(move _18) -> [return: bb10, unwind: bb200]
  }
  preds [bb8]
  succs [bb10, bb200]

bb10
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:33-253:34)
  1: PlaceMention(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
  2: _20 = discriminant(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
      kind: switchInt(move _20) -> [0: bb12, 1: bb13, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13]

bb11
  0: FakeRead(ForMatchedPlace(None), _17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:253:22-253:34)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:253:9-370:10)
      kind: falseEdge -> [real: bb14, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:13-253:18)
  1: _22 = move ((_17 as Some).0: dfa::dense::State<'_>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:13-253:18)
  2: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:254:17-254:20)
  3: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:254:23-254:29)
  4: _24 = &_2
    SourceInfo(regex-automata/src/dfa/sparse.rs:254:23-254:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:254:23-254:35)
      kind: _23 = std::vec::Vec::<u8>::len(move _24) -> [return: bb15, unwind: bb200]
  }
  preds [bb10, bb12]
  succs [bb15, bb200]

bb14
  0: _10 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:9-370:10)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  3: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  4: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  5: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  6: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  7: StorageLive(_220)
    SourceInfo(regex-automata/src/dfa/sparse.rs:372:13-372:20)
  8: StorageLive(_221)
    SourceInfo(regex-automata/src/dfa/sparse.rs:373:17-378:14)
  9: StorageLive(_222)
    SourceInfo(regex-automata/src/dfa/sparse.rs:374:17-374:23)
  10: _222 = move _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:374:17-374:23)
  11: StorageLive(_223)
    SourceInfo(regex-automata/src/dfa/sparse.rs:375:26-375:52)
  12: StorageLive(_224)
    SourceInfo(regex-automata/src/dfa/sparse.rs:375:26-375:44)
  13: StorageLive(_225)
    SourceInfo(regex-automata/src/dfa/sparse.rs:375:26-375:44)
  14: StorageLive(_226)
    SourceInfo(regex-automata/src/dfa/sparse.rs:375:26-375:29)
  15: _226 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:375:26-375:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:375:26-375:44)
      kind: _225 = dfa::dense::DFA::<T>::byte_classes(move _226) -> [return: bb121, unwind: bb195]
  }
  preds [bb12]
  succs [bb121, bb195]

bb15
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:254:34-254:35)
  1: FakeRead(ForLet(None), _23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:254:17-254:20)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-257:61)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-257:61)
  4: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-257:60)
  5: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-256:64)
  6: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:60-256:63)
  7: _29 = _23
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:60-256:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-256:64)
      kind: _28 = util::primitives::StateID::new(move _29) -> [return: bb16, unwind: bb200]
  }
  preds [bb13]
  succs [bb16, bb200]

bb16
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:63-256:64)
  1: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:26-257:59)
  2: _30 = {closure@regex-automata/src/dfa/sparse.rs:257:26: 257:29}
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:26-257:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-257:60)
      kind: _27 = core::result::Result::<util::primitives::StateID, util::primitives::StateIDError>::map_err::<dfa::dense::BuildError, {closure@regex-automata/src/dfa/sparse.rs:257:26: 257:29}>(move _28, move _30) -> [return: bb17, unwind: bb200]
  }
  preds [bb15]
  succs [bb17, bb200]

bb17
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:59-257:60)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:59-257:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-257:61)
      kind: _26 = <core::result::Result<util::primitives::StateID, dfa::dense::BuildError> as core::ops::Try>::branch(move _27) -> [return: bb18, unwind: bb199]
  }
  preds [bb16]
  succs [bb18, bb199]

bb18
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
  1: PlaceMention(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-257:61)
  2: _31 = discriminant(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-257:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-257:61)
      kind: switchInt(move _31) -> [0: bb21, 1: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20, bb21]

bb19
  0: FakeRead(ForMatchedPlace(None), _26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-257:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-257:61)
      kind: unreachable
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
      kind: falseEdge -> [real: bb22, imaginary: bb21]
  }
  preds [bb18]
  succs [bb21, bb22]

bb21
  0: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-257:61)
  1: _35 = ((_26 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-257:61)
  2: _25 = _35
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-257:61)
  3: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
  4: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:18-256:44)
  5: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:13-256:18)
  6: _37 = &mut _7
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:13-256:18)
  7: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:19-256:43)
  8: StorageLive(_39)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:19-256:22)
  9: _39 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:19-256:22)
  10: StorageLive(_40)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:32-256:42)
  11: StorageLive(_41)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:32-256:37)
  12: _41 = &_22
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:32-256:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:256:32-256:42)
      kind: _40 = dfa::dense::State::<'_>::id(move _41) -> [return: bb24, unwind: bb198]
  }
  preds [bb18, bb20]
  succs [bb24, bb198]

bb22
  0: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
  1: _32 = move ((_26 as Break).0: core::result::Result<core::convert::Infallible, dfa::dense::BuildError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
  2: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
  3: _34 = move _32
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:256:47-257:61)
      kind: _0 = <core::result::Result<dfa::sparse::DFA<std::vec::Vec<u8>>, dfa::dense::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::dense::BuildError>>>::from_residual(move _34) -> [return: bb23, unwind: bb196]
  }
  preds [bb20]
  succs [bb23, bb196]

bb23
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
      kind: drop(_32) -> [return: bb180, unwind: bb198]
  }
  preds [bb22]
  succs [bb180, bb198]

bb24
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:41-256:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:256:19-256:43)
      kind: _38 = dfa::dense::DFA::<T>::to_index(move _39, move _40) -> [return: bb25, unwind: bb198]
  }
  preds [bb21]
  succs [bb25, bb198]

bb25
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:42-256:43)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:42-256:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:256:18-256:44)
      kind: _36 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<usize>>::index_mut(move _37, move _38) -> [return: bb26, unwind: bb198]
  }
  preds [bb24]
  succs [bb26, bb198]

bb26
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:43-256:44)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:43-256:44)
  2: (*_36) = move _25
    SourceInfo(regex-automata/src/dfa/sparse.rs:256:13-257:61)
  3: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
  4: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:61-257:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:257:61-257:62)
      kind: drop(_26) -> [return: bb27, unwind: bb200]
  }
  preds [bb25]
  succs [bb27, bb200]

bb27
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:61-257:62)
  1: StorageLive(_42)
    SourceInfo(regex-automata/src/dfa/sparse.rs:259:13-259:27)
  2: StorageLive(_43)
    SourceInfo(regex-automata/src/dfa/sparse.rs:259:13-259:19)
  3: _43 = &mut _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:259:13-259:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:259:13-259:27)
      kind: _42 = std::vec::Vec::<u8>::push(move _43, const 0_u8) -> [return: bb28, unwind: bb200]
  }
  preds [bb26]
  succs [bb28, bb200]

bb28
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/sparse.rs:259:26-259:27)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/sparse.rs:259:27-259:28)
  2: StorageLive(_44)
    SourceInfo(regex-automata/src/dfa/sparse.rs:260:13-260:27)
  3: StorageLive(_45)
    SourceInfo(regex-automata/src/dfa/sparse.rs:260:13-260:19)
  4: _45 = &mut _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:260:13-260:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:260:13-260:27)
      kind: _44 = std::vec::Vec::<u8>::push(move _45, const 0_u8) -> [return: bb29, unwind: bb200]
  }
  preds [bb27]
  succs [bb29, bb200]

bb29
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/dfa/sparse.rs:260:26-260:27)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/dfa/sparse.rs:260:27-260:28)
  2: StorageLive(_46)
    SourceInfo(regex-automata/src/dfa/sparse.rs:262:17-262:35)
  3: _46 = const 0_u16
    SourceInfo(regex-automata/src/dfa/sparse.rs:262:38-262:39)
  4: FakeRead(ForLet(None), _46)
    SourceInfo(regex-automata/src/dfa/sparse.rs:262:17-262:35)
  5: StorageLive(_47)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:13-277:14)
  6: StorageLive(_48)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
  7: StorageLive(_49)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
  8: StorageLive(_50)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:43)
  9: _50 = &_22
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
      kind: _49 = dfa::dense::State::<'_>::sparse_transitions(move _50) -> [return: bb30, unwind: bb200]
  }
  preds [bb28]
  succs [bb30, bb200]

bb30
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:63-263:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
      kind: _48 = <dfa::dense::StateSparseTransitionIter<'_> as core::iter::IntoIterator>::into_iter(move _49) -> [return: bb31, unwind: bb200]
  }
  preds [bb29]
  succs [bb31, bb200]

bb31
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:63-263:64)
  1: PlaceMention(_48)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
  2: StorageLive(_51)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
  3: _51 = move _48
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:263:13-277:14)
      kind: goto -> bb32
  }
  preds [bb30]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:263:13-277:14)
      kind: falseUnwind -> [real: bb33, unwind: bb200]
  }
  preds [bb31, bb52]
  succs [bb33, bb200]

bb33
  0: StorageLive(_52)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
  1: StorageLive(_53)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
  2: StorageLive(_54)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
  3: StorageLive(_55)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
  4: _55 = &mut _51
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
  5: _54 = &mut (*_55)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
      kind: _53 = <dfa::dense::StateSparseTransitionIter<'_> as core::iter::Iterator>::next(move _54) -> [return: bb34, unwind: bb200]
  }
  preds [bb32]
  succs [bb34, bb200]

bb34
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:63-263:64)
  1: PlaceMention(_53)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
  2: _56 = discriminant(_53)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
      kind: switchInt(move _56) -> [0: bb36, 1: bb37, otherwise: bb35]
  }
  preds [bb33]
  succs [bb35, bb36, bb37]

bb35
  0: FakeRead(ForMatchedPlace(None), _53)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:263:38-263:64)
      kind: unreachable
  }
  preds [bb34]
  succs []

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:263:13-277:14)
      kind: falseEdge -> [real: bb38, imaginary: bb37]
  }
  preds [bb34]
  succs [bb37, bb38]

bb37
  0: StorageLive(_58)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:18-263:23)
  1: _58 = (((_53 as Some).0: (util::alphabet::Unit, util::alphabet::Unit, util::primitives::StateID)).0: util::alphabet::Unit)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:18-263:23)
  2: StorageLive(_59)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:25-263:30)
  3: _59 = (((_53 as Some).0: (util::alphabet::Unit, util::alphabet::Unit, util::primitives::StateID)).1: util::alphabet::Unit)
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:25-263:30)
  4: StorageLive(_60)
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:23-264:53)
  5: StorageLive(_61)
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:24-264:37)
  6: StorageLive(_62)
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:24-264:29)
  7: _62 = _58
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:24-264:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:264:24-264:37)
      kind: _61 = util::alphabet::Unit::as_u8(move _62) -> [return: bb39, unwind: bb200]
  }
  preds [bb34, bb36]
  succs [bb39, bb200]

bb38
  0: _47 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:13-277:14)
  1: StorageDead(_55)
    SourceInfo(regex-automata/src/dfa/sparse.rs:277:13-277:14)
  2: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/sparse.rs:277:13-277:14)
  3: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/sparse.rs:277:13-277:14)
  4: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/sparse.rs:277:13-277:14)
  5: StorageDead(_48)
    SourceInfo(regex-automata/src/dfa/sparse.rs:277:13-277:14)
  6: StorageDead(_47)
    SourceInfo(regex-automata/src/dfa/sparse.rs:277:13-277:14)
  7: _78 = AddWithOverflow(_46, const 1_u16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:291:13-291:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:291:13-291:32)
      kind: assert(!move (_78.1: bool), "attempt to compute `{} + {}`, which would overflow", _46, const 1_u16) -> [success: bb53, unwind: bb200]
  }
  preds [bb36]
  succs [bb53, bb200]

bb39
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:36-264:37)
  1: StorageLive(_63)
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:39-264:52)
  2: StorageLive(_64)
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:39-264:44)
  3: _64 = _59
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:39-264:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:264:39-264:52)
      kind: _63 = util::alphabet::Unit::as_u8(move _64) -> [return: bb40, unwind: bb200]
  }
  preds [bb37]
  succs [bb40, bb200]

bb40
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:51-264:52)
  1: _60 = (move _61, move _63)
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:23-264:53)
  2: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:52-264:53)
  3: StorageDead(_61)
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:52-264:53)
  4: PlaceMention(_60)
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:23-264:53)
  5: _67 = discriminant((_60.0: core::option::Option<u8>))
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:23-264:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:264:17-264:53)
      kind: switchInt(move _67) -> [0: bb44, 1: bb42, otherwise: bb41]
  }
  preds [bb39]
  succs [bb41, bb42, bb44]

bb41
  0: FakeRead(ForMatchedPlace(None), _60)
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:23-264:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:264:23-264:53)
      kind: unreachable
  }
  preds [bb40, bb42, bb44]
  succs []

bb42
  0: _65 = discriminant((_60.1: core::option::Option<u8>))
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:23-264:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:264:17-264:53)
      kind: switchInt(move _65) -> [0: bb46, 1: bb43, otherwise: bb41]
  }
  preds [bb40]
  succs [bb41, bb43, bb46]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:265:21-265:41)
      kind: falseEdge -> [real: bb47, imaginary: bb44]
  }
  preds [bb42]
  succs [bb44, bb47]

bb44
  0: _66 = discriminant((_60.1: core::option::Option<u8>))
    SourceInfo(regex-automata/src/dfa/sparse.rs:264:23-264:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:264:17-264:53)
      kind: switchInt(move _66) -> [0: bb45, 1: bb46, otherwise: bb41]
  }
  preds [bb40, bb43]
  succs [bb41, bb45, bb46]

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:270:21-270:33)
      kind: falseEdge -> [real: bb51, imaginary: bb46]
  }
  preds [bb44]
  succs [bb46, bb51]

bb46
  0: StorageLive(_77)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:137:9-137:77)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:137:9-137:77)
      kind: _77 = core::panicking::panic(const "internal error: entered unreachable code") -> bb200
  }
  preds [bb42, bb44, bb45]
  succs [bb200]

bb47
  0: StorageLive(_68)
    SourceInfo(regex-automata/src/dfa/sparse.rs:265:27-265:29)
  1: _68 = (((_60.0: core::option::Option<u8>) as Some).0: u8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:265:27-265:29)
  2: StorageLive(_69)
    SourceInfo(regex-automata/src/dfa/sparse.rs:265:37-265:39)
  3: _69 = (((_60.1: core::option::Option<u8>) as Some).0: u8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:265:37-265:39)
  4: _70 = AddWithOverflow(_46, const 1_u16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:266:25-266:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:266:25-266:44)
      kind: assert(!move (_70.1: bool), "attempt to compute `{} + {}`, which would overflow", _46, const 1_u16) -> [success: bb48, unwind: bb200]
  }
  preds [bb43]
  succs [bb48, bb200]

bb48
  0: _46 = move (_70.0: u16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:266:25-266:44)
  1: StorageLive(_71)
    SourceInfo(regex-automata/src/dfa/sparse.rs:267:25-267:40)
  2: StorageLive(_72)
    SourceInfo(regex-automata/src/dfa/sparse.rs:267:25-267:31)
  3: _72 = &mut _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:267:25-267:31)
  4: StorageLive(_73)
    SourceInfo(regex-automata/src/dfa/sparse.rs:267:37-267:39)
  5: _73 = _68
    SourceInfo(regex-automata/src/dfa/sparse.rs:267:37-267:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:267:25-267:40)
      kind: _71 = std::vec::Vec::<u8>::push(move _72, move _73) -> [return: bb49, unwind: bb200]
  }
  preds [bb47]
  succs [bb49, bb200]

bb49
  0: StorageDead(_73)
    SourceInfo(regex-automata/src/dfa/sparse.rs:267:39-267:40)
  1: StorageDead(_72)
    SourceInfo(regex-automata/src/dfa/sparse.rs:267:39-267:40)
  2: StorageDead(_71)
    SourceInfo(regex-automata/src/dfa/sparse.rs:267:40-267:41)
  3: StorageLive(_74)
    SourceInfo(regex-automata/src/dfa/sparse.rs:268:25-268:40)
  4: StorageLive(_75)
    SourceInfo(regex-automata/src/dfa/sparse.rs:268:25-268:31)
  5: _75 = &mut _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:268:25-268:31)
  6: StorageLive(_76)
    SourceInfo(regex-automata/src/dfa/sparse.rs:268:37-268:39)
  7: _76 = _69
    SourceInfo(regex-automata/src/dfa/sparse.rs:268:37-268:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:268:25-268:40)
      kind: _74 = std::vec::Vec::<u8>::push(move _75, move _76) -> [return: bb50, unwind: bb200]
  }
  preds [bb48]
  succs [bb50, bb200]

bb50
  0: StorageDead(_76)
    SourceInfo(regex-automata/src/dfa/sparse.rs:268:39-268:40)
  1: StorageDead(_75)
    SourceInfo(regex-automata/src/dfa/sparse.rs:268:39-268:40)
  2: StorageDead(_74)
    SourceInfo(regex-automata/src/dfa/sparse.rs:268:40-268:41)
  3: _52 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:265:45-269:22)
  4: StorageDead(_69)
    SourceInfo(regex-automata/src/dfa/sparse.rs:269:21-269:22)
  5: StorageDead(_68)
    SourceInfo(regex-automata/src/dfa/sparse.rs:269:21-269:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:269:21-269:22)
      kind: goto -> bb52
  }
  preds [bb49]
  succs [bb52]

bb51
  0: _52 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:270:37-270:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:270:37-270:39)
      kind: goto -> bb52
  }
  preds [bb45]
  succs [bb52]

bb52
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/dfa/sparse.rs:277:13-277:14)
  1: StorageDead(_59)
    SourceInfo(regex-automata/src/dfa/sparse.rs:277:13-277:14)
  2: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/sparse.rs:277:13-277:14)
  3: StorageDead(_55)
    SourceInfo(regex-automata/src/dfa/sparse.rs:277:13-277:14)
  4: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/sparse.rs:277:13-277:14)
  5: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/sparse.rs:277:13-277:14)
  6: _15 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:263:13-277:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:263:13-277:14)
      kind: goto -> bb32
  }
  preds [bb50, bb51]
  succs [bb32]

bb53
  0: _46 = move (_78.0: u16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:291:13-291:32)
  1: StorageLive(_79)
    SourceInfo(regex-automata/src/dfa/sparse.rs:292:13-292:27)
  2: StorageLive(_80)
    SourceInfo(regex-automata/src/dfa/sparse.rs:292:13-292:19)
  3: _80 = &mut _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:292:13-292:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:292:13-292:27)
      kind: _79 = std::vec::Vec::<u8>::push(move _80, const 0_u8) -> [return: bb54, unwind: bb200]
  }
  preds [bb38]
  succs [bb54, bb200]

bb54
  0: StorageDead(_80)
    SourceInfo(regex-automata/src/dfa/sparse.rs:292:26-292:27)
  1: StorageDead(_79)
    SourceInfo(regex-automata/src/dfa/sparse.rs:292:27-292:28)
  2: StorageLive(_81)
    SourceInfo(regex-automata/src/dfa/sparse.rs:293:13-293:27)
  3: StorageLive(_82)
    SourceInfo(regex-automata/src/dfa/sparse.rs:293:13-293:19)
  4: _82 = &mut _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:293:13-293:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:293:13-293:27)
      kind: _81 = std::vec::Vec::<u8>::push(move _82, const 0_u8) -> [return: bb55, unwind: bb200]
  }
  preds [bb53]
  succs [bb55, bb200]

bb55
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/dfa/sparse.rs:293:26-293:27)
  1: StorageDead(_81)
    SourceInfo(regex-automata/src/dfa/sparse.rs:293:27-293:28)
  2: StorageLive(_83)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:101:9-111:10)
  3: StorageLive(_84)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:101:15-101:36)
  4: StorageLive(_85)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:101:16-101:24)
  5: _85 = &_46
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:101:16-101:24)
  6: StorageLive(_86)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:101:26-101:35)
  7: StorageLive(_87)
    SourceInfo(regex-automata/src/dfa/sparse.rs:297:33-297:34)
  8: _87 = const 0_u16
    SourceInfo(regex-automata/src/dfa/sparse.rs:297:33-297:34)
  9: _86 = &_87
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:101:26-101:35)
  10: _84 = (move _85, move _86)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:101:15-101:36)
  11: StorageDead(_86)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:101:35-101:36)
  12: StorageDead(_85)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:101:35-101:36)
  13: PlaceMention(_84)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:101:15-101:36)
  14: StorageLive(_88)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:102:14-102:22)
  15: _88 = (_84.0: &u16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:102:14-102:22)
  16: StorageLive(_89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:102:24-102:33)
  17: _89 = (_84.1: &u16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:102:24-102:33)
  18: StorageLive(_90)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:103:20-103:43)
  19: StorageLive(_91)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:103:20-103:29)
  20: _91 = (*_88)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:103:20-103:29)
  21: StorageLive(_92)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:103:33-103:43)
  22: _92 = (*_89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:103:33-103:43)
  23: _90 = Eq(move _91, move _92)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:103:20-103:43)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:103:20-103:43)
      kind: switchInt(move _90) -> [0: bb58, otherwise: bb56]
  }
  preds [bb54]
  succs [bb56, bb58]

bb56
  0: StorageDead(_92)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:103:42-103:43)
  1: StorageDead(_91)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:103:42-103:43)
  2: StorageLive(_94)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:104:25-104:29)
  3: _94 = core::panicking::AssertKind::Ne
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:104:32-104:65)
  4: FakeRead(ForLet(None), _94)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:104:25-104:29)
  5: StorageLive(_95)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:21-108:146)
  6: StorageLive(_96)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:54-108:58)
  7: _96 = move _94
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:54-108:58)
  8: StorageLive(_97)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:60-108:70)
  9: StorageLive(_98)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:60-108:70)
  10: _98 = &(*_88)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:60-108:70)
  11: _97 = &(*_98)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:60-108:70)
  12: StorageLive(_99)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:72-108:83)
  13: StorageLive(_100)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:72-108:83)
  14: _100 = &(*_89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:72-108:83)
  15: _99 = &(*_100)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:72-108:83)
  16: StorageLive(_101)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:85-108:145)
  17: StorageLive(_102)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:114-108:144)
  18: StorageLive(_103)
    SourceInfo(regex-automata/src/dfa/sparse.rs:298:17-298:55)
  19: StorageLive(_104)
    SourceInfo(regex-automata/src/dfa/sparse.rs:298:17-298:55)
  20: StorageLive(_105)
    SourceInfo(regex-automata/src/dfa/sparse.rs:298:17-298:55)
  21: _105 = [const "transition length should be non-zero"]
    SourceInfo(regex-automata/src/dfa/sparse.rs:298:17-298:55)
  22: _104 = &_105
    SourceInfo(regex-automata/src/dfa/sparse.rs:298:17-298:55)
  23: _103 = &(*_104)
    SourceInfo(regex-automata/src/dfa/sparse.rs:298:17-298:55)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:114-108:144)
      kind: _102 = core::fmt::Arguments::<'_>::new_const::<1>(move _103) -> [return: bb57, unwind: bb200]
  }
  preds [bb55]
  succs [bb57, bb200]

bb57
  0: StorageDead(_103)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:143-108:144)
  1: _101 = core::option::Option::<core::fmt::Arguments<'_>>::Some(move _102)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:85-108:145)
  2: StorageDead(_102)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:144-108:145)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:108:21-108:146)
      kind: _95 = core::panicking::assert_failed::<u16, u16>(move _96, move _97, move _99, move _101) -> bb200
  }
  preds [bb56]
  succs [bb200]

bb58
  0: StorageDead(_92)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:103:42-103:43)
  1: StorageDead(_91)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:103:42-103:43)
  2: _83 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:109:18-109:18)
  3: StorageDead(_90)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:109:17-109:18)
  4: StorageDead(_89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:110:13-110:14)
  5: StorageDead(_88)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:110:13-110:14)
  6: StorageDead(_87)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:111:9-111:10)
  7: StorageDead(_84)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:111:9-111:10)
  8: StorageDead(_83)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:111:9-111:10)
  9: StorageLive(_106)
    SourceInfo(regex-automata/src/dfa/sparse.rs:300:13-304:14)
  10: StorageLive(_107)
    SourceInfo(regex-automata/src/dfa/sparse.rs:301:17-301:38)
  11: StorageLive(_108)
    SourceInfo(regex-automata/src/dfa/sparse.rs:301:17-301:31)
  12: _108 = _46
    SourceInfo(regex-automata/src/dfa/sparse.rs:301:17-301:31)
  13: _107 = Le(move _108, const 257_u16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:301:17-301:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:301:17-301:38)
      kind: switchInt(move _107) -> [0: bb60, otherwise: bb59]
  }
  preds [bb55]
  succs [bb59, bb60]

bb59
  0: StorageDead(_108)
    SourceInfo(regex-automata/src/dfa/sparse.rs:301:37-301:38)
  1: _106 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:304:14-304:14)
  2: StorageDead(_107)
    SourceInfo(regex-automata/src/dfa/sparse.rs:304:13-304:14)
  3: StorageDead(_106)
    SourceInfo(regex-automata/src/dfa/sparse.rs:304:13-304:14)
  4: StorageLive(_121)
    SourceInfo(regex-automata/src/dfa/sparse.rs:310:17-310:23)
  5: StorageLive(_122)
    SourceInfo(regex-automata/src/dfa/sparse.rs:310:29-310:59)
  6: StorageLive(_123)
    SourceInfo(regex-automata/src/dfa/sparse.rs:310:29-310:32)
  7: _123 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:310:29-310:32)
  8: StorageLive(_124)
    SourceInfo(regex-automata/src/dfa/sparse.rs:310:48-310:58)
  9: StorageLive(_125)
    SourceInfo(regex-automata/src/dfa/sparse.rs:310:48-310:53)
  10: _125 = &_22
    SourceInfo(regex-automata/src/dfa/sparse.rs:310:48-310:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:310:48-310:58)
      kind: _124 = dfa::dense::State::<'_>::id(move _125) -> [return: bb63, unwind: bb200]
  }
  preds [bb58]
  succs [bb63, bb200]

bb60
  0: StorageDead(_108)
    SourceInfo(regex-automata/src/dfa/sparse.rs:301:37-301:38)
  1: StorageLive(_110)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  2: StorageLive(_111)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  3: StorageLive(_112)
    SourceInfo(regex-automata/src/dfa/sparse.rs:302:17-302:61)
  4: StorageLive(_113)
    SourceInfo(regex-automata/src/dfa/sparse.rs:302:17-302:61)
  5: StorageLive(_114)
    SourceInfo(regex-automata/src/dfa/sparse.rs:302:17-302:61)
  6: _114 = [const "expected transition length ", const " to be <= 257"]
    SourceInfo(regex-automata/src/dfa/sparse.rs:302:17-302:61)
  7: _113 = &_114
    SourceInfo(regex-automata/src/dfa/sparse.rs:302:17-302:61)
  8: _112 = &(*_113)
    SourceInfo(regex-automata/src/dfa/sparse.rs:302:17-302:61)
  9: StorageLive(_115)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  10: StorageLive(_116)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_117)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  12: StorageLive(_118)
    SourceInfo(regex-automata/src/dfa/sparse.rs:302:45-302:47)
  13: StorageLive(_119)
    SourceInfo(regex-automata/src/dfa/sparse.rs:303:17-303:31)
  14: StorageLive(_120)
    SourceInfo(regex-automata/src/dfa/sparse.rs:303:17-303:31)
  15: _120 = &_46
    SourceInfo(regex-automata/src/dfa/sparse.rs:303:17-303:31)
  16: _119 = &(*_120)
    SourceInfo(regex-automata/src/dfa/sparse.rs:303:17-303:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:302:45-302:47)
      kind: _118 = core::fmt::rt::Argument::<'_>::new_display::<u16>(move _119) -> [return: bb61, unwind: bb200]
  }
  preds [bb58]
  succs [bb61, bb200]

bb61
  0: StorageDead(_119)
    SourceInfo(regex-automata/src/dfa/sparse.rs:302:46-302:47)
  1: _117 = [move _118]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_118)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: _116 = &_117
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: _115 = &(*_116)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _111 = core::fmt::Arguments::<'_>::new_v1::<2, 1>(move _112, move _115) -> [return: bb62, unwind: bb200]
  }
  preds [bb60]
  succs [bb62, bb200]

bb62
  0: StorageDead(_115)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_112)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _110 = core::panicking::panic_fmt(move _111) -> bb200
  }
  preds [bb61]
  succs [bb200]

bb63
  0: StorageDead(_125)
    SourceInfo(regex-automata/src/dfa/sparse.rs:310:57-310:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:310:29-310:59)
      kind: _122 = <dfa::dense::DFA<T> as dfa::automaton::Automaton>::is_match_state(move _123, move _124) -> [return: bb64, unwind: bb200]
  }
  preds [bb59]
  succs [bb64, bb200]

bb64
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:310:29-310:59)
      kind: switchInt(move _122) -> [0: bb67, otherwise: bb65]
  }
  preds [bb63]
  succs [bb65, bb67]

bb65
  0: StorageDead(_124)
    SourceInfo(regex-automata/src/dfa/sparse.rs:310:58-310:59)
  1: StorageDead(_123)
    SourceInfo(regex-automata/src/dfa/sparse.rs:310:58-310:59)
  2: StorageLive(_126)
    SourceInfo(regex-automata/src/dfa/sparse.rs:311:17-311:31)
  3: _126 = _46
    SourceInfo(regex-automata/src/dfa/sparse.rs:311:17-311:31)
  4: StorageLive(_127)
    SourceInfo(regex-automata/src/dfa/sparse.rs:311:34-311:43)
  5: _128 = const 15_i32 as u32 (IntToInt)
    SourceInfo(regex-automata/src/dfa/sparse.rs:311:34-311:43)
  6: _129 = Lt(move _128, const 16_u32)
    SourceInfo(regex-automata/src/dfa/sparse.rs:311:34-311:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:311:34-311:43)
      kind: assert(move _129, "attempt to shift left by `{}`, which would overflow", const 15_i32) -> [success: bb66, unwind: bb200]
  }
  preds [bb64]
  succs [bb66, bb200]

bb66
  0: _127 = Shl(const 1_u16, const 15_i32)
    SourceInfo(regex-automata/src/dfa/sparse.rs:311:34-311:43)
  1: _121 = BitOr(move _126, move _127)
    SourceInfo(regex-automata/src/dfa/sparse.rs:311:17-311:43)
  2: StorageDead(_127)
    SourceInfo(regex-automata/src/dfa/sparse.rs:311:42-311:43)
  3: StorageDead(_126)
    SourceInfo(regex-automata/src/dfa/sparse.rs:311:42-311:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:310:26-314:14)
      kind: goto -> bb68
  }
  preds [bb65]
  succs [bb68]

bb67
  0: StorageDead(_124)
    SourceInfo(regex-automata/src/dfa/sparse.rs:310:58-310:59)
  1: StorageDead(_123)
    SourceInfo(regex-automata/src/dfa/sparse.rs:310:58-310:59)
  2: _121 = _46
    SourceInfo(regex-automata/src/dfa/sparse.rs:313:17-313:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:310:26-314:14)
      kind: goto -> bb68
  }
  preds [bb64]
  succs [bb68]

bb68
  0: StorageDead(_122)
    SourceInfo(regex-automata/src/dfa/sparse.rs:314:13-314:14)
  1: FakeRead(ForLet(None), _121)
    SourceInfo(regex-automata/src/dfa/sparse.rs:310:17-310:23)
  2: StorageLive(_130)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:13-315:60)
  3: StorageLive(_131)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:33-315:39)
  4: _131 = _121
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:33-315:39)
  5: StorageLive(_132)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:41-315:59)
  6: StorageLive(_133)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:41-315:59)
  7: StorageLive(_134)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:52-315:59)
  8: StorageLive(_135)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:46-315:52)
  9: _135 = &mut _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:46-315:52)
  10: StorageLive(_136)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:53-315:58)
  11: StorageLive(_137)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:53-315:56)
  12: _137 = _23
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:53-315:56)
  13: _136 = core::ops::RangeFrom::<usize> { start: move _137 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:53-315:58)
  14: StorageDead(_137)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:57-315:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:315:52-315:59)
      kind: _134 = <std::vec::Vec<u8> as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _135, move _136) -> [return: bb69, unwind: bb200]
  }
  preds [bb66, bb67]
  succs [bb69, bb200]

bb69
  0: StorageDead(_136)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:58-315:59)
  1: StorageDead(_135)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:58-315:59)
  2: _133 = &mut (*_134)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:41-315:59)
  3: _132 = &mut (*_133)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:41-315:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:315:13-315:60)
      kind: _130 = <util::wire::LE as util::wire::Endian>::write_u16(move _131, move _132) -> [return: bb70, unwind: bb200]
  }
  preds [bb68]
  succs [bb70, bb200]

bb70
  0: StorageDead(_132)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:59-315:60)
  1: StorageDead(_131)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:59-315:60)
  2: StorageDead(_134)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:60-315:61)
  3: StorageDead(_133)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:60-315:61)
  4: StorageDead(_130)
    SourceInfo(regex-automata/src/dfa/sparse.rs:315:60-315:61)
  5: StorageLive(_138)
    SourceInfo(regex-automata/src/dfa/sparse.rs:320:17-320:22)
  6: StorageLive(_139)
    SourceInfo(regex-automata/src/dfa/sparse.rs:320:25-322:44)
  7: StorageLive(_140)
    SourceInfo(regex-automata/src/dfa/sparse.rs:320:25-321:26)
  8: StorageLive(_141)
    SourceInfo(regex-automata/src/dfa/sparse.rs:320:25-320:56)
  9: StorageLive(_142)
    SourceInfo(regex-automata/src/dfa/sparse.rs:320:41-320:55)
  10: _142 = _46
    SourceInfo(regex-automata/src/dfa/sparse.rs:320:41-320:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:320:25-320:56)
      kind: _141 = <usize as core::convert::TryFrom<u16>>::try_from(move _142) -> [return: bb71, unwind: bb200]
  }
  preds [bb69]
  succs [bb71, bb200]

bb71
  0: StorageDead(_142)
    SourceInfo(regex-automata/src/dfa/sparse.rs:320:55-320:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:320:25-321:26)
      kind: _140 = core::result::Result::<usize, core::convert::Infallible>::unwrap(move _141) -> [return: bb72, unwind: bb200]
  }
  preds [bb70]
  succs [bb72, bb200]

bb72
  0: StorageDead(_141)
    SourceInfo(regex-automata/src/dfa/sparse.rs:321:25-321:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:320:25-322:44)
      kind: _139 = core::num::<impl usize>::checked_mul(move _140, const util::primitives::StateID::SIZE) -> [return: bb73, unwind: bb200]
  }
  preds [bb71]
  succs [bb73, bb200]

bb73
  0: StorageDead(_140)
    SourceInfo(regex-automata/src/dfa/sparse.rs:322:43-322:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:320:25-323:26)
      kind: _138 = core::option::Option::<usize>::unwrap(move _139) -> [return: bb74, unwind: bb200]
  }
  preds [bb72]
  succs [bb74, bb200]

bb74
  0: StorageDead(_139)
    SourceInfo(regex-automata/src/dfa/sparse.rs:323:25-323:26)
  1: FakeRead(ForLet(None), _138)
    SourceInfo(regex-automata/src/dfa/sparse.rs:320:17-320:22)
  2: StorageLive(_143)
    SourceInfo(regex-automata/src/dfa/sparse.rs:324:13-324:55)
  3: StorageLive(_144)
    SourceInfo(regex-automata/src/dfa/sparse.rs:324:13-324:19)
  4: _144 = &mut _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:324:13-324:19)
  5: StorageLive(_145)
    SourceInfo(regex-automata/src/dfa/sparse.rs:324:27-324:54)
  6: StorageLive(_146)
    SourceInfo(regex-automata/src/dfa/sparse.rs:324:27-324:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:324:27-324:42)
      kind: _146 = core::iter::repeat::<u8>(const 0_u8) -> [return: bb75, unwind: bb200]
  }
  preds [bb73]
  succs [bb75, bb200]

bb75
  0: StorageLive(_147)
    SourceInfo(regex-automata/src/dfa/sparse.rs:324:48-324:53)
  1: _147 = _138
    SourceInfo(regex-automata/src/dfa/sparse.rs:324:48-324:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:324:27-324:54)
      kind: _145 = <core::iter::Repeat<u8> as core::iter::Iterator>::take(move _146, move _147) -> [return: bb76, unwind: bb200]
  }
  preds [bb74]
  succs [bb76, bb200]

bb76
  0: StorageDead(_147)
    SourceInfo(regex-automata/src/dfa/sparse.rs:324:53-324:54)
  1: StorageDead(_146)
    SourceInfo(regex-automata/src/dfa/sparse.rs:324:53-324:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:324:13-324:55)
      kind: _143 = <std::vec::Vec<u8> as core::iter::Extend<u8>>::extend::<core::iter::Take<core::iter::Repeat<u8>>>(move _144, move _145) -> [return: bb77, unwind: bb200]
  }
  preds [bb75]
  succs [bb77, bb200]

bb77
  0: StorageDead(_145)
    SourceInfo(regex-automata/src/dfa/sparse.rs:324:54-324:55)
  1: StorageDead(_144)
    SourceInfo(regex-automata/src/dfa/sparse.rs:324:54-324:55)
  2: StorageDead(_143)
    SourceInfo(regex-automata/src/dfa/sparse.rs:324:55-324:56)
  3: StorageLive(_148)
    SourceInfo(regex-automata/src/dfa/sparse.rs:328:13-360:14)
  4: StorageLive(_149)
    SourceInfo(regex-automata/src/dfa/sparse.rs:328:16-328:46)
  5: StorageLive(_150)
    SourceInfo(regex-automata/src/dfa/sparse.rs:328:16-328:19)
  6: _150 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:328:16-328:19)
  7: StorageLive(_151)
    SourceInfo(regex-automata/src/dfa/sparse.rs:328:35-328:45)
  8: StorageLive(_152)
    SourceInfo(regex-automata/src/dfa/sparse.rs:328:35-328:40)
  9: _152 = &_22
    SourceInfo(regex-automata/src/dfa/sparse.rs:328:35-328:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:328:35-328:45)
      kind: _151 = dfa::dense::State::<'_>::id(move _152) -> [return: bb78, unwind: bb200]
  }
  preds [bb76]
  succs [bb78, bb200]

bb78
  0: StorageDead(_152)
    SourceInfo(regex-automata/src/dfa/sparse.rs:328:44-328:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:328:16-328:46)
      kind: _149 = <dfa::dense::DFA<T> as dfa::automaton::Automaton>::is_match_state(move _150, move _151) -> [return: bb79, unwind: bb200]
  }
  preds [bb77]
  succs [bb79, bb200]

bb79
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:328:16-328:46)
      kind: switchInt(move _149) -> [0: bb112, otherwise: bb80]
  }
  preds [bb78]
  succs [bb80, bb112]

bb80
  0: StorageDead(_151)
    SourceInfo(regex-automata/src/dfa/sparse.rs:328:45-328:46)
  1: StorageDead(_150)
    SourceInfo(regex-automata/src/dfa/sparse.rs:328:45-328:46)
  2: StorageLive(_153)
    SourceInfo(regex-automata/src/dfa/sparse.rs:329:21-329:25)
  3: StorageLive(_154)
    SourceInfo(regex-automata/src/dfa/sparse.rs:329:28-329:31)
  4: _154 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:329:28-329:31)
  5: StorageLive(_155)
    SourceInfo(regex-automata/src/dfa/sparse.rs:329:50-329:60)
  6: StorageLive(_156)
    SourceInfo(regex-automata/src/dfa/sparse.rs:329:50-329:55)
  7: _156 = &_22
    SourceInfo(regex-automata/src/dfa/sparse.rs:329:50-329:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:329:50-329:60)
      kind: _155 = dfa::dense::State::<'_>::id(move _156) -> [return: bb81, unwind: bb200]
  }
  preds [bb79]
  succs [bb81, bb200]

bb81
  0: StorageDead(_156)
    SourceInfo(regex-automata/src/dfa/sparse.rs:329:59-329:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:329:28-329:61)
      kind: _153 = dfa::dense::DFA::<T>::match_pattern_len(move _154, move _155) -> [return: bb82, unwind: bb200]
  }
  preds [bb80]
  succs [bb82, bb200]

bb82
  0: StorageDead(_155)
    SourceInfo(regex-automata/src/dfa/sparse.rs:329:60-329:61)
  1: StorageDead(_154)
    SourceInfo(regex-automata/src/dfa/sparse.rs:329:60-329:61)
  2: FakeRead(ForLet(None), _153)
    SourceInfo(regex-automata/src/dfa/sparse.rs:329:21-329:25)
  3: StorageLive(_157)
    SourceInfo(regex-automata/src/dfa/sparse.rs:332:21-332:28)
  4: StorageLive(_158)
    SourceInfo(regex-automata/src/dfa/sparse.rs:332:31-332:37)
  5: _158 = &_2
    SourceInfo(regex-automata/src/dfa/sparse.rs:332:31-332:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:332:31-332:43)
      kind: _157 = std::vec::Vec::<u8>::len(move _158) -> [return: bb83, unwind: bb200]
  }
  preds [bb81]
  succs [bb83, bb200]

bb83
  0: StorageDead(_158)
    SourceInfo(regex-automata/src/dfa/sparse.rs:332:42-332:43)
  1: FakeRead(ForLet(None), _157)
    SourceInfo(regex-automata/src/dfa/sparse.rs:332:21-332:28)
  2: StorageLive(_159)
    SourceInfo(regex-automata/src/dfa/sparse.rs:336:21-336:26)
  3: StorageLive(_160)
    SourceInfo(regex-automata/src/dfa/sparse.rs:336:29-339:51)
  4: StorageLive(_161)
    SourceInfo(regex-automata/src/dfa/sparse.rs:336:29-338:30)
  5: StorageLive(_162)
    SourceInfo(regex-automata/src/dfa/sparse.rs:336:29-337:39)
  6: StorageLive(_163)
    SourceInfo(regex-automata/src/dfa/sparse.rs:336:29-336:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:336:29-336:45)
      kind: _163 = core::mem::size_of::<u32>() -> [return: bb84, unwind: bb200]
  }
  preds [bb82]
  succs [bb84, bb200]

bb84
  0: StorageLive(_164)
    SourceInfo(regex-automata/src/dfa/sparse.rs:337:34-337:38)
  1: _164 = _153
    SourceInfo(regex-automata/src/dfa/sparse.rs:337:34-337:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:336:29-337:39)
      kind: _162 = core::num::<impl usize>::checked_mul(move _163, move _164) -> [return: bb85, unwind: bb200]
  }
  preds [bb83]
  succs [bb85, bb200]

bb85
  0: StorageDead(_164)
    SourceInfo(regex-automata/src/dfa/sparse.rs:337:38-337:39)
  1: StorageDead(_163)
    SourceInfo(regex-automata/src/dfa/sparse.rs:337:38-337:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:336:29-338:30)
      kind: _161 = core::option::Option::<usize>::unwrap(move _162) -> [return: bb86, unwind: bb200]
  }
  preds [bb84]
  succs [bb86, bb200]

bb86
  0: StorageDead(_162)
    SourceInfo(regex-automata/src/dfa/sparse.rs:338:29-338:30)
  1: StorageLive(_165)
    SourceInfo(regex-automata/src/dfa/sparse.rs:339:34-339:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:339:34-339:50)
      kind: _165 = core::mem::size_of::<u32>() -> [return: bb87, unwind: bb200]
  }
  preds [bb85]
  succs [bb87, bb200]

bb87
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:336:29-339:51)
      kind: _160 = core::num::<impl usize>::checked_add(move _161, move _165) -> [return: bb88, unwind: bb200]
  }
  preds [bb86]
  succs [bb88, bb200]

bb88
  0: StorageDead(_165)
    SourceInfo(regex-automata/src/dfa/sparse.rs:339:50-339:51)
  1: StorageDead(_161)
    SourceInfo(regex-automata/src/dfa/sparse.rs:339:50-339:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:336:29-340:30)
      kind: _159 = core::option::Option::<usize>::unwrap(move _160) -> [return: bb89, unwind: bb200]
  }
  preds [bb87]
  succs [bb89, bb200]

bb89
  0: StorageDead(_160)
    SourceInfo(regex-automata/src/dfa/sparse.rs:340:29-340:30)
  1: FakeRead(ForLet(None), _159)
    SourceInfo(regex-automata/src/dfa/sparse.rs:336:21-336:26)
  2: StorageLive(_166)
    SourceInfo(regex-automata/src/dfa/sparse.rs:341:17-341:59)
  3: StorageLive(_167)
    SourceInfo(regex-automata/src/dfa/sparse.rs:341:17-341:23)
  4: _167 = &mut _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:341:17-341:23)
  5: StorageLive(_168)
    SourceInfo(regex-automata/src/dfa/sparse.rs:341:31-341:58)
  6: StorageLive(_169)
    SourceInfo(regex-automata/src/dfa/sparse.rs:341:31-341:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:341:31-341:46)
      kind: _169 = core::iter::repeat::<u8>(const 0_u8) -> [return: bb90, unwind: bb200]
  }
  preds [bb88]
  succs [bb90, bb200]

bb90
  0: StorageLive(_170)
    SourceInfo(regex-automata/src/dfa/sparse.rs:341:52-341:57)
  1: _170 = _159
    SourceInfo(regex-automata/src/dfa/sparse.rs:341:52-341:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:341:31-341:58)
      kind: _168 = <core::iter::Repeat<u8> as core::iter::Iterator>::take(move _169, move _170) -> [return: bb91, unwind: bb200]
  }
  preds [bb89]
  succs [bb91, bb200]

bb91
  0: StorageDead(_170)
    SourceInfo(regex-automata/src/dfa/sparse.rs:341:57-341:58)
  1: StorageDead(_169)
    SourceInfo(regex-automata/src/dfa/sparse.rs:341:57-341:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:341:17-341:59)
      kind: _166 = <std::vec::Vec<u8> as core::iter::Extend<u8>>::extend::<core::iter::Take<core::iter::Repeat<u8>>>(move _167, move _168) -> [return: bb92, unwind: bb200]
  }
  preds [bb90]
  succs [bb92, bb200]

bb92
  0: StorageDead(_168)
    SourceInfo(regex-automata/src/dfa/sparse.rs:341:58-341:59)
  1: StorageDead(_167)
    SourceInfo(regex-automata/src/dfa/sparse.rs:341:58-341:59)
  2: StorageDead(_166)
    SourceInfo(regex-automata/src/dfa/sparse.rs:341:59-341:60)
  3: StorageLive(_171)
    SourceInfo(regex-automata/src/dfa/sparse.rs:344:17-350:18)
  4: StorageLive(_172)
    SourceInfo(regex-automata/src/dfa/sparse.rs:348:21-348:76)
  5: StorageLive(_173)
    SourceInfo(regex-automata/src/dfa/sparse.rs:348:21-348:36)
  6: StorageLive(_174)
    SourceInfo(regex-automata/src/dfa/sparse.rs:348:21-348:25)
  7: _174 = _153
    SourceInfo(regex-automata/src/dfa/sparse.rs:348:21-348:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:348:21-348:36)
      kind: _173 = <usize as core::convert::TryInto<u32>>::try_into(move _174) -> [return: bb93, unwind: bb200]
  }
  preds [bb91]
  succs [bb93, bb200]

bb93
  0: StorageDead(_174)
    SourceInfo(regex-automata/src/dfa/sparse.rs:348:35-348:36)
  1: StorageLive(_175)
    SourceInfo(regex-automata/src/dfa/sparse.rs:348:44-348:75)
  2: StorageLive(_176)
    SourceInfo(regex-automata/src/dfa/sparse.rs:348:44-348:75)
  3: _176 = const "pattern ID length fits in u32"
    SourceInfo(regex-automata/src/dfa/sparse.rs:348:44-348:75)
  4: _175 = &(*_176)
    SourceInfo(regex-automata/src/dfa/sparse.rs:348:44-348:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:348:21-348:76)
      kind: _172 = core::result::Result::<u32, core::num::TryFromIntError>::expect(move _173, move _175) -> [return: bb94, unwind: bb200]
  }
  preds [bb92]
  succs [bb94, bb200]

bb94
  0: StorageDead(_175)
    SourceInfo(regex-automata/src/dfa/sparse.rs:348:75-348:76)
  1: StorageDead(_173)
    SourceInfo(regex-automata/src/dfa/sparse.rs:348:75-348:76)
  2: StorageLive(_177)
    SourceInfo(regex-automata/src/dfa/sparse.rs:349:21-349:39)
  3: StorageLive(_178)
    SourceInfo(regex-automata/src/dfa/sparse.rs:349:21-349:39)
  4: StorageLive(_179)
    SourceInfo(regex-automata/src/dfa/sparse.rs:349:32-349:39)
  5: StorageLive(_180)
    SourceInfo(regex-automata/src/dfa/sparse.rs:349:26-349:32)
  6: _180 = &mut _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:349:26-349:32)
  7: StorageLive(_181)
    SourceInfo(regex-automata/src/dfa/sparse.rs:349:33-349:38)
  8: StorageLive(_182)
    SourceInfo(regex-automata/src/dfa/sparse.rs:349:33-349:36)
  9: _182 = _157
    SourceInfo(regex-automata/src/dfa/sparse.rs:349:33-349:36)
  10: _181 = core::ops::RangeFrom::<usize> { start: move _182 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:349:33-349:38)
  11: StorageDead(_182)
    SourceInfo(regex-automata/src/dfa/sparse.rs:349:37-349:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:349:32-349:39)
      kind: _179 = <std::vec::Vec<u8> as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _180, move _181) -> [return: bb95, unwind: bb200]
  }
  preds [bb93]
  succs [bb95, bb200]

bb95
  0: StorageDead(_181)
    SourceInfo(regex-automata/src/dfa/sparse.rs:349:38-349:39)
  1: StorageDead(_180)
    SourceInfo(regex-automata/src/dfa/sparse.rs:349:38-349:39)
  2: _178 = &mut (*_179)
    SourceInfo(regex-automata/src/dfa/sparse.rs:349:21-349:39)
  3: _177 = &mut (*_178)
    SourceInfo(regex-automata/src/dfa/sparse.rs:349:21-349:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:344:17-350:18)
      kind: _171 = <util::wire::LE as util::wire::Endian>::write_u32(move _172, move _177) -> [return: bb96, unwind: bb200]
  }
  preds [bb94]
  succs [bb96, bb200]

bb96
  0: StorageDead(_177)
    SourceInfo(regex-automata/src/dfa/sparse.rs:350:17-350:18)
  1: StorageDead(_172)
    SourceInfo(regex-automata/src/dfa/sparse.rs:350:17-350:18)
  2: StorageDead(_179)
    SourceInfo(regex-automata/src/dfa/sparse.rs:350:18-350:19)
  3: StorageDead(_178)
    SourceInfo(regex-automata/src/dfa/sparse.rs:350:18-350:19)
  4: StorageDead(_176)
    SourceInfo(regex-automata/src/dfa/sparse.rs:350:18-350:19)
  5: StorageDead(_171)
    SourceInfo(regex-automata/src/dfa/sparse.rs:350:18-350:19)
  6: StorageLive(_183)
    SourceInfo(regex-automata/src/dfa/sparse.rs:351:24-351:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:351:24-351:40)
      kind: _183 = core::mem::size_of::<u32>() -> [return: bb97, unwind: bb200]
  }
  preds [bb95]
  succs [bb97, bb200]

bb97
  0: _184 = AddWithOverflow(_157, _183)
    SourceInfo(regex-automata/src/dfa/sparse.rs:351:17-351:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:351:17-351:40)
      kind: assert(!move (_184.1: bool), "attempt to compute `{} + {}`, which would overflow", _157, move _183) -> [success: bb98, unwind: bb200]
  }
  preds [bb96]
  succs [bb98, bb200]

bb98
  0: _157 = move (_184.0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:351:17-351:40)
  1: StorageDead(_183)
    SourceInfo(regex-automata/src/dfa/sparse.rs:351:39-351:40)
  2: StorageLive(_185)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
  3: StorageLive(_186)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
  4: StorageLive(_187)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:32)
  5: _187 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:32)
  6: StorageLive(_188)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:50-354:60)
  7: StorageLive(_189)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:50-354:55)
  8: _189 = &_22
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:50-354:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:354:50-354:60)
      kind: _188 = dfa::dense::State::<'_>::id(move _189) -> [return: bb99, unwind: bb200]
  }
  preds [bb97]
  succs [bb99, bb200]

bb99
  0: StorageDead(_189)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:59-354:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
      kind: _186 = dfa::dense::DFA::<T>::pattern_id_slice(move _187, move _188) -> [return: bb100, unwind: bb200]
  }
  preds [bb98]
  succs [bb100, bb200]

bb100
  0: StorageDead(_188)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:60-354:61)
  1: StorageDead(_187)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:60-354:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
      kind: _185 = <&[util::primitives::PatternID] as core::iter::IntoIterator>::into_iter(move _186) -> [return: bb101, unwind: bb200]
  }
  preds [bb99]
  succs [bb101, bb200]

bb101
  0: StorageDead(_186)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:60-354:61)
  1: PlaceMention(_185)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
  2: StorageLive(_190)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
  3: _190 = move _185
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:354:17-359:18)
      kind: goto -> bb102
  }
  preds [bb100]
  succs [bb102]

bb102
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:354:17-359:18)
      kind: falseUnwind -> [real: bb103, unwind: bb200]
  }
  preds [bb101, bb111]
  succs [bb103, bb200]

bb103
  0: StorageLive(_191)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
  1: StorageLive(_192)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
  2: StorageLive(_193)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
  3: StorageLive(_194)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
  4: _194 = &mut _190
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
  5: _193 = &mut (*_194)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
      kind: _192 = <core::slice::Iter<'_, util::primitives::PatternID> as core::iter::Iterator>::next(move _193) -> [return: bb104, unwind: bb200]
  }
  preds [bb102]
  succs [bb104, bb200]

bb104
  0: StorageDead(_193)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:60-354:61)
  1: PlaceMention(_192)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
  2: _195 = discriminant(_192)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
      kind: switchInt(move _195) -> [0: bb106, 1: bb107, otherwise: bb105]
  }
  preds [bb103]
  succs [bb105, bb106, bb107]

bb105
  0: FakeRead(ForMatchedPlace(None), _192)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:354:29-354:61)
      kind: unreachable
  }
  preds [bb104]
  succs []

bb106
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:354:17-359:18)
      kind: falseEdge -> [real: bb108, imaginary: bb107]
  }
  preds [bb104]
  succs [bb107, bb108]

bb107
  0: StorageLive(_197)
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:22-354:25)
  1: _197 = (*((_192 as Some).0: &util::primitives::PatternID))
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:22-354:25)
  2: StorageLive(_198)
    SourceInfo(regex-automata/src/dfa/sparse.rs:355:28-358:22)
  3: StorageLive(_199)
    SourceInfo(regex-automata/src/dfa/sparse.rs:356:25-356:28)
  4: _199 = _197
    SourceInfo(regex-automata/src/dfa/sparse.rs:356:25-356:28)
  5: StorageLive(_200)
    SourceInfo(regex-automata/src/dfa/sparse.rs:357:25-357:43)
  6: StorageLive(_201)
    SourceInfo(regex-automata/src/dfa/sparse.rs:357:25-357:43)
  7: StorageLive(_202)
    SourceInfo(regex-automata/src/dfa/sparse.rs:357:36-357:43)
  8: StorageLive(_203)
    SourceInfo(regex-automata/src/dfa/sparse.rs:357:30-357:36)
  9: _203 = &mut _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:357:30-357:36)
  10: StorageLive(_204)
    SourceInfo(regex-automata/src/dfa/sparse.rs:357:37-357:42)
  11: StorageLive(_205)
    SourceInfo(regex-automata/src/dfa/sparse.rs:357:37-357:40)
  12: _205 = _157
    SourceInfo(regex-automata/src/dfa/sparse.rs:357:37-357:40)
  13: _204 = core::ops::RangeFrom::<usize> { start: move _205 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:357:37-357:42)
  14: StorageDead(_205)
    SourceInfo(regex-automata/src/dfa/sparse.rs:357:41-357:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:357:36-357:43)
      kind: _202 = <std::vec::Vec<u8> as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _203, move _204) -> [return: bb109, unwind: bb200]
  }
  preds [bb104, bb106]
  succs [bb109, bb200]

bb108
  0: _148 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:17-359:18)
  1: StorageDead(_194)
    SourceInfo(regex-automata/src/dfa/sparse.rs:359:17-359:18)
  2: StorageDead(_192)
    SourceInfo(regex-automata/src/dfa/sparse.rs:359:17-359:18)
  3: StorageDead(_191)
    SourceInfo(regex-automata/src/dfa/sparse.rs:359:17-359:18)
  4: StorageDead(_190)
    SourceInfo(regex-automata/src/dfa/sparse.rs:359:17-359:18)
  5: StorageDead(_185)
    SourceInfo(regex-automata/src/dfa/sparse.rs:359:17-359:18)
  6: StorageDead(_159)
    SourceInfo(regex-automata/src/dfa/sparse.rs:360:13-360:14)
  7: StorageDead(_157)
    SourceInfo(regex-automata/src/dfa/sparse.rs:360:13-360:14)
  8: StorageDead(_153)
    SourceInfo(regex-automata/src/dfa/sparse.rs:360:13-360:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:328:13-360:14)
      kind: goto -> bb113
  }
  preds [bb106]
  succs [bb113]

bb109
  0: StorageDead(_204)
    SourceInfo(regex-automata/src/dfa/sparse.rs:357:42-357:43)
  1: StorageDead(_203)
    SourceInfo(regex-automata/src/dfa/sparse.rs:357:42-357:43)
  2: _201 = &mut (*_202)
    SourceInfo(regex-automata/src/dfa/sparse.rs:357:25-357:43)
  3: _200 = &mut (*_201)
    SourceInfo(regex-automata/src/dfa/sparse.rs:357:25-357:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:355:28-358:22)
      kind: _198 = util::wire::write_pattern_id::<util::wire::LE>(move _199, move _200) -> [return: bb110, unwind: bb200]
  }
  preds [bb107]
  succs [bb110, bb200]

bb110
  0: StorageDead(_200)
    SourceInfo(regex-automata/src/dfa/sparse.rs:358:21-358:22)
  1: StorageDead(_199)
    SourceInfo(regex-automata/src/dfa/sparse.rs:358:21-358:22)
  2: _206 = AddWithOverflow(_157, _198)
    SourceInfo(regex-automata/src/dfa/sparse.rs:355:21-358:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:355:21-358:22)
      kind: assert(!move (_206.1: bool), "attempt to compute `{} + {}`, which would overflow", _157, move _198) -> [success: bb111, unwind: bb200]
  }
  preds [bb109]
  succs [bb111, bb200]

bb111
  0: _157 = move (_206.0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:355:21-358:22)
  1: StorageDead(_198)
    SourceInfo(regex-automata/src/dfa/sparse.rs:358:21-358:22)
  2: StorageDead(_202)
    SourceInfo(regex-automata/src/dfa/sparse.rs:358:22-358:23)
  3: StorageDead(_201)
    SourceInfo(regex-automata/src/dfa/sparse.rs:358:22-358:23)
  4: _191 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:62-359:18)
  5: StorageDead(_197)
    SourceInfo(regex-automata/src/dfa/sparse.rs:359:17-359:18)
  6: StorageDead(_194)
    SourceInfo(regex-automata/src/dfa/sparse.rs:359:17-359:18)
  7: StorageDead(_192)
    SourceInfo(regex-automata/src/dfa/sparse.rs:359:17-359:18)
  8: StorageDead(_191)
    SourceInfo(regex-automata/src/dfa/sparse.rs:359:17-359:18)
  9: _15 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:354:17-359:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:354:17-359:18)
      kind: goto -> bb102
  }
  preds [bb110]
  succs [bb102]

bb112
  0: StorageDead(_151)
    SourceInfo(regex-automata/src/dfa/sparse.rs:328:45-328:46)
  1: StorageDead(_150)
    SourceInfo(regex-automata/src/dfa/sparse.rs:328:45-328:46)
  2: _148 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:360:14-360:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:328:13-360:14)
      kind: goto -> bb113
  }
  preds [bb79]
  succs [bb113]

bb113
  0: StorageDead(_149)
    SourceInfo(regex-automata/src/dfa/sparse.rs:360:13-360:14)
  1: StorageDead(_148)
    SourceInfo(regex-automata/src/dfa/sparse.rs:360:13-360:14)
  2: StorageLive(_207)
    SourceInfo(regex-automata/src/dfa/sparse.rs:367:17-367:22)
  3: StorageLive(_208)
    SourceInfo(regex-automata/src/dfa/sparse.rs:367:25-367:28)
  4: _208 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:367:25-367:28)
  5: StorageLive(_209)
    SourceInfo(regex-automata/src/dfa/sparse.rs:367:41-367:51)
  6: StorageLive(_210)
    SourceInfo(regex-automata/src/dfa/sparse.rs:367:41-367:46)
  7: _210 = &_22
    SourceInfo(regex-automata/src/dfa/sparse.rs:367:41-367:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:367:41-367:51)
      kind: _209 = dfa::dense::State::<'_>::id(move _210) -> [return: bb114, unwind: bb200]
  }
  preds [bb108, bb112]
  succs [bb114, bb200]

bb114
  0: StorageDead(_210)
    SourceInfo(regex-automata/src/dfa/sparse.rs:367:50-367:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:367:25-367:52)
      kind: _207 = <dfa::dense::DFA<T> as dfa::automaton::Automaton>::accelerator(move _208, move _209) -> [return: bb115, unwind: bb200]
  }
  preds [bb113]
  succs [bb115, bb200]

bb115
  0: StorageDead(_209)
    SourceInfo(regex-automata/src/dfa/sparse.rs:367:51-367:52)
  1: StorageDead(_208)
    SourceInfo(regex-automata/src/dfa/sparse.rs:367:51-367:52)
  2: FakeRead(ForLet(None), _207)
    SourceInfo(regex-automata/src/dfa/sparse.rs:367:17-367:22)
  3: StorageLive(_211)
    SourceInfo(regex-automata/src/dfa/sparse.rs:368:13-368:57)
  4: StorageLive(_212)
    SourceInfo(regex-automata/src/dfa/sparse.rs:368:13-368:19)
  5: _212 = &mut _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:368:13-368:19)
  6: StorageLive(_213)
    SourceInfo(regex-automata/src/dfa/sparse.rs:368:25-368:56)
  7: StorageLive(_214)
    SourceInfo(regex-automata/src/dfa/sparse.rs:368:25-368:47)
  8: StorageLive(_215)
    SourceInfo(regex-automata/src/dfa/sparse.rs:368:25-368:36)
  9: StorageLive(_216)
    SourceInfo(regex-automata/src/dfa/sparse.rs:368:25-368:30)
  10: _216 = &(*_207)
    SourceInfo(regex-automata/src/dfa/sparse.rs:368:25-368:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:368:25-368:36)
      kind: _215 = core::slice::<impl [u8]>::len(move _216) -> [return: bb116, unwind: bb200]
  }
  preds [bb114]
  succs [bb116, bb200]

bb116
  0: StorageDead(_216)
    SourceInfo(regex-automata/src/dfa/sparse.rs:368:35-368:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:368:25-368:47)
      kind: _214 = <usize as core::convert::TryInto<u8>>::try_into(move _215) -> [return: bb117, unwind: bb200]
  }
  preds [bb115]
  succs [bb117, bb200]

bb117
  0: StorageDead(_215)
    SourceInfo(regex-automata/src/dfa/sparse.rs:368:46-368:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:368:25-368:56)
      kind: _213 = core::result::Result::<u8, core::num::TryFromIntError>::unwrap(move _214) -> [return: bb118, unwind: bb200]
  }
  preds [bb116]
  succs [bb118, bb200]

bb118
  0: StorageDead(_214)
    SourceInfo(regex-automata/src/dfa/sparse.rs:368:55-368:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:368:13-368:57)
      kind: _211 = std::vec::Vec::<u8>::push(move _212, move _213) -> [return: bb119, unwind: bb200]
  }
  preds [bb117]
  succs [bb119, bb200]

bb119
  0: StorageDead(_213)
    SourceInfo(regex-automata/src/dfa/sparse.rs:368:56-368:57)
  1: StorageDead(_212)
    SourceInfo(regex-automata/src/dfa/sparse.rs:368:56-368:57)
  2: StorageDead(_211)
    SourceInfo(regex-automata/src/dfa/sparse.rs:368:57-368:58)
  3: StorageLive(_217)
    SourceInfo(regex-automata/src/dfa/sparse.rs:369:13-369:44)
  4: StorageLive(_218)
    SourceInfo(regex-automata/src/dfa/sparse.rs:369:13-369:19)
  5: _218 = &mut _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:369:13-369:19)
  6: StorageLive(_219)
    SourceInfo(regex-automata/src/dfa/sparse.rs:369:38-369:43)
  7: _219 = &(*_207)
    SourceInfo(regex-automata/src/dfa/sparse.rs:369:38-369:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:369:13-369:44)
      kind: _217 = std::vec::Vec::<u8>::extend_from_slice(move _218, move _219) -> [return: bb120, unwind: bb200]
  }
  preds [bb118]
  succs [bb120, bb200]

bb120
  0: StorageDead(_219)
    SourceInfo(regex-automata/src/dfa/sparse.rs:369:43-369:44)
  1: StorageDead(_218)
    SourceInfo(regex-automata/src/dfa/sparse.rs:369:43-369:44)
  2: StorageDead(_217)
    SourceInfo(regex-automata/src/dfa/sparse.rs:369:44-369:45)
  3: _16 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:35-370:10)
  4: StorageDead(_207)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  5: StorageDead(_138)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  6: StorageDead(_121)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  7: StorageDead(_46)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  8: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  9: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  10: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  11: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  12: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  13: _15 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:253:9-370:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:253:9-370:10)
      kind: goto -> bb8
  }
  preds [bb119]
  succs [bb8]

bb121
  0: _224 = &(*_225)
    SourceInfo(regex-automata/src/dfa/sparse.rs:375:26-375:44)
  1: StorageDead(_226)
    SourceInfo(regex-automata/src/dfa/sparse.rs:375:43-375:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:375:26-375:52)
      kind: _223 = <util::alphabet::ByteClasses as core::clone::Clone>::clone(move _224) -> [return: bb122, unwind: bb195]
  }
  preds [bb14]
  succs [bb122, bb195]

bb122
  0: StorageDead(_224)
    SourceInfo(regex-automata/src/dfa/sparse.rs:375:51-375:52)
  1: StorageLive(_227)
    SourceInfo(regex-automata/src/dfa/sparse.rs:376:28-376:43)
  2: StorageLive(_228)
    SourceInfo(regex-automata/src/dfa/sparse.rs:376:28-376:31)
  3: _228 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:376:28-376:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:376:28-376:43)
      kind: _227 = dfa::dense::DFA::<T>::state_len(move _228) -> [return: bb123, unwind: bb195]
  }
  preds [bb121]
  succs [bb123, bb195]

bb123
  0: StorageDead(_228)
    SourceInfo(regex-automata/src/dfa/sparse.rs:376:42-376:43)
  1: StorageLive(_229)
    SourceInfo(regex-automata/src/dfa/sparse.rs:377:30-377:47)
  2: StorageLive(_230)
    SourceInfo(regex-automata/src/dfa/sparse.rs:377:30-377:33)
  3: _230 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:377:30-377:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:377:30-377:47)
      kind: _229 = dfa::dense::DFA::<T>::pattern_len(move _230) -> [return: bb124, unwind: bb195]
  }
  preds [bb122]
  succs [bb124, bb195]

bb124
  0: StorageDead(_230)
    SourceInfo(regex-automata/src/dfa/sparse.rs:377:46-377:47)
  1: _221 = dfa::sparse::Transitions::<std::vec::Vec<u8>> { sparse: move _222, classes: move _223, state_len: move _227, pattern_len: move _229 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:373:17-378:14)
  2: StorageDead(_229)
    SourceInfo(regex-automata/src/dfa/sparse.rs:378:13-378:14)
  3: StorageDead(_227)
    SourceInfo(regex-automata/src/dfa/sparse.rs:378:13-378:14)
  4: StorageDead(_223)
    SourceInfo(regex-automata/src/dfa/sparse.rs:378:13-378:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:378:13-378:14)
      kind: drop(_222) -> [return: bb125, unwind: bb194]
  }
  preds [bb123]
  succs [bb125, bb194]

bb125
  0: StorageDead(_222)
    SourceInfo(regex-automata/src/dfa/sparse.rs:378:13-378:14)
  1: StorageLive(_231)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:17-379:57)
  2: StorageLive(_232)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:17-379:57)
  3: StorageLive(_233)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:17-379:56)
  4: StorageLive(_234)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:44-379:47)
  5: _234 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:44-379:47)
  6: StorageLive(_235)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:49-379:55)
  7: StorageLive(_236)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:49-379:55)
  8: StorageLive(_237)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:49-379:55)
  9: StorageLive(_238)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:49-379:55)
  10: _238 = &_7
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:49-379:55)
  11: _237 = &(*_238)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:49-379:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:379:49-379:55)
      kind: _236 = <std::vec::Vec<util::primitives::StateID> as core::ops::Deref>::deref(move _237) -> [return: bb126, unwind: bb194]
  }
  preds [bb124]
  succs [bb126, bb194]

bb126
  0: _235 = &(*_236)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:49-379:55)
  1: StorageDead(_237)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:54-379:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:379:17-379:56)
      kind: _233 = dfa::sparse::StartTable::<std::vec::Vec<u8>>::from_dense_dfa::<T>(move _234, move _235) -> [return: bb127, unwind: bb194]
  }
  preds [bb125]
  succs [bb127, bb194]

bb127
  0: StorageDead(_235)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:55-379:56)
  1: StorageDead(_234)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:55-379:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:379:17-379:57)
      kind: _232 = <core::result::Result<dfa::sparse::StartTable<std::vec::Vec<u8>>, dfa::dense::BuildError> as core::ops::Try>::branch(move _233) -> [return: bb128, unwind: bb193]
  }
  preds [bb126]
  succs [bb128, bb193]

bb128
  0: StorageDead(_233)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:56-379:57)
  1: PlaceMention(_232)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:17-379:57)
  2: _239 = discriminant(_232)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:17-379:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:379:17-379:57)
      kind: switchInt(move _239) -> [0: bb131, 1: bb130, otherwise: bb129]
  }
  preds [bb127]
  succs [bb129, bb130, bb131]

bb129
  0: FakeRead(ForMatchedPlace(None), _232)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:17-379:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:379:17-379:57)
      kind: unreachable
  }
  preds [bb128]
  succs []

bb130
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:379:56-379:57)
      kind: falseEdge -> [real: bb132, imaginary: bb131]
  }
  preds [bb128]
  succs [bb131, bb132]

bb131
  0: StorageLive(_243)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:17-379:57)
  1: _243 = move ((_232 as Continue).0: dfa::sparse::StartTable<std::vec::Vec<u8>>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:17-379:57)
  2: _231 = move _243
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:17-379:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:379:56-379:57)
      kind: drop(_243) -> [return: bb134, unwind: bb191]
  }
  preds [bb128, bb130]
  succs [bb134, bb191]

bb132
  0: StorageLive(_240)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:56-379:57)
  1: _240 = move ((_232 as Break).0: core::result::Result<core::convert::Infallible, dfa::dense::BuildError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:56-379:57)
  2: StorageLive(_242)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:56-379:57)
  3: _242 = move _240
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:56-379:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:379:17-379:57)
      kind: _0 = <core::result::Result<dfa::sparse::DFA<std::vec::Vec<u8>>, dfa::dense::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::dense::BuildError>>>::from_residual(move _242) -> [return: bb133, unwind: bb189]
  }
  preds [bb130]
  succs [bb133, bb189]

bb133
  0: StorageDead(_242)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:56-379:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:379:56-379:57)
      kind: drop(_240) -> [return: bb177, unwind: bb191]
  }
  preds [bb132]
  succs [bb177, bb191]

bb134
  0: StorageDead(_243)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:56-379:57)
  1: StorageLive(_244)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:22-380:71)
  2: StorageLive(_245)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:22-380:35)
  3: StorageLive(_246)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:22-380:35)
  4: StorageLive(_247)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:22-380:25)
  5: _247 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:22-380:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:380:22-380:35)
      kind: _246 = dfa::dense::DFA::<T>::special(move _247) -> [return: bb135, unwind: bb188]
  }
  preds [bb131]
  succs [bb135, bb188]

bb135
  0: _245 = &(*_246)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:22-380:35)
  1: StorageDead(_247)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:34-380:35)
  2: StorageLive(_248)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:42-380:70)
  3: StorageLive(_249)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:42-380:70)
  4: _249 = &_7
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:42-380:70)
  5: StorageLive(_250)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:42-380:70)
  6: _250 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:42-380:70)
  7: _248 = {closure@regex-automata/src/dfa/sparse.rs:380:42: 380:46} { remap: move _249, dfa: move _250 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:42-380:70)
  8: StorageDead(_250)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:45-380:46)
  9: StorageDead(_249)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:45-380:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:380:22-380:71)
      kind: _244 = dfa::special::Special::remap::<{closure@regex-automata/src/dfa/sparse.rs:380:42: 380:46}>(move _245, move _248) -> [return: bb136, unwind: bb188]
  }
  preds [bb134]
  succs [bb136, bb188]

bb136
  0: StorageDead(_248)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:70-380:71)
  1: StorageDead(_245)
    SourceInfo(regex-automata/src/dfa/sparse.rs:380:70-380:71)
  2: StorageLive(_251)
    SourceInfo(regex-automata/src/dfa/sparse.rs:381:18-381:56)
  3: StorageLive(_252)
    SourceInfo(regex-automata/src/dfa/sparse.rs:381:18-381:37)
  4: StorageLive(_253)
    SourceInfo(regex-automata/src/dfa/sparse.rs:381:18-381:21)
  5: _253 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:381:18-381:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:381:18-381:37)
      kind: _252 = <dfa::dense::DFA<T> as dfa::automaton::Automaton>::get_prefilter(move _253) -> [return: bb137, unwind: bb188]
  }
  preds [bb135]
  succs [bb137, bb188]

bb137
  0: StorageDead(_253)
    SourceInfo(regex-automata/src/dfa/sparse.rs:381:36-381:37)
  1: StorageLive(_254)
    SourceInfo(regex-automata/src/dfa/sparse.rs:381:42-381:55)
  2: _254 = {closure@regex-automata/src/dfa/sparse.rs:381:42: 381:45}
    SourceInfo(regex-automata/src/dfa/sparse.rs:381:42-381:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:381:18-381:56)
      kind: _251 = core::option::Option::<&util::prefilter::Prefilter>::map::<util::prefilter::Prefilter, {closure@regex-automata/src/dfa/sparse.rs:381:42: 381:45}>(move _252, move _254) -> [return: bb138, unwind: bb188]
  }
  preds [bb136]
  succs [bb138, bb188]

bb138
  0: StorageDead(_254)
    SourceInfo(regex-automata/src/dfa/sparse.rs:381:55-381:56)
  1: StorageDead(_252)
    SourceInfo(regex-automata/src/dfa/sparse.rs:381:55-381:56)
  2: StorageLive(_255)
    SourceInfo(regex-automata/src/dfa/sparse.rs:382:22-382:43)
  3: StorageLive(_256)
    SourceInfo(regex-automata/src/dfa/sparse.rs:382:22-382:35)
  4: StorageLive(_257)
    SourceInfo(regex-automata/src/dfa/sparse.rs:382:22-382:35)
  5: StorageLive(_258)
    SourceInfo(regex-automata/src/dfa/sparse.rs:382:22-382:25)
  6: _258 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:382:22-382:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:382:22-382:35)
      kind: _257 = dfa::dense::DFA::<T>::quitset(move _258) -> [return: bb139, unwind: bb187]
  }
  preds [bb137]
  succs [bb139, bb187]

bb139
  0: _256 = &(*_257)
    SourceInfo(regex-automata/src/dfa/sparse.rs:382:22-382:35)
  1: StorageDead(_258)
    SourceInfo(regex-automata/src/dfa/sparse.rs:382:34-382:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:382:22-382:43)
      kind: _255 = <util::alphabet::ByteSet as core::clone::Clone>::clone(move _256) -> [return: bb140, unwind: bb187]
  }
  preds [bb138]
  succs [bb140, bb187]

bb140
  0: StorageDead(_256)
    SourceInfo(regex-automata/src/dfa/sparse.rs:382:42-382:43)
  1: StorageLive(_259)
    SourceInfo(regex-automata/src/dfa/sparse.rs:383:20-383:39)
  2: StorageLive(_260)
    SourceInfo(regex-automata/src/dfa/sparse.rs:383:20-383:31)
  3: StorageLive(_261)
    SourceInfo(regex-automata/src/dfa/sparse.rs:383:20-383:31)
  4: StorageLive(_262)
    SourceInfo(regex-automata/src/dfa/sparse.rs:383:20-383:23)
  5: _262 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:383:20-383:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:383:20-383:31)
      kind: _261 = dfa::dense::DFA::<T>::flags(move _262) -> [return: bb141, unwind: bb187]
  }
  preds [bb139]
  succs [bb141, bb187]

bb141
  0: _260 = &(*_261)
    SourceInfo(regex-automata/src/dfa/sparse.rs:383:20-383:31)
  1: StorageDead(_262)
    SourceInfo(regex-automata/src/dfa/sparse.rs:383:30-383:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:383:20-383:39)
      kind: _259 = <dfa::dense::Flags as core::clone::Clone>::clone(move _260) -> [return: bb142, unwind: bb187]
  }
  preds [bb140]
  succs [bb142, bb187]

bb142
  0: StorageDead(_260)
    SourceInfo(regex-automata/src/dfa/sparse.rs:383:38-383:39)
  1: _220 = dfa::sparse::DFA::<std::vec::Vec<u8>> { tt: move _221, st: move _231, special: move _244, pre: move _251, quitset: move _255, flags: move _259 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:372:23-384:10)
  2: StorageDead(_259)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
  3: StorageDead(_255)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
      kind: drop(_251) -> [return: bb143, unwind: bb188]
  }
  preds [bb141]
  succs [bb143, bb188]

bb143
  0: StorageDead(_251)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
  1: StorageDead(_244)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
      kind: drop(_231) -> [return: bb144, unwind: bb191]
  }
  preds [bb142]
  succs [bb144, bb191]

bb144
  0: StorageDead(_231)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
      kind: drop(_221) -> [return: bb145, unwind: bb192]
  }
  preds [bb143]
  succs [bb145, bb192]

bb145
  0: StorageDead(_221)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
  1: FakeRead(ForLet(None), _220)
    SourceInfo(regex-automata/src/dfa/sparse.rs:372:13-372:20)
  2: StorageDead(_261)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:10-384:11)
  3: StorageDead(_257)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:10-384:11)
  4: StorageDead(_246)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:10-384:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:384:10-384:11)
      kind: drop(_232) -> [return: bb146, unwind: bb186]
  }
  preds [bb144]
  succs [bb146, bb186]

bb146
  0: StorageDead(_238)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:10-384:11)
  1: StorageDead(_236)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:10-384:11)
  2: StorageDead(_232)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:10-384:11)
  3: StorageDead(_225)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:10-384:11)
  4: StorageLive(_263)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:9-396:10)
  5: StorageLive(_264)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
  6: StorageLive(_265)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
  7: StorageLive(_266)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:29)
  8: _266 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
      kind: _265 = dfa::dense::DFA::<T>::states(move _266) -> [return: bb147, unwind: bb186]
  }
  preds [bb145]
  succs [bb147, bb186]

bb147
  0: StorageDead(_266)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:37-388:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
      kind: _264 = <dfa::dense::StateIter<'_, T> as core::iter::IntoIterator>::into_iter(move _265) -> [return: bb148, unwind: bb186]
  }
  preds [bb146]
  succs [bb148, bb186]

bb148
  0: StorageDead(_265)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:37-388:38)
  1: PlaceMention(_264)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
  2: StorageLive(_267)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
  3: _267 = move _264
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:388:9-396:10)
      kind: goto -> bb149
  }
  preds [bb147]
  succs [bb149]

bb149
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:388:9-396:10)
      kind: falseUnwind -> [real: bb150, unwind: bb186]
  }
  preds [bb148, bb169]
  succs [bb150, bb186]

bb150
  0: StorageLive(_268)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
  1: StorageLive(_269)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
  2: StorageLive(_270)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
  3: StorageLive(_271)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
  4: _271 = &mut _267
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
  5: _270 = &mut (*_271)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
      kind: _269 = <dfa::dense::StateIter<'_, T> as core::iter::Iterator>::next(move _270) -> [return: bb151, unwind: bb186]
  }
  preds [bb149]
  succs [bb151, bb186]

bb151
  0: StorageDead(_270)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:37-388:38)
  1: PlaceMention(_269)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
  2: _272 = discriminant(_269)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
      kind: switchInt(move _272) -> [0: bb153, 1: bb154, otherwise: bb152]
  }
  preds [bb150]
  succs [bb152, bb153, bb154]

bb152
  0: FakeRead(ForMatchedPlace(None), _269)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:388:26-388:38)
      kind: unreachable
  }
  preds [bb151]
  succs []

bb153
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:388:9-396:10)
      kind: falseEdge -> [real: bb155, imaginary: bb154]
  }
  preds [bb151]
  succs [bb154, bb155]

bb154
  0: StorageLive(_274)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:13-388:22)
  1: _274 = move ((_269 as Some).0: dfa::dense::State<'_>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:13-388:22)
  2: StorageLive(_275)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:17-389:23)
  3: StorageLive(_276)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:31-389:61)
  4: StorageLive(_277)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:26-389:31)
  5: _277 = &_7
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:26-389:31)
  6: StorageLive(_278)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:32-389:60)
  7: StorageLive(_279)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:32-389:35)
  8: _279 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:32-389:35)
  9: StorageLive(_280)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:45-389:59)
  10: StorageLive(_281)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:45-389:54)
  11: _281 = &_274
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:45-389:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:389:45-389:59)
      kind: _280 = dfa::dense::State::<'_>::id(move _281) -> [return: bb156, unwind: bb186]
  }
  preds [bb151, bb153]
  succs [bb156, bb186]

bb155
  0: _263 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:9-396:10)
  1: StorageDead(_271)
    SourceInfo(regex-automata/src/dfa/sparse.rs:396:9-396:10)
  2: StorageDead(_269)
    SourceInfo(regex-automata/src/dfa/sparse.rs:396:9-396:10)
  3: StorageDead(_268)
    SourceInfo(regex-automata/src/dfa/sparse.rs:396:9-396:10)
  4: StorageDead(_267)
    SourceInfo(regex-automata/src/dfa/sparse.rs:396:9-396:10)
  5: StorageDead(_264)
    SourceInfo(regex-automata/src/dfa/sparse.rs:396:9-396:10)
  6: StorageDead(_263)
    SourceInfo(regex-automata/src/dfa/sparse.rs:396:9-396:10)
  7: StorageLive(_309)
    SourceInfo(regex-automata/src/dfa/sparse.rs:402:12-402:15)
  8: _309 = move _220
    SourceInfo(regex-automata/src/dfa/sparse.rs:402:12-402:15)
  9: _0 = core::result::Result::<dfa::sparse::DFA<std::vec::Vec<u8>>, dfa::dense::BuildError>::Ok(move _309)
    SourceInfo(regex-automata/src/dfa/sparse.rs:402:9-402:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:402:15-402:16)
      kind: drop(_309) -> [return: bb173, unwind: bb186]
  }
  preds [bb153]
  succs [bb173, bb186]

bb156
  0: StorageDead(_281)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:58-389:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:389:32-389:60)
      kind: _278 = dfa::dense::DFA::<T>::to_index(move _279, move _280) -> [return: bb157, unwind: bb186]
  }
  preds [bb154]
  succs [bb157, bb186]

bb157
  0: StorageDead(_280)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:59-389:60)
  1: StorageDead(_279)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:59-389:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:389:31-389:61)
      kind: _276 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<usize>>::index(move _277, move _278) -> [return: bb158, unwind: bb186]
  }
  preds [bb156]
  succs [bb158, bb186]

bb158
  0: _275 = (*_276)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:26-389:61)
  1: StorageDead(_278)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:60-389:61)
  2: StorageDead(_277)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:60-389:61)
  3: FakeRead(ForLet(None), _275)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:17-389:23)
  4: StorageDead(_276)
    SourceInfo(regex-automata/src/dfa/sparse.rs:389:61-389:62)
  5: StorageLive(_282)
    SourceInfo(regex-automata/src/dfa/sparse.rs:390:17-390:30)
  6: StorageLive(_283)
    SourceInfo(regex-automata/src/dfa/sparse.rs:390:33-390:39)
  7: _283 = &mut (_220.0: dfa::sparse::Transitions<std::vec::Vec<u8>>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:390:33-390:39)
  8: StorageLive(_284)
    SourceInfo(regex-automata/src/dfa/sparse.rs:390:50-390:56)
  9: _284 = _275
    SourceInfo(regex-automata/src/dfa/sparse.rs:390:50-390:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:390:33-390:57)
      kind: _282 = dfa::sparse::Transitions::<std::vec::Vec<u8>>::state_mut(move _283, move _284) -> [return: bb159, unwind: bb186]
  }
  preds [bb157]
  succs [bb159, bb186]

bb159
  0: StorageDead(_284)
    SourceInfo(regex-automata/src/dfa/sparse.rs:390:56-390:57)
  1: StorageDead(_283)
    SourceInfo(regex-automata/src/dfa/sparse.rs:390:56-390:57)
  2: FakeRead(ForLet(None), _282)
    SourceInfo(regex-automata/src/dfa/sparse.rs:390:17-390:30)
  3: StorageLive(_285)
    SourceInfo(regex-automata/src/dfa/sparse.rs:391:17-391:23)
  4: StorageLive(_286)
    SourceInfo(regex-automata/src/dfa/sparse.rs:391:26-391:35)
  5: _286 = &_274
    SourceInfo(regex-automata/src/dfa/sparse.rs:391:26-391:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:391:26-391:56)
      kind: _285 = dfa::dense::State::<'_>::sparse_transitions(move _286) -> [return: bb160, unwind: bb186]
  }
  preds [bb158]
  succs [bb160, bb186]

bb160
  0: StorageDead(_286)
    SourceInfo(regex-automata/src/dfa/sparse.rs:391:55-391:56)
  1: FakeRead(ForLet(None), _285)
    SourceInfo(regex-automata/src/dfa/sparse.rs:391:17-391:23)
  2: StorageLive(_287)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
  3: StorageLive(_288)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
  4: StorageLive(_289)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:44)
  5: _289 = move _285
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
      kind: _288 = <dfa::dense::StateSparseTransitionIter<'_> as core::iter::Iterator>::enumerate(move _289) -> [return: bb161, unwind: bb186]
  }
  preds [bb159]
  succs [bb161, bb186]

bb161
  0: StorageDead(_289)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:55-392:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
      kind: _287 = <core::iter::Enumerate<dfa::dense::StateSparseTransitionIter<'_>> as core::iter::IntoIterator>::into_iter(move _288) -> [return: bb162, unwind: bb186]
  }
  preds [bb160]
  succs [bb162, bb186]

bb162
  0: StorageDead(_288)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:55-392:56)
  1: PlaceMention(_287)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
  2: StorageLive(_290)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
  3: _290 = move _287
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:392:13-395:14)
      kind: goto -> bb163
  }
  preds [bb161]
  succs [bb163]

bb163
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:392:13-395:14)
      kind: falseUnwind -> [real: bb164, unwind: bb186]
  }
  preds [bb162, bb172]
  succs [bb164, bb186]

bb164
  0: StorageLive(_291)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
  1: StorageLive(_292)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
  2: StorageLive(_293)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
  3: StorageLive(_294)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
  4: _294 = &mut _290
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
  5: _293 = &mut (*_294)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
      kind: _292 = <core::iter::Enumerate<dfa::dense::StateSparseTransitionIter<'_>> as core::iter::Iterator>::next(move _293) -> [return: bb165, unwind: bb186]
  }
  preds [bb163]
  succs [bb165, bb186]

bb165
  0: StorageDead(_293)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:55-392:56)
  1: PlaceMention(_292)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
  2: _295 = discriminant(_292)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
      kind: switchInt(move _295) -> [0: bb167, 1: bb168, otherwise: bb166]
  }
  preds [bb164]
  succs [bb166, bb167, bb168]

bb166
  0: FakeRead(ForMatchedPlace(None), _292)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:392:38-392:56)
      kind: unreachable
  }
  preds [bb165]
  succs []

bb167
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:392:13-395:14)
      kind: falseEdge -> [real: bb169, imaginary: bb168]
  }
  preds [bb165]
  succs [bb168, bb169]

bb168
  0: StorageLive(_297)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:18-392:19)
  1: _297 = (((_292 as Some).0: (usize, (util::alphabet::Unit, util::alphabet::Unit, util::primitives::StateID))).0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:18-392:19)
  2: StorageLive(_298)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:28-392:32)
  3: _298 = ((((_292 as Some).0: (usize, (util::alphabet::Unit, util::alphabet::Unit, util::primitives::StateID))).1: (util::alphabet::Unit, util::alphabet::Unit, util::primitives::StateID)).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:28-392:32)
  4: StorageLive(_299)
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:21-393:25)
  5: StorageLive(_300)
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:33-393:53)
  6: StorageLive(_301)
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:28-393:33)
  7: _301 = &_7
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:28-393:33)
  8: StorageLive(_302)
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:34-393:52)
  9: StorageLive(_303)
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:34-393:37)
  10: _303 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:34-393:37)
  11: StorageLive(_304)
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:47-393:51)
  12: _304 = _298
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:47-393:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:393:34-393:52)
      kind: _302 = dfa::dense::DFA::<T>::to_index(move _303, move _304) -> [return: bb170, unwind: bb186]
  }
  preds [bb165, bb167]
  succs [bb170, bb186]

bb169
  0: _268 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:13-395:14)
  1: StorageDead(_294)
    SourceInfo(regex-automata/src/dfa/sparse.rs:395:13-395:14)
  2: StorageDead(_292)
    SourceInfo(regex-automata/src/dfa/sparse.rs:395:13-395:14)
  3: StorageDead(_291)
    SourceInfo(regex-automata/src/dfa/sparse.rs:395:13-395:14)
  4: StorageDead(_290)
    SourceInfo(regex-automata/src/dfa/sparse.rs:395:13-395:14)
  5: StorageDead(_287)
    SourceInfo(regex-automata/src/dfa/sparse.rs:395:13-395:14)
  6: StorageDead(_285)
    SourceInfo(regex-automata/src/dfa/sparse.rs:396:9-396:10)
  7: StorageDead(_282)
    SourceInfo(regex-automata/src/dfa/sparse.rs:396:9-396:10)
  8: StorageDead(_275)
    SourceInfo(regex-automata/src/dfa/sparse.rs:396:9-396:10)
  9: StorageDead(_274)
    SourceInfo(regex-automata/src/dfa/sparse.rs:396:9-396:10)
  10: StorageDead(_271)
    SourceInfo(regex-automata/src/dfa/sparse.rs:396:9-396:10)
  11: StorageDead(_269)
    SourceInfo(regex-automata/src/dfa/sparse.rs:396:9-396:10)
  12: StorageDead(_268)
    SourceInfo(regex-automata/src/dfa/sparse.rs:396:9-396:10)
  13: _15 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:388:9-396:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:388:9-396:10)
      kind: goto -> bb149
  }
  preds [bb167]
  succs [bb149]

bb170
  0: StorageDead(_304)
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:51-393:52)
  1: StorageDead(_303)
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:51-393:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:393:33-393:53)
      kind: _300 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<usize>>::index(move _301, move _302) -> [return: bb171, unwind: bb186]
  }
  preds [bb168]
  succs [bb171, bb186]

bb171
  0: _299 = (*_300)
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:28-393:53)
  1: StorageDead(_302)
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:52-393:53)
  2: StorageDead(_301)
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:52-393:53)
  3: FakeRead(ForLet(None), _299)
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:21-393:25)
  4: StorageDead(_300)
    SourceInfo(regex-automata/src/dfa/sparse.rs:393:53-393:54)
  5: StorageLive(_305)
    SourceInfo(regex-automata/src/dfa/sparse.rs:394:17-394:47)
  6: StorageLive(_306)
    SourceInfo(regex-automata/src/dfa/sparse.rs:394:17-394:26)
  7: _306 = &mut _282
    SourceInfo(regex-automata/src/dfa/sparse.rs:394:17-394:26)
  8: StorageLive(_307)
    SourceInfo(regex-automata/src/dfa/sparse.rs:394:39-394:40)
  9: _307 = _297
    SourceInfo(regex-automata/src/dfa/sparse.rs:394:39-394:40)
  10: StorageLive(_308)
    SourceInfo(regex-automata/src/dfa/sparse.rs:394:42-394:46)
  11: _308 = _299
    SourceInfo(regex-automata/src/dfa/sparse.rs:394:42-394:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:394:17-394:47)
      kind: _305 = dfa::sparse::StateMut::<'_>::set_next_at(move _306, move _307, move _308) -> [return: bb172, unwind: bb186]
  }
  preds [bb170]
  succs [bb172, bb186]

bb172
  0: StorageDead(_308)
    SourceInfo(regex-automata/src/dfa/sparse.rs:394:46-394:47)
  1: StorageDead(_307)
    SourceInfo(regex-automata/src/dfa/sparse.rs:394:46-394:47)
  2: StorageDead(_306)
    SourceInfo(regex-automata/src/dfa/sparse.rs:394:46-394:47)
  3: StorageDead(_305)
    SourceInfo(regex-automata/src/dfa/sparse.rs:394:47-394:48)
  4: _291 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:57-395:14)
  5: StorageDead(_299)
    SourceInfo(regex-automata/src/dfa/sparse.rs:395:13-395:14)
  6: StorageDead(_298)
    SourceInfo(regex-automata/src/dfa/sparse.rs:395:13-395:14)
  7: StorageDead(_297)
    SourceInfo(regex-automata/src/dfa/sparse.rs:395:13-395:14)
  8: StorageDead(_294)
    SourceInfo(regex-automata/src/dfa/sparse.rs:395:13-395:14)
  9: StorageDead(_292)
    SourceInfo(regex-automata/src/dfa/sparse.rs:395:13-395:14)
  10: StorageDead(_291)
    SourceInfo(regex-automata/src/dfa/sparse.rs:395:13-395:14)
  11: _15 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:392:13-395:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:392:13-395:14)
      kind: goto -> bb163
  }
  preds [bb171]
  succs [bb163]

bb173
  0: StorageDead(_309)
    SourceInfo(regex-automata/src/dfa/sparse.rs:402:15-402:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:403:5-403:6)
      kind: drop(_220) -> [return: bb174, unwind: bb200]
  }
  preds [bb155]
  succs [bb174, bb200]

bb174
  0: StorageDead(_220)
    SourceInfo(regex-automata/src/dfa/sparse.rs:403:5-403:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:403:5-403:6)
      kind: drop(_7) -> [return: bb175, unwind: bb201]
  }
  preds [bb173]
  succs [bb175, bb201]

bb175
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:403:5-403:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:403:5-403:6)
      kind: drop(_2) -> [return: bb176, unwind: bb202]
  }
  preds [bb174]
  succs [bb176, bb202]

bb176
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:403:5-403:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:403:6-403:6)
      kind: goto -> bb185
  }
  preds [bb175]
  succs [bb185]

bb177
  0: StorageDead(_240)
    SourceInfo(regex-automata/src/dfa/sparse.rs:379:56-379:57)
  1: StorageDead(_231)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
      kind: drop(_221) -> [return: bb178, unwind: bb192]
  }
  preds [bb133]
  succs [bb178, bb192]

bb178
  0: StorageDead(_221)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:384:10-384:11)
      kind: drop(_232) -> [return: bb179, unwind: bb200]
  }
  preds [bb177]
  succs [bb179, bb200]

bb179
  0: StorageDead(_238)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:10-384:11)
  1: StorageDead(_236)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:10-384:11)
  2: StorageDead(_232)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:10-384:11)
  3: StorageDead(_225)
    SourceInfo(regex-automata/src/dfa/sparse.rs:384:10-384:11)
  4: StorageDead(_220)
    SourceInfo(regex-automata/src/dfa/sparse.rs:403:5-403:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb182
  }
  preds [bb178]
  succs [bb182]

bb180
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:257:61-257:62)
      kind: drop(_26) -> [return: bb181, unwind: bb200]
  }
  preds [bb23]
  succs [bb181, bb200]

bb181
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:257:61-257:62)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  2: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  4: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  5: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  6: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  7: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  8: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/sparse.rs:370:9-370:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb182
  }
  preds [bb180]
  succs [bb182]

bb182
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:403:5-403:6)
      kind: drop(_7) -> [return: bb183, unwind: bb201]
  }
  preds [bb179, bb181]
  succs [bb183, bb201]

bb183
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:403:5-403:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:403:5-403:6)
      kind: drop(_2) -> [return: bb184, unwind: bb202]
  }
  preds [bb182]
  succs [bb184, bb202]

bb184
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:403:5-403:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:403:6-403:6)
      kind: goto -> bb185
  }
  preds [bb183]
  succs [bb185]

bb185
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:403:6-403:6)
      kind: return
  }
  preds [bb176, bb184]
  succs []

bb186
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:403:5-403:6)
      kind: drop(_220) -> [return: bb200, unwind terminate(cleanup)]
  }
  preds [bb145, bb146, bb147, bb149, bb150, bb154, bb155, bb156, bb157, bb158, bb159, bb160, bb161, bb163, bb164, bb168, bb170, bb171]
  succs [bb200]

bb187
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
      kind: drop(_251) -> [return: bb188, unwind terminate(cleanup)]
  }
  preds [bb138, bb139, bb140, bb141]
  succs [bb188]

bb188
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
      kind: drop(_231) -> [return: bb191, unwind terminate(cleanup)]
  }
  preds [bb134, bb135, bb136, bb137, bb142, bb187]
  succs [bb191]

bb189
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:379:56-379:57)
      kind: drop(_242) -> [return: bb190, unwind terminate(cleanup)]
  }
  preds [bb132]
  succs [bb190]

bb190
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:379:56-379:57)
      kind: drop(_240) -> [return: bb191, unwind terminate(cleanup)]
  }
  preds [bb189]
  succs [bb191]

bb191
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
      kind: drop(_221) -> [return: bb192, unwind terminate(cleanup)]
  }
  preds [bb131, bb133, bb143, bb188, bb190]
  succs [bb192]

bb192
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:384:10-384:11)
      kind: drop(_232) -> [return: bb200, unwind terminate(cleanup)]
  }
  preds [bb144, bb177, bb191]
  succs [bb200]

bb193
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:379:56-379:57)
      kind: drop(_233) -> [return: bb194, unwind terminate(cleanup)]
  }
  preds [bb127]
  succs [bb194]

bb194
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:384:9-384:10)
      kind: drop(_221) -> [return: bb200, unwind terminate(cleanup)]
  }
  preds [bb124, bb125, bb126, bb193]
  succs [bb200]

bb195
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:378:13-378:14)
      kind: drop(_222) -> [return: bb200, unwind terminate(cleanup)]
  }
  preds [bb14, bb121, bb122, bb123]
  succs [bb200]

bb196
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
      kind: drop(_34) -> [return: bb197, unwind terminate(cleanup)]
  }
  preds [bb22]
  succs [bb197]

bb197
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
      kind: drop(_32) -> [return: bb198, unwind terminate(cleanup)]
  }
  preds [bb196]
  succs [bb198]

bb198
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:257:61-257:62)
      kind: drop(_26) -> [return: bb200, unwind terminate(cleanup)]
  }
  preds [bb21, bb23, bb24, bb25, bb197]
  succs [bb200]

bb199
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:257:60-257:61)
      kind: drop(_27) -> [return: bb200, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb200]

bb200
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:403:5-403:6)
      kind: drop(_7) -> [return: bb201, unwind terminate(cleanup)]
  }
  preds [bb5, bb6, bb8, bb9, bb13, bb15, bb16, bb26, bb27, bb28, bb29, bb30, bb32, bb33, bb37, bb38, bb39, bb46, bb47, bb48, bb49, bb53, bb54, bb56, bb57, bb59, bb60, bb61, bb62, bb63, bb65, bb68, bb69, bb70, bb71, bb72, bb73, bb74, bb75, bb76, bb77, bb78, bb80, bb81, bb82, bb83, bb84, bb85, bb86, bb87, bb88, bb89, bb90, bb91, bb92, bb93, bb94, bb95, bb96, bb97, bb98, bb99, bb100, bb102, bb103, bb107, bb109, bb110, bb113, bb114, bb115, bb116, bb117, bb118, bb119, bb173, bb178, bb180, bb186, bb192, bb194, bb195, bb198, bb199]
  succs [bb201]

bb201
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:403:5-403:6)
      kind: drop(_2) -> [return: bb202, unwind terminate(cleanup)]
  }
  preds [bb3, bb4, bb174, bb182, bb200]
  succs [bb202]

bb202
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:226:5-403:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb175, bb183, bb201]
  succs []

