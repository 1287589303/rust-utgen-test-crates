bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:13-320:17)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:20-320:75)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:20-320:74)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:63-320:67)
  4: _6 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:63-320:67)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:69-320:73)
  6: _7 = &(*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:69-320:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:320:20-320:74)
      kind: _5 = meta::literal::alternation_literals(move _6, move _7) -> [return: bb1, unwind: bb38]
  }
  preds []
  succs [bb1, bb38]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:73-320:74)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:73-320:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:320:20-320:75)
      kind: _4 = <core::option::Option<std::vec::Vec<std::vec::Vec<u8>>> as core::ops::Try>::branch(move _5) -> [return: bb2, unwind: bb37]
  }
  preds [bb0]
  succs [bb2, bb37]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:74-320:75)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:20-320:75)
  2: _8 = discriminant(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:20-320:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:320:20-320:75)
      kind: switchInt(move _8) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:20-320:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:320:20-320:75)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:320:74-320:75)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:20-320:75)
  1: _12 = move ((_4 as Continue).0: std::vec::Vec<std::vec::Vec<u8>>)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:20-320:75)
  2: _3 = move _12
    SourceInfo(regex-automata/src/meta/strategy.rs:320:20-320:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:320:74-320:75)
      kind: drop(_12) -> [return: bb8, unwind: bb36]
  }
  preds [bb2, bb4]
  succs [bb8, bb36]

bb6
  0: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:74-320:75)
  1: _9 = ((_4 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:74-320:75)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:74-320:75)
  3: _11 = _9
    SourceInfo(regex-automata/src/meta/strategy.rs:320:74-320:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:320:20-320:75)
      kind: _0 = <core::option::Option<std::sync::Arc<dyn meta::strategy::Strategy>> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _11) -> [return: bb7, unwind: bb36]
  }
  preds [bb4]
  succs [bb7, bb36]

bb7
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:74-320:75)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:74-320:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:320:75-320:76)
      kind: drop(_4) -> [return: bb26, unwind: bb38]
  }
  preds [bb6]
  succs [bb26, bb38]

bb8
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:74-320:75)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:13-320:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:320:75-320:76)
      kind: drop(_4) -> [return: bb9, unwind: bb35]
  }
  preds [bb5]
  succs [bb9, bb35]

bb9
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:75-320:76)
  1: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:13-321:15)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:18-321:68)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:18-321:67)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:35-321:59)
  5: _16 = util::search::MatchKind::LeftmostFirst
    SourceInfo(regex-automata/src/meta/strategy.rs:321:35-321:59)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:61-321:66)
  7: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:61-321:66)
  8: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:61-321:66)
  9: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:61-321:66)
  10: _20 = &_3
    SourceInfo(regex-automata/src/meta/strategy.rs:321:61-321:66)
  11: _19 = &(*_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:61-321:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:321:61-321:66)
      kind: _18 = <std::vec::Vec<std::vec::Vec<u8>> as core::ops::Deref>::deref(move _19) -> [return: bb10, unwind: bb35]
  }
  preds [bb8]
  succs [bb10, bb35]

bb10
  0: _17 = &(*_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:61-321:66)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:65-321:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:321:18-321:67)
      kind: _15 = util::prefilter::aho_corasick::AhoCorasick::new::<std::vec::Vec<u8>>(move _16, move _17) -> [return: bb11, unwind: bb35]
  }
  preds [bb9]
  succs [bb11, bb35]

bb11
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:66-321:67)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:66-321:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:321:18-321:68)
      kind: _14 = <core::option::Option<util::prefilter::aho_corasick::AhoCorasick> as core::ops::Try>::branch(move _15) -> [return: bb12, unwind: bb34]
  }
  preds [bb10]
  succs [bb12, bb34]

bb12
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:67-321:68)
  1: PlaceMention(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:18-321:68)
  2: _21 = discriminant(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:18-321:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:321:18-321:68)
      kind: switchInt(move _21) -> [0: bb15, 1: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:18-321:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:321:18-321:68)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:321:67-321:68)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:18-321:68)
  1: _25 = move ((_14 as Continue).0: util::prefilter::aho_corasick::AhoCorasick)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:18-321:68)
  2: _13 = move _25
    SourceInfo(regex-automata/src/meta/strategy.rs:321:18-321:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:321:67-321:68)
      kind: drop(_25) -> [return: bb18, unwind: bb33]
  }
  preds [bb12, bb14]
  succs [bb18, bb33]

bb16
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:67-321:68)
  1: _22 = ((_14 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:67-321:68)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:67-321:68)
  3: _24 = _22
    SourceInfo(regex-automata/src/meta/strategy.rs:321:67-321:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:321:18-321:68)
      kind: _0 = <core::option::Option<std::sync::Arc<dyn meta::strategy::Strategy>> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _24) -> [return: bb17, unwind: bb33]
  }
  preds [bb14]
  succs [bb17, bb33]

bb17
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:67-321:68)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:67-321:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:321:68-321:69)
      kind: drop(_14) -> [return: bb25, unwind: bb35]
  }
  preds [bb16]
  succs [bb25, bb35]

bb18
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:67-321:68)
  1: FakeRead(ForLet(None), _13)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:13-321:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:321:68-321:69)
      kind: drop(_14) -> [return: bb19, unwind: bb32]
  }
  preds [bb15]
  succs [bb19, bb32]

bb19
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:68-321:69)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:68-321:69)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:68-321:69)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:322:14-322:26)
  4: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:322:14-322:26)
  5: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:322:23-322:25)
  6: _28 = move _13
    SourceInfo(regex-automata/src/meta/strategy.rs:322:23-322:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:322:14-322:26)
      kind: _27 = meta::strategy::Pre::<util::prefilter::aho_corasick::AhoCorasick>::new(move _28) -> [return: bb20, unwind: bb31]
  }
  preds [bb18]
  succs [bb20, bb31]

bb20
  0: _26 = move _27 as std::sync::Arc<dyn meta::strategy::Strategy> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/meta/strategy.rs:322:14-322:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:322:25-322:26)
      kind: drop(_27) -> [return: bb21, unwind: bb29]
  }
  preds [bb19]
  succs [bb21, bb29]

bb21
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:322:25-322:26)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:322:25-322:26)
  2: _0 = core::option::Option::<std::sync::Arc<dyn meta::strategy::Strategy>>::Some(move _26)
    SourceInfo(regex-automata/src/meta/strategy.rs:322:9-322:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:322:26-322:27)
      kind: drop(_26) -> [return: bb22, unwind: bb32]
  }
  preds [bb20]
  succs [bb22, bb32]

bb22
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:322:26-322:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:323:5-323:6)
      kind: drop(_13) -> [return: bb23, unwind: bb35]
  }
  preds [bb21]
  succs [bb23, bb35]

bb23
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:323:5-323:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:323:5-323:6)
      kind: drop(_3) -> [return: bb24, unwind: bb38]
  }
  preds [bb22]
  succs [bb24, bb38]

bb24
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:323:5-323:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:323:6-323:6)
      kind: goto -> bb28
  }
  preds [bb23]
  succs [bb28]

bb25
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:68-321:69)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:68-321:69)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:321:68-321:69)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:323:5-323:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:323:5-323:6)
      kind: drop(_3) -> [return: bb27, unwind: bb38]
  }
  preds [bb17]
  succs [bb27, bb38]

bb26
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:320:75-320:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb27
  }
  preds [bb7]
  succs [bb27]

bb27
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:323:5-323:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:323:6-323:6)
      kind: goto -> bb28
  }
  preds [bb25, bb26]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:323:6-323:6)
      kind: return
  }
  preds [bb24, bb27]
  succs []

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:322:25-322:26)
      kind: drop(_28) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:322:26-322:27)
      kind: drop(_26) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb29]
  succs [bb32]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:322:25-322:26)
      kind: drop(_28) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:323:5-323:6)
      kind: drop(_13) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb18, bb21, bb30, bb31]
  succs [bb35]

bb33
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:321:68-321:69)
      kind: drop(_14) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb15, bb16]
  succs [bb35]

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:321:67-321:68)
      kind: drop(_15) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:323:5-323:6)
      kind: drop(_3) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb8, bb9, bb10, bb17, bb22, bb32, bb33, bb34]
  succs [bb38]

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:320:75-320:76)
      kind: drop(_4) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb5, bb6]
  succs [bb38]

bb37
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:320:74-320:75)
      kind: drop(_5) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:314:5-323:6)
      kind: resume
  }
  preds [bb0, bb7, bb23, bb25, bb35, bb36, bb37]
  succs []

