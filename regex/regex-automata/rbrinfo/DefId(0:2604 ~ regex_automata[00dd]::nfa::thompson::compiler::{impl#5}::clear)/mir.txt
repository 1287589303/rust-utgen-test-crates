bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1756:9-1756:30)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1756:9-1756:22)
  2: _3 = &mut ((*_1).0: nfa::thompson::map::Utf8BoundedMap)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1756:9-1756:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1756:9-1756:30)
      kind: _2 = nfa::thompson::map::Utf8BoundedMap::clear(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1756:29-1756:30)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1756:30-1756:31)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1757:9-1757:32)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1757:9-1757:24)
  4: _5 = &mut ((*_1).1: std::vec::Vec<nfa::thompson::compiler::Utf8Node>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1757:9-1757:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1757:9-1757:32)
      kind: _4 = std::vec::Vec::<nfa::thompson::compiler::Utf8Node>::clear(move _5) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1757:31-1757:32)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1757:32-1757:33)
  2: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1755:25-1758:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1758:6-1758:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1755:5-1758:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

