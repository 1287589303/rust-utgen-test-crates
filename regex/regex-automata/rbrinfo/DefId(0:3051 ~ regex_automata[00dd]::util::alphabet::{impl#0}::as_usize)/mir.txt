bb0
  0: PlaceMention((_1.0: util::alphabet::UnitKind))
    SourceInfo(regex-automata/src/util/alphabet.rs:149:15-149:21)
  1: _2 = discriminant((_1.0: util::alphabet::UnitKind))
    SourceInfo(regex-automata/src/util/alphabet.rs:149:15-149:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:149:9-149:21)
      kind: switchInt(move _2) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), (_1.0: util::alphabet::UnitKind))
    SourceInfo(regex-automata/src/util/alphabet.rs:149:15-149:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:149:15-149:21)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:150:13-150:28)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/util/alphabet.rs:151:27-151:30)
  1: _5 = (((_1.0: util::alphabet::UnitKind) as EOI).0: u16)
    SourceInfo(regex-automata/src/util/alphabet.rs:151:27-151:30)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/util/alphabet.rs:151:47-151:50)
  3: _6 = _5
    SourceInfo(regex-automata/src/util/alphabet.rs:151:47-151:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:151:35-151:51)
      kind: _0 = <usize as core::convert::From<u16>>::from(move _6) -> [return: bb6, unwind: bb8]
  }
  preds [bb0, bb2]
  succs [bb6, bb8]

bb4
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/alphabet.rs:150:26-150:27)
  1: _3 = (((_1.0: util::alphabet::UnitKind) as U8).0: u8)
    SourceInfo(regex-automata/src/util/alphabet.rs:150:26-150:27)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/alphabet.rs:150:44-150:45)
  3: _4 = _3
    SourceInfo(regex-automata/src/util/alphabet.rs:150:44-150:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:150:32-150:46)
      kind: _0 = <usize as core::convert::From<u8>>::from(move _4) -> [return: bb5, unwind: bb8]
  }
  preds [bb2]
  succs [bb5, bb8]

bb5
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/alphabet.rs:150:45-150:46)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/util/alphabet.rs:150:45-150:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:150:45-150:46)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/alphabet.rs:151:50-151:51)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/alphabet.rs:151:50-151:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:151:50-151:51)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:153:6-153:6)
      kind: return
  }
  preds [bb5, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:148:5-153:6)
      kind: resume
  }
  preds [bb3, bb4]
  succs []

