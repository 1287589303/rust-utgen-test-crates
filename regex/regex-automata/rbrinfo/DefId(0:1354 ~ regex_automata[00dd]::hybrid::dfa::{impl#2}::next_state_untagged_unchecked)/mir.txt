bb0
  0: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  1: StorageLive(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  2: _6 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _6) -> [0: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageLive(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1421:24-1421:43)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1421:24-1421:31)
  3: _9 = &_3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1421:24-1421:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1421:24-1421:43)
      kind: _8 = hybrid::id::LazyStateID::is_tagged(move _9) -> [return: bb2, unwind: bb13]
  }
  preds [bb0]
  succs [bb2, bb13]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1421:24-1421:43)
      kind: switchInt(move _8) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1421:42-1421:43)
  1: StorageLive(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _10 = core::panicking::panic(const "assertion failed: !current.is_tagged()") -> bb13
  }
  preds [bb2]
  succs [bb13]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1421:42-1421:43)
  1: _7 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _5 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb6
  }
  preds [bb2]
  succs [bb6]

bb5
  0: _5 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb6
  }
  preds [bb0]
  succs [bb6]

bb6
  0: StorageDead(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1422:13-1422:18)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1422:33-1422:56)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1422:33-1422:45)
  5: _13 = &((*_1).4: util::alphabet::ByteClasses)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1422:33-1422:45)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1422:50-1422:55)
  7: _14 = _4
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1422:50-1422:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1422:33-1422:56)
      kind: _12 = util::alphabet::ByteClasses::get(move _13, move _14) -> [return: bb7, unwind: bb13]
  }
  preds [bb4, bb5]
  succs [bb7, bb13]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1422:55-1422:56)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1422:55-1422:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1422:21-1422:57)
      kind: _11 = <usize as core::convert::From<u8>>::from(move _12) -> [return: bb8, unwind: bb13]
  }
  preds [bb6]
  succs [bb8, bb13]

bb8
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1422:56-1422:57)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1422:13-1422:18)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1423:13-1423:19)
  3: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1423:22-1423:50)
  4: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1423:22-1423:29)
  5: _17 = &_3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1423:22-1423:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1423:22-1423:50)
      kind: _16 = hybrid::id::LazyStateID::as_usize_unchecked(move _17) -> [return: bb9, unwind: bb13]
  }
  preds [bb7]
  succs [bb9, bb13]

bb9
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1423:49-1423:50)
  1: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1423:53-1423:58)
  2: _18 = _11
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1423:53-1423:58)
  3: _19 = AddWithOverflow(_16, _18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1423:22-1423:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1423:22-1423:58)
      kind: assert(!move (_19.1: bool), "attempt to compute `{} + {}`, which would overflow", move _16, move _18) -> [success: bb10, unwind: bb13]
  }
  preds [bb8]
  succs [bb10, bb13]

bb10
  0: _15 = move (_19.0: usize)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1423:22-1423:58)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1423:57-1423:58)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1423:57-1423:58)
  3: FakeRead(ForLet(None), _15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1423:13-1423:19)
  4: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1424:10-1424:43)
  5: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1424:10-1424:21)
  6: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1424:10-1424:43)
  7: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1424:10-1424:21)
  8: _23 = &((*_2).0: std::vec::Vec<hybrid::id::LazyStateID>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1424:10-1424:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1424:10-1424:43)
      kind: _22 = <std::vec::Vec<hybrid::id::LazyStateID> as core::ops::Deref>::deref(move _23) -> [return: bb11, unwind: bb13]
  }
  preds [bb9]
  succs [bb11, bb13]

bb11
  0: _21 = &(*_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1424:10-1424:21)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1424:20-1424:21)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1424:36-1424:42)
  3: _24 = _15
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1424:36-1424:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1424:10-1424:43)
      kind: _20 = core::slice::<impl [hybrid::id::LazyStateID]>::get_unchecked::<usize>(move _21, move _24) -> [return: bb12, unwind: bb13]
  }
  preds [bb10]
  succs [bb12, bb13]

bb12
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1424:42-1424:43)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1424:42-1424:43)
  2: _0 = (*_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1424:9-1424:43)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1425:5-1425:6)
  4: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1425:5-1425:6)
  5: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1425:5-1425:6)
  6: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1425:5-1425:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1425:6-1425:6)
      kind: return
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1415:5-1425:6)
      kind: resume
  }
  preds [bb1, bb3, bb6, bb7, bb8, bb9, bb10, bb11]
  succs []

