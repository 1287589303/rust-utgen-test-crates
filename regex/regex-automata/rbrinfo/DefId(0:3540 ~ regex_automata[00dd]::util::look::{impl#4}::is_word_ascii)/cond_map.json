{
  "regex-automata/src/util/look.rs:986:37:986:73": [
    {
      "Bool": {
        "Other": "utf8::is_word_byte(haystack[at - 1])"
      }
    }
  ],
  "regex-automata/src/util/look.rs:988:13:988:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "at < haystack.len()",
          "lhs": "at",
          "rhs": "haystack.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:986:27:986:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "at > 0",
          "lhs": "at",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:989:9:989:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "word_before != word_after",
          "lhs": "word_before",
          "rhs": "word_after",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:986:65:986:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "at - 1",
          "lhs": "at",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:988:36:988:68": [
    {
      "Bool": {
        "Other": "utf8::is_word_byte(haystack[at])"
      }
    }
  ]
}