bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/captures.rs:216:13-216:18)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/captures.rs:216:21-216:31)
  2: _3 = &_1
    SourceInfo(regex-automata/src/util/captures.rs:216:21-216:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:216:21-216:42)
      kind: _2 = util::captures::GroupInfo::slot_len(move _3) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/captures.rs:216:41-216:42)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/util/captures.rs:216:13-216:18)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/captures.rs:217:20-217:30)
  3: _4 = move _1
    SourceInfo(regex-automata/src/util/captures.rs:217:20-217:30)
  4: StorageLive(_5)
    SourceInfo(regex-automata/src/util/captures.rs:217:37-217:41)
  5: _5 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/util/captures.rs:217:37-217:41)
  6: StorageLive(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
  7: StorageLive(_7)
    SourceInfo(regex-automata/src/util/captures.rs:217:55-217:59)
  8: _7 = core::option::Option::<util::primitives::NonMaxUsize>::None
    SourceInfo(regex-automata/src/util/captures.rs:217:55-217:59)
  9: StorageLive(_8)
    SourceInfo(regex-automata/src/util/captures.rs:217:61-217:66)
  10: _8 = _2
    SourceInfo(regex-automata/src/util/captures.rs:217:61-217:66)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
      kind: _6 = std::vec::from_elem::<core::option::Option<util::primitives::NonMaxUsize>>(move _7, move _8) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  1: StorageDead(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  2: _0 = util::captures::Captures { group_info: move _4, pid: move _5, slots: move _6 }
    SourceInfo(regex-automata/src/util/captures.rs:217:9-217:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:217:68-217:69)
      kind: drop(_6) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/captures.rs:217:68-217:69)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/captures.rs:217:68-217:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:217:68-217:69)
      kind: drop(_4) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/captures.rs:217:68-217:69)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/util/captures.rs:218:5-218:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:218:5-218:6)
      kind: drop(_1) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:218:6-218:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:217:68-217:69)
      kind: drop(_4) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb1, bb2]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:218:5-218:6)
      kind: drop(_1) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb0, bb3, bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:215:5-218:6)
      kind: resume
  }
  preds [bb4, bb7]
  succs []

