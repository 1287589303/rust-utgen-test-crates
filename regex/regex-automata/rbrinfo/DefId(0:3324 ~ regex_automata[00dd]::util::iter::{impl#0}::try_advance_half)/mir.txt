bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/iter.rs:403:13-403:18)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:46)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:33)
  5: _7 = &mut _2
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:33)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:46)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/util/iter.rs:403:34-403:45)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/util/iter.rs:403:34-403:45)
  9: _10 = &((*_1).0: util::search::Input<'_>)
    SourceInfo(regex-automata/src/util/iter.rs:403:34-403:45)
  10: _9 = &(*_10)
    SourceInfo(regex-automata/src/util/iter.rs:403:34-403:45)
  11: _8 = (move _9,)
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:403:27-403:46)
      kind: _6 = <F as core::ops::FnMut<(&util::search::Input<'_>,)>>::call_mut(move _7, move _8) -> [return: bb1, unwind: bb50]
  }
  preds []
  succs [bb1, bb50]

bb1
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/iter.rs:403:45-403:46)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/iter.rs:403:45-403:46)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/util/iter.rs:403:45-403:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
      kind: _5 = <core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError> as core::ops::Try>::branch(move _6) -> [return: bb2, unwind: bb49]
  }
  preds [bb0]
  succs [bb2, bb49]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/iter.rs:403:46-403:47)
  1: PlaceMention(_5)
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
  2: _11 = discriminant(_5)
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
      kind: switchInt(move _11) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:403:46-403:47)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
  1: _15 = ((_5 as Continue).0: core::option::Option<util::search::HalfMatch>)
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
  2: _4 = _15
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/util/iter.rs:403:46-403:47)
  4: PlaceMention(_4)
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
  5: _16 = discriminant(_4)
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:403:21-403:47)
      kind: switchInt(move _16) -> [0: bb9, 1: bb10, otherwise: bb8]
  }
  preds [bb2, bb4]
  succs [bb8, bb9, bb10]

bb6
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/util/iter.rs:403:46-403:47)
  1: _12 = move ((_5 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/util/iter.rs:403:46-403:47)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/util/iter.rs:403:46-403:47)
  3: _14 = move _12
    SourceInfo(regex-automata/src/util/iter.rs:403:46-403:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
      kind: _0 = <core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _14) -> [return: bb7, unwind: bb46]
  }
  preds [bb4]
  succs [bb7, bb46]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/util/iter.rs:403:46-403:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:403:46-403:47)
      kind: drop(_12) -> [return: bb36, unwind: bb48]
  }
  preds [bb6]
  succs [bb36, bb48]

bb8
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:403:27-403:47)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:404:13-404:17)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb5]
  succs [bb10, bb11]

bb10
  0: StorageLive(_19)
    SourceInfo(regex-automata/src/util/iter.rs:405:18-405:19)
  1: _19 = ((_4 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/util/iter.rs:405:18-405:19)
  2: _3 = _19
    SourceInfo(regex-automata/src/util/iter.rs:405:24-405:25)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/util/iter.rs:405:24-405:25)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/iter.rs:403:13-403:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:406:10-406:11)
      kind: drop(_5) -> [return: bb12, unwind: bb50]
  }
  preds [bb5, bb9]
  succs [bb12, bb50]

bb11
  0: StorageLive(_18)
    SourceInfo(regex-automata/src/util/iter.rs:404:31-404:35)
  1: _18 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/util/iter.rs:404:31-404:35)
  2: _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::Ok(move _18)
    SourceInfo(regex-automata/src/util/iter.rs:404:28-404:36)
  3: StorageDead(_18)
    SourceInfo(regex-automata/src/util/iter.rs:404:35-404:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:404:21-404:36)
      kind: goto -> bb37
  }
  preds [bb9]
  succs [bb37]

bb12
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/iter.rs:406:10-406:11)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/iter.rs:406:10-406:11)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/iter.rs:406:10-406:11)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/util/iter.rs:407:9-412:10)
  4: StorageLive(_21)
    SourceInfo(regex-automata/src/util/iter.rs:407:12-407:51)
  5: StorageLive(_22)
    SourceInfo(regex-automata/src/util/iter.rs:407:12-407:28)
  6: StorageLive(_23)
    SourceInfo(regex-automata/src/util/iter.rs:407:12-407:28)
  7: StorageLive(_24)
    SourceInfo(regex-automata/src/util/iter.rs:407:17-407:27)
  8: StorageLive(_25)
    SourceInfo(regex-automata/src/util/iter.rs:407:17-407:18)
  9: _25 = &_3
    SourceInfo(regex-automata/src/util/iter.rs:407:17-407:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:407:17-407:27)
      kind: _24 = util::search::HalfMatch::offset(move _25) -> [return: bb13, unwind: bb50]
  }
  preds [bb10]
  succs [bb13, bb50]

bb13
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/util/iter.rs:407:26-407:27)
  1: _23 = core::option::Option::<usize>::Some(move _24)
    SourceInfo(regex-automata/src/util/iter.rs:407:12-407:28)
  2: _22 = &_23
    SourceInfo(regex-automata/src/util/iter.rs:407:12-407:28)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/util/iter.rs:407:27-407:28)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/util/iter.rs:407:32-407:51)
  5: _26 = &((*_1).1: core::option::Option<usize>)
    SourceInfo(regex-automata/src/util/iter.rs:407:32-407:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:407:12-407:51)
      kind: _21 = <core::option::Option<usize> as core::cmp::PartialEq>::eq(move _22, move _26) -> [return: bb14, unwind: bb50]
  }
  preds [bb12]
  succs [bb14, bb50]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:407:12-407:51)
      kind: switchInt(move _21) -> [0: bb28, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb28]

bb15
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/util/iter.rs:407:50-407:51)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/util/iter.rs:407:50-407:51)
  2: StorageDead(_22)
    SourceInfo(regex-automata/src/util/iter.rs:407:50-407:51)
  3: StorageLive(_27)
    SourceInfo(regex-automata/src/util/iter.rs:408:17-411:14)
  4: StorageLive(_28)
    SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
  5: StorageLive(_29)
    SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
  6: StorageLive(_30)
    SourceInfo(regex-automata/src/util/iter.rs:408:23-408:74)
  7: StorageLive(_31)
    SourceInfo(regex-automata/src/util/iter.rs:408:23-408:27)
  8: _31 = &mut (*_1)
    SourceInfo(regex-automata/src/util/iter.rs:408:23-408:27)
  9: StorageLive(_32)
    SourceInfo(regex-automata/src/util/iter.rs:408:64-408:65)
  10: _32 = _3
    SourceInfo(regex-automata/src/util/iter.rs:408:64-408:65)
  11: StorageLive(_33)
    SourceInfo(regex-automata/src/util/iter.rs:408:67-408:73)
  12: _33 = move _2
    SourceInfo(regex-automata/src/util/iter.rs:408:67-408:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:408:23-408:74)
      kind: _30 = util::iter::Searcher::<'_>::handle_overlapping_empty_half_match::<F>(move _31, move _32, move _33) -> [return: bb16, unwind: bb45]
  }
  preds [bb14]
  succs [bb16, bb45]

bb16
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/util/iter.rs:408:73-408:74)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/util/iter.rs:408:73-408:74)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/util/iter.rs:408:73-408:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
      kind: _29 = <core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError> as core::ops::Try>::branch(move _30) -> [return: bb17, unwind: bb44]
  }
  preds [bb15]
  succs [bb17, bb44]

bb17
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/util/iter.rs:408:74-408:75)
  1: PlaceMention(_29)
    SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
  2: _34 = discriminant(_29)
    SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
      kind: switchInt(move _34) -> [0: bb20, 1: bb19, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19, bb20]

bb18
  0: FakeRead(ForMatchedPlace(None), _29)
    SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
      kind: unreachable
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:408:74-408:75)
      kind: falseEdge -> [real: bb21, imaginary: bb20]
  }
  preds [bb17]
  succs [bb20, bb21]

bb20
  0: StorageLive(_38)
    SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
  1: _38 = ((_29 as Continue).0: core::option::Option<util::search::HalfMatch>)
    SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
  2: _28 = _38
    SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
  3: StorageDead(_38)
    SourceInfo(regex-automata/src/util/iter.rs:408:74-408:75)
  4: PlaceMention(_28)
    SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
  5: _39 = discriminant(_28)
    SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:408:17-408:75)
      kind: switchInt(move _39) -> [0: bb24, 1: bb25, otherwise: bb23]
  }
  preds [bb17, bb19]
  succs [bb23, bb24, bb25]

bb21
  0: StorageLive(_35)
    SourceInfo(regex-automata/src/util/iter.rs:408:74-408:75)
  1: _35 = move ((_29 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/util/iter.rs:408:74-408:75)
  2: StorageLive(_37)
    SourceInfo(regex-automata/src/util/iter.rs:408:74-408:75)
  3: _37 = move _35
    SourceInfo(regex-automata/src/util/iter.rs:408:74-408:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
      kind: _0 = <core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _37) -> [return: bb22, unwind: bb41]
  }
  preds [bb19]
  succs [bb22, bb41]

bb22
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/util/iter.rs:408:74-408:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:408:74-408:75)
      kind: drop(_35) -> [return: bb33, unwind: bb43]
  }
  preds [bb21]
  succs [bb33, bb43]

bb23
  0: FakeRead(ForMatchedPlace(None), _28)
    SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:408:23-408:75)
      kind: unreachable
  }
  preds [bb20]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:409:17-409:21)
      kind: falseEdge -> [real: bb26, imaginary: bb25]
  }
  preds [bb20]
  succs [bb25, bb26]

bb25
  0: StorageLive(_42)
    SourceInfo(regex-automata/src/util/iter.rs:410:22-410:23)
  1: _42 = ((_28 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/util/iter.rs:410:22-410:23)
  2: _27 = _42
    SourceInfo(regex-automata/src/util/iter.rs:410:28-410:29)
  3: StorageDead(_42)
    SourceInfo(regex-automata/src/util/iter.rs:410:28-410:29)
  4: _3 = move _27
    SourceInfo(regex-automata/src/util/iter.rs:408:13-411:14)
  5: StorageDead(_27)
    SourceInfo(regex-automata/src/util/iter.rs:411:13-411:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:411:14-411:15)
      kind: drop(_29) -> [return: bb27, unwind: bb50]
  }
  preds [bb20, bb24]
  succs [bb27, bb50]

bb26
  0: StorageLive(_41)
    SourceInfo(regex-automata/src/util/iter.rs:409:35-409:39)
  1: _41 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/util/iter.rs:409:35-409:39)
  2: _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::Ok(move _41)
    SourceInfo(regex-automata/src/util/iter.rs:409:32-409:40)
  3: StorageDead(_41)
    SourceInfo(regex-automata/src/util/iter.rs:409:39-409:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:409:25-409:40)
      kind: goto -> bb34
  }
  preds [bb24]
  succs [bb34]

bb27
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/util/iter.rs:411:14-411:15)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/util/iter.rs:411:14-411:15)
  2: _20 = const ()
    SourceInfo(regex-automata/src/util/iter.rs:407:52-412:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:407:9-412:10)
      kind: goto -> bb29
  }
  preds [bb25]
  succs [bb29]

bb28
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/util/iter.rs:407:50-407:51)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/util/iter.rs:407:50-407:51)
  2: StorageDead(_22)
    SourceInfo(regex-automata/src/util/iter.rs:407:50-407:51)
  3: _20 = const ()
    SourceInfo(regex-automata/src/util/iter.rs:412:10-412:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:407:9-412:10)
      kind: goto -> bb29
  }
  preds [bb14]
  succs [bb29]

bb29
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/util/iter.rs:412:9-412:10)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/util/iter.rs:412:9-412:10)
  2: StorageLive(_43)
    SourceInfo(regex-automata/src/util/iter.rs:413:9-413:41)
  3: StorageLive(_44)
    SourceInfo(regex-automata/src/util/iter.rs:413:9-413:19)
  4: _44 = &mut ((*_1).0: util::search::Input<'_>)
    SourceInfo(regex-automata/src/util/iter.rs:413:9-413:19)
  5: StorageLive(_45)
    SourceInfo(regex-automata/src/util/iter.rs:413:30-413:40)
  6: StorageLive(_46)
    SourceInfo(regex-automata/src/util/iter.rs:413:30-413:31)
  7: _46 = &_3
    SourceInfo(regex-automata/src/util/iter.rs:413:30-413:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:413:30-413:40)
      kind: _45 = util::search::HalfMatch::offset(move _46) -> [return: bb30, unwind: bb50]
  }
  preds [bb27, bb28]
  succs [bb30, bb50]

bb30
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/util/iter.rs:413:39-413:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:413:9-413:41)
      kind: _43 = util::search::Input::<'_>::set_start(move _44, move _45) -> [return: bb31, unwind: bb50]
  }
  preds [bb29]
  succs [bb31, bb50]

bb31
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/util/iter.rs:413:40-413:41)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/util/iter.rs:413:40-413:41)
  2: StorageDead(_43)
    SourceInfo(regex-automata/src/util/iter.rs:413:41-413:42)
  3: StorageLive(_47)
    SourceInfo(regex-automata/src/util/iter.rs:414:31-414:47)
  4: StorageLive(_48)
    SourceInfo(regex-automata/src/util/iter.rs:414:36-414:46)
  5: StorageLive(_49)
    SourceInfo(regex-automata/src/util/iter.rs:414:36-414:37)
  6: _49 = &_3
    SourceInfo(regex-automata/src/util/iter.rs:414:36-414:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:414:36-414:46)
      kind: _48 = util::search::HalfMatch::offset(move _49) -> [return: bb32, unwind: bb50]
  }
  preds [bb30]
  succs [bb32, bb50]

bb32
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/util/iter.rs:414:45-414:46)
  1: _47 = core::option::Option::<usize>::Some(move _48)
    SourceInfo(regex-automata/src/util/iter.rs:414:31-414:47)
  2: StorageDead(_48)
    SourceInfo(regex-automata/src/util/iter.rs:414:46-414:47)
  3: ((*_1).1: core::option::Option<usize>) = move _47
    SourceInfo(regex-automata/src/util/iter.rs:414:9-414:47)
  4: StorageDead(_47)
    SourceInfo(regex-automata/src/util/iter.rs:414:46-414:47)
  5: StorageLive(_50)
    SourceInfo(regex-automata/src/util/iter.rs:415:12-415:19)
  6: StorageLive(_51)
    SourceInfo(regex-automata/src/util/iter.rs:415:17-415:18)
  7: _51 = _3
    SourceInfo(regex-automata/src/util/iter.rs:415:17-415:18)
  8: _50 = core::option::Option::<util::search::HalfMatch>::Some(move _51)
    SourceInfo(regex-automata/src/util/iter.rs:415:12-415:19)
  9: StorageDead(_51)
    SourceInfo(regex-automata/src/util/iter.rs:415:18-415:19)
  10: _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::Ok(move _50)
    SourceInfo(regex-automata/src/util/iter.rs:415:9-415:20)
  11: StorageDead(_50)
    SourceInfo(regex-automata/src/util/iter.rs:415:19-415:20)
  12: StorageDead(_3)
    SourceInfo(regex-automata/src/util/iter.rs:416:5-416:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:416:5-416:6)
      kind: drop(_2) -> [return: bb40, unwind: bb51]
  }
  preds [bb31]
  succs [bb40, bb51]

bb33
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/util/iter.rs:408:74-408:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb34
  }
  preds [bb22]
  succs [bb34]

bb34
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/util/iter.rs:411:13-411:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:411:14-411:15)
      kind: drop(_29) -> [return: bb35, unwind: bb50]
  }
  preds [bb26, bb33]
  succs [bb35, bb50]

bb35
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/util/iter.rs:411:14-411:15)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/util/iter.rs:411:14-411:15)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/util/iter.rs:412:9-412:10)
  3: StorageDead(_20)
    SourceInfo(regex-automata/src/util/iter.rs:412:9-412:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb39
  }
  preds [bb34]
  succs [bb39]

bb36
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/iter.rs:403:46-403:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb37
  }
  preds [bb7]
  succs [bb37]

bb37
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:406:10-406:11)
      kind: drop(_5) -> [return: bb38, unwind: bb50]
  }
  preds [bb11, bb36]
  succs [bb38, bb50]

bb38
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/iter.rs:406:10-406:11)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/iter.rs:406:10-406:11)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/iter.rs:406:10-406:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb39
  }
  preds [bb37]
  succs [bb39]

bb39
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/iter.rs:416:5-416:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:416:5-416:6)
      kind: drop(_2) -> [return: bb40, unwind: bb51]
  }
  preds [bb35, bb38]
  succs [bb40, bb51]

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:416:6-416:6)
      kind: return
  }
  preds [bb32, bb39]
  succs []

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:408:74-408:75)
      kind: drop(_37) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb21]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:408:74-408:75)
      kind: drop(_35) -> [return: bb43, unwind terminate(cleanup)]
  }
  preds [bb41]
  succs [bb43]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:411:14-411:15)
      kind: drop(_29) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb22, bb42]
  succs [bb50]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:408:74-408:75)
      kind: drop(_30) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb16]
  succs [bb50]

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:408:73-408:74)
      kind: drop(_33) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb50]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:403:46-403:47)
      kind: drop(_14) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:403:46-403:47)
      kind: drop(_12) -> [return: bb48, unwind terminate(cleanup)]
  }
  preds [bb46]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:406:10-406:11)
      kind: drop(_5) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb7, bb47]
  succs [bb50]

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:403:46-403:47)
      kind: drop(_6) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb50]

bb50
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:416:5-416:6)
      kind: drop(_2) -> [return: bb51, unwind terminate(cleanup)]
  }
  preds [bb0, bb10, bb12, bb13, bb25, bb29, bb30, bb31, bb34, bb37, bb43, bb44, bb45, bb48, bb49]
  succs [bb51]

bb51
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:396:5-416:6)
      kind: resume
  }
  preds [bb32, bb39, bb50]
  succs []

