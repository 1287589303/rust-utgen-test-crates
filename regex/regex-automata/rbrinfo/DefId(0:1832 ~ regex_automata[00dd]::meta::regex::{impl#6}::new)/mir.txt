bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1926:13-1926:22)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _3 = std::vec::Vec::<regex_syntax::hir::Properties>::new() -> [return: bb1, unwind: bb29]
  }
  preds []
  succs [bb1, bb29]

bb1
  0: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/meta/regex.rs:1926:13-1926:22)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:9-1929:10)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:24)
  5: _7 = &(*_2)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
      kind: _6 = core::slice::<impl [&regex_syntax::hir::Hir]>::iter(move _7) -> [return: bb2, unwind: bb28]
  }
  preds [bb0]
  succs [bb2, bb28]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:30-1927:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
      kind: _5 = <core::slice::Iter<'_, &regex_syntax::hir::Hir> as core::iter::IntoIterator>::into_iter(move _6) -> [return: bb3, unwind: bb28]
  }
  preds [bb1]
  succs [bb3, bb28]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:30-1927:31)
  1: PlaceMention(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
  3: _8 = move _5
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1927:9-1929:10)
      kind: goto -> bb4
  }
  preds [bb2]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1927:9-1929:10)
      kind: falseUnwind -> [real: bb5, unwind: bb28]
  }
  preds [bb3, bb13]
  succs [bb5, bb28]

bb5
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
  4: _13 = &mut _8
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
  5: _12 = &mut (*_13)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
      kind: _11 = <core::slice::Iter<'_, &regex_syntax::hir::Hir> as core::iter::Iterator>::next(move _12) -> [return: bb6, unwind: bb28]
  }
  preds [bb4]
  succs [bb6, bb28]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:30-1927:31)
  1: PlaceMention(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
  2: _14 = discriminant(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
      kind: switchInt(move _14) -> [0: bb8, 1: bb9, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _11)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1927:20-1927:31)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1927:9-1929:10)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:13-1927:16)
  1: _16 = ((_11 as Some).0: &&regex_syntax::hir::Hir)
    SourceInfo(regex-automata/src/meta/regex.rs:1927:13-1927:16)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:1928:13-1928:49)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/regex.rs:1928:13-1928:18)
  4: _18 = &mut _3
    SourceInfo(regex-automata/src/meta/regex.rs:1928:13-1928:18)
  5: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/regex.rs:1928:24-1928:48)
  6: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/regex.rs:1928:24-1928:40)
  7: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/regex.rs:1928:24-1928:40)
  8: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/regex.rs:1928:24-1928:27)
  9: _22 = &(*(*_16))
    SourceInfo(regex-automata/src/meta/regex.rs:1928:24-1928:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1928:24-1928:40)
      kind: _21 = regex_syntax::hir::Hir::properties(move _22) -> [return: bb11, unwind: bb28]
  }
  preds [bb6, bb8]
  succs [bb11, bb28]

bb10
  0: _4 = const ()
    SourceInfo(regex-automata/src/meta/regex.rs:1927:9-1929:10)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:1929:9-1929:10)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:1929:9-1929:10)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:1929:9-1929:10)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:1929:9-1929:10)
  5: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1929:9-1929:10)
  6: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1929:9-1929:10)
  7: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/regex.rs:1930:13-1930:24)
  8: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/regex.rs:1930:50-1930:56)
  9: _24 = &_3
    SourceInfo(regex-automata/src/meta/regex.rs:1930:50-1930:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1930:27-1930:57)
      kind: _23 = regex_syntax::hir::Properties::union::<&std::vec::Vec<regex_syntax::hir::Properties>, &regex_syntax::hir::Properties>(move _24) -> [return: bb14, unwind: bb28]
  }
  preds [bb8]
  succs [bb14, bb28]

bb11
  0: _20 = &(*_21)
    SourceInfo(regex-automata/src/meta/regex.rs:1928:24-1928:40)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/regex.rs:1928:39-1928:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1928:24-1928:48)
      kind: _19 = <regex_syntax::hir::Properties as core::clone::Clone>::clone(move _20) -> [return: bb12, unwind: bb28]
  }
  preds [bb9]
  succs [bb12, bb28]

bb12
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/regex.rs:1928:47-1928:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1928:13-1928:49)
      kind: _17 = std::vec::Vec::<regex_syntax::hir::Properties>::push(move _18, move _19) -> [return: bb13, unwind: bb27]
  }
  preds [bb11]
  succs [bb13, bb27]

bb13
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/regex.rs:1928:48-1928:49)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/regex.rs:1928:48-1928:49)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/regex.rs:1928:49-1928:50)
  3: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:1928:49-1928:50)
  4: _10 = const ()
    SourceInfo(regex-automata/src/meta/regex.rs:1927:32-1929:10)
  5: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:1929:9-1929:10)
  6: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:1929:9-1929:10)
  7: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:1929:9-1929:10)
  8: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:1929:9-1929:10)
  9: _9 = const ()
    SourceInfo(regex-automata/src/meta/regex.rs:1927:9-1929:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1927:9-1929:10)
      kind: goto -> bb4
  }
  preds [bb12]
  succs [bb4]

bb14
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/regex.rs:1930:56-1930:57)
  1: FakeRead(ForLet(None), _23)
    SourceInfo(regex-automata/src/meta/regex.rs:1930:13-1930:24)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/regex.rs:1932:19-1932:70)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/regex.rs:1932:28-1932:69)
  4: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/regex.rs:1932:41-1932:47)
  5: _27 = move _1
    SourceInfo(regex-automata/src/meta/regex.rs:1932:41-1932:47)
  6: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/regex.rs:1932:49-1932:54)
  7: _28 = move _3
    SourceInfo(regex-automata/src/meta/regex.rs:1932:49-1932:54)
  8: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/regex.rs:1932:56-1932:67)
  9: _29 = move _23
    SourceInfo(regex-automata/src/meta/regex.rs:1932:56-1932:67)
  10: _26 = meta::regex::RegexInfoI { config: move _27, props: move _28, props_union: move _29 }
    SourceInfo(regex-automata/src/meta/regex.rs:1932:28-1932:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1932:68-1932:69)
      kind: drop(_29) -> [return: bb15, unwind: bb23]
  }
  preds [bb10]
  succs [bb15, bb23]

bb15
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/regex.rs:1932:68-1932:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1932:68-1932:69)
      kind: drop(_28) -> [return: bb16, unwind: bb24]
  }
  preds [bb14]
  succs [bb16, bb24]

bb16
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/regex.rs:1932:68-1932:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1932:68-1932:69)
      kind: drop(_27) -> [return: bb17, unwind: bb25]
  }
  preds [bb15]
  succs [bb17, bb25]

bb17
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/regex.rs:1932:68-1932:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1932:19-1932:70)
      kind: _25 = std::sync::Arc::<meta::regex::RegexInfoI>::new(move _26) -> [return: bb18, unwind: bb25]
  }
  preds [bb16]
  succs [bb18, bb25]

bb18
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/regex.rs:1932:69-1932:70)
  1: _0 = meta::regex::RegexInfo(move _25)
    SourceInfo(regex-automata/src/meta/regex.rs:1932:9-1932:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1932:70-1932:71)
      kind: drop(_25) -> [return: bb19, unwind: bb26]
  }
  preds [bb17]
  succs [bb19, bb26]

bb19
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/regex.rs:1932:70-1932:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1933:5-1933:6)
      kind: drop(_23) -> [return: bb20, unwind: bb28]
  }
  preds [bb18]
  succs [bb20, bb28]

bb20
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/regex.rs:1933:5-1933:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1933:5-1933:6)
      kind: drop(_3) -> [return: bb21, unwind: bb29]
  }
  preds [bb19]
  succs [bb21, bb29]

bb21
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1933:5-1933:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1933:5-1933:6)
      kind: drop(_1) -> [return: bb22, unwind: bb30]
  }
  preds [bb20]
  succs [bb22, bb30]

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1933:6-1933:6)
      kind: return
  }
  preds [bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1932:68-1932:69)
      kind: drop(_28) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1932:68-1932:69)
      kind: drop(_27) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb15, bb23]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1932:69-1932:70)
      kind: drop(_26) -> [return: bb26, unwind terminate(cleanup)]
  }
  preds [bb16, bb17, bb24]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1933:5-1933:6)
      kind: drop(_23) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb18, bb25]
  succs [bb28]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1928:48-1928:49)
      kind: drop(_19) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1933:5-1933:6)
      kind: drop(_3) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb4, bb5, bb9, bb10, bb11, bb19, bb26, bb27]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1933:5-1933:6)
      kind: drop(_1) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb0, bb20, bb28]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1922:5-1933:6)
      kind: resume
  }
  preds [bb21, bb29]
  succs []

