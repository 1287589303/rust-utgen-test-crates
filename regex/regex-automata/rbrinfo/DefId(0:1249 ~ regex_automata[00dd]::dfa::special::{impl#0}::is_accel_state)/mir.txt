bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/special.rs:446:10-446:32)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/special.rs:446:10-446:14)
  2: _4 = &(*_1)
    SourceInfo(regex-automata/src/dfa/special.rs:446:10-446:14)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/special.rs:446:29-446:31)
  4: _5 = _2
    SourceInfo(regex-automata/src/dfa/special.rs:446:29-446:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:446:10-446:32)
      kind: _3 = dfa::special::Special::is_dead_state(move _4, move _5) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:446:10-446:32)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/special.rs:446:31-446:32)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/special.rs:446:31-446:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:446:9-446:80)
      kind: goto -> bb7
  }
  preds [bb1]
  succs [bb7]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/special.rs:446:31-446:32)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/special.rs:446:31-446:32)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/special.rs:446:36-446:56)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/special.rs:446:36-446:50)
  4: _7 = &((*_1).4: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:446:36-446:50)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/special.rs:446:54-446:56)
  6: _8 = &_2
    SourceInfo(regex-automata/src/dfa/special.rs:446:54-446:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:446:36-446:56)
      kind: _6 = <util::primitives::StateID as core::cmp::PartialOrd>::le(move _7, move _8) -> [return: bb4, unwind: bb10]
  }
  preds [bb1]
  succs [bb4, bb10]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:446:36-446:56)
      kind: switchInt(move _6) -> [0: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/special.rs:446:55-446:56)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/special.rs:446:55-446:56)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/special.rs:446:60-446:62)
  3: _9 = &_2
    SourceInfo(regex-automata/src/dfa/special.rs:446:60-446:62)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/special.rs:446:66-446:80)
  5: _10 = &((*_1).5: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:446:66-446:80)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:446:60-446:80)
      kind: _0 = <util::primitives::StateID as core::cmp::PartialOrd>::le(move _9, move _10) -> [return: bb8, unwind: bb10]
  }
  preds [bb4]
  succs [bb8, bb10]

bb6
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/special.rs:446:55-446:56)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/special.rs:446:55-446:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb7
  0: _0 = const false
    SourceInfo(regex-automata/src/dfa/special.rs:446:9-446:80)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:446:9-446:80)
      kind: goto -> bb9
  }
  preds [bb2, bb6]
  succs [bb9]

bb8
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/special.rs:446:79-446:80)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/special.rs:446:79-446:80)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:446:9-446:80)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb9
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/special.rs:446:79-446:80)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/special.rs:446:79-446:80)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:447:6-447:6)
      kind: return
  }
  preds [bb7, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:445:5-447:6)
      kind: resume
  }
  preds [bb0, bb3, bb5]
  succs []

