bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/special.rs:264:9-266:10)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/special.rs:264:12-264:34)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/special.rs:264:12-264:26)
  3: _4 = &((*_1).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:264:12-264:26)
  4: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/special.rs:264:30-264:34)
  5: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/special.rs:264:30-264:34)
  6: _6 = const dfa::DEAD
    SourceInfo(regex-automata/src/dfa/special.rs:264:30-264:34)
  7: _5 = &_6
    SourceInfo(regex-automata/src/dfa/special.rs:264:30-264:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:264:12-264:34)
      kind: _3 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _4, move _5) -> [return: bb1, unwind: bb135]
  }
  preds []
  succs [bb1, bb135]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:264:12-264:34)
      kind: switchInt(move _3) -> [0: bb7, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/special.rs:264:33-264:34)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/special.rs:264:33-264:34)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/special.rs:264:33-264:34)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/special.rs:264:38-264:60)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/special.rs:264:38-264:52)
  5: _8 = &((*_1).3: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:264:38-264:52)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/special.rs:264:56-264:60)
  7: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/special.rs:264:56-264:60)
  8: _10 = const dfa::DEAD
    SourceInfo(regex-automata/src/dfa/special.rs:264:56-264:60)
  9: _9 = &_10
    SourceInfo(regex-automata/src/dfa/special.rs:264:56-264:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:264:38-264:60)
      kind: _7 = <util::primitives::StateID as core::cmp::PartialEq>::ne(move _8, move _9) -> [return: bb3, unwind: bb135]
  }
  preds [bb1]
  succs [bb3, bb135]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:264:38-264:60)
      kind: switchInt(move _7) -> [0: bb6, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/special.rs:264:59-264:60)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/special.rs:264:59-264:60)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/special.rs:264:59-264:60)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _12 = util::wire::DeserializeError::generic(const "min_match is DEAD, but max_match is not") -> [return: bb5, unwind: bb135]
  }
  preds [bb3]
  succs [bb5, bb135]

bb5
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _12)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/special.rs:266:9-266:10)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/special.rs:266:9-266:10)
  4: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/special.rs:266:9-266:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb4]
  succs [bb134]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/special.rs:264:59-264:60)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/special.rs:264:59-264:60)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/special.rs:264:59-264:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb8
  }
  preds [bb3]
  succs [bb8]

bb7
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/special.rs:264:33-264:34)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/special.rs:264:33-264:34)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/special.rs:264:33-264:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb8
  }
  preds [bb1]
  succs [bb8]

bb8
  0: _2 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:266:10-266:10)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/special.rs:266:9-266:10)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/special.rs:266:9-266:10)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/special.rs:266:9-266:10)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/special.rs:267:9-269:10)
  5: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/special.rs:267:12-267:34)
  6: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/special.rs:267:12-267:26)
  7: _15 = &((*_1).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:267:12-267:26)
  8: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/special.rs:267:30-267:34)
  9: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/special.rs:267:30-267:34)
  10: _17 = const dfa::DEAD
    SourceInfo(regex-automata/src/dfa/special.rs:267:30-267:34)
  11: _16 = &_17
    SourceInfo(regex-automata/src/dfa/special.rs:267:30-267:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:267:12-267:34)
      kind: _14 = <util::primitives::StateID as core::cmp::PartialEq>::ne(move _15, move _16) -> [return: bb9, unwind: bb135]
  }
  preds [bb6, bb7]
  succs [bb9, bb135]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:267:12-267:34)
      kind: switchInt(move _14) -> [0: bb15, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb15]

bb10
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/special.rs:267:33-267:34)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/special.rs:267:33-267:34)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/special.rs:267:33-267:34)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/special.rs:267:38-267:60)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/special.rs:267:38-267:52)
  5: _19 = &((*_1).3: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:267:38-267:52)
  6: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/special.rs:267:56-267:60)
  7: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/special.rs:267:56-267:60)
  8: _21 = const dfa::DEAD
    SourceInfo(regex-automata/src/dfa/special.rs:267:56-267:60)
  9: _20 = &_21
    SourceInfo(regex-automata/src/dfa/special.rs:267:56-267:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:267:38-267:60)
      kind: _18 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _19, move _20) -> [return: bb11, unwind: bb135]
  }
  preds [bb9]
  succs [bb11, bb135]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:267:38-267:60)
      kind: switchInt(move _18) -> [0: bb14, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb14]

bb12
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/special.rs:267:59-267:60)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/special.rs:267:59-267:60)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/special.rs:267:59-267:60)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _23 = util::wire::DeserializeError::generic(const "max_match is DEAD, but min_match is not") -> [return: bb13, unwind: bb135]
  }
  preds [bb11]
  succs [bb13, bb135]

bb13
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _23)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/special.rs:269:9-269:10)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/special.rs:269:9-269:10)
  4: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/special.rs:269:9-269:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb12]
  succs [bb134]

bb14
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/special.rs:267:59-267:60)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/special.rs:267:59-267:60)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/special.rs:267:59-267:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb16
  }
  preds [bb11]
  succs [bb16]

bb15
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/special.rs:267:33-267:34)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/special.rs:267:33-267:34)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/special.rs:267:33-267:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb16
  }
  preds [bb9]
  succs [bb16]

bb16
  0: _13 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:269:10-269:10)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/special.rs:269:9-269:10)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/special.rs:269:9-269:10)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/special.rs:269:9-269:10)
  4: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/special.rs:270:9-272:10)
  5: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/special.rs:270:12-270:34)
  6: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/special.rs:270:12-270:26)
  7: _26 = &((*_1).4: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:270:12-270:26)
  8: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/special.rs:270:30-270:34)
  9: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/special.rs:270:30-270:34)
  10: _28 = const dfa::DEAD
    SourceInfo(regex-automata/src/dfa/special.rs:270:30-270:34)
  11: _27 = &_28
    SourceInfo(regex-automata/src/dfa/special.rs:270:30-270:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:270:12-270:34)
      kind: _25 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _26, move _27) -> [return: bb17, unwind: bb135]
  }
  preds [bb14, bb15]
  succs [bb17, bb135]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:270:12-270:34)
      kind: switchInt(move _25) -> [0: bb23, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb23]

bb18
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/special.rs:270:33-270:34)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/special.rs:270:33-270:34)
  2: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/special.rs:270:33-270:34)
  3: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/special.rs:270:38-270:60)
  4: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/special.rs:270:38-270:52)
  5: _30 = &((*_1).5: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:270:38-270:52)
  6: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/special.rs:270:56-270:60)
  7: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/special.rs:270:56-270:60)
  8: _32 = const dfa::DEAD
    SourceInfo(regex-automata/src/dfa/special.rs:270:56-270:60)
  9: _31 = &_32
    SourceInfo(regex-automata/src/dfa/special.rs:270:56-270:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:270:38-270:60)
      kind: _29 = <util::primitives::StateID as core::cmp::PartialEq>::ne(move _30, move _31) -> [return: bb19, unwind: bb135]
  }
  preds [bb17]
  succs [bb19, bb135]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:270:38-270:60)
      kind: switchInt(move _29) -> [0: bb22, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb22]

bb20
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/special.rs:270:59-270:60)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/special.rs:270:59-270:60)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/special.rs:270:59-270:60)
  3: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _34 = util::wire::DeserializeError::generic(const "min_accel is DEAD, but max_accel is not") -> [return: bb21, unwind: bb135]
  }
  preds [bb19]
  succs [bb21, bb135]

bb21
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _34)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/special.rs:272:9-272:10)
  3: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/special.rs:272:9-272:10)
  4: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/special.rs:272:9-272:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb20]
  succs [bb134]

bb22
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/special.rs:270:59-270:60)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/special.rs:270:59-270:60)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/special.rs:270:59-270:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb24
  }
  preds [bb19]
  succs [bb24]

bb23
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/special.rs:270:33-270:34)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/special.rs:270:33-270:34)
  2: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/special.rs:270:33-270:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb24
  }
  preds [bb17]
  succs [bb24]

bb24
  0: _24 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:272:10-272:10)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/special.rs:272:9-272:10)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/special.rs:272:9-272:10)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/special.rs:272:9-272:10)
  4: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/special.rs:273:9-275:10)
  5: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/special.rs:273:12-273:34)
  6: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/special.rs:273:12-273:26)
  7: _37 = &((*_1).4: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:273:12-273:26)
  8: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/special.rs:273:30-273:34)
  9: StorageLive(_39)
    SourceInfo(regex-automata/src/dfa/special.rs:273:30-273:34)
  10: _39 = const dfa::DEAD
    SourceInfo(regex-automata/src/dfa/special.rs:273:30-273:34)
  11: _38 = &_39
    SourceInfo(regex-automata/src/dfa/special.rs:273:30-273:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:273:12-273:34)
      kind: _36 = <util::primitives::StateID as core::cmp::PartialEq>::ne(move _37, move _38) -> [return: bb25, unwind: bb135]
  }
  preds [bb22, bb23]
  succs [bb25, bb135]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:273:12-273:34)
      kind: switchInt(move _36) -> [0: bb31, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb31]

bb26
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/special.rs:273:33-273:34)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/special.rs:273:33-273:34)
  2: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/special.rs:273:33-273:34)
  3: StorageLive(_40)
    SourceInfo(regex-automata/src/dfa/special.rs:273:38-273:60)
  4: StorageLive(_41)
    SourceInfo(regex-automata/src/dfa/special.rs:273:38-273:52)
  5: _41 = &((*_1).5: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:273:38-273:52)
  6: StorageLive(_42)
    SourceInfo(regex-automata/src/dfa/special.rs:273:56-273:60)
  7: StorageLive(_43)
    SourceInfo(regex-automata/src/dfa/special.rs:273:56-273:60)
  8: _43 = const dfa::DEAD
    SourceInfo(regex-automata/src/dfa/special.rs:273:56-273:60)
  9: _42 = &_43
    SourceInfo(regex-automata/src/dfa/special.rs:273:56-273:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:273:38-273:60)
      kind: _40 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _41, move _42) -> [return: bb27, unwind: bb135]
  }
  preds [bb25]
  succs [bb27, bb135]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:273:38-273:60)
      kind: switchInt(move _40) -> [0: bb30, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb30]

bb28
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/special.rs:273:59-273:60)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/special.rs:273:59-273:60)
  2: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/special.rs:273:59-273:60)
  3: StorageLive(_45)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _45 = util::wire::DeserializeError::generic(const "max_accel is DEAD, but min_accel is not") -> [return: bb29, unwind: bb135]
  }
  preds [bb27]
  succs [bb29, bb135]

bb29
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _45)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/special.rs:275:9-275:10)
  3: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/special.rs:275:9-275:10)
  4: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/special.rs:275:9-275:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb28]
  succs [bb134]

bb30
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/special.rs:273:59-273:60)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/special.rs:273:59-273:60)
  2: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/special.rs:273:59-273:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb27]
  succs [bb32]

bb31
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/special.rs:273:33-273:34)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/special.rs:273:33-273:34)
  2: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/special.rs:273:33-273:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb25]
  succs [bb32]

bb32
  0: _35 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:275:10-275:10)
  1: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/special.rs:275:9-275:10)
  2: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/special.rs:275:9-275:10)
  3: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/special.rs:275:9-275:10)
  4: StorageLive(_46)
    SourceInfo(regex-automata/src/dfa/special.rs:276:9-278:10)
  5: StorageLive(_47)
    SourceInfo(regex-automata/src/dfa/special.rs:276:12-276:34)
  6: StorageLive(_48)
    SourceInfo(regex-automata/src/dfa/special.rs:276:12-276:26)
  7: _48 = &((*_1).6: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:276:12-276:26)
  8: StorageLive(_49)
    SourceInfo(regex-automata/src/dfa/special.rs:276:30-276:34)
  9: StorageLive(_50)
    SourceInfo(regex-automata/src/dfa/special.rs:276:30-276:34)
  10: _50 = const dfa::DEAD
    SourceInfo(regex-automata/src/dfa/special.rs:276:30-276:34)
  11: _49 = &_50
    SourceInfo(regex-automata/src/dfa/special.rs:276:30-276:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:276:12-276:34)
      kind: _47 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _48, move _49) -> [return: bb33, unwind: bb135]
  }
  preds [bb30, bb31]
  succs [bb33, bb135]

bb33
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:276:12-276:34)
      kind: switchInt(move _47) -> [0: bb39, otherwise: bb34]
  }
  preds [bb32]
  succs [bb34, bb39]

bb34
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/special.rs:276:33-276:34)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/dfa/special.rs:276:33-276:34)
  2: StorageDead(_48)
    SourceInfo(regex-automata/src/dfa/special.rs:276:33-276:34)
  3: StorageLive(_51)
    SourceInfo(regex-automata/src/dfa/special.rs:276:38-276:60)
  4: StorageLive(_52)
    SourceInfo(regex-automata/src/dfa/special.rs:276:38-276:52)
  5: _52 = &((*_1).7: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:276:38-276:52)
  6: StorageLive(_53)
    SourceInfo(regex-automata/src/dfa/special.rs:276:56-276:60)
  7: StorageLive(_54)
    SourceInfo(regex-automata/src/dfa/special.rs:276:56-276:60)
  8: _54 = const dfa::DEAD
    SourceInfo(regex-automata/src/dfa/special.rs:276:56-276:60)
  9: _53 = &_54
    SourceInfo(regex-automata/src/dfa/special.rs:276:56-276:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:276:38-276:60)
      kind: _51 = <util::primitives::StateID as core::cmp::PartialEq>::ne(move _52, move _53) -> [return: bb35, unwind: bb135]
  }
  preds [bb33]
  succs [bb35, bb135]

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:276:38-276:60)
      kind: switchInt(move _51) -> [0: bb38, otherwise: bb36]
  }
  preds [bb34]
  succs [bb36, bb38]

bb36
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/dfa/special.rs:276:59-276:60)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/special.rs:276:59-276:60)
  2: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/special.rs:276:59-276:60)
  3: StorageLive(_56)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _56 = util::wire::DeserializeError::generic(const "min_start is DEAD, but max_start is not") -> [return: bb37, unwind: bb135]
  }
  preds [bb35]
  succs [bb37, bb135]

bb37
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _56)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_56)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/special.rs:278:9-278:10)
  3: StorageDead(_47)
    SourceInfo(regex-automata/src/dfa/special.rs:278:9-278:10)
  4: StorageDead(_46)
    SourceInfo(regex-automata/src/dfa/special.rs:278:9-278:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb36]
  succs [bb134]

bb38
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/dfa/special.rs:276:59-276:60)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/special.rs:276:59-276:60)
  2: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/special.rs:276:59-276:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb40
  }
  preds [bb35]
  succs [bb40]

bb39
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/special.rs:276:33-276:34)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/dfa/special.rs:276:33-276:34)
  2: StorageDead(_48)
    SourceInfo(regex-automata/src/dfa/special.rs:276:33-276:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb40
  }
  preds [bb33]
  succs [bb40]

bb40
  0: _46 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:278:10-278:10)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/special.rs:278:9-278:10)
  2: StorageDead(_47)
    SourceInfo(regex-automata/src/dfa/special.rs:278:9-278:10)
  3: StorageDead(_46)
    SourceInfo(regex-automata/src/dfa/special.rs:278:9-278:10)
  4: StorageLive(_57)
    SourceInfo(regex-automata/src/dfa/special.rs:279:9-281:10)
  5: StorageLive(_58)
    SourceInfo(regex-automata/src/dfa/special.rs:279:12-279:34)
  6: StorageLive(_59)
    SourceInfo(regex-automata/src/dfa/special.rs:279:12-279:26)
  7: _59 = &((*_1).6: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:279:12-279:26)
  8: StorageLive(_60)
    SourceInfo(regex-automata/src/dfa/special.rs:279:30-279:34)
  9: StorageLive(_61)
    SourceInfo(regex-automata/src/dfa/special.rs:279:30-279:34)
  10: _61 = const dfa::DEAD
    SourceInfo(regex-automata/src/dfa/special.rs:279:30-279:34)
  11: _60 = &_61
    SourceInfo(regex-automata/src/dfa/special.rs:279:30-279:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:279:12-279:34)
      kind: _58 = <util::primitives::StateID as core::cmp::PartialEq>::ne(move _59, move _60) -> [return: bb41, unwind: bb135]
  }
  preds [bb38, bb39]
  succs [bb41, bb135]

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:279:12-279:34)
      kind: switchInt(move _58) -> [0: bb47, otherwise: bb42]
  }
  preds [bb40]
  succs [bb42, bb47]

bb42
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/dfa/special.rs:279:33-279:34)
  1: StorageDead(_60)
    SourceInfo(regex-automata/src/dfa/special.rs:279:33-279:34)
  2: StorageDead(_59)
    SourceInfo(regex-automata/src/dfa/special.rs:279:33-279:34)
  3: StorageLive(_62)
    SourceInfo(regex-automata/src/dfa/special.rs:279:38-279:60)
  4: StorageLive(_63)
    SourceInfo(regex-automata/src/dfa/special.rs:279:38-279:52)
  5: _63 = &((*_1).7: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:279:38-279:52)
  6: StorageLive(_64)
    SourceInfo(regex-automata/src/dfa/special.rs:279:56-279:60)
  7: StorageLive(_65)
    SourceInfo(regex-automata/src/dfa/special.rs:279:56-279:60)
  8: _65 = const dfa::DEAD
    SourceInfo(regex-automata/src/dfa/special.rs:279:56-279:60)
  9: _64 = &_65
    SourceInfo(regex-automata/src/dfa/special.rs:279:56-279:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:279:38-279:60)
      kind: _62 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _63, move _64) -> [return: bb43, unwind: bb135]
  }
  preds [bb41]
  succs [bb43, bb135]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:279:38-279:60)
      kind: switchInt(move _62) -> [0: bb46, otherwise: bb44]
  }
  preds [bb42]
  succs [bb44, bb46]

bb44
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/dfa/special.rs:279:59-279:60)
  1: StorageDead(_64)
    SourceInfo(regex-automata/src/dfa/special.rs:279:59-279:60)
  2: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/special.rs:279:59-279:60)
  3: StorageLive(_67)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _67 = util::wire::DeserializeError::generic(const "max_start is DEAD, but min_start is not") -> [return: bb45, unwind: bb135]
  }
  preds [bb43]
  succs [bb45, bb135]

bb45
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _67)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_67)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/special.rs:281:9-281:10)
  3: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/special.rs:281:9-281:10)
  4: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/special.rs:281:9-281:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb44]
  succs [bb134]

bb46
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/dfa/special.rs:279:59-279:60)
  1: StorageDead(_64)
    SourceInfo(regex-automata/src/dfa/special.rs:279:59-279:60)
  2: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/special.rs:279:59-279:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb48
  }
  preds [bb43]
  succs [bb48]

bb47
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/dfa/special.rs:279:33-279:34)
  1: StorageDead(_60)
    SourceInfo(regex-automata/src/dfa/special.rs:279:33-279:34)
  2: StorageDead(_59)
    SourceInfo(regex-automata/src/dfa/special.rs:279:33-279:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb48
  }
  preds [bb41]
  succs [bb48]

bb48
  0: _57 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:281:10-281:10)
  1: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/special.rs:281:9-281:10)
  2: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/special.rs:281:9-281:10)
  3: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/special.rs:281:9-281:10)
  4: StorageLive(_68)
    SourceInfo(regex-automata/src/dfa/special.rs:284:9-286:10)
  5: StorageLive(_69)
    SourceInfo(regex-automata/src/dfa/special.rs:284:12-284:43)
  6: StorageLive(_70)
    SourceInfo(regex-automata/src/dfa/special.rs:284:12-284:26)
  7: _70 = &((*_1).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:284:12-284:26)
  8: StorageLive(_71)
    SourceInfo(regex-automata/src/dfa/special.rs:284:29-284:43)
  9: _71 = &((*_1).3: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:284:29-284:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:284:12-284:43)
      kind: _69 = <util::primitives::StateID as core::cmp::PartialOrd>::gt(move _70, move _71) -> [return: bb49, unwind: bb135]
  }
  preds [bb46, bb47]
  succs [bb49, bb135]

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:284:12-284:43)
      kind: switchInt(move _69) -> [0: bb52, otherwise: bb50]
  }
  preds [bb48]
  succs [bb50, bb52]

bb50
  0: StorageDead(_71)
    SourceInfo(regex-automata/src/dfa/special.rs:284:42-284:43)
  1: StorageDead(_70)
    SourceInfo(regex-automata/src/dfa/special.rs:284:42-284:43)
  2: StorageLive(_73)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _73 = util::wire::DeserializeError::generic(const "min_match should not be greater than max_match") -> [return: bb51, unwind: bb135]
  }
  preds [bb49]
  succs [bb51, bb135]

bb51
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _73)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_73)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_69)
    SourceInfo(regex-automata/src/dfa/special.rs:286:9-286:10)
  3: StorageDead(_68)
    SourceInfo(regex-automata/src/dfa/special.rs:286:9-286:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb50]
  succs [bb134]

bb52
  0: StorageDead(_71)
    SourceInfo(regex-automata/src/dfa/special.rs:284:42-284:43)
  1: StorageDead(_70)
    SourceInfo(regex-automata/src/dfa/special.rs:284:42-284:43)
  2: _68 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:286:10-286:10)
  3: StorageDead(_69)
    SourceInfo(regex-automata/src/dfa/special.rs:286:9-286:10)
  4: StorageDead(_68)
    SourceInfo(regex-automata/src/dfa/special.rs:286:9-286:10)
  5: StorageLive(_74)
    SourceInfo(regex-automata/src/dfa/special.rs:287:9-289:10)
  6: StorageLive(_75)
    SourceInfo(regex-automata/src/dfa/special.rs:287:12-287:43)
  7: StorageLive(_76)
    SourceInfo(regex-automata/src/dfa/special.rs:287:12-287:26)
  8: _76 = &((*_1).4: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:287:12-287:26)
  9: StorageLive(_77)
    SourceInfo(regex-automata/src/dfa/special.rs:287:29-287:43)
  10: _77 = &((*_1).5: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:287:29-287:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:287:12-287:43)
      kind: _75 = <util::primitives::StateID as core::cmp::PartialOrd>::gt(move _76, move _77) -> [return: bb53, unwind: bb135]
  }
  preds [bb49]
  succs [bb53, bb135]

bb53
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:287:12-287:43)
      kind: switchInt(move _75) -> [0: bb56, otherwise: bb54]
  }
  preds [bb52]
  succs [bb54, bb56]

bb54
  0: StorageDead(_77)
    SourceInfo(regex-automata/src/dfa/special.rs:287:42-287:43)
  1: StorageDead(_76)
    SourceInfo(regex-automata/src/dfa/special.rs:287:42-287:43)
  2: StorageLive(_79)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _79 = util::wire::DeserializeError::generic(const "min_accel should not be greater than max_accel") -> [return: bb55, unwind: bb135]
  }
  preds [bb53]
  succs [bb55, bb135]

bb55
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _79)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_79)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_75)
    SourceInfo(regex-automata/src/dfa/special.rs:289:9-289:10)
  3: StorageDead(_74)
    SourceInfo(regex-automata/src/dfa/special.rs:289:9-289:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb54]
  succs [bb134]

bb56
  0: StorageDead(_77)
    SourceInfo(regex-automata/src/dfa/special.rs:287:42-287:43)
  1: StorageDead(_76)
    SourceInfo(regex-automata/src/dfa/special.rs:287:42-287:43)
  2: _74 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:289:10-289:10)
  3: StorageDead(_75)
    SourceInfo(regex-automata/src/dfa/special.rs:289:9-289:10)
  4: StorageDead(_74)
    SourceInfo(regex-automata/src/dfa/special.rs:289:9-289:10)
  5: StorageLive(_80)
    SourceInfo(regex-automata/src/dfa/special.rs:290:9-292:10)
  6: StorageLive(_81)
    SourceInfo(regex-automata/src/dfa/special.rs:290:12-290:43)
  7: StorageLive(_82)
    SourceInfo(regex-automata/src/dfa/special.rs:290:12-290:26)
  8: _82 = &((*_1).6: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:290:12-290:26)
  9: StorageLive(_83)
    SourceInfo(regex-automata/src/dfa/special.rs:290:29-290:43)
  10: _83 = &((*_1).7: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:290:29-290:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:290:12-290:43)
      kind: _81 = <util::primitives::StateID as core::cmp::PartialOrd>::gt(move _82, move _83) -> [return: bb57, unwind: bb135]
  }
  preds [bb53]
  succs [bb57, bb135]

bb57
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:290:12-290:43)
      kind: switchInt(move _81) -> [0: bb60, otherwise: bb58]
  }
  preds [bb56]
  succs [bb58, bb60]

bb58
  0: StorageDead(_83)
    SourceInfo(regex-automata/src/dfa/special.rs:290:42-290:43)
  1: StorageDead(_82)
    SourceInfo(regex-automata/src/dfa/special.rs:290:42-290:43)
  2: StorageLive(_85)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _85 = util::wire::DeserializeError::generic(const "min_start should not be greater than max_start") -> [return: bb59, unwind: bb135]
  }
  preds [bb57]
  succs [bb59, bb135]

bb59
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _85)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_85)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_81)
    SourceInfo(regex-automata/src/dfa/special.rs:292:9-292:10)
  3: StorageDead(_80)
    SourceInfo(regex-automata/src/dfa/special.rs:292:9-292:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb58]
  succs [bb134]

bb60
  0: StorageDead(_83)
    SourceInfo(regex-automata/src/dfa/special.rs:290:42-290:43)
  1: StorageDead(_82)
    SourceInfo(regex-automata/src/dfa/special.rs:290:42-290:43)
  2: _80 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:292:10-292:10)
  3: StorageDead(_81)
    SourceInfo(regex-automata/src/dfa/special.rs:292:9-292:10)
  4: StorageDead(_80)
    SourceInfo(regex-automata/src/dfa/special.rs:292:9-292:10)
  5: StorageLive(_86)
    SourceInfo(regex-automata/src/dfa/special.rs:295:9-297:10)
  6: StorageLive(_87)
    SourceInfo(regex-automata/src/dfa/special.rs:295:12-295:26)
  7: StorageLive(_88)
    SourceInfo(regex-automata/src/dfa/special.rs:295:12-295:16)
  8: _88 = &(*_1)
    SourceInfo(regex-automata/src/dfa/special.rs:295:12-295:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:295:12-295:26)
      kind: _87 = dfa::special::Special::matches(move _88) -> [return: bb61, unwind: bb135]
  }
  preds [bb57]
  succs [bb61, bb135]

bb61
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:295:12-295:26)
      kind: switchInt(move _87) -> [0: bb67, otherwise: bb62]
  }
  preds [bb60]
  succs [bb62, bb67]

bb62
  0: StorageDead(_88)
    SourceInfo(regex-automata/src/dfa/special.rs:295:25-295:26)
  1: StorageLive(_89)
    SourceInfo(regex-automata/src/dfa/special.rs:295:30-295:60)
  2: StorageLive(_90)
    SourceInfo(regex-automata/src/dfa/special.rs:295:30-295:42)
  3: _90 = &((*_1).1: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:295:30-295:42)
  4: StorageLive(_91)
    SourceInfo(regex-automata/src/dfa/special.rs:295:46-295:60)
  5: _91 = &((*_1).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:295:46-295:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:295:30-295:60)
      kind: _89 = <util::primitives::StateID as core::cmp::PartialOrd>::ge(move _90, move _91) -> [return: bb63, unwind: bb135]
  }
  preds [bb61]
  succs [bb63, bb135]

bb63
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:295:30-295:60)
      kind: switchInt(move _89) -> [0: bb66, otherwise: bb64]
  }
  preds [bb62]
  succs [bb64, bb66]

bb64
  0: StorageDead(_91)
    SourceInfo(regex-automata/src/dfa/special.rs:295:59-295:60)
  1: StorageDead(_90)
    SourceInfo(regex-automata/src/dfa/special.rs:295:59-295:60)
  2: StorageLive(_93)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _93 = util::wire::DeserializeError::generic(const "quit_id should not be greater than min_match") -> [return: bb65, unwind: bb135]
  }
  preds [bb63]
  succs [bb65, bb135]

bb65
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _93)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_93)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_89)
    SourceInfo(regex-automata/src/dfa/special.rs:297:9-297:10)
  3: StorageDead(_87)
    SourceInfo(regex-automata/src/dfa/special.rs:297:9-297:10)
  4: StorageDead(_86)
    SourceInfo(regex-automata/src/dfa/special.rs:297:9-297:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb64]
  succs [bb134]

bb66
  0: StorageDead(_91)
    SourceInfo(regex-automata/src/dfa/special.rs:295:59-295:60)
  1: StorageDead(_90)
    SourceInfo(regex-automata/src/dfa/special.rs:295:59-295:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb68
  }
  preds [bb63]
  succs [bb68]

bb67
  0: StorageDead(_88)
    SourceInfo(regex-automata/src/dfa/special.rs:295:25-295:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb68
  }
  preds [bb61]
  succs [bb68]

bb68
  0: _86 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:297:10-297:10)
  1: StorageDead(_89)
    SourceInfo(regex-automata/src/dfa/special.rs:297:9-297:10)
  2: StorageDead(_87)
    SourceInfo(regex-automata/src/dfa/special.rs:297:9-297:10)
  3: StorageDead(_86)
    SourceInfo(regex-automata/src/dfa/special.rs:297:9-297:10)
  4: StorageLive(_94)
    SourceInfo(regex-automata/src/dfa/special.rs:298:9-300:10)
  5: StorageLive(_95)
    SourceInfo(regex-automata/src/dfa/special.rs:298:12-298:25)
  6: StorageLive(_96)
    SourceInfo(regex-automata/src/dfa/special.rs:298:12-298:16)
  7: _96 = &(*_1)
    SourceInfo(regex-automata/src/dfa/special.rs:298:12-298:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:298:12-298:25)
      kind: _95 = dfa::special::Special::accels(move _96) -> [return: bb69, unwind: bb135]
  }
  preds [bb66, bb67]
  succs [bb69, bb135]

bb69
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:298:12-298:25)
      kind: switchInt(move _95) -> [0: bb75, otherwise: bb70]
  }
  preds [bb68]
  succs [bb70, bb75]

bb70
  0: StorageDead(_96)
    SourceInfo(regex-automata/src/dfa/special.rs:298:24-298:25)
  1: StorageLive(_97)
    SourceInfo(regex-automata/src/dfa/special.rs:298:29-298:59)
  2: StorageLive(_98)
    SourceInfo(regex-automata/src/dfa/special.rs:298:29-298:41)
  3: _98 = &((*_1).1: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:298:29-298:41)
  4: StorageLive(_99)
    SourceInfo(regex-automata/src/dfa/special.rs:298:45-298:59)
  5: _99 = &((*_1).4: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:298:45-298:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:298:29-298:59)
      kind: _97 = <util::primitives::StateID as core::cmp::PartialOrd>::ge(move _98, move _99) -> [return: bb71, unwind: bb135]
  }
  preds [bb69]
  succs [bb71, bb135]

bb71
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:298:29-298:59)
      kind: switchInt(move _97) -> [0: bb74, otherwise: bb72]
  }
  preds [bb70]
  succs [bb72, bb74]

bb72
  0: StorageDead(_99)
    SourceInfo(regex-automata/src/dfa/special.rs:298:58-298:59)
  1: StorageDead(_98)
    SourceInfo(regex-automata/src/dfa/special.rs:298:58-298:59)
  2: StorageLive(_101)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _101 = util::wire::DeserializeError::generic(const "quit_id should not be greater than min_accel") -> [return: bb73, unwind: bb135]
  }
  preds [bb71]
  succs [bb73, bb135]

bb73
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _101)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_101)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_97)
    SourceInfo(regex-automata/src/dfa/special.rs:300:9-300:10)
  3: StorageDead(_95)
    SourceInfo(regex-automata/src/dfa/special.rs:300:9-300:10)
  4: StorageDead(_94)
    SourceInfo(regex-automata/src/dfa/special.rs:300:9-300:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb72]
  succs [bb134]

bb74
  0: StorageDead(_99)
    SourceInfo(regex-automata/src/dfa/special.rs:298:58-298:59)
  1: StorageDead(_98)
    SourceInfo(regex-automata/src/dfa/special.rs:298:58-298:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb71]
  succs [bb76]

bb75
  0: StorageDead(_96)
    SourceInfo(regex-automata/src/dfa/special.rs:298:24-298:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb69]
  succs [bb76]

bb76
  0: _94 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:300:10-300:10)
  1: StorageDead(_97)
    SourceInfo(regex-automata/src/dfa/special.rs:300:9-300:10)
  2: StorageDead(_95)
    SourceInfo(regex-automata/src/dfa/special.rs:300:9-300:10)
  3: StorageDead(_94)
    SourceInfo(regex-automata/src/dfa/special.rs:300:9-300:10)
  4: StorageLive(_102)
    SourceInfo(regex-automata/src/dfa/special.rs:301:9-303:10)
  5: StorageLive(_103)
    SourceInfo(regex-automata/src/dfa/special.rs:301:12-301:25)
  6: StorageLive(_104)
    SourceInfo(regex-automata/src/dfa/special.rs:301:12-301:16)
  7: _104 = &(*_1)
    SourceInfo(regex-automata/src/dfa/special.rs:301:12-301:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:301:12-301:25)
      kind: _103 = dfa::special::Special::starts(move _104) -> [return: bb77, unwind: bb135]
  }
  preds [bb74, bb75]
  succs [bb77, bb135]

bb77
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:301:12-301:25)
      kind: switchInt(move _103) -> [0: bb83, otherwise: bb78]
  }
  preds [bb76]
  succs [bb78, bb83]

bb78
  0: StorageDead(_104)
    SourceInfo(regex-automata/src/dfa/special.rs:301:24-301:25)
  1: StorageLive(_105)
    SourceInfo(regex-automata/src/dfa/special.rs:301:29-301:59)
  2: StorageLive(_106)
    SourceInfo(regex-automata/src/dfa/special.rs:301:29-301:41)
  3: _106 = &((*_1).1: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:301:29-301:41)
  4: StorageLive(_107)
    SourceInfo(regex-automata/src/dfa/special.rs:301:45-301:59)
  5: _107 = &((*_1).6: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:301:45-301:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:301:29-301:59)
      kind: _105 = <util::primitives::StateID as core::cmp::PartialOrd>::ge(move _106, move _107) -> [return: bb79, unwind: bb135]
  }
  preds [bb77]
  succs [bb79, bb135]

bb79
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:301:29-301:59)
      kind: switchInt(move _105) -> [0: bb82, otherwise: bb80]
  }
  preds [bb78]
  succs [bb80, bb82]

bb80
  0: StorageDead(_107)
    SourceInfo(regex-automata/src/dfa/special.rs:301:58-301:59)
  1: StorageDead(_106)
    SourceInfo(regex-automata/src/dfa/special.rs:301:58-301:59)
  2: StorageLive(_109)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _109 = util::wire::DeserializeError::generic(const "quit_id should not be greater than min_start") -> [return: bb81, unwind: bb135]
  }
  preds [bb79]
  succs [bb81, bb135]

bb81
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _109)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_109)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_105)
    SourceInfo(regex-automata/src/dfa/special.rs:303:9-303:10)
  3: StorageDead(_103)
    SourceInfo(regex-automata/src/dfa/special.rs:303:9-303:10)
  4: StorageDead(_102)
    SourceInfo(regex-automata/src/dfa/special.rs:303:9-303:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb80]
  succs [bb134]

bb82
  0: StorageDead(_107)
    SourceInfo(regex-automata/src/dfa/special.rs:301:58-301:59)
  1: StorageDead(_106)
    SourceInfo(regex-automata/src/dfa/special.rs:301:58-301:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb84
  }
  preds [bb79]
  succs [bb84]

bb83
  0: StorageDead(_104)
    SourceInfo(regex-automata/src/dfa/special.rs:301:24-301:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb84
  }
  preds [bb77]
  succs [bb84]

bb84
  0: _102 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:303:10-303:10)
  1: StorageDead(_105)
    SourceInfo(regex-automata/src/dfa/special.rs:303:9-303:10)
  2: StorageDead(_103)
    SourceInfo(regex-automata/src/dfa/special.rs:303:9-303:10)
  3: StorageDead(_102)
    SourceInfo(regex-automata/src/dfa/special.rs:303:9-303:10)
  4: StorageLive(_110)
    SourceInfo(regex-automata/src/dfa/special.rs:304:9-306:10)
  5: StorageLive(_111)
    SourceInfo(regex-automata/src/dfa/special.rs:304:12-304:26)
  6: StorageLive(_112)
    SourceInfo(regex-automata/src/dfa/special.rs:304:12-304:16)
  7: _112 = &(*_1)
    SourceInfo(regex-automata/src/dfa/special.rs:304:12-304:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:304:12-304:26)
      kind: _111 = dfa::special::Special::matches(move _112) -> [return: bb85, unwind: bb135]
  }
  preds [bb82, bb83]
  succs [bb85, bb135]

bb85
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:304:12-304:26)
      kind: switchInt(move _111) -> [0: bb94, otherwise: bb86]
  }
  preds [bb84]
  succs [bb86, bb94]

bb86
  0: StorageDead(_112)
    SourceInfo(regex-automata/src/dfa/special.rs:304:25-304:26)
  1: StorageLive(_113)
    SourceInfo(regex-automata/src/dfa/special.rs:304:30-304:43)
  2: StorageLive(_114)
    SourceInfo(regex-automata/src/dfa/special.rs:304:30-304:34)
  3: _114 = &(*_1)
    SourceInfo(regex-automata/src/dfa/special.rs:304:30-304:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:304:30-304:43)
      kind: _113 = dfa::special::Special::accels(move _114) -> [return: bb87, unwind: bb135]
  }
  preds [bb85]
  succs [bb87, bb135]

bb87
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:304:30-304:43)
      kind: switchInt(move _113) -> [0: bb93, otherwise: bb88]
  }
  preds [bb86]
  succs [bb88, bb93]

bb88
  0: StorageDead(_114)
    SourceInfo(regex-automata/src/dfa/special.rs:304:42-304:43)
  1: StorageLive(_115)
    SourceInfo(regex-automata/src/dfa/special.rs:304:47-304:78)
  2: StorageLive(_116)
    SourceInfo(regex-automata/src/dfa/special.rs:304:47-304:61)
  3: _116 = &((*_1).4: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:304:47-304:61)
  4: StorageLive(_117)
    SourceInfo(regex-automata/src/dfa/special.rs:304:64-304:78)
  5: _117 = &((*_1).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:304:64-304:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:304:47-304:78)
      kind: _115 = <util::primitives::StateID as core::cmp::PartialOrd>::lt(move _116, move _117) -> [return: bb89, unwind: bb135]
  }
  preds [bb87]
  succs [bb89, bb135]

bb89
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:304:47-304:78)
      kind: switchInt(move _115) -> [0: bb92, otherwise: bb90]
  }
  preds [bb88]
  succs [bb90, bb92]

bb90
  0: StorageDead(_117)
    SourceInfo(regex-automata/src/dfa/special.rs:304:77-304:78)
  1: StorageDead(_116)
    SourceInfo(regex-automata/src/dfa/special.rs:304:77-304:78)
  2: StorageLive(_119)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _119 = util::wire::DeserializeError::generic(const "min_match should not be greater than min_accel") -> [return: bb91, unwind: bb135]
  }
  preds [bb89]
  succs [bb91, bb135]

bb91
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _119)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_119)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_115)
    SourceInfo(regex-automata/src/dfa/special.rs:306:9-306:10)
  3: StorageDead(_113)
    SourceInfo(regex-automata/src/dfa/special.rs:306:9-306:10)
  4: StorageDead(_111)
    SourceInfo(regex-automata/src/dfa/special.rs:306:9-306:10)
  5: StorageDead(_110)
    SourceInfo(regex-automata/src/dfa/special.rs:306:9-306:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb90]
  succs [bb134]

bb92
  0: StorageDead(_117)
    SourceInfo(regex-automata/src/dfa/special.rs:304:77-304:78)
  1: StorageDead(_116)
    SourceInfo(regex-automata/src/dfa/special.rs:304:77-304:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb95
  }
  preds [bb89]
  succs [bb95]

bb93
  0: StorageDead(_114)
    SourceInfo(regex-automata/src/dfa/special.rs:304:42-304:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb95
  }
  preds [bb87]
  succs [bb95]

bb94
  0: StorageDead(_112)
    SourceInfo(regex-automata/src/dfa/special.rs:304:25-304:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb95
  }
  preds [bb85]
  succs [bb95]

bb95
  0: _110 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:306:10-306:10)
  1: StorageDead(_115)
    SourceInfo(regex-automata/src/dfa/special.rs:306:9-306:10)
  2: StorageDead(_113)
    SourceInfo(regex-automata/src/dfa/special.rs:306:9-306:10)
  3: StorageDead(_111)
    SourceInfo(regex-automata/src/dfa/special.rs:306:9-306:10)
  4: StorageDead(_110)
    SourceInfo(regex-automata/src/dfa/special.rs:306:9-306:10)
  5: StorageLive(_120)
    SourceInfo(regex-automata/src/dfa/special.rs:307:9-309:10)
  6: StorageLive(_121)
    SourceInfo(regex-automata/src/dfa/special.rs:307:12-307:26)
  7: StorageLive(_122)
    SourceInfo(regex-automata/src/dfa/special.rs:307:12-307:16)
  8: _122 = &(*_1)
    SourceInfo(regex-automata/src/dfa/special.rs:307:12-307:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:307:12-307:26)
      kind: _121 = dfa::special::Special::matches(move _122) -> [return: bb96, unwind: bb135]
  }
  preds [bb92, bb93, bb94]
  succs [bb96, bb135]

bb96
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:307:12-307:26)
      kind: switchInt(move _121) -> [0: bb105, otherwise: bb97]
  }
  preds [bb95]
  succs [bb97, bb105]

bb97
  0: StorageDead(_122)
    SourceInfo(regex-automata/src/dfa/special.rs:307:25-307:26)
  1: StorageLive(_123)
    SourceInfo(regex-automata/src/dfa/special.rs:307:30-307:43)
  2: StorageLive(_124)
    SourceInfo(regex-automata/src/dfa/special.rs:307:30-307:34)
  3: _124 = &(*_1)
    SourceInfo(regex-automata/src/dfa/special.rs:307:30-307:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:307:30-307:43)
      kind: _123 = dfa::special::Special::starts(move _124) -> [return: bb98, unwind: bb135]
  }
  preds [bb96]
  succs [bb98, bb135]

bb98
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:307:30-307:43)
      kind: switchInt(move _123) -> [0: bb104, otherwise: bb99]
  }
  preds [bb97]
  succs [bb99, bb104]

bb99
  0: StorageDead(_124)
    SourceInfo(regex-automata/src/dfa/special.rs:307:42-307:43)
  1: StorageLive(_125)
    SourceInfo(regex-automata/src/dfa/special.rs:307:47-307:78)
  2: StorageLive(_126)
    SourceInfo(regex-automata/src/dfa/special.rs:307:47-307:61)
  3: _126 = &((*_1).6: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:307:47-307:61)
  4: StorageLive(_127)
    SourceInfo(regex-automata/src/dfa/special.rs:307:64-307:78)
  5: _127 = &((*_1).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:307:64-307:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:307:47-307:78)
      kind: _125 = <util::primitives::StateID as core::cmp::PartialOrd>::lt(move _126, move _127) -> [return: bb100, unwind: bb135]
  }
  preds [bb98]
  succs [bb100, bb135]

bb100
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:307:47-307:78)
      kind: switchInt(move _125) -> [0: bb103, otherwise: bb101]
  }
  preds [bb99]
  succs [bb101, bb103]

bb101
  0: StorageDead(_127)
    SourceInfo(regex-automata/src/dfa/special.rs:307:77-307:78)
  1: StorageDead(_126)
    SourceInfo(regex-automata/src/dfa/special.rs:307:77-307:78)
  2: StorageLive(_129)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _129 = util::wire::DeserializeError::generic(const "min_match should not be greater than min_start") -> [return: bb102, unwind: bb135]
  }
  preds [bb100]
  succs [bb102, bb135]

bb102
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _129)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_129)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_125)
    SourceInfo(regex-automata/src/dfa/special.rs:309:9-309:10)
  3: StorageDead(_123)
    SourceInfo(regex-automata/src/dfa/special.rs:309:9-309:10)
  4: StorageDead(_121)
    SourceInfo(regex-automata/src/dfa/special.rs:309:9-309:10)
  5: StorageDead(_120)
    SourceInfo(regex-automata/src/dfa/special.rs:309:9-309:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb101]
  succs [bb134]

bb103
  0: StorageDead(_127)
    SourceInfo(regex-automata/src/dfa/special.rs:307:77-307:78)
  1: StorageDead(_126)
    SourceInfo(regex-automata/src/dfa/special.rs:307:77-307:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb106
  }
  preds [bb100]
  succs [bb106]

bb104
  0: StorageDead(_124)
    SourceInfo(regex-automata/src/dfa/special.rs:307:42-307:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb106
  }
  preds [bb98]
  succs [bb106]

bb105
  0: StorageDead(_122)
    SourceInfo(regex-automata/src/dfa/special.rs:307:25-307:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb106
  }
  preds [bb96]
  succs [bb106]

bb106
  0: _120 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:309:10-309:10)
  1: StorageDead(_125)
    SourceInfo(regex-automata/src/dfa/special.rs:309:9-309:10)
  2: StorageDead(_123)
    SourceInfo(regex-automata/src/dfa/special.rs:309:9-309:10)
  3: StorageDead(_121)
    SourceInfo(regex-automata/src/dfa/special.rs:309:9-309:10)
  4: StorageDead(_120)
    SourceInfo(regex-automata/src/dfa/special.rs:309:9-309:10)
  5: StorageLive(_130)
    SourceInfo(regex-automata/src/dfa/special.rs:310:9-312:10)
  6: StorageLive(_131)
    SourceInfo(regex-automata/src/dfa/special.rs:310:12-310:25)
  7: StorageLive(_132)
    SourceInfo(regex-automata/src/dfa/special.rs:310:12-310:16)
  8: _132 = &(*_1)
    SourceInfo(regex-automata/src/dfa/special.rs:310:12-310:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:310:12-310:25)
      kind: _131 = dfa::special::Special::accels(move _132) -> [return: bb107, unwind: bb135]
  }
  preds [bb103, bb104, bb105]
  succs [bb107, bb135]

bb107
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:310:12-310:25)
      kind: switchInt(move _131) -> [0: bb116, otherwise: bb108]
  }
  preds [bb106]
  succs [bb108, bb116]

bb108
  0: StorageDead(_132)
    SourceInfo(regex-automata/src/dfa/special.rs:310:24-310:25)
  1: StorageLive(_133)
    SourceInfo(regex-automata/src/dfa/special.rs:310:29-310:42)
  2: StorageLive(_134)
    SourceInfo(regex-automata/src/dfa/special.rs:310:29-310:33)
  3: _134 = &(*_1)
    SourceInfo(regex-automata/src/dfa/special.rs:310:29-310:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:310:29-310:42)
      kind: _133 = dfa::special::Special::starts(move _134) -> [return: bb109, unwind: bb135]
  }
  preds [bb107]
  succs [bb109, bb135]

bb109
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:310:29-310:42)
      kind: switchInt(move _133) -> [0: bb115, otherwise: bb110]
  }
  preds [bb108]
  succs [bb110, bb115]

bb110
  0: StorageDead(_134)
    SourceInfo(regex-automata/src/dfa/special.rs:310:41-310:42)
  1: StorageLive(_135)
    SourceInfo(regex-automata/src/dfa/special.rs:310:46-310:77)
  2: StorageLive(_136)
    SourceInfo(regex-automata/src/dfa/special.rs:310:46-310:60)
  3: _136 = &((*_1).6: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:310:46-310:60)
  4: StorageLive(_137)
    SourceInfo(regex-automata/src/dfa/special.rs:310:63-310:77)
  5: _137 = &((*_1).4: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:310:63-310:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:310:46-310:77)
      kind: _135 = <util::primitives::StateID as core::cmp::PartialOrd>::lt(move _136, move _137) -> [return: bb111, unwind: bb135]
  }
  preds [bb109]
  succs [bb111, bb135]

bb111
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:310:46-310:77)
      kind: switchInt(move _135) -> [0: bb114, otherwise: bb112]
  }
  preds [bb110]
  succs [bb112, bb114]

bb112
  0: StorageDead(_137)
    SourceInfo(regex-automata/src/dfa/special.rs:310:76-310:77)
  1: StorageDead(_136)
    SourceInfo(regex-automata/src/dfa/special.rs:310:76-310:77)
  2: StorageLive(_139)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _139 = util::wire::DeserializeError::generic(const "min_accel should not be greater than min_start") -> [return: bb113, unwind: bb135]
  }
  preds [bb111]
  succs [bb113, bb135]

bb113
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _139)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_139)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_135)
    SourceInfo(regex-automata/src/dfa/special.rs:312:9-312:10)
  3: StorageDead(_133)
    SourceInfo(regex-automata/src/dfa/special.rs:312:9-312:10)
  4: StorageDead(_131)
    SourceInfo(regex-automata/src/dfa/special.rs:312:9-312:10)
  5: StorageDead(_130)
    SourceInfo(regex-automata/src/dfa/special.rs:312:9-312:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb112]
  succs [bb134]

bb114
  0: StorageDead(_137)
    SourceInfo(regex-automata/src/dfa/special.rs:310:76-310:77)
  1: StorageDead(_136)
    SourceInfo(regex-automata/src/dfa/special.rs:310:76-310:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb117
  }
  preds [bb111]
  succs [bb117]

bb115
  0: StorageDead(_134)
    SourceInfo(regex-automata/src/dfa/special.rs:310:41-310:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb117
  }
  preds [bb109]
  succs [bb117]

bb116
  0: StorageDead(_132)
    SourceInfo(regex-automata/src/dfa/special.rs:310:24-310:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb117
  }
  preds [bb107]
  succs [bb117]

bb117
  0: _130 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:312:10-312:10)
  1: StorageDead(_135)
    SourceInfo(regex-automata/src/dfa/special.rs:312:9-312:10)
  2: StorageDead(_133)
    SourceInfo(regex-automata/src/dfa/special.rs:312:9-312:10)
  3: StorageDead(_131)
    SourceInfo(regex-automata/src/dfa/special.rs:312:9-312:10)
  4: StorageDead(_130)
    SourceInfo(regex-automata/src/dfa/special.rs:312:9-312:10)
  5: StorageLive(_140)
    SourceInfo(regex-automata/src/dfa/special.rs:315:9-317:10)
  6: StorageLive(_141)
    SourceInfo(regex-automata/src/dfa/special.rs:315:12-315:35)
  7: StorageLive(_142)
    SourceInfo(regex-automata/src/dfa/special.rs:315:12-315:20)
  8: _142 = &((*_1).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:315:12-315:20)
  9: StorageLive(_143)
    SourceInfo(regex-automata/src/dfa/special.rs:315:23-315:35)
  10: _143 = &((*_1).1: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:315:23-315:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:315:12-315:35)
      kind: _141 = <util::primitives::StateID as core::cmp::PartialOrd>::lt(move _142, move _143) -> [return: bb118, unwind: bb135]
  }
  preds [bb114, bb115, bb116]
  succs [bb118, bb135]

bb118
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:315:12-315:35)
      kind: switchInt(move _141) -> [0: bb121, otherwise: bb119]
  }
  preds [bb117]
  succs [bb119, bb121]

bb119
  0: StorageDead(_143)
    SourceInfo(regex-automata/src/dfa/special.rs:315:34-315:35)
  1: StorageDead(_142)
    SourceInfo(regex-automata/src/dfa/special.rs:315:34-315:35)
  2: StorageLive(_145)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _145 = util::wire::DeserializeError::generic(const "quit_id should not be greater than max") -> [return: bb120, unwind: bb135]
  }
  preds [bb118]
  succs [bb120, bb135]

bb120
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _145)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_145)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_141)
    SourceInfo(regex-automata/src/dfa/special.rs:317:9-317:10)
  3: StorageDead(_140)
    SourceInfo(regex-automata/src/dfa/special.rs:317:9-317:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb119]
  succs [bb134]

bb121
  0: StorageDead(_143)
    SourceInfo(regex-automata/src/dfa/special.rs:315:34-315:35)
  1: StorageDead(_142)
    SourceInfo(regex-automata/src/dfa/special.rs:315:34-315:35)
  2: _140 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:317:10-317:10)
  3: StorageDead(_141)
    SourceInfo(regex-automata/src/dfa/special.rs:317:9-317:10)
  4: StorageDead(_140)
    SourceInfo(regex-automata/src/dfa/special.rs:317:9-317:10)
  5: StorageLive(_146)
    SourceInfo(regex-automata/src/dfa/special.rs:318:9-320:10)
  6: StorageLive(_147)
    SourceInfo(regex-automata/src/dfa/special.rs:318:12-318:37)
  7: StorageLive(_148)
    SourceInfo(regex-automata/src/dfa/special.rs:318:12-318:20)
  8: _148 = &((*_1).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:318:12-318:20)
  9: StorageLive(_149)
    SourceInfo(regex-automata/src/dfa/special.rs:318:23-318:37)
  10: _149 = &((*_1).3: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:318:23-318:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:318:12-318:37)
      kind: _147 = <util::primitives::StateID as core::cmp::PartialOrd>::lt(move _148, move _149) -> [return: bb122, unwind: bb135]
  }
  preds [bb118]
  succs [bb122, bb135]

bb122
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:318:12-318:37)
      kind: switchInt(move _147) -> [0: bb125, otherwise: bb123]
  }
  preds [bb121]
  succs [bb123, bb125]

bb123
  0: StorageDead(_149)
    SourceInfo(regex-automata/src/dfa/special.rs:318:36-318:37)
  1: StorageDead(_148)
    SourceInfo(regex-automata/src/dfa/special.rs:318:36-318:37)
  2: StorageLive(_151)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _151 = util::wire::DeserializeError::generic(const "max_match should not be greater than max") -> [return: bb124, unwind: bb135]
  }
  preds [bb122]
  succs [bb124, bb135]

bb124
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _151)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_151)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_147)
    SourceInfo(regex-automata/src/dfa/special.rs:320:9-320:10)
  3: StorageDead(_146)
    SourceInfo(regex-automata/src/dfa/special.rs:320:9-320:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb123]
  succs [bb134]

bb125
  0: StorageDead(_149)
    SourceInfo(regex-automata/src/dfa/special.rs:318:36-318:37)
  1: StorageDead(_148)
    SourceInfo(regex-automata/src/dfa/special.rs:318:36-318:37)
  2: _146 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:320:10-320:10)
  3: StorageDead(_147)
    SourceInfo(regex-automata/src/dfa/special.rs:320:9-320:10)
  4: StorageDead(_146)
    SourceInfo(regex-automata/src/dfa/special.rs:320:9-320:10)
  5: StorageLive(_152)
    SourceInfo(regex-automata/src/dfa/special.rs:321:9-323:10)
  6: StorageLive(_153)
    SourceInfo(regex-automata/src/dfa/special.rs:321:12-321:37)
  7: StorageLive(_154)
    SourceInfo(regex-automata/src/dfa/special.rs:321:12-321:20)
  8: _154 = &((*_1).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:321:12-321:20)
  9: StorageLive(_155)
    SourceInfo(regex-automata/src/dfa/special.rs:321:23-321:37)
  10: _155 = &((*_1).5: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:321:23-321:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:321:12-321:37)
      kind: _153 = <util::primitives::StateID as core::cmp::PartialOrd>::lt(move _154, move _155) -> [return: bb126, unwind: bb135]
  }
  preds [bb122]
  succs [bb126, bb135]

bb126
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:321:12-321:37)
      kind: switchInt(move _153) -> [0: bb129, otherwise: bb127]
  }
  preds [bb125]
  succs [bb127, bb129]

bb127
  0: StorageDead(_155)
    SourceInfo(regex-automata/src/dfa/special.rs:321:36-321:37)
  1: StorageDead(_154)
    SourceInfo(regex-automata/src/dfa/special.rs:321:36-321:37)
  2: StorageLive(_157)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _157 = util::wire::DeserializeError::generic(const "max_accel should not be greater than max") -> [return: bb128, unwind: bb135]
  }
  preds [bb126]
  succs [bb128, bb135]

bb128
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _157)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_157)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_153)
    SourceInfo(regex-automata/src/dfa/special.rs:323:9-323:10)
  3: StorageDead(_152)
    SourceInfo(regex-automata/src/dfa/special.rs:323:9-323:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb127]
  succs [bb134]

bb129
  0: StorageDead(_155)
    SourceInfo(regex-automata/src/dfa/special.rs:321:36-321:37)
  1: StorageDead(_154)
    SourceInfo(regex-automata/src/dfa/special.rs:321:36-321:37)
  2: _152 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:323:10-323:10)
  3: StorageDead(_153)
    SourceInfo(regex-automata/src/dfa/special.rs:323:9-323:10)
  4: StorageDead(_152)
    SourceInfo(regex-automata/src/dfa/special.rs:323:9-323:10)
  5: StorageLive(_158)
    SourceInfo(regex-automata/src/dfa/special.rs:324:9-326:10)
  6: StorageLive(_159)
    SourceInfo(regex-automata/src/dfa/special.rs:324:12-324:37)
  7: StorageLive(_160)
    SourceInfo(regex-automata/src/dfa/special.rs:324:12-324:20)
  8: _160 = &((*_1).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:324:12-324:20)
  9: StorageLive(_161)
    SourceInfo(regex-automata/src/dfa/special.rs:324:23-324:37)
  10: _161 = &((*_1).7: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/special.rs:324:23-324:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:324:12-324:37)
      kind: _159 = <util::primitives::StateID as core::cmp::PartialOrd>::lt(move _160, move _161) -> [return: bb130, unwind: bb135]
  }
  preds [bb126]
  succs [bb130, bb135]

bb130
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:324:12-324:37)
      kind: switchInt(move _159) -> [0: bb133, otherwise: bb131]
  }
  preds [bb129]
  succs [bb131, bb133]

bb131
  0: StorageDead(_161)
    SourceInfo(regex-automata/src/dfa/special.rs:324:36-324:37)
  1: StorageDead(_160)
    SourceInfo(regex-automata/src/dfa/special.rs:324:36-324:37)
  2: StorageLive(_163)
    SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:11:20-11:51)
      kind: _163 = util::wire::DeserializeError::generic(const "max_start should not be greater than max") -> [return: bb132, unwind: bb135]
  }
  preds [bb130]
  succs [bb132, bb135]

bb132
  0: _0 = core::result::Result::<(), util::wire::DeserializeError>::Err(move _163)
    SourceInfo(regex-automata/src/dfa/special.rs:11:16-11:52)
  1: StorageDead(_163)
    SourceInfo(regex-automata/src/dfa/special.rs:11:51-11:52)
  2: StorageDead(_159)
    SourceInfo(regex-automata/src/dfa/special.rs:326:9-326:10)
  3: StorageDead(_158)
    SourceInfo(regex-automata/src/dfa/special.rs:326:9-326:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb131]
  succs [bb134]

bb133
  0: StorageDead(_161)
    SourceInfo(regex-automata/src/dfa/special.rs:324:36-324:37)
  1: StorageDead(_160)
    SourceInfo(regex-automata/src/dfa/special.rs:324:36-324:37)
  2: _158 = const ()
    SourceInfo(regex-automata/src/dfa/special.rs:326:10-326:10)
  3: StorageDead(_159)
    SourceInfo(regex-automata/src/dfa/special.rs:326:9-326:10)
  4: StorageDead(_158)
    SourceInfo(regex-automata/src/dfa/special.rs:326:9-326:10)
  5: StorageLive(_164)
    SourceInfo(regex-automata/src/dfa/special.rs:328:12-328:14)
  6: _164 = ()
    SourceInfo(regex-automata/src/dfa/special.rs:328:12-328:14)
  7: _0 = core::result::Result::<(), util::wire::DeserializeError>::Ok(move _164)
    SourceInfo(regex-automata/src/dfa/special.rs:328:9-328:15)
  8: StorageDead(_164)
    SourceInfo(regex-automata/src/dfa/special.rs:328:14-328:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:329:6-329:6)
      kind: goto -> bb134
  }
  preds [bb130]
  succs [bb134]

bb134
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:329:6-329:6)
      kind: return
  }
  preds [bb5, bb13, bb21, bb29, bb37, bb45, bb51, bb55, bb59, bb65, bb73, bb81, bb91, bb102, bb113, bb120, bb124, bb128, bb132, bb133]
  succs []

bb135
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/special.rs:262:5-329:6)
      kind: resume
  }
  preds [bb0, bb2, bb4, bb8, bb10, bb12, bb16, bb18, bb20, bb24, bb26, bb28, bb32, bb34, bb36, bb40, bb42, bb44, bb48, bb50, bb52, bb54, bb56, bb58, bb60, bb62, bb64, bb68, bb70, bb72, bb76, bb78, bb80, bb84, bb86, bb88, bb90, bb95, bb97, bb99, bb101, bb106, bb108, bb110, bb112, bb117, bb119, bb121, bb123, bb125, bb127, bb129, bb131]
  succs []

