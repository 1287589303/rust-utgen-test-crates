{
  "regex-automata/src/dfa/sparse.rs:1376:9:1377:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "size_of::<u32>()   // state length\n        + size_of::<u32>()",
          "lhs": "size_of::<u32>()",
          "rhs": "size_of::<u32>()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:1376:9:1380:30": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "size_of::<u32>()   // state length\n        + size_of::<u32>() // pattern length\n        + self.classes.write_to_len()\n        + size_of::<u32>() // sparse transitions length\n        + self.sparse().len()",
          "lhs": "size_of::<u32>()   // state length\n        + size_of::<u32>() // pattern length\n        + self.classes.write_to_len()\n        + size_of::<u32>()",
          "rhs": "self.sparse().len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:1376:9:1378:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "size_of::<u32>()   // state length\n        + size_of::<u32>() // pattern length\n        + self.classes.write_to_len()",
          "lhs": "size_of::<u32>()   // state length\n        + size_of::<u32>()",
          "rhs": "self.classes.write_to_len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:1376:9:1379:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "size_of::<u32>()   // state length\n        + size_of::<u32>() // pattern length\n        + self.classes.write_to_len()\n        + size_of::<u32>()",
          "lhs": "size_of::<u32>()   // state length\n        + size_of::<u32>() // pattern length\n        + self.classes.write_to_len()",
          "rhs": "size_of::<u32>()",
          "cmp_with_int": false
        }
      }
    }
  ]
}