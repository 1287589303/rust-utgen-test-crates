bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/util/look.rs:741:9-745:10)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/util/look.rs:741:12-741:37)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/util/look.rs:741:12-741:15)
  3: _7 = _2
    SourceInfo(regex-automata/src/util/look.rs:741:12-741:15)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/util/look.rs:741:25-741:36)
  5: _8 = util::look::Look::Start
    SourceInfo(regex-automata/src/util/look.rs:741:25-741:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:741:12-741:37)
      kind: _6 = util::look::LookSet::contains(move _7, move _8) -> [return: bb1, unwind: bb134]
  }
  preds []
  succs [bb1, bb134]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:741:12-741:37)
      kind: switchInt(move _6) -> [0: bb6, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/look.rs:741:36-741:37)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/look.rs:741:36-741:37)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/util/look.rs:742:17-742:44)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/util/look.rs:742:17-742:21)
  4: _10 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:742:17-742:21)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/util/look.rs:742:31-742:39)
  6: _11 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:742:31-742:39)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/util/look.rs:742:41-742:43)
  8: _12 = _4
    SourceInfo(regex-automata/src/util/look.rs:742:41-742:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:742:17-742:44)
      kind: _9 = util::look::LookMatcher::is_start(move _10, move _11, move _12) -> [return: bb3, unwind: bb134]
  }
  preds [bb1]
  succs [bb3, bb134]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:742:17-742:44)
      kind: switchInt(move _9) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/look.rs:742:43-742:44)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/util/look.rs:742:43-742:44)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/util/look.rs:742:43-742:44)
  3: _5 = const ()
    SourceInfo(regex-automata/src/util/look.rs:744:14-744:14)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/util/look.rs:744:13-744:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:741:9-745:10)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/look.rs:742:43-742:44)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/util/look.rs:742:43-742:44)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/util/look.rs:742:43-742:44)
  3: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:743:24-743:29)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/util/look.rs:744:13-744:14)
  5: StorageDead(_6)
    SourceInfo(regex-automata/src/util/look.rs:745:9-745:10)
  6: StorageDead(_5)
    SourceInfo(regex-automata/src/util/look.rs:745:9-745:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb3]
  succs [bb133]

bb6
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/look.rs:741:36-741:37)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/look.rs:741:36-741:37)
  2: _5 = const ()
    SourceInfo(regex-automata/src/util/look.rs:745:10-745:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:741:9-745:10)
      kind: goto -> bb7
  }
  preds [bb1]
  succs [bb7]

bb7
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/look.rs:745:9-745:10)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/look.rs:745:9-745:10)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/util/look.rs:746:9-750:10)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/util/look.rs:746:12-746:35)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/util/look.rs:746:12-746:15)
  5: _16 = _2
    SourceInfo(regex-automata/src/util/look.rs:746:12-746:15)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/util/look.rs:746:25-746:34)
  7: _17 = util::look::Look::End
    SourceInfo(regex-automata/src/util/look.rs:746:25-746:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:746:12-746:35)
      kind: _15 = util::look::LookSet::contains(move _16, move _17) -> [return: bb8, unwind: bb134]
  }
  preds [bb4, bb6]
  succs [bb8, bb134]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:746:12-746:35)
      kind: switchInt(move _15) -> [0: bb13, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb13]

bb9
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/util/look.rs:746:34-746:35)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/util/look.rs:746:34-746:35)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/util/look.rs:747:17-747:42)
  3: StorageLive(_19)
    SourceInfo(regex-automata/src/util/look.rs:747:17-747:21)
  4: _19 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:747:17-747:21)
  5: StorageLive(_20)
    SourceInfo(regex-automata/src/util/look.rs:747:29-747:37)
  6: _20 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:747:29-747:37)
  7: StorageLive(_21)
    SourceInfo(regex-automata/src/util/look.rs:747:39-747:41)
  8: _21 = _4
    SourceInfo(regex-automata/src/util/look.rs:747:39-747:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:747:17-747:42)
      kind: _18 = util::look::LookMatcher::is_end(move _19, move _20, move _21) -> [return: bb10, unwind: bb134]
  }
  preds [bb8]
  succs [bb10, bb134]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:747:17-747:42)
      kind: switchInt(move _18) -> [0: bb12, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12]

bb11
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/util/look.rs:747:41-747:42)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/util/look.rs:747:41-747:42)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/util/look.rs:747:41-747:42)
  3: _14 = const ()
    SourceInfo(regex-automata/src/util/look.rs:749:14-749:14)
  4: StorageDead(_18)
    SourceInfo(regex-automata/src/util/look.rs:749:13-749:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:746:9-750:10)
      kind: goto -> bb14
  }
  preds [bb10]
  succs [bb14]

bb12
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/util/look.rs:747:41-747:42)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/util/look.rs:747:41-747:42)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/util/look.rs:747:41-747:42)
  3: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:748:24-748:29)
  4: StorageDead(_18)
    SourceInfo(regex-automata/src/util/look.rs:749:13-749:14)
  5: StorageDead(_15)
    SourceInfo(regex-automata/src/util/look.rs:750:9-750:10)
  6: StorageDead(_14)
    SourceInfo(regex-automata/src/util/look.rs:750:9-750:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb10]
  succs [bb133]

bb13
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/util/look.rs:746:34-746:35)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/util/look.rs:746:34-746:35)
  2: _14 = const ()
    SourceInfo(regex-automata/src/util/look.rs:750:10-750:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:746:9-750:10)
      kind: goto -> bb14
  }
  preds [bb8]
  succs [bb14]

bb14
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/look.rs:750:9-750:10)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/util/look.rs:750:9-750:10)
  2: StorageLive(_23)
    SourceInfo(regex-automata/src/util/look.rs:751:9-755:10)
  3: StorageLive(_24)
    SourceInfo(regex-automata/src/util/look.rs:751:12-751:39)
  4: StorageLive(_25)
    SourceInfo(regex-automata/src/util/look.rs:751:12-751:15)
  5: _25 = _2
    SourceInfo(regex-automata/src/util/look.rs:751:12-751:15)
  6: StorageLive(_26)
    SourceInfo(regex-automata/src/util/look.rs:751:25-751:38)
  7: _26 = util::look::Look::StartLF
    SourceInfo(regex-automata/src/util/look.rs:751:25-751:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:751:12-751:39)
      kind: _24 = util::look::LookSet::contains(move _25, move _26) -> [return: bb15, unwind: bb134]
  }
  preds [bb11, bb13]
  succs [bb15, bb134]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:751:12-751:39)
      kind: switchInt(move _24) -> [0: bb20, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb20]

bb16
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/util/look.rs:751:38-751:39)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/util/look.rs:751:38-751:39)
  2: StorageLive(_27)
    SourceInfo(regex-automata/src/util/look.rs:752:17-752:47)
  3: StorageLive(_28)
    SourceInfo(regex-automata/src/util/look.rs:752:17-752:21)
  4: _28 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:752:17-752:21)
  5: StorageLive(_29)
    SourceInfo(regex-automata/src/util/look.rs:752:34-752:42)
  6: _29 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:752:34-752:42)
  7: StorageLive(_30)
    SourceInfo(regex-automata/src/util/look.rs:752:44-752:46)
  8: _30 = _4
    SourceInfo(regex-automata/src/util/look.rs:752:44-752:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:752:17-752:47)
      kind: _27 = util::look::LookMatcher::is_start_lf(move _28, move _29, move _30) -> [return: bb17, unwind: bb134]
  }
  preds [bb15]
  succs [bb17, bb134]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:752:17-752:47)
      kind: switchInt(move _27) -> [0: bb19, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19]

bb18
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/util/look.rs:752:46-752:47)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/util/look.rs:752:46-752:47)
  2: StorageDead(_28)
    SourceInfo(regex-automata/src/util/look.rs:752:46-752:47)
  3: _23 = const ()
    SourceInfo(regex-automata/src/util/look.rs:754:14-754:14)
  4: StorageDead(_27)
    SourceInfo(regex-automata/src/util/look.rs:754:13-754:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:751:9-755:10)
      kind: goto -> bb21
  }
  preds [bb17]
  succs [bb21]

bb19
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/util/look.rs:752:46-752:47)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/util/look.rs:752:46-752:47)
  2: StorageDead(_28)
    SourceInfo(regex-automata/src/util/look.rs:752:46-752:47)
  3: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:753:24-753:29)
  4: StorageDead(_27)
    SourceInfo(regex-automata/src/util/look.rs:754:13-754:14)
  5: StorageDead(_24)
    SourceInfo(regex-automata/src/util/look.rs:755:9-755:10)
  6: StorageDead(_23)
    SourceInfo(regex-automata/src/util/look.rs:755:9-755:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb17]
  succs [bb133]

bb20
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/util/look.rs:751:38-751:39)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/util/look.rs:751:38-751:39)
  2: _23 = const ()
    SourceInfo(regex-automata/src/util/look.rs:755:10-755:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:751:9-755:10)
      kind: goto -> bb21
  }
  preds [bb15]
  succs [bb21]

bb21
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/util/look.rs:755:9-755:10)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/util/look.rs:755:9-755:10)
  2: StorageLive(_32)
    SourceInfo(regex-automata/src/util/look.rs:756:9-760:10)
  3: StorageLive(_33)
    SourceInfo(regex-automata/src/util/look.rs:756:12-756:37)
  4: StorageLive(_34)
    SourceInfo(regex-automata/src/util/look.rs:756:12-756:15)
  5: _34 = _2
    SourceInfo(regex-automata/src/util/look.rs:756:12-756:15)
  6: StorageLive(_35)
    SourceInfo(regex-automata/src/util/look.rs:756:25-756:36)
  7: _35 = util::look::Look::EndLF
    SourceInfo(regex-automata/src/util/look.rs:756:25-756:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:756:12-756:37)
      kind: _33 = util::look::LookSet::contains(move _34, move _35) -> [return: bb22, unwind: bb134]
  }
  preds [bb18, bb20]
  succs [bb22, bb134]

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:756:12-756:37)
      kind: switchInt(move _33) -> [0: bb27, otherwise: bb23]
  }
  preds [bb21]
  succs [bb23, bb27]

bb23
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/util/look.rs:756:36-756:37)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/util/look.rs:756:36-756:37)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/util/look.rs:757:17-757:45)
  3: StorageLive(_37)
    SourceInfo(regex-automata/src/util/look.rs:757:17-757:21)
  4: _37 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:757:17-757:21)
  5: StorageLive(_38)
    SourceInfo(regex-automata/src/util/look.rs:757:32-757:40)
  6: _38 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:757:32-757:40)
  7: StorageLive(_39)
    SourceInfo(regex-automata/src/util/look.rs:757:42-757:44)
  8: _39 = _4
    SourceInfo(regex-automata/src/util/look.rs:757:42-757:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:757:17-757:45)
      kind: _36 = util::look::LookMatcher::is_end_lf(move _37, move _38, move _39) -> [return: bb24, unwind: bb134]
  }
  preds [bb22]
  succs [bb24, bb134]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:757:17-757:45)
      kind: switchInt(move _36) -> [0: bb26, otherwise: bb25]
  }
  preds [bb23]
  succs [bb25, bb26]

bb25
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/util/look.rs:757:44-757:45)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/util/look.rs:757:44-757:45)
  2: StorageDead(_37)
    SourceInfo(regex-automata/src/util/look.rs:757:44-757:45)
  3: _32 = const ()
    SourceInfo(regex-automata/src/util/look.rs:759:14-759:14)
  4: StorageDead(_36)
    SourceInfo(regex-automata/src/util/look.rs:759:13-759:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:756:9-760:10)
      kind: goto -> bb28
  }
  preds [bb24]
  succs [bb28]

bb26
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/util/look.rs:757:44-757:45)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/util/look.rs:757:44-757:45)
  2: StorageDead(_37)
    SourceInfo(regex-automata/src/util/look.rs:757:44-757:45)
  3: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:758:24-758:29)
  4: StorageDead(_36)
    SourceInfo(regex-automata/src/util/look.rs:759:13-759:14)
  5: StorageDead(_33)
    SourceInfo(regex-automata/src/util/look.rs:760:9-760:10)
  6: StorageDead(_32)
    SourceInfo(regex-automata/src/util/look.rs:760:9-760:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb24]
  succs [bb133]

bb27
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/util/look.rs:756:36-756:37)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/util/look.rs:756:36-756:37)
  2: _32 = const ()
    SourceInfo(regex-automata/src/util/look.rs:760:10-760:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:756:9-760:10)
      kind: goto -> bb28
  }
  preds [bb22]
  succs [bb28]

bb28
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/util/look.rs:760:9-760:10)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/util/look.rs:760:9-760:10)
  2: StorageLive(_41)
    SourceInfo(regex-automata/src/util/look.rs:761:9-765:10)
  3: StorageLive(_42)
    SourceInfo(regex-automata/src/util/look.rs:761:12-761:41)
  4: StorageLive(_43)
    SourceInfo(regex-automata/src/util/look.rs:761:12-761:15)
  5: _43 = _2
    SourceInfo(regex-automata/src/util/look.rs:761:12-761:15)
  6: StorageLive(_44)
    SourceInfo(regex-automata/src/util/look.rs:761:25-761:40)
  7: _44 = util::look::Look::StartCRLF
    SourceInfo(regex-automata/src/util/look.rs:761:25-761:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:761:12-761:41)
      kind: _42 = util::look::LookSet::contains(move _43, move _44) -> [return: bb29, unwind: bb134]
  }
  preds [bb25, bb27]
  succs [bb29, bb134]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:761:12-761:41)
      kind: switchInt(move _42) -> [0: bb34, otherwise: bb30]
  }
  preds [bb28]
  succs [bb30, bb34]

bb30
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/util/look.rs:761:40-761:41)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/util/look.rs:761:40-761:41)
  2: StorageLive(_45)
    SourceInfo(regex-automata/src/util/look.rs:762:17-762:49)
  3: StorageLive(_46)
    SourceInfo(regex-automata/src/util/look.rs:762:17-762:21)
  4: _46 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:762:17-762:21)
  5: StorageLive(_47)
    SourceInfo(regex-automata/src/util/look.rs:762:36-762:44)
  6: _47 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:762:36-762:44)
  7: StorageLive(_48)
    SourceInfo(regex-automata/src/util/look.rs:762:46-762:48)
  8: _48 = _4
    SourceInfo(regex-automata/src/util/look.rs:762:46-762:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:762:17-762:49)
      kind: _45 = util::look::LookMatcher::is_start_crlf(move _46, move _47, move _48) -> [return: bb31, unwind: bb134]
  }
  preds [bb29]
  succs [bb31, bb134]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:762:17-762:49)
      kind: switchInt(move _45) -> [0: bb33, otherwise: bb32]
  }
  preds [bb30]
  succs [bb32, bb33]

bb32
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/util/look.rs:762:48-762:49)
  1: StorageDead(_47)
    SourceInfo(regex-automata/src/util/look.rs:762:48-762:49)
  2: StorageDead(_46)
    SourceInfo(regex-automata/src/util/look.rs:762:48-762:49)
  3: _41 = const ()
    SourceInfo(regex-automata/src/util/look.rs:764:14-764:14)
  4: StorageDead(_45)
    SourceInfo(regex-automata/src/util/look.rs:764:13-764:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:761:9-765:10)
      kind: goto -> bb35
  }
  preds [bb31]
  succs [bb35]

bb33
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/util/look.rs:762:48-762:49)
  1: StorageDead(_47)
    SourceInfo(regex-automata/src/util/look.rs:762:48-762:49)
  2: StorageDead(_46)
    SourceInfo(regex-automata/src/util/look.rs:762:48-762:49)
  3: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:763:24-763:29)
  4: StorageDead(_45)
    SourceInfo(regex-automata/src/util/look.rs:764:13-764:14)
  5: StorageDead(_42)
    SourceInfo(regex-automata/src/util/look.rs:765:9-765:10)
  6: StorageDead(_41)
    SourceInfo(regex-automata/src/util/look.rs:765:9-765:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb31]
  succs [bb133]

bb34
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/util/look.rs:761:40-761:41)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/util/look.rs:761:40-761:41)
  2: _41 = const ()
    SourceInfo(regex-automata/src/util/look.rs:765:10-765:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:761:9-765:10)
      kind: goto -> bb35
  }
  preds [bb29]
  succs [bb35]

bb35
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/util/look.rs:765:9-765:10)
  1: StorageDead(_41)
    SourceInfo(regex-automata/src/util/look.rs:765:9-765:10)
  2: StorageLive(_50)
    SourceInfo(regex-automata/src/util/look.rs:766:9-770:10)
  3: StorageLive(_51)
    SourceInfo(regex-automata/src/util/look.rs:766:12-766:39)
  4: StorageLive(_52)
    SourceInfo(regex-automata/src/util/look.rs:766:12-766:15)
  5: _52 = _2
    SourceInfo(regex-automata/src/util/look.rs:766:12-766:15)
  6: StorageLive(_53)
    SourceInfo(regex-automata/src/util/look.rs:766:25-766:38)
  7: _53 = util::look::Look::EndCRLF
    SourceInfo(regex-automata/src/util/look.rs:766:25-766:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:766:12-766:39)
      kind: _51 = util::look::LookSet::contains(move _52, move _53) -> [return: bb36, unwind: bb134]
  }
  preds [bb32, bb34]
  succs [bb36, bb134]

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:766:12-766:39)
      kind: switchInt(move _51) -> [0: bb41, otherwise: bb37]
  }
  preds [bb35]
  succs [bb37, bb41]

bb37
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/util/look.rs:766:38-766:39)
  1: StorageDead(_52)
    SourceInfo(regex-automata/src/util/look.rs:766:38-766:39)
  2: StorageLive(_54)
    SourceInfo(regex-automata/src/util/look.rs:767:17-767:47)
  3: StorageLive(_55)
    SourceInfo(regex-automata/src/util/look.rs:767:17-767:21)
  4: _55 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:767:17-767:21)
  5: StorageLive(_56)
    SourceInfo(regex-automata/src/util/look.rs:767:34-767:42)
  6: _56 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:767:34-767:42)
  7: StorageLive(_57)
    SourceInfo(regex-automata/src/util/look.rs:767:44-767:46)
  8: _57 = _4
    SourceInfo(regex-automata/src/util/look.rs:767:44-767:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:767:17-767:47)
      kind: _54 = util::look::LookMatcher::is_end_crlf(move _55, move _56, move _57) -> [return: bb38, unwind: bb134]
  }
  preds [bb36]
  succs [bb38, bb134]

bb38
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:767:17-767:47)
      kind: switchInt(move _54) -> [0: bb40, otherwise: bb39]
  }
  preds [bb37]
  succs [bb39, bb40]

bb39
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/util/look.rs:767:46-767:47)
  1: StorageDead(_56)
    SourceInfo(regex-automata/src/util/look.rs:767:46-767:47)
  2: StorageDead(_55)
    SourceInfo(regex-automata/src/util/look.rs:767:46-767:47)
  3: _50 = const ()
    SourceInfo(regex-automata/src/util/look.rs:769:14-769:14)
  4: StorageDead(_54)
    SourceInfo(regex-automata/src/util/look.rs:769:13-769:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:766:9-770:10)
      kind: goto -> bb42
  }
  preds [bb38]
  succs [bb42]

bb40
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/util/look.rs:767:46-767:47)
  1: StorageDead(_56)
    SourceInfo(regex-automata/src/util/look.rs:767:46-767:47)
  2: StorageDead(_55)
    SourceInfo(regex-automata/src/util/look.rs:767:46-767:47)
  3: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:768:24-768:29)
  4: StorageDead(_54)
    SourceInfo(regex-automata/src/util/look.rs:769:13-769:14)
  5: StorageDead(_51)
    SourceInfo(regex-automata/src/util/look.rs:770:9-770:10)
  6: StorageDead(_50)
    SourceInfo(regex-automata/src/util/look.rs:770:9-770:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb38]
  succs [bb133]

bb41
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/util/look.rs:766:38-766:39)
  1: StorageDead(_52)
    SourceInfo(regex-automata/src/util/look.rs:766:38-766:39)
  2: _50 = const ()
    SourceInfo(regex-automata/src/util/look.rs:770:10-770:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:766:9-770:10)
      kind: goto -> bb42
  }
  preds [bb36]
  succs [bb42]

bb42
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/util/look.rs:770:9-770:10)
  1: StorageDead(_50)
    SourceInfo(regex-automata/src/util/look.rs:770:9-770:10)
  2: StorageLive(_59)
    SourceInfo(regex-automata/src/util/look.rs:771:9-775:10)
  3: StorageLive(_60)
    SourceInfo(regex-automata/src/util/look.rs:771:12-771:41)
  4: StorageLive(_61)
    SourceInfo(regex-automata/src/util/look.rs:771:12-771:15)
  5: _61 = _2
    SourceInfo(regex-automata/src/util/look.rs:771:12-771:15)
  6: StorageLive(_62)
    SourceInfo(regex-automata/src/util/look.rs:771:25-771:40)
  7: _62 = util::look::Look::WordAscii
    SourceInfo(regex-automata/src/util/look.rs:771:25-771:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:771:12-771:41)
      kind: _60 = util::look::LookSet::contains(move _61, move _62) -> [return: bb43, unwind: bb134]
  }
  preds [bb39, bb41]
  succs [bb43, bb134]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:771:12-771:41)
      kind: switchInt(move _60) -> [0: bb48, otherwise: bb44]
  }
  preds [bb42]
  succs [bb44, bb48]

bb44
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/util/look.rs:771:40-771:41)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/util/look.rs:771:40-771:41)
  2: StorageLive(_63)
    SourceInfo(regex-automata/src/util/look.rs:772:17-772:49)
  3: StorageLive(_64)
    SourceInfo(regex-automata/src/util/look.rs:772:17-772:21)
  4: _64 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:772:17-772:21)
  5: StorageLive(_65)
    SourceInfo(regex-automata/src/util/look.rs:772:36-772:44)
  6: _65 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:772:36-772:44)
  7: StorageLive(_66)
    SourceInfo(regex-automata/src/util/look.rs:772:46-772:48)
  8: _66 = _4
    SourceInfo(regex-automata/src/util/look.rs:772:46-772:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:772:17-772:49)
      kind: _63 = util::look::LookMatcher::is_word_ascii(move _64, move _65, move _66) -> [return: bb45, unwind: bb134]
  }
  preds [bb43]
  succs [bb45, bb134]

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:772:17-772:49)
      kind: switchInt(move _63) -> [0: bb47, otherwise: bb46]
  }
  preds [bb44]
  succs [bb46, bb47]

bb46
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/util/look.rs:772:48-772:49)
  1: StorageDead(_65)
    SourceInfo(regex-automata/src/util/look.rs:772:48-772:49)
  2: StorageDead(_64)
    SourceInfo(regex-automata/src/util/look.rs:772:48-772:49)
  3: _59 = const ()
    SourceInfo(regex-automata/src/util/look.rs:774:14-774:14)
  4: StorageDead(_63)
    SourceInfo(regex-automata/src/util/look.rs:774:13-774:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:771:9-775:10)
      kind: goto -> bb49
  }
  preds [bb45]
  succs [bb49]

bb47
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/util/look.rs:772:48-772:49)
  1: StorageDead(_65)
    SourceInfo(regex-automata/src/util/look.rs:772:48-772:49)
  2: StorageDead(_64)
    SourceInfo(regex-automata/src/util/look.rs:772:48-772:49)
  3: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:773:24-773:29)
  4: StorageDead(_63)
    SourceInfo(regex-automata/src/util/look.rs:774:13-774:14)
  5: StorageDead(_60)
    SourceInfo(regex-automata/src/util/look.rs:775:9-775:10)
  6: StorageDead(_59)
    SourceInfo(regex-automata/src/util/look.rs:775:9-775:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb45]
  succs [bb133]

bb48
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/util/look.rs:771:40-771:41)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/util/look.rs:771:40-771:41)
  2: _59 = const ()
    SourceInfo(regex-automata/src/util/look.rs:775:10-775:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:771:9-775:10)
      kind: goto -> bb49
  }
  preds [bb43]
  succs [bb49]

bb49
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/util/look.rs:775:9-775:10)
  1: StorageDead(_59)
    SourceInfo(regex-automata/src/util/look.rs:775:9-775:10)
  2: StorageLive(_68)
    SourceInfo(regex-automata/src/util/look.rs:776:9-780:10)
  3: StorageLive(_69)
    SourceInfo(regex-automata/src/util/look.rs:776:12-776:47)
  4: StorageLive(_70)
    SourceInfo(regex-automata/src/util/look.rs:776:12-776:15)
  5: _70 = _2
    SourceInfo(regex-automata/src/util/look.rs:776:12-776:15)
  6: StorageLive(_71)
    SourceInfo(regex-automata/src/util/look.rs:776:25-776:46)
  7: _71 = util::look::Look::WordAsciiNegate
    SourceInfo(regex-automata/src/util/look.rs:776:25-776:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:776:12-776:47)
      kind: _69 = util::look::LookSet::contains(move _70, move _71) -> [return: bb50, unwind: bb134]
  }
  preds [bb46, bb48]
  succs [bb50, bb134]

bb50
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:776:12-776:47)
      kind: switchInt(move _69) -> [0: bb55, otherwise: bb51]
  }
  preds [bb49]
  succs [bb51, bb55]

bb51
  0: StorageDead(_71)
    SourceInfo(regex-automata/src/util/look.rs:776:46-776:47)
  1: StorageDead(_70)
    SourceInfo(regex-automata/src/util/look.rs:776:46-776:47)
  2: StorageLive(_72)
    SourceInfo(regex-automata/src/util/look.rs:777:17-777:56)
  3: StorageLive(_73)
    SourceInfo(regex-automata/src/util/look.rs:777:17-777:21)
  4: _73 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:777:17-777:21)
  5: StorageLive(_74)
    SourceInfo(regex-automata/src/util/look.rs:777:43-777:51)
  6: _74 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:777:43-777:51)
  7: StorageLive(_75)
    SourceInfo(regex-automata/src/util/look.rs:777:53-777:55)
  8: _75 = _4
    SourceInfo(regex-automata/src/util/look.rs:777:53-777:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:777:17-777:56)
      kind: _72 = util::look::LookMatcher::is_word_ascii_negate(move _73, move _74, move _75) -> [return: bb52, unwind: bb134]
  }
  preds [bb50]
  succs [bb52, bb134]

bb52
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:777:17-777:56)
      kind: switchInt(move _72) -> [0: bb54, otherwise: bb53]
  }
  preds [bb51]
  succs [bb53, bb54]

bb53
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/util/look.rs:777:55-777:56)
  1: StorageDead(_74)
    SourceInfo(regex-automata/src/util/look.rs:777:55-777:56)
  2: StorageDead(_73)
    SourceInfo(regex-automata/src/util/look.rs:777:55-777:56)
  3: _68 = const ()
    SourceInfo(regex-automata/src/util/look.rs:779:14-779:14)
  4: StorageDead(_72)
    SourceInfo(regex-automata/src/util/look.rs:779:13-779:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:776:9-780:10)
      kind: goto -> bb56
  }
  preds [bb52]
  succs [bb56]

bb54
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/util/look.rs:777:55-777:56)
  1: StorageDead(_74)
    SourceInfo(regex-automata/src/util/look.rs:777:55-777:56)
  2: StorageDead(_73)
    SourceInfo(regex-automata/src/util/look.rs:777:55-777:56)
  3: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:778:24-778:29)
  4: StorageDead(_72)
    SourceInfo(regex-automata/src/util/look.rs:779:13-779:14)
  5: StorageDead(_69)
    SourceInfo(regex-automata/src/util/look.rs:780:9-780:10)
  6: StorageDead(_68)
    SourceInfo(regex-automata/src/util/look.rs:780:9-780:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb52]
  succs [bb133]

bb55
  0: StorageDead(_71)
    SourceInfo(regex-automata/src/util/look.rs:776:46-776:47)
  1: StorageDead(_70)
    SourceInfo(regex-automata/src/util/look.rs:776:46-776:47)
  2: _68 = const ()
    SourceInfo(regex-automata/src/util/look.rs:780:10-780:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:776:9-780:10)
      kind: goto -> bb56
  }
  preds [bb50]
  succs [bb56]

bb56
  0: StorageDead(_69)
    SourceInfo(regex-automata/src/util/look.rs:780:9-780:10)
  1: StorageDead(_68)
    SourceInfo(regex-automata/src/util/look.rs:780:9-780:10)
  2: StorageLive(_77)
    SourceInfo(regex-automata/src/util/look.rs:781:9-785:10)
  3: StorageLive(_78)
    SourceInfo(regex-automata/src/util/look.rs:781:12-781:43)
  4: StorageLive(_79)
    SourceInfo(regex-automata/src/util/look.rs:781:12-781:15)
  5: _79 = _2
    SourceInfo(regex-automata/src/util/look.rs:781:12-781:15)
  6: StorageLive(_80)
    SourceInfo(regex-automata/src/util/look.rs:781:25-781:42)
  7: _80 = util::look::Look::WordUnicode
    SourceInfo(regex-automata/src/util/look.rs:781:25-781:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:781:12-781:43)
      kind: _78 = util::look::LookSet::contains(move _79, move _80) -> [return: bb57, unwind: bb134]
  }
  preds [bb53, bb55]
  succs [bb57, bb134]

bb57
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:781:12-781:43)
      kind: switchInt(move _78) -> [0: bb63, otherwise: bb58]
  }
  preds [bb56]
  succs [bb58, bb63]

bb58
  0: StorageDead(_80)
    SourceInfo(regex-automata/src/util/look.rs:781:42-781:43)
  1: StorageDead(_79)
    SourceInfo(regex-automata/src/util/look.rs:781:42-781:43)
  2: StorageLive(_81)
    SourceInfo(regex-automata/src/util/look.rs:782:17-782:60)
  3: StorageLive(_82)
    SourceInfo(regex-automata/src/util/look.rs:782:17-782:51)
  4: StorageLive(_83)
    SourceInfo(regex-automata/src/util/look.rs:782:17-782:21)
  5: _83 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:782:17-782:21)
  6: StorageLive(_84)
    SourceInfo(regex-automata/src/util/look.rs:782:38-782:46)
  7: _84 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:782:38-782:46)
  8: StorageLive(_85)
    SourceInfo(regex-automata/src/util/look.rs:782:48-782:50)
  9: _85 = _4
    SourceInfo(regex-automata/src/util/look.rs:782:48-782:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:782:17-782:51)
      kind: _82 = util::look::LookMatcher::is_word_unicode(move _83, move _84, move _85) -> [return: bb59, unwind: bb134]
  }
  preds [bb57]
  succs [bb59, bb134]

bb59
  0: StorageDead(_85)
    SourceInfo(regex-automata/src/util/look.rs:782:50-782:51)
  1: StorageDead(_84)
    SourceInfo(regex-automata/src/util/look.rs:782:50-782:51)
  2: StorageDead(_83)
    SourceInfo(regex-automata/src/util/look.rs:782:50-782:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:782:17-782:60)
      kind: _81 = core::result::Result::<bool, util::look::UnicodeWordBoundaryError>::unwrap(move _82) -> [return: bb60, unwind: bb134]
  }
  preds [bb58]
  succs [bb60, bb134]

bb60
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:782:17-782:60)
      kind: switchInt(move _81) -> [0: bb62, otherwise: bb61]
  }
  preds [bb59]
  succs [bb61, bb62]

bb61
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/util/look.rs:782:59-782:60)
  1: _77 = const ()
    SourceInfo(regex-automata/src/util/look.rs:784:14-784:14)
  2: StorageDead(_81)
    SourceInfo(regex-automata/src/util/look.rs:784:13-784:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:781:9-785:10)
      kind: goto -> bb64
  }
  preds [bb60]
  succs [bb64]

bb62
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/util/look.rs:782:59-782:60)
  1: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:783:24-783:29)
  2: StorageDead(_81)
    SourceInfo(regex-automata/src/util/look.rs:784:13-784:14)
  3: StorageDead(_78)
    SourceInfo(regex-automata/src/util/look.rs:785:9-785:10)
  4: StorageDead(_77)
    SourceInfo(regex-automata/src/util/look.rs:785:9-785:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb60]
  succs [bb133]

bb63
  0: StorageDead(_80)
    SourceInfo(regex-automata/src/util/look.rs:781:42-781:43)
  1: StorageDead(_79)
    SourceInfo(regex-automata/src/util/look.rs:781:42-781:43)
  2: _77 = const ()
    SourceInfo(regex-automata/src/util/look.rs:785:10-785:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:781:9-785:10)
      kind: goto -> bb64
  }
  preds [bb57]
  succs [bb64]

bb64
  0: StorageDead(_78)
    SourceInfo(regex-automata/src/util/look.rs:785:9-785:10)
  1: StorageDead(_77)
    SourceInfo(regex-automata/src/util/look.rs:785:9-785:10)
  2: StorageLive(_87)
    SourceInfo(regex-automata/src/util/look.rs:786:9-790:10)
  3: StorageLive(_88)
    SourceInfo(regex-automata/src/util/look.rs:786:12-786:49)
  4: StorageLive(_89)
    SourceInfo(regex-automata/src/util/look.rs:786:12-786:15)
  5: _89 = _2
    SourceInfo(regex-automata/src/util/look.rs:786:12-786:15)
  6: StorageLive(_90)
    SourceInfo(regex-automata/src/util/look.rs:786:25-786:48)
  7: _90 = util::look::Look::WordUnicodeNegate
    SourceInfo(regex-automata/src/util/look.rs:786:25-786:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:786:12-786:49)
      kind: _88 = util::look::LookSet::contains(move _89, move _90) -> [return: bb65, unwind: bb134]
  }
  preds [bb61, bb63]
  succs [bb65, bb134]

bb65
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:786:12-786:49)
      kind: switchInt(move _88) -> [0: bb71, otherwise: bb66]
  }
  preds [bb64]
  succs [bb66, bb71]

bb66
  0: StorageDead(_90)
    SourceInfo(regex-automata/src/util/look.rs:786:48-786:49)
  1: StorageDead(_89)
    SourceInfo(regex-automata/src/util/look.rs:786:48-786:49)
  2: StorageLive(_91)
    SourceInfo(regex-automata/src/util/look.rs:787:17-787:67)
  3: StorageLive(_92)
    SourceInfo(regex-automata/src/util/look.rs:787:17-787:58)
  4: StorageLive(_93)
    SourceInfo(regex-automata/src/util/look.rs:787:17-787:21)
  5: _93 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:787:17-787:21)
  6: StorageLive(_94)
    SourceInfo(regex-automata/src/util/look.rs:787:45-787:53)
  7: _94 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:787:45-787:53)
  8: StorageLive(_95)
    SourceInfo(regex-automata/src/util/look.rs:787:55-787:57)
  9: _95 = _4
    SourceInfo(regex-automata/src/util/look.rs:787:55-787:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:787:17-787:58)
      kind: _92 = util::look::LookMatcher::is_word_unicode_negate(move _93, move _94, move _95) -> [return: bb67, unwind: bb134]
  }
  preds [bb65]
  succs [bb67, bb134]

bb67
  0: StorageDead(_95)
    SourceInfo(regex-automata/src/util/look.rs:787:57-787:58)
  1: StorageDead(_94)
    SourceInfo(regex-automata/src/util/look.rs:787:57-787:58)
  2: StorageDead(_93)
    SourceInfo(regex-automata/src/util/look.rs:787:57-787:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:787:17-787:67)
      kind: _91 = core::result::Result::<bool, util::look::UnicodeWordBoundaryError>::unwrap(move _92) -> [return: bb68, unwind: bb134]
  }
  preds [bb66]
  succs [bb68, bb134]

bb68
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:787:17-787:67)
      kind: switchInt(move _91) -> [0: bb70, otherwise: bb69]
  }
  preds [bb67]
  succs [bb69, bb70]

bb69
  0: StorageDead(_92)
    SourceInfo(regex-automata/src/util/look.rs:787:66-787:67)
  1: _87 = const ()
    SourceInfo(regex-automata/src/util/look.rs:789:14-789:14)
  2: StorageDead(_91)
    SourceInfo(regex-automata/src/util/look.rs:789:13-789:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:786:9-790:10)
      kind: goto -> bb72
  }
  preds [bb68]
  succs [bb72]

bb70
  0: StorageDead(_92)
    SourceInfo(regex-automata/src/util/look.rs:787:66-787:67)
  1: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:788:24-788:29)
  2: StorageDead(_91)
    SourceInfo(regex-automata/src/util/look.rs:789:13-789:14)
  3: StorageDead(_88)
    SourceInfo(regex-automata/src/util/look.rs:790:9-790:10)
  4: StorageDead(_87)
    SourceInfo(regex-automata/src/util/look.rs:790:9-790:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb68]
  succs [bb133]

bb71
  0: StorageDead(_90)
    SourceInfo(regex-automata/src/util/look.rs:786:48-786:49)
  1: StorageDead(_89)
    SourceInfo(regex-automata/src/util/look.rs:786:48-786:49)
  2: _87 = const ()
    SourceInfo(regex-automata/src/util/look.rs:790:10-790:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:786:9-790:10)
      kind: goto -> bb72
  }
  preds [bb65]
  succs [bb72]

bb72
  0: StorageDead(_88)
    SourceInfo(regex-automata/src/util/look.rs:790:9-790:10)
  1: StorageDead(_87)
    SourceInfo(regex-automata/src/util/look.rs:790:9-790:10)
  2: StorageLive(_97)
    SourceInfo(regex-automata/src/util/look.rs:791:9-795:10)
  3: StorageLive(_98)
    SourceInfo(regex-automata/src/util/look.rs:791:12-791:46)
  4: StorageLive(_99)
    SourceInfo(regex-automata/src/util/look.rs:791:12-791:15)
  5: _99 = _2
    SourceInfo(regex-automata/src/util/look.rs:791:12-791:15)
  6: StorageLive(_100)
    SourceInfo(regex-automata/src/util/look.rs:791:25-791:45)
  7: _100 = util::look::Look::WordStartAscii
    SourceInfo(regex-automata/src/util/look.rs:791:25-791:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:791:12-791:46)
      kind: _98 = util::look::LookSet::contains(move _99, move _100) -> [return: bb73, unwind: bb134]
  }
  preds [bb69, bb71]
  succs [bb73, bb134]

bb73
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:791:12-791:46)
      kind: switchInt(move _98) -> [0: bb78, otherwise: bb74]
  }
  preds [bb72]
  succs [bb74, bb78]

bb74
  0: StorageDead(_100)
    SourceInfo(regex-automata/src/util/look.rs:791:45-791:46)
  1: StorageDead(_99)
    SourceInfo(regex-automata/src/util/look.rs:791:45-791:46)
  2: StorageLive(_101)
    SourceInfo(regex-automata/src/util/look.rs:792:17-792:55)
  3: StorageLive(_102)
    SourceInfo(regex-automata/src/util/look.rs:792:17-792:21)
  4: _102 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:792:17-792:21)
  5: StorageLive(_103)
    SourceInfo(regex-automata/src/util/look.rs:792:42-792:50)
  6: _103 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:792:42-792:50)
  7: StorageLive(_104)
    SourceInfo(regex-automata/src/util/look.rs:792:52-792:54)
  8: _104 = _4
    SourceInfo(regex-automata/src/util/look.rs:792:52-792:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:792:17-792:55)
      kind: _101 = util::look::LookMatcher::is_word_start_ascii(move _102, move _103, move _104) -> [return: bb75, unwind: bb134]
  }
  preds [bb73]
  succs [bb75, bb134]

bb75
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:792:17-792:55)
      kind: switchInt(move _101) -> [0: bb77, otherwise: bb76]
  }
  preds [bb74]
  succs [bb76, bb77]

bb76
  0: StorageDead(_104)
    SourceInfo(regex-automata/src/util/look.rs:792:54-792:55)
  1: StorageDead(_103)
    SourceInfo(regex-automata/src/util/look.rs:792:54-792:55)
  2: StorageDead(_102)
    SourceInfo(regex-automata/src/util/look.rs:792:54-792:55)
  3: _97 = const ()
    SourceInfo(regex-automata/src/util/look.rs:794:14-794:14)
  4: StorageDead(_101)
    SourceInfo(regex-automata/src/util/look.rs:794:13-794:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:791:9-795:10)
      kind: goto -> bb79
  }
  preds [bb75]
  succs [bb79]

bb77
  0: StorageDead(_104)
    SourceInfo(regex-automata/src/util/look.rs:792:54-792:55)
  1: StorageDead(_103)
    SourceInfo(regex-automata/src/util/look.rs:792:54-792:55)
  2: StorageDead(_102)
    SourceInfo(regex-automata/src/util/look.rs:792:54-792:55)
  3: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:793:24-793:29)
  4: StorageDead(_101)
    SourceInfo(regex-automata/src/util/look.rs:794:13-794:14)
  5: StorageDead(_98)
    SourceInfo(regex-automata/src/util/look.rs:795:9-795:10)
  6: StorageDead(_97)
    SourceInfo(regex-automata/src/util/look.rs:795:9-795:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb75]
  succs [bb133]

bb78
  0: StorageDead(_100)
    SourceInfo(regex-automata/src/util/look.rs:791:45-791:46)
  1: StorageDead(_99)
    SourceInfo(regex-automata/src/util/look.rs:791:45-791:46)
  2: _97 = const ()
    SourceInfo(regex-automata/src/util/look.rs:795:10-795:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:791:9-795:10)
      kind: goto -> bb79
  }
  preds [bb73]
  succs [bb79]

bb79
  0: StorageDead(_98)
    SourceInfo(regex-automata/src/util/look.rs:795:9-795:10)
  1: StorageDead(_97)
    SourceInfo(regex-automata/src/util/look.rs:795:9-795:10)
  2: StorageLive(_106)
    SourceInfo(regex-automata/src/util/look.rs:796:9-800:10)
  3: StorageLive(_107)
    SourceInfo(regex-automata/src/util/look.rs:796:12-796:44)
  4: StorageLive(_108)
    SourceInfo(regex-automata/src/util/look.rs:796:12-796:15)
  5: _108 = _2
    SourceInfo(regex-automata/src/util/look.rs:796:12-796:15)
  6: StorageLive(_109)
    SourceInfo(regex-automata/src/util/look.rs:796:25-796:43)
  7: _109 = util::look::Look::WordEndAscii
    SourceInfo(regex-automata/src/util/look.rs:796:25-796:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:796:12-796:44)
      kind: _107 = util::look::LookSet::contains(move _108, move _109) -> [return: bb80, unwind: bb134]
  }
  preds [bb76, bb78]
  succs [bb80, bb134]

bb80
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:796:12-796:44)
      kind: switchInt(move _107) -> [0: bb85, otherwise: bb81]
  }
  preds [bb79]
  succs [bb81, bb85]

bb81
  0: StorageDead(_109)
    SourceInfo(regex-automata/src/util/look.rs:796:43-796:44)
  1: StorageDead(_108)
    SourceInfo(regex-automata/src/util/look.rs:796:43-796:44)
  2: StorageLive(_110)
    SourceInfo(regex-automata/src/util/look.rs:797:17-797:53)
  3: StorageLive(_111)
    SourceInfo(regex-automata/src/util/look.rs:797:17-797:21)
  4: _111 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:797:17-797:21)
  5: StorageLive(_112)
    SourceInfo(regex-automata/src/util/look.rs:797:40-797:48)
  6: _112 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:797:40-797:48)
  7: StorageLive(_113)
    SourceInfo(regex-automata/src/util/look.rs:797:50-797:52)
  8: _113 = _4
    SourceInfo(regex-automata/src/util/look.rs:797:50-797:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:797:17-797:53)
      kind: _110 = util::look::LookMatcher::is_word_end_ascii(move _111, move _112, move _113) -> [return: bb82, unwind: bb134]
  }
  preds [bb80]
  succs [bb82, bb134]

bb82
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:797:17-797:53)
      kind: switchInt(move _110) -> [0: bb84, otherwise: bb83]
  }
  preds [bb81]
  succs [bb83, bb84]

bb83
  0: StorageDead(_113)
    SourceInfo(regex-automata/src/util/look.rs:797:52-797:53)
  1: StorageDead(_112)
    SourceInfo(regex-automata/src/util/look.rs:797:52-797:53)
  2: StorageDead(_111)
    SourceInfo(regex-automata/src/util/look.rs:797:52-797:53)
  3: _106 = const ()
    SourceInfo(regex-automata/src/util/look.rs:799:14-799:14)
  4: StorageDead(_110)
    SourceInfo(regex-automata/src/util/look.rs:799:13-799:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:796:9-800:10)
      kind: goto -> bb86
  }
  preds [bb82]
  succs [bb86]

bb84
  0: StorageDead(_113)
    SourceInfo(regex-automata/src/util/look.rs:797:52-797:53)
  1: StorageDead(_112)
    SourceInfo(regex-automata/src/util/look.rs:797:52-797:53)
  2: StorageDead(_111)
    SourceInfo(regex-automata/src/util/look.rs:797:52-797:53)
  3: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:798:24-798:29)
  4: StorageDead(_110)
    SourceInfo(regex-automata/src/util/look.rs:799:13-799:14)
  5: StorageDead(_107)
    SourceInfo(regex-automata/src/util/look.rs:800:9-800:10)
  6: StorageDead(_106)
    SourceInfo(regex-automata/src/util/look.rs:800:9-800:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb82]
  succs [bb133]

bb85
  0: StorageDead(_109)
    SourceInfo(regex-automata/src/util/look.rs:796:43-796:44)
  1: StorageDead(_108)
    SourceInfo(regex-automata/src/util/look.rs:796:43-796:44)
  2: _106 = const ()
    SourceInfo(regex-automata/src/util/look.rs:800:10-800:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:796:9-800:10)
      kind: goto -> bb86
  }
  preds [bb80]
  succs [bb86]

bb86
  0: StorageDead(_107)
    SourceInfo(regex-automata/src/util/look.rs:800:9-800:10)
  1: StorageDead(_106)
    SourceInfo(regex-automata/src/util/look.rs:800:9-800:10)
  2: StorageLive(_115)
    SourceInfo(regex-automata/src/util/look.rs:801:9-805:10)
  3: StorageLive(_116)
    SourceInfo(regex-automata/src/util/look.rs:801:12-801:48)
  4: StorageLive(_117)
    SourceInfo(regex-automata/src/util/look.rs:801:12-801:15)
  5: _117 = _2
    SourceInfo(regex-automata/src/util/look.rs:801:12-801:15)
  6: StorageLive(_118)
    SourceInfo(regex-automata/src/util/look.rs:801:25-801:47)
  7: _118 = util::look::Look::WordStartUnicode
    SourceInfo(regex-automata/src/util/look.rs:801:25-801:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:801:12-801:48)
      kind: _116 = util::look::LookSet::contains(move _117, move _118) -> [return: bb87, unwind: bb134]
  }
  preds [bb83, bb85]
  succs [bb87, bb134]

bb87
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:801:12-801:48)
      kind: switchInt(move _116) -> [0: bb93, otherwise: bb88]
  }
  preds [bb86]
  succs [bb88, bb93]

bb88
  0: StorageDead(_118)
    SourceInfo(regex-automata/src/util/look.rs:801:47-801:48)
  1: StorageDead(_117)
    SourceInfo(regex-automata/src/util/look.rs:801:47-801:48)
  2: StorageLive(_119)
    SourceInfo(regex-automata/src/util/look.rs:802:17-802:66)
  3: StorageLive(_120)
    SourceInfo(regex-automata/src/util/look.rs:802:17-802:57)
  4: StorageLive(_121)
    SourceInfo(regex-automata/src/util/look.rs:802:17-802:21)
  5: _121 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:802:17-802:21)
  6: StorageLive(_122)
    SourceInfo(regex-automata/src/util/look.rs:802:44-802:52)
  7: _122 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:802:44-802:52)
  8: StorageLive(_123)
    SourceInfo(regex-automata/src/util/look.rs:802:54-802:56)
  9: _123 = _4
    SourceInfo(regex-automata/src/util/look.rs:802:54-802:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:802:17-802:57)
      kind: _120 = util::look::LookMatcher::is_word_start_unicode(move _121, move _122, move _123) -> [return: bb89, unwind: bb134]
  }
  preds [bb87]
  succs [bb89, bb134]

bb89
  0: StorageDead(_123)
    SourceInfo(regex-automata/src/util/look.rs:802:56-802:57)
  1: StorageDead(_122)
    SourceInfo(regex-automata/src/util/look.rs:802:56-802:57)
  2: StorageDead(_121)
    SourceInfo(regex-automata/src/util/look.rs:802:56-802:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:802:17-802:66)
      kind: _119 = core::result::Result::<bool, util::look::UnicodeWordBoundaryError>::unwrap(move _120) -> [return: bb90, unwind: bb134]
  }
  preds [bb88]
  succs [bb90, bb134]

bb90
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:802:17-802:66)
      kind: switchInt(move _119) -> [0: bb92, otherwise: bb91]
  }
  preds [bb89]
  succs [bb91, bb92]

bb91
  0: StorageDead(_120)
    SourceInfo(regex-automata/src/util/look.rs:802:65-802:66)
  1: _115 = const ()
    SourceInfo(regex-automata/src/util/look.rs:804:14-804:14)
  2: StorageDead(_119)
    SourceInfo(regex-automata/src/util/look.rs:804:13-804:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:801:9-805:10)
      kind: goto -> bb94
  }
  preds [bb90]
  succs [bb94]

bb92
  0: StorageDead(_120)
    SourceInfo(regex-automata/src/util/look.rs:802:65-802:66)
  1: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:803:24-803:29)
  2: StorageDead(_119)
    SourceInfo(regex-automata/src/util/look.rs:804:13-804:14)
  3: StorageDead(_116)
    SourceInfo(regex-automata/src/util/look.rs:805:9-805:10)
  4: StorageDead(_115)
    SourceInfo(regex-automata/src/util/look.rs:805:9-805:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb90]
  succs [bb133]

bb93
  0: StorageDead(_118)
    SourceInfo(regex-automata/src/util/look.rs:801:47-801:48)
  1: StorageDead(_117)
    SourceInfo(regex-automata/src/util/look.rs:801:47-801:48)
  2: _115 = const ()
    SourceInfo(regex-automata/src/util/look.rs:805:10-805:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:801:9-805:10)
      kind: goto -> bb94
  }
  preds [bb87]
  succs [bb94]

bb94
  0: StorageDead(_116)
    SourceInfo(regex-automata/src/util/look.rs:805:9-805:10)
  1: StorageDead(_115)
    SourceInfo(regex-automata/src/util/look.rs:805:9-805:10)
  2: StorageLive(_125)
    SourceInfo(regex-automata/src/util/look.rs:806:9-810:10)
  3: StorageLive(_126)
    SourceInfo(regex-automata/src/util/look.rs:806:12-806:46)
  4: StorageLive(_127)
    SourceInfo(regex-automata/src/util/look.rs:806:12-806:15)
  5: _127 = _2
    SourceInfo(regex-automata/src/util/look.rs:806:12-806:15)
  6: StorageLive(_128)
    SourceInfo(regex-automata/src/util/look.rs:806:25-806:45)
  7: _128 = util::look::Look::WordEndUnicode
    SourceInfo(regex-automata/src/util/look.rs:806:25-806:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:806:12-806:46)
      kind: _126 = util::look::LookSet::contains(move _127, move _128) -> [return: bb95, unwind: bb134]
  }
  preds [bb91, bb93]
  succs [bb95, bb134]

bb95
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:806:12-806:46)
      kind: switchInt(move _126) -> [0: bb101, otherwise: bb96]
  }
  preds [bb94]
  succs [bb96, bb101]

bb96
  0: StorageDead(_128)
    SourceInfo(regex-automata/src/util/look.rs:806:45-806:46)
  1: StorageDead(_127)
    SourceInfo(regex-automata/src/util/look.rs:806:45-806:46)
  2: StorageLive(_129)
    SourceInfo(regex-automata/src/util/look.rs:807:17-807:64)
  3: StorageLive(_130)
    SourceInfo(regex-automata/src/util/look.rs:807:17-807:55)
  4: StorageLive(_131)
    SourceInfo(regex-automata/src/util/look.rs:807:17-807:21)
  5: _131 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:807:17-807:21)
  6: StorageLive(_132)
    SourceInfo(regex-automata/src/util/look.rs:807:42-807:50)
  7: _132 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:807:42-807:50)
  8: StorageLive(_133)
    SourceInfo(regex-automata/src/util/look.rs:807:52-807:54)
  9: _133 = _4
    SourceInfo(regex-automata/src/util/look.rs:807:52-807:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:807:17-807:55)
      kind: _130 = util::look::LookMatcher::is_word_end_unicode(move _131, move _132, move _133) -> [return: bb97, unwind: bb134]
  }
  preds [bb95]
  succs [bb97, bb134]

bb97
  0: StorageDead(_133)
    SourceInfo(regex-automata/src/util/look.rs:807:54-807:55)
  1: StorageDead(_132)
    SourceInfo(regex-automata/src/util/look.rs:807:54-807:55)
  2: StorageDead(_131)
    SourceInfo(regex-automata/src/util/look.rs:807:54-807:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:807:17-807:64)
      kind: _129 = core::result::Result::<bool, util::look::UnicodeWordBoundaryError>::unwrap(move _130) -> [return: bb98, unwind: bb134]
  }
  preds [bb96]
  succs [bb98, bb134]

bb98
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:807:17-807:64)
      kind: switchInt(move _129) -> [0: bb100, otherwise: bb99]
  }
  preds [bb97]
  succs [bb99, bb100]

bb99
  0: StorageDead(_130)
    SourceInfo(regex-automata/src/util/look.rs:807:63-807:64)
  1: _125 = const ()
    SourceInfo(regex-automata/src/util/look.rs:809:14-809:14)
  2: StorageDead(_129)
    SourceInfo(regex-automata/src/util/look.rs:809:13-809:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:806:9-810:10)
      kind: goto -> bb102
  }
  preds [bb98]
  succs [bb102]

bb100
  0: StorageDead(_130)
    SourceInfo(regex-automata/src/util/look.rs:807:63-807:64)
  1: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:808:24-808:29)
  2: StorageDead(_129)
    SourceInfo(regex-automata/src/util/look.rs:809:13-809:14)
  3: StorageDead(_126)
    SourceInfo(regex-automata/src/util/look.rs:810:9-810:10)
  4: StorageDead(_125)
    SourceInfo(regex-automata/src/util/look.rs:810:9-810:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb98]
  succs [bb133]

bb101
  0: StorageDead(_128)
    SourceInfo(regex-automata/src/util/look.rs:806:45-806:46)
  1: StorageDead(_127)
    SourceInfo(regex-automata/src/util/look.rs:806:45-806:46)
  2: _125 = const ()
    SourceInfo(regex-automata/src/util/look.rs:810:10-810:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:806:9-810:10)
      kind: goto -> bb102
  }
  preds [bb95]
  succs [bb102]

bb102
  0: StorageDead(_126)
    SourceInfo(regex-automata/src/util/look.rs:810:9-810:10)
  1: StorageDead(_125)
    SourceInfo(regex-automata/src/util/look.rs:810:9-810:10)
  2: StorageLive(_135)
    SourceInfo(regex-automata/src/util/look.rs:811:9-815:10)
  3: StorageLive(_136)
    SourceInfo(regex-automata/src/util/look.rs:811:12-811:50)
  4: StorageLive(_137)
    SourceInfo(regex-automata/src/util/look.rs:811:12-811:15)
  5: _137 = _2
    SourceInfo(regex-automata/src/util/look.rs:811:12-811:15)
  6: StorageLive(_138)
    SourceInfo(regex-automata/src/util/look.rs:811:25-811:49)
  7: _138 = util::look::Look::WordStartHalfAscii
    SourceInfo(regex-automata/src/util/look.rs:811:25-811:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:811:12-811:50)
      kind: _136 = util::look::LookSet::contains(move _137, move _138) -> [return: bb103, unwind: bb134]
  }
  preds [bb99, bb101]
  succs [bb103, bb134]

bb103
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:811:12-811:50)
      kind: switchInt(move _136) -> [0: bb108, otherwise: bb104]
  }
  preds [bb102]
  succs [bb104, bb108]

bb104
  0: StorageDead(_138)
    SourceInfo(regex-automata/src/util/look.rs:811:49-811:50)
  1: StorageDead(_137)
    SourceInfo(regex-automata/src/util/look.rs:811:49-811:50)
  2: StorageLive(_139)
    SourceInfo(regex-automata/src/util/look.rs:812:17-812:60)
  3: StorageLive(_140)
    SourceInfo(regex-automata/src/util/look.rs:812:17-812:21)
  4: _140 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:812:17-812:21)
  5: StorageLive(_141)
    SourceInfo(regex-automata/src/util/look.rs:812:47-812:55)
  6: _141 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:812:47-812:55)
  7: StorageLive(_142)
    SourceInfo(regex-automata/src/util/look.rs:812:57-812:59)
  8: _142 = _4
    SourceInfo(regex-automata/src/util/look.rs:812:57-812:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:812:17-812:60)
      kind: _139 = util::look::LookMatcher::is_word_start_half_ascii(move _140, move _141, move _142) -> [return: bb105, unwind: bb134]
  }
  preds [bb103]
  succs [bb105, bb134]

bb105
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:812:17-812:60)
      kind: switchInt(move _139) -> [0: bb107, otherwise: bb106]
  }
  preds [bb104]
  succs [bb106, bb107]

bb106
  0: StorageDead(_142)
    SourceInfo(regex-automata/src/util/look.rs:812:59-812:60)
  1: StorageDead(_141)
    SourceInfo(regex-automata/src/util/look.rs:812:59-812:60)
  2: StorageDead(_140)
    SourceInfo(regex-automata/src/util/look.rs:812:59-812:60)
  3: _135 = const ()
    SourceInfo(regex-automata/src/util/look.rs:814:14-814:14)
  4: StorageDead(_139)
    SourceInfo(regex-automata/src/util/look.rs:814:13-814:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:811:9-815:10)
      kind: goto -> bb109
  }
  preds [bb105]
  succs [bb109]

bb107
  0: StorageDead(_142)
    SourceInfo(regex-automata/src/util/look.rs:812:59-812:60)
  1: StorageDead(_141)
    SourceInfo(regex-automata/src/util/look.rs:812:59-812:60)
  2: StorageDead(_140)
    SourceInfo(regex-automata/src/util/look.rs:812:59-812:60)
  3: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:813:24-813:29)
  4: StorageDead(_139)
    SourceInfo(regex-automata/src/util/look.rs:814:13-814:14)
  5: StorageDead(_136)
    SourceInfo(regex-automata/src/util/look.rs:815:9-815:10)
  6: StorageDead(_135)
    SourceInfo(regex-automata/src/util/look.rs:815:9-815:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb105]
  succs [bb133]

bb108
  0: StorageDead(_138)
    SourceInfo(regex-automata/src/util/look.rs:811:49-811:50)
  1: StorageDead(_137)
    SourceInfo(regex-automata/src/util/look.rs:811:49-811:50)
  2: _135 = const ()
    SourceInfo(regex-automata/src/util/look.rs:815:10-815:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:811:9-815:10)
      kind: goto -> bb109
  }
  preds [bb103]
  succs [bb109]

bb109
  0: StorageDead(_136)
    SourceInfo(regex-automata/src/util/look.rs:815:9-815:10)
  1: StorageDead(_135)
    SourceInfo(regex-automata/src/util/look.rs:815:9-815:10)
  2: StorageLive(_144)
    SourceInfo(regex-automata/src/util/look.rs:816:9-820:10)
  3: StorageLive(_145)
    SourceInfo(regex-automata/src/util/look.rs:816:12-816:48)
  4: StorageLive(_146)
    SourceInfo(regex-automata/src/util/look.rs:816:12-816:15)
  5: _146 = _2
    SourceInfo(regex-automata/src/util/look.rs:816:12-816:15)
  6: StorageLive(_147)
    SourceInfo(regex-automata/src/util/look.rs:816:25-816:47)
  7: _147 = util::look::Look::WordEndHalfAscii
    SourceInfo(regex-automata/src/util/look.rs:816:25-816:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:816:12-816:48)
      kind: _145 = util::look::LookSet::contains(move _146, move _147) -> [return: bb110, unwind: bb134]
  }
  preds [bb106, bb108]
  succs [bb110, bb134]

bb110
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:816:12-816:48)
      kind: switchInt(move _145) -> [0: bb115, otherwise: bb111]
  }
  preds [bb109]
  succs [bb111, bb115]

bb111
  0: StorageDead(_147)
    SourceInfo(regex-automata/src/util/look.rs:816:47-816:48)
  1: StorageDead(_146)
    SourceInfo(regex-automata/src/util/look.rs:816:47-816:48)
  2: StorageLive(_148)
    SourceInfo(regex-automata/src/util/look.rs:817:17-817:58)
  3: StorageLive(_149)
    SourceInfo(regex-automata/src/util/look.rs:817:17-817:21)
  4: _149 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:817:17-817:21)
  5: StorageLive(_150)
    SourceInfo(regex-automata/src/util/look.rs:817:45-817:53)
  6: _150 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:817:45-817:53)
  7: StorageLive(_151)
    SourceInfo(regex-automata/src/util/look.rs:817:55-817:57)
  8: _151 = _4
    SourceInfo(regex-automata/src/util/look.rs:817:55-817:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:817:17-817:58)
      kind: _148 = util::look::LookMatcher::is_word_end_half_ascii(move _149, move _150, move _151) -> [return: bb112, unwind: bb134]
  }
  preds [bb110]
  succs [bb112, bb134]

bb112
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:817:17-817:58)
      kind: switchInt(move _148) -> [0: bb114, otherwise: bb113]
  }
  preds [bb111]
  succs [bb113, bb114]

bb113
  0: StorageDead(_151)
    SourceInfo(regex-automata/src/util/look.rs:817:57-817:58)
  1: StorageDead(_150)
    SourceInfo(regex-automata/src/util/look.rs:817:57-817:58)
  2: StorageDead(_149)
    SourceInfo(regex-automata/src/util/look.rs:817:57-817:58)
  3: _144 = const ()
    SourceInfo(regex-automata/src/util/look.rs:819:14-819:14)
  4: StorageDead(_148)
    SourceInfo(regex-automata/src/util/look.rs:819:13-819:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:816:9-820:10)
      kind: goto -> bb116
  }
  preds [bb112]
  succs [bb116]

bb114
  0: StorageDead(_151)
    SourceInfo(regex-automata/src/util/look.rs:817:57-817:58)
  1: StorageDead(_150)
    SourceInfo(regex-automata/src/util/look.rs:817:57-817:58)
  2: StorageDead(_149)
    SourceInfo(regex-automata/src/util/look.rs:817:57-817:58)
  3: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:818:24-818:29)
  4: StorageDead(_148)
    SourceInfo(regex-automata/src/util/look.rs:819:13-819:14)
  5: StorageDead(_145)
    SourceInfo(regex-automata/src/util/look.rs:820:9-820:10)
  6: StorageDead(_144)
    SourceInfo(regex-automata/src/util/look.rs:820:9-820:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb112]
  succs [bb133]

bb115
  0: StorageDead(_147)
    SourceInfo(regex-automata/src/util/look.rs:816:47-816:48)
  1: StorageDead(_146)
    SourceInfo(regex-automata/src/util/look.rs:816:47-816:48)
  2: _144 = const ()
    SourceInfo(regex-automata/src/util/look.rs:820:10-820:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:816:9-820:10)
      kind: goto -> bb116
  }
  preds [bb110]
  succs [bb116]

bb116
  0: StorageDead(_145)
    SourceInfo(regex-automata/src/util/look.rs:820:9-820:10)
  1: StorageDead(_144)
    SourceInfo(regex-automata/src/util/look.rs:820:9-820:10)
  2: StorageLive(_153)
    SourceInfo(regex-automata/src/util/look.rs:821:9-825:10)
  3: StorageLive(_154)
    SourceInfo(regex-automata/src/util/look.rs:821:12-821:52)
  4: StorageLive(_155)
    SourceInfo(regex-automata/src/util/look.rs:821:12-821:15)
  5: _155 = _2
    SourceInfo(regex-automata/src/util/look.rs:821:12-821:15)
  6: StorageLive(_156)
    SourceInfo(regex-automata/src/util/look.rs:821:25-821:51)
  7: _156 = util::look::Look::WordStartHalfUnicode
    SourceInfo(regex-automata/src/util/look.rs:821:25-821:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:821:12-821:52)
      kind: _154 = util::look::LookSet::contains(move _155, move _156) -> [return: bb117, unwind: bb134]
  }
  preds [bb113, bb115]
  succs [bb117, bb134]

bb117
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:821:12-821:52)
      kind: switchInt(move _154) -> [0: bb123, otherwise: bb118]
  }
  preds [bb116]
  succs [bb118, bb123]

bb118
  0: StorageDead(_156)
    SourceInfo(regex-automata/src/util/look.rs:821:51-821:52)
  1: StorageDead(_155)
    SourceInfo(regex-automata/src/util/look.rs:821:51-821:52)
  2: StorageLive(_157)
    SourceInfo(regex-automata/src/util/look.rs:822:17-822:71)
  3: StorageLive(_158)
    SourceInfo(regex-automata/src/util/look.rs:822:17-822:62)
  4: StorageLive(_159)
    SourceInfo(regex-automata/src/util/look.rs:822:17-822:21)
  5: _159 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:822:17-822:21)
  6: StorageLive(_160)
    SourceInfo(regex-automata/src/util/look.rs:822:49-822:57)
  7: _160 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:822:49-822:57)
  8: StorageLive(_161)
    SourceInfo(regex-automata/src/util/look.rs:822:59-822:61)
  9: _161 = _4
    SourceInfo(regex-automata/src/util/look.rs:822:59-822:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:822:17-822:62)
      kind: _158 = util::look::LookMatcher::is_word_start_half_unicode(move _159, move _160, move _161) -> [return: bb119, unwind: bb134]
  }
  preds [bb117]
  succs [bb119, bb134]

bb119
  0: StorageDead(_161)
    SourceInfo(regex-automata/src/util/look.rs:822:61-822:62)
  1: StorageDead(_160)
    SourceInfo(regex-automata/src/util/look.rs:822:61-822:62)
  2: StorageDead(_159)
    SourceInfo(regex-automata/src/util/look.rs:822:61-822:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:822:17-822:71)
      kind: _157 = core::result::Result::<bool, util::look::UnicodeWordBoundaryError>::unwrap(move _158) -> [return: bb120, unwind: bb134]
  }
  preds [bb118]
  succs [bb120, bb134]

bb120
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:822:17-822:71)
      kind: switchInt(move _157) -> [0: bb122, otherwise: bb121]
  }
  preds [bb119]
  succs [bb121, bb122]

bb121
  0: StorageDead(_158)
    SourceInfo(regex-automata/src/util/look.rs:822:70-822:71)
  1: _153 = const ()
    SourceInfo(regex-automata/src/util/look.rs:824:14-824:14)
  2: StorageDead(_157)
    SourceInfo(regex-automata/src/util/look.rs:824:13-824:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:821:9-825:10)
      kind: goto -> bb124
  }
  preds [bb120]
  succs [bb124]

bb122
  0: StorageDead(_158)
    SourceInfo(regex-automata/src/util/look.rs:822:70-822:71)
  1: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:823:24-823:29)
  2: StorageDead(_157)
    SourceInfo(regex-automata/src/util/look.rs:824:13-824:14)
  3: StorageDead(_154)
    SourceInfo(regex-automata/src/util/look.rs:825:9-825:10)
  4: StorageDead(_153)
    SourceInfo(regex-automata/src/util/look.rs:825:9-825:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb120]
  succs [bb133]

bb123
  0: StorageDead(_156)
    SourceInfo(regex-automata/src/util/look.rs:821:51-821:52)
  1: StorageDead(_155)
    SourceInfo(regex-automata/src/util/look.rs:821:51-821:52)
  2: _153 = const ()
    SourceInfo(regex-automata/src/util/look.rs:825:10-825:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:821:9-825:10)
      kind: goto -> bb124
  }
  preds [bb117]
  succs [bb124]

bb124
  0: StorageDead(_154)
    SourceInfo(regex-automata/src/util/look.rs:825:9-825:10)
  1: StorageDead(_153)
    SourceInfo(regex-automata/src/util/look.rs:825:9-825:10)
  2: StorageLive(_163)
    SourceInfo(regex-automata/src/util/look.rs:826:9-830:10)
  3: StorageLive(_164)
    SourceInfo(regex-automata/src/util/look.rs:826:12-826:50)
  4: StorageLive(_165)
    SourceInfo(regex-automata/src/util/look.rs:826:12-826:15)
  5: _165 = _2
    SourceInfo(regex-automata/src/util/look.rs:826:12-826:15)
  6: StorageLive(_166)
    SourceInfo(regex-automata/src/util/look.rs:826:25-826:49)
  7: _166 = util::look::Look::WordEndHalfUnicode
    SourceInfo(regex-automata/src/util/look.rs:826:25-826:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:826:12-826:50)
      kind: _164 = util::look::LookSet::contains(move _165, move _166) -> [return: bb125, unwind: bb134]
  }
  preds [bb121, bb123]
  succs [bb125, bb134]

bb125
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:826:12-826:50)
      kind: switchInt(move _164) -> [0: bb131, otherwise: bb126]
  }
  preds [bb124]
  succs [bb126, bb131]

bb126
  0: StorageDead(_166)
    SourceInfo(regex-automata/src/util/look.rs:826:49-826:50)
  1: StorageDead(_165)
    SourceInfo(regex-automata/src/util/look.rs:826:49-826:50)
  2: StorageLive(_167)
    SourceInfo(regex-automata/src/util/look.rs:827:17-827:69)
  3: StorageLive(_168)
    SourceInfo(regex-automata/src/util/look.rs:827:17-827:60)
  4: StorageLive(_169)
    SourceInfo(regex-automata/src/util/look.rs:827:17-827:21)
  5: _169 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:827:17-827:21)
  6: StorageLive(_170)
    SourceInfo(regex-automata/src/util/look.rs:827:47-827:55)
  7: _170 = &(*_3)
    SourceInfo(regex-automata/src/util/look.rs:827:47-827:55)
  8: StorageLive(_171)
    SourceInfo(regex-automata/src/util/look.rs:827:57-827:59)
  9: _171 = _4
    SourceInfo(regex-automata/src/util/look.rs:827:57-827:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:827:17-827:60)
      kind: _168 = util::look::LookMatcher::is_word_end_half_unicode(move _169, move _170, move _171) -> [return: bb127, unwind: bb134]
  }
  preds [bb125]
  succs [bb127, bb134]

bb127
  0: StorageDead(_171)
    SourceInfo(regex-automata/src/util/look.rs:827:59-827:60)
  1: StorageDead(_170)
    SourceInfo(regex-automata/src/util/look.rs:827:59-827:60)
  2: StorageDead(_169)
    SourceInfo(regex-automata/src/util/look.rs:827:59-827:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:827:17-827:69)
      kind: _167 = core::result::Result::<bool, util::look::UnicodeWordBoundaryError>::unwrap(move _168) -> [return: bb128, unwind: bb134]
  }
  preds [bb126]
  succs [bb128, bb134]

bb128
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:827:17-827:69)
      kind: switchInt(move _167) -> [0: bb130, otherwise: bb129]
  }
  preds [bb127]
  succs [bb129, bb130]

bb129
  0: StorageDead(_168)
    SourceInfo(regex-automata/src/util/look.rs:827:68-827:69)
  1: _163 = const ()
    SourceInfo(regex-automata/src/util/look.rs:829:14-829:14)
  2: StorageDead(_167)
    SourceInfo(regex-automata/src/util/look.rs:829:13-829:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:826:9-830:10)
      kind: goto -> bb132
  }
  preds [bb128]
  succs [bb132]

bb130
  0: StorageDead(_168)
    SourceInfo(regex-automata/src/util/look.rs:827:68-827:69)
  1: _0 = const false
    SourceInfo(regex-automata/src/util/look.rs:828:24-828:29)
  2: StorageDead(_167)
    SourceInfo(regex-automata/src/util/look.rs:829:13-829:14)
  3: StorageDead(_164)
    SourceInfo(regex-automata/src/util/look.rs:830:9-830:10)
  4: StorageDead(_163)
    SourceInfo(regex-automata/src/util/look.rs:830:9-830:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb128]
  succs [bb133]

bb131
  0: StorageDead(_166)
    SourceInfo(regex-automata/src/util/look.rs:826:49-826:50)
  1: StorageDead(_165)
    SourceInfo(regex-automata/src/util/look.rs:826:49-826:50)
  2: _163 = const ()
    SourceInfo(regex-automata/src/util/look.rs:830:10-830:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:826:9-830:10)
      kind: goto -> bb132
  }
  preds [bb125]
  succs [bb132]

bb132
  0: StorageDead(_164)
    SourceInfo(regex-automata/src/util/look.rs:830:9-830:10)
  1: StorageDead(_163)
    SourceInfo(regex-automata/src/util/look.rs:830:9-830:10)
  2: _0 = const true
    SourceInfo(regex-automata/src/util/look.rs:831:9-831:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:832:6-832:6)
      kind: goto -> bb133
  }
  preds [bb129, bb131]
  succs [bb133]

bb133
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:832:6-832:6)
      kind: return
  }
  preds [bb5, bb12, bb19, bb26, bb33, bb40, bb47, bb54, bb62, bb70, bb77, bb84, bb92, bb100, bb107, bb114, bb122, bb130, bb132]
  succs []

bb134
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:731:5-832:6)
      kind: resume
  }
  preds [bb0, bb2, bb7, bb9, bb14, bb16, bb21, bb23, bb28, bb30, bb35, bb37, bb42, bb44, bb49, bb51, bb56, bb58, bb59, bb64, bb66, bb67, bb72, bb74, bb79, bb81, bb86, bb88, bb89, bb94, bb96, bb97, bb102, bb104, bb109, bb111, bb116, bb118, bb119, bb124, bb126, bb127]
  succs []

