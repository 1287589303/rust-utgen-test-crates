bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:9-1247:10)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:12-1245:46)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:12-1245:25)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:12-1245:25)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:12-1245:20)
  5: _8 = &((*_1).0: std::sync::Arc<meta::regex::RegexI>)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:12-1245:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1245:12-1245:25)
      kind: _7 = <std::sync::Arc<meta::regex::RegexI> as core::ops::Deref>::deref(move _8) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:19-1245:20)
  1: _6 = &((*_7).1: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:12-1245:25)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:40-1245:45)
  3: _9 = &(*_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:40-1245:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1245:12-1245:46)
      kind: _5 = meta::regex::RegexInfo::is_impossible(move _6, move _9) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1245:12-1245:46)
      kind: switchInt(move _5) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:45-1245:46)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:45-1245:46)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:45-1245:46)
  3: _0 = core::option::Option::<util::search::Match>::None
    SourceInfo(regex-automata/src/meta/regex.rs:1246:20-1246:24)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1247:9-1247:10)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1247:9-1247:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1249:6-1249:6)
      kind: goto -> bb8
  }
  preds [bb2]
  succs [bb8]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:45-1245:46)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:45-1245:46)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1245:45-1245:46)
  3: _4 = const ()
    SourceInfo(regex-automata/src/meta/regex.rs:1247:10-1247:10)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1247:9-1247:10)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1247:9-1247:10)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:9-1248:23)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:9-1248:44)
  8: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:9-1248:23)
  9: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:9-1248:23)
  10: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:9-1248:17)
  11: _15 = &((*_1).0: std::sync::Arc<meta::regex::RegexI>)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:9-1248:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1248:9-1248:23)
      kind: _14 = <std::sync::Arc<meta::regex::RegexI> as core::ops::Deref>::deref(move _15) -> [return: bb5, unwind: bb9]
  }
  preds [bb2]
  succs [bb5, bb9]

bb5
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:16-1248:17)
  1: _13 = &((*_14).0: std::sync::Arc<dyn meta::strategy::Strategy>)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:9-1248:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1248:9-1248:44)
      kind: _12 = <std::sync::Arc<dyn meta::strategy::Strategy> as core::ops::Deref>::deref(move _13) -> [return: bb6, unwind: bb9]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: _11 = &(*_12)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:9-1248:23)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:22-1248:23)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:31-1248:36)
  3: _16 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:31-1248:36)
  4: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:38-1248:43)
  5: _17 = &(*_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:38-1248:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1248:9-1248:44)
      kind: _0 = <dyn meta::strategy::Strategy as meta::strategy::Strategy>::search(move _11, move _16, move _17) -> [return: bb7, unwind: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:43-1248:44)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:43-1248:44)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:1248:43-1248:44)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:1249:5-1249:6)
  4: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:1249:5-1249:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1249:6-1249:6)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1249:6-1249:6)
      kind: return
  }
  preds [bb3, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1240:5-1249:6)
      kind: resume
  }
  preds [bb0, bb1, bb4, bb5, bb6]
  succs []

