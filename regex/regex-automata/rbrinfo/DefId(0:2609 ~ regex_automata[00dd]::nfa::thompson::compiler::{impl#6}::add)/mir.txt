bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1781:13-1781:23)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1781:26-1788:15)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1781:26-1783:41)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1781:26-1782:20)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1781:26-1781:32)
  5: _7 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1781:26-1781:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1781:26-1782:20)
      kind: _6 = core::slice::<impl [regex_syntax::utf8::Utf8Range]>::iter(move _7) -> [return: bb1, unwind: bb25]
  }
  preds []
  succs [bb1, bb25]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1782:19-1782:20)
  1: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1783:18-1783:40)
  2: _8 = &((*((*_1).1: &mut nfa::thompson::compiler::Utf8State)).1: std::vec::Vec<nfa::thompson::compiler::Utf8Node>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1783:18-1783:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1781:26-1783:41)
      kind: _5 = <core::slice::Iter<'_, regex_syntax::utf8::Utf8Range> as core::iter::Iterator>::zip::<&std::vec::Vec<nfa::thompson::compiler::Utf8Node>>(move _6, move _8) -> [return: bb2, unwind: bb25]
  }
  preds [bb0]
  succs [bb2, bb25]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1783:40-1783:41)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1783:40-1783:41)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1784:25-1788:14)
  3: _9 = {closure@regex-automata/src/nfa/thompson/compiler.rs:1784:25: 1784:41}
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1784:25-1788:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1781:26-1788:15)
      kind: _4 = <core::iter::Zip<core::slice::Iter<'_, regex_syntax::utf8::Utf8Range>, core::slice::Iter<'_, nfa::thompson::compiler::Utf8Node>> as core::iter::Iterator>::take_while::<{closure@regex-automata/src/nfa/thompson/compiler.rs:1784:25: 1784:41}>(move _5, move _9) -> [return: bb3, unwind: bb25]
  }
  preds [bb1]
  succs [bb3, bb25]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1788:14-1788:15)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1788:14-1788:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1781:26-1789:21)
      kind: _3 = <core::iter::TakeWhile<core::iter::Zip<core::slice::Iter<'_, regex_syntax::utf8::Utf8Range>, core::slice::Iter<'_, nfa::thompson::compiler::Utf8Node>>, {closure@regex-automata/src/nfa/thompson/compiler.rs:1784:25: 1784:41}> as core::iter::Iterator>::count(move _4) -> [return: bb4, unwind: bb25]
  }
  preds [bb2]
  succs [bb4, bb25]

bb4
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1789:20-1789:21)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1781:13-1781:23)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:9-1790:43)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:17-1790:42)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:17-1790:27)
  5: _12 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:17-1790:27)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:30-1790:42)
  7: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:30-1790:36)
  8: _14 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:30-1790:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:30-1790:42)
      kind: _13 = core::slice::<impl [regex_syntax::utf8::Utf8Range]>::len(move _14) -> [return: bb5, unwind: bb25]
  }
  preds [bb3]
  succs [bb5, bb25]

bb5
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:41-1790:42)
  1: _11 = Lt(move _12, move _13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:17-1790:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:17-1790:42)
      kind: switchInt(move _11) -> [0: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:41-1790:42)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:41-1790:42)
  2: _10 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:43-1790:43)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:42-1790:43)
  4: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:42-1790:43)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:39)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:39)
  7: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:38)
  8: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:13)
  9: _19 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:13)
  10: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:27-1791:37)
  11: _20 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:27-1791:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:38)
      kind: _18 = nfa::thompson::compiler::Utf8Compiler::<'_>::compile_from(move _19, move _20) -> [return: bb8, unwind: bb25]
  }
  preds [bb5]
  succs [bb8, bb25]

bb7
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:41-1790:42)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:41-1790:42)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:9-1790:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1790:9-1790:43)
      kind: _15 = core::panicking::panic(const "assertion failed: prefix_len < ranges.len()") -> bb25
  }
  preds [bb5]
  succs [bb25]

bb8
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:37-1791:38)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:37-1791:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:39)
      kind: _17 = <core::result::Result<(), nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _18) -> [return: bb9, unwind: bb24]
  }
  preds [bb6]
  succs [bb9, bb24]

bb9
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:38-1791:39)
  1: PlaceMention(_17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:39)
  2: _21 = discriminant(_17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:39)
      kind: switchInt(move _21) -> [0: bb12, 1: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:39)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:38-1791:39)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:39)
  1: _25 = ((_17 as Continue).0: ())
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:39)
  2: _16 = _25
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:39)
  3: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:38-1791:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:39-1791:40)
      kind: drop(_17) -> [return: bb15, unwind: bb25]
  }
  preds [bb9, bb11]
  succs [bb15, bb25]

bb13
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:38-1791:39)
  1: _22 = move ((_17 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:38-1791:39)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:38-1791:39)
  3: _24 = move _22
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:38-1791:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:9-1791:39)
      kind: _0 = <core::result::Result<(), nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _24) -> [return: bb14, unwind: bb21]
  }
  preds [bb11]
  succs [bb14, bb21]

bb14
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:38-1791:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:38-1791:39)
      kind: drop(_22) -> [return: bb18, unwind: bb23]
  }
  preds [bb13]
  succs [bb18, bb23]

bb15
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:39-1791:40)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:39-1791:40)
  2: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:9-1792:47)
  3: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:9-1792:13)
  4: _27 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:9-1792:13)
  5: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:25-1792:46)
  6: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:25-1792:46)
  7: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:32-1792:46)
  8: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:26-1792:32)
  9: _31 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:26-1792:32)
  10: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:33-1792:45)
  11: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:33-1792:43)
  12: _33 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:33-1792:43)
  13: _32 = core::ops::RangeFrom::<usize> { start: move _33 }
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:33-1792:45)
  14: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:44-1792:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:32-1792:46)
      kind: _30 = <[regex_syntax::utf8::Utf8Range] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _31, move _32) -> [return: bb16, unwind: bb25]
  }
  preds [bb12]
  succs [bb16, bb25]

bb16
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:45-1792:46)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:45-1792:46)
  2: _29 = &(*_30)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:25-1792:46)
  3: _28 = &(*_29)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:25-1792:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:9-1792:47)
      kind: _26 = nfa::thompson::compiler::Utf8Compiler::<'_>::add_suffix(move _27, move _28) -> [return: bb17, unwind: bb25]
  }
  preds [bb15]
  succs [bb17, bb25]

bb17
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:46-1792:47)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:46-1792:47)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:47-1792:48)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:47-1792:48)
  4: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1792:47-1792:48)
  5: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1793:12-1793:14)
  6: _34 = ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1793:12-1793:14)
  7: _0 = core::result::Result::<(), nfa::thompson::error::BuildError>::Ok(move _34)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1793:9-1793:15)
  8: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1793:14-1793:15)
  9: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1794:5-1794:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1794:6-1794:6)
      kind: goto -> bb20
  }
  preds [bb16]
  succs [bb20]

bb18
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:38-1791:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:39-1791:40)
      kind: drop(_17) -> [return: bb19, unwind: bb25]
  }
  preds [bb14]
  succs [bb19, bb25]

bb19
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:39-1791:40)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:39-1791:40)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1794:5-1794:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1794:6-1794:6)
      kind: goto -> bb20
  }
  preds [bb18]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1794:6-1794:6)
      kind: return
  }
  preds [bb17, bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:38-1791:39)
      kind: drop(_24) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:38-1791:39)
      kind: drop(_22) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:39-1791:40)
      kind: drop(_17) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb14, bb22]
  succs [bb25]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1791:38-1791:39)
      kind: drop(_18) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1780:5-1794:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb6, bb7, bb12, bb15, bb16, bb18, bb23, bb24]
  succs []

