bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:3757:13-3757:15)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:3757:18-3757:20)
  2: _4 = &_2
    SourceInfo(regex-automata/src/dfa/dense.rs:3757:18-3757:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3757:18-3757:31)
      kind: _3 = util::primitives::StateID::as_usize(move _4) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:3757:30-3757:31)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/dfa/dense.rs:3757:13-3757:15)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:9-3758:32)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:9-3758:11)
  4: _6 = _3
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:9-3758:11)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:14-3758:32)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:14-3758:26)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:14-3758:26)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:14-3758:18)
  9: _10 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:14-3758:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3758:14-3758:26)
      kind: _9 = dfa::dense::TransitionTable::<T>::table(move _10) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: _8 = &(*_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:14-3758:26)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:25-3758:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3758:14-3758:32)
      kind: _7 = core::slice::<impl [util::primitives::StateID]>::len(move _8) -> [return: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:31-3758:32)
  1: _5 = Lt(move _6, move _7)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:9-3758:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3758:9-3758:32)
      kind: switchInt(move _5) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:31-3758:32)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:31-3758:32)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:31-3758:32)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:36-3758:54)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:36-3758:38)
  5: _12 = _3
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:36-3758:38)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:41-3758:54)
  7: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:41-3758:45)
  8: _14 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:41-3758:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3758:41-3758:54)
      kind: _13 = dfa::dense::TransitionTable::<T>::stride(move _14) -> [return: bb6, unwind: bb9]
  }
  preds [bb3]
  succs [bb6, bb9]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:31-3758:32)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:31-3758:32)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:31-3758:32)
  3: _0 = const false
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:9-3758:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3758:9-3758:59)
      kind: goto -> bb8
  }
  preds [bb3]
  succs [bb8]

bb6
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:53-3758:54)
  1: _15 = Eq(_13, const 0_usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:36-3758:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3758:36-3758:54)
      kind: assert(!move _15, "attempt to calculate the remainder of `{}` with a divisor of zero", _12) -> [success: bb7, unwind: bb9]
  }
  preds [bb4]
  succs [bb7, bb9]

bb7
  0: _11 = Rem(move _12, move _13)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:36-3758:54)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:53-3758:54)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:53-3758:54)
  3: _0 = Eq(move _11, const 0_usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:36-3758:59)
  4: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:58-3758:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3758:9-3758:59)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:3758:58-3758:59)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:3759:5-3759:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3759:6-3759:6)
      kind: return
  }
  preds [bb5, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3756:5-3759:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb6]
  succs []

