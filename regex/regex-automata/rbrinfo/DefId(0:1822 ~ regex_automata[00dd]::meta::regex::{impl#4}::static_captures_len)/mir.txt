bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:1741:9-1744:44)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1741:9-1743:27)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1741:9-1743:27)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1741:9-1742:18)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1741:9-1742:18)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1741:9-1741:17)
  6: _7 = &((*_1).0: std::sync::Arc<meta::regex::RegexI>)
    SourceInfo(regex-automata/src/meta/regex.rs:1741:9-1741:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1741:9-1742:18)
      kind: _6 = <std::sync::Arc<meta::regex::RegexI> as core::ops::Deref>::deref(move _7) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1741:16-1741:17)
  1: _5 = &((*_6).1: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/regex.rs:1741:9-1742:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1741:9-1743:27)
      kind: _4 = meta::regex::RegexInfo::props_union(move _5) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: _3 = &(*_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1741:9-1743:27)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1743:26-1743:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1741:9-1744:44)
      kind: _2 = regex_syntax::hir::Properties::static_explicit_captures_len(move _3) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1744:43-1744:44)
  1: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:1745:18-1745:45)
  2: _8 = {closure@regex-automata/src/meta/regex.rs:1745:18: 1745:23}
    SourceInfo(regex-automata/src/meta/regex.rs:1745:18-1745:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1741:9-1745:46)
      kind: _0 = core::option::Option::<usize>::map::<usize, {closure@regex-automata/src/meta/regex.rs:1745:18: 1745:23}>(move _2, move _8) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:1745:45-1745:46)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:1745:45-1745:46)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1746:5-1746:6)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1746:5-1746:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1746:6-1746:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1740:5-1746:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

