bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/util/wire.rs:836:9-836:15)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/util/wire.rs:836:18-837:67)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/util/wire.rs:836:18-837:66)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/util/wire.rs:836:18-836:34)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/util/wire.rs:836:32-836:33)
  5: _8 = _2
    SourceInfo(regex-automata/src/util/wire.rs:836:32-836:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:836:18-836:34)
      kind: _7 = <u32 as core::convert::TryFrom<usize>>::try_from(move _8) -> [return: bb1, unwind: bb17]
  }
  preds []
  succs [bb1, bb17]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/wire.rs:836:33-836:34)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/util/wire.rs:837:18-837:65)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/util/wire.rs:837:18-837:65)
  3: _10 = &_3
    SourceInfo(regex-automata/src/util/wire.rs:837:18-837:65)
  4: _9 = {closure@regex-automata/src/util/wire.rs:837:18: 837:21} { what: move _10 }
    SourceInfo(regex-automata/src/util/wire.rs:837:18-837:65)
  5: StorageDead(_10)
    SourceInfo(regex-automata/src/util/wire.rs:837:20-837:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:836:18-837:66)
      kind: _6 = core::result::Result::<u32, core::num::TryFromIntError>::map_err::<util::wire::DeserializeError, {closure@regex-automata/src/util/wire.rs:837:18: 837:21}>(move _7, move _9) -> [return: bb2, unwind: bb17]
  }
  preds [bb0]
  succs [bb2, bb17]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/wire.rs:837:65-837:66)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/wire.rs:837:65-837:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:836:18-837:67)
      kind: _5 = <core::result::Result<u32, util::wire::DeserializeError> as core::ops::Try>::branch(move _6) -> [return: bb3, unwind: bb17]
  }
  preds [bb1]
  succs [bb3, bb17]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/wire.rs:837:66-837:67)
  1: PlaceMention(_5)
    SourceInfo(regex-automata/src/util/wire.rs:836:18-837:67)
  2: _11 = discriminant(_5)
    SourceInfo(regex-automata/src/util/wire.rs:836:18-837:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:836:18-837:67)
      kind: switchInt(move _11) -> [0: bb6, 1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(regex-automata/src/util/wire.rs:836:18-837:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:836:18-837:67)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:837:66-837:67)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/util/wire.rs:836:18-837:67)
  1: _15 = ((_5 as Continue).0: u32)
    SourceInfo(regex-automata/src/util/wire.rs:836:18-837:67)
  2: _4 = _15
    SourceInfo(regex-automata/src/util/wire.rs:836:18-837:67)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/util/wire.rs:837:66-837:67)
  4: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/util/wire.rs:836:9-836:15)
  5: StorageDead(_5)
    SourceInfo(regex-automata/src/util/wire.rs:837:67-837:68)
  6: StorageLive(_16)
    SourceInfo(regex-automata/src/util/wire.rs:838:11-838:32)
  7: StorageLive(_17)
    SourceInfo(regex-automata/src/util/wire.rs:838:11-838:12)
  8: _17 = _1
    SourceInfo(regex-automata/src/util/wire.rs:838:11-838:12)
  9: StorageLive(_18)
    SourceInfo(regex-automata/src/util/wire.rs:838:25-838:31)
  10: _18 = _4
    SourceInfo(regex-automata/src/util/wire.rs:838:25-838:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:838:11-838:32)
      kind: _16 = core::num::<impl usize>::checked_shl(move _17, move _18) -> [return: bb9, unwind: bb17]
  }
  preds [bb3, bb5]
  succs [bb9, bb17]

bb7
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/util/wire.rs:837:66-837:67)
  1: _12 = move ((_5 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/util/wire.rs:837:66-837:67)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/util/wire.rs:837:66-837:67)
  3: _14 = move _12
    SourceInfo(regex-automata/src/util/wire.rs:837:66-837:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:836:18-837:67)
      kind: _0 = <core::result::Result<usize, util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _14) -> [return: bb8, unwind: bb17]
  }
  preds [bb5]
  succs [bb8, bb17]

bb8
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/util/wire.rs:837:66-837:67)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/util/wire.rs:837:66-837:67)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/util/wire.rs:837:67-837:68)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/util/wire.rs:842:1-842:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:842:2-842:2)
      kind: goto -> bb16
  }
  preds [bb7]
  succs [bb16]

bb9
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/util/wire.rs:838:31-838:32)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/util/wire.rs:838:31-838:32)
  2: PlaceMention(_16)
    SourceInfo(regex-automata/src/util/wire.rs:838:11-838:32)
  3: _19 = discriminant(_16)
    SourceInfo(regex-automata/src/util/wire.rs:838:11-838:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:838:5-838:32)
      kind: switchInt(move _19) -> [0: bb12, 1: bb11, otherwise: bb10]
  }
  preds [bb6]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(regex-automata/src/util/wire.rs:838:11-838:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:838:11-838:32)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:839:9-839:16)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/util/wire.rs:840:21-840:64)
  1: StorageLive(_23)
    SourceInfo(regex-automata/src/util/wire.rs:840:59-840:63)
  2: _23 = _3
    SourceInfo(regex-automata/src/util/wire.rs:840:59-840:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:840:21-840:64)
      kind: _22 = util::wire::DeserializeError::arithmetic_overflow(move _23) -> [return: bb14, unwind: bb17]
  }
  preds [bb9, bb11]
  succs [bb14, bb17]

bb13
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/util/wire.rs:839:14-839:15)
  1: _20 = ((_16 as Some).0: usize)
    SourceInfo(regex-automata/src/util/wire.rs:839:14-839:15)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/util/wire.rs:839:23-839:24)
  3: _21 = _20
    SourceInfo(regex-automata/src/util/wire.rs:839:23-839:24)
  4: _0 = core::result::Result::<usize, util::wire::DeserializeError>::Ok(move _21)
    SourceInfo(regex-automata/src/util/wire.rs:839:20-839:25)
  5: StorageDead(_21)
    SourceInfo(regex-automata/src/util/wire.rs:839:24-839:25)
  6: StorageDead(_20)
    SourceInfo(regex-automata/src/util/wire.rs:839:24-839:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:839:24-839:25)
      kind: goto -> bb15
  }
  preds [bb11]
  succs [bb15]

bb14
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/util/wire.rs:840:63-840:64)
  1: _0 = core::result::Result::<usize, util::wire::DeserializeError>::Err(move _22)
    SourceInfo(regex-automata/src/util/wire.rs:840:17-840:65)
  2: StorageDead(_22)
    SourceInfo(regex-automata/src/util/wire.rs:840:64-840:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:840:64-840:65)
      kind: goto -> bb15
  }
  preds [bb12]
  succs [bb15]

bb15
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/wire.rs:842:1-842:2)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/util/wire.rs:842:1-842:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:842:2-842:2)
      kind: goto -> bb16
  }
  preds [bb13, bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:842:2-842:2)
      kind: return
  }
  preds [bb8, bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:831:1-842:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb6, bb7, bb12]
  succs []

