bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/primitives.rs:195:9-195:31)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/primitives.rs:195:25-195:30)
  2: _3 = _1
    SourceInfo(regex-automata/src/util/primitives.rs:195:25-195:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:195:9-195:31)
      kind: _2 = util::primitives::SmallIndex::new(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/primitives.rs:195:30-195:31)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/primitives.rs:195:39-195:60)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/primitives.rs:195:39-195:60)
  3: _5 = const "invalid small index"
    SourceInfo(regex-automata/src/util/primitives.rs:195:39-195:60)
  4: _4 = &(*_5)
    SourceInfo(regex-automata/src/util/primitives.rs:195:39-195:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:195:9-195:61)
      kind: _0 = core::result::Result::<util::primitives::SmallIndex, util::primitives::SmallIndexError>::expect(move _2, move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/primitives.rs:195:60-195:61)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/util/primitives.rs:195:60-195:61)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/util/primitives.rs:196:5-196:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:196:6-196:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/primitives.rs:194:5-196:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

