bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/minimize.rs:421:9-421:21)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/minimize.rs:421:9-421:13)
  2: _5 = &mut (*_3)
    SourceInfo(regex-automata/src/dfa/minimize.rs:421:9-421:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:421:9-421:21)
      kind: _4 = dfa::minimize::StateSet::clear(move _5) -> [return: bb1, unwind: bb81]
  }
  preds []
  succs [bb1, bb81]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/minimize.rs:421:20-421:21)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/minimize.rs:421:21-421:22)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/minimize.rs:422:9-425:10)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/minimize.rs:422:12-422:27)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/minimize.rs:422:12-422:16)
  5: _8 = &(*_1)
    SourceInfo(regex-automata/src/dfa/minimize.rs:422:12-422:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:422:12-422:27)
      kind: _7 = dfa::minimize::StateSet::is_empty(move _8) -> [return: bb2, unwind: bb81]
  }
  preds [bb0]
  succs [bb2, bb81]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:422:12-422:27)
      kind: switchInt(move _7) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/minimize.rs:422:26-422:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:422:48-425:10)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/minimize.rs:422:26-422:27)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/minimize.rs:422:31-422:47)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/minimize.rs:422:31-422:36)
  3: _10 = &(*_2)
    SourceInfo(regex-automata/src/dfa/minimize.rs:422:31-422:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:422:31-422:47)
      kind: _9 = dfa::minimize::StateSet::is_empty(move _10) -> [return: bb5, unwind: bb81]
  }
  preds [bb2]
  succs [bb5, bb81]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:422:31-422:47)
      kind: switchInt(move _9) -> [0: bb9, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/minimize.rs:422:46-422:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:422:48-425:10)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/minimize.rs:423:13-423:39)
  1: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/minimize.rs:423:13-423:17)
  2: _13 = &(*_1)
    SourceInfo(regex-automata/src/dfa/minimize.rs:423:13-423:17)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/minimize.rs:423:23-423:38)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/minimize.rs:423:23-423:38)
  5: _15 = &mut (*_3)
    SourceInfo(regex-automata/src/dfa/minimize.rs:423:23-423:38)
  6: _14 = {closure@regex-automata/src/dfa/minimize.rs:423:23: 423:26} { dest: move _15 }
    SourceInfo(regex-automata/src/dfa/minimize.rs:423:23-423:38)
  7: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/minimize.rs:423:25-423:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:423:13-423:39)
      kind: _12 = dfa::minimize::StateSet::iter::<{closure@regex-automata/src/dfa/minimize.rs:423:23: 423:26}>(move _13, move _14) -> [return: bb8, unwind: bb81]
  }
  preds [bb3, bb6]
  succs [bb8, bb81]

bb8
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/minimize.rs:423:38-423:39)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/minimize.rs:423:38-423:39)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/minimize.rs:423:39-423:40)
  3: _0 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:424:13-424:19)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/minimize.rs:425:9-425:10)
  5: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/minimize.rs:425:9-425:10)
  6: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/minimize.rs:425:9-425:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:462:6-462:6)
      kind: goto -> bb75
  }
  preds [bb7]
  succs [bb75]

bb9
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/minimize.rs:422:46-422:47)
  1: _6 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:425:10-425:10)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/minimize.rs:425:9-425:10)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/minimize.rs:425:9-425:10)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/minimize.rs:425:9-425:10)
  5: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:28-427:67)
  6: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:29-427:46)
  7: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:29-427:37)
  8: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:29-427:46)
  9: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:29-427:37)
  10: _22 = &((*_1).0: std::rc::Rc<core::cell::RefCell<std::vec::Vec<util::primitives::StateID>>>)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:29-427:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:427:29-427:46)
      kind: _21 = <std::rc::Rc<core::cell::RefCell<std::vec::Vec<util::primitives::StateID>>> as core::ops::Deref>::deref(move _22) -> [return: bb10, unwind: bb81]
  }
  preds [bb5]
  succs [bb10, bb81]

bb10
  0: _20 = &(*_21)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:29-427:37)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:36-427:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:427:29-427:46)
      kind: _19 = core::cell::RefCell::<std::vec::Vec<util::primitives::StateID>>::borrow(move _20) -> [return: bb11, unwind: bb81]
  }
  preds [bb9]
  succs [bb11, bb81]

bb11
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:45-427:46)
  1: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:48-427:66)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:48-427:57)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:48-427:66)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:48-427:57)
  5: _26 = &((*_2).0: std::rc::Rc<core::cell::RefCell<std::vec::Vec<util::primitives::StateID>>>)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:48-427:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:427:48-427:66)
      kind: _25 = <std::rc::Rc<core::cell::RefCell<std::vec::Vec<util::primitives::StateID>>> as core::ops::Deref>::deref(move _26) -> [return: bb12, unwind: bb80]
  }
  preds [bb10]
  succs [bb12, bb80]

bb12
  0: _24 = &(*_25)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:48-427:57)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:56-427:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:427:48-427:66)
      kind: _23 = core::cell::RefCell::<std::vec::Vec<util::primitives::StateID>>::borrow(move _24) -> [return: bb13, unwind: bb80]
  }
  preds [bb11]
  succs [bb13, bb80]

bb13
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:65-427:66)
  1: _18 = (move _19, move _23)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:28-427:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:427:66-427:67)
      kind: drop(_23) -> [return: bb14, unwind: bb78]
  }
  preds [bb12]
  succs [bb14, bb78]

bb14
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:66-427:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:427:66-427:67)
      kind: drop(_19) -> [return: bb15, unwind: bb79]
  }
  preds [bb13]
  succs [bb15, bb79]

bb15
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:66-427:67)
  1: PlaceMention(_18)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:28-427:67)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:14-427:18)
  3: _16 = move (_18.0: core::cell::Ref<'_, std::vec::Vec<util::primitives::StateID>>)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:14-427:18)
  4: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:20-427:24)
  5: _17 = move (_18.1: core::cell::Ref<'_, std::vec::Vec<util::primitives::StateID>>)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:20-427:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:427:67-427:68)
      kind: drop(_18) -> [return: bb16, unwind: bb76]
  }
  preds [bb14]
  succs [bb16, bb76]

bb16
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:67-427:68)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:67-427:68)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/minimize.rs:427:67-427:68)
  3: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:34-428:78)
  4: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:35-428:55)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:35-428:46)
  6: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:35-428:39)
  7: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:35-428:46)
  8: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:35-428:39)
  9: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:35-428:46)
  10: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:35-428:39)
  11: _36 = &_16
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:35-428:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:428:35-428:46)
      kind: _35 = <core::cell::Ref<'_, std::vec::Vec<util::primitives::StateID>> as core::ops::Deref>::deref(move _36) -> [return: bb17, unwind: bb76]
  }
  preds [bb15]
  succs [bb17, bb76]

bb17
  0: _34 = &(*_35)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:35-428:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:428:35-428:46)
      kind: _33 = <std::vec::Vec<util::primitives::StateID> as core::ops::Deref>::deref(move _34) -> [return: bb18, unwind: bb76]
  }
  preds [bb16]
  succs [bb18, bb76]

bb18
  0: _32 = &(*_33)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:35-428:39)
  1: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:38-428:39)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:38-428:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:428:35-428:46)
      kind: _31 = core::slice::<impl [util::primitives::StateID]>::iter(move _32) -> [return: bb19, unwind: bb76]
  }
  preds [bb17]
  succs [bb19, bb76]

bb19
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:45-428:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:428:35-428:55)
      kind: _30 = <core::slice::Iter<'_, util::primitives::StateID> as core::iter::Iterator>::cloned::<'_, util::primitives::StateID>(move _31) -> [return: bb20, unwind: bb76]
  }
  preds [bb18]
  succs [bb20, bb76]

bb20
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:54-428:55)
  1: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:57-428:77)
  2: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:57-428:68)
  3: StorageLive(_39)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:57-428:61)
  4: StorageLive(_40)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:57-428:68)
  5: StorageLive(_41)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:57-428:61)
  6: StorageLive(_42)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:57-428:68)
  7: StorageLive(_43)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:57-428:61)
  8: _43 = &_17
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:57-428:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:428:57-428:68)
      kind: _42 = <core::cell::Ref<'_, std::vec::Vec<util::primitives::StateID>> as core::ops::Deref>::deref(move _43) -> [return: bb21, unwind: bb76]
  }
  preds [bb19]
  succs [bb21, bb76]

bb21
  0: _41 = &(*_42)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:57-428:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:428:57-428:68)
      kind: _40 = <std::vec::Vec<util::primitives::StateID> as core::ops::Deref>::deref(move _41) -> [return: bb22, unwind: bb76]
  }
  preds [bb20]
  succs [bb22, bb76]

bb22
  0: _39 = &(*_40)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:57-428:61)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:60-428:61)
  2: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:60-428:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:428:57-428:68)
      kind: _38 = core::slice::<impl [util::primitives::StateID]>::iter(move _39) -> [return: bb23, unwind: bb76]
  }
  preds [bb21]
  succs [bb23, bb76]

bb23
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:67-428:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:428:57-428:77)
      kind: _37 = <core::slice::Iter<'_, util::primitives::StateID> as core::iter::Iterator>::cloned::<'_, util::primitives::StateID>(move _38) -> [return: bb24, unwind: bb76]
  }
  preds [bb22]
  succs [bb24, bb76]

bb24
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:76-428:77)
  1: _29 = (move _30, move _37)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:34-428:78)
  2: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:77-428:78)
  3: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:77-428:78)
  4: PlaceMention(_29)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:34-428:78)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:14-428:21)
  6: _27 = move (_29.0: core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>>)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:14-428:21)
  7: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:23-428:30)
  8: _28 = move (_29.1: core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>>)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:23-428:30)
  9: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:78-428:79)
  10: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:78-428:79)
  11: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:78-428:79)
  12: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:78-428:79)
  13: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/minimize.rs:428:78-428:79)
  14: StorageLive(_46)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:30-429:72)
  15: StorageLive(_47)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:31-429:50)
  16: StorageLive(_48)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:31-429:41)
  17: StorageLive(_49)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:31-429:34)
  18: _49 = &mut _27
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:31-429:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:429:31-429:41)
      kind: _48 = <core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _49) -> [return: bb25, unwind: bb76]
  }
  preds [bb23]
  succs [bb25, bb76]

bb25
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:40-429:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:429:31-429:50)
      kind: _47 = core::option::Option::<util::primitives::StateID>::unwrap(move _48) -> [return: bb26, unwind: bb76]
  }
  preds [bb24]
  succs [bb26, bb76]

bb26
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:49-429:50)
  1: StorageLive(_50)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:52-429:71)
  2: StorageLive(_51)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:52-429:62)
  3: StorageLive(_52)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:52-429:55)
  4: _52 = &mut _28
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:52-429:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:429:52-429:62)
      kind: _51 = <core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _52) -> [return: bb27, unwind: bb76]
  }
  preds [bb25]
  succs [bb27, bb76]

bb27
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:61-429:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:429:52-429:71)
      kind: _50 = core::option::Option::<util::primitives::StateID>::unwrap(move _51) -> [return: bb28, unwind: bb76]
  }
  preds [bb26]
  succs [bb28, bb76]

bb28
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:70-429:71)
  1: _46 = (move _47, move _50)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:30-429:72)
  2: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:71-429:72)
  3: StorageDead(_47)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:71-429:72)
  4: PlaceMention(_46)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:30-429:72)
  5: StorageLive(_44)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:14-429:19)
  6: _44 = (_46.0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:14-429:19)
  7: StorageLive(_45)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:21-429:26)
  8: _45 = (_46.1: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:21-429:26)
  9: StorageDead(_46)
    SourceInfo(regex-automata/src/dfa/minimize.rs:429:72-429:73)
  10: StorageLive(_53)
    SourceInfo(regex-automata/src/dfa/minimize.rs:430:9-458:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:430:9-458:10)
      kind: goto -> bb29
  }
  preds [bb27]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:430:9-458:10)
      kind: falseUnwind -> [real: bb30, unwind: bb76]
  }
  preds [bb28, bb61]
  succs [bb30, bb76]

bb30
  0: StorageLive(_55)
    SourceInfo(regex-automata/src/dfa/minimize.rs:431:16-431:22)
  1: StorageLive(_56)
    SourceInfo(regex-automata/src/dfa/minimize.rs:431:16-431:17)
  2: _56 = &_44
    SourceInfo(regex-automata/src/dfa/minimize.rs:431:16-431:17)
  3: StorageLive(_57)
    SourceInfo(regex-automata/src/dfa/minimize.rs:431:21-431:22)
  4: _57 = &_45
    SourceInfo(regex-automata/src/dfa/minimize.rs:431:21-431:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:431:16-431:22)
      kind: _55 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _56, move _57) -> [return: bb31, unwind: bb76]
  }
  preds [bb29]
  succs [bb31, bb76]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:431:16-431:22)
      kind: switchInt(move _55) -> [0: bb44, otherwise: bb32]
  }
  preds [bb30]
  succs [bb32, bb44]

bb32
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/minimize.rs:431:21-431:22)
  1: StorageDead(_56)
    SourceInfo(regex-automata/src/dfa/minimize.rs:431:21-431:22)
  2: StorageLive(_58)
    SourceInfo(regex-automata/src/dfa/minimize.rs:432:21-435:18)
  3: StorageLive(_59)
    SourceInfo(regex-automata/src/dfa/minimize.rs:432:27-432:37)
  4: StorageLive(_60)
    SourceInfo(regex-automata/src/dfa/minimize.rs:432:27-432:30)
  5: _60 = &mut _27
    SourceInfo(regex-automata/src/dfa/minimize.rs:432:27-432:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:432:27-432:37)
      kind: _59 = <core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _60) -> [return: bb33, unwind: bb76]
  }
  preds [bb31]
  succs [bb33, bb76]

bb33
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/dfa/minimize.rs:432:36-432:37)
  1: PlaceMention(_59)
    SourceInfo(regex-automata/src/dfa/minimize.rs:432:27-432:37)
  2: _61 = discriminant(_59)
    SourceInfo(regex-automata/src/dfa/minimize.rs:432:27-432:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:432:21-432:37)
      kind: switchInt(move _61) -> [0: bb35, 1: bb36, otherwise: bb34]
  }
  preds [bb32]
  succs [bb34, bb35, bb36]

bb34
  0: FakeRead(ForMatchedPlace(None), _59)
    SourceInfo(regex-automata/src/dfa/minimize.rs:432:27-432:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:432:27-432:37)
      kind: unreachable
  }
  preds [bb33]
  succs []

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:433:21-433:25)
      kind: falseEdge -> [real: bb37, imaginary: bb36]
  }
  preds [bb33]
  succs [bb36, bb37]

bb36
  0: StorageLive(_63)
    SourceInfo(regex-automata/src/dfa/minimize.rs:434:26-434:27)
  1: _63 = ((_59 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/minimize.rs:434:26-434:27)
  2: _58 = _63
    SourceInfo(regex-automata/src/dfa/minimize.rs:434:32-434:33)
  3: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/minimize.rs:434:32-434:33)
  4: _44 = move _58
    SourceInfo(regex-automata/src/dfa/minimize.rs:432:17-435:18)
  5: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/minimize.rs:435:17-435:18)
  6: StorageDead(_59)
    SourceInfo(regex-automata/src/dfa/minimize.rs:435:18-435:19)
  7: StorageLive(_64)
    SourceInfo(regex-automata/src/dfa/minimize.rs:436:21-442:18)
  8: StorageLive(_65)
    SourceInfo(regex-automata/src/dfa/minimize.rs:436:27-436:37)
  9: StorageLive(_66)
    SourceInfo(regex-automata/src/dfa/minimize.rs:436:27-436:30)
  10: _66 = &mut _28
    SourceInfo(regex-automata/src/dfa/minimize.rs:436:27-436:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:436:27-436:37)
      kind: _65 = <core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _66) -> [return: bb38, unwind: bb76]
  }
  preds [bb33, bb35]
  succs [bb38, bb76]

bb37
  0: _53 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:433:29-433:34)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/minimize.rs:435:17-435:18)
  2: StorageDead(_59)
    SourceInfo(regex-automata/src/dfa/minimize.rs:435:18-435:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb63
  }
  preds [bb35]
  succs [bb63]

bb38
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/dfa/minimize.rs:436:36-436:37)
  1: PlaceMention(_65)
    SourceInfo(regex-automata/src/dfa/minimize.rs:436:27-436:37)
  2: _67 = discriminant(_65)
    SourceInfo(regex-automata/src/dfa/minimize.rs:436:27-436:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:436:21-436:37)
      kind: switchInt(move _67) -> [0: bb40, 1: bb41, otherwise: bb39]
  }
  preds [bb36]
  succs [bb39, bb40, bb41]

bb39
  0: FakeRead(ForMatchedPlace(None), _65)
    SourceInfo(regex-automata/src/dfa/minimize.rs:436:27-436:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:436:27-436:37)
      kind: unreachable
  }
  preds [bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:437:21-437:25)
      kind: falseEdge -> [real: bb42, imaginary: bb41]
  }
  preds [bb38]
  succs [bb41, bb42]

bb41
  0: StorageLive(_72)
    SourceInfo(regex-automata/src/dfa/minimize.rs:441:26-441:27)
  1: _72 = ((_65 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/minimize.rs:441:26-441:27)
  2: _64 = _72
    SourceInfo(regex-automata/src/dfa/minimize.rs:441:32-441:33)
  3: StorageDead(_72)
    SourceInfo(regex-automata/src/dfa/minimize.rs:441:32-441:33)
  4: _45 = move _64
    SourceInfo(regex-automata/src/dfa/minimize.rs:436:17-442:18)
  5: StorageDead(_64)
    SourceInfo(regex-automata/src/dfa/minimize.rs:442:17-442:18)
  6: StorageDead(_65)
    SourceInfo(regex-automata/src/dfa/minimize.rs:442:18-442:19)
  7: _54 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:431:23-443:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:431:13-457:14)
      kind: goto -> bb61
  }
  preds [bb38, bb40]
  succs [bb61]

bb42
  0: StorageLive(_69)
    SourceInfo(regex-automata/src/dfa/minimize.rs:438:25-438:36)
  1: StorageLive(_70)
    SourceInfo(regex-automata/src/dfa/minimize.rs:438:25-438:29)
  2: _70 = &mut (*_3)
    SourceInfo(regex-automata/src/dfa/minimize.rs:438:25-438:29)
  3: StorageLive(_71)
    SourceInfo(regex-automata/src/dfa/minimize.rs:438:34-438:35)
  4: _71 = _44
    SourceInfo(regex-automata/src/dfa/minimize.rs:438:34-438:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:438:25-438:36)
      kind: _69 = dfa::minimize::StateSet::add(move _70, move _71) -> [return: bb43, unwind: bb76]
  }
  preds [bb40]
  succs [bb43, bb76]

bb43
  0: StorageDead(_71)
    SourceInfo(regex-automata/src/dfa/minimize.rs:438:35-438:36)
  1: StorageDead(_70)
    SourceInfo(regex-automata/src/dfa/minimize.rs:438:35-438:36)
  2: StorageDead(_69)
    SourceInfo(regex-automata/src/dfa/minimize.rs:438:36-438:37)
  3: _53 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:439:25-439:30)
  4: StorageDead(_64)
    SourceInfo(regex-automata/src/dfa/minimize.rs:442:17-442:18)
  5: StorageDead(_65)
    SourceInfo(regex-automata/src/dfa/minimize.rs:442:18-442:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb63
  }
  preds [bb42]
  succs [bb63]

bb44
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/minimize.rs:431:21-431:22)
  1: StorageDead(_56)
    SourceInfo(regex-automata/src/dfa/minimize.rs:431:21-431:22)
  2: StorageLive(_73)
    SourceInfo(regex-automata/src/dfa/minimize.rs:443:23-443:28)
  3: StorageLive(_74)
    SourceInfo(regex-automata/src/dfa/minimize.rs:443:23-443:24)
  4: _74 = &_44
    SourceInfo(regex-automata/src/dfa/minimize.rs:443:23-443:24)
  5: StorageLive(_75)
    SourceInfo(regex-automata/src/dfa/minimize.rs:443:27-443:28)
  6: _75 = &_45
    SourceInfo(regex-automata/src/dfa/minimize.rs:443:27-443:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:443:23-443:28)
      kind: _73 = <util::primitives::StateID as core::cmp::PartialOrd>::lt(move _74, move _75) -> [return: bb45, unwind: bb76]
  }
  preds [bb31]
  succs [bb45, bb76]

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:443:23-443:28)
      kind: switchInt(move _73) -> [0: bb53, otherwise: bb46]
  }
  preds [bb44]
  succs [bb46, bb53]

bb46
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/dfa/minimize.rs:443:27-443:28)
  1: StorageDead(_74)
    SourceInfo(regex-automata/src/dfa/minimize.rs:443:27-443:28)
  2: StorageLive(_76)
    SourceInfo(regex-automata/src/dfa/minimize.rs:444:17-444:28)
  3: StorageLive(_77)
    SourceInfo(regex-automata/src/dfa/minimize.rs:444:17-444:21)
  4: _77 = &mut (*_3)
    SourceInfo(regex-automata/src/dfa/minimize.rs:444:17-444:21)
  5: StorageLive(_78)
    SourceInfo(regex-automata/src/dfa/minimize.rs:444:26-444:27)
  6: _78 = _44
    SourceInfo(regex-automata/src/dfa/minimize.rs:444:26-444:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:444:17-444:28)
      kind: _76 = dfa::minimize::StateSet::add(move _77, move _78) -> [return: bb47, unwind: bb76]
  }
  preds [bb45]
  succs [bb47, bb76]

bb47
  0: StorageDead(_78)
    SourceInfo(regex-automata/src/dfa/minimize.rs:444:27-444:28)
  1: StorageDead(_77)
    SourceInfo(regex-automata/src/dfa/minimize.rs:444:27-444:28)
  2: StorageDead(_76)
    SourceInfo(regex-automata/src/dfa/minimize.rs:444:28-444:29)
  3: StorageLive(_79)
    SourceInfo(regex-automata/src/dfa/minimize.rs:445:21-448:18)
  4: StorageLive(_80)
    SourceInfo(regex-automata/src/dfa/minimize.rs:445:27-445:37)
  5: StorageLive(_81)
    SourceInfo(regex-automata/src/dfa/minimize.rs:445:27-445:30)
  6: _81 = &mut _27
    SourceInfo(regex-automata/src/dfa/minimize.rs:445:27-445:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:445:27-445:37)
      kind: _80 = <core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _81) -> [return: bb48, unwind: bb76]
  }
  preds [bb46]
  succs [bb48, bb76]

bb48
  0: StorageDead(_81)
    SourceInfo(regex-automata/src/dfa/minimize.rs:445:36-445:37)
  1: PlaceMention(_80)
    SourceInfo(regex-automata/src/dfa/minimize.rs:445:27-445:37)
  2: _82 = discriminant(_80)
    SourceInfo(regex-automata/src/dfa/minimize.rs:445:27-445:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:445:21-445:37)
      kind: switchInt(move _82) -> [0: bb50, 1: bb51, otherwise: bb49]
  }
  preds [bb47]
  succs [bb49, bb50, bb51]

bb49
  0: FakeRead(ForMatchedPlace(None), _80)
    SourceInfo(regex-automata/src/dfa/minimize.rs:445:27-445:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:445:27-445:37)
      kind: unreachable
  }
  preds [bb48]
  succs []

bb50
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:446:21-446:25)
      kind: falseEdge -> [real: bb52, imaginary: bb51]
  }
  preds [bb48]
  succs [bb51, bb52]

bb51
  0: StorageLive(_84)
    SourceInfo(regex-automata/src/dfa/minimize.rs:447:26-447:27)
  1: _84 = ((_80 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/minimize.rs:447:26-447:27)
  2: _79 = _84
    SourceInfo(regex-automata/src/dfa/minimize.rs:447:32-447:33)
  3: StorageDead(_84)
    SourceInfo(regex-automata/src/dfa/minimize.rs:447:32-447:33)
  4: _44 = move _79
    SourceInfo(regex-automata/src/dfa/minimize.rs:445:17-448:18)
  5: StorageDead(_79)
    SourceInfo(regex-automata/src/dfa/minimize.rs:448:17-448:18)
  6: StorageDead(_80)
    SourceInfo(regex-automata/src/dfa/minimize.rs:448:18-448:19)
  7: _54 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:443:29-449:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:443:20-457:14)
      kind: goto -> bb60
  }
  preds [bb48, bb50]
  succs [bb60]

bb52
  0: _53 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:446:29-446:34)
  1: StorageDead(_79)
    SourceInfo(regex-automata/src/dfa/minimize.rs:448:17-448:18)
  2: StorageDead(_80)
    SourceInfo(regex-automata/src/dfa/minimize.rs:448:18-448:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb62
  }
  preds [bb50]
  succs [bb62]

bb53
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/dfa/minimize.rs:443:27-443:28)
  1: StorageDead(_74)
    SourceInfo(regex-automata/src/dfa/minimize.rs:443:27-443:28)
  2: StorageLive(_85)
    SourceInfo(regex-automata/src/dfa/minimize.rs:450:21-456:18)
  3: StorageLive(_86)
    SourceInfo(regex-automata/src/dfa/minimize.rs:450:27-450:37)
  4: StorageLive(_87)
    SourceInfo(regex-automata/src/dfa/minimize.rs:450:27-450:30)
  5: _87 = &mut _28
    SourceInfo(regex-automata/src/dfa/minimize.rs:450:27-450:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:450:27-450:37)
      kind: _86 = <core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _87) -> [return: bb54, unwind: bb76]
  }
  preds [bb45]
  succs [bb54, bb76]

bb54
  0: StorageDead(_87)
    SourceInfo(regex-automata/src/dfa/minimize.rs:450:36-450:37)
  1: PlaceMention(_86)
    SourceInfo(regex-automata/src/dfa/minimize.rs:450:27-450:37)
  2: _88 = discriminant(_86)
    SourceInfo(regex-automata/src/dfa/minimize.rs:450:27-450:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:450:21-450:37)
      kind: switchInt(move _88) -> [0: bb56, 1: bb57, otherwise: bb55]
  }
  preds [bb53]
  succs [bb55, bb56, bb57]

bb55
  0: FakeRead(ForMatchedPlace(None), _86)
    SourceInfo(regex-automata/src/dfa/minimize.rs:450:27-450:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:450:27-450:37)
      kind: unreachable
  }
  preds [bb54]
  succs []

bb56
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:451:21-451:25)
      kind: falseEdge -> [real: bb58, imaginary: bb57]
  }
  preds [bb54]
  succs [bb57, bb58]

bb57
  0: StorageLive(_93)
    SourceInfo(regex-automata/src/dfa/minimize.rs:455:26-455:27)
  1: _93 = ((_86 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/minimize.rs:455:26-455:27)
  2: _85 = _93
    SourceInfo(regex-automata/src/dfa/minimize.rs:455:32-455:33)
  3: StorageDead(_93)
    SourceInfo(regex-automata/src/dfa/minimize.rs:455:32-455:33)
  4: _45 = move _85
    SourceInfo(regex-automata/src/dfa/minimize.rs:450:17-456:18)
  5: StorageDead(_85)
    SourceInfo(regex-automata/src/dfa/minimize.rs:456:17-456:18)
  6: StorageDead(_86)
    SourceInfo(regex-automata/src/dfa/minimize.rs:456:18-456:19)
  7: _54 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:449:20-457:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:443:20-457:14)
      kind: goto -> bb60
  }
  preds [bb54, bb56]
  succs [bb60]

bb58
  0: StorageLive(_90)
    SourceInfo(regex-automata/src/dfa/minimize.rs:452:25-452:36)
  1: StorageLive(_91)
    SourceInfo(regex-automata/src/dfa/minimize.rs:452:25-452:29)
  2: _91 = &mut (*_3)
    SourceInfo(regex-automata/src/dfa/minimize.rs:452:25-452:29)
  3: StorageLive(_92)
    SourceInfo(regex-automata/src/dfa/minimize.rs:452:34-452:35)
  4: _92 = _44
    SourceInfo(regex-automata/src/dfa/minimize.rs:452:34-452:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:452:25-452:36)
      kind: _90 = dfa::minimize::StateSet::add(move _91, move _92) -> [return: bb59, unwind: bb76]
  }
  preds [bb56]
  succs [bb59, bb76]

bb59
  0: StorageDead(_92)
    SourceInfo(regex-automata/src/dfa/minimize.rs:452:35-452:36)
  1: StorageDead(_91)
    SourceInfo(regex-automata/src/dfa/minimize.rs:452:35-452:36)
  2: StorageDead(_90)
    SourceInfo(regex-automata/src/dfa/minimize.rs:452:36-452:37)
  3: _53 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:453:25-453:30)
  4: StorageDead(_85)
    SourceInfo(regex-automata/src/dfa/minimize.rs:456:17-456:18)
  5: StorageDead(_86)
    SourceInfo(regex-automata/src/dfa/minimize.rs:456:18-456:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb62
  }
  preds [bb58]
  succs [bb62]

bb60
  0: StorageDead(_73)
    SourceInfo(regex-automata/src/dfa/minimize.rs:457:13-457:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:431:13-457:14)
      kind: goto -> bb61
  }
  preds [bb51, bb57]
  succs [bb61]

bb61
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/dfa/minimize.rs:457:13-457:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:430:9-458:10)
      kind: goto -> bb29
  }
  preds [bb41, bb60]
  succs [bb29]

bb62
  0: StorageDead(_73)
    SourceInfo(regex-automata/src/dfa/minimize.rs:457:13-457:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb63
  }
  preds [bb52, bb59]
  succs [bb63]

bb63
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/dfa/minimize.rs:457:13-457:14)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/minimize.rs:458:9-458:10)
  2: StorageLive(_94)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  3: StorageLive(_95)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  4: _95 = move _27
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
      kind: _94 = <core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::IntoIterator>::into_iter(move _95) -> [return: bb64, unwind: bb76]
  }
  preds [bb37, bb43, bb62]
  succs [bb64, bb76]

bb64
  0: StorageDead(_95)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:20-459:21)
  1: PlaceMention(_94)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  2: StorageLive(_96)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  3: _96 = move _94
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:459:9-461:10)
      kind: goto -> bb65
  }
  preds [bb63]
  succs [bb65]

bb65
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:459:9-461:10)
      kind: falseUnwind -> [real: bb66, unwind: bb76]
  }
  preds [bb64, bb72]
  succs [bb66, bb76]

bb66
  0: StorageLive(_97)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  1: StorageLive(_98)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  2: StorageLive(_99)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  3: StorageLive(_100)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  4: _100 = &mut _96
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  5: _99 = &mut (*_100)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
      kind: _98 = <core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _99) -> [return: bb67, unwind: bb76]
  }
  preds [bb65]
  succs [bb67, bb76]

bb67
  0: StorageDead(_99)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:20-459:21)
  1: PlaceMention(_98)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  2: _101 = discriminant(_98)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
      kind: switchInt(move _101) -> [0: bb69, 1: bb70, otherwise: bb68]
  }
  preds [bb66]
  succs [bb68, bb69, bb70]

bb68
  0: FakeRead(ForMatchedPlace(None), _98)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:459:18-459:21)
      kind: unreachable
  }
  preds [bb67]
  succs []

bb69
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:459:9-461:10)
      kind: falseEdge -> [real: bb71, imaginary: bb70]
  }
  preds [bb67]
  succs [bb70, bb71]

bb70
  0: StorageLive(_103)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:13-459:14)
  1: _103 = ((_98 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:13-459:14)
  2: StorageLive(_104)
    SourceInfo(regex-automata/src/dfa/minimize.rs:460:13-460:24)
  3: StorageLive(_105)
    SourceInfo(regex-automata/src/dfa/minimize.rs:460:13-460:17)
  4: _105 = &mut (*_3)
    SourceInfo(regex-automata/src/dfa/minimize.rs:460:13-460:17)
  5: StorageLive(_106)
    SourceInfo(regex-automata/src/dfa/minimize.rs:460:22-460:23)
  6: _106 = _103
    SourceInfo(regex-automata/src/dfa/minimize.rs:460:22-460:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:460:13-460:24)
      kind: _104 = dfa::minimize::StateSet::add(move _105, move _106) -> [return: bb72, unwind: bb76]
  }
  preds [bb67, bb69]
  succs [bb72, bb76]

bb71
  0: _0 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:9-461:10)
  1: StorageDead(_100)
    SourceInfo(regex-automata/src/dfa/minimize.rs:461:9-461:10)
  2: StorageDead(_98)
    SourceInfo(regex-automata/src/dfa/minimize.rs:461:9-461:10)
  3: StorageDead(_97)
    SourceInfo(regex-automata/src/dfa/minimize.rs:461:9-461:10)
  4: StorageDead(_96)
    SourceInfo(regex-automata/src/dfa/minimize.rs:461:9-461:10)
  5: StorageDead(_94)
    SourceInfo(regex-automata/src/dfa/minimize.rs:461:9-461:10)
  6: StorageDead(_45)
    SourceInfo(regex-automata/src/dfa/minimize.rs:462:5-462:6)
  7: StorageDead(_44)
    SourceInfo(regex-automata/src/dfa/minimize.rs:462:5-462:6)
  8: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/minimize.rs:462:5-462:6)
  9: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/minimize.rs:462:5-462:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:462:5-462:6)
      kind: drop(_17) -> [return: bb73, unwind: bb77]
  }
  preds [bb69]
  succs [bb73, bb77]

bb72
  0: StorageDead(_106)
    SourceInfo(regex-automata/src/dfa/minimize.rs:460:23-460:24)
  1: StorageDead(_105)
    SourceInfo(regex-automata/src/dfa/minimize.rs:460:23-460:24)
  2: StorageDead(_104)
    SourceInfo(regex-automata/src/dfa/minimize.rs:460:24-460:25)
  3: _97 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:22-461:10)
  4: StorageDead(_103)
    SourceInfo(regex-automata/src/dfa/minimize.rs:461:9-461:10)
  5: StorageDead(_100)
    SourceInfo(regex-automata/src/dfa/minimize.rs:461:9-461:10)
  6: StorageDead(_98)
    SourceInfo(regex-automata/src/dfa/minimize.rs:461:9-461:10)
  7: StorageDead(_97)
    SourceInfo(regex-automata/src/dfa/minimize.rs:461:9-461:10)
  8: _54 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:459:9-461:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:459:9-461:10)
      kind: goto -> bb65
  }
  preds [bb70]
  succs [bb65]

bb73
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/minimize.rs:462:5-462:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:462:5-462:6)
      kind: drop(_16) -> [return: bb74, unwind: bb81]
  }
  preds [bb71]
  succs [bb74, bb81]

bb74
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/minimize.rs:462:5-462:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:462:6-462:6)
      kind: goto -> bb75
  }
  preds [bb73]
  succs [bb75]

bb75
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:462:6-462:6)
      kind: return
  }
  preds [bb8, bb74]
  succs []

bb76
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:462:5-462:6)
      kind: drop(_17) -> [return: bb77, unwind terminate(cleanup)]
  }
  preds [bb15, bb16, bb17, bb18, bb19, bb20, bb21, bb22, bb23, bb24, bb25, bb26, bb27, bb29, bb30, bb32, bb36, bb42, bb44, bb46, bb47, bb53, bb58, bb63, bb65, bb66, bb70]
  succs [bb77]

bb77
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:462:5-462:6)
      kind: drop(_16) -> [return: bb81, unwind terminate(cleanup)]
  }
  preds [bb71, bb76]
  succs [bb81]

bb78
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:427:66-427:67)
      kind: drop(_19) -> [return: bb79, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb79]

bb79
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:427:67-427:68)
      kind: drop(_18) -> [return: bb81, unwind terminate(cleanup)]
  }
  preds [bb14, bb78]
  succs [bb81]

bb80
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:427:66-427:67)
      kind: drop(_19) -> [return: bb81, unwind terminate(cleanup)]
  }
  preds [bb11, bb12]
  succs [bb81]

bb81
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:420:5-462:6)
      kind: resume
  }
  preds [bb0, bb1, bb4, bb7, bb9, bb10, bb73, bb77, bb79, bb80]
  succs []

