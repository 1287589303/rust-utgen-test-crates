bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/search.rs:948:24-948:56)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/search.rs:948:24-948:47)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/search.rs:948:39-948:46)
  3: _5 = _1
    SourceInfo(regex-automata/src/util/search.rs:948:39-948:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:948:24-948:47)
      kind: _4 = util::primitives::PatternID::new(move _5) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/search.rs:948:46-948:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:948:24-948:56)
      kind: _3 = core::result::Result::<util::primitives::PatternID, util::primitives::PatternIDError>::unwrap(move _4) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/search.rs:948:55-948:56)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/util/search.rs:948:58-948:64)
  2: _6 = _2
    SourceInfo(regex-automata/src/util/search.rs:948:58-948:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:948:9-948:65)
      kind: _0 = util::search::HalfMatch::new(move _3, move _6) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/search.rs:948:64-948:65)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/util/search.rs:948:64-948:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:949:6-949:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:947:5-949:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

