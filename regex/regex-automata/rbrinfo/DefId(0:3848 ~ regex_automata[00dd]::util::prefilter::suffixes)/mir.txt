bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:690:9-690:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:690:25-690:50)
      kind: _3 = regex_syntax::hir::literal::Extractor::new() -> [return: bb1, unwind: bb27]
  }
  preds []
  succs [bb1, bb27]

bb1
  0: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:690:9-690:22)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:691:5-691:49)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:691:5-691:14)
  3: _5 = &mut _3
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:691:5-691:14)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:691:20-691:48)
  5: _6 = regex_syntax::hir::literal::ExtractKind::Suffix
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:691:20-691:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:691:5-691:49)
      kind: _4 = regex_syntax::hir::literal::Extractor::kind(move _5, move _6) -> [return: bb2, unwind: bb27]
  }
  preds [bb0]
  succs [bb2, bb27]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:691:48-691:49)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:691:48-691:49)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:691:49-691:50)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:693:9-693:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:693:24-693:45)
      kind: _7 = regex_syntax::hir::literal::Seq::empty() -> [return: bb3, unwind: bb27]
  }
  preds [bb1]
  succs [bb3, bb27]

bb3
  0: FakeRead(ForLet(None), _7)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:693:9-693:21)
  1: StorageLive(_8)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:5-696:6)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  4: _10 = _2
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
      kind: _9 = <&[H] as core::iter::IntoIterator>::into_iter(move _10) -> [return: bb4, unwind: bb26]
  }
  preds [bb2]
  succs [bb4, bb26]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:19-694:20)
  1: PlaceMention(_9)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  3: _11 = move _9
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:5-696:6)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:5-696:6)
      kind: falseUnwind -> [real: bb6, unwind: bb26]
  }
  preds [bb4, bb15]
  succs [bb6, bb26]

bb6
  0: StorageLive(_13)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  1: StorageLive(_14)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  3: StorageLive(_16)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  4: _16 = &mut _11
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  5: _15 = &mut (*_16)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
      kind: _14 = <core::slice::Iter<'_, H> as core::iter::Iterator>::next(move _15) -> [return: bb7, unwind: bb26]
  }
  preds [bb5]
  succs [bb7, bb26]

bb7
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:19-694:20)
  1: PlaceMention(_14)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  2: _17 = discriminant(_14)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
      kind: switchInt(move _17) -> [0: bb9, 1: bb10, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9, bb10]

bb8
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:16-694:20)
      kind: unreachable
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:5-696:6)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageLive(_19)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:9-694:12)
  1: _19 = ((_14 as Some).0: &H)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:9-694:12)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:9-695:61)
  3: StorageLive(_21)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:9-695:17)
  4: _21 = &mut _7
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:9-695:17)
  5: StorageLive(_22)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:24-695:60)
  6: StorageLive(_23)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:24-695:60)
  7: StorageLive(_24)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:29-695:60)
  8: StorageLive(_25)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:29-695:38)
  9: _25 = &_3
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:29-695:38)
  10: StorageLive(_26)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:47-695:59)
  11: StorageLive(_27)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:47-695:59)
  12: StorageLive(_28)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:47-695:50)
  13: _28 = &(*_19)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:47-695:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:47-695:59)
      kind: _27 = <H as core::borrow::Borrow<regex_syntax::hir::Hir>>::borrow(move _28) -> [return: bb12, unwind: bb26]
  }
  preds [bb7, bb9]
  succs [bb12, bb26]

bb11
  0: _8 = const ()
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:5-696:6)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:696:5-696:6)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:696:5-696:6)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:696:5-696:6)
  4: StorageDead(_11)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:696:5-696:6)
  5: StorageDead(_9)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:696:5-696:6)
  6: StorageDead(_8)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:696:5-696:6)
  7: StorageLive(_29)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:703:5-711:6)
  8: PlaceMention(_1)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:703:11-703:15)
  9: _30 = discriminant(_1)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:703:11-703:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:703:5-703:15)
      kind: switchInt(move _30) -> [0: bb17, 1: bb18, otherwise: bb16]
  }
  preds [bb9]
  succs [bb16, bb17, bb18]

bb12
  0: _26 = &(*_27)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:47-695:59)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:58-695:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:29-695:60)
      kind: _24 = regex_syntax::hir::literal::Extractor::extract(move _25, move _26) -> [return: bb13, unwind: bb26]
  }
  preds [bb10]
  succs [bb13, bb26]

bb13
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:59-695:60)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:59-695:60)
  2: _23 = &mut _24
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:24-695:60)
  3: _22 = &mut (*_23)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:24-695:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:9-695:61)
      kind: _20 = regex_syntax::hir::literal::Seq::union(move _21, move _22) -> [return: bb14, unwind: bb25]
  }
  preds [bb12]
  succs [bb14, bb25]

bb14
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:60-695:61)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:60-695:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:61-695:62)
      kind: drop(_24) -> [return: bb15, unwind: bb26]
  }
  preds [bb13]
  succs [bb15, bb26]

bb15
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:61-695:62)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:61-695:62)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:61-695:62)
  3: StorageDead(_20)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:61-695:62)
  4: _13 = const ()
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:21-696:6)
  5: StorageDead(_19)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:696:5-696:6)
  6: StorageDead(_16)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:696:5-696:6)
  7: StorageDead(_14)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:696:5-696:6)
  8: StorageDead(_13)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:696:5-696:6)
  9: _12 = const ()
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:5-696:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:694:5-696:6)
      kind: goto -> bb5
  }
  preds [bb14]
  succs [bb5]

bb16
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:703:11-703:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:703:11-703:15)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:704:9-704:23)
      kind: falseEdge -> [real: bb19, imaginary: bb18]
  }
  preds [bb11]
  succs [bb18, bb19]

bb18
  0: StorageLive(_35)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:709:13-709:57)
  1: StorageLive(_36)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:709:13-709:21)
  2: _36 = &mut _7
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:709:13-709:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:709:13-709:57)
      kind: _35 = regex_syntax::hir::literal::Seq::optimize_for_suffix_by_preference(move _36) -> [return: bb22, unwind: bb26]
  }
  preds [bb11, bb17]
  succs [bb22, bb26]

bb19
  0: StorageLive(_31)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:705:13-705:28)
  1: StorageLive(_32)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:705:13-705:21)
  2: _32 = &mut _7
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:705:13-705:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:705:13-705:28)
      kind: _31 = regex_syntax::hir::literal::Seq::sort(move _32) -> [return: bb20, unwind: bb26]
  }
  preds [bb17]
  succs [bb20, bb26]

bb20
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:705:27-705:28)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:705:28-705:29)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:706:13-706:29)
  3: StorageLive(_34)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:706:13-706:21)
  4: _34 = &mut _7
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:706:13-706:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:706:13-706:29)
      kind: _33 = regex_syntax::hir::literal::Seq::dedup(move _34) -> [return: bb21, unwind: bb26]
  }
  preds [bb19]
  succs [bb21, bb26]

bb21
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:706:28-706:29)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:706:29-706:30)
  2: _29 = const ()
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:704:27-707:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:704:27-707:10)
      kind: goto -> bb23
  }
  preds [bb20]
  succs [bb23]

bb22
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:709:56-709:57)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:709:57-709:58)
  2: _29 = const ()
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:708:37-710:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:708:37-710:10)
      kind: goto -> bb23
  }
  preds [bb18]
  succs [bb23]

bb23
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:711:5-711:6)
  1: _0 = move _7
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:718:5-718:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:719:1-719:2)
      kind: drop(_7) -> [return: bb24, unwind: bb27]
  }
  preds [bb21, bb22]
  succs [bb24, bb27]

bb24
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:719:1-719:2)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:719:1-719:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:719:2-719:2)
      kind: return
  }
  preds [bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:695:61-695:62)
      kind: drop(_24) -> [return: bb26, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:719:1-719:2)
      kind: drop(_7) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb3, bb5, bb6, bb10, bb12, bb14, bb18, bb19, bb20, bb25]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:686:1-719:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb23, bb26]
  succs []

