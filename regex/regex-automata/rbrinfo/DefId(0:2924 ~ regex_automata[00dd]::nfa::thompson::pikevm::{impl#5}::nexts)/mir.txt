bb0
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1477:13-1477:20)
  1: _8 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1477:23-1477:27)
  2: FakeRead(ForLet(None), _8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1477:13-1477:20)
  3: PlaceMention((*_3))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1478:60-1478:65)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1478:28-1478:35)
  5: _9 = &((*_3).0: util::sparse_set::SparseSet)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1478:28-1478:35)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1478:37-1478:55)
  7: _10 = &mut ((*_3).1: nfa::thompson::pikevm::SlotTable)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1478:37-1478:55)
  8: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:9-1488:10)
  9: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
  10: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
  11: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:23)
  12: _14 = &(*_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
      kind: _13 = util::sparse_set::SparseSet::iter(move _14) -> [return: bb1, unwind: bb22]
  }
  preds []
  succs [bb1, bb22]

bb1
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:29-1479:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
      kind: _12 = <util::sparse_set::SparseSetIter<'_> as core::iter::IntoIterator>::into_iter(move _13) -> [return: bb2, unwind: bb22]
  }
  preds [bb0]
  succs [bb2, bb22]

bb2
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:29-1479:30)
  1: PlaceMention(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
  3: _15 = move _12
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:9-1488:10)
      kind: goto -> bb3
  }
  preds [bb1]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:9-1488:10)
      kind: falseUnwind -> [real: bb4, unwind: bb22]
  }
  preds [bb2, bb18, bb21]
  succs [bb4, bb22]

bb4
  0: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
  1: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
  4: _20 = &mut _15
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
  5: _19 = &mut (*_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
      kind: _18 = <util::sparse_set::SparseSetIter<'_> as core::iter::Iterator>::next(move _19) -> [return: bb5, unwind: bb22]
  }
  preds [bb3]
  succs [bb5, bb22]

bb5
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:29-1479:30)
  1: PlaceMention(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
  2: _21 = discriminant(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
      kind: switchInt(move _21) -> [0: bb7, 1: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:20-1479:30)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:9-1488:10)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:13-1479:16)
  1: _23 = ((_18 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:13-1479:16)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:19-1483:14)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:25-1480:75)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:25-1480:29)
  5: _26 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:25-1480:29)
  6: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:35-1480:40)
  7: _27 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:35-1480:40)
  8: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:42-1480:52)
  9: _28 = &mut (*_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:42-1480:52)
  10: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:54-1480:58)
  11: _29 = &mut (*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:54-1480:58)
  12: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:60-1480:65)
  13: _30 = &(*_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:60-1480:65)
  14: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:67-1480:69)
  15: _31 = _6
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:67-1480:69)
  16: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:71-1480:74)
  17: _32 = _23
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:71-1480:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:25-1480:75)
      kind: _25 = nfa::thompson::pikevm::PikeVM::next(move _26, move _27, move _28, move _29, move _30, move _31, move _32) -> [return: bb10, unwind: bb22]
  }
  preds [bb5, bb7]
  succs [bb10, bb22]

bb9
  0: _11 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:9-1488:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:9-1488:10)
      kind: goto -> bb20
  }
  preds [bb7]
  succs [bb20]

bb10
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:74-1480:75)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:74-1480:75)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:74-1480:75)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:74-1480:75)
  4: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:74-1480:75)
  5: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:74-1480:75)
  6: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:74-1480:75)
  7: PlaceMention(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:25-1480:75)
  8: _33 = discriminant(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:25-1480:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:19-1480:75)
      kind: switchInt(move _33) -> [0: bb12, 1: bb13, otherwise: bb11]
  }
  preds [bb8]
  succs [bb11, bb12, bb13]

bb11
  0: FakeRead(ForMatchedPlace(None), _25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:25-1480:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:25-1480:75)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1481:17-1481:21)
      kind: falseEdge -> [real: bb21, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb21]

bb13
  0: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1482:22-1482:25)
  1: _35 = ((_25 as Some).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1482:22-1482:25)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1482:35-1482:38)
  3: _36 = _35
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1482:35-1482:38)
  4: _24 = core::option::Option::<util::primitives::PatternID>::Some(move _36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1482:30-1482:39)
  5: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1482:38-1482:39)
  6: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1482:38-1482:39)
  7: _8 = move _24
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1480:13-1483:14)
  8: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1483:13-1483:14)
  9: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1483:14-1483:15)
  10: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:13-1484:61)
  11: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:13-1484:18)
  12: _38 = &mut (*_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:13-1484:18)
  13: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:35-1484:60)
  14: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:35-1484:60)
  15: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:35-1484:45)
  16: _41 = &mut (*_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:35-1484:45)
  17: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:56-1484:59)
  18: _42 = _23
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:56-1484:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:35-1484:60)
      kind: _40 = nfa::thompson::pikevm::SlotTable::for_state(move _41, move _42) -> [return: bb14, unwind: bb22]
  }
  preds [bb10, bb12]
  succs [bb14, bb22]

bb14
  0: _39 = &(*_40)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:35-1484:60)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:59-1484:60)
  2: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:59-1484:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:13-1484:61)
      kind: _37 = core::slice::<impl [core::option::Option<util::primitives::NonMaxUsize>]>::copy_from_slice(move _38, move _39) -> [return: bb15, unwind: bb22]
  }
  preds [bb13]
  succs [bb15, bb22]

bb15
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:60-1484:61)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:60-1484:61)
  2: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:61-1484:62)
  3: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1484:61-1484:62)
  4: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1485:17-1485:73)
  5: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1485:17-1485:45)
  6: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1485:17-1485:45)
  7: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1485:17-1485:28)
  8: _46 = &((*_1).0: nfa::thompson::pikevm::Config)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1485:17-1485:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1485:17-1485:45)
      kind: _45 = nfa::thompson::pikevm::Config::get_match_kind(move _46) -> [return: bb16, unwind: bb22]
  }
  preds [bb14]
  succs [bb16, bb22]

bb16
  0: _44 = &_45
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1485:17-1485:45)
  1: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1485:44-1485:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1485:17-1485:73)
      kind: _43 = util::search::MatchKind::continue_past_first_match(move _44) -> [return: bb17, unwind: bb22]
  }
  preds [bb15]
  succs [bb17, bb22]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1485:17-1485:73)
      kind: switchInt(move _43) -> [0: bb19, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19]

bb18
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1485:72-1485:73)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1485:72-1485:73)
  2: _17 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1487:14-1487:14)
  3: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1487:13-1487:14)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  5: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  6: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  7: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  8: _16 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:9-1488:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1479:9-1488:10)
      kind: goto -> bb3
  }
  preds [bb17]
  succs [bb3]

bb19
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1485:72-1485:73)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1485:72-1485:73)
  2: _11 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1486:17-1486:22)
  3: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1487:13-1487:14)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb20
  }
  preds [bb17]
  succs [bb20]

bb20
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  4: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  5: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  6: _0 = _8
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1489:9-1489:12)
  7: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1490:5-1490:6)
  8: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1490:5-1490:6)
  9: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1490:5-1490:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1490:6-1490:6)
      kind: return
  }
  preds [bb9, bb19]
  succs []

bb21
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1483:13-1483:14)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1483:14-1483:15)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  3: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  4: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  5: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1488:9-1488:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb3
  }
  preds [bb12]
  succs [bb3]

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1467:5-1490:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb4, bb8, bb13, bb14, bb15, bb16]
  succs []

