{
  "regex-automata/src/nfa/thompson/pikevm.rs:1480:25:1480:75": [
    {
      "Match": {
        "match_source": "regex-automata/src/nfa/thompson/pikevm.rs:1480:25:1480:75",
        "match_str": "self.next(stack, slot_table, next, input, at, sid)",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/nfa/thompson/pikevm.rs:1482:17:1482:26": {
            "pat": {
              "pat_str": "Some(pid)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/pikevm.rs:1482:30:1482:39"
          },
          "regex-automata/src/nfa/thompson/pikevm.rs:1481:17:1481:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/pikevm.rs:1481:25:1481:33"
          }
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/pikevm.rs:1485:17:1485:73": [
    {
      "Bool": {
        "Other": "self.config.get_match_kind().continue_past_first_match()"
      }
    }
  ],
  "regex-automata/src/nfa/thompson/pikevm.rs:1479:20:1479:30": [
    {
      "For": {
        "iter_var": "sid",
        "iter_range": "set.iter()"
      }
    }
  ]
}