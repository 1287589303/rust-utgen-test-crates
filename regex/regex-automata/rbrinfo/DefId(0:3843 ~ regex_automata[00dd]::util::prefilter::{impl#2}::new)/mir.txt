bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:583:9-586:10)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:583:12-583:30)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:583:12-583:25)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:583:12-583:19)
  4: _6 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:583:12-583:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:583:12-583:25)
      kind: _5 = core::slice::<impl [B]>::len(move _6) -> [return: bb1, unwind: bb65]
  }
  preds []
  succs [bb1, bb65]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:583:24-583:25)
  1: _4 = Eq(move _5, const 0_usize)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:583:12-583:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:583:12-583:30)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:583:29-583:30)
  1: _0 = core::option::Option::<util::prefilter::Choice>::None
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:585:20-585:24)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:586:9-586:10)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:586:9-586:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb1]
  succs [bb55]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:583:29-583:30)
  1: _3 = const ()
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:586:10-586:10)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:586:9-586:10)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:586:9-586:10)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:9-593:10)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:12-590:57)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:12-590:26)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:12-590:26)
  8: StorageLive(_12)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:12-590:19)
  9: _12 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:12-590:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:12-590:26)
      kind: _11 = core::slice::<impl [B]>::iter(move _12) -> [return: bb4, unwind: bb65]
  }
  preds [bb1]
  succs [bb4, bb65]

bb4
  0: _10 = &mut _11
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:12-590:26)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:25-590:26)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:31-590:56)
  3: _13 = {closure@regex-automata/src/util/prefilter/mod.rs:590:31: 590:34}
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:31-590:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:12-590:57)
      kind: _9 = <core::slice::Iter<'_, B> as core::iter::Iterator>::any::<{closure@regex-automata/src/util/prefilter/mod.rs:590:31: 590:34}>(move _10, move _13) -> [return: bb5, unwind: bb65]
  }
  preds [bb3]
  succs [bb5, bb65]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:12-590:57)
      kind: switchInt(move _9) -> [0: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:56-590:57)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:56-590:57)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:56-590:57)
  3: _0 = core::option::Option::<util::prefilter::Choice>::None
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:592:20-592:24)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:593:9-593:10)
  5: StorageDead(_8)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:593:9-593:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb5]
  succs [bb55]

bb7
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:56-590:57)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:56-590:57)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:590:56-590:57)
  3: _8 = const ()
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:593:10-593:10)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:593:9-593:10)
  5: StorageDead(_8)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:593:9-593:10)
  6: StorageLive(_15)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:9-602:10)
  7: StorageLive(_16)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:28-599:54)
  8: StorageLive(_17)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:40-599:44)
  9: _17 = _1
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:40-599:44)
  10: StorageLive(_18)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:46-599:53)
  11: _18 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:46-599:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:28-599:54)
      kind: _16 = util::prefilter::memchr::Memchr::new::<B>(move _17, move _18) -> [return: bb8, unwind: bb65]
  }
  preds [bb5]
  succs [bb8, bb65]

bb8
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:53-599:54)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:53-599:54)
  2: PlaceMention(_16)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:28-599:54)
  3: _19 = discriminant(_16)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:28-599:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:16-599:25)
      kind: switchInt(move _19) -> [1: bb9, otherwise: bb12]
  }
  preds [bb7]
  succs [bb9, bb12]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:16-599:25)
      kind: falseEdge -> [real: bb10, imaginary: bb12]
  }
  preds [bb8]
  succs [bb10, bb12]

bb10
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:21-599:24)
  1: _20 = move ((_16 as Some).0: util::prefilter::memchr::Memchr)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:599:21-599:24)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:601:25-601:44)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:601:40-601:43)
  4: _23 = move _20
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:601:40-601:43)
  5: _22 = util::prefilter::Choice::Memchr(move _23)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:601:25-601:44)
  6: StorageDead(_23)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:601:43-601:44)
  7: _0 = core::option::Option::<util::prefilter::Choice>::Some(move _22)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:601:20-601:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:601:44-601:45)
      kind: drop(_22) -> [return: bb11, unwind: bb65]
  }
  preds [bb9]
  succs [bb11, bb65]

bb11
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:601:44-601:45)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:602:9-602:10)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:602:9-602:10)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:602:9-602:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb10]
  succs [bb55]

bb12
  0: _15 = const ()
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:602:10-602:10)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:602:9-602:10)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:602:9-602:10)
  3: StorageLive(_24)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:9-606:10)
  4: StorageLive(_25)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:28-603:55)
  5: StorageLive(_26)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:41-603:45)
  6: _26 = _1
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:41-603:45)
  7: StorageLive(_27)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:47-603:54)
  8: _27 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:47-603:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:28-603:55)
      kind: _25 = util::prefilter::memchr::Memchr2::new::<B>(move _26, move _27) -> [return: bb13, unwind: bb65]
  }
  preds [bb8, bb9]
  succs [bb13, bb65]

bb13
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:54-603:55)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:54-603:55)
  2: PlaceMention(_25)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:28-603:55)
  3: _28 = discriminant(_25)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:28-603:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:16-603:25)
      kind: switchInt(move _28) -> [1: bb14, otherwise: bb17]
  }
  preds [bb12]
  succs [bb14, bb17]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:16-603:25)
      kind: falseEdge -> [real: bb15, imaginary: bb17]
  }
  preds [bb13]
  succs [bb15, bb17]

bb15
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:21-603:24)
  1: _29 = move ((_25 as Some).0: util::prefilter::memchr::Memchr2)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:603:21-603:24)
  2: StorageLive(_31)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:605:25-605:45)
  3: StorageLive(_32)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:605:41-605:44)
  4: _32 = move _29
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:605:41-605:44)
  5: _31 = util::prefilter::Choice::Memchr2(move _32)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:605:25-605:45)
  6: StorageDead(_32)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:605:44-605:45)
  7: _0 = core::option::Option::<util::prefilter::Choice>::Some(move _31)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:605:20-605:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:605:45-605:46)
      kind: drop(_31) -> [return: bb16, unwind: bb65]
  }
  preds [bb14]
  succs [bb16, bb65]

bb16
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:605:45-605:46)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:606:9-606:10)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:606:9-606:10)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:606:9-606:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb15]
  succs [bb55]

bb17
  0: _24 = const ()
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:606:10-606:10)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:606:9-606:10)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:606:9-606:10)
  3: StorageLive(_33)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:9-610:10)
  4: StorageLive(_34)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:28-607:55)
  5: StorageLive(_35)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:41-607:45)
  6: _35 = _1
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:41-607:45)
  7: StorageLive(_36)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:47-607:54)
  8: _36 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:47-607:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:28-607:55)
      kind: _34 = util::prefilter::memchr::Memchr3::new::<B>(move _35, move _36) -> [return: bb18, unwind: bb65]
  }
  preds [bb13, bb14]
  succs [bb18, bb65]

bb18
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:54-607:55)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:54-607:55)
  2: PlaceMention(_34)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:28-607:55)
  3: _37 = discriminant(_34)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:28-607:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:16-607:25)
      kind: switchInt(move _37) -> [1: bb19, otherwise: bb22]
  }
  preds [bb17]
  succs [bb19, bb22]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:16-607:25)
      kind: falseEdge -> [real: bb20, imaginary: bb22]
  }
  preds [bb18]
  succs [bb20, bb22]

bb20
  0: StorageLive(_38)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:21-607:24)
  1: _38 = move ((_34 as Some).0: util::prefilter::memchr::Memchr3)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:607:21-607:24)
  2: StorageLive(_40)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:609:25-609:45)
  3: StorageLive(_41)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:609:41-609:44)
  4: _41 = move _38
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:609:41-609:44)
  5: _40 = util::prefilter::Choice::Memchr3(move _41)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:609:25-609:45)
  6: StorageDead(_41)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:609:44-609:45)
  7: _0 = core::option::Option::<util::prefilter::Choice>::Some(move _40)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:609:20-609:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:609:45-609:46)
      kind: drop(_40) -> [return: bb21, unwind: bb65]
  }
  preds [bb19]
  succs [bb21, bb65]

bb21
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:609:45-609:46)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:610:9-610:10)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:610:9-610:10)
  3: StorageDead(_33)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:610:9-610:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb20]
  succs [bb55]

bb22
  0: _33 = const ()
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:610:10-610:10)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:610:9-610:10)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:610:9-610:10)
  3: StorageLive(_42)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:9-614:10)
  4: StorageLive(_43)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:28-611:54)
  5: StorageLive(_44)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:40-611:44)
  6: _44 = _1
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:40-611:44)
  7: StorageLive(_45)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:46-611:53)
  8: _45 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:46-611:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:28-611:54)
      kind: _43 = util::prefilter::memmem::Memmem::new::<B>(move _44, move _45) -> [return: bb23, unwind: bb65]
  }
  preds [bb18, bb19]
  succs [bb23, bb65]

bb23
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:53-611:54)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:53-611:54)
  2: PlaceMention(_43)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:28-611:54)
  3: _46 = discriminant(_43)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:28-611:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:16-611:25)
      kind: switchInt(move _46) -> [1: bb24, otherwise: bb28]
  }
  preds [bb22]
  succs [bb24, bb28]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:16-611:25)
      kind: falseEdge -> [real: bb25, imaginary: bb28]
  }
  preds [bb23]
  succs [bb25, bb28]

bb25
  0: StorageLive(_47)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:21-611:24)
  1: _47 = move ((_43 as Some).0: util::prefilter::memmem::Memmem)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:611:21-611:24)
  2: StorageLive(_49)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:613:25-613:44)
  3: StorageLive(_50)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:613:40-613:43)
  4: _50 = move _47
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:613:40-613:43)
  5: _49 = util::prefilter::Choice::Memmem(move _50)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:613:25-613:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:613:43-613:44)
      kind: drop(_50) -> [return: bb26, unwind: bb62]
  }
  preds [bb24]
  succs [bb26, bb62]

bb26
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:613:43-613:44)
  1: _0 = core::option::Option::<util::prefilter::Choice>::Some(move _49)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:613:20-613:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:613:44-613:45)
      kind: drop(_49) -> [return: bb27, unwind: bb63]
  }
  preds [bb25]
  succs [bb27, bb63]

bb27
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:613:44-613:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:614:9-614:10)
      kind: drop(_47) -> [return: bb53, unwind: bb64]
  }
  preds [bb26]
  succs [bb53, bb64]

bb28
  0: _42 = const ()
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:614:10-614:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:614:9-614:10)
      kind: drop(_43) -> [return: bb29, unwind: bb65]
  }
  preds [bb23, bb24]
  succs [bb29, bb65]

bb29
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:614:9-614:10)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:614:9-614:10)
  2: StorageLive(_51)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:9-618:10)
  3: StorageLive(_52)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:28-615:53)
  4: StorageLive(_53)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:39-615:43)
  5: _53 = _1
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:39-615:43)
  6: StorageLive(_54)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:45-615:52)
  7: _54 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:45-615:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:28-615:53)
      kind: _52 = util::prefilter::teddy::Teddy::new::<B>(move _53, move _54) -> [return: bb30, unwind: bb65]
  }
  preds [bb28]
  succs [bb30, bb65]

bb30
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:52-615:53)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:52-615:53)
  2: PlaceMention(_52)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:28-615:53)
  3: _55 = discriminant(_52)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:28-615:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:16-615:25)
      kind: switchInt(move _55) -> [1: bb31, otherwise: bb35]
  }
  preds [bb29]
  succs [bb31, bb35]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:16-615:25)
      kind: falseEdge -> [real: bb32, imaginary: bb35]
  }
  preds [bb30]
  succs [bb32, bb35]

bb32
  0: StorageLive(_56)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:21-615:24)
  1: _56 = move ((_52 as Some).0: util::prefilter::teddy::Teddy)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:615:21-615:24)
  2: StorageLive(_58)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:617:25-617:43)
  3: StorageLive(_59)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:617:39-617:42)
  4: _59 = move _56
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:617:39-617:42)
  5: _58 = util::prefilter::Choice::Teddy(move _59)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:617:25-617:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:617:42-617:43)
      kind: drop(_59) -> [return: bb33, unwind: bb59]
  }
  preds [bb31]
  succs [bb33, bb59]

bb33
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:617:42-617:43)
  1: _0 = core::option::Option::<util::prefilter::Choice>::Some(move _58)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:617:20-617:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:617:43-617:44)
      kind: drop(_58) -> [return: bb34, unwind: bb60]
  }
  preds [bb32]
  succs [bb34, bb60]

bb34
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:617:43-617:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:618:9-618:10)
      kind: drop(_56) -> [return: bb51, unwind: bb61]
  }
  preds [bb33]
  succs [bb51, bb61]

bb35
  0: _51 = const ()
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:618:10-618:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:618:9-618:10)
      kind: drop(_52) -> [return: bb36, unwind: bb65]
  }
  preds [bb30, bb31]
  succs [bb36, bb65]

bb36
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:618:9-618:10)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:618:9-618:10)
  2: StorageLive(_60)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:9-622:10)
  3: StorageLive(_61)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:28-619:55)
  4: StorageLive(_62)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:41-619:45)
  5: _62 = _1
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:41-619:45)
  6: StorageLive(_63)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:47-619:54)
  7: _63 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:47-619:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:28-619:55)
      kind: _61 = util::prefilter::byteset::ByteSet::new::<B>(move _62, move _63) -> [return: bb37, unwind: bb65]
  }
  preds [bb35]
  succs [bb37, bb65]

bb37
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:54-619:55)
  1: StorageDead(_62)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:54-619:55)
  2: PlaceMention(_61)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:28-619:55)
  3: _64 = discriminant(_61)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:28-619:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:16-619:25)
      kind: switchInt(move _64) -> [1: bb38, otherwise: bb41]
  }
  preds [bb36]
  succs [bb38, bb41]

bb38
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:16-619:25)
      kind: falseEdge -> [real: bb39, imaginary: bb41]
  }
  preds [bb37]
  succs [bb39, bb41]

bb39
  0: StorageLive(_65)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:21-619:24)
  1: _65 = move ((_61 as Some).0: util::prefilter::byteset::ByteSet)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:619:21-619:24)
  2: StorageLive(_67)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:621:25-621:45)
  3: StorageLive(_68)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:621:41-621:44)
  4: _68 = move _65
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:621:41-621:44)
  5: _67 = util::prefilter::Choice::ByteSet(move _68)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:621:25-621:45)
  6: StorageDead(_68)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:621:44-621:45)
  7: _0 = core::option::Option::<util::prefilter::Choice>::Some(move _67)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:621:20-621:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:621:45-621:46)
      kind: drop(_67) -> [return: bb40, unwind: bb65]
  }
  preds [bb38]
  succs [bb40, bb65]

bb40
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:621:45-621:46)
  1: StorageDead(_65)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:622:9-622:10)
  2: StorageDead(_61)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:622:9-622:10)
  3: StorageDead(_60)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:622:9-622:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb39]
  succs [bb55]

bb41
  0: _60 = const ()
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:622:10-622:10)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:622:9-622:10)
  2: StorageDead(_60)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:622:9-622:10)
  3: StorageLive(_69)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:9-626:10)
  4: StorageLive(_70)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:28-623:59)
  5: StorageLive(_71)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:45-623:49)
  6: _71 = _1
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:45-623:49)
  7: StorageLive(_72)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:51-623:58)
  8: _72 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:51-623:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:28-623:59)
      kind: _70 = util::prefilter::aho_corasick::AhoCorasick::new::<B>(move _71, move _72) -> [return: bb42, unwind: bb65]
  }
  preds [bb37, bb38]
  succs [bb42, bb65]

bb42
  0: StorageDead(_72)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:58-623:59)
  1: StorageDead(_71)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:58-623:59)
  2: PlaceMention(_70)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:28-623:59)
  3: _73 = discriminant(_70)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:28-623:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:16-623:25)
      kind: switchInt(move _73) -> [1: bb43, otherwise: bb47]
  }
  preds [bb41]
  succs [bb43, bb47]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:16-623:25)
      kind: falseEdge -> [real: bb44, imaginary: bb47]
  }
  preds [bb42]
  succs [bb44, bb47]

bb44
  0: StorageLive(_74)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:21-623:24)
  1: _74 = move ((_70 as Some).0: util::prefilter::aho_corasick::AhoCorasick)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:623:21-623:24)
  2: StorageLive(_76)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:625:25-625:49)
  3: StorageLive(_77)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:625:45-625:48)
  4: _77 = move _74
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:625:45-625:48)
  5: _76 = util::prefilter::Choice::AhoCorasick(move _77)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:625:25-625:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:625:48-625:49)
      kind: drop(_77) -> [return: bb45, unwind: bb56]
  }
  preds [bb43]
  succs [bb45, bb56]

bb45
  0: StorageDead(_77)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:625:48-625:49)
  1: _0 = core::option::Option::<util::prefilter::Choice>::Some(move _76)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:625:20-625:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:625:49-625:50)
      kind: drop(_76) -> [return: bb46, unwind: bb57]
  }
  preds [bb44]
  succs [bb46, bb57]

bb46
  0: StorageDead(_76)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:625:49-625:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:626:9-626:10)
      kind: drop(_74) -> [return: bb49, unwind: bb58]
  }
  preds [bb45]
  succs [bb49, bb58]

bb47
  0: _69 = const ()
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:626:10-626:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:626:9-626:10)
      kind: drop(_70) -> [return: bb48, unwind: bb65]
  }
  preds [bb42, bb43]
  succs [bb48, bb65]

bb48
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:626:9-626:10)
  1: StorageDead(_69)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:626:9-626:10)
  2: _0 = core::option::Option::<util::prefilter::Choice>::None
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:628:9-628:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:629:6-629:6)
      kind: goto -> bb55
  }
  preds [bb47]
  succs [bb55]

bb49
  0: StorageDead(_74)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:626:9-626:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:626:9-626:10)
      kind: drop(_70) -> [return: bb50, unwind: bb65]
  }
  preds [bb46]
  succs [bb50, bb65]

bb50
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:626:9-626:10)
  1: StorageDead(_69)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:626:9-626:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb49]
  succs [bb55]

bb51
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:618:9-618:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:618:9-618:10)
      kind: drop(_52) -> [return: bb52, unwind: bb65]
  }
  preds [bb34]
  succs [bb52, bb65]

bb52
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:618:9-618:10)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:618:9-618:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb51]
  succs [bb55]

bb53
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:614:9-614:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:614:9-614:10)
      kind: drop(_43) -> [return: bb54, unwind: bb65]
  }
  preds [bb27]
  succs [bb54, bb65]

bb54
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:614:9-614:10)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:614:9-614:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb53]
  succs [bb55]

bb55
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:629:6-629:6)
      kind: return
  }
  preds [bb2, bb6, bb11, bb16, bb21, bb40, bb48, bb50, bb52, bb54]
  succs []

bb56
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:625:49-625:50)
      kind: drop(_76) -> [return: bb57, unwind terminate(cleanup)]
  }
  preds [bb44]
  succs [bb57]

bb57
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:626:9-626:10)
      kind: drop(_74) -> [return: bb58, unwind terminate(cleanup)]
  }
  preds [bb45, bb56]
  succs [bb58]

bb58
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:626:9-626:10)
      kind: drop(_70) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb46, bb57]
  succs [bb65]

bb59
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:617:43-617:44)
      kind: drop(_58) -> [return: bb60, unwind terminate(cleanup)]
  }
  preds [bb32]
  succs [bb60]

bb60
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:618:9-618:10)
      kind: drop(_56) -> [return: bb61, unwind terminate(cleanup)]
  }
  preds [bb33, bb59]
  succs [bb61]

bb61
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:618:9-618:10)
      kind: drop(_52) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb34, bb60]
  succs [bb65]

bb62
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:613:44-613:45)
      kind: drop(_49) -> [return: bb63, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb63]

bb63
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:614:9-614:10)
      kind: drop(_47) -> [return: bb64, unwind terminate(cleanup)]
  }
  preds [bb26, bb62]
  succs [bb64]

bb64
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:614:9-614:10)
      kind: drop(_43) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb27, bb63]
  succs [bb65]

bb65
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:577:5-629:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb7, bb10, bb12, bb15, bb17, bb20, bb22, bb28, bb29, bb35, bb36, bb39, bb41, bb47, bb49, bb51, bb53, bb58, bb61, bb64]
  succs []

