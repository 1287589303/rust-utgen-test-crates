{
  "regex-automata/src/util/escape.rs:77:21:77:56": [
    {
      "Try": "write!(f, \"{}\", ch.escape_debug())?"
    }
  ],
  "regex-automata/src/util/escape.rs:60:21:60:50": [
    {
      "Try": "write!(f, r\"\\x{:02x}\", byte)?"
    }
  ],
  "regex-automata/src/util/escape.rs:66:19:66:21": [
    {
      "Match": {
        "match_source": "regex-automata/src/util/escape.rs:66:19:66:21",
        "match_str": "ch",
        "match_kind": "Other",
        "arms": {
          "regex-automata/src/util/escape.rs:70:19:70:25": {
            "pat": {
              "pat_str": "'\\x0b'",
              "kind": {
                "Other": 11
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/escape.rs:73:29:75:18"
          },
          "regex-automata/src/util/escape.rs:72:19:72:34": {
            "pat": {
              "pat_str": "'\\x0e'..='\\x19'",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/escape.rs:73:29:75:18"
          },
          "regex-automata/src/util/escape.rs:71:19:71:25": {
            "pat": {
              "pat_str": "'\\x0c'",
              "kind": {
                "Other": 12
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/escape.rs:73:29:75:18"
          },
          "regex-automata/src/util/escape.rs:67:17:67:21": {
            "pat": {
              "pat_str": "'\\0'",
              "kind": {
                "Other": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/escape.rs:67:25:67:42"
          },
          "regex-automata/src/util/escape.rs:73:19:73:25": {
            "pat": {
              "pat_str": "'\\x7f'",
              "kind": {
                "Other": 127
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/escape.rs:73:29:75:18"
          },
          "regex-automata/src/util/escape.rs:76:17:76:21": {
            "pat": {
              "pat_str": "'\\n'",
              "kind": {
                "Other": 10
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/escape.rs:76:43:78:18"
          },
          "regex-automata/src/util/escape.rs:76:38:76:39": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "regex-automata/src/util/escape.rs:76:43:78:18"
          },
          "regex-automata/src/util/escape.rs:76:24:76:28": {
            "pat": {
              "pat_str": "'\\r'",
              "kind": {
                "Other": 13
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/escape.rs:76:43:78:18"
          },
          "regex-automata/src/util/escape.rs:69:17:69:32": {
            "pat": {
              "pat_str": "'\\x01'..='\\x08'",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/escape.rs:73:29:75:18"
          },
          "regex-automata/src/util/escape.rs:76:31:76:35": {
            "pat": {
              "pat_str": "'\\t'",
              "kind": {
                "Other": 9
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/escape.rs:76:43:78:18"
          }
        }
      }
    }
  ],
  "regex-automata/src/util/escape.rs:81:9:81:25": [
    {
      "Try": "write!(f, \"\\\"\")?"
    }
  ],
  "regex-automata/src/util/escape.rs:74:21:74:59": [
    {
      "Try": "write!(f, \"\\\\x{:02x}\", u32::from(ch))?"
    }
  ],
  "regex-automata/src/util/escape.rs:56:15:56:53": [
    {
      "Bool": {
        "Other": "let Some(result) = utf8::decode(bytes)"
      }
    }
  ],
  "regex-automata/src/util/escape.rs:57:28:57:34": [
    {
      "Match": {
        "match_source": "regex-automata/src/util/escape.rs:57:28:57:34",
        "match_str": "result",
        "match_kind": {
          "Enum": [
            "Ok",
            "Err"
          ]
        },
        "arms": {
          "regex-automata/src/util/escape.rs:59:17:59:26": {
            "pat": {
              "pat_str": "Err(byte)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/escape.rs:59:30:63:18"
          },
          "regex-automata/src/util/escape.rs:58:17:58:23": {
            "pat": {
              "pat_str": "Ok(ch)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/escape.rs:58:27:58:29"
          }
        }
      }
    }
  ],
  "regex-automata/src/util/escape.rs:67:25:67:42": [
    {
      "Try": "write!(f, \"\\\\0\")?"
    }
  ],
  "regex-automata/src/util/escape.rs:53:9:53:25": [
    {
      "Try": "write!(f, \"\\\"\")?"
    }
  ]
}