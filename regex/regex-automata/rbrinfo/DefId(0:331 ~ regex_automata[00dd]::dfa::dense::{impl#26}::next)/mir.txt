bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/dense.rs:4767:9-4767:23)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:4767:9-4767:16)
  2: _3 = &mut ((*_1).1: core::iter::Enumerate<core::slice::Chunks<'_, util::primitives::StateID>>)
    SourceInfo(regex-automata/src/dfa/dense.rs:4767:9-4767:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4767:9-4767:23)
      kind: _2 = <core::iter::Enumerate<core::slice::Chunks<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:4767:22-4767:23)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:4767:28-4770:10)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:4767:28-4770:10)
  3: _5 = &(*((*_1).0: &dfa::dense::TransitionTable<T>))
    SourceInfo(regex-automata/src/dfa/dense.rs:4767:28-4770:10)
  4: _4 = {closure@regex-automata/src/dfa/dense.rs:4767:28: 4767:40} { self: move _5 }
    SourceInfo(regex-automata/src/dfa/dense.rs:4767:28-4770:10)
  5: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:4767:39-4767:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4767:9-4770:11)
      kind: _0 = core::option::Option::<(usize, &[util::primitives::StateID])>::map::<dfa::dense::State<'_>, {closure@regex-automata/src/dfa/dense.rs:4767:28: 4767:40}>(move _2, move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:4770:10-4770:11)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/dense.rs:4770:10-4770:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4771:6-4771:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4766:5-4771:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

