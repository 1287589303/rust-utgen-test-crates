bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:670:9-670:24)
  1: _2 = ((*_1).0: core::option::Option<util::primitives::PatternID>)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:670:9-670:24)
  2: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:670:32-670:65)
  3: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:670:32-670:65)
  4: _4 = const "must call 'start_pattern' first"
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:670:32-670:65)
  5: _3 = &(*_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:670:32-670:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:670:9-670:66)
      kind: _0 = core::option::Option::<util::primitives::PatternID>::expect(move _2, move _3) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:670:65-670:66)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:670:65-670:66)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:671:5-671:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:671:6-671:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:669:5-671:6)
      kind: resume
  }
  preds [bb0]
  succs []

