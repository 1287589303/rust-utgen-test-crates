bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:693:9-693:13)
  1: _2 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:693:9-693:13)
  2: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:693:18-693:54)
  3: _3 = nfa::thompson::builder::State::Empty { next: const util::primitives::StateID::ZERO }
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:693:18-693:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:693:9-693:55)
      kind: _0 = nfa::thompson::builder::Builder::add(move _2, move _3) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:693:54-693:55)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:693:54-693:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:694:6-694:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:693:54-693:55)
      kind: drop(_3) -> [return: bb3, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:692:5-694:6)
      kind: resume
  }
  preds [bb2]
  succs []

