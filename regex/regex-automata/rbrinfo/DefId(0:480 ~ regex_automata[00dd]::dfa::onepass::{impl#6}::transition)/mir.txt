bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2258:13-2258:19)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2258:22-2258:36)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2258:22-2258:25)
  3: _6 = &_2
    SourceInfo(regex-automata/src/dfa/onepass.rs:2258:22-2258:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2258:22-2258:36)
      kind: _5 = util::primitives::StateID::as_usize(move _6) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2258:35-2258:36)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2258:40-2258:54)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2258:40-2258:44)
  3: _8 = &(*_1)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2258:40-2258:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2258:40-2258:54)
      kind: _7 = dfa::onepass::DFA::stride2(move _8) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2258:53-2258:54)
  1: _9 = Lt(_7, const 64_usize)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2258:22-2258:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2258:22-2258:54)
      kind: assert(move _9, "attempt to shift left by `{}`, which would overflow", _7) -> [success: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: _4 = Shl(move _5, move _7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2258:22-2258:54)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2258:53-2258:54)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2258:53-2258:54)
  3: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2258:13-2258:19)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2259:13-2259:18)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2259:21-2259:43)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2259:21-2259:33)
  7: _12 = &((*_1).5: util::alphabet::ByteClasses)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2259:21-2259:33)
  8: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2259:38-2259:42)
  9: _13 = _3
    SourceInfo(regex-automata/src/dfa/onepass.rs:2259:38-2259:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2259:21-2259:43)
      kind: _11 = util::alphabet::ByteClasses::get(move _12, move _13) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2259:42-2259:43)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2259:42-2259:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2259:21-2259:54)
      kind: _10 = <u8 as util::int::U8>::as_usize(move _11) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2259:53-2259:54)
  1: FakeRead(ForLet(None), _10)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2259:13-2259:18)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:19-2260:35)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:9-2260:19)
  4: _15 = &((*_1).2: std::vec::Vec<dfa::onepass::Transition>)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:9-2260:19)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:20-2260:34)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:20-2260:26)
  7: _17 = _4
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:20-2260:26)
  8: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:29-2260:34)
  9: _18 = _10
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:29-2260:34)
  10: _19 = AddWithOverflow(_17, _18)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:20-2260:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2260:20-2260:34)
      kind: assert(!move (_19.1: bool), "attempt to compute `{} + {}`, which would overflow", move _17, move _18) -> [success: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: _16 = move (_19.0: usize)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:20-2260:34)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:33-2260:34)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:33-2260:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2260:19-2260:35)
      kind: _14 = <std::vec::Vec<dfa::onepass::Transition> as core::ops::Index<usize>>::index(move _15, move _16) -> [return: bb7, unwind: bb8]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: _0 = (*_14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:9-2260:35)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:34-2260:35)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2260:34-2260:35)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2261:5-2261:6)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2261:5-2261:6)
  5: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2261:5-2261:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2261:6-2261:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2257:5-2261:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6]
  succs []

