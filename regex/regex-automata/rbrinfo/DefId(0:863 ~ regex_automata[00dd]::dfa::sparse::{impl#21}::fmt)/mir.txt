bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2474:13-2474:18)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2475:17-2475:24)
  2: _4 = ((*_1).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2475:17-2475:24)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2476:23-2476:36)
  4: _5 = ((*_1).1: bool)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2476:23-2476:36)
  5: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2477:21-2477:32)
  6: _6 = ((*_1).2: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2477:21-2477:32)
  7: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2478:27-2478:44)
  8: _7 = &(*((*_1).3: &mut [u8]))
    SourceInfo(regex-automata/src/dfa/sparse.rs:2478:27-2478:44)
  9: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2479:19-2479:28)
  10: _8 = &(*((*_1).4: &mut [u8]))
    SourceInfo(regex-automata/src/dfa/sparse.rs:2479:19-2479:28)
  11: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2480:26-2480:42)
  12: _9 = &(*((*_1).5: &[u8]))
    SourceInfo(regex-automata/src/dfa/sparse.rs:2480:26-2480:42)
  13: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2481:20-2481:30)
  14: _10 = &(*((*_1).6: &mut [u8]))
    SourceInfo(regex-automata/src/dfa/sparse.rs:2481:20-2481:30)
  15: _3 = dfa::sparse::State::<'_> { id: move _4, is_match: move _5, ntrans: move _6, input_ranges: move _7, next: move _8, pattern_ids: move _9, accel: move _10 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:2474:21-2482:10)
  16: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2482:9-2482:10)
  17: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2482:9-2482:10)
  18: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2482:9-2482:10)
  19: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2482:9-2482:10)
  20: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2482:9-2482:10)
  21: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2482:9-2482:10)
  22: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2482:9-2482:10)
  23: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2474:13-2474:18)
  24: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2483:25-2483:31)
  25: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2483:25-2483:31)
  26: _12 = &_3
    SourceInfo(regex-automata/src/dfa/sparse.rs:2483:25-2483:31)
  27: _11 = &(*_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2483:25-2483:31)
  28: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2483:33-2483:34)
  29: _13 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2483:33-2483:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2483:9-2483:35)
      kind: _0 = <dfa::sparse::State<'_> as core::fmt::Debug>::fmt(move _11, move _13) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2483:34-2483:35)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2483:34-2483:35)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2484:5-2484:6)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2484:5-2484:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2484:6-2484:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2473:5-2484:6)
      kind: resume
  }
  preds [bb0]
  succs []

