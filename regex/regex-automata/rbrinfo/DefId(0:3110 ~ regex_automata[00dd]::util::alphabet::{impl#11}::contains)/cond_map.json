{
  "regex-automata/src/util/alphabet.rs:779:44:779:54": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(1 << bit)",
          "lhs": "1",
          "rhs": "bit",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/alphabet.rs:777:22:777:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "byte / 128",
          "lhs": "byte",
          "rhs": "128",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/alphabet.rs:779:9:779:58": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "self.bits.0[usize::from(bucket)] & (1 << bit) > 0",
          "lhs": "self.bits.0[usize::from(bucket)] & (1 << bit)",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/alphabet.rs:778:19:778:29": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "byte % 128",
          "lhs": "byte",
          "rhs": "128",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/alphabet.rs:779:9:779:54": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.bits.0[usize::from(bucket)] & (1 << bit)",
          "lhs": "self.bits.0[usize::from(bucket)]",
          "rhs": "(1 << bit)",
          "cmp_with_int": false
        }
      }
    }
  ]
}