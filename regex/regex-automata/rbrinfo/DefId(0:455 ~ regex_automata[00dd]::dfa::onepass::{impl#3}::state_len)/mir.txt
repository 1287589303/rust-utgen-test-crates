bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1446:9-1446:25)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1446:9-1446:19)
  2: _3 = &((*_1).2: std::vec::Vec<dfa::onepass::Transition>)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1446:9-1446:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:1446:9-1446:25)
      kind: _2 = std::vec::Vec::<dfa::onepass::Transition>::len(move _3) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1446:24-1446:25)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1446:29-1446:43)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1446:29-1446:33)
  3: _5 = &(*_1)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1446:29-1446:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:1446:29-1446:43)
      kind: _4 = dfa::onepass::DFA::stride2(move _5) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1446:42-1446:43)
  1: _6 = Lt(_4, const 64_usize)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1446:9-1446:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:1446:9-1446:43)
      kind: assert(move _6, "attempt to shift right by `{}`, which would overflow", _4) -> [success: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: _0 = Shr(move _2, move _4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1446:9-1446:43)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1446:42-1446:43)
  2: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1446:42-1446:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:1447:6-1447:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:1445:5-1447:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

