bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/search.rs:573:17-573:21)
  1: _5 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/hybrid/search.rs:573:17-573:21)
  2: ((*_4).0: core::option::Option<util::search::HalfMatch>) = move _5
    SourceInfo(regex-automata/src/hybrid/search.rs:573:5-573:21)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/search.rs:573:20-573:21)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/search.rs:574:5-576:6)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/search.rs:574:8-574:23)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/search.rs:574:8-574:13)
  7: _8 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:574:8-574:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:574:8-574:23)
      kind: _7 = util::search::Input::<'_>::is_done(move _8) -> [return: bb1, unwind: bb124]
  }
  preds []
  succs [bb1, bb124]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:574:8-574:23)
      kind: switchInt(move _7) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/search.rs:574:22-574:23)
  1: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/search.rs:575:19-575:21)
  2: _10 = ()
    SourceInfo(regex-automata/src/hybrid/search.rs:575:19-575:21)
  3: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _10)
    SourceInfo(regex-automata/src/hybrid/search.rs:575:16-575:22)
  4: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/search.rs:575:21-575:22)
  5: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/search.rs:576:5-576:6)
  6: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/search.rs:576:5-576:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb114
  }
  preds [bb1]
  succs [bb114]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/search.rs:574:22-574:23)
  1: _6 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:576:6-576:6)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/search.rs:576:5-576:6)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/search.rs:576:5-576:6)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/search.rs:577:9-577:16)
  5: PlaceMention(((*_4).1: core::option::Option<hybrid::id::LazyStateID>))
    SourceInfo(regex-automata/src/hybrid/search.rs:577:25-577:33)
  6: _12 = discriminant(((*_4).1: core::option::Option<hybrid::id::LazyStateID>))
    SourceInfo(regex-automata/src/hybrid/search.rs:577:25-577:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:577:19-577:33)
      kind: switchInt(move _12) -> [0: bb5, 1: bb6, otherwise: bb4]
  }
  preds [bb1]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), ((*_4).1: core::option::Option<hybrid::id::LazyStateID>))
    SourceInfo(regex-automata/src/hybrid/search.rs:577:25-577:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:577:25-577:33)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:578:9-578:13)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_35)
    SourceInfo(regex-automata/src/hybrid/search.rs:588:14-588:17)
  1: _35 = ((((*_4).1: core::option::Option<hybrid::id::LazyStateID>) as Some).0: hybrid::id::LazyStateID)
    SourceInfo(regex-automata/src/hybrid/search.rs:588:14-588:17)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/hybrid/search.rs:589:13-597:14)
  3: PlaceMention(((*_4).3: core::option::Option<usize>))
    SourceInfo(regex-automata/src/hybrid/search.rs:589:40-589:62)
  4: _37 = discriminant(((*_4).3: core::option::Option<usize>))
    SourceInfo(regex-automata/src/hybrid/search.rs:589:40-589:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:589:20-589:37)
      kind: switchInt(move _37) -> [1: bb23, otherwise: bb31]
  }
  preds [bb3, bb5]
  succs [bb23, bb31]

bb7
  0: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:17-579:20)
  1: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:23-579:51)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:23-579:50)
  3: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:32-579:35)
  4: _16 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:32-579:35)
  5: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:37-579:42)
  6: _17 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:37-579:42)
  7: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:44-579:49)
  8: _18 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:44-579:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:579:23-579:50)
      kind: _15 = hybrid::search::init_rev(move _16, move _17, move _18) -> [return: bb8, unwind: bb124]
  }
  preds [bb5]
  succs [bb8, bb124]

bb8
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:49-579:50)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:49-579:50)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:49-579:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:579:23-579:51)
      kind: _14 = <core::result::Result<hybrid::id::LazyStateID, util::search::MatchError> as core::ops::Try>::branch(move _15) -> [return: bb9, unwind: bb123]
  }
  preds [bb7]
  succs [bb9, bb123]

bb9
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:50-579:51)
  1: PlaceMention(_14)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:23-579:51)
  2: _19 = discriminant(_14)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:23-579:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:579:23-579:51)
      kind: switchInt(move _19) -> [0: bb12, 1: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:23-579:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:579:23-579:51)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:579:50-579:51)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:23-579:51)
  1: _23 = ((_14 as Continue).0: hybrid::id::LazyStateID)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:23-579:51)
  2: _13 = _23
    SourceInfo(regex-automata/src/hybrid/search.rs:579:23-579:51)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:50-579:51)
  4: FakeRead(ForLet(None), _13)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:17-579:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:579:51-579:52)
      kind: drop(_14) -> [return: bb15, unwind: bb124]
  }
  preds [bb9, bb11]
  succs [bb15, bb124]

bb13
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:50-579:51)
  1: _20 = move ((_14 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:50-579:51)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:50-579:51)
  3: _22 = move _20
    SourceInfo(regex-automata/src/hybrid/search.rs:579:50-579:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:579:23-579:51)
      kind: _0 = <core::result::Result<(), util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _22) -> [return: bb14, unwind: bb120]
  }
  preds [bb11]
  succs [bb14, bb120]

bb14
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:50-579:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:579:50-579:51)
      kind: drop(_20) -> [return: bb111, unwind: bb122]
  }
  preds [bb13]
  succs [bb111, bb122]

bb15
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:51-579:52)
  1: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/search.rs:580:24-580:33)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/hybrid/search.rs:580:29-580:32)
  3: _25 = _13
    SourceInfo(regex-automata/src/hybrid/search.rs:580:29-580:32)
  4: _24 = core::option::Option::<hybrid::id::LazyStateID>::Some(move _25)
    SourceInfo(regex-automata/src/hybrid/search.rs:580:24-580:33)
  5: StorageDead(_25)
    SourceInfo(regex-automata/src/hybrid/search.rs:580:32-580:33)
  6: ((*_4).1: core::option::Option<hybrid::id::LazyStateID>) = move _24
    SourceInfo(regex-automata/src/hybrid/search.rs:580:13-580:33)
  7: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/search.rs:580:32-580:33)
  8: StorageLive(_26)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:13-585:14)
  9: StorageLive(_27)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:16-581:44)
  10: StorageLive(_28)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:16-581:29)
  11: StorageLive(_29)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:16-581:21)
  12: _29 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:16-581:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:581:16-581:29)
      kind: _28 = util::search::Input::<'_>::start(move _29) -> [return: bb16, unwind: bb124]
  }
  preds [bb12]
  succs [bb16, bb124]

bb16
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:28-581:29)
  1: StorageLive(_30)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:33-581:44)
  2: StorageLive(_31)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:33-581:38)
  3: _31 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:33-581:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:581:33-581:44)
      kind: _30 = util::search::Input::<'_>::end(move _31) -> [return: bb17, unwind: bb124]
  }
  preds [bb15]
  succs [bb17, bb124]

bb17
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:43-581:44)
  1: _27 = Eq(move _28, move _30)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:16-581:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:581:16-581:44)
      kind: switchInt(move _27) -> [0: bb19, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19]

bb18
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:43-581:44)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:43-581:44)
  2: ((*_4).4: bool) = const true
    SourceInfo(regex-automata/src/hybrid/search.rs:582:17-582:37)
  3: _26 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:581:45-583:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:581:13-585:14)
      kind: goto -> bb22
  }
  preds [bb17]
  succs [bb22]

bb19
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:43-581:44)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/hybrid/search.rs:581:43-581:44)
  2: StorageLive(_32)
    SourceInfo(regex-automata/src/hybrid/search.rs:584:28-584:39)
  3: StorageLive(_33)
    SourceInfo(regex-automata/src/hybrid/search.rs:584:28-584:33)
  4: _33 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:584:28-584:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:584:28-584:39)
      kind: _32 = util::search::Input::<'_>::end(move _33) -> [return: bb20, unwind: bb124]
  }
  preds [bb17]
  succs [bb20, bb124]

bb20
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/hybrid/search.rs:584:38-584:39)
  1: _34 = SubWithOverflow(_32, const 1_usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:584:28-584:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:584:28-584:43)
      kind: assert(!move (_34.1: bool), "attempt to compute `{} - {}`, which would overflow", move _32, const 1_usize) -> [success: bb21, unwind: bb124]
  }
  preds [bb19]
  succs [bb21, bb124]

bb21
  0: ((*_4).2: usize) = move (_34.0: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:584:17-584:43)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/hybrid/search.rs:584:42-584:43)
  2: _26 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:583:20-585:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:581:13-585:14)
      kind: goto -> bb22
  }
  preds [bb20]
  succs [bb22]

bb22
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/search.rs:585:13-585:14)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/hybrid/search.rs:585:13-585:14)
  2: _11 = _13
    SourceInfo(regex-automata/src/hybrid/search.rs:586:13-586:16)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/search.rs:587:9-587:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:587:9-587:10)
      kind: goto -> bb40
  }
  preds [bb18, bb21]
  succs [bb40]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:589:20-589:37)
      kind: falseEdge -> [real: bb24, imaginary: bb31]
  }
  preds [bb6]
  succs [bb24, bb31]

bb24
  0: StorageLive(_38)
    SourceInfo(regex-automata/src/hybrid/search.rs:589:25-589:36)
  1: _38 = ((((*_4).3: core::option::Option<usize>) as Some).0: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:589:25-589:36)
  2: StorageLive(_39)
    SourceInfo(regex-automata/src/hybrid/search.rs:590:21-590:30)
  3: StorageLive(_40)
    SourceInfo(regex-automata/src/hybrid/search.rs:590:33-590:36)
  4: _40 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/search.rs:590:33-590:36)
  5: StorageLive(_41)
    SourceInfo(regex-automata/src/hybrid/search.rs:590:47-590:52)
  6: _41 = &(*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:590:47-590:52)
  7: StorageLive(_42)
    SourceInfo(regex-automata/src/hybrid/search.rs:590:54-590:57)
  8: _42 = _35
    SourceInfo(regex-automata/src/hybrid/search.rs:590:54-590:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:590:33-590:58)
      kind: _39 = hybrid::dfa::DFA::match_len(move _40, move _41, move _42) -> [return: bb25, unwind: bb124]
  }
  preds [bb23]
  succs [bb25, bb124]

bb25
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/hybrid/search.rs:590:57-590:58)
  1: StorageDead(_41)
    SourceInfo(regex-automata/src/hybrid/search.rs:590:57-590:58)
  2: StorageDead(_40)
    SourceInfo(regex-automata/src/hybrid/search.rs:590:57-590:58)
  3: FakeRead(ForLet(None), _39)
    SourceInfo(regex-automata/src/hybrid/search.rs:590:21-590:30)
  4: StorageLive(_43)
    SourceInfo(regex-automata/src/hybrid/search.rs:591:20-591:43)
  5: StorageLive(_44)
    SourceInfo(regex-automata/src/hybrid/search.rs:591:20-591:31)
  6: _44 = _38
    SourceInfo(regex-automata/src/hybrid/search.rs:591:20-591:31)
  7: StorageLive(_45)
    SourceInfo(regex-automata/src/hybrid/search.rs:591:34-591:43)
  8: _45 = _39
    SourceInfo(regex-automata/src/hybrid/search.rs:591:34-591:43)
  9: _43 = Lt(move _44, move _45)
    SourceInfo(regex-automata/src/hybrid/search.rs:591:20-591:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:591:20-591:43)
      kind: switchInt(move _43) -> [0: bb30, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb30]

bb26
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/hybrid/search.rs:591:42-591:43)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/hybrid/search.rs:591:42-591:43)
  2: StorageLive(_47)
    SourceInfo(regex-automata/src/hybrid/search.rs:592:46-592:67)
  3: StorageLive(_48)
    SourceInfo(regex-automata/src/hybrid/search.rs:592:51-592:66)
  4: StorageLive(_49)
    SourceInfo(regex-automata/src/hybrid/search.rs:592:51-592:62)
  5: _49 = _38
    SourceInfo(regex-automata/src/hybrid/search.rs:592:51-592:62)
  6: _50 = AddWithOverflow(_49, const 1_usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:592:51-592:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:592:51-592:66)
      kind: assert(!move (_50.1: bool), "attempt to compute `{} + {}`, which would overflow", move _49, const 1_usize) -> [success: bb27, unwind: bb124]
  }
  preds [bb25]
  succs [bb27, bb124]

bb27
  0: _48 = move (_50.0: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:592:51-592:66)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/hybrid/search.rs:592:65-592:66)
  2: _47 = core::option::Option::<usize>::Some(move _48)
    SourceInfo(regex-automata/src/hybrid/search.rs:592:46-592:67)
  3: StorageDead(_48)
    SourceInfo(regex-automata/src/hybrid/search.rs:592:66-592:67)
  4: ((*_4).3: core::option::Option<usize>) = move _47
    SourceInfo(regex-automata/src/hybrid/search.rs:592:21-592:67)
  5: StorageDead(_47)
    SourceInfo(regex-automata/src/hybrid/search.rs:592:66-592:67)
  6: StorageLive(_51)
    SourceInfo(regex-automata/src/hybrid/search.rs:593:25-593:32)
  7: StorageLive(_52)
    SourceInfo(regex-automata/src/hybrid/search.rs:593:35-593:38)
  8: _52 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/search.rs:593:35-593:38)
  9: StorageLive(_53)
    SourceInfo(regex-automata/src/hybrid/search.rs:593:53-593:58)
  10: _53 = &(*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:593:53-593:58)
  11: StorageLive(_54)
    SourceInfo(regex-automata/src/hybrid/search.rs:593:60-593:63)
  12: _54 = _35
    SourceInfo(regex-automata/src/hybrid/search.rs:593:60-593:63)
  13: StorageLive(_55)
    SourceInfo(regex-automata/src/hybrid/search.rs:593:65-593:76)
  14: _55 = _38
    SourceInfo(regex-automata/src/hybrid/search.rs:593:65-593:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:593:35-593:77)
      kind: _51 = hybrid::dfa::DFA::match_pattern(move _52, move _53, move _54, move _55) -> [return: bb28, unwind: bb124]
  }
  preds [bb26]
  succs [bb28, bb124]

bb28
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/hybrid/search.rs:593:76-593:77)
  1: StorageDead(_54)
    SourceInfo(regex-automata/src/hybrid/search.rs:593:76-593:77)
  2: StorageDead(_53)
    SourceInfo(regex-automata/src/hybrid/search.rs:593:76-593:77)
  3: StorageDead(_52)
    SourceInfo(regex-automata/src/hybrid/search.rs:593:76-593:77)
  4: FakeRead(ForLet(None), _51)
    SourceInfo(regex-automata/src/hybrid/search.rs:593:25-593:32)
  5: StorageLive(_56)
    SourceInfo(regex-automata/src/hybrid/search.rs:594:33-594:72)
  6: StorageLive(_57)
    SourceInfo(regex-automata/src/hybrid/search.rs:594:38-594:71)
  7: StorageLive(_58)
    SourceInfo(regex-automata/src/hybrid/search.rs:594:53-594:60)
  8: _58 = _51
    SourceInfo(regex-automata/src/hybrid/search.rs:594:53-594:60)
  9: StorageLive(_59)
    SourceInfo(regex-automata/src/hybrid/search.rs:594:62-594:70)
  10: _59 = ((*_4).2: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:594:62-594:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:594:38-594:71)
      kind: _57 = util::search::HalfMatch::new(move _58, move _59) -> [return: bb29, unwind: bb124]
  }
  preds [bb27]
  succs [bb29, bb124]

bb29
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/hybrid/search.rs:594:70-594:71)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/hybrid/search.rs:594:70-594:71)
  2: _56 = core::option::Option::<util::search::HalfMatch>::Some(move _57)
    SourceInfo(regex-automata/src/hybrid/search.rs:594:33-594:72)
  3: StorageDead(_57)
    SourceInfo(regex-automata/src/hybrid/search.rs:594:71-594:72)
  4: ((*_4).0: core::option::Option<util::search::HalfMatch>) = move _56
    SourceInfo(regex-automata/src/hybrid/search.rs:594:21-594:72)
  5: StorageDead(_56)
    SourceInfo(regex-automata/src/hybrid/search.rs:594:71-594:72)
  6: StorageLive(_60)
    SourceInfo(regex-automata/src/hybrid/search.rs:595:31-595:33)
  7: _60 = ()
    SourceInfo(regex-automata/src/hybrid/search.rs:595:31-595:33)
  8: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _60)
    SourceInfo(regex-automata/src/hybrid/search.rs:595:28-595:34)
  9: StorageDead(_60)
    SourceInfo(regex-automata/src/hybrid/search.rs:595:33-595:34)
  10: StorageDead(_51)
    SourceInfo(regex-automata/src/hybrid/search.rs:596:17-596:18)
  11: StorageDead(_43)
    SourceInfo(regex-automata/src/hybrid/search.rs:596:17-596:18)
  12: StorageDead(_39)
    SourceInfo(regex-automata/src/hybrid/search.rs:597:13-597:14)
  13: StorageDead(_38)
    SourceInfo(regex-automata/src/hybrid/search.rs:597:13-597:14)
  14: StorageDead(_36)
    SourceInfo(regex-automata/src/hybrid/search.rs:597:13-597:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb110
  }
  preds [bb28]
  succs [bb110]

bb30
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/hybrid/search.rs:591:42-591:43)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/hybrid/search.rs:591:42-591:43)
  2: _36 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:596:18-596:18)
  3: StorageDead(_43)
    SourceInfo(regex-automata/src/hybrid/search.rs:596:17-596:18)
  4: StorageDead(_39)
    SourceInfo(regex-automata/src/hybrid/search.rs:597:13-597:14)
  5: StorageDead(_38)
    SourceInfo(regex-automata/src/hybrid/search.rs:597:13-597:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:589:13-597:14)
      kind: goto -> bb32
  }
  preds [bb25]
  succs [bb32]

bb31
  0: _36 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:597:14-597:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:589:13-597:14)
      kind: goto -> bb32
  }
  preds [bb6, bb23]
  succs [bb32]

bb32
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/hybrid/search.rs:597:13-597:14)
  1: StorageLive(_61)
    SourceInfo(regex-automata/src/hybrid/search.rs:602:13-612:14)
  2: StorageLive(_62)
    SourceInfo(regex-automata/src/hybrid/search.rs:602:16-602:29)
  3: _62 = ((*_4).4: bool)
    SourceInfo(regex-automata/src/hybrid/search.rs:602:16-602:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:602:16-602:29)
      kind: switchInt(move _62) -> [0: bb34, otherwise: bb33]
  }
  preds [bb30, bb31]
  succs [bb33, bb34]

bb33
  0: StorageLive(_64)
    SourceInfo(regex-automata/src/hybrid/search.rs:603:27-603:29)
  1: _64 = ()
    SourceInfo(regex-automata/src/hybrid/search.rs:603:27-603:29)
  2: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _64)
    SourceInfo(regex-automata/src/hybrid/search.rs:603:24-603:30)
  3: StorageDead(_64)
    SourceInfo(regex-automata/src/hybrid/search.rs:603:29-603:30)
  4: StorageDead(_62)
    SourceInfo(regex-automata/src/hybrid/search.rs:612:13-612:14)
  5: StorageDead(_61)
    SourceInfo(regex-automata/src/hybrid/search.rs:612:13-612:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb110
  }
  preds [bb32]
  succs [bb110]

bb34
  0: StorageLive(_65)
    SourceInfo(regex-automata/src/hybrid/search.rs:604:23-604:48)
  1: StorageLive(_66)
    SourceInfo(regex-automata/src/hybrid/search.rs:604:23-604:31)
  2: _66 = ((*_4).2: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:604:23-604:31)
  3: StorageLive(_67)
    SourceInfo(regex-automata/src/hybrid/search.rs:604:35-604:48)
  4: StorageLive(_68)
    SourceInfo(regex-automata/src/hybrid/search.rs:604:35-604:40)
  5: _68 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:604:35-604:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:604:35-604:48)
      kind: _67 = util::search::Input::<'_>::start(move _68) -> [return: bb35, unwind: bb124]
  }
  preds [bb32]
  succs [bb35, bb124]

bb35
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/hybrid/search.rs:604:47-604:48)
  1: _65 = Eq(move _66, move _67)
    SourceInfo(regex-automata/src/hybrid/search.rs:604:23-604:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:604:23-604:48)
      kind: switchInt(move _65) -> [0: bb37, otherwise: bb36]
  }
  preds [bb34]
  succs [bb36, bb37]

bb36
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/hybrid/search.rs:604:47-604:48)
  1: StorageDead(_66)
    SourceInfo(regex-automata/src/hybrid/search.rs:604:47-604:48)
  2: ((*_4).4: bool) = const true
    SourceInfo(regex-automata/src/hybrid/search.rs:608:17-608:37)
  3: _61 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:604:49-609:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:604:20-612:14)
      kind: goto -> bb39
  }
  preds [bb35]
  succs [bb39]

bb37
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/hybrid/search.rs:604:47-604:48)
  1: StorageDead(_66)
    SourceInfo(regex-automata/src/hybrid/search.rs:604:47-604:48)
  2: _69 = SubWithOverflow(((*_4).2: usize), const 1_usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:611:17-611:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:611:17-611:30)
      kind: assert(!move (_69.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_4).2: usize), const 1_usize) -> [success: bb38, unwind: bb124]
  }
  preds [bb35]
  succs [bb38, bb124]

bb38
  0: ((*_4).2: usize) = move (_69.0: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:611:17-611:30)
  1: _61 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:609:20-612:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:604:20-612:14)
      kind: goto -> bb39
  }
  preds [bb37]
  succs [bb39]

bb39
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/hybrid/search.rs:612:13-612:14)
  1: StorageDead(_62)
    SourceInfo(regex-automata/src/hybrid/search.rs:612:13-612:14)
  2: StorageDead(_61)
    SourceInfo(regex-automata/src/hybrid/search.rs:612:13-612:14)
  3: _11 = _35
    SourceInfo(regex-automata/src/hybrid/search.rs:613:13-613:16)
  4: StorageDead(_35)
    SourceInfo(regex-automata/src/hybrid/search.rs:614:9-614:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:614:9-614:10)
      kind: goto -> bb40
  }
  preds [bb36, bb38]
  succs [bb40]

bb40
  0: FakeRead(ForLet(None), _11)
    SourceInfo(regex-automata/src/hybrid/search.rs:577:9-577:16)
  1: StorageLive(_70)
    SourceInfo(regex-automata/src/hybrid/search.rs:616:5-616:33)
  2: StorageLive(_71)
    SourceInfo(regex-automata/src/hybrid/search.rs:616:5-616:10)
  3: _71 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:616:5-616:10)
  4: StorageLive(_72)
    SourceInfo(regex-automata/src/hybrid/search.rs:616:24-616:32)
  5: _72 = ((*_4).2: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:616:24-616:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:616:5-616:33)
      kind: _70 = hybrid::dfa::Cache::search_start(move _71, move _72) -> [return: bb41, unwind: bb124]
  }
  preds [bb22, bb39]
  succs [bb41, bb124]

bb41
  0: StorageDead(_72)
    SourceInfo(regex-automata/src/hybrid/search.rs:616:32-616:33)
  1: StorageDead(_71)
    SourceInfo(regex-automata/src/hybrid/search.rs:616:32-616:33)
  2: StorageDead(_70)
    SourceInfo(regex-automata/src/hybrid/search.rs:616:33-616:34)
  3: StorageLive(_73)
    SourceInfo(regex-automata/src/hybrid/search.rs:617:5-650:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:617:5-650:6)
      kind: goto -> bb42
  }
  preds [bb40]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:617:5-650:6)
      kind: falseUnwind -> [real: bb43, unwind: bb124]
  }
  preds [bb41, bb94]
  succs [bb43, bb124]

bb43
  0: StorageLive(_75)
    SourceInfo(regex-automata/src/hybrid/search.rs:617:12-617:25)
  1: _75 = ((*_4).4: bool)
    SourceInfo(regex-automata/src/hybrid/search.rs:617:12-617:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:617:12-617:25)
      kind: switchInt(move _75) -> [0: bb44, otherwise: bb95]
  }
  preds [bb42]
  succs [bb44, bb95]

bb44
  0: StorageLive(_76)
    SourceInfo(regex-automata/src/hybrid/search.rs:618:15-620:45)
  1: StorageLive(_77)
    SourceInfo(regex-automata/src/hybrid/search.rs:618:15-620:45)
  2: StorageLive(_78)
    SourceInfo(regex-automata/src/hybrid/search.rs:618:15-620:44)
  3: StorageLive(_79)
    SourceInfo(regex-automata/src/hybrid/search.rs:618:15-619:64)
  4: StorageLive(_80)
    SourceInfo(regex-automata/src/hybrid/search.rs:618:15-618:18)
  5: _80 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/search.rs:618:15-618:18)
  6: StorageLive(_81)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:25-619:30)
  7: _81 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:25-619:30)
  8: StorageLive(_82)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:32-619:35)
  9: _82 = _11
    SourceInfo(regex-automata/src/hybrid/search.rs:619:32-619:35)
  10: StorageLive(_83)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:37-619:63)
  11: StorageLive(_84)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:37-619:53)
  12: StorageLive(_85)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:37-619:42)
  13: _85 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:37-619:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:619:37-619:53)
      kind: _84 = util::search::Input::<'_>::haystack(move _85) -> [return: bb45, unwind: bb124]
  }
  preds [bb43]
  succs [bb45, bb124]

bb45
  0: StorageDead(_85)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:52-619:53)
  1: StorageLive(_86)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:54-619:62)
  2: _86 = ((*_4).2: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:54-619:62)
  3: _87 = Len((*_84))
    SourceInfo(regex-automata/src/hybrid/search.rs:619:37-619:63)
  4: _88 = Lt(_86, _87)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:37-619:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:619:37-619:63)
      kind: assert(move _88, "index out of bounds: the length is {} but the index is {}", move _87, _86) -> [success: bb46, unwind: bb124]
  }
  preds [bb44]
  succs [bb46, bb124]

bb46
  0: _83 = (*_84)[_86]
    SourceInfo(regex-automata/src/hybrid/search.rs:619:37-619:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:618:15-619:64)
      kind: _79 = hybrid::dfa::DFA::next_state(move _80, move _81, move _82, move _83) -> [return: bb47, unwind: bb124]
  }
  preds [bb45]
  succs [bb47, bb124]

bb47
  0: StorageDead(_83)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:63-619:64)
  1: StorageDead(_82)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:63-619:64)
  2: StorageDead(_81)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:63-619:64)
  3: StorageDead(_80)
    SourceInfo(regex-automata/src/hybrid/search.rs:619:63-619:64)
  4: StorageLive(_89)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:22-620:43)
  5: StorageLive(_90)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:22-620:43)
  6: _90 = &((*_4).2: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:22-620:43)
  7: _89 = {closure@regex-automata/src/hybrid/search.rs:620:22: 620:25} { state: move _90 }
    SourceInfo(regex-automata/src/hybrid/search.rs:620:22-620:43)
  8: StorageDead(_90)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:24-620:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:618:15-620:44)
      kind: _78 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::CacheError>::map_err::<util::search::MatchError, {closure@regex-automata/src/hybrid/search.rs:620:22: 620:25}>(move _79, move _89) -> [return: bb48, unwind: bb124]
  }
  preds [bb46]
  succs [bb48, bb124]

bb48
  0: StorageDead(_89)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:43-620:44)
  1: StorageDead(_79)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:43-620:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:618:15-620:45)
      kind: _77 = <core::result::Result<hybrid::id::LazyStateID, util::search::MatchError> as core::ops::Try>::branch(move _78) -> [return: bb49, unwind: bb119]
  }
  preds [bb47]
  succs [bb49, bb119]

bb49
  0: StorageDead(_78)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
  1: PlaceMention(_77)
    SourceInfo(regex-automata/src/hybrid/search.rs:618:15-620:45)
  2: _91 = discriminant(_77)
    SourceInfo(regex-automata/src/hybrid/search.rs:618:15-620:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:618:15-620:45)
      kind: switchInt(move _91) -> [0: bb52, 1: bb51, otherwise: bb50]
  }
  preds [bb48]
  succs [bb50, bb51, bb52]

bb50
  0: FakeRead(ForMatchedPlace(None), _77)
    SourceInfo(regex-automata/src/hybrid/search.rs:618:15-620:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:618:15-620:45)
      kind: unreachable
  }
  preds [bb49]
  succs []

bb51
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
      kind: falseEdge -> [real: bb53, imaginary: bb52]
  }
  preds [bb49]
  succs [bb52, bb53]

bb52
  0: StorageLive(_95)
    SourceInfo(regex-automata/src/hybrid/search.rs:618:15-620:45)
  1: _95 = ((_77 as Continue).0: hybrid::id::LazyStateID)
    SourceInfo(regex-automata/src/hybrid/search.rs:618:15-620:45)
  2: _76 = _95
    SourceInfo(regex-automata/src/hybrid/search.rs:618:15-620:45)
  3: StorageDead(_95)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
  4: _11 = move _76
    SourceInfo(regex-automata/src/hybrid/search.rs:618:9-620:45)
  5: StorageDead(_76)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:620:45-620:46)
      kind: drop(_77) -> [return: bb55, unwind: bb124]
  }
  preds [bb49, bb51]
  succs [bb55, bb124]

bb53
  0: StorageLive(_92)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
  1: _92 = move ((_77 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
  2: StorageLive(_94)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
  3: _94 = move _92
    SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:618:15-620:45)
      kind: _0 = <core::result::Result<(), util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _94) -> [return: bb54, unwind: bb116]
  }
  preds [bb51]
  succs [bb54, bb116]

bb54
  0: StorageDead(_94)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
      kind: drop(_92) -> [return: bb107, unwind: bb118]
  }
  preds [bb53]
  succs [bb107, bb118]

bb55
  0: StorageDead(_86)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:45-620:46)
  1: StorageDead(_84)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:45-620:46)
  2: StorageDead(_77)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:45-620:46)
  3: StorageLive(_96)
    SourceInfo(regex-automata/src/hybrid/search.rs:621:9-644:10)
  4: StorageLive(_97)
    SourceInfo(regex-automata/src/hybrid/search.rs:621:12-621:27)
  5: StorageLive(_98)
    SourceInfo(regex-automata/src/hybrid/search.rs:621:12-621:15)
  6: _98 = &_11
    SourceInfo(regex-automata/src/hybrid/search.rs:621:12-621:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:621:12-621:27)
      kind: _97 = hybrid::id::LazyStateID::is_tagged(move _98) -> [return: bb56, unwind: bb124]
  }
  preds [bb52]
  succs [bb56, bb124]

bb56
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:621:12-621:27)
      kind: switchInt(move _97) -> [0: bb88, otherwise: bb57]
  }
  preds [bb55]
  succs [bb57, bb88]

bb57
  0: StorageDead(_98)
    SourceInfo(regex-automata/src/hybrid/search.rs:621:26-621:27)
  1: StorageLive(_99)
    SourceInfo(regex-automata/src/hybrid/search.rs:622:24-622:33)
  2: StorageLive(_100)
    SourceInfo(regex-automata/src/hybrid/search.rs:622:29-622:32)
  3: _100 = _11
    SourceInfo(regex-automata/src/hybrid/search.rs:622:29-622:32)
  4: _99 = core::option::Option::<hybrid::id::LazyStateID>::Some(move _100)
    SourceInfo(regex-automata/src/hybrid/search.rs:622:24-622:33)
  5: StorageDead(_100)
    SourceInfo(regex-automata/src/hybrid/search.rs:622:32-622:33)
  6: ((*_4).1: core::option::Option<hybrid::id::LazyStateID>) = move _99
    SourceInfo(regex-automata/src/hybrid/search.rs:622:13-622:33)
  7: StorageDead(_99)
    SourceInfo(regex-automata/src/hybrid/search.rs:622:32-622:33)
  8: StorageLive(_101)
    SourceInfo(regex-automata/src/hybrid/search.rs:623:16-623:30)
  9: StorageLive(_102)
    SourceInfo(regex-automata/src/hybrid/search.rs:623:16-623:19)
  10: _102 = &_11
    SourceInfo(regex-automata/src/hybrid/search.rs:623:16-623:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:623:16-623:30)
      kind: _101 = hybrid::id::LazyStateID::is_start(move _102) -> [return: bb58, unwind: bb124]
  }
  preds [bb56]
  succs [bb58, bb124]

bb58
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:623:16-623:30)
      kind: switchInt(move _101) -> [0: bb60, otherwise: bb59]
  }
  preds [bb57]
  succs [bb59, bb60]

bb59
  0: StorageDead(_102)
    SourceInfo(regex-automata/src/hybrid/search.rs:623:29-623:30)
  1: _96 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:623:31-625:14)
  2: StorageDead(_101)
    SourceInfo(regex-automata/src/hybrid/search.rs:643:13-643:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:621:9-644:10)
      kind: goto -> bb89
  }
  preds [bb58]
  succs [bb89]

bb60
  0: StorageDead(_102)
    SourceInfo(regex-automata/src/hybrid/search.rs:623:29-623:30)
  1: StorageLive(_103)
    SourceInfo(regex-automata/src/hybrid/search.rs:625:23-625:37)
  2: StorageLive(_104)
    SourceInfo(regex-automata/src/hybrid/search.rs:625:23-625:26)
  3: _104 = &_11
    SourceInfo(regex-automata/src/hybrid/search.rs:625:23-625:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:625:23-625:37)
      kind: _103 = hybrid::id::LazyStateID::is_match(move _104) -> [return: bb61, unwind: bb124]
  }
  preds [bb58]
  succs [bb61, bb124]

bb61
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:625:23-625:37)
      kind: switchInt(move _103) -> [0: bb67, otherwise: bb62]
  }
  preds [bb60]
  succs [bb62, bb67]

bb62
  0: StorageDead(_104)
    SourceInfo(regex-automata/src/hybrid/search.rs:625:36-625:37)
  1: StorageLive(_106)
    SourceInfo(regex-automata/src/hybrid/search.rs:626:42-626:49)
  2: _106 = core::option::Option::<usize>::Some(const 1_usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:626:42-626:49)
  3: ((*_4).3: core::option::Option<usize>) = move _106
    SourceInfo(regex-automata/src/hybrid/search.rs:626:17-626:49)
  4: StorageDead(_106)
    SourceInfo(regex-automata/src/hybrid/search.rs:626:48-626:49)
  5: StorageLive(_107)
    SourceInfo(regex-automata/src/hybrid/search.rs:627:21-627:28)
  6: StorageLive(_108)
    SourceInfo(regex-automata/src/hybrid/search.rs:627:31-627:34)
  7: _108 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/search.rs:627:31-627:34)
  8: StorageLive(_109)
    SourceInfo(regex-automata/src/hybrid/search.rs:627:49-627:54)
  9: _109 = &(*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:627:49-627:54)
  10: StorageLive(_110)
    SourceInfo(regex-automata/src/hybrid/search.rs:627:56-627:59)
  11: _110 = _11
    SourceInfo(regex-automata/src/hybrid/search.rs:627:56-627:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:627:31-627:63)
      kind: _107 = hybrid::dfa::DFA::match_pattern(move _108, move _109, move _110, const 0_usize) -> [return: bb63, unwind: bb124]
  }
  preds [bb61]
  succs [bb63, bb124]

bb63
  0: StorageDead(_110)
    SourceInfo(regex-automata/src/hybrid/search.rs:627:62-627:63)
  1: StorageDead(_109)
    SourceInfo(regex-automata/src/hybrid/search.rs:627:62-627:63)
  2: StorageDead(_108)
    SourceInfo(regex-automata/src/hybrid/search.rs:627:62-627:63)
  3: FakeRead(ForLet(None), _107)
    SourceInfo(regex-automata/src/hybrid/search.rs:627:21-627:28)
  4: StorageLive(_111)
    SourceInfo(regex-automata/src/hybrid/search.rs:628:29-628:72)
  5: StorageLive(_112)
    SourceInfo(regex-automata/src/hybrid/search.rs:628:34-628:71)
  6: StorageLive(_113)
    SourceInfo(regex-automata/src/hybrid/search.rs:628:49-628:56)
  7: _113 = _107
    SourceInfo(regex-automata/src/hybrid/search.rs:628:49-628:56)
  8: StorageLive(_114)
    SourceInfo(regex-automata/src/hybrid/search.rs:628:58-628:70)
  9: StorageLive(_115)
    SourceInfo(regex-automata/src/hybrid/search.rs:628:58-628:66)
  10: _115 = ((*_4).2: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:628:58-628:66)
  11: _116 = AddWithOverflow(_115, const 1_usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:628:58-628:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:628:58-628:70)
      kind: assert(!move (_116.1: bool), "attempt to compute `{} + {}`, which would overflow", move _115, const 1_usize) -> [success: bb64, unwind: bb124]
  }
  preds [bb62]
  succs [bb64, bb124]

bb64
  0: _114 = move (_116.0: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:628:58-628:70)
  1: StorageDead(_115)
    SourceInfo(regex-automata/src/hybrid/search.rs:628:69-628:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:628:34-628:71)
      kind: _112 = util::search::HalfMatch::new(move _113, move _114) -> [return: bb65, unwind: bb124]
  }
  preds [bb63]
  succs [bb65, bb124]

bb65
  0: StorageDead(_114)
    SourceInfo(regex-automata/src/hybrid/search.rs:628:70-628:71)
  1: StorageDead(_113)
    SourceInfo(regex-automata/src/hybrid/search.rs:628:70-628:71)
  2: _111 = core::option::Option::<util::search::HalfMatch>::Some(move _112)
    SourceInfo(regex-automata/src/hybrid/search.rs:628:29-628:72)
  3: StorageDead(_112)
    SourceInfo(regex-automata/src/hybrid/search.rs:628:71-628:72)
  4: ((*_4).0: core::option::Option<util::search::HalfMatch>) = move _111
    SourceInfo(regex-automata/src/hybrid/search.rs:628:17-628:72)
  5: StorageDead(_111)
    SourceInfo(regex-automata/src/hybrid/search.rs:628:71-628:72)
  6: StorageLive(_117)
    SourceInfo(regex-automata/src/hybrid/search.rs:629:17-629:46)
  7: StorageLive(_118)
    SourceInfo(regex-automata/src/hybrid/search.rs:629:17-629:22)
  8: _118 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:629:17-629:22)
  9: StorageLive(_119)
    SourceInfo(regex-automata/src/hybrid/search.rs:629:37-629:45)
  10: _119 = ((*_4).2: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:629:37-629:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:629:17-629:46)
      kind: _117 = hybrid::dfa::Cache::search_finish(move _118, move _119) -> [return: bb66, unwind: bb124]
  }
  preds [bb64]
  succs [bb66, bb124]

bb66
  0: StorageDead(_119)
    SourceInfo(regex-automata/src/hybrid/search.rs:629:45-629:46)
  1: StorageDead(_118)
    SourceInfo(regex-automata/src/hybrid/search.rs:629:45-629:46)
  2: StorageDead(_117)
    SourceInfo(regex-automata/src/hybrid/search.rs:629:46-629:47)
  3: StorageLive(_120)
    SourceInfo(regex-automata/src/hybrid/search.rs:630:27-630:29)
  4: _120 = ()
    SourceInfo(regex-automata/src/hybrid/search.rs:630:27-630:29)
  5: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _120)
    SourceInfo(regex-automata/src/hybrid/search.rs:630:24-630:30)
  6: StorageDead(_120)
    SourceInfo(regex-automata/src/hybrid/search.rs:630:29-630:30)
  7: StorageDead(_107)
    SourceInfo(regex-automata/src/hybrid/search.rs:631:13-631:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb106
  }
  preds [bb65]
  succs [bb106]

bb67
  0: StorageDead(_104)
    SourceInfo(regex-automata/src/hybrid/search.rs:625:36-625:37)
  1: StorageLive(_121)
    SourceInfo(regex-automata/src/hybrid/search.rs:631:23-631:36)
  2: StorageLive(_122)
    SourceInfo(regex-automata/src/hybrid/search.rs:631:23-631:26)
  3: _122 = &_11
    SourceInfo(regex-automata/src/hybrid/search.rs:631:23-631:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:631:23-631:36)
      kind: _121 = hybrid::id::LazyStateID::is_dead(move _122) -> [return: bb68, unwind: bb124]
  }
  preds [bb61]
  succs [bb68, bb124]

bb68
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:631:23-631:36)
      kind: switchInt(move _121) -> [0: bb71, otherwise: bb69]
  }
  preds [bb67]
  succs [bb69, bb71]

bb69
  0: StorageDead(_122)
    SourceInfo(regex-automata/src/hybrid/search.rs:631:35-631:36)
  1: StorageLive(_124)
    SourceInfo(regex-automata/src/hybrid/search.rs:632:17-632:46)
  2: StorageLive(_125)
    SourceInfo(regex-automata/src/hybrid/search.rs:632:17-632:22)
  3: _125 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:632:17-632:22)
  4: StorageLive(_126)
    SourceInfo(regex-automata/src/hybrid/search.rs:632:37-632:45)
  5: _126 = ((*_4).2: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:632:37-632:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:632:17-632:46)
      kind: _124 = hybrid::dfa::Cache::search_finish(move _125, move _126) -> [return: bb70, unwind: bb124]
  }
  preds [bb68]
  succs [bb70, bb124]

bb70
  0: StorageDead(_126)
    SourceInfo(regex-automata/src/hybrid/search.rs:632:45-632:46)
  1: StorageDead(_125)
    SourceInfo(regex-automata/src/hybrid/search.rs:632:45-632:46)
  2: StorageDead(_124)
    SourceInfo(regex-automata/src/hybrid/search.rs:632:46-632:47)
  3: StorageLive(_127)
    SourceInfo(regex-automata/src/hybrid/search.rs:633:27-633:29)
  4: _127 = ()
    SourceInfo(regex-automata/src/hybrid/search.rs:633:27-633:29)
  5: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _127)
    SourceInfo(regex-automata/src/hybrid/search.rs:633:24-633:30)
  6: StorageDead(_127)
    SourceInfo(regex-automata/src/hybrid/search.rs:633:29-633:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:633:17-633:30)
      kind: goto -> bb105
  }
  preds [bb69]
  succs [bb105]

bb71
  0: StorageDead(_122)
    SourceInfo(regex-automata/src/hybrid/search.rs:631:35-631:36)
  1: StorageLive(_128)
    SourceInfo(regex-automata/src/hybrid/search.rs:634:23-634:36)
  2: StorageLive(_129)
    SourceInfo(regex-automata/src/hybrid/search.rs:634:23-634:26)
  3: _129 = &_11
    SourceInfo(regex-automata/src/hybrid/search.rs:634:23-634:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:634:23-634:36)
      kind: _128 = hybrid::id::LazyStateID::is_quit(move _129) -> [return: bb72, unwind: bb124]
  }
  preds [bb68]
  succs [bb72, bb124]

bb72
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:634:23-634:36)
      kind: switchInt(move _128) -> [0: bb79, otherwise: bb73]
  }
  preds [bb71]
  succs [bb73, bb79]

bb73
  0: StorageDead(_129)
    SourceInfo(regex-automata/src/hybrid/search.rs:634:35-634:36)
  1: StorageLive(_131)
    SourceInfo(regex-automata/src/hybrid/search.rs:635:17-635:46)
  2: StorageLive(_132)
    SourceInfo(regex-automata/src/hybrid/search.rs:635:17-635:22)
  3: _132 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:635:17-635:22)
  4: StorageLive(_133)
    SourceInfo(regex-automata/src/hybrid/search.rs:635:37-635:45)
  5: _133 = ((*_4).2: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:635:37-635:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:635:17-635:46)
      kind: _131 = hybrid::dfa::Cache::search_finish(move _132, move _133) -> [return: bb74, unwind: bb124]
  }
  preds [bb72]
  succs [bb74, bb124]

bb74
  0: StorageDead(_133)
    SourceInfo(regex-automata/src/hybrid/search.rs:635:45-635:46)
  1: StorageDead(_132)
    SourceInfo(regex-automata/src/hybrid/search.rs:635:45-635:46)
  2: StorageDead(_131)
    SourceInfo(regex-automata/src/hybrid/search.rs:635:46-635:47)
  3: StorageLive(_134)
    SourceInfo(regex-automata/src/hybrid/search.rs:636:28-639:18)
  4: StorageLive(_135)
    SourceInfo(regex-automata/src/hybrid/search.rs:637:21-637:47)
  5: StorageLive(_136)
    SourceInfo(regex-automata/src/hybrid/search.rs:637:21-637:37)
  6: StorageLive(_137)
    SourceInfo(regex-automata/src/hybrid/search.rs:637:21-637:26)
  7: _137 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:637:21-637:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:637:21-637:37)
      kind: _136 = util::search::Input::<'_>::haystack(move _137) -> [return: bb75, unwind: bb124]
  }
  preds [bb73]
  succs [bb75, bb124]

bb75
  0: StorageDead(_137)
    SourceInfo(regex-automata/src/hybrid/search.rs:637:36-637:37)
  1: StorageLive(_138)
    SourceInfo(regex-automata/src/hybrid/search.rs:637:38-637:46)
  2: _138 = ((*_4).2: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:637:38-637:46)
  3: _139 = Len((*_136))
    SourceInfo(regex-automata/src/hybrid/search.rs:637:21-637:47)
  4: _140 = Lt(_138, _139)
    SourceInfo(regex-automata/src/hybrid/search.rs:637:21-637:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:637:21-637:47)
      kind: assert(move _140, "index out of bounds: the length is {} but the index is {}", move _139, _138) -> [success: bb76, unwind: bb124]
  }
  preds [bb74]
  succs [bb76, bb124]

bb76
  0: _135 = (*_136)[_138]
    SourceInfo(regex-automata/src/hybrid/search.rs:637:21-637:47)
  1: StorageLive(_141)
    SourceInfo(regex-automata/src/hybrid/search.rs:638:21-638:29)
  2: _141 = ((*_4).2: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:638:21-638:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:636:28-639:18)
      kind: _134 = util::search::MatchError::quit(move _135, move _141) -> [return: bb77, unwind: bb124]
  }
  preds [bb75]
  succs [bb77, bb124]

bb77
  0: StorageDead(_141)
    SourceInfo(regex-automata/src/hybrid/search.rs:639:17-639:18)
  1: StorageDead(_135)
    SourceInfo(regex-automata/src/hybrid/search.rs:639:17-639:18)
  2: _0 = core::result::Result::<(), util::search::MatchError>::Err(move _134)
    SourceInfo(regex-automata/src/hybrid/search.rs:636:24-639:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:639:18-639:19)
      kind: drop(_134) -> [return: bb78, unwind: bb124]
  }
  preds [bb76]
  succs [bb78, bb124]

bb78
  0: StorageDead(_134)
    SourceInfo(regex-automata/src/hybrid/search.rs:639:18-639:19)
  1: StorageDead(_138)
    SourceInfo(regex-automata/src/hybrid/search.rs:639:19-639:20)
  2: StorageDead(_136)
    SourceInfo(regex-automata/src/hybrid/search.rs:639:19-639:20)
  3: StorageDead(_128)
    SourceInfo(regex-automata/src/hybrid/search.rs:643:13-643:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb105
  }
  preds [bb77]
  succs [bb105]

bb79
  0: StorageDead(_129)
    SourceInfo(regex-automata/src/hybrid/search.rs:634:35-634:36)
  1: StorageLive(_143)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  2: StorageLive(_144)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  3: _144 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _144) -> [0: bb84, otherwise: bb80]
  }
  preds [bb72]
  succs [bb80, bb84]

bb80
  0: StorageLive(_145)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_146)
    SourceInfo(regex-automata/src/hybrid/search.rs:641:31-641:47)
  2: StorageLive(_147)
    SourceInfo(regex-automata/src/hybrid/search.rs:641:31-641:34)
  3: _147 = &_11
    SourceInfo(regex-automata/src/hybrid/search.rs:641:31-641:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:641:31-641:47)
      kind: _146 = hybrid::id::LazyStateID::is_unknown(move _147) -> [return: bb81, unwind: bb124]
  }
  preds [bb79]
  succs [bb81, bb124]

bb81
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:641:31-641:47)
      kind: switchInt(move _146) -> [0: bb83, otherwise: bb82]
  }
  preds [bb80]
  succs [bb82, bb83]

bb82
  0: StorageDead(_147)
    SourceInfo(regex-automata/src/hybrid/search.rs:641:46-641:47)
  1: _145 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_146)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_145)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _143 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb85
  }
  preds [bb81]
  succs [bb85]

bb83
  0: StorageDead(_147)
    SourceInfo(regex-automata/src/hybrid/search.rs:641:46-641:47)
  1: StorageLive(_148)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _148 = core::panicking::panic(const "assertion failed: sid.is_unknown()") -> bb124
  }
  preds [bb81]
  succs [bb124]

bb84
  0: _143 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb85
  }
  preds [bb79]
  succs [bb85]

bb85
  0: StorageDead(_144)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_143)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_150)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_151)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_152)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  5: StorageLive(_153)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  6: StorageLive(_154)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  7: _154 = [const "internal error: entered unreachable code: sid being unknown is a bug"]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  8: _153 = &_154
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  9: _152 = &(*_153)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  10: StorageLive(_155)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_156)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  12: StorageLive(_157)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _157 = core::fmt::rt::Argument::<'_>::none() -> [return: bb86, unwind: bb124]
  }
  preds [bb82, bb84]
  succs [bb86, bb124]

bb86
  0: _156 = &_157
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  1: _155 = &(*_156)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _151 = core::fmt::Arguments::<'_>::new_v1::<1, 0>(move _152, move _155) -> [return: bb87, unwind: bb124]
  }
  preds [bb85]
  succs [bb87, bb124]

bb87
  0: StorageDead(_155)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_152)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _150 = core::panicking::panic_fmt(move _151) -> bb124
  }
  preds [bb86]
  succs [bb124]

bb88
  0: StorageDead(_98)
    SourceInfo(regex-automata/src/hybrid/search.rs:621:26-621:27)
  1: _96 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:644:10-644:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:621:9-644:10)
      kind: goto -> bb89
  }
  preds [bb56]
  succs [bb89]

bb89
  0: StorageDead(_97)
    SourceInfo(regex-automata/src/hybrid/search.rs:644:9-644:10)
  1: StorageDead(_96)
    SourceInfo(regex-automata/src/hybrid/search.rs:644:9-644:10)
  2: StorageLive(_158)
    SourceInfo(regex-automata/src/hybrid/search.rs:645:9-647:10)
  3: StorageLive(_159)
    SourceInfo(regex-automata/src/hybrid/search.rs:645:12-645:37)
  4: StorageLive(_160)
    SourceInfo(regex-automata/src/hybrid/search.rs:645:12-645:20)
  5: _160 = ((*_4).2: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:645:12-645:20)
  6: StorageLive(_161)
    SourceInfo(regex-automata/src/hybrid/search.rs:645:24-645:37)
  7: StorageLive(_162)
    SourceInfo(regex-automata/src/hybrid/search.rs:645:24-645:29)
  8: _162 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:645:24-645:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:645:24-645:37)
      kind: _161 = util::search::Input::<'_>::start(move _162) -> [return: bb90, unwind: bb124]
  }
  preds [bb59, bb88]
  succs [bb90, bb124]

bb90
  0: StorageDead(_162)
    SourceInfo(regex-automata/src/hybrid/search.rs:645:36-645:37)
  1: _159 = Eq(move _160, move _161)
    SourceInfo(regex-automata/src/hybrid/search.rs:645:12-645:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:645:12-645:37)
      kind: switchInt(move _159) -> [0: bb92, otherwise: bb91]
  }
  preds [bb89]
  succs [bb91, bb92]

bb91
  0: StorageDead(_161)
    SourceInfo(regex-automata/src/hybrid/search.rs:645:36-645:37)
  1: StorageDead(_160)
    SourceInfo(regex-automata/src/hybrid/search.rs:645:36-645:37)
  2: _73 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:646:13-646:18)
  3: StorageDead(_159)
    SourceInfo(regex-automata/src/hybrid/search.rs:647:9-647:10)
  4: StorageDead(_158)
    SourceInfo(regex-automata/src/hybrid/search.rs:647:9-647:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb96
  }
  preds [bb90]
  succs [bb96]

bb92
  0: StorageDead(_161)
    SourceInfo(regex-automata/src/hybrid/search.rs:645:36-645:37)
  1: StorageDead(_160)
    SourceInfo(regex-automata/src/hybrid/search.rs:645:36-645:37)
  2: _158 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:647:10-647:10)
  3: StorageDead(_159)
    SourceInfo(regex-automata/src/hybrid/search.rs:647:9-647:10)
  4: StorageDead(_158)
    SourceInfo(regex-automata/src/hybrid/search.rs:647:9-647:10)
  5: _164 = SubWithOverflow(((*_4).2: usize), const 1_usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:648:9-648:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:648:9-648:22)
      kind: assert(!move (_164.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_4).2: usize), const 1_usize) -> [success: bb93, unwind: bb124]
  }
  preds [bb90]
  succs [bb93, bb124]

bb93
  0: ((*_4).2: usize) = move (_164.0: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:648:9-648:22)
  1: StorageLive(_165)
    SourceInfo(regex-automata/src/hybrid/search.rs:649:9-649:38)
  2: StorageLive(_166)
    SourceInfo(regex-automata/src/hybrid/search.rs:649:9-649:14)
  3: _166 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:649:9-649:14)
  4: StorageLive(_167)
    SourceInfo(regex-automata/src/hybrid/search.rs:649:29-649:37)
  5: _167 = ((*_4).2: usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:649:29-649:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:649:9-649:38)
      kind: _165 = hybrid::dfa::Cache::search_update(move _166, move _167) -> [return: bb94, unwind: bb124]
  }
  preds [bb92]
  succs [bb94, bb124]

bb94
  0: StorageDead(_167)
    SourceInfo(regex-automata/src/hybrid/search.rs:649:37-649:38)
  1: StorageDead(_166)
    SourceInfo(regex-automata/src/hybrid/search.rs:649:37-649:38)
  2: StorageDead(_165)
    SourceInfo(regex-automata/src/hybrid/search.rs:649:38-649:39)
  3: _74 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:617:26-650:6)
  4: StorageDead(_75)
    SourceInfo(regex-automata/src/hybrid/search.rs:650:5-650:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:617:5-650:6)
      kind: goto -> bb42
  }
  preds [bb93]
  succs [bb42]

bb95
  0: StorageLive(_169)
    SourceInfo(regex-automata/src/hybrid/search.rs:617:5-650:6)
  1: _73 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:617:5-650:6)
  2: StorageDead(_169)
    SourceInfo(regex-automata/src/hybrid/search.rs:650:5-650:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb96
  }
  preds [bb43]
  succs [bb96]

bb96
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/hybrid/search.rs:650:5-650:6)
  1: StorageDead(_73)
    SourceInfo(regex-automata/src/hybrid/search.rs:650:5-650:6)
  2: StorageLive(_171)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:9-652:15)
  3: StorageLive(_172)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:26-652:29)
  4: _172 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:26-652:29)
  5: StorageLive(_173)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:31-652:36)
  6: _173 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:31-652:36)
  7: StorageLive(_174)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:38-652:43)
  8: _174 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:38-652:43)
  9: StorageLive(_175)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:45-652:53)
  10: StorageLive(_176)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:45-652:53)
  11: _176 = &mut _11
    SourceInfo(regex-automata/src/hybrid/search.rs:652:45-652:53)
  12: _175 = &mut (*_176)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:45-652:53)
  13: StorageLive(_177)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:55-652:69)
  14: StorageLive(_178)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:55-652:69)
  15: _178 = &mut ((*_4).0: core::option::Option<util::search::HalfMatch>)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:55-652:69)
  16: _177 = &mut (*_178)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:55-652:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:652:18-652:70)
      kind: _171 = hybrid::search::eoi_rev(move _172, move _173, move _174, move _175, move _177) -> [return: bb97, unwind: bb124]
  }
  preds [bb91, bb95]
  succs [bb97, bb124]

bb97
  0: StorageDead(_177)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:69-652:70)
  1: StorageDead(_175)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:69-652:70)
  2: StorageDead(_174)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:69-652:70)
  3: StorageDead(_173)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:69-652:70)
  4: StorageDead(_172)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:69-652:70)
  5: FakeRead(ForLet(None), _171)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:9-652:15)
  6: StorageDead(_178)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:70-652:71)
  7: StorageDead(_176)
    SourceInfo(regex-automata/src/hybrid/search.rs:652:70-652:71)
  8: ((*_4).4: bool) = const true
    SourceInfo(regex-automata/src/hybrid/search.rs:653:5-653:25)
  9: StorageLive(_179)
    SourceInfo(regex-automata/src/hybrid/search.rs:654:16-654:25)
  10: StorageLive(_180)
    SourceInfo(regex-automata/src/hybrid/search.rs:654:21-654:24)
  11: _180 = _11
    SourceInfo(regex-automata/src/hybrid/search.rs:654:21-654:24)
  12: _179 = core::option::Option::<hybrid::id::LazyStateID>::Some(move _180)
    SourceInfo(regex-automata/src/hybrid/search.rs:654:16-654:25)
  13: StorageDead(_180)
    SourceInfo(regex-automata/src/hybrid/search.rs:654:24-654:25)
  14: ((*_4).1: core::option::Option<hybrid::id::LazyStateID>) = move _179
    SourceInfo(regex-automata/src/hybrid/search.rs:654:5-654:25)
  15: StorageDead(_179)
    SourceInfo(regex-automata/src/hybrid/search.rs:654:24-654:25)
  16: StorageLive(_181)
    SourceInfo(regex-automata/src/hybrid/search.rs:655:5-661:6)
  17: StorageLive(_182)
    SourceInfo(regex-automata/src/hybrid/search.rs:655:8-655:27)
  18: StorageLive(_183)
    SourceInfo(regex-automata/src/hybrid/search.rs:655:8-655:17)
  19: _183 = &((*_4).0: core::option::Option<util::search::HalfMatch>)
    SourceInfo(regex-automata/src/hybrid/search.rs:655:8-655:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:655:8-655:27)
      kind: _182 = core::option::Option::<util::search::HalfMatch>::is_some(move _183) -> [return: bb98, unwind: bb115]
  }
  preds [bb96]
  succs [bb98, bb115]

bb98
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:655:8-655:27)
      kind: switchInt(move _182) -> [0: bb100, otherwise: bb99]
  }
  preds [bb97]
  succs [bb99, bb100]

bb99
  0: StorageDead(_183)
    SourceInfo(regex-automata/src/hybrid/search.rs:655:26-655:27)
  1: StorageLive(_184)
    SourceInfo(regex-automata/src/hybrid/search.rs:660:34-660:41)
  2: _184 = core::option::Option::<usize>::Some(const 1_usize)
    SourceInfo(regex-automata/src/hybrid/search.rs:660:34-660:41)
  3: ((*_4).3: core::option::Option<usize>) = move _184
    SourceInfo(regex-automata/src/hybrid/search.rs:660:9-660:41)
  4: StorageDead(_184)
    SourceInfo(regex-automata/src/hybrid/search.rs:660:40-660:41)
  5: _181 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:655:28-661:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:655:5-661:6)
      kind: goto -> bb101
  }
  preds [bb98]
  succs [bb101]

bb100
  0: StorageDead(_183)
    SourceInfo(regex-automata/src/hybrid/search.rs:655:26-655:27)
  1: _181 = const ()
    SourceInfo(regex-automata/src/hybrid/search.rs:661:6-661:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:655:5-661:6)
      kind: goto -> bb101
  }
  preds [bb98]
  succs [bb101]

bb101
  0: StorageDead(_182)
    SourceInfo(regex-automata/src/hybrid/search.rs:661:5-661:6)
  1: StorageDead(_181)
    SourceInfo(regex-automata/src/hybrid/search.rs:661:5-661:6)
  2: StorageLive(_185)
    SourceInfo(regex-automata/src/hybrid/search.rs:662:5-662:39)
  3: StorageLive(_186)
    SourceInfo(regex-automata/src/hybrid/search.rs:662:5-662:10)
  4: _186 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:662:5-662:10)
  5: StorageLive(_187)
    SourceInfo(regex-automata/src/hybrid/search.rs:662:25-662:38)
  6: StorageLive(_188)
    SourceInfo(regex-automata/src/hybrid/search.rs:662:25-662:30)
  7: _188 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:662:25-662:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:662:25-662:38)
      kind: _187 = util::search::Input::<'_>::start(move _188) -> [return: bb102, unwind: bb115]
  }
  preds [bb99, bb100]
  succs [bb102, bb115]

bb102
  0: StorageDead(_188)
    SourceInfo(regex-automata/src/hybrid/search.rs:662:37-662:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:662:5-662:39)
      kind: _185 = hybrid::dfa::Cache::search_finish(move _186, move _187) -> [return: bb103, unwind: bb115]
  }
  preds [bb101]
  succs [bb103, bb115]

bb103
  0: StorageDead(_187)
    SourceInfo(regex-automata/src/hybrid/search.rs:662:38-662:39)
  1: StorageDead(_186)
    SourceInfo(regex-automata/src/hybrid/search.rs:662:38-662:39)
  2: StorageDead(_185)
    SourceInfo(regex-automata/src/hybrid/search.rs:662:39-662:40)
  3: _0 = move _171
    SourceInfo(regex-automata/src/hybrid/search.rs:663:5-663:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:664:1-664:2)
      kind: drop(_171) -> [return: bb104, unwind: bb124]
  }
  preds [bb102]
  succs [bb104, bb124]

bb104
  0: StorageDead(_171)
    SourceInfo(regex-automata/src/hybrid/search.rs:664:1-664:2)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/search.rs:664:1-664:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:664:2-664:2)
      kind: goto -> bb114
  }
  preds [bb103]
  succs [bb114]

bb105
  0: StorageDead(_121)
    SourceInfo(regex-automata/src/hybrid/search.rs:643:13-643:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb106
  }
  preds [bb70, bb78]
  succs [bb106]

bb106
  0: StorageDead(_103)
    SourceInfo(regex-automata/src/hybrid/search.rs:643:13-643:14)
  1: StorageDead(_101)
    SourceInfo(regex-automata/src/hybrid/search.rs:643:13-643:14)
  2: StorageDead(_97)
    SourceInfo(regex-automata/src/hybrid/search.rs:644:9-644:10)
  3: StorageDead(_96)
    SourceInfo(regex-automata/src/hybrid/search.rs:644:9-644:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb109
  }
  preds [bb66, bb105]
  succs [bb109]

bb107
  0: StorageDead(_92)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
  1: StorageDead(_76)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:620:45-620:46)
      kind: drop(_77) -> [return: bb108, unwind: bb124]
  }
  preds [bb54]
  succs [bb108, bb124]

bb108
  0: StorageDead(_86)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:45-620:46)
  1: StorageDead(_84)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:45-620:46)
  2: StorageDead(_77)
    SourceInfo(regex-automata/src/hybrid/search.rs:620:45-620:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb109
  }
  preds [bb107]
  succs [bb109]

bb109
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/hybrid/search.rs:650:5-650:6)
  1: StorageDead(_73)
    SourceInfo(regex-automata/src/hybrid/search.rs:650:5-650:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb113
  }
  preds [bb106, bb108]
  succs [bb113]

bb110
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/hybrid/search.rs:614:9-614:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb113
  }
  preds [bb29, bb33]
  succs [bb113]

bb111
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:50-579:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:579:51-579:52)
      kind: drop(_14) -> [return: bb112, unwind: bb124]
  }
  preds [bb14]
  succs [bb112, bb124]

bb112
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/search.rs:579:51-579:52)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/search.rs:587:9-587:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb113
  }
  preds [bb111]
  succs [bb113]

bb113
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/search.rs:664:1-664:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb114
  }
  preds [bb109, bb110, bb112]
  succs [bb114]

bb114
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:664:2-664:2)
      kind: return
  }
  preds [bb2, bb104, bb113]
  succs []

bb115
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:664:1-664:2)
      kind: drop(_171) -> [return: bb124, unwind terminate(cleanup)]
  }
  preds [bb97, bb101, bb102]
  succs [bb124]

bb116
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
      kind: drop(_94) -> [return: bb117, unwind terminate(cleanup)]
  }
  preds [bb53]
  succs [bb117]

bb117
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
      kind: drop(_92) -> [return: bb118, unwind terminate(cleanup)]
  }
  preds [bb116]
  succs [bb118]

bb118
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:620:45-620:46)
      kind: drop(_77) -> [return: bb124, unwind terminate(cleanup)]
  }
  preds [bb54, bb117]
  succs [bb124]

bb119
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:620:44-620:45)
      kind: drop(_78) -> [return: bb124, unwind terminate(cleanup)]
  }
  preds [bb48]
  succs [bb124]

bb120
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:579:50-579:51)
      kind: drop(_22) -> [return: bb121, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb121]

bb121
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:579:50-579:51)
      kind: drop(_20) -> [return: bb122, unwind terminate(cleanup)]
  }
  preds [bb120]
  succs [bb122]

bb122
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:579:51-579:52)
      kind: drop(_14) -> [return: bb124, unwind terminate(cleanup)]
  }
  preds [bb14, bb121]
  succs [bb124]

bb123
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:579:50-579:51)
      kind: drop(_15) -> [return: bb124, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb124]

bb124
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:567:1-664:2)
      kind: resume
  }
  preds [bb0, bb7, bb12, bb15, bb16, bb19, bb20, bb24, bb26, bb27, bb28, bb34, bb37, bb40, bb42, bb44, bb45, bb46, bb47, bb52, bb55, bb57, bb60, bb62, bb63, bb64, bb65, bb67, bb69, bb71, bb73, bb74, bb75, bb76, bb77, bb80, bb83, bb85, bb86, bb87, bb89, bb92, bb93, bb96, bb103, bb107, bb111, bb115, bb118, bb119, bb122, bb123]
  succs []

