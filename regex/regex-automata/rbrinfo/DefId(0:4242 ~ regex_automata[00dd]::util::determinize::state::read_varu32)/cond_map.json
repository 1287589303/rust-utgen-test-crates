{
  "regex-automata/src/util/determinize/state.rs:782:50:782:55": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "i + 1",
          "lhs": "i",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/determinize/state.rs:784:14:784:42": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(u32::from(b) & 0b0111_1111)",
          "lhs": "u32::from(b)",
          "rhs": "0b0111_1111",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/determinize/state.rs:781:12:781:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "b < 0b1000_0000",
          "lhs": "b",
          "rhs": "0b1000_0000",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/determinize/state.rs:782:21:782:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "n | (u32::from(b) << shift)",
          "lhs": "n",
          "rhs": "(u32::from(b) << shift)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/util/determinize/state.rs:780:20:780:43": [
    {
      "For": {
        "iter_var": "(i, &b)",
        "iter_range": "data.iter().enumerate()"
      }
    }
  ],
  "regex-automata/src/util/determinize/state.rs:782:25:782:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(u32::from(b) << shift)",
          "lhs": "u32::from(b)",
          "rhs": "shift",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/util/determinize/state.rs:784:14:784:51": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(u32::from(b) & 0b0111_1111) << shift",
          "lhs": "(u32::from(b) & 0b0111_1111)",
          "rhs": "shift",
          "cmp_with_int": false
        }
      }
    }
  ]
}