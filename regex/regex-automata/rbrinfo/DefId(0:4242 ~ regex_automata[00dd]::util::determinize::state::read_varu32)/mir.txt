bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/determinize/state.rs:778:9-778:14)
  1: _2 = const 0_u32
    SourceInfo(regex-automata/src/util/determinize/state.rs:778:22-778:23)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/util/determinize/state.rs:778:9-778:14)
  3: AscribeUserType(_2, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(regex-automata/src/util/determinize/state.rs:778:16-778:19)
  4: StorageLive(_3)
    SourceInfo(regex-automata/src/util/determinize/state.rs:779:9-779:18)
  5: _3 = const 0_u32
    SourceInfo(regex-automata/src/util/determinize/state.rs:779:26-779:27)
  6: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/determinize/state.rs:779:9-779:18)
  7: AscribeUserType(_3, o, UserTypeProjection { base: UserType(3), projs: [] })
    SourceInfo(regex-automata/src/util/determinize/state.rs:779:20-779:23)
  8: StorageLive(_4)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:5-786:6)
  9: StorageLive(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
  10: StorageLive(_6)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
  11: StorageLive(_7)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:31)
  12: StorageLive(_8)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:24)
  13: _8 = &(*_1)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:31)
      kind: _7 = core::slice::<impl [u8]>::iter(move _8) -> [return: bb1, unwind: bb20]
  }
  preds []
  succs [bb1, bb20]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:30-780:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
      kind: _6 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::enumerate(move _7) -> [return: bb2, unwind: bb20]
  }
  preds [bb0]
  succs [bb2, bb20]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:42-780:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
      kind: _5 = <core::iter::Enumerate<core::slice::Iter<'_, u8>> as core::iter::IntoIterator>::into_iter(move _6) -> [return: bb3, unwind: bb20]
  }
  preds [bb1]
  succs [bb3, bb20]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:42-780:43)
  1: PlaceMention(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
  3: _9 = move _5
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:780:5-786:6)
      kind: goto -> bb4
  }
  preds [bb2]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:780:5-786:6)
      kind: falseUnwind -> [real: bb5, unwind: bb20]
  }
  preds [bb3, bb18]
  succs [bb5, bb20]

bb5
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
  1: StorageLive(_12)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
  4: _14 = &mut _9
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
  5: _13 = &mut (*_14)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
      kind: _12 = <core::iter::Enumerate<core::slice::Iter<'_, u8>> as core::iter::Iterator>::next(move _13) -> [return: bb6, unwind: bb20]
  }
  preds [bb4]
  succs [bb6, bb20]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:42-780:43)
  1: PlaceMention(_12)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
  2: _15 = discriminant(_12)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
      kind: switchInt(move _15) -> [0: bb8, 1: bb9, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _12)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:780:20-780:43)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:780:5-786:6)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_17)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:10-780:11)
  1: _17 = (((_12 as Some).0: (usize, &u8)).0: usize)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:10-780:11)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:14-780:15)
  3: _18 = (*(((_12 as Some).0: (usize, &u8)).1: &u8))
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:14-780:15)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/util/determinize/state.rs:781:9-783:10)
  5: StorageLive(_20)
    SourceInfo(regex-automata/src/util/determinize/state.rs:781:12-781:27)
  6: StorageLive(_21)
    SourceInfo(regex-automata/src/util/determinize/state.rs:781:12-781:13)
  7: _21 = _18
    SourceInfo(regex-automata/src/util/determinize/state.rs:781:12-781:13)
  8: _20 = Lt(move _21, const 128_u8)
    SourceInfo(regex-automata/src/util/determinize/state.rs:781:12-781:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:781:12-781:27)
      kind: switchInt(move _20) -> [0: bb15, otherwise: bb11]
  }
  preds [bb6, bb8]
  succs [bb11, bb15]

bb10
  0: _4 = const ()
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:5-786:6)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  5: StorageDead(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  6: StorageDead(_4)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  7: _0 = (const 0_u32, const 0_usize)
    SourceInfo(regex-automata/src/util/determinize/state.rs:787:5-787:11)
  8: StorageDead(_3)
    SourceInfo(regex-automata/src/util/determinize/state.rs:788:1-788:2)
  9: StorageDead(_2)
    SourceInfo(regex-automata/src/util/determinize/state.rs:788:1-788:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:788:2-788:2)
      kind: goto -> bb19
  }
  preds [bb8]
  succs [bb19]

bb11
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/util/determinize/state.rs:781:26-781:27)
  1: StorageLive(_23)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:21-782:48)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:21-782:22)
  3: _24 = _2
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:21-782:22)
  4: StorageLive(_25)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:25-782:48)
  5: StorageLive(_26)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:26-782:38)
  6: StorageLive(_27)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:36-782:37)
  7: _27 = _18
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:36-782:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:782:26-782:38)
      kind: _26 = <u32 as core::convert::From<u8>>::from(move _27) -> [return: bb12, unwind: bb20]
  }
  preds [bb9]
  succs [bb12, bb20]

bb12
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:37-782:38)
  1: StorageLive(_28)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:42-782:47)
  2: _28 = _3
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:42-782:47)
  3: _29 = Lt(_28, const 32_u32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:25-782:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:782:25-782:48)
      kind: assert(move _29, "attempt to shift left by `{}`, which would overflow", _28) -> [success: bb13, unwind: bb20]
  }
  preds [bb11]
  succs [bb13, bb20]

bb13
  0: _25 = Shl(move _26, move _28)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:25-782:48)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:47-782:48)
  2: StorageDead(_26)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:47-782:48)
  3: _23 = BitOr(move _24, move _25)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:21-782:48)
  4: StorageDead(_25)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:47-782:48)
  5: StorageDead(_24)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:47-782:48)
  6: StorageLive(_30)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:50-782:55)
  7: StorageLive(_31)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:50-782:51)
  8: _31 = _17
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:50-782:51)
  9: _32 = AddWithOverflow(_31, const 1_usize)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:50-782:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:782:50-782:55)
      kind: assert(!move (_32.1: bool), "attempt to compute `{} + {}`, which would overflow", move _31, const 1_usize) -> [success: bb14, unwind: bb20]
  }
  preds [bb12]
  succs [bb14, bb20]

bb14
  0: _30 = move (_32.0: usize)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:50-782:55)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:54-782:55)
  2: _0 = (move _23, move _30)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:20-782:56)
  3: StorageDead(_30)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:55-782:56)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/util/determinize/state.rs:782:55-782:56)
  5: StorageDead(_20)
    SourceInfo(regex-automata/src/util/determinize/state.rs:783:9-783:10)
  6: StorageDead(_19)
    SourceInfo(regex-automata/src/util/determinize/state.rs:783:9-783:10)
  7: StorageDead(_18)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  8: StorageDead(_17)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  9: StorageDead(_14)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  10: StorageDead(_12)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  11: StorageDead(_11)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  12: StorageDead(_9)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  13: StorageDead(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  14: StorageDead(_4)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  15: StorageDead(_3)
    SourceInfo(regex-automata/src/util/determinize/state.rs:788:1-788:2)
  16: StorageDead(_2)
    SourceInfo(regex-automata/src/util/determinize/state.rs:788:1-788:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:788:2-788:2)
      kind: goto -> bb19
  }
  preds [bb13]
  succs [bb19]

bb15
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/util/determinize/state.rs:781:26-781:27)
  1: _19 = const ()
    SourceInfo(regex-automata/src/util/determinize/state.rs:783:10-783:10)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/util/determinize/state.rs:783:9-783:10)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/util/determinize/state.rs:783:9-783:10)
  4: StorageLive(_33)
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:14-784:51)
  5: StorageLive(_34)
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:14-784:42)
  6: StorageLive(_35)
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:15-784:27)
  7: StorageLive(_36)
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:25-784:26)
  8: _36 = _18
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:25-784:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:784:15-784:27)
      kind: _35 = <u32 as core::convert::From<u8>>::from(move _36) -> [return: bb16, unwind: bb20]
  }
  preds [bb9]
  succs [bb16, bb20]

bb16
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:26-784:27)
  1: _34 = BitAnd(move _35, const 127_u32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:14-784:42)
  2: StorageDead(_35)
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:41-784:42)
  3: StorageLive(_37)
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:46-784:51)
  4: _37 = _3
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:46-784:51)
  5: _38 = Lt(_37, const 32_u32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:14-784:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:784:14-784:51)
      kind: assert(move _38, "attempt to shift left by `{}`, which would overflow", _37) -> [success: bb17, unwind: bb20]
  }
  preds [bb15]
  succs [bb17, bb20]

bb17
  0: _33 = Shl(move _34, move _37)
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:14-784:51)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:50-784:51)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:50-784:51)
  3: _2 = BitOr(_2, move _33)
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:9-784:51)
  4: StorageDead(_33)
    SourceInfo(regex-automata/src/util/determinize/state.rs:784:50-784:51)
  5: _39 = AddWithOverflow(_3, const 7_u32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:785:9-785:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:785:9-785:19)
      kind: assert(!move (_39.1: bool), "attempt to compute `{} + {}`, which would overflow", _3, const 7_u32) -> [success: bb18, unwind: bb20]
  }
  preds [bb16]
  succs [bb18, bb20]

bb18
  0: _3 = move (_39.0: u32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:785:9-785:19)
  1: _11 = const ()
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:44-786:6)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  3: StorageDead(_17)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  4: StorageDead(_14)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  5: StorageDead(_12)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  6: StorageDead(_11)
    SourceInfo(regex-automata/src/util/determinize/state.rs:786:5-786:6)
  7: _10 = const ()
    SourceInfo(regex-automata/src/util/determinize/state.rs:780:5-786:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:780:5-786:6)
      kind: goto -> bb4
  }
  preds [bb17]
  succs [bb4]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:788:2-788:2)
      kind: return
  }
  preds [bb10, bb14]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:774:1-788:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb5, bb11, bb12, bb13, bb15, bb16, bb17]
  succs []

