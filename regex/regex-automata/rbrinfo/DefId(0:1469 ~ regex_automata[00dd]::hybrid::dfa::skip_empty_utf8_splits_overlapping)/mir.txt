bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4259:9-4259:15)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4259:24-4259:41)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4259:24-4259:29)
  3: _6 = &(*_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4259:24-4259:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4259:24-4259:41)
      kind: _5 = hybrid::dfa::OverlappingState::get_match(move _6) -> [return: bb1, unwind: bb43]
  }
  preds []
  succs [bb1, bb43]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4259:40-4259:41)
  1: PlaceMention(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4259:24-4259:41)
  2: _7 = discriminant(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4259:24-4259:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4259:18-4259:41)
      kind: switchInt(move _7) -> [0: bb3, 1: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4259:24-4259:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4259:24-4259:41)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4260:9-4260:13)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4261:14-4261:16)
  1: _10 = ((_5 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4261:14-4261:16)
  2: _4 = _10
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4261:21-4261:23)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4261:22-4261:23)
  4: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4259:9-4259:15)
  5: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4262:6-4262:7)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:5-4268:6)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:8-4263:42)
  8: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:8-4263:28)
  9: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:8-4263:28)
  10: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:8-4263:13)
  11: _15 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:8-4263:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:8-4263:28)
      kind: _14 = util::search::Input::<'_>::get_anchored(move _15) -> [return: bb6, unwind: bb43]
  }
  preds [bb1, bb3]
  succs [bb6, bb43]

bb5
  0: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4260:27-4260:29)
  1: _9 = ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4260:27-4260:29)
  2: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4260:24-4260:30)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4260:29-4260:30)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4262:6-4262:7)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb37
  }
  preds [bb3]
  succs [bb37]

bb6
  0: _13 = &_14
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:8-4263:28)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:27-4263:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:8-4263:42)
      kind: _12 = util::search::Anchored::is_anchored(move _13) -> [return: bb7, unwind: bb43]
  }
  preds [bb4]
  succs [bb7, bb43]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:8-4263:42)
      kind: switchInt(move _12) -> [0: bb14, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb14]

bb8
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:41-4263:42)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:41-4263:42)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:9-4266:10)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:13-4264:48)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:13-4264:18)
  5: _19 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:13-4264:18)
  6: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:36-4264:47)
  7: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:36-4264:38)
  8: _21 = &_4
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:36-4264:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:36-4264:47)
      kind: _20 = util::search::HalfMatch::offset(move _21) -> [return: bb9, unwind: bb43]
  }
  preds [bb7]
  succs [bb9, bb43]

bb9
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:46-4264:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:13-4264:48)
      kind: _18 = util::search::Input::<'_>::is_char_boundary(move _19, move _20) -> [return: bb10, unwind: bb43]
  }
  preds [bb8]
  succs [bb10, bb43]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:13-4264:48)
      kind: switchInt(move _18) -> [0: bb12, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12]

bb11
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:47-4264:48)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:47-4264:48)
  2: _17 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4266:10-4266:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:9-4266:10)
      kind: goto -> bb13
  }
  preds [bb10]
  succs [bb13]

bb12
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:47-4264:48)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:47-4264:48)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4265:25-4265:29)
  3: _22 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4265:25-4265:29)
  4: ((*_2).0: core::option::Option<util::search::HalfMatch>) = move _22
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4265:13-4265:29)
  5: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4265:28-4265:29)
  6: _17 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:49-4266:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4264:9-4266:10)
      kind: goto -> bb13
  }
  preds [bb10]
  succs [bb13]

bb13
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4266:9-4266:10)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4266:9-4266:10)
  2: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4267:19-4267:21)
  3: _23 = ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4267:19-4267:21)
  4: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4267:16-4267:22)
  5: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4267:21-4267:22)
  6: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4268:5-4268:6)
  7: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4268:5-4268:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb37
  }
  preds [bb11, bb12]
  succs [bb37]

bb14
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:41-4263:42)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4263:41-4263:42)
  2: _11 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4268:6-4268:6)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4268:5-4268:6)
  4: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4268:5-4268:6)
  5: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:5-4275:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:5-4275:6)
      kind: goto -> bb15
  }
  preds [bb7]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:5-4275:6)
      kind: falseUnwind -> [real: bb16, unwind: bb43]
  }
  preds [bb14, bb32]
  succs [bb16, bb43]

bb16
  0: StorageLive(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:12-4269:47)
  1: StorageLive(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:12-4269:17)
  2: _27 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:12-4269:17)
  3: StorageLive(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:35-4269:46)
  4: StorageLive(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:35-4269:37)
  5: _29 = &_4
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:35-4269:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:35-4269:46)
      kind: _28 = util::search::HalfMatch::offset(move _29) -> [return: bb17, unwind: bb43]
  }
  preds [bb15]
  succs [bb17, bb43]

bb17
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:45-4269:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:12-4269:47)
      kind: _26 = util::search::Input::<'_>::is_char_boundary(move _27, move _28) -> [return: bb18, unwind: bb43]
  }
  preds [bb16]
  succs [bb18, bb43]

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:12-4269:47)
      kind: switchInt(move _26) -> [0: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20]

bb19
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:46-4269:47)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:46-4269:47)
  2: StorageLive(_50)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:5-4275:6)
  3: _24 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:5-4275:6)
  4: StorageDead(_50)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4275:5-4275:6)
  5: StorageDead(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4275:5-4275:6)
  6: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4275:5-4275:6)
  7: StorageLive(_52)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4276:8-4276:10)
  8: _52 = ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4276:8-4276:10)
  9: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _52)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4276:5-4276:11)
  10: StorageDead(_52)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4276:10-4276:11)
  11: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4277:1-4277:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4277:1-4277:2)
      kind: drop(_3) -> [return: bb38, unwind: bb44]
  }
  preds [bb18]
  succs [bb38, bb44]

bb20
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:46-4269:47)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:46-4269:47)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:30)
  3: StorageLive(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:30)
  4: StorageLive(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:29)
  5: StorageLive(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:15)
  6: _33 = &mut _3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:15)
  7: StorageLive(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:29)
  8: StorageLive(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:16-4270:21)
  9: _35 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:16-4270:21)
  10: StorageLive(_36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:23-4270:28)
  11: _36 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:23-4270:28)
  12: _34 = (move _35, move _36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:29)
      kind: _32 = <F as core::ops::FnMut<(&util::search::Input<'_>, &mut hybrid::dfa::OverlappingState)>>::call_mut(move _33, move _34) -> [return: bb21, unwind: bb43]
  }
  preds [bb18]
  succs [bb21, bb43]

bb21
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:28-4270:29)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:28-4270:29)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:28-4270:29)
  3: StorageDead(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:28-4270:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:30)
      kind: _31 = <core::result::Result<(), util::search::MatchError> as core::ops::Try>::branch(move _32) -> [return: bb22, unwind: bb42]
  }
  preds [bb20]
  succs [bb22, bb42]

bb22
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:29-4270:30)
  1: PlaceMention(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:30)
  2: _37 = discriminant(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:30)
      kind: switchInt(move _37) -> [0: bb25, 1: bb24, otherwise: bb23]
  }
  preds [bb21]
  succs [bb23, bb24, bb25]

bb23
  0: FakeRead(ForMatchedPlace(None), _31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:30)
      kind: unreachable
  }
  preds [bb22]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:29-4270:30)
      kind: falseEdge -> [real: bb26, imaginary: bb25]
  }
  preds [bb22]
  succs [bb25, bb26]

bb25
  0: StorageLive(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:30)
  1: _41 = ((_31 as Continue).0: ())
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:30)
  2: _30 = _41
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:30)
  3: StorageDead(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:29-4270:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:30-4270:31)
      kind: drop(_31) -> [return: bb28, unwind: bb43]
  }
  preds [bb22, bb24]
  succs [bb28, bb43]

bb26
  0: StorageLive(_38)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:29-4270:30)
  1: _38 = move ((_31 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:29-4270:30)
  2: StorageLive(_40)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:29-4270:30)
  3: _40 = move _38
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:29-4270:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:9-4270:30)
      kind: _0 = <core::result::Result<(), util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _40) -> [return: bb27, unwind: bb39]
  }
  preds [bb24]
  succs [bb27, bb39]

bb27
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:29-4270:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:29-4270:30)
      kind: drop(_38) -> [return: bb34, unwind: bb41]
  }
  preds [bb26]
  succs [bb34, bb41]

bb28
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:30-4270:31)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:30-4270:31)
  2: StorageLive(_42)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4271:14-4274:10)
  3: StorageLive(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4271:20-4271:37)
  4: StorageLive(_44)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4271:20-4271:25)
  5: _44 = &(*_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4271:20-4271:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4271:20-4271:37)
      kind: _43 = hybrid::dfa::OverlappingState::get_match(move _44) -> [return: bb29, unwind: bb43]
  }
  preds [bb25]
  succs [bb29, bb43]

bb29
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4271:36-4271:37)
  1: PlaceMention(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4271:20-4271:37)
  2: _45 = discriminant(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4271:20-4271:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4271:14-4271:37)
      kind: switchInt(move _45) -> [0: bb31, 1: bb32, otherwise: bb30]
  }
  preds [bb28]
  succs [bb30, bb31, bb32]

bb30
  0: FakeRead(ForMatchedPlace(None), _43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4271:20-4271:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4271:20-4271:37)
      kind: unreachable
  }
  preds [bb29]
  succs []

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4272:13-4272:17)
      kind: falseEdge -> [real: bb33, imaginary: bb32]
  }
  preds [bb29]
  succs [bb32, bb33]

bb32
  0: StorageLive(_48)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4273:18-4273:20)
  1: _48 = ((_43 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4273:18-4273:20)
  2: _42 = _48
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4273:25-4273:27)
  3: StorageDead(_48)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4273:26-4273:27)
  4: _4 = move _42
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4271:9-4274:10)
  5: StorageDead(_42)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4274:9-4274:10)
  6: StorageDead(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4274:10-4274:11)
  7: _25 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:48-4275:6)
  8: StorageDead(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4275:5-4275:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4269:5-4275:6)
      kind: goto -> bb15
  }
  preds [bb29, bb31]
  succs [bb15]

bb33
  0: StorageLive(_47)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4272:31-4272:33)
  1: _47 = ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4272:31-4272:33)
  2: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _47)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4272:28-4272:34)
  3: StorageDead(_47)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4272:33-4272:34)
  4: StorageDead(_42)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4274:9-4274:10)
  5: StorageDead(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4274:10-4274:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb36
  }
  preds [bb31]
  succs [bb36]

bb34
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:29-4270:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:30-4270:31)
      kind: drop(_31) -> [return: bb35, unwind: bb43]
  }
  preds [bb27]
  succs [bb35, bb43]

bb35
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:30-4270:31)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:30-4270:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb36
  }
  preds [bb34]
  succs [bb36]

bb36
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4275:5-4275:6)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4275:5-4275:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb37
  }
  preds [bb33, bb35]
  succs [bb37]

bb37
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4277:1-4277:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4277:1-4277:2)
      kind: drop(_3) -> [return: bb38, unwind: bb44]
  }
  preds [bb5, bb13, bb36]
  succs [bb38, bb44]

bb38
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4277:2-4277:2)
      kind: return
  }
  preds [bb19, bb37]
  succs []

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:29-4270:30)
      kind: drop(_40) -> [return: bb40, unwind terminate(cleanup)]
  }
  preds [bb26]
  succs [bb40]

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:29-4270:30)
      kind: drop(_38) -> [return: bb41, unwind terminate(cleanup)]
  }
  preds [bb39]
  succs [bb41]

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:30-4270:31)
      kind: drop(_31) -> [return: bb43, unwind terminate(cleanup)]
  }
  preds [bb27, bb40]
  succs [bb43]

bb42
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4270:29-4270:30)
      kind: drop(_32) -> [return: bb43, unwind terminate(cleanup)]
  }
  preds [bb21]
  succs [bb43]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4277:1-4277:2)
      kind: drop(_3) -> [return: bb44, unwind terminate(cleanup)]
  }
  preds [bb0, bb4, bb6, bb8, bb9, bb15, bb16, bb17, bb20, bb25, bb28, bb34, bb41, bb42]
  succs [bb44]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4245:1-4277:2)
      kind: resume
  }
  preds [bb19, bb37, bb43]
  succs []

