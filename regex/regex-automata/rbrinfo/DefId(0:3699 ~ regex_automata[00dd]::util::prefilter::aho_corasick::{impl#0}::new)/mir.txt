bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:35:17-35:30)
  1: PlaceMention(_1)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:35:39-35:43)
  2: _4 = discriminant(_1)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:35:39-35:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:35:33-35:43)
      kind: switchInt(move _4) -> [0: bb2, 1: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb2]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:35:39-35:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:35:39-35:43)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  0: _3 = aho_corasick::MatchKind::LeftmostFirst
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:37:21-37:59)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:35:17-35:30)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:45:17-45:24)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:45:30-45:50)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:45:30-45:43)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:45:30-45:37)
  6: _8 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:45:30-45:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:45:30-45:43)
      kind: _7 = core::slice::<impl [B]>::len(move _8) -> [return: bb3, unwind: bb27]
  }
  preds [bb0, bb0]
  succs [bb3, bb27]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:45:42-45:43)
  1: _6 = Le(move _7, const 500_usize)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:45:30-45:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:45:30-45:50)
      kind: switchInt(move _6) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:45:49-45:50)
  1: _5 = aho_corasick::AhoCorasickKind::DFA
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:46:17-46:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:45:27-49:14)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:45:49-45:50)
  1: _5 = aho_corasick::AhoCorasickKind::ContiguousNFA
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:48:17-48:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:45:27-49:14)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb6
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:49:13-49:14)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:45:17-45:24)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:17-50:23)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-68:34)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-68:34)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-53:59)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-53:59)
  7: StorageLive(_14)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-52:43)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-52:43)
  9: StorageLive(_16)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-51:37)
  10: StorageLive(_17)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-51:37)
  11: StorageLive(_18)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-50:62)
  12: StorageLive(_19)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-50:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-50:62)
      kind: _19 = aho_corasick::AhoCorasick::builder() -> [return: bb7, unwind: bb27]
  }
  preds [bb4, bb5]
  succs [bb7, bb27]

bb7
  0: _18 = &mut _19
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-50:62)
  1: StorageLive(_20)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:51:23-51:36)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:51:28-51:35)
  3: _21 = _5
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:51:28-51:35)
  4: _20 = core::option::Option::<aho_corasick::AhoCorasickKind>::Some(move _21)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:51:23-51:36)
  5: StorageDead(_21)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:51:35-51:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-51:37)
      kind: _17 = aho_corasick::AhoCorasickBuilder::kind(move _18, move _20) -> [return: bb8, unwind: bb27]
  }
  preds [bb6]
  succs [bb8, bb27]

bb8
  0: _16 = &mut (*_17)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-51:37)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:51:36-51:37)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:51:36-51:37)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:52:29-52:42)
  4: _22 = _3
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:52:29-52:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-52:43)
      kind: _15 = aho_corasick::AhoCorasickBuilder::match_kind(move _16, move _22) -> [return: bb9, unwind: bb27]
  }
  preds [bb7]
  succs [bb9, bb27]

bb9
  0: _14 = &mut (*_15)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-52:43)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:52:42-52:43)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:52:42-52:43)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:53:29-53:58)
  4: _23 = aho_corasick::StartKind::Both
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:53:29-53:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-53:59)
      kind: _13 = aho_corasick::AhoCorasickBuilder::start_kind(move _14, move _23) -> [return: bb10, unwind: bb27]
  }
  preds [bb8]
  succs [bb10, bb27]

bb10
  0: _12 = &mut (*_13)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-53:59)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:53:58-53:59)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:53:58-53:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-68:34)
      kind: _11 = aho_corasick::AhoCorasickBuilder::prefilter(move _12, const false) -> [return: bb11, unwind: bb27]
  }
  preds [bb9]
  succs [bb11, bb27]

bb11
  0: _10 = &(*_11)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-68:34)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:68:33-68:34)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:69:24-69:31)
  3: _24 = _2
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:69:24-69:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:26-69:32)
      kind: _9 = aho_corasick::AhoCorasickBuilder::build::<&[B], &B>(move _10, move _24) -> [return: bb12, unwind: bb27]
  }
  preds [bb10]
  succs [bb12, bb27]

bb12
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:69:31-69:32)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:69:31-69:32)
  2: FakeRead(ForLet(None), _9)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:50:17-50:23)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:69:32-69:33)
  4: StorageDead(_17)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:69:32-69:33)
  5: StorageDead(_15)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:69:32-69:33)
  6: StorageDead(_13)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:69:32-69:33)
  7: StorageDead(_11)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:69:32-69:33)
  8: StorageLive(_25)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:70:17-70:19)
  9: PlaceMention(_9)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:70:28-70:34)
  10: _26 = discriminant(_9)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:70:28-70:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:70:22-70:34)
      kind: switchInt(move _26) -> [0: bb14, 1: bb15, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _9)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:70:28-70:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:70:28-70:34)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:71:17-71:23)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:72:21-72:25)
  1: _28 = move ((_9 as Err).0: aho_corasick::BuildError)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:72:21-72:25)
  2: _0 = core::option::Option::<util::prefilter::aho_corasick::AhoCorasick>::None
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:74:28-74:32)
  3: StorageDead(_28)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:75:17-75:18)
  4: StorageDead(_25)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:78:9-78:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:78:9-78:10)
      kind: drop(_9) -> [return: bb22, unwind: bb27]
  }
  preds [bb12, bb14]
  succs [bb22, bb27]

bb16
  0: StorageLive(_27)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:71:20-71:22)
  1: _27 = move ((_9 as Ok).0: aho_corasick::AhoCorasick)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:71:20-71:22)
  2: _25 = move _27
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:71:27-71:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:71:28-71:29)
      kind: drop(_27) -> [return: bb17, unwind: bb26]
  }
  preds [bb14]
  succs [bb17, bb26]

bb17
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:71:28-71:29)
  1: FakeRead(ForLet(None), _25)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:70:17-70:19)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:77:18-77:36)
  3: StorageLive(_31)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:77:32-77:34)
  4: _31 = move _25
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:77:32-77:34)
  5: _30 = util::prefilter::aho_corasick::AhoCorasick { ac: move _31 }
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:77:18-77:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:77:35-77:36)
      kind: drop(_31) -> [return: bb18, unwind: bb24]
  }
  preds [bb16]
  succs [bb18, bb24]

bb18
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:77:35-77:36)
  1: _0 = core::option::Option::<util::prefilter::aho_corasick::AhoCorasick>::Some(move _30)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:77:13-77:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:77:36-77:37)
      kind: drop(_30) -> [return: bb19, unwind: bb25]
  }
  preds [bb17]
  succs [bb19, bb25]

bb19
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:77:36-77:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:78:9-78:10)
      kind: drop(_25) -> [return: bb20, unwind: bb26]
  }
  preds [bb18]
  succs [bb20, bb26]

bb20
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:78:9-78:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:78:9-78:10)
      kind: drop(_9) -> [return: bb21, unwind: bb27]
  }
  preds [bb19]
  succs [bb21, bb27]

bb21
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:78:9-78:10)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:78:9-78:10)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:78:9-78:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:79:6-79:6)
      kind: goto -> bb23
  }
  preds [bb20]
  succs [bb23]

bb22
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:78:9-78:10)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:78:9-78:10)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:78:9-78:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:79:6-79:6)
      kind: goto -> bb23
  }
  preds [bb15]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:79:6-79:6)
      kind: return
  }
  preds [bb21, bb22]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:77:36-77:37)
      kind: drop(_30) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:78:9-78:10)
      kind: drop(_25) -> [return: bb26, unwind terminate(cleanup)]
  }
  preds [bb18, bb24]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:78:9-78:10)
      kind: drop(_9) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb16, bb19, bb25]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/aho_corasick.rs:15:5-79:6)
      kind: resume
  }
  preds [bb2, bb6, bb7, bb8, bb9, bb10, bb11, bb15, bb20, bb26]
  succs []

