bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:655:13-655:18)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:655:21-655:30)
  2: _4 = &((*_1).1: util::pool::Pool<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>)
    SourceInfo(regex-automata/src/meta/regex.rs:655:21-655:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:655:21-655:36)
      kind: _3 = util::pool::Pool::<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>::get(move _4) -> [return: bb1, unwind: bb14]
  }
  preds []
  succs [bb1, bb14]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:655:35-655:36)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/meta/regex.rs:655:13-655:18)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:656:13-656:17)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:656:20-656:24)
  4: _6 = &(*_1)
    SourceInfo(regex-automata/src/meta/regex.rs:656:20-656:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:656:20-656:42)
      kind: _5 = meta::regex::Regex::create_captures(move _6) -> [return: bb2, unwind: bb13]
  }
  preds [bb0]
  succs [bb2, bb13]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:656:41-656:42)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/meta/regex.rs:656:13-656:17)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:657:13-657:15)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:657:38-657:50)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:657:38-657:43)
  5: _9 = move _2
    SourceInfo(regex-automata/src/meta/regex.rs:657:38-657:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:657:38-657:50)
      kind: _8 = <I as core::convert::Into<util::search::Input<'_>>>::into(move _9) -> [return: bb3, unwind: bb11]
  }
  preds [bb1]
  succs [bb3, bb11]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:657:49-657:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:657:18-657:51)
      kind: _7 = util::iter::Searcher::<'_>::new(move _8) -> [return: bb4, unwind: bb12]
  }
  preds [bb2]
  succs [bb4, bb12]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:657:50-657:51)
  1: FakeRead(ForLet(None), _7)
    SourceInfo(regex-automata/src/meta/regex.rs:657:13-657:15)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:658:31-658:35)
  3: _10 = &(*_1)
    SourceInfo(regex-automata/src/meta/regex.rs:658:31-658:35)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:658:37-658:42)
  5: _11 = move _3
    SourceInfo(regex-automata/src/meta/regex.rs:658:37-658:42)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:658:44-658:48)
  7: _12 = move _5
    SourceInfo(regex-automata/src/meta/regex.rs:658:44-658:48)
  8: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:658:50-658:52)
  9: _13 = move _7
    SourceInfo(regex-automata/src/meta/regex.rs:658:50-658:52)
  10: _0 = meta::regex::CapturesMatches::<'_, '_> { re: move _10, cache: move _11, caps: move _12, it: move _13 }
    SourceInfo(regex-automata/src/meta/regex.rs:658:9-658:54)
  11: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:658:53-658:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:658:53-658:54)
      kind: drop(_12) -> [return: bb5, unwind: bb10]
  }
  preds [bb3]
  succs [bb5, bb10]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:658:53-658:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:658:53-658:54)
      kind: drop(_11) -> [return: bb6, unwind: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:658:53-658:54)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:658:53-658:54)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:659:5-659:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:659:5-659:6)
      kind: drop(_5) -> [return: bb7, unwind: bb13]
  }
  preds [bb5]
  succs [bb7, bb13]

bb7
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:659:5-659:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:659:5-659:6)
      kind: drop(_3) -> [return: bb8, unwind: bb14]
  }
  preds [bb6]
  succs [bb8, bb14]

bb8
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:659:5-659:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:659:5-659:6)
      kind: drop(_2) -> [return: bb9, unwind: bb15]
  }
  preds [bb7]
  succs [bb9, bb15]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:659:6-659:6)
      kind: return
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:658:53-658:54)
      kind: drop(_11) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb12]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:657:49-657:50)
      kind: drop(_9) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:659:5-659:6)
      kind: drop(_5) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb3, bb5, bb10, bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:659:5-659:6)
      kind: drop(_3) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb1, bb6, bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:659:5-659:6)
      kind: drop(_2) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb0, bb7, bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:651:5-659:6)
      kind: resume
  }
  preds [bb8, bb14]
  succs []

