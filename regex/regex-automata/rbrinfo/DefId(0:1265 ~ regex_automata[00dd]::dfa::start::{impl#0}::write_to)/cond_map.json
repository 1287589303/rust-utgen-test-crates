{
  "regex-automata/src/dfa/start.rs:49:12:49:30": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "dst.len() < nwrite",
          "lhs": "dst.len()",
          "rhs": "nwrite",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/start.rs:52:23:52:28": [
    {
      "Match": {
        "match_source": "regex-automata/src/dfa/start.rs:52:23:52:28",
        "match_str": "*self",
        "match_kind": {
          "Enum": [
            "Both",
            "Unanchored",
            "Anchored"
          ]
        },
        "arms": {
          "regex-automata/src/dfa/start.rs:53:13:53:28": {
            "pat": {
              "pat_str": "StartKind::Both",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/start.rs:53:32:53:33"
          },
          "regex-automata/src/dfa/start.rs:54:13:54:34": {
            "pat": {
              "pat_str": "StartKind::Unanchored",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/start.rs:54:38:54:39"
          },
          "regex-automata/src/dfa/start.rs:55:13:55:32": {
            "pat": {
              "pat_str": "StartKind::Anchored",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/start.rs:55:36:55:37"
          }
        }
      }
    }
  ]
}