bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/start.rs:48:13-48:19)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/start.rs:48:22-48:26)
  2: _4 = &(*_1)
    SourceInfo(regex-automata/src/dfa/start.rs:48:22-48:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:48:22-48:41)
      kind: _3 = dfa::start::StartKind::write_to_len(move _4) -> [return: bb1, unwind: bb15]
  }
  preds []
  succs [bb1, bb15]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/start.rs:48:40-48:41)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/dfa/start.rs:48:13-48:19)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/start.rs:49:9-51:10)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/start.rs:49:12-49:30)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/start.rs:49:12-49:21)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/start.rs:49:12-49:15)
  6: _8 = &(*_2)
    SourceInfo(regex-automata/src/dfa/start.rs:49:12-49:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:49:12-49:21)
      kind: _7 = core::slice::<impl [u8]>::len(move _8) -> [return: bb2, unwind: bb15]
  }
  preds [bb0]
  succs [bb2, bb15]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/start.rs:49:20-49:21)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/start.rs:49:24-49:30)
  2: _9 = _3
    SourceInfo(regex-automata/src/dfa/start.rs:49:24-49:30)
  3: _6 = Lt(move _7, move _9)
    SourceInfo(regex-automata/src/dfa/start.rs:49:12-49:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:49:12-49:30)
      kind: switchInt(move _6) -> [0: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/start.rs:49:29-49:30)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/start.rs:49:29-49:30)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/start.rs:50:24-50:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:50:24-50:70)
      kind: _11 = util::wire::SerializeError::buffer_too_small(const "start kind") -> [return: bb4, unwind: bb15]
  }
  preds [bb2]
  succs [bb4, bb15]

bb4
  0: _0 = core::result::Result::<usize, util::wire::SerializeError>::Err(move _11)
    SourceInfo(regex-automata/src/dfa/start.rs:50:20-50:71)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/start.rs:50:70-50:71)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/start.rs:51:9-51:10)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/start.rs:51:9-51:10)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/start.rs:59:5-59:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:59:6-59:6)
      kind: goto -> bb14
  }
  preds [bb3]
  succs [bb14]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/start.rs:49:29-49:30)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/start.rs:49:29-49:30)
  2: _5 = const ()
    SourceInfo(regex-automata/src/dfa/start.rs:51:10-51:10)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/start.rs:51:9-51:10)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/start.rs:51:9-51:10)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/start.rs:52:13-52:14)
  6: PlaceMention((*_1))
    SourceInfo(regex-automata/src/dfa/start.rs:52:23-52:28)
  7: _13 = discriminant((*_1))
    SourceInfo(regex-automata/src/dfa/start.rs:52:23-52:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:52:17-52:28)
      kind: switchInt(move _13) -> [0: bb7, 1: bb8, 2: bb9, otherwise: bb6]
  }
  preds [bb2]
  succs [bb6, bb7, bb8, bb9]

bb6
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(regex-automata/src/dfa/start.rs:52:23-52:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:52:23-52:28)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:53:13-53:28)
      kind: falseEdge -> [real: bb10, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb10]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:54:13-54:34)
      kind: falseEdge -> [real: bb11, imaginary: bb9]
  }
  preds [bb5, bb7]
  succs [bb9, bb11]

bb9
  0: _12 = const 2_u32
    SourceInfo(regex-automata/src/dfa/start.rs:55:36-55:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:55:36-55:37)
      kind: goto -> bb12
  }
  preds [bb5, bb8]
  succs [bb12]

bb10
  0: _12 = const 0_u32
    SourceInfo(regex-automata/src/dfa/start.rs:53:32-53:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:53:32-53:33)
      kind: goto -> bb12
  }
  preds [bb7]
  succs [bb12]

bb11
  0: _12 = const 1_u32
    SourceInfo(regex-automata/src/dfa/start.rs:54:38-54:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:54:38-54:39)
      kind: goto -> bb12
  }
  preds [bb8]
  succs [bb12]

bb12
  0: FakeRead(ForLet(None), _12)
    SourceInfo(regex-automata/src/dfa/start.rs:52:13-52:14)
  1: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/start.rs:57:9-57:29)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/start.rs:57:22-57:23)
  3: _15 = _12
    SourceInfo(regex-automata/src/dfa/start.rs:57:22-57:23)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/start.rs:57:25-57:28)
  5: _16 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/start.rs:57:25-57:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:57:9-57:29)
      kind: _14 = <E as util::wire::Endian>::write_u32(move _15, move _16) -> [return: bb13, unwind: bb15]
  }
  preds [bb9, bb10, bb11]
  succs [bb13, bb15]

bb13
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/start.rs:57:28-57:29)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/start.rs:57:28-57:29)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/start.rs:57:29-57:30)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/start.rs:58:12-58:18)
  4: _17 = _3
    SourceInfo(regex-automata/src/dfa/start.rs:58:12-58:18)
  5: _0 = core::result::Result::<usize, util::wire::SerializeError>::Ok(move _17)
    SourceInfo(regex-automata/src/dfa/start.rs:58:9-58:19)
  6: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/start.rs:58:18-58:19)
  7: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/start.rs:59:5-59:6)
  8: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/start.rs:59:5-59:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:59:6-59:6)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:59:6-59:6)
      kind: return
  }
  preds [bb4, bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:44:5-59:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb12]
  succs []

