bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:9-2225:10)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:12-2223:48)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:12-2223:19)
  3: _4 = ((*_1).1: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:12-2223:19)
  4: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:23-2223:48)
  5: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:23-2223:42)
  6: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:23-2223:42)
  7: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:23-2223:33)
  8: _8 = &(*((*_1).0: &dfa::sparse::Transitions<T>))
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:23-2223:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2223:23-2223:42)
      kind: _7 = dfa::sparse::Transitions::<T>::sparse(move _8) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: _6 = &(*_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:23-2223:42)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:41-2223:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2223:23-2223:48)
      kind: _5 = core::slice::<impl [u8]>::len(move _6) -> [return: bb2, unwind: bb10]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:47-2223:48)
  1: _3 = Ge(move _4, move _5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:12-2223:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2223:12-2223:48)
      kind: switchInt(move _3) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:47-2223:48)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:47-2223:48)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:47-2223:48)
  3: _0 = core::option::Option::<dfa::sparse::State<'_>>::None
    SourceInfo(regex-automata/src/dfa/sparse.rs:2224:20-2224:24)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2225:9-2225:10)
  5: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2225:9-2225:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2229:6-2229:6)
      kind: goto -> bb9
  }
  preds [bb2]
  succs [bb9]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:47-2223:48)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:47-2223:48)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2223:47-2223:48)
  3: _2 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:2225:10-2225:10)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2225:9-2225:10)
  5: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2225:9-2225:10)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2226:13-2226:18)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2226:21-2226:31)
  8: _11 = &(*((*_1).0: &dfa::sparse::Transitions<T>))
    SourceInfo(regex-automata/src/dfa/sparse.rs:2226:21-2226:31)
  9: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2226:38-2226:69)
  10: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2226:61-2226:68)
  11: _13 = ((*_1).1: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2226:61-2226:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2226:38-2226:69)
      kind: _12 = util::primitives::StateID::new_unchecked(move _13) -> [return: bb5, unwind: bb10]
  }
  preds [bb2]
  succs [bb5, bb10]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2226:68-2226:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2226:21-2226:70)
      kind: _10 = dfa::sparse::Transitions::<T>::state(move _11, move _12) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2226:69-2226:70)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2226:69-2226:70)
  2: FakeRead(ForLet(None), _10)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2226:13-2226:18)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2227:19-2227:26)
  4: _14 = ((*_1).1: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2227:19-2227:26)
  5: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2227:29-2227:49)
  6: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2227:29-2227:34)
  7: _16 = &_10
    SourceInfo(regex-automata/src/dfa/sparse.rs:2227:29-2227:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2227:29-2227:49)
      kind: _15 = dfa::sparse::State::<'_>::write_to_len(move _16) -> [return: bb7, unwind: bb10]
  }
  preds [bb5]
  succs [bb7, bb10]

bb7
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2227:48-2227:49)
  1: _17 = AddWithOverflow(_14, _15)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2227:19-2227:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2227:19-2227:49)
      kind: assert(!move (_17.1: bool), "attempt to compute `{} + {}`, which would overflow", move _14, move _15) -> [success: bb8, unwind: bb10]
  }
  preds [bb6]
  succs [bb8, bb10]

bb8
  0: ((*_1).1: usize) = move (_17.0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2227:9-2227:49)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2227:48-2227:49)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2227:48-2227:49)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2228:14-2228:19)
  4: _18 = move _10
    SourceInfo(regex-automata/src/dfa/sparse.rs:2228:14-2228:19)
  5: _0 = core::option::Option::<dfa::sparse::State<'_>>::Some(move _18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2228:9-2228:20)
  6: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2228:19-2228:20)
  7: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2229:5-2229:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2229:6-2229:6)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2229:6-2229:6)
      kind: return
  }
  preds [bb3, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2222:5-2229:6)
      kind: resume
  }
  preds [bb0, bb1, bb4, bb5, bb6, bb7]
  succs []

