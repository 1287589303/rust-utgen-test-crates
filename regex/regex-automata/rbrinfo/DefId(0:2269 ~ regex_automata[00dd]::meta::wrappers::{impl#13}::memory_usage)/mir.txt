bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:13-1062:44)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:13-1062:29)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:13-1062:29)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:13-1062:19)
  4: _5 = &((*_1).0: dfa::regex::Regex)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:13-1062:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1062:13-1062:29)
      kind: _4 = dfa::regex::Regex::forward(move _5) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: _3 = &(*_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:13-1062:29)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:28-1062:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1062:13-1062:44)
      kind: _2 = dfa::dense::DFA::<std::vec::Vec<u32>>::memory_usage(move _3) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:43-1062:44)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:47-1062:78)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:47-1062:63)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:47-1062:63)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:47-1062:53)
  5: _9 = &((*_1).0: dfa::regex::Regex)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:47-1062:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1062:47-1062:63)
      kind: _8 = dfa::regex::Regex::reverse(move _9) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: _7 = &(*_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:47-1062:63)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:62-1062:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1062:47-1062:78)
      kind: _6 = dfa::dense::DFA::<std::vec::Vec<u32>>::memory_usage(move _7) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:77-1062:78)
  1: _10 = AddWithOverflow(_2, _6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:13-1062:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1062:13-1062:78)
      kind: assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", move _2, move _6) -> [success: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: _0 = move (_10.0: usize)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:13-1062:78)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:77-1062:78)
  2: StorageDead(_2)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1062:77-1062:78)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1070:5-1070:6)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:1070:5-1070:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1070:6-1070:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:1059:5-1070:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

