bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3853:13-3853:21)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3853:24-3853:36)
  2: _4 = ((*_1).5: core::option::Option<util::alphabet::ByteSet>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3853:24-3853:36)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3853:47-3853:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3853:47-3853:63)
      kind: _5 = util::alphabet::ByteSet::empty() -> [return: bb1, unwind: bb28]
  }
  preds []
  succs [bb1, bb28]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3853:24-3853:64)
      kind: _3 = core::option::Option::<util::alphabet::ByteSet>::unwrap_or(move _4, move _5) -> [return: bb2, unwind: bb28]
  }
  preds [bb0]
  succs [bb2, bb28]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3853:63-3853:64)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3853:63-3853:64)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3853:13-3853:21)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3854:9-3871:10)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3854:12-3854:54)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3854:12-3854:30)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3854:12-3854:15)
  7: _9 = &(*_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3854:12-3854:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3854:12-3854:30)
      kind: _8 = nfa::thompson::nfa::NFA::look_set_any(move _9) -> [return: bb3, unwind: bb28]
  }
  preds [bb1]
  succs [bb3, bb28]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3854:29-3854:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3854:12-3854:54)
      kind: _7 = util::look::LookSet::contains_word_unicode(move _8) -> [return: bb4, unwind: bb28]
  }
  preds [bb2]
  succs [bb4, bb28]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3854:12-3854:54)
      kind: switchInt(move _7) -> [0: bb25, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb25]

bb5
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3854:53-3854:54)
  1: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3855:16-3855:48)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3855:16-3855:20)
  3: _11 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3855:16-3855:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3855:16-3855:48)
      kind: _10 = hybrid::dfa::Config::get_unicode_word_boundary(move _11) -> [return: bb6, unwind: bb28]
  }
  preds [bb4]
  succs [bb6, bb28]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3855:16-3855:48)
      kind: switchInt(move _10) -> [0: bb18, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb18]

bb7
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3855:47-3855:48)
  1: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
      kind: _13 = core::ops::RangeInclusive::<u8>::new(const 128_u8, const u8::MAX) -> [return: bb8, unwind: bb28]
  }
  preds [bb6]
  succs [bb8, bb28]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
      kind: _12 = <core::ops::RangeInclusive<u8> as core::iter::IntoIterator>::into_iter(move _13) -> [return: bb9, unwind: bb28]
  }
  preds [bb7]
  succs [bb9, bb28]

bb9
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:36-3856:37)
  1: PlaceMention(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
  3: _14 = move _12
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:17-3858:18)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:17-3858:18)
      kind: falseUnwind -> [real: bb11, unwind: bb28]
  }
  preds [bb9, bb17]
  succs [bb11, bb28]

bb11
  0: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
  1: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
  3: StorageLive(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
  4: _19 = &mut _14
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
  5: _18 = &mut (*_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
      kind: _17 = <core::ops::RangeInclusive<u8> as core::iter::Iterator>::next(move _18) -> [return: bb12, unwind: bb28]
  }
  preds [bb10]
  succs [bb12, bb28]

bb12
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:36-3856:37)
  1: PlaceMention(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
  2: _20 = discriminant(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
      kind: switchInt(move _20) -> [0: bb14, 1: bb15, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:26-3856:37)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:17-3858:18)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:21-3856:22)
  1: _22 = ((_17 as Some).0: u8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:21-3856:22)
  2: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3857:21-3857:32)
  3: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3857:21-3857:25)
  4: _24 = &mut _3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3857:21-3857:25)
  5: StorageLive(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3857:30-3857:31)
  6: _25 = _22
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3857:30-3857:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3857:21-3857:32)
      kind: _23 = util::alphabet::ByteSet::add(move _24, move _25) -> [return: bb17, unwind: bb28]
  }
  preds [bb12, bb14]
  succs [bb17, bb28]

bb16
  0: _6 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:17-3858:18)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3858:17-3858:18)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3858:17-3858:18)
  3: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3858:17-3858:18)
  4: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3858:17-3858:18)
  5: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3858:17-3858:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3855:13-3870:14)
      kind: goto -> bb24
  }
  preds [bb14]
  succs [bb24]

bb17
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3857:31-3857:32)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3857:31-3857:32)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3857:32-3857:33)
  3: _16 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:38-3858:18)
  4: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3858:17-3858:18)
  5: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3858:17-3858:18)
  6: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3858:17-3858:18)
  7: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3858:17-3858:18)
  8: _15 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:17-3858:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3856:17-3858:18)
      kind: goto -> bb10
  }
  preds [bb15]
  succs [bb10]

bb18
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3855:47-3855:48)
  1: StorageLive(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3865:21-3865:52)
  2: StorageLive(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3865:21-3865:25)
  3: _27 = &_3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3865:21-3865:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3865:21-3865:52)
      kind: _26 = util::alphabet::ByteSet::contains_range(move _27, const 128_u8, const u8::MAX) -> [return: bb19, unwind: bb28]
  }
  preds [bb6]
  succs [bb19, bb28]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3865:21-3865:52)
      kind: switchInt(move _26) -> [0: bb21, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb21]

bb20
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3865:51-3865:52)
  1: _6 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3869:18-3869:18)
  2: StorageDead(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3869:17-3869:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3855:13-3870:14)
      kind: goto -> bb24
  }
  preds [bb19]
  succs [bb24]

bb21
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3865:51-3865:52)
  1: StorageLive(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3867:25-3867:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3867:25-3867:76)
      kind: _29 = hybrid::error::BuildError::unsupported_dfa_word_boundary_unicode() -> [return: bb22, unwind: bb28]
  }
  preds [bb19]
  succs [bb22, bb28]

bb22
  0: _0 = core::result::Result::<util::alphabet::ByteSet, hybrid::error::BuildError>::Err(move _29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3866:28-3868:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3868:21-3868:22)
      kind: drop(_29) -> [return: bb23, unwind: bb28]
  }
  preds [bb21]
  succs [bb23, bb28]

bb23
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3868:21-3868:22)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3869:17-3869:18)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3870:13-3870:14)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3871:9-3871:10)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3871:9-3871:10)
  5: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3873:5-3873:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3873:6-3873:6)
      kind: goto -> bb27
  }
  preds [bb22]
  succs [bb27]

bb24
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3870:13-3870:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3854:9-3871:10)
      kind: goto -> bb26
  }
  preds [bb16, bb20]
  succs [bb26]

bb25
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3854:53-3854:54)
  1: _6 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3871:10-3871:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3854:9-3871:10)
      kind: goto -> bb26
  }
  preds [bb4]
  succs [bb26]

bb26
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3871:9-3871:10)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3871:9-3871:10)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3872:12-3872:16)
  3: _30 = _3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3872:12-3872:16)
  4: _0 = core::result::Result::<util::alphabet::ByteSet, hybrid::error::BuildError>::Ok(move _30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3872:9-3872:17)
  5: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3872:16-3872:17)
  6: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3873:5-3873:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3873:6-3873:6)
      kind: goto -> bb27
  }
  preds [bb24, bb25]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3873:6-3873:6)
      kind: return
  }
  preds [bb23, bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3849:5-3873:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb5, bb7, bb8, bb10, bb11, bb15, bb18, bb21, bb22]
  succs []

