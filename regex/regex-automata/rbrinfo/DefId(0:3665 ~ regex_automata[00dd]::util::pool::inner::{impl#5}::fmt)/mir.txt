bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/pool.rs:651:13-654:53)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/pool.rs:651:13-654:53)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/pool.rs:651:13-653:45)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/pool.rs:651:13-653:45)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/util/pool.rs:651:13-652:47)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/util/pool.rs:651:13-652:47)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/util/pool.rs:651:13-651:35)
  7: StorageLive(_10)
    SourceInfo(regex-automata/src/util/pool.rs:651:13-651:35)
  8: StorageLive(_11)
    SourceInfo(regex-automata/src/util/pool.rs:651:13-651:14)
  9: _11 = &mut (*_2)
    SourceInfo(regex-automata/src/util/pool.rs:651:13-651:14)
  10: StorageLive(_12)
    SourceInfo(regex-automata/src/util/pool.rs:651:28-651:34)
  11: StorageLive(_13)
    SourceInfo(regex-automata/src/util/pool.rs:651:28-651:34)
  12: _13 = const "Pool"
    SourceInfo(regex-automata/src/util/pool.rs:651:28-651:34)
  13: _12 = &(*_13)
    SourceInfo(regex-automata/src/util/pool.rs:651:28-651:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:651:13-651:35)
      kind: _10 = core::fmt::Formatter::<'_>::debug_struct(move _11, move _12) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: _9 = &mut _10
    SourceInfo(regex-automata/src/util/pool.rs:651:13-651:35)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/util/pool.rs:651:34-651:35)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/util/pool.rs:651:34-651:35)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/util/pool.rs:652:24-652:32)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/util/pool.rs:652:24-652:32)
  5: _15 = const "stacks"
    SourceInfo(regex-automata/src/util/pool.rs:652:24-652:32)
  6: _14 = &(*_15)
    SourceInfo(regex-automata/src/util/pool.rs:652:24-652:32)
  7: StorageLive(_16)
    SourceInfo(regex-automata/src/util/pool.rs:652:34-652:46)
  8: StorageLive(_17)
    SourceInfo(regex-automata/src/util/pool.rs:652:34-652:46)
  9: StorageLive(_18)
    SourceInfo(regex-automata/src/util/pool.rs:652:34-652:46)
  10: _18 = &((*_1).1: std::vec::Vec<util::pool::inner::CacheLine<std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>>>)
    SourceInfo(regex-automata/src/util/pool.rs:652:34-652:46)
  11: _17 = &(*_18)
    SourceInfo(regex-automata/src/util/pool.rs:652:34-652:46)
  12: _16 = move _17 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/pool.rs:652:34-652:46)
  13: StorageDead(_17)
    SourceInfo(regex-automata/src/util/pool.rs:652:45-652:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:651:13-652:47)
      kind: _8 = core::fmt::DebugStruct::<'_, '_>::field(move _9, move _14, move _16) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: _7 = &mut (*_8)
    SourceInfo(regex-automata/src/util/pool.rs:651:13-652:47)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/util/pool.rs:652:46-652:47)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/util/pool.rs:652:46-652:47)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/util/pool.rs:652:46-652:47)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/util/pool.rs:653:24-653:31)
  5: StorageLive(_20)
    SourceInfo(regex-automata/src/util/pool.rs:653:24-653:31)
  6: _20 = const "owner"
    SourceInfo(regex-automata/src/util/pool.rs:653:24-653:31)
  7: _19 = &(*_20)
    SourceInfo(regex-automata/src/util/pool.rs:653:24-653:31)
  8: StorageLive(_21)
    SourceInfo(regex-automata/src/util/pool.rs:653:33-653:44)
  9: StorageLive(_22)
    SourceInfo(regex-automata/src/util/pool.rs:653:33-653:44)
  10: StorageLive(_23)
    SourceInfo(regex-automata/src/util/pool.rs:653:33-653:44)
  11: _23 = &((*_1).2: core::sync::atomic::AtomicUsize)
    SourceInfo(regex-automata/src/util/pool.rs:653:33-653:44)
  12: _22 = &(*_23)
    SourceInfo(regex-automata/src/util/pool.rs:653:33-653:44)
  13: _21 = move _22 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/pool.rs:653:33-653:44)
  14: StorageDead(_22)
    SourceInfo(regex-automata/src/util/pool.rs:653:43-653:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:651:13-653:45)
      kind: _6 = core::fmt::DebugStruct::<'_, '_>::field(move _7, move _19, move _21) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: _5 = &mut (*_6)
    SourceInfo(regex-automata/src/util/pool.rs:651:13-653:45)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/util/pool.rs:653:44-653:45)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/util/pool.rs:653:44-653:45)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/util/pool.rs:653:44-653:45)
  4: StorageLive(_24)
    SourceInfo(regex-automata/src/util/pool.rs:654:24-654:35)
  5: StorageLive(_25)
    SourceInfo(regex-automata/src/util/pool.rs:654:24-654:35)
  6: _25 = const "owner_val"
    SourceInfo(regex-automata/src/util/pool.rs:654:24-654:35)
  7: _24 = &(*_25)
    SourceInfo(regex-automata/src/util/pool.rs:654:24-654:35)
  8: StorageLive(_26)
    SourceInfo(regex-automata/src/util/pool.rs:654:37-654:52)
  9: StorageLive(_27)
    SourceInfo(regex-automata/src/util/pool.rs:654:37-654:52)
  10: StorageLive(_28)
    SourceInfo(regex-automata/src/util/pool.rs:654:37-654:52)
  11: _28 = &((*_1).3: core::cell::UnsafeCell<core::option::Option<T>>)
    SourceInfo(regex-automata/src/util/pool.rs:654:37-654:52)
  12: _27 = &(*_28)
    SourceInfo(regex-automata/src/util/pool.rs:654:37-654:52)
  13: _26 = move _27 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/pool.rs:654:37-654:52)
  14: StorageDead(_27)
    SourceInfo(regex-automata/src/util/pool.rs:654:51-654:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:651:13-654:53)
      kind: _4 = core::fmt::DebugStruct::<'_, '_>::field(move _5, move _24, move _26) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: _3 = &mut (*_4)
    SourceInfo(regex-automata/src/util/pool.rs:651:13-654:53)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/util/pool.rs:654:52-654:53)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/util/pool.rs:654:52-654:53)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/util/pool.rs:654:52-654:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:651:13-655:26)
      kind: _0 = core::fmt::DebugStruct::<'_, '_>::finish(move _3) -> [return: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/pool.rs:655:25-655:26)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/util/pool.rs:656:9-656:10)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/util/pool.rs:656:9-656:10)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/util/pool.rs:656:9-656:10)
  4: StorageDead(_20)
    SourceInfo(regex-automata/src/util/pool.rs:656:9-656:10)
  5: StorageDead(_18)
    SourceInfo(regex-automata/src/util/pool.rs:656:9-656:10)
  6: StorageDead(_15)
    SourceInfo(regex-automata/src/util/pool.rs:656:9-656:10)
  7: StorageDead(_13)
    SourceInfo(regex-automata/src/util/pool.rs:656:9-656:10)
  8: StorageDead(_10)
    SourceInfo(regex-automata/src/util/pool.rs:656:9-656:10)
  9: StorageDead(_8)
    SourceInfo(regex-automata/src/util/pool.rs:656:9-656:10)
  10: StorageDead(_6)
    SourceInfo(regex-automata/src/util/pool.rs:656:9-656:10)
  11: StorageDead(_4)
    SourceInfo(regex-automata/src/util/pool.rs:656:9-656:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:656:10-656:10)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:650:9-656:10)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

