bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:13-594:22)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:25-594:51)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:25-594:39)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:25-594:39)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:25-594:29)
  5: _8 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:25-594:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:594:25-594:39)
      kind: _7 = hybrid::dfa::DFA::get_nfa(move _8) -> [return: bb1, unwind: bb34]
  }
  preds []
  succs [bb1, bb34]

bb1
  0: _6 = &(*_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:25-594:39)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:38-594:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:594:25-594:51)
      kind: _5 = nfa::thompson::nfa::NFA::has_empty(move _6) -> [return: bb2, unwind: bb34]
  }
  preds [bb0]
  succs [bb2, bb34]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:594:25-594:51)
      kind: switchInt(move _5) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:50-594:51)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:50-594:51)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:55-594:69)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:55-594:69)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:55-594:59)
  5: _11 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:55-594:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:594:55-594:69)
      kind: _10 = hybrid::dfa::DFA::get_nfa(move _11) -> [return: bb5, unwind: bb34]
  }
  preds [bb2]
  succs [bb5, bb34]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:50-594:51)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:50-594:51)
  2: _4 = const false
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:25-594:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:594:25-594:79)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb5
  0: _9 = &(*_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:55-594:69)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:68-594:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:594:55-594:79)
      kind: _4 = nfa::thompson::nfa::NFA::is_utf8(move _9) -> [return: bb6, unwind: bb34]
  }
  preds [bb3]
  succs [bb6, bb34]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:78-594:79)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:78-594:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:594:25-594:79)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:78-594:79)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:594:13-594:22)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:13-595:15)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
  4: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
  5: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:60)
  6: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:41-595:45)
  7: _16 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:41-595:45)
  8: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:47-595:52)
  9: _17 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:47-595:52)
  10: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:54-595:59)
  11: _18 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:54-595:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:60)
      kind: _15 = hybrid::search::find_fwd(move _16, move _17, move _18) -> [return: bb8, unwind: bb34]
  }
  preds [bb4, bb6]
  succs [bb8, bb34]

bb8
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:59-595:60)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:59-595:60)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:59-595:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
      kind: _14 = <core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError> as core::ops::Try>::branch(move _15) -> [return: bb9, unwind: bb33]
  }
  preds [bb7]
  succs [bb9, bb33]

bb9
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:60-595:61)
  1: PlaceMention(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
  2: _19 = discriminant(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
      kind: switchInt(move _19) -> [0: bb12, 1: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:595:60-595:61)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
  1: _23 = ((_14 as Continue).0: core::option::Option<util::search::HalfMatch>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
  2: _13 = _23
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:60-595:61)
  4: PlaceMention(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
  5: _25 = discriminant(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:595:18-595:61)
      kind: switchInt(move _25) -> [0: bb16, 1: bb17, otherwise: bb15]
  }
  preds [bb9, bb11]
  succs [bb15, bb16, bb17]

bb13
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:60-595:61)
  1: _20 = move ((_14 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:60-595:61)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:60-595:61)
  3: _22 = move _20
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:60-595:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
      kind: _0 = <core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _22) -> [return: bb14, unwind: bb30]
  }
  preds [bb11]
  succs [bb14, bb30]

bb14
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:60-595:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:595:60-595:61)
      kind: drop(_20) -> [return: bb26, unwind: bb32]
  }
  preds [bb13]
  succs [bb26, bb32]

bb15
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:596:13-596:17)
      kind: falseEdge -> [real: bb19, imaginary: bb17]
  }
  preds [bb12]
  succs [bb17, bb19]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:597:13-597:21)
      kind: falseEdge -> [real: bb20, imaginary: bb18]
  }
  preds [bb12, bb16]
  succs [bb18, bb20]

bb18
  0: StorageLive(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:598:18-598:20)
  1: _34 = ((_13 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:598:18-598:20)
  2: _12 = _34
    SourceInfo(regex-automata/src/hybrid/dfa.rs:598:25-598:27)
  3: StorageDead(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:598:26-598:27)
  4: FakeRead(ForLet(None), _12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:13-595:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:599:10-599:11)
      kind: drop(_14) -> [return: bb23, unwind: bb34]
  }
  preds [bb17, bb21]
  succs [bb23, bb34]

bb19
  0: StorageLive(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:596:31-596:35)
  1: _27 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/hybrid/dfa.rs:596:31-596:35)
  2: _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::Ok(move _27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:596:28-596:36)
  3: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:596:35-596:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:596:21-596:36)
      kind: goto -> bb27
  }
  preds [bb16]
  succs [bb27]

bb20
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:18-597:20)
  1: _29 = &((_13 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:18-597:20)
  2: _24 = &fake shallow _13
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:24-595:61)
  3: StorageLive(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:26-597:35)
  4: _30 = _4
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:26-597:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:597:26-597:35)
      kind: switchInt(move _30) -> [0: bb22, otherwise: bb21]
  }
  preds [bb17]
  succs [bb21, bb22]

bb21
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:34-597:35)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:57-597:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:597:25-597:35)
      kind: goto -> bb18
  }
  preds [bb20]
  succs [bb18]

bb22
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:34-597:35)
  1: FakeRead(ForMatchGuard, _24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:34-597:35)
  2: FakeRead(ForGuardBinding, _29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:34-597:35)
  3: StorageLive(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:18-597:20)
  4: _28 = ((_13 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:18-597:20)
  5: StorageLive(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:49-597:57)
  6: StorageLive(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:54-597:56)
  7: _33 = _28
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:54-597:56)
  8: _32 = core::option::Option::<util::search::HalfMatch>::Some(move _33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:49-597:57)
  9: StorageDead(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:56-597:57)
  10: _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::Ok(move _32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:46-597:58)
  11: StorageDead(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:57-597:58)
  12: StorageDead(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:57-597:58)
  13: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:597:57-597:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb27
  }
  preds [bb20]
  succs [bb27]

bb23
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:599:10-599:11)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:599:10-599:11)
  2: StorageLive(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:32-614:37)
  3: _35 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:32-614:37)
  4: StorageLive(_36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:39-614:41)
  5: _36 = _12
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:39-614:41)
  6: StorageLive(_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:43-614:54)
  7: StorageLive(_38)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:43-614:45)
  8: _38 = &_12
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:43-614:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:614:43-614:54)
      kind: _37 = util::search::HalfMatch::offset(move _38) -> [return: bb24, unwind: bb34]
  }
  preds [bb18]
  succs [bb24, bb34]

bb24
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:53-614:54)
  1: StorageLive(_39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:56-617:10)
  2: StorageLive(_40)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:56-617:10)
  3: _40 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:56-617:10)
  4: StorageLive(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:56-617:10)
  5: _41 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:56-617:10)
  6: _39 = {closure@regex-automata/src/hybrid/dfa.rs:614:56: 614:63} { self: move _40, cache: move _41 }
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:56-617:10)
  7: StorageDead(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:62-614:63)
  8: StorageDead(_40)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:614:62-614:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:614:9-617:11)
      kind: _0 = util::empty::skip_splits_fwd::<util::search::HalfMatch, {closure@regex-automata/src/hybrid/dfa.rs:614:56: 614:63}>(move _35, move _36, move _37, move _39) -> [return: bb25, unwind: bb34]
  }
  preds [bb23]
  succs [bb25, bb34]

bb25
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:617:10-617:11)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:617:10-617:11)
  2: StorageDead(_36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:617:10-617:11)
  3: StorageDead(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:617:10-617:11)
  4: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:618:5-618:6)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:618:5-618:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:618:6-618:6)
      kind: goto -> bb29
  }
  preds [bb24]
  succs [bb29]

bb26
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:595:60-595:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb27
  }
  preds [bb14]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:599:10-599:11)
      kind: drop(_14) -> [return: bb28, unwind: bb34]
  }
  preds [bb19, bb22, bb26]
  succs [bb28, bb34]

bb28
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:599:10-599:11)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:599:10-599:11)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:618:5-618:6)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:618:5-618:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:618:6-618:6)
      kind: goto -> bb29
  }
  preds [bb27]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:618:6-618:6)
      kind: return
  }
  preds [bb25, bb28]
  succs []

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:595:60-595:61)
      kind: drop(_22) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:595:60-595:61)
      kind: drop(_20) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb30]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:599:10-599:11)
      kind: drop(_14) -> [return: bb34, unwind terminate(cleanup)]
  }
  preds [bb14, bb31]
  succs [bb34]

bb33
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:595:60-595:61)
      kind: drop(_15) -> [return: bb34, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb34]

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:589:5-618:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb7, bb18, bb23, bb24, bb27, bb32, bb33]
  succs []

