bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/pool.rs:605:17-605:23)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/pool.rs:605:26-605:35)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/pool.rs:605:26-605:35)
  3: _5 = const util::pool::inner::THREAD_ID
    SourceInfo(regex-automata/src/util/pool.rs:605:26-605:35)
  4: _4 = &_5
    SourceInfo(regex-automata/src/util/pool.rs:605:26-605:35)
  5: StorageLive(_6)
    SourceInfo(regex-automata/src/util/pool.rs:605:41-605:49)
  6: _6 = {closure@regex-automata/src/util/pool.rs:605:41: 605:45}
    SourceInfo(regex-automata/src/util/pool.rs:605:41-605:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:605:26-605:50)
      kind: _3 = std::thread::LocalKey::<usize>::with::<{closure@regex-automata/src/util/pool.rs:605:41: 605:45}, usize>(move _4, move _6) -> [return: bb1, unwind: bb28]
  }
  preds []
  succs [bb1, bb28]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/pool.rs:605:49-605:50)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/pool.rs:605:49-605:50)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/pool.rs:605:17-605:23)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/util/pool.rs:605:50-605:51)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/util/pool.rs:606:17-606:25)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/util/pool.rs:606:28-606:34)
  6: _8 = _3
    SourceInfo(regex-automata/src/util/pool.rs:606:28-606:34)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/util/pool.rs:606:37-606:54)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/util/pool.rs:606:37-606:48)
  9: _10 = &((*_1).1: std::vec::Vec<util::pool::inner::CacheLine<std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>>>)
    SourceInfo(regex-automata/src/util/pool.rs:606:37-606:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:606:37-606:54)
      kind: _9 = std::vec::Vec::<util::pool::inner::CacheLine<std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>>>::len(move _10) -> [return: bb2, unwind: bb28]
  }
  preds [bb0]
  succs [bb2, bb28]

bb2
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/pool.rs:606:53-606:54)
  1: _11 = Eq(_9, const 0_usize)
    SourceInfo(regex-automata/src/util/pool.rs:606:28-606:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:606:28-606:54)
      kind: assert(!move _11, "attempt to calculate the remainder of `{}` with a divisor of zero", _8) -> [success: bb3, unwind: bb28]
  }
  preds [bb1]
  succs [bb3, bb28]

bb3
  0: _7 = Rem(move _8, move _9)
    SourceInfo(regex-automata/src/util/pool.rs:606:28-606:54)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/util/pool.rs:606:53-606:54)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/util/pool.rs:606:53-606:54)
  3: FakeRead(ForLet(None), _7)
    SourceInfo(regex-automata/src/util/pool.rs:606:17-606:25)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  6: _13 = core::ops::Range::<i32> { start: const 0_i32, end: const 10_i32 }
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
      kind: _12 = <core::ops::Range<i32> as core::iter::IntoIterator>::into_iter(move _13) -> [return: bb4, unwind: bb28]
  }
  preds [bb2]
  succs [bb4, bb28]

bb4
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/pool.rs:618:26-618:27)
  1: PlaceMention(_12)
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  3: _14 = move _12
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:618:13-625:14)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:618:13-625:14)
      kind: falseUnwind -> [real: bb6, unwind: bb28]
  }
  preds [bb4, bb22]
  succs [bb6, bb28]

bb6
  0: StorageLive(_16)
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  1: StorageLive(_17)
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  3: StorageLive(_19)
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  4: _19 = &mut _14
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  5: _18 = &mut (*_19)
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
      kind: _17 = <core::ops::Range<i32> as core::iter::Iterator>::next(move _18) -> [return: bb7, unwind: bb28]
  }
  preds [bb5]
  succs [bb7, bb28]

bb7
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/util/pool.rs:618:26-618:27)
  1: PlaceMention(_17)
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  2: _20 = discriminant(_17)
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
      kind: switchInt(move _20) -> [0: bb9, 1: bb10, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9, bb10]

bb8
  0: FakeRead(ForMatchedPlace(None), _17)
    SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:618:22-618:27)
      kind: unreachable
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:618:13-625:14)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/util/pool.rs:619:21-619:30)
  1: StorageLive(_24)
    SourceInfo(regex-automata/src/util/pool.rs:619:39-619:73)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/util/pool.rs:619:39-619:62)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/util/pool.rs:619:50-619:60)
  4: StorageLive(_27)
    SourceInfo(regex-automata/src/util/pool.rs:619:39-619:50)
  5: _27 = &((*_1).1: std::vec::Vec<util::pool::inner::CacheLine<std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>>>)
    SourceInfo(regex-automata/src/util/pool.rs:619:39-619:50)
  6: StorageLive(_28)
    SourceInfo(regex-automata/src/util/pool.rs:619:51-619:59)
  7: _28 = _7
    SourceInfo(regex-automata/src/util/pool.rs:619:51-619:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:619:50-619:60)
      kind: _26 = <std::vec::Vec<util::pool::inner::CacheLine<std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>>> as core::ops::Index<usize>>::index(move _27, move _28) -> [return: bb12, unwind: bb28]
  }
  preds [bb7, bb9]
  succs [bb12, bb28]

bb11
  0: _0 = const ()
    SourceInfo(regex-automata/src/util/pool.rs:618:13-625:14)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  3: StorageDead(_16)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  4: StorageDead(_14)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  5: StorageDead(_12)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  6: StorageDead(_7)
    SourceInfo(regex-automata/src/util/pool.rs:626:9-626:10)
  7: StorageDead(_3)
    SourceInfo(regex-automata/src/util/pool.rs:626:9-626:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:626:9-626:10)
      kind: drop(_2) -> [return: bb24, unwind: bb29]
  }
  preds [bb9]
  succs [bb24, bb29]

bb12
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/util/pool.rs:619:59-619:60)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/util/pool.rs:619:59-619:60)
  2: _25 = &((*_26).0: std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>)
    SourceInfo(regex-automata/src/util/pool.rs:619:39-619:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:619:39-619:73)
      kind: _24 = std::sync::Mutex::<std::vec::Vec<std::boxed::Box<T>>>::try_lock(move _25) -> [return: bb13, unwind: bb28]
  }
  preds [bb10]
  succs [bb13, bb28]

bb13
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/util/pool.rs:619:72-619:73)
  1: PlaceMention(_24)
    SourceInfo(regex-automata/src/util/pool.rs:619:39-619:73)
  2: _29 = discriminant(_24)
    SourceInfo(regex-automata/src/util/pool.rs:619:39-619:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:619:33-619:73)
      kind: switchInt(move _29) -> [0: bb16, 1: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15, bb16]

bb14
  0: FakeRead(ForMatchedPlace(None), _24)
    SourceInfo(regex-automata/src/util/pool.rs:619:39-619:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:619:39-619:73)
      kind: unreachable
  }
  preds [bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:620:21-620:27)
      kind: falseEdge -> [real: bb21, imaginary: bb16]
  }
  preds [bb13]
  succs [bb16, bb21]

bb16
  0: StorageLive(_31)
    SourceInfo(regex-automata/src/util/pool.rs:621:24-621:29)
  1: _31 = move ((_24 as Ok).0: std::sync::MutexGuard<'_, std::vec::Vec<std::boxed::Box<T>>>)
    SourceInfo(regex-automata/src/util/pool.rs:621:24-621:29)
  2: _23 = move _31
    SourceInfo(regex-automata/src/util/pool.rs:621:34-621:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:621:38-621:39)
      kind: drop(_31) -> [return: bb17, unwind: bb27]
  }
  preds [bb13, bb15]
  succs [bb17, bb27]

bb17
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/util/pool.rs:621:38-621:39)
  1: FakeRead(ForLet(None), _23)
    SourceInfo(regex-automata/src/util/pool.rs:619:21-619:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:622:18-622:19)
      kind: drop(_24) -> [return: bb18, unwind: bb26]
  }
  preds [bb16]
  succs [bb18, bb26]

bb18
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/util/pool.rs:622:18-622:19)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/util/pool.rs:622:18-622:19)
  2: StorageLive(_32)
    SourceInfo(regex-automata/src/util/pool.rs:623:17-623:34)
  3: StorageLive(_33)
    SourceInfo(regex-automata/src/util/pool.rs:623:17-623:22)
  4: StorageLive(_34)
    SourceInfo(regex-automata/src/util/pool.rs:623:17-623:34)
  5: StorageLive(_35)
    SourceInfo(regex-automata/src/util/pool.rs:623:17-623:22)
  6: _35 = &mut _23
    SourceInfo(regex-automata/src/util/pool.rs:623:17-623:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:623:17-623:34)
      kind: _34 = <std::sync::MutexGuard<'_, std::vec::Vec<std::boxed::Box<T>>> as core::ops::DerefMut>::deref_mut(move _35) -> [return: bb19, unwind: bb26]
  }
  preds [bb17]
  succs [bb19, bb26]

bb19
  0: _33 = &mut (*_34)
    SourceInfo(regex-automata/src/util/pool.rs:623:17-623:22)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/util/pool.rs:623:21-623:22)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/util/pool.rs:623:28-623:33)
  3: _36 = move _2
    SourceInfo(regex-automata/src/util/pool.rs:623:28-623:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:623:17-623:34)
      kind: _32 = std::vec::Vec::<std::boxed::Box<T>>::push(move _33, move _36) -> [return: bb20, unwind: bb25]
  }
  preds [bb18]
  succs [bb20, bb25]

bb20
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/util/pool.rs:623:33-623:34)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/util/pool.rs:623:33-623:34)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/util/pool.rs:623:34-623:35)
  3: StorageDead(_32)
    SourceInfo(regex-automata/src/util/pool.rs:623:34-623:35)
  4: _0 = const ()
    SourceInfo(regex-automata/src/util/pool.rs:624:17-624:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
      kind: drop(_23) -> [return: bb23, unwind: bb28]
  }
  preds [bb19]
  succs [bb23, bb28]

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:622:18-622:19)
      kind: drop(_24) -> [return: bb22, unwind: bb28]
  }
  preds [bb15]
  succs [bb22, bb28]

bb22
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/util/pool.rs:622:18-622:19)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/util/pool.rs:622:18-622:19)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  4: StorageDead(_17)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  5: StorageDead(_16)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb5
  }
  preds [bb21]
  succs [bb5]

bb23
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  3: StorageDead(_16)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  4: StorageDead(_14)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  5: StorageDead(_12)
    SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
  6: StorageDead(_7)
    SourceInfo(regex-automata/src/util/pool.rs:626:9-626:10)
  7: StorageDead(_3)
    SourceInfo(regex-automata/src/util/pool.rs:626:9-626:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:626:9-626:10)
      kind: drop(_2) -> [return: bb24, unwind: bb29]
  }
  preds [bb20]
  succs [bb24, bb29]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:626:10-626:10)
      kind: return
  }
  preds [bb11, bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:623:33-623:34)
      kind: drop(_36) -> [return: bb26, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:625:13-625:14)
      kind: drop(_23) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb17, bb18, bb25]
  succs [bb28]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:622:18-622:19)
      kind: drop(_24) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb16]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:626:9-626:10)
      kind: drop(_2) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb3, bb5, bb6, bb10, bb12, bb20, bb21, bb26, bb27]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:604:9-626:10)
      kind: resume
  }
  preds [bb11, bb23, bb28]
  succs []

