bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2250:9-2257:10)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:13-2251:60)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:13-2251:36)
  3: _6 = &((*((*_1).1: &mut hybrid::dfa::Cache)).3: std::collections::HashMap<util::determinize::state::State, hybrid::id::LazyStateID>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:13-2251:36)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:41-2251:59)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:41-2251:59)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:41-2251:48)
  7: _9 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:41-2251:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:41-2251:59)
      kind: _8 = util::determinize::state::StateBuilderNFA::as_bytes(move _9) -> [return: bb1, unwind: bb17]
  }
  preds []
  succs [bb1, bb17]

bb1
  0: _7 = &(*_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:41-2251:59)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:58-2251:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:13-2251:60)
      kind: _5 = std::collections::HashMap::<util::determinize::state::State, hybrid::id::LazyStateID>::get::<[u8]>(move _6, move _7) -> [return: bb2, unwind: bb17]
  }
  preds [bb0]
  succs [bb2, bb17]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:59-2251:60)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:59-2251:60)
  2: PlaceMention(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:13-2251:60)
  3: _10 = discriminant(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2251:13-2251:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2250:16-2250:32)
      kind: switchInt(move _10) -> [1: bb3, otherwise: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2250:16-2250:32)
      kind: falseEdge -> [real: bb4, imaginary: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2250:22-2250:31)
  1: _11 = (*((_5 as Some).0: &hybrid::id::LazyStateID))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2250:22-2250:31)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2255:13-2255:44)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2255:13-2255:17)
  4: _14 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2255:13-2255:17)
  5: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2255:36-2255:43)
  6: _15 = move _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2255:36-2255:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2255:13-2255:44)
      kind: _13 = hybrid::dfa::Lazy::<'_, '_>::put_state_builder(move _14, move _15) -> [return: bb5, unwind: bb16]
  }
  preds [bb3]
  succs [bb5, bb16]

bb5
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2255:43-2255:44)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2255:43-2255:44)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2255:44-2255:45)
  3: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2256:23-2256:32)
  4: _16 = _11
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2256:23-2256:32)
  5: _0 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::CacheError>::Ok(move _16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2256:20-2256:33)
  6: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2256:32-2256:33)
  7: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2257:9-2257:10)
  8: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2257:9-2257:10)
  9: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2257:9-2257:10)
  10: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2257:9-2257:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2261:5-2261:6)
      kind: drop(_3) -> [return: bb11, unwind: bb18]
  }
  preds [bb4]
  succs [bb11, bb18]

bb6
  0: _4 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2257:10-2257:10)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2257:9-2257:10)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2257:9-2257:10)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2257:9-2257:10)
  4: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:13-2258:19)
  5: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:22-2258:26)
  6: _18 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:22-2258:26)
  7: StorageLive(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:37-2258:55)
  8: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:37-2258:44)
  9: _20 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:37-2258:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:37-2258:55)
      kind: _19 = util::determinize::state::StateBuilderNFA::to_state(move _20) -> [return: bb7, unwind: bb17]
  }
  preds [bb2, bb3]
  succs [bb7, bb17]

bb7
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:54-2258:55)
  1: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:57-2258:62)
  2: _21 = move _3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:57-2258:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:22-2258:63)
      kind: _17 = hybrid::dfa::Lazy::<'_, '_>::add_state::<impl Fn(LazyStateID) -> LazyStateID>(move _18, move _19, move _21) -> [return: bb8, unwind: bb14]
  }
  preds [bb6]
  succs [bb8, bb14]

bb8
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:62-2258:63)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:62-2258:63)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:62-2258:63)
  3: FakeRead(ForLet(None), _17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:13-2258:19)
  4: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2259:9-2259:40)
  5: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2259:9-2259:13)
  6: _23 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2259:9-2259:13)
  7: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2259:32-2259:39)
  8: _24 = move _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2259:32-2259:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2259:9-2259:40)
      kind: _22 = hybrid::dfa::Lazy::<'_, '_>::put_state_builder(move _23, move _24) -> [return: bb9, unwind: bb13]
  }
  preds [bb7]
  succs [bb9, bb13]

bb9
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2259:39-2259:40)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2259:39-2259:40)
  2: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2259:40-2259:41)
  3: _0 = move _17
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2260:9-2260:15)
  4: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2261:5-2261:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2261:5-2261:6)
      kind: drop(_3) -> [return: bb10, unwind: bb18]
  }
  preds [bb8]
  succs [bb10, bb18]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2261:5-2261:6)
      kind: drop(_2) -> [return: bb12, unwind: bb19]
  }
  preds [bb9]
  succs [bb12, bb19]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2261:5-2261:6)
      kind: drop(_2) -> [return: bb12, unwind: bb19]
  }
  preds [bb5]
  succs [bb12, bb19]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2261:6-2261:6)
      kind: return
  }
  preds [bb10, bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2259:39-2259:40)
      kind: drop(_24) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb17]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:62-2258:63)
      kind: drop(_21) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2258:62-2258:63)
      kind: drop(_19) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb17]

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2255:43-2255:44)
      kind: drop(_15) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2261:5-2261:6)
      kind: drop(_3) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb6, bb13, bb15, bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2261:5-2261:6)
      kind: drop(_2) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb5, bb9, bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2245:5-2261:6)
      kind: resume
  }
  preds [bb10, bb11, bb18]
  succs []

