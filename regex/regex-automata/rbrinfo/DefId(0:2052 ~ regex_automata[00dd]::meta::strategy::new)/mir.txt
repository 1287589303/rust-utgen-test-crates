bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:85:9-85:12)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:85:18-85:49)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:85:18-85:22)
  3: _5 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:85:18-85:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:85:18-85:49)
      kind: _4 = meta::regex::RegexInfo::is_always_anchored_start(move _5) -> [return: bb1, unwind: bb147]
  }
  preds []
  succs [bb1, bb147]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:85:18-85:49)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:85:48-85:49)
  1: _3 = core::option::Option::<util::prefilter::Prefilter>::None
    SourceInfo(regex-automata/src/meta/strategy.rs:104:9-104:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:85:15-152:6)
      kind: goto -> bb37
  }
  preds [bb1]
  succs [bb37]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:85:48-85:49)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:105:31-105:60)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:105:31-105:44)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:105:31-105:44)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:105:31-105:35)
  5: _9 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:105:31-105:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:105:31-105:44)
      kind: _8 = meta::regex::RegexInfo::config(move _9) -> [return: bb4, unwind: bb147]
  }
  preds [bb1]
  succs [bb4, bb147]

bb4
  0: _7 = &(*_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:105:31-105:44)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:105:43-105:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:105:31-105:60)
      kind: _6 = meta::regex::Config::get_prefilter(move _7) -> [return: bb5, unwind: bb147]
  }
  preds [bb3]
  succs [bb5, bb147]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:105:59-105:60)
  1: PlaceMention(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:105:31-105:60)
  2: _10 = discriminant(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:105:31-105:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:105:19-105:28)
      kind: switchInt(move _10) -> [1: bb6, otherwise: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:105:19-105:28)
      kind: falseEdge -> [real: bb7, imaginary: bb10]
  }
  preds [bb5]
  succs [bb7, bb10]

bb7
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:105:24-105:27)
  1: _11 = ((_6 as Some).0: &util::prefilter::Prefilter)
    SourceInfo(regex-automata/src/meta/strategy.rs:105:24-105:27)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:109:14-109:25)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:109:14-109:17)
  4: _13 = &(*_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:109:14-109:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:109:14-109:25)
      kind: _12 = <util::prefilter::Prefilter as core::clone::Clone>::clone(move _13) -> [return: bb8, unwind: bb147]
  }
  preds [bb6]
  succs [bb8, bb147]

bb8
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:109:24-109:25)
  1: _3 = core::option::Option::<util::prefilter::Prefilter>::Some(move _12)
    SourceInfo(regex-automata/src/meta/strategy.rs:109:9-109:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:109:25-109:26)
      kind: drop(_12) -> [return: bb9, unwind: bb147]
  }
  preds [bb7]
  succs [bb9, bb147]

bb9
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:109:25-109:26)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:110:5-110:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:105:12-152:6)
      kind: goto -> bb36
  }
  preds [bb8]
  succs [bb36]

bb10
  0: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:110:15-110:49)
  1: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:110:15-110:28)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:110:15-110:28)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:110:15-110:19)
  4: _17 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:110:15-110:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:110:15-110:28)
      kind: _16 = meta::regex::RegexInfo::config(move _17) -> [return: bb11, unwind: bb147]
  }
  preds [bb5, bb6]
  succs [bb11, bb147]

bb11
  0: _15 = &(*_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:110:15-110:28)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:110:27-110:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:110:15-110:49)
      kind: _14 = meta::regex::Config::get_auto_prefilter(move _15) -> [return: bb12, unwind: bb147]
  }
  preds [bb10]
  succs [bb12, bb147]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:110:15-110:49)
      kind: switchInt(move _14) -> [0: bb34, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb34]

bb13
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:110:48-110:49)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:110:48-110:49)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:111:13-111:17)
  3: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:111:20-111:33)
  4: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:111:20-111:33)
  5: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:111:20-111:24)
  6: _21 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:111:20-111:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:111:20-111:33)
      kind: _20 = meta::regex::RegexInfo::config(move _21) -> [return: bb14, unwind: bb147]
  }
  preds [bb12]
  succs [bb14, bb147]

bb14
  0: _19 = &(*_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:111:20-111:33)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:111:32-111:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:111:20-111:50)
      kind: _18 = meta::regex::Config::get_match_kind(move _19) -> [return: bb15, unwind: bb147]
  }
  preds [bb13]
  succs [bb15, bb147]

bb15
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:111:49-111:50)
  1: FakeRead(ForLet(None), _18)
    SourceInfo(regex-automata/src/meta/strategy.rs:111:13-111:17)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:111:50-111:51)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:112:13-112:21)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:112:57-112:61)
  5: _23 = _18
    SourceInfo(regex-automata/src/meta/strategy.rs:112:57-112:61)
  6: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:112:63-112:67)
  7: _24 = &(*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:112:63-112:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:112:24-112:68)
      kind: _22 = util::prefilter::prefixes::<&regex_syntax::hir::Hir>(move _23, move _24) -> [return: bb16, unwind: bb147]
  }
  preds [bb14]
  succs [bb16, bb147]

bb16
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:112:67-112:68)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:112:67-112:68)
  2: FakeRead(ForLet(None), _22)
    SourceInfo(regex-automata/src/meta/strategy.rs:112:13-112:21)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:115:9-121:10)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:115:28-115:63)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:115:47-115:51)
  6: _27 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:115:47-115:51)
  7: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:115:53-115:62)
  8: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:115:53-115:62)
  9: _29 = &_22
    SourceInfo(regex-automata/src/meta/strategy.rs:115:53-115:62)
  10: _28 = &(*_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:115:53-115:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:115:28-115:63)
      kind: _26 = meta::strategy::Pre::<()>::from_prefixes(move _27, move _28) -> [return: bb17, unwind: bb146]
  }
  preds [bb15]
  succs [bb17, bb146]

bb17
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:115:62-115:63)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:115:62-115:63)
  2: PlaceMention(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:115:28-115:63)
  3: _30 = discriminant(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:115:28-115:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:115:16-115:25)
      kind: switchInt(move _30) -> [1: bb18, otherwise: bb22]
  }
  preds [bb16]
  succs [bb18, bb22]

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:115:16-115:25)
      kind: falseEdge -> [real: bb19, imaginary: bb22]
  }
  preds [bb17]
  succs [bb19, bb22]

bb19
  0: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:115:21-115:24)
  1: _31 = move ((_26 as Some).0: std::sync::Arc<dyn meta::strategy::Strategy>)
    SourceInfo(regex-automata/src/meta/strategy.rs:115:21-115:24)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:120:23-120:26)
  3: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:120:23-120:26)
  4: _34 = move _31
    SourceInfo(regex-automata/src/meta/strategy.rs:120:23-120:26)
  5: _33 = move _34 as std::sync::Arc<dyn meta::strategy::Strategy> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/meta/strategy.rs:120:23-120:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:120:25-120:26)
      kind: drop(_34) -> [return: bb20, unwind: bb143]
  }
  preds [bb18]
  succs [bb20, bb143]

bb20
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:120:25-120:26)
  1: _0 = core::result::Result::<std::sync::Arc<dyn meta::strategy::Strategy>, meta::error::BuildError>::Ok(move _33)
    SourceInfo(regex-automata/src/meta/strategy.rs:120:20-120:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:120:26-120:27)
      kind: drop(_33) -> [return: bb21, unwind: bb144]
  }
  preds [bb19]
  succs [bb21, bb144]

bb21
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:120:26-120:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:121:9-121:10)
      kind: drop(_31) -> [return: bb105, unwind: bb145]
  }
  preds [bb20]
  succs [bb105, bb145]

bb22
  0: _25 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:121:10-121:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:121:9-121:10)
      kind: drop(_26) -> [return: bb23, unwind: bb146]
  }
  preds [bb17, bb18]
  succs [bb23, bb146]

bb23
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:121:9-121:10)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:121:9-121:10)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:121:9-121:10)
  3: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:134:9-140:10)
  4: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:134:28-134:70)
  5: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:134:59-134:63)
  6: _37 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:134:59-134:63)
  7: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:134:65-134:69)
  8: _38 = &(*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:134:65-134:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:134:28-134:70)
      kind: _36 = meta::strategy::Pre::<()>::from_alternation_literals(move _37, move _38) -> [return: bb24, unwind: bb146]
  }
  preds [bb22]
  succs [bb24, bb146]

bb24
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:134:69-134:70)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:134:69-134:70)
  2: PlaceMention(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:134:28-134:70)
  3: _39 = discriminant(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:134:28-134:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:134:16-134:25)
      kind: switchInt(move _39) -> [1: bb25, otherwise: bb29]
  }
  preds [bb23]
  succs [bb25, bb29]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:134:16-134:25)
      kind: falseEdge -> [real: bb26, imaginary: bb29]
  }
  preds [bb24]
  succs [bb26, bb29]

bb26
  0: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:134:21-134:24)
  1: _40 = move ((_36 as Some).0: std::sync::Arc<dyn meta::strategy::Strategy>)
    SourceInfo(regex-automata/src/meta/strategy.rs:134:21-134:24)
  2: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:139:23-139:26)
  3: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:139:23-139:26)
  4: _43 = move _40
    SourceInfo(regex-automata/src/meta/strategy.rs:139:23-139:26)
  5: _42 = move _43 as std::sync::Arc<dyn meta::strategy::Strategy> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/meta/strategy.rs:139:23-139:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:139:25-139:26)
      kind: drop(_43) -> [return: bb27, unwind: bb140]
  }
  preds [bb25]
  succs [bb27, bb140]

bb27
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:139:25-139:26)
  1: _0 = core::result::Result::<std::sync::Arc<dyn meta::strategy::Strategy>, meta::error::BuildError>::Ok(move _42)
    SourceInfo(regex-automata/src/meta/strategy.rs:139:20-139:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:139:26-139:27)
      kind: drop(_42) -> [return: bb28, unwind: bb141]
  }
  preds [bb26]
  succs [bb28, bb141]

bb28
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:139:26-139:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:140:9-140:10)
      kind: drop(_40) -> [return: bb103, unwind: bb142]
  }
  preds [bb27]
  succs [bb103, bb142]

bb29
  0: _35 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:140:10-140:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:140:9-140:10)
      kind: drop(_36) -> [return: bb30, unwind: bb146]
  }
  preds [bb24, bb25]
  succs [bb30, bb146]

bb30
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:140:9-140:10)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:140:9-140:10)
  2: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:141:9-141:28)
  3: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:141:9-141:17)
  4: _45 = &_22
    SourceInfo(regex-automata/src/meta/strategy.rs:141:9-141:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:141:9-141:28)
      kind: _44 = regex_syntax::hir::literal::Seq::literals(move _45) -> [return: bb31, unwind: bb146]
  }
  preds [bb29]
  succs [bb31, bb146]

bb31
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:141:27-141:28)
  1: StorageLive(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:141:38-148:10)
  2: StorageLive(_47)
    SourceInfo(regex-automata/src/meta/strategy.rs:141:38-148:10)
  3: _47 = &_18
    SourceInfo(regex-automata/src/meta/strategy.rs:141:38-148:10)
  4: _46 = {closure@regex-automata/src/meta/strategy.rs:141:38: 141:47} { kind: move _47 }
    SourceInfo(regex-automata/src/meta/strategy.rs:141:38-148:10)
  5: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/strategy.rs:141:46-141:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:141:9-148:11)
      kind: _3 = core::option::Option::<&[regex_syntax::hir::literal::Literal]>::and_then::<util::prefilter::Prefilter, {closure@regex-automata/src/meta/strategy.rs:141:38: 141:47}>(move _44, move _46) -> [return: bb32, unwind: bb146]
  }
  preds [bb30]
  succs [bb32, bb146]

bb32
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:148:10-148:11)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:148:10-148:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:149:5-149:6)
      kind: drop(_22) -> [return: bb33, unwind: bb147]
  }
  preds [bb31]
  succs [bb33, bb147]

bb33
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:149:5-149:6)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:149:5-149:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:110:12-152:6)
      kind: goto -> bb35
  }
  preds [bb32]
  succs [bb35]

bb34
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:110:48-110:49)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:110:48-110:49)
  2: _3 = core::option::Option::<util::prefilter::Prefilter>::None
    SourceInfo(regex-automata/src/meta/strategy.rs:151:9-151:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:110:12-152:6)
      kind: goto -> bb35
  }
  preds [bb12]
  succs [bb35]

bb35
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:152:5-152:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:105:12-152:6)
      kind: goto -> bb36
  }
  preds [bb33, bb34]
  succs [bb36]

bb36
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:152:5-152:6)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:152:5-152:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:85:15-152:6)
      kind: goto -> bb37
  }
  preds [bb9, bb35]
  succs [bb37]

bb37
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:152:5-152:6)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/meta/strategy.rs:85:9-85:12)
  2: StorageLive(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:9-153:17)
  3: StorageLive(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:20-153:63)
  4: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:20-153:62)
  5: StorageLive(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:30-153:42)
  6: StorageLive(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:30-153:34)
  7: _52 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:30-153:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:30-153:42)
      kind: _51 = <meta::regex::RegexInfo as core::clone::Clone>::clone(move _52) -> [return: bb38, unwind: bb139]
  }
  preds [bb2, bb36]
  succs [bb38, bb139]

bb38
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:41-153:42)
  1: StorageLive(_53)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:44-153:55)
  2: StorageLive(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:44-153:47)
  3: _54 = &_3
    SourceInfo(regex-automata/src/meta/strategy.rs:153:44-153:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:44-153:55)
      kind: _53 = <core::option::Option<util::prefilter::Prefilter> as core::clone::Clone>::clone(move _54) -> [return: bb39, unwind: bb138]
  }
  preds [bb37]
  succs [bb39, bb138]

bb39
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:54-153:55)
  1: StorageLive(_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:57-153:61)
  2: _55 = &(*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:57-153:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:20-153:62)
      kind: _50 = meta::strategy::Core::new(move _51, move _53, move _55) -> [return: bb40, unwind: bb137]
  }
  preds [bb38]
  succs [bb40, bb137]

bb40
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:61-153:62)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:61-153:62)
  2: StorageDead(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:61-153:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:20-153:63)
      kind: _49 = <core::result::Result<meta::strategy::Core, meta::error::BuildError> as core::ops::Try>::branch(move _50) -> [return: bb41, unwind: bb136]
  }
  preds [bb39]
  succs [bb41, bb136]

bb41
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:62-153:63)
  1: PlaceMention(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:20-153:63)
  2: _56 = discriminant(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:20-153:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:20-153:63)
      kind: switchInt(move _56) -> [0: bb44, 1: bb43, otherwise: bb42]
  }
  preds [bb40]
  succs [bb42, bb43, bb44]

bb42
  0: FakeRead(ForMatchedPlace(None), _49)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:20-153:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:20-153:63)
      kind: unreachable
  }
  preds [bb41]
  succs []

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:62-153:63)
      kind: falseEdge -> [real: bb45, imaginary: bb44]
  }
  preds [bb41]
  succs [bb44, bb45]

bb44
  0: StorageLive(_60)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:20-153:63)
  1: _60 = move ((_49 as Continue).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:20-153:63)
  2: _48 = move _60
    SourceInfo(regex-automata/src/meta/strategy.rs:153:20-153:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:62-153:63)
      kind: drop(_60) -> [return: bb47, unwind: bb135]
  }
  preds [bb41, bb43]
  succs [bb47, bb135]

bb45
  0: StorageLive(_57)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:62-153:63)
  1: _57 = move ((_49 as Break).0: core::result::Result<core::convert::Infallible, meta::error::BuildError>)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:62-153:63)
  2: StorageLive(_59)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:62-153:63)
  3: _59 = move _57
    SourceInfo(regex-automata/src/meta/strategy.rs:153:62-153:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:20-153:63)
      kind: _0 = <core::result::Result<std::sync::Arc<dyn meta::strategy::Strategy>, meta::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, meta::error::BuildError>>>::from_residual(move _59) -> [return: bb46, unwind: bb133]
  }
  preds [bb43]
  succs [bb46, bb133]

bb46
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:62-153:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:62-153:63)
      kind: drop(_57) -> [return: bb100, unwind: bb135]
  }
  preds [bb45]
  succs [bb100, bb135]

bb47
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:62-153:63)
  1: FakeRead(ForLet(None), _48)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:9-153:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:63-153:64)
      kind: drop(_49) -> [return: bb48, unwind: bb132]
  }
  preds [bb44]
  succs [bb48, bb132]

bb48
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:63-153:64)
  1: StorageLive(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:163:12-169:6)
  2: StorageLive(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:163:18-163:44)
  3: StorageLive(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:163:39-163:43)
  4: _63 = move _48
    SourceInfo(regex-automata/src/meta/strategy.rs:163:39-163:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:163:18-163:44)
      kind: _62 = meta::strategy::ReverseAnchored::new(move _63) -> [return: bb49, unwind: bb131]
  }
  preds [bb47]
  succs [bb49, bb131]

bb49
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:163:43-163:44)
  1: PlaceMention(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:163:18-163:44)
  2: _64 = discriminant(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:163:18-163:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:163:12-163:44)
      kind: switchInt(move _64) -> [0: bb52, 1: bb51, otherwise: bb50]
  }
  preds [bb48]
  succs [bb50, bb51, bb52]

bb50
  0: FakeRead(ForMatchedPlace(None), _62)
    SourceInfo(regex-automata/src/meta/strategy.rs:163:18-163:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:163:18-163:44)
      kind: unreachable
  }
  preds [bb49]
  succs []

bb51
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:164:9-164:18)
      kind: falseEdge -> [real: bb53, imaginary: bb52]
  }
  preds [bb49]
  succs [bb52, bb53]

bb52
  0: StorageLive(_66)
    SourceInfo(regex-automata/src/meta/strategy.rs:165:12-165:14)
  1: _66 = move ((_62 as Ok).0: meta::strategy::ReverseAnchored)
    SourceInfo(regex-automata/src/meta/strategy.rs:165:12-165:14)
  2: StorageLive(_68)
    SourceInfo(regex-automata/src/meta/strategy.rs:167:23-167:35)
  3: StorageLive(_69)
    SourceInfo(regex-automata/src/meta/strategy.rs:167:23-167:35)
  4: StorageLive(_70)
    SourceInfo(regex-automata/src/meta/strategy.rs:167:32-167:34)
  5: _70 = move _66
    SourceInfo(regex-automata/src/meta/strategy.rs:167:32-167:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:167:23-167:35)
      kind: _69 = std::sync::Arc::<meta::strategy::ReverseAnchored>::new(move _70) -> [return: bb55, unwind: bb128]
  }
  preds [bb49, bb51]
  succs [bb55, bb128]

bb53
  0: StorageLive(_65)
    SourceInfo(regex-automata/src/meta/strategy.rs:164:13-164:17)
  1: _65 = move ((_62 as Err).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:164:13-164:17)
  2: _61 = move _65
    SourceInfo(regex-automata/src/meta/strategy.rs:164:22-164:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:164:25-164:26)
      kind: drop(_65) -> [return: bb54, unwind: bb130]
  }
  preds [bb51]
  succs [bb54, bb130]

bb54
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/meta/strategy.rs:164:25-164:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:163:5-163:9)
      kind: drop(_48) -> [return: bb58, unwind: bb59]
  }
  preds [bb53]
  succs [bb58, bb59]

bb55
  0: _68 = move _69 as std::sync::Arc<dyn meta::strategy::Strategy> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/meta/strategy.rs:167:23-167:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:167:34-167:35)
      kind: drop(_69) -> [return: bb56, unwind: bb126]
  }
  preds [bb52]
  succs [bb56, bb126]

bb56
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/meta/strategy.rs:167:34-167:35)
  1: StorageDead(_69)
    SourceInfo(regex-automata/src/meta/strategy.rs:167:34-167:35)
  2: _0 = core::result::Result::<std::sync::Arc<dyn meta::strategy::Strategy>, meta::error::BuildError>::Ok(move _68)
    SourceInfo(regex-automata/src/meta/strategy.rs:167:20-167:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:167:35-167:36)
      kind: drop(_68) -> [return: bb57, unwind: bb129]
  }
  preds [bb55]
  succs [bb57, bb129]

bb57
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/meta/strategy.rs:167:35-167:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:168:9-168:10)
      kind: drop(_66) -> [return: bb97, unwind: bb130]
  }
  preds [bb56]
  succs [bb97, bb130]

bb58
  0: _48 = move _61
    SourceInfo(regex-automata/src/meta/strategy.rs:163:5-163:9)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:169:5-169:6)
      kind: drop(_61) -> [return: bb60, unwind: bb130]
  }
  preds [bb54]
  succs [bb60, bb130]

bb59
  0: _48 = move _61
    SourceInfo(regex-automata/src/meta/strategy.rs:163:5-163:9)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:169:5-169:6)
      kind: drop(_61) -> [return: bb130, unwind terminate(cleanup)]
  }
  preds [bb54]
  succs [bb130]

bb60
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:169:5-169:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:169:6-169:7)
      kind: drop(_62) -> [return: bb61, unwind: bb132]
  }
  preds [bb58]
  succs [bb61, bb132]

bb61
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:169:6-169:7)
  1: StorageLive(_71)
    SourceInfo(regex-automata/src/meta/strategy.rs:170:12-176:6)
  2: StorageLive(_72)
    SourceInfo(regex-automata/src/meta/strategy.rs:170:18-170:48)
  3: StorageLive(_73)
    SourceInfo(regex-automata/src/meta/strategy.rs:170:37-170:41)
  4: _73 = move _48
    SourceInfo(regex-automata/src/meta/strategy.rs:170:37-170:41)
  5: StorageLive(_74)
    SourceInfo(regex-automata/src/meta/strategy.rs:170:43-170:47)
  6: _74 = &(*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:170:43-170:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:170:18-170:48)
      kind: _72 = meta::strategy::ReverseSuffix::new(move _73, move _74) -> [return: bb62, unwind: bb125]
  }
  preds [bb60]
  succs [bb62, bb125]

bb62
  0: StorageDead(_74)
    SourceInfo(regex-automata/src/meta/strategy.rs:170:47-170:48)
  1: StorageDead(_73)
    SourceInfo(regex-automata/src/meta/strategy.rs:170:47-170:48)
  2: PlaceMention(_72)
    SourceInfo(regex-automata/src/meta/strategy.rs:170:18-170:48)
  3: _75 = discriminant(_72)
    SourceInfo(regex-automata/src/meta/strategy.rs:170:18-170:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:170:12-170:48)
      kind: switchInt(move _75) -> [0: bb65, 1: bb64, otherwise: bb63]
  }
  preds [bb61]
  succs [bb63, bb64, bb65]

bb63
  0: FakeRead(ForMatchedPlace(None), _72)
    SourceInfo(regex-automata/src/meta/strategy.rs:170:18-170:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:170:18-170:48)
      kind: unreachable
  }
  preds [bb62]
  succs []

bb64
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:171:9-171:18)
      kind: falseEdge -> [real: bb66, imaginary: bb65]
  }
  preds [bb62]
  succs [bb65, bb66]

bb65
  0: StorageLive(_77)
    SourceInfo(regex-automata/src/meta/strategy.rs:172:12-172:14)
  1: _77 = move ((_72 as Ok).0: meta::strategy::ReverseSuffix)
    SourceInfo(regex-automata/src/meta/strategy.rs:172:12-172:14)
  2: StorageLive(_79)
    SourceInfo(regex-automata/src/meta/strategy.rs:174:23-174:35)
  3: StorageLive(_80)
    SourceInfo(regex-automata/src/meta/strategy.rs:174:23-174:35)
  4: StorageLive(_81)
    SourceInfo(regex-automata/src/meta/strategy.rs:174:32-174:34)
  5: _81 = move _77
    SourceInfo(regex-automata/src/meta/strategy.rs:174:32-174:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:174:23-174:35)
      kind: _80 = std::sync::Arc::<meta::strategy::ReverseSuffix>::new(move _81) -> [return: bb68, unwind: bb122]
  }
  preds [bb62, bb64]
  succs [bb68, bb122]

bb66
  0: StorageLive(_76)
    SourceInfo(regex-automata/src/meta/strategy.rs:171:13-171:17)
  1: _76 = move ((_72 as Err).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:171:13-171:17)
  2: _71 = move _76
    SourceInfo(regex-automata/src/meta/strategy.rs:171:22-171:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:171:25-171:26)
      kind: drop(_76) -> [return: bb67, unwind: bb124]
  }
  preds [bb64]
  succs [bb67, bb124]

bb67
  0: StorageDead(_76)
    SourceInfo(regex-automata/src/meta/strategy.rs:171:25-171:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:170:5-170:9)
      kind: drop(_48) -> [return: bb71, unwind: bb72]
  }
  preds [bb66]
  succs [bb71, bb72]

bb68
  0: _79 = move _80 as std::sync::Arc<dyn meta::strategy::Strategy> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/meta/strategy.rs:174:23-174:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:174:34-174:35)
      kind: drop(_80) -> [return: bb69, unwind: bb120]
  }
  preds [bb65]
  succs [bb69, bb120]

bb69
  0: StorageDead(_81)
    SourceInfo(regex-automata/src/meta/strategy.rs:174:34-174:35)
  1: StorageDead(_80)
    SourceInfo(regex-automata/src/meta/strategy.rs:174:34-174:35)
  2: _0 = core::result::Result::<std::sync::Arc<dyn meta::strategy::Strategy>, meta::error::BuildError>::Ok(move _79)
    SourceInfo(regex-automata/src/meta/strategy.rs:174:20-174:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:174:35-174:36)
      kind: drop(_79) -> [return: bb70, unwind: bb123]
  }
  preds [bb68]
  succs [bb70, bb123]

bb70
  0: StorageDead(_79)
    SourceInfo(regex-automata/src/meta/strategy.rs:174:35-174:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:175:9-175:10)
      kind: drop(_77) -> [return: bb95, unwind: bb124]
  }
  preds [bb69]
  succs [bb95, bb124]

bb71
  0: _48 = move _71
    SourceInfo(regex-automata/src/meta/strategy.rs:170:5-170:9)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:176:5-176:6)
      kind: drop(_71) -> [return: bb73, unwind: bb124]
  }
  preds [bb67]
  succs [bb73, bb124]

bb72
  0: _48 = move _71
    SourceInfo(regex-automata/src/meta/strategy.rs:170:5-170:9)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:176:5-176:6)
      kind: drop(_71) -> [return: bb124, unwind terminate(cleanup)]
  }
  preds [bb67]
  succs [bb124]

bb73
  0: StorageDead(_71)
    SourceInfo(regex-automata/src/meta/strategy.rs:176:5-176:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:176:6-176:7)
      kind: drop(_72) -> [return: bb74, unwind: bb132]
  }
  preds [bb71]
  succs [bb74, bb132]

bb74
  0: StorageDead(_72)
    SourceInfo(regex-automata/src/meta/strategy.rs:176:6-176:7)
  1: StorageLive(_82)
    SourceInfo(regex-automata/src/meta/strategy.rs:177:12-183:6)
  2: StorageLive(_83)
    SourceInfo(regex-automata/src/meta/strategy.rs:177:18-177:47)
  3: StorageLive(_84)
    SourceInfo(regex-automata/src/meta/strategy.rs:177:36-177:40)
  4: _84 = move _48
    SourceInfo(regex-automata/src/meta/strategy.rs:177:36-177:40)
  5: StorageLive(_85)
    SourceInfo(regex-automata/src/meta/strategy.rs:177:42-177:46)
  6: _85 = &(*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:177:42-177:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:177:18-177:47)
      kind: _83 = meta::strategy::ReverseInner::new(move _84, move _85) -> [return: bb75, unwind: bb119]
  }
  preds [bb73]
  succs [bb75, bb119]

bb75
  0: StorageDead(_85)
    SourceInfo(regex-automata/src/meta/strategy.rs:177:46-177:47)
  1: StorageDead(_84)
    SourceInfo(regex-automata/src/meta/strategy.rs:177:46-177:47)
  2: PlaceMention(_83)
    SourceInfo(regex-automata/src/meta/strategy.rs:177:18-177:47)
  3: _86 = discriminant(_83)
    SourceInfo(regex-automata/src/meta/strategy.rs:177:18-177:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:177:12-177:47)
      kind: switchInt(move _86) -> [0: bb78, 1: bb77, otherwise: bb76]
  }
  preds [bb74]
  succs [bb76, bb77, bb78]

bb76
  0: FakeRead(ForMatchedPlace(None), _83)
    SourceInfo(regex-automata/src/meta/strategy.rs:177:18-177:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:177:18-177:47)
      kind: unreachable
  }
  preds [bb75]
  succs []

bb77
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:178:9-178:18)
      kind: falseEdge -> [real: bb79, imaginary: bb78]
  }
  preds [bb75]
  succs [bb78, bb79]

bb78
  0: StorageLive(_88)
    SourceInfo(regex-automata/src/meta/strategy.rs:179:12-179:14)
  1: _88 = move ((_83 as Ok).0: meta::strategy::ReverseInner)
    SourceInfo(regex-automata/src/meta/strategy.rs:179:12-179:14)
  2: StorageLive(_90)
    SourceInfo(regex-automata/src/meta/strategy.rs:181:23-181:35)
  3: StorageLive(_91)
    SourceInfo(regex-automata/src/meta/strategy.rs:181:23-181:35)
  4: StorageLive(_92)
    SourceInfo(regex-automata/src/meta/strategy.rs:181:32-181:34)
  5: _92 = move _88
    SourceInfo(regex-automata/src/meta/strategy.rs:181:32-181:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:181:23-181:35)
      kind: _91 = std::sync::Arc::<meta::strategy::ReverseInner>::new(move _92) -> [return: bb81, unwind: bb116]
  }
  preds [bb75, bb77]
  succs [bb81, bb116]

bb79
  0: StorageLive(_87)
    SourceInfo(regex-automata/src/meta/strategy.rs:178:13-178:17)
  1: _87 = move ((_83 as Err).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:178:13-178:17)
  2: _82 = move _87
    SourceInfo(regex-automata/src/meta/strategy.rs:178:22-178:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:178:25-178:26)
      kind: drop(_87) -> [return: bb80, unwind: bb118]
  }
  preds [bb77]
  succs [bb80, bb118]

bb80
  0: StorageDead(_87)
    SourceInfo(regex-automata/src/meta/strategy.rs:178:25-178:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:177:5-177:9)
      kind: drop(_48) -> [return: bb84, unwind: bb85]
  }
  preds [bb79]
  succs [bb84, bb85]

bb81
  0: _90 = move _91 as std::sync::Arc<dyn meta::strategy::Strategy> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/meta/strategy.rs:181:23-181:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:181:34-181:35)
      kind: drop(_91) -> [return: bb82, unwind: bb114]
  }
  preds [bb78]
  succs [bb82, bb114]

bb82
  0: StorageDead(_92)
    SourceInfo(regex-automata/src/meta/strategy.rs:181:34-181:35)
  1: StorageDead(_91)
    SourceInfo(regex-automata/src/meta/strategy.rs:181:34-181:35)
  2: _0 = core::result::Result::<std::sync::Arc<dyn meta::strategy::Strategy>, meta::error::BuildError>::Ok(move _90)
    SourceInfo(regex-automata/src/meta/strategy.rs:181:20-181:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:181:35-181:36)
      kind: drop(_90) -> [return: bb83, unwind: bb117]
  }
  preds [bb81]
  succs [bb83, bb117]

bb83
  0: StorageDead(_90)
    SourceInfo(regex-automata/src/meta/strategy.rs:181:35-181:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:182:9-182:10)
      kind: drop(_88) -> [return: bb93, unwind: bb118]
  }
  preds [bb82]
  succs [bb93, bb118]

bb84
  0: _48 = move _82
    SourceInfo(regex-automata/src/meta/strategy.rs:177:5-177:9)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:183:5-183:6)
      kind: drop(_82) -> [return: bb86, unwind: bb118]
  }
  preds [bb80]
  succs [bb86, bb118]

bb85
  0: _48 = move _82
    SourceInfo(regex-automata/src/meta/strategy.rs:177:5-177:9)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:183:5-183:6)
      kind: drop(_82) -> [return: bb118, unwind terminate(cleanup)]
  }
  preds [bb80]
  succs [bb118]

bb86
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/meta/strategy.rs:183:5-183:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:183:6-183:7)
      kind: drop(_83) -> [return: bb87, unwind: bb132]
  }
  preds [bb84]
  succs [bb87, bb132]

bb87
  0: StorageDead(_83)
    SourceInfo(regex-automata/src/meta/strategy.rs:183:6-183:7)
  1: StorageLive(_93)
    SourceInfo(regex-automata/src/meta/strategy.rs:185:8-185:22)
  2: StorageLive(_94)
    SourceInfo(regex-automata/src/meta/strategy.rs:185:8-185:22)
  3: StorageLive(_95)
    SourceInfo(regex-automata/src/meta/strategy.rs:185:17-185:21)
  4: _95 = move _48
    SourceInfo(regex-automata/src/meta/strategy.rs:185:17-185:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:185:8-185:22)
      kind: _94 = std::sync::Arc::<meta::strategy::Core>::new(move _95) -> [return: bb88, unwind: bb113]
  }
  preds [bb86]
  succs [bb88, bb113]

bb88
  0: _93 = move _94 as std::sync::Arc<dyn meta::strategy::Strategy> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/meta/strategy.rs:185:8-185:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:185:21-185:22)
      kind: drop(_94) -> [return: bb89, unwind: bb111]
  }
  preds [bb87]
  succs [bb89, bb111]

bb89
  0: StorageDead(_95)
    SourceInfo(regex-automata/src/meta/strategy.rs:185:21-185:22)
  1: StorageDead(_94)
    SourceInfo(regex-automata/src/meta/strategy.rs:185:21-185:22)
  2: _0 = core::result::Result::<std::sync::Arc<dyn meta::strategy::Strategy>, meta::error::BuildError>::Ok(move _93)
    SourceInfo(regex-automata/src/meta/strategy.rs:185:5-185:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:185:22-185:23)
      kind: drop(_93) -> [return: bb90, unwind: bb132]
  }
  preds [bb88]
  succs [bb90, bb132]

bb90
  0: StorageDead(_93)
    SourceInfo(regex-automata/src/meta/strategy.rs:185:22-185:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:186:1-186:2)
      kind: drop(_48) -> [return: bb91, unwind: bb139]
  }
  preds [bb89]
  succs [bb91, bb139]

bb91
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:186:1-186:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:186:1-186:2)
      kind: drop(_3) -> [return: bb92, unwind: bb147]
  }
  preds [bb90]
  succs [bb92, bb147]

bb92
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:186:1-186:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:186:2-186:2)
      kind: goto -> bb110
  }
  preds [bb91]
  succs [bb110]

bb93
  0: StorageDead(_88)
    SourceInfo(regex-automata/src/meta/strategy.rs:182:9-182:10)
  1: StorageDead(_82)
    SourceInfo(regex-automata/src/meta/strategy.rs:183:5-183:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:183:6-183:7)
      kind: drop(_83) -> [return: bb94, unwind: bb132]
  }
  preds [bb83]
  succs [bb94, bb132]

bb94
  0: StorageDead(_83)
    SourceInfo(regex-automata/src/meta/strategy.rs:183:6-183:7)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb99
  }
  preds [bb93]
  succs [bb99]

bb95
  0: StorageDead(_77)
    SourceInfo(regex-automata/src/meta/strategy.rs:175:9-175:10)
  1: StorageDead(_71)
    SourceInfo(regex-automata/src/meta/strategy.rs:176:5-176:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:176:6-176:7)
      kind: drop(_72) -> [return: bb96, unwind: bb132]
  }
  preds [bb70]
  succs [bb96, bb132]

bb96
  0: StorageDead(_72)
    SourceInfo(regex-automata/src/meta/strategy.rs:176:6-176:7)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb99
  }
  preds [bb95]
  succs [bb99]

bb97
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/meta/strategy.rs:168:9-168:10)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:169:5-169:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:169:6-169:7)
      kind: drop(_62) -> [return: bb98, unwind: bb132]
  }
  preds [bb57]
  succs [bb98, bb132]

bb98
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:169:6-169:7)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb99
  }
  preds [bb97]
  succs [bb99]

bb99
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:186:1-186:2)
      kind: drop(_48) -> [return: bb102, unwind: bb139]
  }
  preds [bb94, bb96, bb98]
  succs [bb102, bb139]

bb100
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:62-153:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:63-153:64)
      kind: drop(_49) -> [return: bb101, unwind: bb139]
  }
  preds [bb46]
  succs [bb101, bb139]

bb101
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:153:63-153:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb102
  }
  preds [bb100]
  succs [bb102]

bb102
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:186:1-186:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:186:1-186:2)
      kind: drop(_3) -> [return: bb109, unwind: bb147]
  }
  preds [bb99, bb101]
  succs [bb109, bb147]

bb103
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:140:9-140:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:140:9-140:10)
      kind: drop(_36) -> [return: bb104, unwind: bb146]
  }
  preds [bb28]
  succs [bb104, bb146]

bb104
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:140:9-140:10)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:140:9-140:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb107
  }
  preds [bb103]
  succs [bb107]

bb105
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:121:9-121:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:121:9-121:10)
      kind: drop(_26) -> [return: bb106, unwind: bb146]
  }
  preds [bb21]
  succs [bb106, bb146]

bb106
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:121:9-121:10)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:121:9-121:10)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:121:9-121:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb107
  }
  preds [bb105]
  succs [bb107]

bb107
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:149:5-149:6)
      kind: drop(_22) -> [return: bb108, unwind: bb147]
  }
  preds [bb104, bb106]
  succs [bb108, bb147]

bb108
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:149:5-149:6)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:149:5-149:6)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:152:5-152:6)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:152:5-152:6)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:152:5-152:6)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:152:5-152:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb109
  }
  preds [bb107]
  succs [bb109]

bb109
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:186:1-186:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:186:2-186:2)
      kind: goto -> bb110
  }
  preds [bb102, bb108]
  succs [bb110]

bb110
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:186:2-186:2)
      kind: return
  }
  preds [bb92, bb109]
  succs []

bb111
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:185:21-185:22)
      kind: drop(_95) -> [return: bb112, unwind terminate(cleanup)]
  }
  preds [bb88]
  succs [bb112]

bb112
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:185:22-185:23)
      kind: drop(_93) -> [return: bb132, unwind terminate(cleanup)]
  }
  preds [bb111]
  succs [bb132]

bb113
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:185:21-185:22)
      kind: drop(_95) -> [return: bb132, unwind terminate(cleanup)]
  }
  preds [bb87]
  succs [bb132]

bb114
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:181:34-181:35)
      kind: drop(_92) -> [return: bb115, unwind terminate(cleanup)]
  }
  preds [bb81]
  succs [bb115]

bb115
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:181:35-181:36)
      kind: drop(_90) -> [return: bb117, unwind terminate(cleanup)]
  }
  preds [bb114]
  succs [bb117]

bb116
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:181:34-181:35)
      kind: drop(_92) -> [return: bb117, unwind terminate(cleanup)]
  }
  preds [bb78]
  succs [bb117]

bb117
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:182:9-182:10)
      kind: drop(_88) -> [return: bb118, unwind terminate(cleanup)]
  }
  preds [bb82, bb115, bb116]
  succs [bb118]

bb118
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:183:6-183:7)
      kind: drop(_83) -> [return: bb132, unwind terminate(cleanup)]
  }
  preds [bb79, bb83, bb84, bb85, bb117]
  succs [bb132]

bb119
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:177:46-177:47)
      kind: drop(_84) -> [return: bb132, unwind terminate(cleanup)]
  }
  preds [bb74]
  succs [bb132]

bb120
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:174:34-174:35)
      kind: drop(_81) -> [return: bb121, unwind terminate(cleanup)]
  }
  preds [bb68]
  succs [bb121]

bb121
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:174:35-174:36)
      kind: drop(_79) -> [return: bb123, unwind terminate(cleanup)]
  }
  preds [bb120]
  succs [bb123]

bb122
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:174:34-174:35)
      kind: drop(_81) -> [return: bb123, unwind terminate(cleanup)]
  }
  preds [bb65]
  succs [bb123]

bb123
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:175:9-175:10)
      kind: drop(_77) -> [return: bb124, unwind terminate(cleanup)]
  }
  preds [bb69, bb121, bb122]
  succs [bb124]

bb124
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:176:6-176:7)
      kind: drop(_72) -> [return: bb132, unwind terminate(cleanup)]
  }
  preds [bb66, bb70, bb71, bb72, bb123]
  succs [bb132]

bb125
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:170:47-170:48)
      kind: drop(_73) -> [return: bb132, unwind terminate(cleanup)]
  }
  preds [bb61]
  succs [bb132]

bb126
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:167:34-167:35)
      kind: drop(_70) -> [return: bb127, unwind terminate(cleanup)]
  }
  preds [bb55]
  succs [bb127]

bb127
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:167:35-167:36)
      kind: drop(_68) -> [return: bb129, unwind terminate(cleanup)]
  }
  preds [bb126]
  succs [bb129]

bb128
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:167:34-167:35)
      kind: drop(_70) -> [return: bb129, unwind terminate(cleanup)]
  }
  preds [bb52]
  succs [bb129]

bb129
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:168:9-168:10)
      kind: drop(_66) -> [return: bb130, unwind terminate(cleanup)]
  }
  preds [bb56, bb127, bb128]
  succs [bb130]

bb130
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:169:6-169:7)
      kind: drop(_62) -> [return: bb132, unwind terminate(cleanup)]
  }
  preds [bb53, bb57, bb58, bb59, bb129]
  succs [bb132]

bb131
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:163:43-163:44)
      kind: drop(_63) -> [return: bb132, unwind terminate(cleanup)]
  }
  preds [bb48]
  succs [bb132]

bb132
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:186:1-186:2)
      kind: drop(_48) -> [return: bb139, unwind terminate(cleanup)]
  }
  preds [bb47, bb60, bb73, bb86, bb89, bb93, bb95, bb97, bb112, bb113, bb118, bb119, bb124, bb125, bb130, bb131]
  succs [bb139]

bb133
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:62-153:63)
      kind: drop(_59) -> [return: bb134, unwind terminate(cleanup)]
  }
  preds [bb45]
  succs [bb134]

bb134
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:62-153:63)
      kind: drop(_57) -> [return: bb135, unwind terminate(cleanup)]
  }
  preds [bb133]
  succs [bb135]

bb135
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:63-153:64)
      kind: drop(_49) -> [return: bb139, unwind terminate(cleanup)]
  }
  preds [bb44, bb46, bb134]
  succs [bb139]

bb136
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:62-153:63)
      kind: drop(_50) -> [return: bb139, unwind terminate(cleanup)]
  }
  preds [bb40]
  succs [bb139]

bb137
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:61-153:62)
      kind: drop(_53) -> [return: bb138, unwind terminate(cleanup)]
  }
  preds [bb39]
  succs [bb138]

bb138
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:153:61-153:62)
      kind: drop(_51) -> [return: bb139, unwind terminate(cleanup)]
  }
  preds [bb38, bb137]
  succs [bb139]

bb139
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:186:1-186:2)
      kind: drop(_3) -> [return: bb147, unwind terminate(cleanup)]
  }
  preds [bb37, bb90, bb99, bb100, bb132, bb135, bb136, bb138]
  succs [bb147]

bb140
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:139:26-139:27)
      kind: drop(_42) -> [return: bb141, unwind terminate(cleanup)]
  }
  preds [bb26]
  succs [bb141]

bb141
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:140:9-140:10)
      kind: drop(_40) -> [return: bb142, unwind terminate(cleanup)]
  }
  preds [bb27, bb140]
  succs [bb142]

bb142
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:140:9-140:10)
      kind: drop(_36) -> [return: bb146, unwind terminate(cleanup)]
  }
  preds [bb28, bb141]
  succs [bb146]

bb143
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:120:26-120:27)
      kind: drop(_33) -> [return: bb144, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb144]

bb144
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:121:9-121:10)
      kind: drop(_31) -> [return: bb145, unwind terminate(cleanup)]
  }
  preds [bb20, bb143]
  succs [bb145]

bb145
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:121:9-121:10)
      kind: drop(_26) -> [return: bb146, unwind terminate(cleanup)]
  }
  preds [bb21, bb144]
  succs [bb146]

bb146
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:149:5-149:6)
      kind: drop(_22) -> [return: bb147, unwind terminate(cleanup)]
  }
  preds [bb16, bb22, bb23, bb29, bb30, bb31, bb103, bb105, bb142, bb145]
  succs [bb147]

bb147
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:78:1-186:2)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb7, bb8, bb10, bb11, bb13, bb14, bb15, bb32, bb91, bb102, bb107, bb139, bb146]
  succs []

