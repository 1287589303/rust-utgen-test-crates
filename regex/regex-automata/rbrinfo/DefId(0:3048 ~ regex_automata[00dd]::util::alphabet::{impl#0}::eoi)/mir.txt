bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/alphabet.rs:118:9-122:10)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/alphabet.rs:119:13-119:42)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/alphabet.rs:119:13-119:35)
  3: _4 = _1
    SourceInfo(regex-automata/src/util/alphabet.rs:119:13-119:35)
  4: _3 = Le(move _4, const 256_usize)
    SourceInfo(regex-automata/src/util/alphabet.rs:119:13-119:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:119:13-119:42)
      kind: switchInt(move _3) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/alphabet.rs:119:41-119:42)
  1: _2 = const ()
    SourceInfo(regex-automata/src/util/alphabet.rs:122:10-122:10)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/util/alphabet.rs:122:9-122:10)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/util/alphabet.rs:122:9-122:10)
  4: StorageLive(_17)
    SourceInfo(regex-automata/src/util/alphabet.rs:123:14-123:75)
  5: StorageLive(_18)
    SourceInfo(regex-automata/src/util/alphabet.rs:123:28-123:74)
  6: StorageLive(_19)
    SourceInfo(regex-automata/src/util/alphabet.rs:123:28-123:65)
  7: StorageLive(_20)
    SourceInfo(regex-automata/src/util/alphabet.rs:123:42-123:64)
  8: _20 = _1
    SourceInfo(regex-automata/src/util/alphabet.rs:123:42-123:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:123:28-123:65)
      kind: _19 = <u16 as core::convert::TryFrom<usize>>::try_from(move _20) -> [return: bb5, unwind: bb7]
  }
  preds [bb0]
  succs [bb5, bb7]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/alphabet.rs:119:41-119:42)
  1: StorageLive(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  2: StorageLive(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/util/alphabet.rs:120:13-120:77)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/util/alphabet.rs:120:13-120:77)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/util/alphabet.rs:120:13-120:77)
  6: _10 = [const "max number of byte-based equivalent classes is 256, but got "]
    SourceInfo(regex-automata/src/util/alphabet.rs:120:13-120:77)
  7: _9 = &_10
    SourceInfo(regex-automata/src/util/alphabet.rs:120:13-120:77)
  8: _8 = &(*_9)
    SourceInfo(regex-automata/src/util/alphabet.rs:120:13-120:77)
  9: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  10: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  12: StorageLive(_14)
    SourceInfo(regex-automata/src/util/alphabet.rs:120:74-120:76)
  13: StorageLive(_15)
    SourceInfo(regex-automata/src/util/alphabet.rs:121:13-121:35)
  14: StorageLive(_16)
    SourceInfo(regex-automata/src/util/alphabet.rs:121:13-121:35)
  15: _16 = &_1
    SourceInfo(regex-automata/src/util/alphabet.rs:121:13-121:35)
  16: _15 = &(*_16)
    SourceInfo(regex-automata/src/util/alphabet.rs:121:13-121:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:120:74-120:76)
      kind: _14 = core::fmt::rt::Argument::<'_>::new_display::<usize>(move _15) -> [return: bb3, unwind: bb7]
  }
  preds [bb0]
  succs [bb3, bb7]

bb3
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/alphabet.rs:120:75-120:76)
  1: _13 = [move _14]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: _12 = &_13
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: _11 = &(*_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _7 = core::fmt::Arguments::<'_>::new_v1::<1, 1>(move _8, move _11) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _6 = core::panicking::panic_fmt(move _7) -> bb7
  }
  preds [bb3]
  succs [bb7]

bb5
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/util/alphabet.rs:123:64-123:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:123:28-123:74)
      kind: _18 = core::result::Result::<u16, core::num::TryFromIntError>::unwrap(move _19) -> [return: bb6, unwind: bb7]
  }
  preds [bb1]
  succs [bb6, bb7]

bb6
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/util/alphabet.rs:123:73-123:74)
  1: _17 = util::alphabet::UnitKind::EOI(move _18)
    SourceInfo(regex-automata/src/util/alphabet.rs:123:14-123:75)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/util/alphabet.rs:123:74-123:75)
  3: _0 = util::alphabet::Unit(move _17)
    SourceInfo(regex-automata/src/util/alphabet.rs:123:9-123:76)
  4: StorageDead(_17)
    SourceInfo(regex-automata/src/util/alphabet.rs:123:75-123:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:124:6-124:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:117:5-124:6)
      kind: resume
  }
  preds [bb1, bb2, bb3, bb4, bb5]
  succs []

