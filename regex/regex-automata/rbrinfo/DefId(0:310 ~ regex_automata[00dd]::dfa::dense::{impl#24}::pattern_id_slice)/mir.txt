bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:13-4640:18)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:21-4640:51)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:21-4640:34)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:21-4640:25)
  4: _6 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:21-4640:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4640:21-4640:34)
      kind: _5 = dfa::dense::MatchStates::<T>::slices(move _6) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:33-4640:34)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:35-4640:50)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:35-4640:46)
  3: _8 = _2
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:35-4640:46)
  4: _9 = MulWithOverflow(_8, const 2_usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:35-4640:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4640:35-4640:50)
      kind: assert(!move (_9.1: bool), "attempt to compute `{} * {}`, which would overflow", move _8, const 2_usize) -> [success: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: _7 = move (_9.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:35-4640:50)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:49-4640:50)
  2: _10 = Len((*_5))
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:21-4640:51)
  3: _11 = Lt(_7, _10)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:21-4640:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4640:21-4640:51)
      kind: assert(move _11, "index out of bounds: the length is {} but the index is {}", move _10, _7) -> [success: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: _4 = &(*_5)[_7]
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:21-4640:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4640:21-4640:62)
      kind: _3 = util::primitives::PatternID::as_usize(move _4) -> [return: bb4, unwind: bb9]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:61-4640:62)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:13-4640:18)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:62-4640:63)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:4640:62-4640:63)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:4641:13-4641:16)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:4641:19-4641:23)
  6: _13 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:4641:19-4641:23)
  7: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/dense.rs:4641:36-4641:47)
  8: _14 = _2
    SourceInfo(regex-automata/src/dfa/dense.rs:4641:36-4641:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4641:19-4641:48)
      kind: _12 = dfa::dense::MatchStates::<T>::pattern_len(move _13, move _14) -> [return: bb5, unwind: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/dense.rs:4641:47-4641:48)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:4641:47-4641:48)
  2: FakeRead(ForLet(None), _12)
    SourceInfo(regex-automata/src/dfa/dense.rs:4641:13-4641:16)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:9-4642:48)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:28-4642:48)
  5: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:10-4642:28)
  6: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:10-4642:28)
  7: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:10-4642:14)
  8: _19 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:10-4642:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4642:10-4642:28)
      kind: _18 = dfa::dense::MatchStates::<T>::pattern_ids(move _19) -> [return: bb6, unwind: bb9]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: _17 = &(*_18)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:10-4642:28)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:27-4642:28)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:29-4642:47)
  3: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:29-4642:34)
  4: _21 = _3
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:29-4642:34)
  5: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:36-4642:47)
  6: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:36-4642:41)
  7: _23 = _3
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:36-4642:41)
  8: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:44-4642:47)
  9: _24 = _12
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:44-4642:47)
  10: _25 = AddWithOverflow(_23, _24)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:36-4642:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4642:36-4642:47)
      kind: assert(!move (_25.1: bool), "attempt to compute `{} + {}`, which would overflow", move _23, move _24) -> [success: bb7, unwind: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: _22 = move (_25.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:36-4642:47)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:46-4642:47)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:46-4642:47)
  3: _20 = core::ops::Range::<usize> { start: move _21, end: move _22 }
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:29-4642:47)
  4: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:46-4642:47)
  5: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:46-4642:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4642:28-4642:48)
      kind: _16 = <[util::primitives::PatternID] as core::ops::Index<core::ops::Range<usize>>>::index(move _17, move _20) -> [return: bb8, unwind: bb9]
  }
  preds [bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:47-4642:48)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:47-4642:48)
  2: _15 = &(*_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:9-4642:48)
  3: _0 = &(*_15)
    SourceInfo(regex-automata/src/dfa/dense.rs:4642:9-4642:48)
  4: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:4643:5-4643:6)
  5: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:4643:5-4643:6)
  6: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/dense.rs:4643:5-4643:6)
  7: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:4643:5-4643:6)
  8: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/dense.rs:4643:5-4643:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4643:6-4643:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4639:5-4643:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb7]
  succs []

