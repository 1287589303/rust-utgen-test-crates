bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/util/captures.rs:1905:9-1907:10)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/util/captures.rs:1905:12-1905:46)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/util/captures.rs:1905:12-1905:23)
  3: _6 = _3
    SourceInfo(regex-automata/src/util/captures.rs:1905:12-1905:23)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/util/captures.rs:1905:27-1905:46)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/util/captures.rs:1905:27-1905:31)
  6: _8 = &(*_1)
    SourceInfo(regex-automata/src/util/captures.rs:1905:27-1905:31)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/util/captures.rs:1905:42-1905:45)
  8: _9 = _2
    SourceInfo(regex-automata/src/util/captures.rs:1905:42-1905:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1905:27-1905:46)
      kind: _7 = util::captures::GroupInfo::group_len(move _8, move _9) -> [return: bb1, unwind: bb16]
  }
  preds []
  succs [bb1, bb16]

bb1
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/captures.rs:1905:45-1905:46)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/captures.rs:1905:45-1905:46)
  2: _5 = Ge(move _6, move _7)
    SourceInfo(regex-automata/src/util/captures.rs:1905:12-1905:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1905:12-1905:46)
      kind: switchInt(move _5) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/captures.rs:1905:45-1905:46)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/util/captures.rs:1905:45-1905:46)
  2: _0 = core::option::Option::<usize>::None
    SourceInfo(regex-automata/src/util/captures.rs:1906:20-1906:24)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/util/captures.rs:1907:9-1907:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/util/captures.rs:1907:9-1907:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1921:6-1921:6)
      kind: goto -> bb15
  }
  preds [bb1]
  succs [bb15]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/captures.rs:1905:45-1905:46)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/util/captures.rs:1905:45-1905:46)
  2: _4 = const ()
    SourceInfo(regex-automata/src/util/captures.rs:1907:10-1907:10)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/util/captures.rs:1907:9-1907:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/util/captures.rs:1907:9-1907:10)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/util/captures.rs:1912:12-1912:28)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/util/captures.rs:1912:12-1912:23)
  7: _12 = _3
    SourceInfo(regex-automata/src/util/captures.rs:1912:12-1912:23)
  8: _11 = Eq(move _12, const 0_usize)
    SourceInfo(regex-automata/src/util/captures.rs:1912:12-1912:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1912:12-1912:28)
      kind: switchInt(move _11) -> [0: bb5, otherwise: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/captures.rs:1912:27-1912:28)
  1: StorageLive(_13)
    SourceInfo(regex-automata/src/util/captures.rs:1913:18-1913:36)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/util/captures.rs:1913:18-1913:32)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/util/captures.rs:1913:18-1913:21)
  4: _15 = &_2
    SourceInfo(regex-automata/src/util/captures.rs:1913:18-1913:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1913:18-1913:32)
      kind: _14 = util::primitives::PatternID::as_usize(move _15) -> [return: bb6, unwind: bb16]
  }
  preds [bb3]
  succs [bb6, bb16]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/captures.rs:1912:27-1912:28)
  1: StorageLive(_18)
    SourceInfo(regex-automata/src/util/captures.rs:1918:48-1918:53)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/util/captures.rs:1918:30-1918:48)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/util/captures.rs:1918:30-1918:48)
  4: StorageLive(_21)
    SourceInfo(regex-automata/src/util/captures.rs:1918:30-1918:36)
  5: _21 = &((*_1).0: std::sync::Arc<util::captures::GroupInfoInner>)
    SourceInfo(regex-automata/src/util/captures.rs:1918:30-1918:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1918:30-1918:48)
      kind: _20 = <std::sync::Arc<util::captures::GroupInfoInner> as core::ops::Deref>::deref(move _21) -> [return: bb8, unwind: bb16]
  }
  preds [bb3]
  succs [bb8, bb16]

bb6
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/captures.rs:1913:31-1913:32)
  1: _16 = MulWithOverflow(_14, const 2_usize)
    SourceInfo(regex-automata/src/util/captures.rs:1913:18-1913:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1913:18-1913:36)
      kind: assert(!move (_16.1: bool), "attempt to compute `{} * {}`, which would overflow", move _14, const 2_usize) -> [success: bb7, unwind: bb16]
  }
  preds [bb4]
  succs [bb7, bb16]

bb7
  0: _13 = move (_16.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:1913:18-1913:36)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/util/captures.rs:1913:35-1913:36)
  2: _0 = core::option::Option::<usize>::Some(move _13)
    SourceInfo(regex-automata/src/util/captures.rs:1913:13-1913:37)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/util/captures.rs:1913:36-1913:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1912:9-1920:10)
      kind: goto -> bb14
  }
  preds [bb6]
  succs [bb14]

bb8
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/util/captures.rs:1918:35-1918:36)
  1: _19 = &((*_20).0: std::vec::Vec<(util::primitives::SmallIndex, util::primitives::SmallIndex)>)
    SourceInfo(regex-automata/src/util/captures.rs:1918:30-1918:48)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/util/captures.rs:1918:49-1918:52)
  3: _22 = _2
    SourceInfo(regex-automata/src/util/captures.rs:1918:49-1918:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1918:48-1918:53)
      kind: _18 = <std::vec::Vec<(util::primitives::SmallIndex, util::primitives::SmallIndex)> as core::ops::Index<util::primitives::PatternID>>::index(move _19, move _22) -> [return: bb9, unwind: bb16]
  }
  preds [bb5]
  succs [bb9, bb16]

bb9
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/util/captures.rs:1918:52-1918:53)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/util/captures.rs:1918:52-1918:53)
  2: PlaceMention((*_18))
    SourceInfo(regex-automata/src/util/captures.rs:1918:30-1918:53)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/util/captures.rs:1918:18-1918:23)
  4: _17 = ((*_18).0: util::primitives::SmallIndex)
    SourceInfo(regex-automata/src/util/captures.rs:1918:18-1918:23)
  5: StorageDead(_20)
    SourceInfo(regex-automata/src/util/captures.rs:1918:53-1918:54)
  6: StorageDead(_18)
    SourceInfo(regex-automata/src/util/captures.rs:1918:53-1918:54)
  7: StorageLive(_23)
    SourceInfo(regex-automata/src/util/captures.rs:1919:18-1919:60)
  8: StorageLive(_24)
    SourceInfo(regex-automata/src/util/captures.rs:1919:18-1919:34)
  9: StorageLive(_25)
    SourceInfo(regex-automata/src/util/captures.rs:1919:18-1919:23)
  10: _25 = &_17
    SourceInfo(regex-automata/src/util/captures.rs:1919:18-1919:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1919:18-1919:34)
      kind: _24 = util::primitives::SmallIndex::as_usize(move _25) -> [return: bb10, unwind: bb16]
  }
  preds [bb8]
  succs [bb10, bb16]

bb10
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/util/captures.rs:1919:33-1919:34)
  1: StorageLive(_26)
    SourceInfo(regex-automata/src/util/captures.rs:1919:37-1919:60)
  2: StorageLive(_27)
    SourceInfo(regex-automata/src/util/captures.rs:1919:38-1919:55)
  3: StorageLive(_28)
    SourceInfo(regex-automata/src/util/captures.rs:1919:39-1919:50)
  4: _28 = _3
    SourceInfo(regex-automata/src/util/captures.rs:1919:39-1919:50)
  5: _29 = SubWithOverflow(_28, const 1_usize)
    SourceInfo(regex-automata/src/util/captures.rs:1919:38-1919:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1919:38-1919:55)
      kind: assert(!move (_29.1: bool), "attempt to compute `{} - {}`, which would overflow", move _28, const 1_usize) -> [success: bb11, unwind: bb16]
  }
  preds [bb9]
  succs [bb11, bb16]

bb11
  0: _27 = move (_29.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:1919:38-1919:55)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/util/captures.rs:1919:54-1919:55)
  2: _30 = MulWithOverflow(_27, const 2_usize)
    SourceInfo(regex-automata/src/util/captures.rs:1919:37-1919:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1919:37-1919:60)
      kind: assert(!move (_30.1: bool), "attempt to compute `{} * {}`, which would overflow", move _27, const 2_usize) -> [success: bb12, unwind: bb16]
  }
  preds [bb10]
  succs [bb12, bb16]

bb12
  0: _26 = move (_30.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:1919:37-1919:60)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/util/captures.rs:1919:59-1919:60)
  2: _31 = AddWithOverflow(_24, _26)
    SourceInfo(regex-automata/src/util/captures.rs:1919:18-1919:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1919:18-1919:60)
      kind: assert(!move (_31.1: bool), "attempt to compute `{} + {}`, which would overflow", move _24, move _26) -> [success: bb13, unwind: bb16]
  }
  preds [bb11]
  succs [bb13, bb16]

bb13
  0: _23 = move (_31.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:1919:18-1919:60)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/util/captures.rs:1919:59-1919:60)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/util/captures.rs:1919:59-1919:60)
  3: _0 = core::option::Option::<usize>::Some(move _23)
    SourceInfo(regex-automata/src/util/captures.rs:1919:13-1919:61)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/util/captures.rs:1919:60-1919:61)
  5: StorageDead(_17)
    SourceInfo(regex-automata/src/util/captures.rs:1920:9-1920:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1912:9-1920:10)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/util/captures.rs:1920:9-1920:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1921:6-1921:6)
      kind: goto -> bb15
  }
  preds [bb7, bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1921:6-1921:6)
      kind: return
  }
  preds [bb2, bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:1904:5-1921:6)
      kind: resume
  }
  preds [bb0, bb4, bb5, bb6, bb8, bb9, bb10, bb11, bb12]
  succs []

