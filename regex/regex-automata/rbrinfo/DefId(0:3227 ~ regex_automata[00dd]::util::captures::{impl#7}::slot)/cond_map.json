{
  "regex-automata/src/util/captures.rs:1919:37:1919:60": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "((group_index - 1) * 2)",
          "lhs": "(group_index - 1)",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/captures.rs:1912:12:1912:28": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "group_index == 0",
          "lhs": "group_index",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/captures.rs:1919:18:1919:60": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "start.as_usize() + ((group_index - 1) * 2)",
          "lhs": "start.as_usize()",
          "rhs": "((group_index - 1) * 2)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/util/captures.rs:1905:12:1905:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "group_index >= self.group_len(pid)",
          "lhs": "group_index",
          "rhs": "self.group_len(pid)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/util/captures.rs:1919:38:1919:55": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(group_index - 1)",
          "lhs": "group_index",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/captures.rs:1913:18:1913:36": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "pid.as_usize() * 2",
          "lhs": "pid.as_usize()",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ]
}