bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:9-96:15)
  1: _4 = &((*_1).0: nfa::thompson::pikevm::PikeVM)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:9-96:15)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:25-96:50)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:25-96:50)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:25-96:41)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:25-96:32)
  6: _8 = &mut ((*_2).0: core::option::Option<nfa::thompson::pikevm::Cache>)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:25-96:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:96:25-96:41)
      kind: _7 = core::option::Option::<nfa::thompson::pikevm::Cache>::as_mut(move _8) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:40-96:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:96:25-96:50)
      kind: _6 = core::option::Option::<&mut nfa::thompson::pikevm::Cache>::unwrap(move _7) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: _5 = &mut (*_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:25-96:50)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:49-96:50)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:52-96:65)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:52-96:57)
  4: _10 = &(*_3)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:52-96:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:96:52-96:65)
      kind: _9 = <util::search::Input<'_> as core::clone::Clone>::clone(move _10) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:64-96:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:96:9-96:66)
      kind: _0 = nfa::thompson::pikevm::PikeVM::is_match::<'_, util::search::Input<'_>>(move _4, move _5, move _9) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:65-96:66)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:65-96:66)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:96:65-96:66)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:97:5-97:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:97:6-97:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:91:5-97:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

