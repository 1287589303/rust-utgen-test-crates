bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:135:15-135:26)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:135:15-135:19)
  2: _3 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:135:15-135:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/error.rs:135:15-135:26)
      kind: _2 = nfa::thompson::error::BuildError::kind(move _3) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:135:25-135:26)
  1: PlaceMention(_2)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:135:15-135:26)
  2: _4 = discriminant((*_2))
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:135:15-135:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/error.rs:135:9-135:26)
      kind: switchInt(move _4) -> [0: bb3, 1: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: _0 = core::option::Option::<&dyn core::error::Error>::None
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:139:18-139:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/error.rs:139:18-139:22)
      kind: goto -> bb7
  }
  preds [bb1, bb4]
  succs [bb7]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/error.rs:137:13-137:44)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/error.rs:138:13-138:46)
      kind: falseEdge -> [real: bb6, imaginary: bb2]
  }
  preds [bb1, bb3]
  succs [bb2, bb6]

bb5
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:137:36-137:43)
  1: _5 = &(((*_2) as Syntax).0: regex_syntax::Error)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:137:36-137:43)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:137:53-137:56)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:137:53-137:56)
  4: _7 = &(*_5)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:137:53-137:56)
  5: _6 = move _7 as &dyn core::error::Error (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:137:53-137:56)
  6: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:137:55-137:56)
  7: _0 = core::option::Option::<&dyn core::error::Error>::Some(move _6)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:137:48-137:57)
  8: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:137:56-137:57)
  9: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:137:56-137:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/error.rs:137:56-137:57)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb6
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:138:38-138:45)
  1: _8 = &(((*_2) as Captures).0: util::captures::GroupInfoError)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:138:38-138:45)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:138:55-138:58)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:138:55-138:58)
  4: _10 = &(*_8)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:138:55-138:58)
  5: _9 = move _10 as &dyn core::error::Error (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:138:55-138:58)
  6: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:138:57-138:58)
  7: _0 = core::option::Option::<&dyn core::error::Error>::Some(move _9)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:138:50-138:59)
  8: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:138:58-138:59)
  9: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:138:58-138:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/error.rs:138:58-138:59)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb7
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/error.rs:141:5-141:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/error.rs:141:6-141:6)
      kind: return
  }
  preds [bb2, bb5, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/error.rs:134:5-141:6)
      kind: resume
  }
  preds [bb0]
  succs []

