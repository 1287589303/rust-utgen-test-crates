bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:867:9-893:10)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:867:26-867:45)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:867:26-867:34)
  3: _7 = &((*_1).8: meta::wrappers::DFA)
    SourceInfo(regex-automata/src/meta/strategy.rs:867:26-867:34)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:867:39-867:44)
  5: _8 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:867:39-867:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:867:26-867:45)
      kind: _6 = meta::wrappers::DFA::get(move _7, move _8) -> [return: bb1, unwind: bb25]
  }
  preds []
  succs [bb1, bb25]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:867:44-867:45)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:867:44-867:45)
  2: PlaceMention(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:867:26-867:45)
  3: _9 = discriminant(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:867:26-867:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:867:16-867:23)
      kind: switchInt(move _9) -> [1: bb2, otherwise: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:867:16-867:23)
      kind: falseEdge -> [real: bb3, imaginary: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:867:21-867:22)
  1: _10 = ((_6 as Some).0: &meta::wrappers::DFAEngine)
    SourceInfo(regex-automata/src/meta/strategy.rs:867:21-867:22)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:17-872:21)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:30-872:76)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:30-872:31)
  5: _13 = &(*_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:30-872:31)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:62-872:67)
  7: _14 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:62-872:67)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:69-872:75)
  9: _15 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:69-872:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:872:30-872:76)
      kind: _12 = meta::wrappers::DFAEngine::try_which_overlapping_matches(move _13, move _14, move _15) -> [return: bb4, unwind: bb25]
  }
  preds [bb2]
  succs [bb4, bb25]

bb4
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:75-872:76)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:75-872:76)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:75-872:76)
  3: PlaceMention(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:30-872:76)
  4: _16 = discriminant(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:30-872:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:872:24-872:76)
      kind: switchInt(move _16) -> [0: bb6, 1: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _12)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:30-872:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:872:30-872:76)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:873:17-873:23)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:874:21-874:24)
  1: _18 = move ((_12 as Err).0: meta::error::RetryFailError)
    SourceInfo(regex-automata/src/meta/strategy.rs:874:21-874:24)
  2: _11 = move _18
    SourceInfo(regex-automata/src/meta/strategy.rs:874:29-874:32)
  3: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:874:31-874:32)
  4: FakeRead(ForLet(None), _11)
    SourceInfo(regex-automata/src/meta/strategy.rs:872:17-872:21)
  5: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:875:14-875:15)
  6: _5 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:867:46-877:10)
  7: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:9-877:10)
  8: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:9-877:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:867:9-893:10)
      kind: goto -> bb20
  }
  preds [bb4, bb6]
  succs [bb20]

bb8
  0: _0 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:873:27-873:33)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:875:14-875:15)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:9-877:10)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:9-877:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb6]
  succs [bb23]

bb9
  0: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:33-877:55)
  1: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:33-877:44)
  2: _20 = &((*_1).7: meta::wrappers::Hybrid)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:33-877:44)
  3: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:49-877:54)
  4: _21 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:49-877:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:877:33-877:55)
      kind: _19 = meta::wrappers::Hybrid::get(move _20, move _21) -> [return: bb10, unwind: bb25]
  }
  preds [bb1, bb2]
  succs [bb10, bb25]

bb10
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:54-877:55)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:54-877:55)
  2: PlaceMention(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:33-877:55)
  3: _22 = discriminant(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:33-877:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:877:23-877:30)
      kind: switchInt(move _22) -> [1: bb11, otherwise: bb18]
  }
  preds [bb9]
  succs [bb11, bb18]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:877:23-877:30)
      kind: falseEdge -> [real: bb12, imaginary: bb18]
  }
  preds [bb10]
  succs [bb12, bb18]

bb12
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:28-877:29)
  1: _23 = ((_19 as Some).0: &meta::wrappers::HybridEngine)
    SourceInfo(regex-automata/src/meta/strategy.rs:877:28-877:29)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:882:17-882:21)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:882:30-886:14)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:882:30-882:31)
  5: _26 = &(*_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:882:30-882:31)
  6: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:883:17-883:34)
  7: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:883:17-883:34)
  8: _28 = &mut ((*_2).4: meta::wrappers::HybridCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:883:17-883:34)
  9: _27 = &mut (*_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:883:17-883:34)
  10: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:884:17-884:22)
  11: _29 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:884:17-884:22)
  12: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:885:17-885:23)
  13: _30 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:885:17-885:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:882:30-886:14)
      kind: _25 = meta::wrappers::HybridEngine::try_which_overlapping_matches(move _26, move _27, move _29, move _30) -> [return: bb13, unwind: bb25]
  }
  preds [bb11]
  succs [bb13, bb25]

bb13
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:886:13-886:14)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:886:13-886:14)
  2: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:886:13-886:14)
  3: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:886:13-886:14)
  4: PlaceMention(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:882:30-886:14)
  5: _31 = discriminant(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:882:30-886:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:882:24-886:14)
      kind: switchInt(move _31) -> [0: bb15, 1: bb16, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15, bb16]

bb14
  0: FakeRead(ForMatchedPlace(None), _25)
    SourceInfo(regex-automata/src/meta/strategy.rs:882:30-886:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:882:30-886:14)
      kind: unreachable
  }
  preds [bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:887:17-887:23)
      kind: falseEdge -> [real: bb17, imaginary: bb16]
  }
  preds [bb13]
  succs [bb16, bb17]

bb16
  0: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:890:21-890:24)
  1: _33 = move ((_25 as Err).0: meta::error::RetryFailError)
    SourceInfo(regex-automata/src/meta/strategy.rs:890:21-890:24)
  2: _24 = move _33
    SourceInfo(regex-automata/src/meta/strategy.rs:890:29-890:32)
  3: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:890:31-890:32)
  4: FakeRead(ForLet(None), _24)
    SourceInfo(regex-automata/src/meta/strategy.rs:882:17-882:21)
  5: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:891:14-891:15)
  6: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:891:14-891:15)
  7: _5 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:877:56-893:10)
  8: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:893:9-893:10)
  9: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:893:9-893:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:877:16-893:10)
      kind: goto -> bb19
  }
  preds [bb13, bb15]
  succs [bb19]

bb17
  0: _0 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:888:21-888:27)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:891:14-891:15)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:891:14-891:15)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:893:9-893:10)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:893:9-893:10)
  5: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:893:9-893:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb15]
  succs [bb23]

bb18
  0: _5 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:893:10-893:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:877:16-893:10)
      kind: goto -> bb19
  }
  preds [bb10, bb11]
  succs [bb19]

bb19
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:893:9-893:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:867:9-893:10)
      kind: goto -> bb20
  }
  preds [bb16, bb18]
  succs [bb20]

bb20
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:893:9-893:10)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:893:9-893:10)
  2: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:898:13-898:14)
  3: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:898:17-898:28)
  4: _35 = &((*_1).4: meta::wrappers::PikeVM)
    SourceInfo(regex-automata/src/meta/strategy.rs:898:17-898:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:898:17-898:34)
      kind: _34 = meta::wrappers::PikeVM::get(move _35) -> [return: bb21, unwind: bb25]
  }
  preds [bb7, bb19]
  succs [bb21, bb25]

bb21
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:898:33-898:34)
  1: FakeRead(ForLet(None), _34)
    SourceInfo(regex-automata/src/meta/strategy.rs:898:13-898:14)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:899:9-899:10)
  3: _36 = &(*_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:899:9-899:10)
  4: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:899:37-899:54)
  5: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:899:37-899:54)
  6: _38 = &mut ((*_2).1: meta::wrappers::PikeVMCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:899:37-899:54)
  7: _37 = &mut (*_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:899:37-899:54)
  8: StorageLive(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:899:56-899:61)
  9: _39 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:899:56-899:61)
  10: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:899:63-899:69)
  11: _40 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:899:63-899:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:899:9-899:70)
      kind: _0 = meta::wrappers::PikeVMEngine::which_overlapping_matches(move _36, move _37, move _39, move _40) -> [return: bb22, unwind: bb25]
  }
  preds [bb20]
  succs [bb22, bb25]

bb22
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:899:69-899:70)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:899:69-899:70)
  2: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:899:69-899:70)
  3: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:899:69-899:70)
  4: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:900:5-900:6)
  5: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:900:5-900:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:900:6-900:6)
      kind: goto -> bb24
  }
  preds [bb21]
  succs [bb24]

bb23
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:893:9-893:10)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:893:9-893:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:900:6-900:6)
      kind: goto -> bb24
  }
  preds [bb8, bb17]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:900:6-900:6)
      kind: return
  }
  preds [bb22, bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:861:5-900:6)
      kind: resume
  }
  preds [bb0, bb3, bb9, bb12, bb20, bb21]
  succs []

