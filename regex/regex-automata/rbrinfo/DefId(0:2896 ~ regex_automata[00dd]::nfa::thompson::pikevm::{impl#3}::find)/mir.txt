bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:820:13-820:18)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:820:21-820:26)
  2: _5 = move _3
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:820:21-820:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:820:21-820:33)
      kind: _4 = <I as core::convert::Into<util::search::Input<'_>>>::into(move _5) -> [return: bb1, unwind: bb74]
  }
  preds []
  succs [bb1, bb74]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:820:32-820:33)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:820:13-820:18)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:9-827:10)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:12-821:45)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:12-821:40)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:12-821:26)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:12-821:26)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:12-821:16)
  8: _11 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:12-821:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:12-821:26)
      kind: _10 = nfa::thompson::pikevm::PikeVM::get_nfa(move _11) -> [return: bb2, unwind: bb75]
  }
  preds [bb0]
  succs [bb2, bb75]

bb2
  0: _9 = &(*_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:12-821:26)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:25-821:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:12-821:40)
      kind: _8 = nfa::thompson::nfa::NFA::pattern_len(move _9) -> [return: bb3, unwind: bb75]
  }
  preds [bb1]
  succs [bb3, bb75]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:39-821:40)
  1: _7 = Eq(move _8, const 1_usize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:12-821:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:12-821:45)
      kind: switchInt(move _7) -> [0: bb29, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb29]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:44-821:45)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:44-821:45)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:822:17-822:26)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:822:30-822:34)
  4: _14 = core::option::Option::<util::primitives::NonMaxUsize>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:822:30-822:34)
  5: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:822:36-822:40)
  6: _15 = core::option::Option::<util::primitives::NonMaxUsize>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:822:36-822:40)
  7: _13 = [move _14, move _15]
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:822:29-822:41)
  8: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:822:40-822:41)
  9: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:822:40-822:41)
  10: FakeRead(ForLet(None), _13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:822:17-822:26)
  11: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:17-823:20)
  12: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:68)
  13: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:67)
  14: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:27)
  15: _19 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:27)
  16: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:41-823:46)
  17: _20 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:41-823:46)
  18: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:48-823:54)
  19: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:48-823:54)
  20: _22 = &_4
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:48-823:54)
  21: _21 = &(*_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:48-823:54)
  22: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:56-823:66)
  23: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:56-823:66)
  24: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:56-823:66)
  25: _25 = &mut _13
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:56-823:66)
  26: _24 = &mut (*_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:56-823:66)
  27: _23 = move _24 as &mut [core::option::Option<util::primitives::NonMaxUsize>] (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:56-823:66)
  28: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:65-823:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:67)
      kind: _18 = nfa::thompson::pikevm::PikeVM::search_slots(move _19, move _20, move _21, move _23) -> [return: bb5, unwind: bb75]
  }
  preds [bb3]
  succs [bb5, bb75]

bb5
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:66-823:67)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:66-823:67)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:66-823:67)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:66-823:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:68)
      kind: _17 = <core::option::Option<util::primitives::PatternID> as core::ops::Try>::branch(move _18) -> [return: bb6, unwind: bb75]
  }
  preds [bb4]
  succs [bb6, bb75]

bb6
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:67-823:68)
  1: PlaceMention(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:68)
  2: _26 = discriminant(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:68)
      kind: switchInt(move _26) -> [0: bb9, 1: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:68)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:67-823:68)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:68)
  1: _30 = ((_17 as Continue).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:68)
  2: _16 = _30
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:68)
  3: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:67-823:68)
  4: FakeRead(ForLet(None), _16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:17-823:20)
  5: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:68-823:69)
  6: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:68-823:69)
  7: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:68-823:69)
  8: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:17-824:22)
  9: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:34)
  10: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:34)
  11: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:33)
  12: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:31-824:32)
  13: _35 = const 0_usize
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:31-824:32)
  14: _36 = Len(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:33)
  15: _37 = Lt(_35, _36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:33)
      kind: assert(move _37, "index out of bounds: the length is {} but the index is {}", move _36, _35) -> [success: bb12, unwind: bb75]
  }
  preds [bb6, bb8]
  succs [bb12, bb75]

bb10
  0: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:67-823:68)
  1: _27 = ((_17 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:67-823:68)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:67-823:68)
  3: _29 = _27
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:67-823:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:23-823:68)
      kind: _0 = <core::option::Option<util::search::Match> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _29) -> [return: bb11, unwind: bb75]
  }
  preds [bb8]
  succs [bb11, bb75]

bb11
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:67-823:68)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:67-823:68)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:68-823:69)
  3: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:68-823:69)
  4: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:823:68-823:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb70
  }
  preds [bb10]
  succs [bb70]

bb12
  0: _34 = _13[_35]
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:34)
      kind: _33 = <core::option::Option<util::primitives::NonMaxUsize> as core::ops::Try>::branch(move _34) -> [return: bb13, unwind: bb75]
  }
  preds [bb9]
  succs [bb13, bb75]

bb13
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:33-824:34)
  1: PlaceMention(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:34)
  2: _38 = discriminant(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:34)
      kind: switchInt(move _38) -> [0: bb16, 1: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15, bb16]

bb14
  0: FakeRead(ForMatchedPlace(None), _33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:34)
      kind: unreachable
  }
  preds [bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:33-824:34)
      kind: falseEdge -> [real: bb17, imaginary: bb16]
  }
  preds [bb13]
  succs [bb16, bb17]

bb16
  0: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:34)
  1: _42 = ((_33 as Continue).0: util::primitives::NonMaxUsize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:34)
  2: _32 = _42
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:34)
  3: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:33-824:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:40)
      kind: _31 = util::primitives::NonMaxUsize::get(move _32) -> [return: bb19, unwind: bb75]
  }
  preds [bb13, bb15]
  succs [bb19, bb75]

bb17
  0: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:33-824:34)
  1: _39 = ((_33 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:33-824:34)
  2: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:33-824:34)
  3: _41 = _39
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:33-824:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:25-824:34)
      kind: _0 = <core::option::Option<util::search::Match> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _41) -> [return: bb18, unwind: bb75]
  }
  preds [bb15]
  succs [bb18, bb75]

bb18
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:33-824:34)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:33-824:34)
  2: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:39-824:40)
  3: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:40-824:41)
  4: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:40-824:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb69
  }
  preds [bb17]
  succs [bb69]

bb19
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:39-824:40)
  1: FakeRead(ForLet(None), _31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:17-824:22)
  2: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:40-824:41)
  3: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:824:40-824:41)
  4: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:17-825:20)
  5: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:32)
  6: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:32)
  7: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:31)
  8: StorageLive(_47)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:29-825:30)
  9: _47 = const 1_usize
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:29-825:30)
  10: _48 = Len(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:31)
  11: _49 = Lt(_47, _48)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:31)
      kind: assert(move _49, "index out of bounds: the length is {} but the index is {}", move _48, _47) -> [success: bb20, unwind: bb75]
  }
  preds [bb16]
  succs [bb20, bb75]

bb20
  0: _46 = _13[_47]
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:32)
      kind: _45 = <core::option::Option<util::primitives::NonMaxUsize> as core::ops::Try>::branch(move _46) -> [return: bb21, unwind: bb75]
  }
  preds [bb19]
  succs [bb21, bb75]

bb21
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:31-825:32)
  1: PlaceMention(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:32)
  2: _50 = discriminant(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:32)
      kind: switchInt(move _50) -> [0: bb24, 1: bb23, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb23, bb24]

bb22
  0: FakeRead(ForMatchedPlace(None), _45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:32)
      kind: unreachable
  }
  preds [bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:31-825:32)
      kind: falseEdge -> [real: bb25, imaginary: bb24]
  }
  preds [bb21]
  succs [bb24, bb25]

bb24
  0: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:32)
  1: _54 = ((_45 as Continue).0: util::primitives::NonMaxUsize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:32)
  2: _44 = _54
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:32)
  3: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:31-825:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:38)
      kind: _43 = util::primitives::NonMaxUsize::get(move _44) -> [return: bb27, unwind: bb75]
  }
  preds [bb21, bb23]
  succs [bb27, bb75]

bb25
  0: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:31-825:32)
  1: _51 = ((_45 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:31-825:32)
  2: StorageLive(_53)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:31-825:32)
  3: _53 = _51
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:31-825:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:23-825:32)
      kind: _0 = <core::option::Option<util::search::Match> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _53) -> [return: bb26, unwind: bb75]
  }
  preds [bb23]
  succs [bb26, bb75]

bb26
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:31-825:32)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:31-825:32)
  2: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:37-825:38)
  3: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:38-825:39)
  4: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:38-825:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb68
  }
  preds [bb25]
  succs [bb68]

bb27
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:37-825:38)
  1: FakeRead(ForLet(None), _43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:17-825:20)
  2: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:38-825:39)
  3: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:825:38-825:39)
  4: StorageLive(_55)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:25-826:61)
  5: StorageLive(_56)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:36-826:39)
  6: _56 = _16
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:36-826:39)
  7: StorageLive(_57)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:41-826:60)
  8: StorageLive(_58)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:48-826:53)
  9: _58 = _31
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:48-826:53)
  10: StorageLive(_59)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:55-826:58)
  11: _59 = _43
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:55-826:58)
  12: _57 = util::search::Span { start: move _58, end: move _59 }
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:41-826:60)
  13: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:59-826:60)
  14: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:59-826:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:25-826:61)
      kind: _55 = util::search::Match::new::<util::search::Span>(move _56, move _57) -> [return: bb28, unwind: bb75]
  }
  preds [bb24]
  succs [bb28, bb75]

bb28
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:60-826:61)
  1: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:60-826:61)
  2: _0 = core::option::Option::<util::search::Match>::Some(move _55)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:20-826:62)
  3: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:61-826:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:826:13-826:62)
      kind: goto -> bb68
  }
  preds [bb27]
  succs [bb68]

bb29
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:44-821:45)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:821:44-821:45)
  2: _6 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:827:10-827:10)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:827:9-827:10)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:827:9-827:10)
  5: StorageLive(_60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:828:13-828:18)
  6: StorageLive(_61)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:828:21-828:35)
  7: StorageLive(_62)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:828:21-828:35)
  8: StorageLive(_63)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:828:21-828:25)
  9: _63 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:828:21-828:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:828:21-828:35)
      kind: _62 = nfa::thompson::pikevm::PikeVM::get_nfa(move _63) -> [return: bb30, unwind: bb75]
  }
  preds [bb3]
  succs [bb30, bb75]

bb30
  0: _61 = &(*_62)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:828:21-828:35)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:828:34-828:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:828:21-828:48)
      kind: _60 = nfa::thompson::nfa::NFA::group_info(move _61) -> [return: bb31, unwind: bb75]
  }
  preds [bb29]
  succs [bb31, bb75]

bb31
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:828:47-828:48)
  1: FakeRead(ForLet(None), _60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:828:13-828:18)
  2: StorageDead(_62)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:828:48-828:49)
  3: StorageLive(_64)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:829:13-829:22)
  4: StorageLive(_65)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:829:25-829:30)
  5: _65 = &(*_60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:829:25-829:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:829:25-829:50)
      kind: _64 = util::captures::GroupInfo::implicit_slot_len(move _65) -> [return: bb32, unwind: bb75]
  }
  preds [bb30]
  succs [bb32, bb75]

bb32
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:829:49-829:50)
  1: FakeRead(ForLet(None), _64)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:829:13-829:22)
  2: StorageLive(_66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:830:13-830:22)
  3: StorageLive(_67)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:830:30-830:34)
  4: _67 = core::option::Option::<util::primitives::NonMaxUsize>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:830:30-830:34)
  5: StorageLive(_68)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:830:36-830:45)
  6: _68 = _64
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:830:36-830:45)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
      kind: _66 = std::vec::from_elem::<core::option::Option<util::primitives::NonMaxUsize>>(move _67, move _68) -> [return: bb33, unwind: bb75]
  }
  preds [bb31]
  succs [bb33, bb75]

bb33
  0: StorageDead(_68)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  1: StorageDead(_67)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  2: FakeRead(ForLet(None), _66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:830:13-830:22)
  3: StorageLive(_69)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:13-831:16)
  4: StorageLive(_70)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:64)
  5: StorageLive(_71)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:63)
  6: StorageLive(_72)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:23)
  7: _72 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:23)
  8: StorageLive(_73)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:37-831:42)
  9: _73 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:37-831:42)
  10: StorageLive(_74)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:44-831:50)
  11: StorageLive(_75)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:44-831:50)
  12: _75 = &_4
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:44-831:50)
  13: _74 = &(*_75)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:44-831:50)
  14: StorageLive(_76)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:52-831:62)
  15: StorageLive(_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:52-831:62)
  16: StorageLive(_78)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:52-831:62)
  17: StorageLive(_79)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:52-831:62)
  18: _79 = &mut _66
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:52-831:62)
  19: _78 = &mut (*_79)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:52-831:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:52-831:62)
      kind: _77 = <std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>> as core::ops::DerefMut>::deref_mut(move _78) -> [return: bb34, unwind: bb73]
  }
  preds [bb32]
  succs [bb34, bb73]

bb34
  0: _76 = &mut (*_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:52-831:62)
  1: StorageDead(_78)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:61-831:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:63)
      kind: _71 = nfa::thompson::pikevm::PikeVM::search_slots(move _72, move _73, move _74, move _76) -> [return: bb35, unwind: bb73]
  }
  preds [bb33]
  succs [bb35, bb73]

bb35
  0: StorageDead(_76)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:62-831:63)
  1: StorageDead(_74)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:62-831:63)
  2: StorageDead(_73)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:62-831:63)
  3: StorageDead(_72)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:62-831:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:64)
      kind: _70 = <core::option::Option<util::primitives::PatternID> as core::ops::Try>::branch(move _71) -> [return: bb36, unwind: bb73]
  }
  preds [bb34]
  succs [bb36, bb73]

bb36
  0: StorageDead(_71)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:63-831:64)
  1: PlaceMention(_70)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:64)
  2: _80 = discriminant(_70)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:64)
      kind: switchInt(move _80) -> [0: bb39, 1: bb38, otherwise: bb37]
  }
  preds [bb35]
  succs [bb37, bb38, bb39]

bb37
  0: FakeRead(ForMatchedPlace(None), _70)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:64)
      kind: unreachable
  }
  preds [bb36]
  succs []

bb38
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:63-831:64)
      kind: falseEdge -> [real: bb40, imaginary: bb39]
  }
  preds [bb36]
  succs [bb39, bb40]

bb39
  0: StorageLive(_84)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:64)
  1: _84 = ((_70 as Continue).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:64)
  2: _69 = _84
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:64)
  3: StorageDead(_84)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:63-831:64)
  4: FakeRead(ForLet(None), _69)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:13-831:16)
  5: StorageDead(_79)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:64-831:65)
  6: StorageDead(_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:64-831:65)
  7: StorageDead(_75)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:64-831:65)
  8: StorageDead(_70)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:64-831:65)
  9: StorageLive(_85)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:13-832:18)
  10: StorageLive(_86)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:47)
  11: StorageLive(_87)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:47)
  12: StorageLive(_88)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:46)
  13: StorageLive(_89)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:26-832:46)
  14: StorageLive(_90)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:26)
  15: _90 = &_66
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:26)
  16: StorageLive(_91)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:27-832:45)
  17: StorageLive(_92)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:27-832:41)
  18: StorageLive(_93)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:27-832:30)
  19: _93 = &_69
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:27-832:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:27-832:41)
      kind: _92 = util::primitives::PatternID::as_usize(move _93) -> [return: bb42, unwind: bb73]
  }
  preds [bb36, bb38]
  succs [bb42, bb73]

bb40
  0: StorageLive(_81)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:63-831:64)
  1: _81 = ((_70 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:63-831:64)
  2: StorageLive(_83)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:63-831:64)
  3: _83 = _81
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:63-831:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:19-831:64)
      kind: _0 = <core::option::Option<util::search::Match> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _83) -> [return: bb41, unwind: bb73]
  }
  preds [bb38]
  succs [bb41, bb73]

bb41
  0: StorageDead(_83)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:63-831:64)
  1: StorageDead(_81)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:63-831:64)
  2: StorageDead(_79)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:64-831:65)
  3: StorageDead(_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:64-831:65)
  4: StorageDead(_75)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:64-831:65)
  5: StorageDead(_70)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:831:64-831:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb66
  }
  preds [bb40]
  succs [bb66]

bb42
  0: StorageDead(_93)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:40-832:41)
  1: _94 = MulWithOverflow(_92, const 2_usize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:27-832:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:27-832:45)
      kind: assert(!move (_94.1: bool), "attempt to compute `{} * {}`, which would overflow", move _92, const 2_usize) -> [success: bb43, unwind: bb73]
  }
  preds [bb39]
  succs [bb43, bb73]

bb43
  0: _91 = move (_94.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:27-832:45)
  1: StorageDead(_92)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:44-832:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:26-832:46)
      kind: _89 = <std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>> as core::ops::Index<usize>>::index(move _90, move _91) -> [return: bb44, unwind: bb73]
  }
  preds [bb42]
  succs [bb44, bb73]

bb44
  0: _88 = (*_89)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:46)
  1: StorageDead(_91)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:45-832:46)
  2: StorageDead(_90)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:45-832:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:47)
      kind: _87 = <core::option::Option<util::primitives::NonMaxUsize> as core::ops::Try>::branch(move _88) -> [return: bb45, unwind: bb73]
  }
  preds [bb43]
  succs [bb45, bb73]

bb45
  0: StorageDead(_88)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:46-832:47)
  1: PlaceMention(_87)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:47)
  2: _95 = discriminant(_87)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:47)
      kind: switchInt(move _95) -> [0: bb48, 1: bb47, otherwise: bb46]
  }
  preds [bb44]
  succs [bb46, bb47, bb48]

bb46
  0: FakeRead(ForMatchedPlace(None), _87)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:47)
      kind: unreachable
  }
  preds [bb45]
  succs []

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:46-832:47)
      kind: falseEdge -> [real: bb49, imaginary: bb48]
  }
  preds [bb45]
  succs [bb48, bb49]

bb48
  0: StorageLive(_99)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:47)
  1: _99 = ((_87 as Continue).0: util::primitives::NonMaxUsize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:47)
  2: _86 = _99
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:47)
  3: StorageDead(_99)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:46-832:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:53)
      kind: _85 = util::primitives::NonMaxUsize::get(move _86) -> [return: bb51, unwind: bb73]
  }
  preds [bb45, bb47]
  succs [bb51, bb73]

bb49
  0: StorageLive(_96)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:46-832:47)
  1: _96 = ((_87 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:46-832:47)
  2: StorageLive(_98)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:46-832:47)
  3: _98 = _96
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:46-832:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:21-832:47)
      kind: _0 = <core::option::Option<util::search::Match> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _98) -> [return: bb50, unwind: bb73]
  }
  preds [bb47]
  succs [bb50, bb73]

bb50
  0: StorageDead(_98)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:46-832:47)
  1: StorageDead(_96)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:46-832:47)
  2: StorageDead(_86)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:52-832:53)
  3: StorageDead(_89)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:53-832:54)
  4: StorageDead(_87)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:53-832:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb65
  }
  preds [bb49]
  succs [bb65]

bb51
  0: StorageDead(_86)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:52-832:53)
  1: FakeRead(ForLet(None), _85)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:13-832:18)
  2: StorageDead(_89)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:53-832:54)
  3: StorageDead(_87)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:832:53-832:54)
  4: StorageLive(_100)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:13-833:16)
  5: StorageLive(_101)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:49)
  6: StorageLive(_102)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:49)
  7: StorageLive(_103)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:48)
  8: StorageLive(_104)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:24-833:48)
  9: StorageLive(_105)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:24)
  10: _105 = &_66
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:24)
  11: StorageLive(_106)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:25-833:47)
  12: StorageLive(_107)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:25-833:43)
  13: StorageLive(_108)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:25-833:39)
  14: StorageLive(_109)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:25-833:28)
  15: _109 = &_69
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:25-833:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:25-833:39)
      kind: _108 = util::primitives::PatternID::as_usize(move _109) -> [return: bb52, unwind: bb73]
  }
  preds [bb48]
  succs [bb52, bb73]

bb52
  0: StorageDead(_109)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:38-833:39)
  1: _110 = MulWithOverflow(_108, const 2_usize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:25-833:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:25-833:43)
      kind: assert(!move (_110.1: bool), "attempt to compute `{} * {}`, which would overflow", move _108, const 2_usize) -> [success: bb53, unwind: bb73]
  }
  preds [bb51]
  succs [bb53, bb73]

bb53
  0: _107 = move (_110.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:25-833:43)
  1: StorageDead(_108)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:42-833:43)
  2: _111 = AddWithOverflow(_107, const 1_usize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:25-833:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:25-833:47)
      kind: assert(!move (_111.1: bool), "attempt to compute `{} + {}`, which would overflow", move _107, const 1_usize) -> [success: bb54, unwind: bb73]
  }
  preds [bb52]
  succs [bb54, bb73]

bb54
  0: _106 = move (_111.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:25-833:47)
  1: StorageDead(_107)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:46-833:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:24-833:48)
      kind: _104 = <std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>> as core::ops::Index<usize>>::index(move _105, move _106) -> [return: bb55, unwind: bb73]
  }
  preds [bb53]
  succs [bb55, bb73]

bb55
  0: _103 = (*_104)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:48)
  1: StorageDead(_106)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:47-833:48)
  2: StorageDead(_105)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:47-833:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:49)
      kind: _102 = <core::option::Option<util::primitives::NonMaxUsize> as core::ops::Try>::branch(move _103) -> [return: bb56, unwind: bb73]
  }
  preds [bb54]
  succs [bb56, bb73]

bb56
  0: StorageDead(_103)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:48-833:49)
  1: PlaceMention(_102)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:49)
  2: _112 = discriminant(_102)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:49)
      kind: switchInt(move _112) -> [0: bb59, 1: bb58, otherwise: bb57]
  }
  preds [bb55]
  succs [bb57, bb58, bb59]

bb57
  0: FakeRead(ForMatchedPlace(None), _102)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:49)
      kind: unreachable
  }
  preds [bb56]
  succs []

bb58
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:48-833:49)
      kind: falseEdge -> [real: bb60, imaginary: bb59]
  }
  preds [bb56]
  succs [bb59, bb60]

bb59
  0: StorageLive(_116)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:49)
  1: _116 = ((_102 as Continue).0: util::primitives::NonMaxUsize)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:49)
  2: _101 = _116
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:49)
  3: StorageDead(_116)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:48-833:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:55)
      kind: _100 = util::primitives::NonMaxUsize::get(move _101) -> [return: bb62, unwind: bb73]
  }
  preds [bb56, bb58]
  succs [bb62, bb73]

bb60
  0: StorageLive(_113)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:48-833:49)
  1: _113 = ((_102 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:48-833:49)
  2: StorageLive(_115)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:48-833:49)
  3: _115 = _113
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:48-833:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:19-833:49)
      kind: _0 = <core::option::Option<util::search::Match> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _115) -> [return: bb61, unwind: bb73]
  }
  preds [bb58]
  succs [bb61, bb73]

bb61
  0: StorageDead(_115)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:48-833:49)
  1: StorageDead(_113)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:48-833:49)
  2: StorageDead(_101)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:54-833:55)
  3: StorageDead(_104)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:55-833:56)
  4: StorageDead(_102)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:55-833:56)
  5: StorageDead(_100)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb65
  }
  preds [bb60]
  succs [bb65]

bb62
  0: StorageDead(_101)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:54-833:55)
  1: FakeRead(ForLet(None), _100)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:13-833:16)
  2: StorageDead(_104)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:55-833:56)
  3: StorageDead(_102)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:833:55-833:56)
  4: StorageLive(_117)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:14-834:50)
  5: StorageLive(_118)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:25-834:28)
  6: _118 = _69
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:25-834:28)
  7: StorageLive(_119)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:30-834:49)
  8: StorageLive(_120)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:37-834:42)
  9: _120 = _85
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:37-834:42)
  10: StorageLive(_121)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:44-834:47)
  11: _121 = _100
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:44-834:47)
  12: _119 = util::search::Span { start: move _120, end: move _121 }
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:30-834:49)
  13: StorageDead(_121)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:48-834:49)
  14: StorageDead(_120)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:48-834:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:14-834:50)
      kind: _117 = util::search::Match::new::<util::search::Span>(move _118, move _119) -> [return: bb63, unwind: bb73]
  }
  preds [bb59]
  succs [bb63, bb73]

bb63
  0: StorageDead(_119)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:49-834:50)
  1: StorageDead(_118)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:49-834:50)
  2: _0 = core::option::Option::<util::search::Match>::Some(move _117)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:9-834:51)
  3: StorageDead(_117)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:834:50-834:51)
  4: StorageDead(_100)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
  5: StorageDead(_85)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
  6: StorageDead(_69)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
      kind: drop(_66) -> [return: bb64, unwind: bb75]
  }
  preds [bb62]
  succs [bb64, bb75]

bb64
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
  1: StorageDead(_64)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
  2: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
      kind: drop(_3) -> [return: bb72, unwind: bb76]
  }
  preds [bb63]
  succs [bb72, bb76]

bb65
  0: StorageDead(_85)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb66
  }
  preds [bb50, bb61]
  succs [bb66]

bb66
  0: StorageDead(_69)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
      kind: drop(_66) -> [return: bb67, unwind: bb75]
  }
  preds [bb41, bb65]
  succs [bb67, bb75]

bb67
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
  1: StorageDead(_64)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
  2: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb71
  }
  preds [bb66]
  succs [bb71]

bb68
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:827:9-827:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb69
  }
  preds [bb26, bb28]
  succs [bb69]

bb69
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:827:9-827:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb70
  }
  preds [bb18, bb68]
  succs [bb70]

bb70
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:827:9-827:10)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:827:9-827:10)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:827:9-827:10)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:827:9-827:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb71
  }
  preds [bb11, bb69]
  succs [bb71]

bb71
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
      kind: drop(_3) -> [return: bb72, unwind: bb76]
  }
  preds [bb67, bb70]
  succs [bb72, bb76]

bb72
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:6-835:6)
      kind: return
  }
  preds [bb64, bb71]
  succs []

bb73
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
      kind: drop(_66) -> [return: bb75, unwind terminate(cleanup)]
  }
  preds [bb33, bb34, bb35, bb39, bb40, bb42, bb43, bb44, bb48, bb49, bb51, bb52, bb53, bb54, bb55, bb59, bb60, bb62]
  succs [bb75]

bb74
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:820:32-820:33)
      kind: drop(_5) -> [return: bb75, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb75]

bb75
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:835:5-835:6)
      kind: drop(_3) -> [return: bb76, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb4, bb5, bb9, bb10, bb12, bb16, bb17, bb19, bb20, bb24, bb25, bb27, bb29, bb30, bb31, bb32, bb63, bb66, bb73, bb74]
  succs [bb76]

bb76
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:815:5-835:6)
      kind: resume
  }
  preds [bb64, bb71, bb75]
  succs []

