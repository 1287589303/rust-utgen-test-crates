bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2167:13-2167:25)
  1: PlaceMention(_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2167:34-2167:42)
  2: _5 = discriminant(_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2167:34-2167:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2167:28-2167:42)
      kind: switchInt(move _5) -> [0: bb2, 1: bb3, 2: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4]

bb1
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2167:34-2167:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2167:34-2167:42)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2168:13-2168:25)
      kind: falseEdge -> [real: bb5, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb5]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2169:13-2169:26)
      kind: falseEdge -> [real: bb8, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb8]

bb4
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2170:31-2170:34)
  1: _12 = ((_2 as Pattern).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2170:31-2170:34)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:17-2173:18)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:21-2171:72)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:21-2171:42)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:21-2171:42)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:21-2171:29)
  7: _17 = &(*((*_1).0: &hybrid::dfa::DFA))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:21-2171:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:21-2171:42)
      kind: _16 = hybrid::dfa::DFA::get_config(move _17) -> [return: bb11, unwind: bb37]
  }
  preds [bb0, bb3]
  succs [bb11, bb37]

bb5
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2168:29-2168:47)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2168:29-2168:47)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2168:29-2168:37)
  3: _8 = &(*((*_1).0: &hybrid::dfa::DFA))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2168:29-2168:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2168:29-2168:47)
      kind: _7 = hybrid::dfa::DFA::get_nfa(move _8) -> [return: bb6, unwind: bb37]
  }
  preds [bb2]
  succs [bb6, bb37]

bb6
  0: _6 = &(*_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2168:29-2168:47)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2168:46-2168:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2168:29-2168:66)
      kind: _4 = nfa::thompson::nfa::NFA::start_unanchored(move _6) -> [return: bb7, unwind: bb37]
  }
  preds [bb5]
  succs [bb7, bb37]

bb7
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2168:65-2168:66)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2168:65-2168:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2168:65-2168:66)
      kind: goto -> bb24
  }
  preds [bb6]
  succs [bb24]

bb8
  0: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2169:30-2169:48)
  1: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2169:30-2169:48)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2169:30-2169:38)
  3: _11 = &(*((*_1).0: &hybrid::dfa::DFA))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2169:30-2169:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2169:30-2169:48)
      kind: _10 = hybrid::dfa::DFA::get_nfa(move _11) -> [return: bb9, unwind: bb37]
  }
  preds [bb3]
  succs [bb9, bb37]

bb9
  0: _9 = &(*_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2169:30-2169:48)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2169:47-2169:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2169:30-2169:65)
      kind: _4 = nfa::thompson::nfa::NFA::start_anchored(move _9) -> [return: bb10, unwind: bb37]
  }
  preds [bb8]
  succs [bb10, bb37]

bb10
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2169:64-2169:65)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2169:64-2169:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2169:64-2169:65)
      kind: goto -> bb24
  }
  preds [bb9]
  succs [bb24]

bb11
  0: _15 = &(*_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:21-2171:42)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:41-2171:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:21-2171:72)
      kind: _14 = hybrid::dfa::Config::get_starts_for_each_pattern(move _15) -> [return: bb12, unwind: bb37]
  }
  preds [bb4]
  succs [bb12, bb37]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:21-2171:72)
      kind: switchInt(move _14) -> [0: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14]

bb13
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:71-2171:72)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:71-2171:72)
  2: _13 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2173:18-2173:18)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2173:17-2173:18)
  4: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2173:17-2173:18)
  5: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:23-2174:60)
  6: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:23-2174:41)
  7: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:23-2174:41)
  8: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:23-2174:31)
  9: _24 = &(*((*_1).0: &hybrid::dfa::DFA))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:23-2174:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:23-2174:41)
      kind: _23 = hybrid::dfa::DFA::get_nfa(move _24) -> [return: bb16, unwind: bb37]
  }
  preds [bb12]
  succs [bb16, bb37]

bb14
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:71-2171:72)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2171:71-2171:72)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2172:32-2172:74)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2172:65-2172:73)
  4: _20 = _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2172:65-2172:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2172:32-2172:74)
      kind: _19 = hybrid::error::StartError::unsupported_anchored(move _20) -> [return: bb15, unwind: bb37]
  }
  preds [bb12]
  succs [bb15, bb37]

bb15
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2172:73-2172:74)
  1: _0 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::StartError>::Err(move _19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2172:28-2172:75)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2172:74-2172:75)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2173:17-2173:18)
  4: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2173:17-2173:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb34
  }
  preds [bb14]
  succs [bb34]

bb16
  0: _22 = &(*_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:23-2174:41)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:40-2174:41)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:56-2174:59)
  3: _25 = _12
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:56-2174:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:23-2174:60)
      kind: _21 = nfa::thompson::nfa::NFA::start_pattern(move _22, move _25) -> [return: bb17, unwind: bb37]
  }
  preds [bb13]
  succs [bb17, bb37]

bb17
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:59-2174:60)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:59-2174:60)
  2: PlaceMention(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:23-2174:60)
  3: _26 = discriminant(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:23-2174:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:17-2174:60)
      kind: switchInt(move _26) -> [0: bb19, 1: bb20, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19, bb20]

bb18
  0: FakeRead(ForMatchedPlace(None), _21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:23-2174:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2174:23-2174:60)
      kind: unreachable
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2175:21-2175:25)
      kind: falseEdge -> [real: bb21, imaginary: bb20]
  }
  preds [bb17]
  succs [bb20, bb21]

bb20
  0: StorageLive(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2176:26-2176:29)
  1: _32 = ((_21 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2176:26-2176:29)
  2: _4 = _32
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2176:34-2176:37)
  3: StorageDead(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2176:36-2176:37)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2178:13-2178:14)
  5: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2178:13-2178:14)
  6: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2178:13-2178:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2178:13-2178:14)
      kind: goto -> bb24
  }
  preds [bb17, bb19]
  succs [bb24]

bb21
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2175:39-2175:62)
  1: StorageLive(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2175:39-2175:52)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2175:39-2175:52)
  3: StorageLive(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2175:39-2175:43)
  4: _31 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2175:39-2175:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2175:39-2175:52)
      kind: _30 = hybrid::dfa::Lazy::<'_, '_>::as_ref(move _31) -> [return: bb22, unwind: bb37]
  }
  preds [bb19]
  succs [bb22, bb37]

bb22
  0: _29 = &_30
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2175:39-2175:52)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2175:51-2175:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2175:39-2175:62)
      kind: _28 = hybrid::dfa::LazyRef::<'_, '_>::dead_id(move _29) -> [return: bb23, unwind: bb37]
  }
  preds [bb21]
  succs [bb23, bb37]

bb23
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2175:61-2175:62)
  1: _0 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::StartError>::Ok(move _28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2175:36-2175:63)
  2: StorageDead(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2175:62-2175:63)
  3: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2175:62-2175:63)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2178:13-2178:14)
  5: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2178:13-2178:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb34
  }
  preds [bb22]
  succs [bb34]

bb24
  0: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2167:13-2167:25)
  1: StorageLive(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:13-2181:15)
  2: StorageLive(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2183:41)
  3: StorageLive(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2183:40)
  4: StorageLive(_36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2182:50)
  5: StorageLive(_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2181:22)
  6: _37 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2181:22)
  7: StorageLive(_38)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2182:30-2182:42)
  8: _38 = _4
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2182:30-2182:42)
  9: StorageLive(_39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2182:44-2182:49)
  10: _39 = _3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2182:44-2182:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2182:50)
      kind: _36 = hybrid::dfa::Lazy::<'_, '_>::cache_start_one(move _37, move _38, move _39) -> [return: bb25, unwind: bb37]
  }
  preds [bb7, bb10, bb20]
  succs [bb25, bb37]

bb25
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2182:49-2182:50)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2182:49-2182:50)
  2: StorageDead(_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2182:49-2182:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2183:40)
      kind: _35 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::CacheError>::map_err::<hybrid::error::StartError, fn(hybrid::error::CacheError) -> hybrid::error::StartError {hybrid::error::StartError::cache}>(move _36, hybrid::error::StartError::cache) -> [return: bb26, unwind: bb37]
  }
  preds [bb24]
  succs [bb26, bb37]

bb26
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2183:39-2183:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2183:41)
      kind: _34 = <core::result::Result<hybrid::id::LazyStateID, hybrid::error::StartError> as core::ops::Try>::branch(move _35) -> [return: bb27, unwind: bb37]
  }
  preds [bb25]
  succs [bb27, bb37]

bb27
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2183:40-2183:41)
  1: PlaceMention(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2183:41)
  2: _40 = discriminant(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2183:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2183:41)
      kind: switchInt(move _40) -> [0: bb30, 1: bb29, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb29, bb30]

bb28
  0: FakeRead(ForMatchedPlace(None), _34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2183:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2183:41)
      kind: unreachable
  }
  preds [bb27]
  succs []

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2183:40-2183:41)
      kind: falseEdge -> [real: bb31, imaginary: bb30]
  }
  preds [bb27]
  succs [bb30, bb31]

bb30
  0: StorageLive(_44)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2183:41)
  1: _44 = ((_34 as Continue).0: hybrid::id::LazyStateID)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2183:41)
  2: _33 = _44
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2183:41)
  3: StorageDead(_44)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2183:40-2183:41)
  4: FakeRead(ForLet(None), _33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:13-2181:15)
  5: StorageDead(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2183:41-2183:42)
  6: StorageLive(_45)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:9-2184:50)
  7: StorageLive(_46)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:9-2184:13)
  8: _46 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:9-2184:13)
  9: StorageLive(_47)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:30-2184:38)
  10: _47 = _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:30-2184:38)
  11: StorageLive(_48)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:40-2184:45)
  12: _48 = _3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:40-2184:45)
  13: StorageLive(_49)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:47-2184:49)
  14: _49 = _33
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:47-2184:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:9-2184:50)
      kind: _45 = hybrid::dfa::Lazy::<'_, '_>::set_start_state(move _46, move _47, move _48, move _49) -> [return: bb33, unwind: bb37]
  }
  preds [bb27, bb29]
  succs [bb33, bb37]

bb31
  0: StorageLive(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2183:40-2183:41)
  1: _41 = move ((_34 as Break).0: core::result::Result<core::convert::Infallible, hybrid::error::StartError>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2183:40-2183:41)
  2: StorageLive(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2183:40-2183:41)
  3: _43 = move _41
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2183:40-2183:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2181:18-2183:41)
      kind: _0 = <core::result::Result<hybrid::id::LazyStateID, hybrid::error::StartError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hybrid::error::StartError>>>::from_residual(move _43) -> [return: bb32, unwind: bb37]
  }
  preds [bb29]
  succs [bb32, bb37]

bb32
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2183:40-2183:41)
  1: StorageDead(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2183:40-2183:41)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2183:41-2183:42)
  3: StorageDead(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2186:5-2186:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb35
  }
  preds [bb31]
  succs [bb35]

bb33
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:49-2184:50)
  1: StorageDead(_48)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:49-2184:50)
  2: StorageDead(_47)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:49-2184:50)
  3: StorageDead(_46)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:49-2184:50)
  4: StorageDead(_45)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2184:50-2184:51)
  5: StorageLive(_50)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2185:12-2185:14)
  6: _50 = _33
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2185:12-2185:14)
  7: _0 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::StartError>::Ok(move _50)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2185:9-2185:15)
  8: StorageDead(_50)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2185:14-2185:15)
  9: StorageDead(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2186:5-2186:6)
  10: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2186:5-2186:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2186:6-2186:6)
      kind: goto -> bb36
  }
  preds [bb30]
  succs [bb36]

bb34
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2178:13-2178:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb35
  }
  preds [bb15, bb23]
  succs [bb35]

bb35
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2186:5-2186:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2186:6-2186:6)
      kind: goto -> bb36
  }
  preds [bb32, bb34]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2186:6-2186:6)
      kind: return
  }
  preds [bb33, bb35]
  succs []

bb37
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2162:5-2186:6)
      kind: resume
  }
  preds [bb4, bb5, bb6, bb8, bb9, bb11, bb13, bb14, bb16, bb21, bb22, bb24, bb25, bb26, bb30, bb31]
  succs []

