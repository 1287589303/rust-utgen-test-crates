bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2631:13-2631:62)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2631:13-2631:51)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2631:14-2631:20)
  3: _4 = ((*_1).0: u64)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2631:14-2631:20)
  4: _5 = Lt(const dfa::onepass::Transition::STATE_ID_SHIFT, const 64_u64)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2631:13-2631:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2631:13-2631:51)
      kind: assert(move _5, "attempt to shift right by `{}`, which would overflow", const dfa::onepass::Transition::STATE_ID_SHIFT) -> [success: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _3 = Shr(move _4, const dfa::onepass::Transition::STATE_ID_SHIFT)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2631:13-2631:51)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2631:50-2631:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2631:13-2631:62)
      kind: _2 = <u64 as util::int::U64>::as_usize(move _3) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2631:61-2631:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2630:9-2632:10)
      kind: _0 = util::primitives::StateID::new_unchecked(move _2) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2632:9-2632:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2633:6-2633:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2625:5-2633:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

