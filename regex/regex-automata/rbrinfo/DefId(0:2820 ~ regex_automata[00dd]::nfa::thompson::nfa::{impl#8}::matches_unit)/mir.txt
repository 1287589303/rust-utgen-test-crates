bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1988:9-1988:21)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1988:9-1988:13)
  2: _4 = _2
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1988:9-1988:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1988:9-1988:21)
      kind: _3 = util::alphabet::Unit::as_u8(move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1988:20-1988:21)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1988:36-1988:66)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1988:36-1988:66)
  3: _6 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1988:36-1988:66)
  4: _5 = {closure@regex-automata/src/nfa/thompson/nfa.rs:1988:36: 1988:42} { self: move _6 }
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1988:36-1988:66)
  5: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1988:41-1988:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1988:9-1988:67)
      kind: _0 = core::option::Option::<u8>::map_or::<bool, {closure@regex-automata/src/nfa/thompson/nfa.rs:1988:36: 1988:42}>(move _3, const false, move _5) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1988:66-1988:67)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1988:66-1988:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1989:6-1989:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1987:5-1989:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

