bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:116:9-116:15)
  1: _5 = &((*_1).0: nfa::thompson::pikevm::PikeVM)
    SourceInfo(regex-automata/src/meta/wrappers.rs:116:9-116:15)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:117:13-117:38)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:117:13-117:38)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:117:13-117:29)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:117:13-117:20)
  6: _9 = &mut ((*_2).0: core::option::Option<nfa::thompson::pikevm::Cache>)
    SourceInfo(regex-automata/src/meta/wrappers.rs:117:13-117:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:117:13-117:29)
      kind: _8 = core::option::Option::<nfa::thompson::pikevm::Cache>::as_mut(move _9) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:117:28-117:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:117:13-117:38)
      kind: _7 = core::option::Option::<&mut nfa::thompson::pikevm::Cache>::unwrap(move _8) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: _6 = &mut (*_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:117:13-117:38)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:117:37-117:38)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:118:13-118:18)
  3: _10 = &(*_3)
    SourceInfo(regex-automata/src/meta/wrappers.rs:118:13-118:18)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/wrappers.rs:119:13-119:19)
  5: _11 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:119:13-119:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:116:9-120:10)
      kind: _0 = nfa::thompson::pikevm::PikeVM::which_overlapping_matches(move _5, move _6, move _10, move _11) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/wrappers.rs:120:9-120:10)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:120:9-120:10)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:120:9-120:10)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:120:9-120:10)
  4: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:121:5-121:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:121:6-121:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:110:5-121:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

