bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/iter.rs:978:9-981:43)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/iter.rs:978:9-981:43)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/iter.rs:978:9-980:39)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/iter.rs:978:9-980:39)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/util/iter.rs:978:9-979:35)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/util/iter.rs:978:9-979:35)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/util/iter.rs:978:9-978:42)
  7: StorageLive(_10)
    SourceInfo(regex-automata/src/util/iter.rs:978:9-978:42)
  8: StorageLive(_11)
    SourceInfo(regex-automata/src/util/iter.rs:978:9-978:10)
  9: _11 = &mut (*_2)
    SourceInfo(regex-automata/src/util/iter.rs:978:9-978:10)
  10: StorageLive(_12)
    SourceInfo(regex-automata/src/util/iter.rs:978:24-978:41)
  11: StorageLive(_13)
    SourceInfo(regex-automata/src/util/iter.rs:978:24-978:41)
  12: _13 = const "TryCapturesIter"
    SourceInfo(regex-automata/src/util/iter.rs:978:24-978:41)
  13: _12 = &(*_13)
    SourceInfo(regex-automata/src/util/iter.rs:978:24-978:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:978:9-978:42)
      kind: _10 = core::fmt::Formatter::<'_>::debug_struct(move _11, move _12) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: _9 = &mut _10
    SourceInfo(regex-automata/src/util/iter.rs:978:9-978:42)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/util/iter.rs:978:41-978:42)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/util/iter.rs:978:41-978:42)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/util/iter.rs:979:20-979:24)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/util/iter.rs:979:20-979:24)
  5: _15 = const "it"
    SourceInfo(regex-automata/src/util/iter.rs:979:20-979:24)
  6: _14 = &(*_15)
    SourceInfo(regex-automata/src/util/iter.rs:979:20-979:24)
  7: StorageLive(_16)
    SourceInfo(regex-automata/src/util/iter.rs:979:26-979:34)
  8: StorageLive(_17)
    SourceInfo(regex-automata/src/util/iter.rs:979:26-979:34)
  9: StorageLive(_18)
    SourceInfo(regex-automata/src/util/iter.rs:979:26-979:34)
  10: _18 = &((*_1).0: util::iter::Searcher<'_>)
    SourceInfo(regex-automata/src/util/iter.rs:979:26-979:34)
  11: _17 = &(*_18)
    SourceInfo(regex-automata/src/util/iter.rs:979:26-979:34)
  12: _16 = move _17 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/iter.rs:979:26-979:34)
  13: StorageDead(_17)
    SourceInfo(regex-automata/src/util/iter.rs:979:33-979:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:978:9-979:35)
      kind: _8 = core::fmt::DebugStruct::<'_, '_>::field(move _9, move _14, move _16) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: _7 = &mut (*_8)
    SourceInfo(regex-automata/src/util/iter.rs:978:9-979:35)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/util/iter.rs:979:34-979:35)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/util/iter.rs:979:34-979:35)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/util/iter.rs:979:34-979:35)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/util/iter.rs:980:20-980:26)
  5: StorageLive(_20)
    SourceInfo(regex-automata/src/util/iter.rs:980:20-980:26)
  6: _20 = const "caps"
    SourceInfo(regex-automata/src/util/iter.rs:980:20-980:26)
  7: _19 = &(*_20)
    SourceInfo(regex-automata/src/util/iter.rs:980:20-980:26)
  8: StorageLive(_21)
    SourceInfo(regex-automata/src/util/iter.rs:980:28-980:38)
  9: StorageLive(_22)
    SourceInfo(regex-automata/src/util/iter.rs:980:28-980:38)
  10: StorageLive(_23)
    SourceInfo(regex-automata/src/util/iter.rs:980:28-980:38)
  11: _23 = &((*_1).1: util::captures::Captures)
    SourceInfo(regex-automata/src/util/iter.rs:980:28-980:38)
  12: _22 = &(*_23)
    SourceInfo(regex-automata/src/util/iter.rs:980:28-980:38)
  13: _21 = move _22 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/iter.rs:980:28-980:38)
  14: StorageDead(_22)
    SourceInfo(regex-automata/src/util/iter.rs:980:37-980:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:978:9-980:39)
      kind: _6 = core::fmt::DebugStruct::<'_, '_>::field(move _7, move _19, move _21) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: _5 = &mut (*_6)
    SourceInfo(regex-automata/src/util/iter.rs:978:9-980:39)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/util/iter.rs:980:38-980:39)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/util/iter.rs:980:38-980:39)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/util/iter.rs:980:38-980:39)
  4: StorageLive(_24)
    SourceInfo(regex-automata/src/util/iter.rs:981:20-981:28)
  5: StorageLive(_25)
    SourceInfo(regex-automata/src/util/iter.rs:981:20-981:28)
  6: _25 = const "finder"
    SourceInfo(regex-automata/src/util/iter.rs:981:20-981:28)
  7: _24 = &(*_25)
    SourceInfo(regex-automata/src/util/iter.rs:981:20-981:28)
  8: StorageLive(_26)
    SourceInfo(regex-automata/src/util/iter.rs:981:30-981:42)
  9: StorageLive(_27)
    SourceInfo(regex-automata/src/util/iter.rs:981:30-981:42)
  10: StorageLive(_28)
    SourceInfo(regex-automata/src/util/iter.rs:981:30-981:42)
  11: StorageLive(_29)
    SourceInfo(regex-automata/src/util/iter.rs:981:31-981:42)
  12: _29 = const "<closure>"
    SourceInfo(regex-automata/src/util/iter.rs:981:31-981:42)
  13: _28 = &_29
    SourceInfo(regex-automata/src/util/iter.rs:981:30-981:42)
  14: _27 = &(*_28)
    SourceInfo(regex-automata/src/util/iter.rs:981:30-981:42)
  15: _26 = move _27 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/iter.rs:981:30-981:42)
  16: StorageDead(_27)
    SourceInfo(regex-automata/src/util/iter.rs:981:41-981:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:978:9-981:43)
      kind: _4 = core::fmt::DebugStruct::<'_, '_>::field(move _5, move _24, move _26) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: _3 = &mut (*_4)
    SourceInfo(regex-automata/src/util/iter.rs:978:9-981:43)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/util/iter.rs:981:42-981:43)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/util/iter.rs:981:42-981:43)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/util/iter.rs:981:42-981:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:978:9-982:22)
      kind: _0 = core::fmt::DebugStruct::<'_, '_>::finish(move _3) -> [return: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/iter.rs:982:21-982:22)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/util/iter.rs:983:5-983:6)
  2: StorageDead(_28)
    SourceInfo(regex-automata/src/util/iter.rs:983:5-983:6)
  3: StorageDead(_25)
    SourceInfo(regex-automata/src/util/iter.rs:983:5-983:6)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/util/iter.rs:983:5-983:6)
  5: StorageDead(_20)
    SourceInfo(regex-automata/src/util/iter.rs:983:5-983:6)
  6: StorageDead(_18)
    SourceInfo(regex-automata/src/util/iter.rs:983:5-983:6)
  7: StorageDead(_15)
    SourceInfo(regex-automata/src/util/iter.rs:983:5-983:6)
  8: StorageDead(_13)
    SourceInfo(regex-automata/src/util/iter.rs:983:5-983:6)
  9: StorageDead(_10)
    SourceInfo(regex-automata/src/util/iter.rs:983:5-983:6)
  10: StorageDead(_8)
    SourceInfo(regex-automata/src/util/iter.rs:983:5-983:6)
  11: StorageDead(_6)
    SourceInfo(regex-automata/src/util/iter.rs:983:5-983:6)
  12: StorageDead(_4)
    SourceInfo(regex-automata/src/util/iter.rs:983:5-983:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:983:6-983:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:977:5-983:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

