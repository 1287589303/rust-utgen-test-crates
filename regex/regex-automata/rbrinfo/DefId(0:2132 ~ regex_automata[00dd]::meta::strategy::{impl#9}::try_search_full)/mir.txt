bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1631:13-1631:21)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1631:24-1631:29)
  2: _5 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1631:24-1631:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1631:24-1631:40)
      kind: _4 = util::search::Input::<'_>::get_span(move _5) -> [return: bb1, unwind: bb60]
  }
  preds []
  succs [bb1, bb60]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1631:39-1631:40)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1631:13-1631:21)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1632:13-1632:32)
  3: _6 = const 0_usize
    SourceInfo(regex-automata/src/meta/strategy.rs:1632:35-1632:36)
  4: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1632:13-1632:32)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1633:13-1633:30)
  6: _7 = const 0_usize
    SourceInfo(regex-automata/src/meta/strategy.rs:1633:33-1633:34)
  7: FakeRead(ForLet(None), _7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1633:13-1633:30)
  8: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1634:9-1692:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1634:9-1692:10)
      kind: goto -> bb2
  }
  preds [bb0]
  succs [bb2]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1634:9-1692:10)
      kind: falseUnwind -> [real: bb3, unwind: bb60]
  }
  preds [bb1, bb55]
  succs [bb3, bb60]

bb3
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:17-1635:25)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:34-1635:76)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:34-1635:47)
  3: _12 = &((*_1).1: util::prefilter::Prefilter)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:34-1635:47)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:53-1635:69)
  5: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:53-1635:69)
  6: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:53-1635:58)
  7: _15 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:53-1635:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1635:53-1635:69)
      kind: _14 = util::search::Input::<'_>::haystack(move _15) -> [return: bb4, unwind: bb60]
  }
  preds [bb2]
  succs [bb4, bb60]

bb4
  0: _13 = &(*_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:53-1635:69)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:68-1635:69)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:71-1635:75)
  3: _16 = _4
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:71-1635:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1635:34-1635:76)
      kind: _11 = util::prefilter::Prefilter::find(move _12, move _13, move _16) -> [return: bb5, unwind: bb60]
  }
  preds [bb3]
  succs [bb5, bb60]

bb5
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:75-1635:76)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:75-1635:76)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:75-1635:76)
  3: PlaceMention(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:34-1635:76)
  4: _17 = discriminant(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:34-1635:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1635:28-1635:76)
      kind: switchInt(move _17) -> [0: bb7, 1: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:34-1635:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1635:34-1635:76)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1636:17-1636:21)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1637:22-1637:26)
  1: _20 = ((_11 as Some).0: util::search::Span)
    SourceInfo(regex-automata/src/meta/strategy.rs:1637:22-1637:26)
  2: _10 = _20
    SourceInfo(regex-automata/src/meta/strategy.rs:1637:31-1637:35)
  3: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1637:34-1637:35)
  4: FakeRead(ForLet(None), _10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1635:17-1635:25)
  5: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1638:14-1638:15)
  6: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1638:14-1638:15)
  7: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1639:13-1648:14)
  8: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1639:16-1639:46)
  9: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1639:16-1639:30)
  10: _23 = (_10.0: usize)
    SourceInfo(regex-automata/src/meta/strategy.rs:1639:16-1639:30)
  11: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1639:33-1639:46)
  12: _24 = _7
    SourceInfo(regex-automata/src/meta/strategy.rs:1639:33-1639:46)
  13: _22 = Lt(move _23, move _24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1639:16-1639:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1639:16-1639:46)
      kind: switchInt(move _22) -> [0: bb11, otherwise: bb10]
  }
  preds [bb5, bb7]
  succs [bb10, bb11]

bb9
  0: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:1636:35-1636:39)
  1: _19 = core::option::Option::<util::search::Match>::None
    SourceInfo(regex-automata/src/meta/strategy.rs:1636:35-1636:39)
  2: _0 = core::result::Result::<core::option::Option<util::search::Match>, meta::error::RetryError>::Ok(move _19)
    SourceInfo(regex-automata/src/meta/strategy.rs:1636:32-1636:40)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:1636:39-1636:40)
  4: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1638:14-1638:15)
  5: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1638:14-1638:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb58
  }
  preds [bb7]
  succs [bb58]

bb10
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1639:45-1639:46)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1639:45-1639:46)
  2: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1647:28-1647:77)
  3: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1647:50-1647:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1647:50-1647:76)
      kind: _27 = meta::error::RetryQuadraticError::new() -> [return: bb12, unwind: bb60]
  }
  preds [bb8]
  succs [bb12, bb60]

bb11
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1639:45-1639:46)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1639:45-1639:46)
  2: _21 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1648:14-1648:14)
  3: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1648:13-1648:14)
  4: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1648:13-1648:14)
  5: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1650:17-1650:25)
  6: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1650:28-1652:41)
  7: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1650:28-1651:25)
  8: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1650:28-1650:33)
  9: _31 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1650:28-1650:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1650:28-1651:25)
      kind: _30 = <util::search::Input<'_> as core::clone::Clone>::clone(move _31) -> [return: bb13, unwind: bb60]
  }
  preds [bb8]
  succs [bb13, bb60]

bb12
  0: _26 = meta::error::RetryError::Quadratic(move _27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1647:28-1647:77)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1647:76-1647:77)
  2: _0 = core::result::Result::<core::option::Option<util::search::Match>, meta::error::RetryError>::Err(move _26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1647:24-1647:78)
  3: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1647:77-1647:78)
  4: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1648:13-1648:14)
  5: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1648:13-1648:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb58
  }
  preds [bb10]
  succs [bb58]

bb13
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1651:24-1651:25)
  1: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1652:27-1652:40)
  2: _32 = util::search::Anchored::Yes
    SourceInfo(regex-automata/src/meta/strategy.rs:1652:27-1652:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1650:28-1652:41)
      kind: _29 = util::search::Input::<'_>::anchored(move _30, move _32) -> [return: bb14, unwind: bb60]
  }
  preds [bb11]
  succs [bb14, bb60]

bb14
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1652:40-1652:41)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1652:40-1652:41)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1653:23-1653:52)
  3: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1653:23-1653:36)
  4: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1653:23-1653:28)
  5: _35 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1653:23-1653:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1653:23-1653:36)
      kind: _34 = util::search::Input::<'_>::start(move _35) -> [return: bb15, unwind: bb60]
  }
  preds [bb13]
  succs [bb15, bb60]

bb15
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1653:35-1653:36)
  1: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1653:38-1653:52)
  2: _36 = (_10.0: usize)
    SourceInfo(regex-automata/src/meta/strategy.rs:1653:38-1653:52)
  3: _33 = core::ops::Range::<usize> { start: move _34, end: move _36 }
    SourceInfo(regex-automata/src/meta/strategy.rs:1653:23-1653:52)
  4: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1653:51-1653:52)
  5: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1653:51-1653:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1650:28-1653:53)
      kind: _28 = util::search::Input::<'_>::span::<core::ops::Range<usize>>(move _29, move _33) -> [return: bb16, unwind: bb60]
  }
  preds [bb14]
  succs [bb16, bb60]

bb16
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1653:52-1653:53)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1653:52-1653:53)
  2: FakeRead(ForLet(None), _28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1650:17-1650:25)
  3: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:13-1690:14)
  4: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
  5: StorageLive(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
  6: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:14)
  7: StorageLive(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1660:23)
  8: _41 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1660:23)
  9: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1661:17-1661:22)
  10: _42 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1661:17-1661:22)
  11: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:1662:17-1662:26)
  12: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1662:17-1662:26)
  13: _44 = &_28
    SourceInfo(regex-automata/src/meta/strategy.rs:1662:17-1662:26)
  14: _43 = &(*_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1662:17-1662:26)
  15: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1663:17-1663:32)
  16: _45 = _6
    SourceInfo(regex-automata/src/meta/strategy.rs:1663:17-1663:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:14)
      kind: _40 = meta::strategy::ReverseInner::try_search_half_rev_limited(move _41, move _42, move _43, move _45) -> [return: bb17, unwind: bb60]
  }
  preds [bb15]
  succs [bb17, bb60]

bb17
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1664:13-1664:14)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:1664:13-1664:14)
  2: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1664:13-1664:14)
  3: StorageDead(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1664:13-1664:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
      kind: _39 = <core::result::Result<core::option::Option<util::search::HalfMatch>, meta::error::RetryError> as core::ops::Try>::branch(move _40) -> [return: bb18, unwind: bb60]
  }
  preds [bb16]
  succs [bb18, bb60]

bb18
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:1664:14-1664:15)
  1: PlaceMention(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
  2: _46 = discriminant(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
      kind: switchInt(move _46) -> [0: bb21, 1: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20, bb21]

bb19
  0: FakeRead(ForMatchedPlace(None), _39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
      kind: unreachable
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1664:14-1664:15)
      kind: falseEdge -> [real: bb22, imaginary: bb21]
  }
  preds [bb18]
  succs [bb21, bb22]

bb21
  0: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
  1: _50 = ((_39 as Continue).0: core::option::Option<util::search::HalfMatch>)
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
  2: _38 = _50
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
  3: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1664:14-1664:15)
  4: PlaceMention(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
  5: _51 = discriminant(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1660:13-1664:15)
      kind: switchInt(move _51) -> [0: bb25, 1: bb26, otherwise: bb24]
  }
  preds [bb18, bb20]
  succs [bb24, bb25, bb26]

bb22
  0: StorageLive(_47)
    SourceInfo(regex-automata/src/meta/strategy.rs:1664:14-1664:15)
  1: _47 = move ((_39 as Break).0: core::result::Result<core::convert::Infallible, meta::error::RetryError>)
    SourceInfo(regex-automata/src/meta/strategy.rs:1664:14-1664:15)
  2: StorageLive(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:1664:14-1664:15)
  3: _49 = move _47
    SourceInfo(regex-automata/src/meta/strategy.rs:1664:14-1664:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
      kind: _0 = <core::result::Result<core::option::Option<util::search::Match>, meta::error::RetryError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, meta::error::RetryError>>>::from_residual(move _49) -> [return: bb23, unwind: bb60]
  }
  preds [bb20]
  succs [bb23, bb60]

bb23
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:1664:14-1664:15)
  1: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/strategy.rs:1664:14-1664:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb57
  }
  preds [bb22]
  succs [bb57]

bb24
  0: FakeRead(ForMatchedPlace(None), _38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1660:19-1664:15)
      kind: unreachable
  }
  preds [bb21]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1665:17-1665:21)
      kind: falseEdge -> [real: bb27, imaginary: bb26]
  }
  preds [bb21]
  succs [bb26, bb27]

bb26
  0: StorageLive(_60)
    SourceInfo(regex-automata/src/meta/strategy.rs:1671:22-1671:30)
  1: _60 = ((_38 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/meta/strategy.rs:1671:22-1671:30)
  2: StorageLive(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1672:25-1672:33)
  3: StorageLive(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1672:36-1674:73)
  4: StorageLive(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:1672:36-1673:33)
  5: StorageLive(_64)
    SourceInfo(regex-automata/src/meta/strategy.rs:1672:36-1672:41)
  6: _64 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1672:36-1672:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1672:36-1673:33)
      kind: _63 = <util::search::Input<'_> as core::clone::Clone>::clone(move _64) -> [return: bb32, unwind: bb60]
  }
  preds [bb21, bb25]
  succs [bb32, bb60]

bb27
  0: StorageLive(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:1666:21-1668:22)
  1: StorageLive(_53)
    SourceInfo(regex-automata/src/meta/strategy.rs:1666:24-1666:46)
  2: StorageLive(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:1666:24-1666:34)
  3: _54 = (_4.0: usize)
    SourceInfo(regex-automata/src/meta/strategy.rs:1666:24-1666:34)
  4: StorageLive(_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1666:38-1666:46)
  5: _55 = (_4.1: usize)
    SourceInfo(regex-automata/src/meta/strategy.rs:1666:38-1666:46)
  6: _53 = Ge(move _54, move _55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1666:24-1666:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1666:24-1666:46)
      kind: switchInt(move _53) -> [0: bb29, otherwise: bb28]
  }
  preds [bb25]
  succs [bb28, bb29]

bb28
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1666:45-1666:46)
  1: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:1666:45-1666:46)
  2: _8 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1667:25-1667:30)
  3: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/strategy.rs:1668:21-1668:22)
  4: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:1668:21-1668:22)
  5: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1690:13-1690:14)
  6: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1690:13-1690:14)
  7: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1690:13-1690:14)
  8: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1690:13-1690:14)
  9: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1692:9-1692:10)
  10: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1692:9-1692:10)
  11: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1692:9-1692:10)
  12: StorageLive(_103)
    SourceInfo(regex-automata/src/meta/strategy.rs:1693:12-1693:16)
  13: _103 = core::option::Option::<util::search::Match>::None
    SourceInfo(regex-automata/src/meta/strategy.rs:1693:12-1693:16)
  14: _0 = core::result::Result::<core::option::Option<util::search::Match>, meta::error::RetryError>::Ok(move _103)
    SourceInfo(regex-automata/src/meta/strategy.rs:1693:9-1693:17)
  15: StorageDead(_103)
    SourceInfo(regex-automata/src/meta/strategy.rs:1693:16-1693:17)
  16: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1694:5-1694:6)
  17: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1694:5-1694:6)
  18: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1694:5-1694:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1694:6-1694:6)
      kind: goto -> bb59
  }
  preds [bb27]
  succs [bb59]

bb29
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1666:45-1666:46)
  1: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:1666:45-1666:46)
  2: _52 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1668:22-1668:22)
  3: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/strategy.rs:1668:21-1668:22)
  4: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:1668:21-1668:22)
  5: StorageLive(_57)
    SourceInfo(regex-automata/src/meta/strategy.rs:1669:34-1669:72)
  6: StorageLive(_58)
    SourceInfo(regex-automata/src/meta/strategy.rs:1669:34-1669:63)
  7: StorageLive(_59)
    SourceInfo(regex-automata/src/meta/strategy.rs:1669:34-1669:48)
  8: _59 = (_10.0: usize)
    SourceInfo(regex-automata/src/meta/strategy.rs:1669:34-1669:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1669:34-1669:63)
      kind: _58 = core::num::<impl usize>::checked_add(move _59, const 1_usize) -> [return: bb30, unwind: bb60]
  }
  preds [bb27]
  succs [bb30, bb60]

bb30
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/meta/strategy.rs:1669:62-1669:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1669:34-1669:72)
      kind: _57 = core::option::Option::<usize>::unwrap(move _58) -> [return: bb31, unwind: bb60]
  }
  preds [bb29]
  succs [bb31, bb60]

bb31
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/strategy.rs:1669:71-1669:72)
  1: (_4.0: usize) = move _57
    SourceInfo(regex-automata/src/meta/strategy.rs:1669:21-1669:72)
  2: StorageDead(_57)
    SourceInfo(regex-automata/src/meta/strategy.rs:1669:71-1669:72)
  3: _37 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1665:25-1670:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1665:25-1670:18)
      kind: goto -> bb55
  }
  preds [bb30]
  succs [bb55]

bb32
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/meta/strategy.rs:1673:32-1673:33)
  1: StorageLive(_65)
    SourceInfo(regex-automata/src/meta/strategy.rs:1674:35-1674:72)
  2: StorageLive(_66)
    SourceInfo(regex-automata/src/meta/strategy.rs:1674:53-1674:71)
  3: StorageLive(_67)
    SourceInfo(regex-automata/src/meta/strategy.rs:1674:53-1674:61)
  4: _67 = &_60
    SourceInfo(regex-automata/src/meta/strategy.rs:1674:53-1674:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1674:53-1674:71)
      kind: _66 = util::search::HalfMatch::pattern(move _67) -> [return: bb33, unwind: bb60]
  }
  preds [bb26]
  succs [bb33, bb60]

bb33
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/meta/strategy.rs:1674:70-1674:71)
  1: _65 = util::search::Anchored::Pattern(move _66)
    SourceInfo(regex-automata/src/meta/strategy.rs:1674:35-1674:72)
  2: StorageDead(_66)
    SourceInfo(regex-automata/src/meta/strategy.rs:1674:71-1674:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1672:36-1674:73)
      kind: _62 = util::search::Input::<'_>::anchored(move _63, move _65) -> [return: bb34, unwind: bb60]
  }
  preds [bb32]
  succs [bb34, bb60]

bb34
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/meta/strategy.rs:1674:72-1674:73)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:1674:72-1674:73)
  2: StorageLive(_68)
    SourceInfo(regex-automata/src/meta/strategy.rs:1675:31-1675:61)
  3: StorageLive(_69)
    SourceInfo(regex-automata/src/meta/strategy.rs:1675:31-1675:48)
  4: StorageLive(_70)
    SourceInfo(regex-automata/src/meta/strategy.rs:1675:31-1675:39)
  5: _70 = &_60
    SourceInfo(regex-automata/src/meta/strategy.rs:1675:31-1675:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1675:31-1675:48)
      kind: _69 = util::search::HalfMatch::offset(move _70) -> [return: bb35, unwind: bb60]
  }
  preds [bb33]
  succs [bb35, bb60]

bb35
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/meta/strategy.rs:1675:47-1675:48)
  1: StorageLive(_71)
    SourceInfo(regex-automata/src/meta/strategy.rs:1675:50-1675:61)
  2: StorageLive(_72)
    SourceInfo(regex-automata/src/meta/strategy.rs:1675:50-1675:55)
  3: _72 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1675:50-1675:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1675:50-1675:61)
      kind: _71 = util::search::Input::<'_>::end(move _72) -> [return: bb36, unwind: bb60]
  }
  preds [bb34]
  succs [bb36, bb60]

bb36
  0: StorageDead(_72)
    SourceInfo(regex-automata/src/meta/strategy.rs:1675:60-1675:61)
  1: _68 = core::ops::Range::<usize> { start: move _69, end: move _71 }
    SourceInfo(regex-automata/src/meta/strategy.rs:1675:31-1675:61)
  2: StorageDead(_71)
    SourceInfo(regex-automata/src/meta/strategy.rs:1675:60-1675:61)
  3: StorageDead(_69)
    SourceInfo(regex-automata/src/meta/strategy.rs:1675:60-1675:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1672:36-1675:62)
      kind: _61 = util::search::Input::<'_>::span::<core::ops::Range<usize>>(move _62, move _68) -> [return: bb37, unwind: bb60]
  }
  preds [bb35]
  succs [bb37, bb60]

bb37
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/meta/strategy.rs:1675:61-1675:62)
  1: StorageDead(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1675:61-1675:62)
  2: FakeRead(ForLet(None), _61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1672:25-1672:33)
  3: StorageLive(_73)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
  4: StorageLive(_74)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
  5: StorageLive(_75)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:76)
  6: StorageLive(_76)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:31)
  7: _76 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:31)
  8: StorageLive(_77)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:59-1676:64)
  9: _77 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:59-1676:64)
  10: StorageLive(_78)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:66-1676:75)
  11: StorageLive(_79)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:66-1676:75)
  12: _79 = &_61
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:66-1676:75)
  13: _78 = &(*_79)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:66-1676:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:76)
      kind: _75 = meta::strategy::ReverseInner::try_search_half_fwd_stopat(move _76, move _77, move _78) -> [return: bb38, unwind: bb60]
  }
  preds [bb36]
  succs [bb38, bb60]

bb38
  0: StorageDead(_78)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:75-1676:76)
  1: StorageDead(_77)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:75-1676:76)
  2: StorageDead(_76)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:75-1676:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
      kind: _74 = <core::result::Result<core::result::Result<util::search::HalfMatch, usize>, meta::error::RetryFailError> as core::ops::Try>::branch(move _75) -> [return: bb39, unwind: bb60]
  }
  preds [bb37]
  succs [bb39, bb60]

bb39
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:76-1676:77)
  1: PlaceMention(_74)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
  2: _80 = discriminant(_74)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
      kind: switchInt(move _80) -> [0: bb42, 1: bb41, otherwise: bb40]
  }
  preds [bb38]
  succs [bb40, bb41, bb42]

bb40
  0: FakeRead(ForMatchedPlace(None), _74)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
      kind: unreachable
  }
  preds [bb39]
  succs []

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1676:76-1676:77)
      kind: falseEdge -> [real: bb43, imaginary: bb42]
  }
  preds [bb39]
  succs [bb42, bb43]

bb42
  0: StorageLive(_84)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
  1: _84 = ((_74 as Continue).0: core::result::Result<util::search::HalfMatch, usize>)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
  2: _73 = _84
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
  3: StorageDead(_84)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:76-1676:77)
  4: PlaceMention(_73)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
  5: _85 = discriminant(_73)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1676:21-1676:77)
      kind: switchInt(move _85) -> [0: bb47, 1: bb46, otherwise: bb45]
  }
  preds [bb39, bb41]
  succs [bb45, bb46, bb47]

bb43
  0: StorageLive(_81)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:76-1676:77)
  1: _81 = move ((_74 as Break).0: core::result::Result<core::convert::Infallible, meta::error::RetryFailError>)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:76-1676:77)
  2: StorageLive(_83)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:76-1676:77)
  3: _83 = move _81
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:76-1676:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
      kind: _0 = <core::result::Result<core::option::Option<util::search::Match>, meta::error::RetryError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, meta::error::RetryFailError>>>::from_residual(move _83) -> [return: bb44, unwind: bb60]
  }
  preds [bb41]
  succs [bb44, bb60]

bb44
  0: StorageDead(_83)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:76-1676:77)
  1: StorageDead(_81)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:76-1676:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb56
  }
  preds [bb43]
  succs [bb56]

bb45
  0: FakeRead(ForMatchedPlace(None), _73)
    SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1676:27-1676:77)
      kind: unreachable
  }
  preds [bb42]
  succs []

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1677:25-1677:36)
      kind: falseEdge -> [real: bb48, imaginary: bb47]
  }
  preds [bb42]
  succs [bb47, bb48]

bb47
  0: StorageLive(_91)
    SourceInfo(regex-automata/src/meta/strategy.rs:1682:28-1682:34)
  1: _91 = ((_73 as Ok).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/meta/strategy.rs:1682:28-1682:34)
  2: StorageLive(_93)
    SourceInfo(regex-automata/src/meta/strategy.rs:1683:39-1686:31)
  3: StorageLive(_94)
    SourceInfo(regex-automata/src/meta/strategy.rs:1683:44-1686:30)
  4: StorageLive(_95)
    SourceInfo(regex-automata/src/meta/strategy.rs:1684:33-1684:51)
  5: StorageLive(_96)
    SourceInfo(regex-automata/src/meta/strategy.rs:1684:33-1684:41)
  6: _96 = &_60
    SourceInfo(regex-automata/src/meta/strategy.rs:1684:33-1684:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1684:33-1684:51)
      kind: _95 = util::search::HalfMatch::pattern(move _96) -> [return: bb51, unwind: bb60]
  }
  preds [bb42, bb46]
  succs [bb51, bb60]

bb48
  0: StorageLive(_86)
    SourceInfo(regex-automata/src/meta/strategy.rs:1677:29-1677:35)
  1: _86 = ((_73 as Err).0: usize)
    SourceInfo(regex-automata/src/meta/strategy.rs:1677:29-1677:35)
  2: StorageLive(_87)
    SourceInfo(regex-automata/src/meta/strategy.rs:1678:45-1678:51)
  3: _87 = _86
    SourceInfo(regex-automata/src/meta/strategy.rs:1678:45-1678:51)
  4: _7 = move _87
    SourceInfo(regex-automata/src/meta/strategy.rs:1678:29-1678:51)
  5: StorageDead(_87)
    SourceInfo(regex-automata/src/meta/strategy.rs:1678:50-1678:51)
  6: StorageLive(_88)
    SourceInfo(regex-automata/src/meta/strategy.rs:1680:33-1680:71)
  7: StorageLive(_89)
    SourceInfo(regex-automata/src/meta/strategy.rs:1680:33-1680:62)
  8: StorageLive(_90)
    SourceInfo(regex-automata/src/meta/strategy.rs:1680:33-1680:47)
  9: _90 = (_10.0: usize)
    SourceInfo(regex-automata/src/meta/strategy.rs:1680:33-1680:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1680:33-1680:62)
      kind: _89 = core::num::<impl usize>::checked_add(move _90, const 1_usize) -> [return: bb49, unwind: bb60]
  }
  preds [bb46]
  succs [bb49, bb60]

bb49
  0: StorageDead(_90)
    SourceInfo(regex-automata/src/meta/strategy.rs:1680:61-1680:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1680:33-1680:71)
      kind: _88 = core::option::Option::<usize>::unwrap(move _89) -> [return: bb50, unwind: bb60]
  }
  preds [bb48]
  succs [bb50, bb60]

bb50
  0: StorageDead(_89)
    SourceInfo(regex-automata/src/meta/strategy.rs:1680:70-1680:71)
  1: (_4.0: usize) = move _88
    SourceInfo(regex-automata/src/meta/strategy.rs:1679:29-1680:71)
  2: StorageDead(_88)
    SourceInfo(regex-automata/src/meta/strategy.rs:1680:70-1680:71)
  3: _37 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1677:40-1681:26)
  4: StorageDead(_86)
    SourceInfo(regex-automata/src/meta/strategy.rs:1681:25-1681:26)
  5: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1689:17-1689:18)
  6: StorageDead(_79)
    SourceInfo(regex-automata/src/meta/strategy.rs:1689:17-1689:18)
  7: StorageDead(_74)
    SourceInfo(regex-automata/src/meta/strategy.rs:1689:17-1689:18)
  8: StorageDead(_73)
    SourceInfo(regex-automata/src/meta/strategy.rs:1689:17-1689:18)
  9: StorageDead(_60)
    SourceInfo(regex-automata/src/meta/strategy.rs:1689:17-1689:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1689:17-1689:18)
      kind: goto -> bb55
  }
  preds [bb49]
  succs [bb55]

bb51
  0: StorageDead(_96)
    SourceInfo(regex-automata/src/meta/strategy.rs:1684:50-1684:51)
  1: StorageLive(_97)
    SourceInfo(regex-automata/src/meta/strategy.rs:1685:33-1685:67)
  2: StorageLive(_98)
    SourceInfo(regex-automata/src/meta/strategy.rs:1685:33-1685:50)
  3: StorageLive(_99)
    SourceInfo(regex-automata/src/meta/strategy.rs:1685:33-1685:41)
  4: _99 = &_60
    SourceInfo(regex-automata/src/meta/strategy.rs:1685:33-1685:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1685:33-1685:50)
      kind: _98 = util::search::HalfMatch::offset(move _99) -> [return: bb52, unwind: bb60]
  }
  preds [bb47]
  succs [bb52, bb60]

bb52
  0: StorageDead(_99)
    SourceInfo(regex-automata/src/meta/strategy.rs:1685:49-1685:50)
  1: StorageLive(_100)
    SourceInfo(regex-automata/src/meta/strategy.rs:1685:52-1685:67)
  2: StorageLive(_101)
    SourceInfo(regex-automata/src/meta/strategy.rs:1685:52-1685:58)
  3: _101 = &_91
    SourceInfo(regex-automata/src/meta/strategy.rs:1685:52-1685:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1685:52-1685:67)
      kind: _100 = util::search::HalfMatch::offset(move _101) -> [return: bb53, unwind: bb60]
  }
  preds [bb51]
  succs [bb53, bb60]

bb53
  0: StorageDead(_101)
    SourceInfo(regex-automata/src/meta/strategy.rs:1685:66-1685:67)
  1: _97 = core::ops::Range::<usize> { start: move _98, end: move _100 }
    SourceInfo(regex-automata/src/meta/strategy.rs:1685:33-1685:67)
  2: StorageDead(_100)
    SourceInfo(regex-automata/src/meta/strategy.rs:1685:66-1685:67)
  3: StorageDead(_98)
    SourceInfo(regex-automata/src/meta/strategy.rs:1685:66-1685:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1683:44-1686:30)
      kind: _94 = util::search::Match::new::<core::ops::Range<usize>>(move _95, move _97) -> [return: bb54, unwind: bb60]
  }
  preds [bb52]
  succs [bb54, bb60]

bb54
  0: StorageDead(_97)
    SourceInfo(regex-automata/src/meta/strategy.rs:1686:29-1686:30)
  1: StorageDead(_95)
    SourceInfo(regex-automata/src/meta/strategy.rs:1686:29-1686:30)
  2: _93 = core::option::Option::<util::search::Match>::Some(move _94)
    SourceInfo(regex-automata/src/meta/strategy.rs:1683:39-1686:31)
  3: StorageDead(_94)
    SourceInfo(regex-automata/src/meta/strategy.rs:1686:30-1686:31)
  4: _0 = core::result::Result::<core::option::Option<util::search::Match>, meta::error::RetryError>::Ok(move _93)
    SourceInfo(regex-automata/src/meta/strategy.rs:1683:36-1686:32)
  5: StorageDead(_93)
    SourceInfo(regex-automata/src/meta/strategy.rs:1686:31-1686:32)
  6: StorageDead(_91)
    SourceInfo(regex-automata/src/meta/strategy.rs:1687:25-1687:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb56
  }
  preds [bb53]
  succs [bb56]

bb55
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1690:13-1690:14)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1690:13-1690:14)
  2: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1690:13-1690:14)
  3: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1690:13-1690:14)
  4: StorageLive(_102)
    SourceInfo(regex-automata/src/meta/strategy.rs:1691:31-1691:43)
  5: _102 = (_10.1: usize)
    SourceInfo(regex-automata/src/meta/strategy.rs:1691:31-1691:43)
  6: _6 = move _102
    SourceInfo(regex-automata/src/meta/strategy.rs:1691:13-1691:43)
  7: StorageDead(_102)
    SourceInfo(regex-automata/src/meta/strategy.rs:1691:42-1691:43)
  8: _9 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1634:14-1692:10)
  9: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1692:9-1692:10)
  10: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1692:9-1692:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1634:9-1692:10)
      kind: goto -> bb2
  }
  preds [bb31, bb50]
  succs [bb2]

bb56
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1689:17-1689:18)
  1: StorageDead(_79)
    SourceInfo(regex-automata/src/meta/strategy.rs:1689:17-1689:18)
  2: StorageDead(_74)
    SourceInfo(regex-automata/src/meta/strategy.rs:1689:17-1689:18)
  3: StorageDead(_73)
    SourceInfo(regex-automata/src/meta/strategy.rs:1689:17-1689:18)
  4: StorageDead(_60)
    SourceInfo(regex-automata/src/meta/strategy.rs:1689:17-1689:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb57
  }
  preds [bb44, bb54]
  succs [bb57]

bb57
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1690:13-1690:14)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1690:13-1690:14)
  2: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:1690:13-1690:14)
  3: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1690:13-1690:14)
  4: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1692:9-1692:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb58
  }
  preds [bb23, bb56]
  succs [bb58]

bb58
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1692:9-1692:10)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1692:9-1692:10)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1694:5-1694:6)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1694:5-1694:6)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1694:5-1694:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1694:6-1694:6)
      kind: goto -> bb59
  }
  preds [bb9, bb12, bb57]
  succs [bb59]

bb59
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1694:6-1694:6)
      kind: return
  }
  preds [bb28, bb58]
  succs []

bb60
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1626:5-1694:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb10, bb11, bb13, bb14, bb15, bb16, bb17, bb22, bb26, bb29, bb30, bb32, bb33, bb34, bb35, bb36, bb37, bb38, bb43, bb47, bb48, bb49, bb51, bb52, bb53]
  succs []

