{
  "regex-automata/src/meta/strategy.rs:1639:16:1639:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "litmatch.start < min_pre_start",
          "lhs": "litmatch.start",
          "rhs": "min_pre_start",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/meta/strategy.rs:1666:24:1666:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "span.start >= span.end",
          "lhs": "span.start",
          "rhs": "span.end",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/meta/strategy.rs:1635:34:1635:76": [
    {
      "Match": {
        "match_source": "regex-automata/src/meta/strategy.rs:1635:34:1635:76",
        "match_str": "self.preinner.find(input.haystack(), span)",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/meta/strategy.rs:1637:17:1637:27": {
            "pat": {
              "pat_str": "Some(span)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/meta/strategy.rs:1637:31:1637:35"
          },
          "regex-automata/src/meta/strategy.rs:1636:17:1636:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/meta/strategy.rs:1636:25:1636:40"
          }
        }
      }
    }
  ],
  "regex-automata/src/meta/strategy.rs:1676:27:1676:77": [
    {
      "Match": {
        "match_source": "regex-automata/src/meta/strategy.rs:1676:27:1676:77",
        "match_str": "self.try_search_half_fwd_stopat(cache, &fwdinput)?",
        "match_kind": {
          "Enum": [
            "Ok",
            "Err"
          ]
        },
        "arms": {
          "regex-automata/src/meta/strategy.rs:1682:25:1682:35": {
            "pat": {
              "pat_str": "Ok(hm_end)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/meta/strategy.rs:1682:39:1687:26"
          },
          "regex-automata/src/meta/strategy.rs:1677:25:1677:36": {
            "pat": {
              "pat_str": "Err(stopat)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/meta/strategy.rs:1677:40:1681:26"
          }
        }
      }
    },
    {
      "Try": "self.try_search_half_fwd_stopat(cache, &fwdinput)?"
    }
  ],
  "regex-automata/src/meta/strategy.rs:1660:19:1664:15": [
    {
      "Match": {
        "match_source": "regex-automata/src/meta/strategy.rs:1660:19:1664:15",
        "match_str": "self.try_search_half_rev_limited(\n                cache,\n                &revinput,\n                min_match_start,\n            )?",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/meta/strategy.rs:1665:17:1665:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/meta/strategy.rs:1665:25:1670:18"
          },
          "regex-automata/src/meta/strategy.rs:1671:17:1671:31": {
            "pat": {
              "pat_str": "Some(hm_start)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/meta/strategy.rs:1671:35:1689:18"
          }
        }
      }
    },
    {
      "Try": "self.try_search_half_rev_limited(\n                cache,\n                &revinput,\n                min_match_start,\n            )?"
    }
  ]
}