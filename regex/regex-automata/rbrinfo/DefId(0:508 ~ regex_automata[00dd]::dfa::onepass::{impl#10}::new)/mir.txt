bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2601:13-2601:23)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2602:16-2602:26)
  2: _5 = _1
    SourceInfo(regex-automata/src/dfa/onepass.rs:2602:16-2602:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2602:16-2602:26)
      kind: switchInt(move _5) -> [0: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _6 = Lt(const dfa::onepass::Transition::MATCH_WINS_SHIFT, const 64_u64)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2602:29-2602:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2602:29-2602:62)
      kind: assert(move _6, "attempt to shift left by `{}`, which would overflow", const dfa::onepass::Transition::MATCH_WINS_SHIFT) -> [success: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: _4 = Shl(const 1_u64, const dfa::onepass::Transition::MATCH_WINS_SHIFT)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2602:29-2602:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2602:13-2602:75)
      kind: goto -> bb4
  }
  preds [bb1]
  succs [bb4]

bb3
  0: _4 = const 0_u64
    SourceInfo(regex-automata/src/dfa/onepass.rs:2602:72-2602:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2602:13-2602:75)
      kind: goto -> bb4
  }
  preds [bb0]
  succs [bb4]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2602:74-2602:75)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2601:13-2601:23)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2603:13-2603:16)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2603:19-2603:31)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2603:19-2603:22)
  5: _9 = &_2
    SourceInfo(regex-automata/src/dfa/onepass.rs:2603:19-2603:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2603:19-2603:31)
      kind: _8 = util::primitives::StateID::as_u64(move _9) -> [return: bb5, unwind: bb7]
  }
  preds [bb2, bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2603:30-2603:31)
  1: _10 = Lt(const dfa::onepass::Transition::STATE_ID_SHIFT, const 64_u64)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2603:19-2603:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2603:19-2603:61)
      kind: assert(move _10, "attempt to shift left by `{}`, which would overflow", const dfa::onepass::Transition::STATE_ID_SHIFT) -> [success: bb6, unwind: bb7]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: _7 = Shl(move _8, const dfa::onepass::Transition::STATE_ID_SHIFT)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2603:19-2603:61)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2603:60-2603:61)
  2: FakeRead(ForLet(None), _7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2603:13-2603:16)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:20-2604:49)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:20-2604:36)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:20-2604:23)
  6: _13 = _7
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:20-2604:23)
  7: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:26-2604:36)
  8: _14 = _4
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:26-2604:36)
  9: _12 = BitOr(move _13, move _14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:20-2604:36)
  10: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:35-2604:36)
  11: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:35-2604:36)
  12: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:39-2604:49)
  13: _15 = (_3.0: u64)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:39-2604:49)
  14: _11 = BitOr(move _12, move _15)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:20-2604:49)
  15: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:48-2604:49)
  16: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:48-2604:49)
  17: _0 = dfa::onepass::Transition(move _11)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:9-2604:50)
  18: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2604:49-2604:50)
  19: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2605:5-2605:6)
  20: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2605:5-2605:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2605:6-2605:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2600:5-2605:6)
      kind: resume
  }
  preds [bb1, bb4, bb5]
  succs []

