bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:766:26-766:45)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:766:26-766:34)
  2: _5 = &((*_1).8: meta::wrappers::DFA)
    SourceInfo(regex-automata/src/meta/strategy.rs:766:26-766:34)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:766:39-766:44)
  4: _6 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:766:39-766:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:766:26-766:45)
      kind: _4 = meta::wrappers::DFA::get(move _5, move _6) -> [return: bb1, unwind: bb28]
  }
  preds []
  succs [bb1, bb28]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:766:44-766:45)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:766:44-766:45)
  2: PlaceMention(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:766:26-766:45)
  3: _7 = discriminant(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:766:26-766:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:766:16-766:23)
      kind: switchInt(move _7) -> [1: bb2, otherwise: bb12]
  }
  preds [bb0]
  succs [bb2, bb12]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:766:16-766:23)
      kind: falseEdge -> [real: bb3, imaginary: bb12]
  }
  preds [bb1]
  succs [bb3, bb12]

bb3
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:766:21-766:22)
  1: _8 = ((_4 as Some).0: &meta::wrappers::DFAEngine)
    SourceInfo(regex-automata/src/meta/strategy.rs:766:21-766:22)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:771:19-771:47)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:771:19-771:20)
  4: _10 = &(*_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:771:19-771:20)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:771:41-771:46)
  6: _11 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:771:41-771:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:771:19-771:47)
      kind: _9 = meta::wrappers::DFAEngine::try_search_half_fwd(move _10, move _11) -> [return: bb4, unwind: bb28]
  }
  preds [bb2]
  succs [bb4, bb28]

bb4
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:771:46-771:47)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:771:46-771:47)
  2: PlaceMention(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:771:19-771:47)
  3: _12 = discriminant(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:771:19-771:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:771:13-771:47)
      kind: switchInt(move _12) -> [0: bb6, 1: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _9)
    SourceInfo(regex-automata/src/meta/strategy.rs:771:19-771:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:771:19-771:47)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:772:17-772:22)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:773:21-773:25)
  1: _15 = move ((_9 as Err).0: meta::error::RetryFailError)
    SourceInfo(regex-automata/src/meta/strategy.rs:773:21-773:25)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:775:21-775:25)
  3: _16 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:775:21-775:25)
  4: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:775:42-775:47)
  5: _17 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:775:42-775:47)
  6: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:775:49-775:54)
  7: _18 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:775:49-775:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:775:21-775:55)
      kind: _0 = meta::strategy::Core::is_match_nofail(move _16, move _17, move _18) -> [return: bb10, unwind: bb28]
  }
  preds [bb4, bb6]
  succs [bb10, bb28]

bb8
  0: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:772:20-772:21)
  1: _13 = ((_9 as Ok).0: core::option::Option<util::search::HalfMatch>)
    SourceInfo(regex-automata/src/meta/strategy.rs:772:20-772:21)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:772:26-772:27)
  3: _14 = &_13
    SourceInfo(regex-automata/src/meta/strategy.rs:772:26-772:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:772:26-772:37)
      kind: _0 = core::option::Option::<util::search::HalfMatch>::is_some(move _14) -> [return: bb9, unwind: bb28]
  }
  preds [bb6]
  succs [bb9, bb28]

bb9
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:772:36-772:37)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:772:36-772:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:772:36-772:37)
      kind: goto -> bb11
  }
  preds [bb8]
  succs [bb11]

bb10
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:775:54-775:55)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:775:54-775:55)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:775:54-775:55)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:776:17-776:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:776:17-776:18)
      kind: goto -> bb11
  }
  preds [bb7]
  succs [bb11]

bb11
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:778:9-778:10)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:778:9-778:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:766:9-792:10)
      kind: goto -> bb27
  }
  preds [bb9, bb10]
  succs [bb27]

bb12
  0: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:778:33-778:55)
  1: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:778:33-778:44)
  2: _20 = &((*_1).7: meta::wrappers::Hybrid)
    SourceInfo(regex-automata/src/meta/strategy.rs:778:33-778:44)
  3: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:778:49-778:54)
  4: _21 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:778:49-778:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:778:33-778:55)
      kind: _19 = meta::wrappers::Hybrid::get(move _20, move _21) -> [return: bb13, unwind: bb28]
  }
  preds [bb1, bb2]
  succs [bb13, bb28]

bb13
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:778:54-778:55)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:778:54-778:55)
  2: PlaceMention(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:778:33-778:55)
  3: _22 = discriminant(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:778:33-778:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:778:23-778:30)
      kind: switchInt(move _22) -> [1: bb14, otherwise: bb24]
  }
  preds [bb12]
  succs [bb14, bb24]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:778:23-778:30)
      kind: falseEdge -> [real: bb15, imaginary: bb24]
  }
  preds [bb13]
  succs [bb15, bb24]

bb15
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:778:28-778:29)
  1: _23 = ((_19 as Some).0: &meta::wrappers::HybridEngine)
    SourceInfo(regex-automata/src/meta/strategy.rs:778:28-778:29)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:19-783:66)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:19-783:20)
  4: _25 = &(*_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:19-783:20)
  5: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:41-783:58)
  6: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:41-783:58)
  7: _27 = &mut ((*_2).4: meta::wrappers::HybridCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:41-783:58)
  8: _26 = &mut (*_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:41-783:58)
  9: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:60-783:65)
  10: _28 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:60-783:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:783:19-783:66)
      kind: _24 = meta::wrappers::HybridEngine::try_search_half_fwd(move _25, move _26, move _28) -> [return: bb16, unwind: bb28]
  }
  preds [bb14]
  succs [bb16, bb28]

bb16
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:65-783:66)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:65-783:66)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:65-783:66)
  3: PlaceMention(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:19-783:66)
  4: _29 = discriminant(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:19-783:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:783:13-783:66)
      kind: switchInt(move _29) -> [0: bb18, 1: bb19, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18, bb19]

bb17
  0: FakeRead(ForMatchedPlace(None), _24)
    SourceInfo(regex-automata/src/meta/strategy.rs:783:19-783:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:783:19-783:66)
      kind: unreachable
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:784:17-784:22)
      kind: falseEdge -> [real: bb20, imaginary: bb19]
  }
  preds [bb16]
  succs [bb19, bb20]

bb19
  0: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:785:21-785:25)
  1: _32 = move ((_24 as Err).0: meta::error::RetryFailError)
    SourceInfo(regex-automata/src/meta/strategy.rs:785:21-785:25)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:787:21-787:25)
  3: _33 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:787:21-787:25)
  4: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:787:42-787:47)
  5: _34 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:787:42-787:47)
  6: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:787:49-787:54)
  7: _35 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:787:49-787:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:787:21-787:55)
      kind: _0 = meta::strategy::Core::is_match_nofail(move _33, move _34, move _35) -> [return: bb22, unwind: bb28]
  }
  preds [bb16, bb18]
  succs [bb22, bb28]

bb20
  0: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:784:20-784:21)
  1: _30 = ((_24 as Ok).0: core::option::Option<util::search::HalfMatch>)
    SourceInfo(regex-automata/src/meta/strategy.rs:784:20-784:21)
  2: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:784:26-784:27)
  3: _31 = &_30
    SourceInfo(regex-automata/src/meta/strategy.rs:784:26-784:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:784:26-784:37)
      kind: _0 = core::option::Option::<util::search::HalfMatch>::is_some(move _31) -> [return: bb21, unwind: bb28]
  }
  preds [bb18]
  succs [bb21, bb28]

bb21
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:784:36-784:37)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:784:36-784:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:784:36-784:37)
      kind: goto -> bb23
  }
  preds [bb20]
  succs [bb23]

bb22
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:787:54-787:55)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:787:54-787:55)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:787:54-787:55)
  3: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:788:17-788:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:788:17-788:18)
      kind: goto -> bb23
  }
  preds [bb19]
  succs [bb23]

bb23
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:790:9-790:10)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:790:9-790:10)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:790:9-790:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:778:16-792:10)
      kind: goto -> bb26
  }
  preds [bb21, bb22]
  succs [bb26]

bb24
  0: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:791:13-791:17)
  1: _36 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:791:13-791:17)
  2: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:791:34-791:39)
  3: _37 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:791:34-791:39)
  4: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:791:41-791:46)
  5: _38 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:791:41-791:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:791:13-791:47)
      kind: _0 = meta::strategy::Core::is_match_nofail(move _36, move _37, move _38) -> [return: bb25, unwind: bb28]
  }
  preds [bb13, bb14]
  succs [bb25, bb28]

bb25
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:791:46-791:47)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:791:46-791:47)
  2: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:791:46-791:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:778:16-792:10)
      kind: goto -> bb26
  }
  preds [bb24]
  succs [bb26]

bb26
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:792:9-792:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:766:9-792:10)
      kind: goto -> bb27
  }
  preds [bb23, bb25]
  succs [bb27]

bb27
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:793:5-793:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:793:6-793:6)
      kind: return
  }
  preds [bb11, bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:765:5-793:6)
      kind: resume
  }
  preds [bb0, bb3, bb7, bb8, bb12, bb15, bb19, bb20, bb24]
  succs []

