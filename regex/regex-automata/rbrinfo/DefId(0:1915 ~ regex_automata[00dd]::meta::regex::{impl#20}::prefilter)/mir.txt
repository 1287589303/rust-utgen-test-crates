bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:2628:23-2628:32)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:2628:28-2628:31)
  2: _4 = move _2
    SourceInfo(regex-automata/src/meta/regex.rs:2628:28-2628:31)
  3: _3 = core::option::Option::<core::option::Option<util::prefilter::Prefilter>>::Some(move _4)
    SourceInfo(regex-automata/src/meta/regex.rs:2628:23-2628:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2628:31-2628:32)
      kind: drop(_4) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:2628:31-2628:32)
  1: _0 = meta::regex::Config { match_kind: (_1.0: core::option::Option<util::search::MatchKind>), utf8_empty: (_1.1: core::option::Option<bool>), autopre: (_1.2: core::option::Option<bool>), pre: move _3, which_captures: (_1.4: core::option::Option<nfa::thompson::compiler::WhichCaptures>), nfa_size_limit: (_1.5: core::option::Option<core::option::Option<usize>>), onepass_size_limit: (_1.6: core::option::Option<core::option::Option<usize>>), hybrid_cache_capacity: (_1.7: core::option::Option<usize>), hybrid: (_1.8: core::option::Option<bool>), dfa: (_1.9: core::option::Option<bool>), dfa_size_limit: (_1.10: core::option::Option<core::option::Option<usize>>), dfa_state_limit: (_1.11: core::option::Option<core::option::Option<usize>>), onepass: (_1.12: core::option::Option<bool>), backtrack: (_1.13: core::option::Option<bool>), byte_classes: (_1.14: core::option::Option<bool>), line_terminator: (_1.15: core::option::Option<u8>) }
    SourceInfo(regex-automata/src/meta/regex.rs:2628:9-2628:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2628:41-2628:42)
      kind: drop(_3) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:2628:41-2628:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2629:5-2629:6)
      kind: drop(_2) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2629:5-2629:6)
      kind: drop(_1) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2629:6-2629:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2628:41-2628:42)
      kind: drop(_3) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2629:5-2629:6)
      kind: drop(_2) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb1, bb5]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2629:5-2629:6)
      kind: drop(_1) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb2, bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2627:5-2629:6)
      kind: resume
  }
  preds [bb3, bb7]
  succs []

