{
  "regex-automata/src/dfa/dense.rs:4852:17:4852:47": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "sid.as_usize() >> self.stride2",
          "lhs": "sid.as_usize()",
          "rhs": "self.stride2",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4855:17:4855:33": [
    {
      "Try": "write!(f, \", \")?"
    }
  ],
  "regex-automata/src/dfa/dense.rs:4849:25:4849:38": [
    {
      "Bool": {
        "Other": "f.alternate()"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4848:39:4848:76": [
    {
      "For": {
        "iter_var": "(i, (start, end, sid))",
        "iter_range": "self.sparse_transitions().enumerate()"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4857:16:4857:28": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "start == end",
          "lhs": "start",
          "rhs": "end",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:4860:17:4860:64": [
    {
      "Try": "write!(f, \"{:?}-{:?} => {:?}\", start, end, id)?"
    }
  ],
  "regex-automata/src/dfa/dense.rs:4858:17:4858:54": [
    {
      "Try": "write!(f, \"{:?} => {:?}\", start, id)?"
    }
  ],
  "regex-automata/src/dfa/dense.rs:4854:16:4854:21": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "i > 0",
          "lhs": "i",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ]
}