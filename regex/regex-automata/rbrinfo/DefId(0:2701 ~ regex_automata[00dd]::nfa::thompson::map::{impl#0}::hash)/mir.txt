bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:144:13-144:18)
  1: _3 = const nfa::thompson::map::INIT
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:144:21-144:25)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:144:13-144:18)
  3: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:9-149:10)
  4: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  5: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  6: _6 = _2
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
      kind: _5 = <&[nfa::thompson::nfa::Transition] as core::iter::IntoIterator>::into_iter(move _6) -> [return: bb1, unwind: bb19]
  }
  preds []
  succs [bb1, bb19]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:20-145:21)
  1: PlaceMention(_5)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  3: _7 = move _5
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:9-149:10)
      kind: goto -> bb2
  }
  preds [bb0]
  succs [bb2]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:9-149:10)
      kind: falseUnwind -> [real: bb3, unwind: bb19]
  }
  preds [bb1, bb14]
  succs [bb3, bb19]

bb3
  0: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  1: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  4: _12 = &mut _7
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  5: _11 = &mut (*_12)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
      kind: _10 = <core::slice::Iter<'_, nfa::thompson::nfa::Transition> as core::iter::Iterator>::next(move _11) -> [return: bb4, unwind: bb19]
  }
  preds [bb2]
  succs [bb4, bb19]

bb4
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:20-145:21)
  1: PlaceMention(_10)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  2: _13 = discriminant(_10)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
      kind: switchInt(move _13) -> [0: bb6, 1: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _10)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:18-145:21)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:9-149:10)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:13-145:14)
  1: _15 = ((_10 as Some).0: &nfa::thompson::nfa::Transition)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:13-145:14)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:17-146:61)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:17-146:41)
  4: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:18-146:19)
  5: _18 = _3
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:18-146:19)
  6: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:22-146:40)
  7: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:32-146:39)
  8: _20 = ((*_15).0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:32-146:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:22-146:40)
      kind: _19 = <u64 as core::convert::From<u8>>::from(move _20) -> [return: bb9, unwind: bb19]
  }
  preds [bb4, bb6]
  succs [bb9, bb19]

bb8
  0: _4 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:9-149:10)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:149:9-149:10)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:149:9-149:10)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:149:9-149:10)
  4: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:149:9-149:10)
  5: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:149:9-149:10)
  6: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:149:9-149:10)
  7: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:9-150:38)
  8: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:10-150:11)
  9: _32 = _3
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:10-150:11)
  10: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:14-150:37)
  11: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:14-150:28)
  12: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:14-150:22)
  13: _35 = &((*_1).2: std::vec::Vec<nfa::thompson::map::Utf8BoundedEntry>)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:14-150:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:14-150:28)
      kind: _34 = std::vec::Vec::<nfa::thompson::map::Utf8BoundedEntry>::len(move _35) -> [return: bb15, unwind: bb19]
  }
  preds [bb6]
  succs [bb15, bb19]

bb9
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:39-146:40)
  1: _17 = BitXor(move _18, move _19)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:17-146:41)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:40-146:41)
  3: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:40-146:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:17-146:61)
      kind: _16 = core::num::<impl u64>::wrapping_mul(move _17, const nfa::thompson::map::PRIME) -> [return: bb10, unwind: bb19]
  }
  preds [bb7]
  succs [bb10, bb19]

bb10
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:60-146:61)
  1: _3 = move _16
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:13-146:61)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:146:60-146:61)
  3: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:17-147:59)
  4: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:17-147:39)
  5: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:18-147:19)
  6: _23 = _3
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:18-147:19)
  7: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:22-147:38)
  8: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:32-147:37)
  9: _25 = ((*_15).1: u8)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:32-147:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:22-147:38)
      kind: _24 = <u64 as core::convert::From<u8>>::from(move _25) -> [return: bb11, unwind: bb19]
  }
  preds [bb9]
  succs [bb11, bb19]

bb11
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:37-147:38)
  1: _22 = BitXor(move _23, move _24)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:17-147:39)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:38-147:39)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:38-147:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:17-147:59)
      kind: _21 = core::num::<impl u64>::wrapping_mul(move _22, const nfa::thompson::map::PRIME) -> [return: bb12, unwind: bb19]
  }
  preds [bb10]
  succs [bb12, bb19]

bb12
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:58-147:59)
  1: _3 = move _21
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:13-147:59)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:147:58-147:59)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:17-148:58)
  4: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:17-148:38)
  5: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:18-148:19)
  6: _28 = _3
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:18-148:19)
  7: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:22-148:37)
  8: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:22-148:28)
  9: _30 = &((*_15).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:22-148:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:22-148:37)
      kind: _29 = util::primitives::StateID::as_u64(move _30) -> [return: bb13, unwind: bb19]
  }
  preds [bb11]
  succs [bb13, bb19]

bb13
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:36-148:37)
  1: _27 = BitXor(move _28, move _29)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:17-148:38)
  2: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:37-148:38)
  3: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:37-148:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:17-148:58)
      kind: _26 = core::num::<impl u64>::wrapping_mul(move _27, const nfa::thompson::map::PRIME) -> [return: bb14, unwind: bb19]
  }
  preds [bb12]
  succs [bb14, bb19]

bb14
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:57-148:58)
  1: _3 = move _26
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:13-148:58)
  2: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:148:57-148:58)
  3: _9 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:22-149:10)
  4: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:149:9-149:10)
  5: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:149:9-149:10)
  6: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:149:9-149:10)
  7: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:149:9-149:10)
  8: _8 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:9-149:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:145:9-149:10)
      kind: goto -> bb2
  }
  preds [bb13]
  succs [bb2]

bb15
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:27-150:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:14-150:37)
      kind: _33 = <usize as util::int::Usize>::as_u64(move _34) -> [return: bb16, unwind: bb19]
  }
  preds [bb8]
  succs [bb16, bb19]

bb16
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:36-150:37)
  1: _36 = Eq(_33, const 0_u64)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:9-150:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:9-150:38)
      kind: assert(!move _36, "attempt to calculate the remainder of `{}` with a divisor of zero", _32) -> [success: bb17, unwind: bb19]
  }
  preds [bb15]
  succs [bb17, bb19]

bb17
  0: _31 = Rem(move _32, move _33)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:9-150:38)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:37-150:38)
  2: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:37-150:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:9-150:49)
      kind: _0 = <u64 as util::int::U64>::as_usize(move _31) -> [return: bb18, unwind: bb19]
  }
  preds [bb16]
  succs [bb18, bb19]

bb18
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:150:48-150:49)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:151:5-151:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:151:6-151:6)
      kind: return
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:143:5-151:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb15, bb16, bb17]
  succs []

