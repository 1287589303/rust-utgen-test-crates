bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/captures.rs:455:13-455:16)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/captures.rs:455:19-455:34)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/captures.rs:455:19-455:33)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/captures.rs:455:19-455:23)
  4: _6 = &(*_1)
    SourceInfo(regex-automata/src/util/captures.rs:455:19-455:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:455:19-455:33)
      kind: _5 = util::captures::Captures::pattern(move _6) -> [return: bb1, unwind: bb82]
  }
  preds []
  succs [bb1, bb82]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/captures.rs:455:32-455:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:455:19-455:34)
      kind: _4 = <core::option::Option<util::primitives::PatternID> as core::ops::Try>::branch(move _5) -> [return: bb2, unwind: bb82]
  }
  preds [bb0]
  succs [bb2, bb82]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/captures.rs:455:33-455:34)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/util/captures.rs:455:19-455:34)
  2: _7 = discriminant(_4)
    SourceInfo(regex-automata/src/util/captures.rs:455:19-455:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:455:19-455:34)
      kind: switchInt(move _7) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-automata/src/util/captures.rs:455:19-455:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:455:19-455:34)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:455:33-455:34)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/util/captures.rs:455:19-455:34)
  1: _11 = ((_4 as Continue).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/util/captures.rs:455:19-455:34)
  2: _3 = _11
    SourceInfo(regex-automata/src/util/captures.rs:455:19-455:34)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/util/captures.rs:455:33-455:34)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/captures.rs:455:13-455:16)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/util/captures.rs:455:34-455:35)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/util/captures.rs:459:38-463:10)
  7: StorageLive(_15)
    SourceInfo(regex-automata/src/util/captures.rs:459:41-459:77)
  8: StorageLive(_16)
    SourceInfo(regex-automata/src/util/captures.rs:459:41-459:72)
  9: StorageLive(_17)
    SourceInfo(regex-automata/src/util/captures.rs:459:41-459:58)
  10: StorageLive(_18)
    SourceInfo(regex-automata/src/util/captures.rs:459:41-459:58)
  11: StorageLive(_19)
    SourceInfo(regex-automata/src/util/captures.rs:459:41-459:45)
  12: _19 = &(*_1)
    SourceInfo(regex-automata/src/util/captures.rs:459:41-459:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:459:41-459:58)
      kind: _18 = util::captures::Captures::group_info(move _19) -> [return: bb8, unwind: bb82]
  }
  preds [bb2, bb4]
  succs [bb8, bb82]

bb6
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/util/captures.rs:455:33-455:34)
  1: _8 = ((_4 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/util/captures.rs:455:33-455:34)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/util/captures.rs:455:33-455:34)
  3: _10 = _8
    SourceInfo(regex-automata/src/util/captures.rs:455:33-455:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:455:19-455:34)
      kind: _0 = <core::option::Option<util::search::Span> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _10) -> [return: bb7, unwind: bb82]
  }
  preds [bb4]
  succs [bb7, bb82]

bb7
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/captures.rs:455:33-455:34)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/captures.rs:455:33-455:34)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/captures.rs:455:34-455:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb80
  }
  preds [bb6]
  succs [bb80]

bb8
  0: _17 = &(*_18)
    SourceInfo(regex-automata/src/util/captures.rs:459:41-459:58)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/util/captures.rs:459:57-459:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:459:41-459:72)
      kind: _16 = util::captures::GroupInfo::pattern_len(move _17) -> [return: bb9, unwind: bb82]
  }
  preds [bb5]
  succs [bb9, bb82]

bb9
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/util/captures.rs:459:71-459:72)
  1: _15 = Eq(move _16, const 1_usize)
    SourceInfo(regex-automata/src/util/captures.rs:459:41-459:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:459:41-459:77)
      kind: switchInt(move _15) -> [0: bb32, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb32]

bb10
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/util/captures.rs:459:76-459:77)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/util/captures.rs:459:76-459:77)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/util/captures.rs:460:14-460:35)
  3: StorageLive(_21)
    SourceInfo(regex-automata/src/util/captures.rs:460:14-460:35)
  4: StorageLive(_22)
    SourceInfo(regex-automata/src/util/captures.rs:460:14-460:34)
  5: StorageLive(_23)
    SourceInfo(regex-automata/src/util/captures.rs:460:14-460:19)
  6: _23 = _2
    SourceInfo(regex-automata/src/util/captures.rs:460:14-460:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:14-460:34)
      kind: _22 = core::num::<impl usize>::checked_mul(move _23, const 2_usize) -> [return: bb11, unwind: bb82]
  }
  preds [bb9]
  succs [bb11, bb82]

bb11
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/util/captures.rs:460:33-460:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:14-460:35)
      kind: _21 = <core::option::Option<usize> as core::ops::Try>::branch(move _22) -> [return: bb12, unwind: bb82]
  }
  preds [bb10]
  succs [bb12, bb82]

bb12
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/util/captures.rs:460:34-460:35)
  1: PlaceMention(_21)
    SourceInfo(regex-automata/src/util/captures.rs:460:14-460:35)
  2: _24 = discriminant(_21)
    SourceInfo(regex-automata/src/util/captures.rs:460:14-460:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:14-460:35)
      kind: switchInt(move _24) -> [0: bb15, 1: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _21)
    SourceInfo(regex-automata/src/util/captures.rs:460:14-460:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:14-460:35)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:34-460:35)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/util/captures.rs:460:14-460:35)
  1: _28 = ((_21 as Continue).0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:460:14-460:35)
  2: _20 = _28
    SourceInfo(regex-automata/src/util/captures.rs:460:14-460:35)
  3: StorageDead(_28)
    SourceInfo(regex-automata/src/util/captures.rs:460:34-460:35)
  4: StorageLive(_29)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:74)
  5: StorageLive(_30)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:74)
  6: StorageLive(_31)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:73)
  7: StorageLive(_32)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:58)
  8: StorageLive(_33)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:58)
  9: StorageLive(_34)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:57)
  10: StorageLive(_35)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:42)
  11: _35 = _2
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:37-460:57)
      kind: _34 = core::num::<impl usize>::checked_mul(move _35, const 2_usize) -> [return: bb18, unwind: bb82]
  }
  preds [bb12, bb14]
  succs [bb18, bb82]

bb16
  0: StorageLive(_25)
    SourceInfo(regex-automata/src/util/captures.rs:460:34-460:35)
  1: _25 = ((_21 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/util/captures.rs:460:34-460:35)
  2: StorageLive(_27)
    SourceInfo(regex-automata/src/util/captures.rs:460:34-460:35)
  3: _27 = _25
    SourceInfo(regex-automata/src/util/captures.rs:460:34-460:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:14-460:35)
      kind: _0 = <core::option::Option<util::search::Span> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _27) -> [return: bb17, unwind: bb82]
  }
  preds [bb14]
  succs [bb17, bb82]

bb17
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/util/captures.rs:460:34-460:35)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/util/captures.rs:460:34-460:35)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/util/captures.rs:460:74-460:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb16]
  succs [bb78]

bb18
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/util/captures.rs:460:56-460:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:37-460:58)
      kind: _33 = <core::option::Option<usize> as core::ops::Try>::branch(move _34) -> [return: bb19, unwind: bb82]
  }
  preds [bb15]
  succs [bb19, bb82]

bb19
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/util/captures.rs:460:57-460:58)
  1: PlaceMention(_33)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:58)
  2: _36 = discriminant(_33)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:37-460:58)
      kind: switchInt(move _36) -> [0: bb22, 1: bb21, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb21, bb22]

bb20
  0: FakeRead(ForMatchedPlace(None), _33)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:37-460:58)
      kind: unreachable
  }
  preds [bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:57-460:58)
      kind: falseEdge -> [real: bb23, imaginary: bb22]
  }
  preds [bb19]
  succs [bb22, bb23]

bb22
  0: StorageLive(_40)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:58)
  1: _40 = ((_33 as Continue).0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:58)
  2: _32 = _40
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:58)
  3: StorageDead(_40)
    SourceInfo(regex-automata/src/util/captures.rs:460:57-460:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:37-460:73)
      kind: _31 = core::num::<impl usize>::checked_add(move _32, const 1_usize) -> [return: bb25, unwind: bb82]
  }
  preds [bb19, bb21]
  succs [bb25, bb82]

bb23
  0: StorageLive(_37)
    SourceInfo(regex-automata/src/util/captures.rs:460:57-460:58)
  1: _37 = ((_33 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/util/captures.rs:460:57-460:58)
  2: StorageLive(_39)
    SourceInfo(regex-automata/src/util/captures.rs:460:57-460:58)
  3: _39 = _37
    SourceInfo(regex-automata/src/util/captures.rs:460:57-460:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:37-460:58)
      kind: _0 = <core::option::Option<util::search::Span> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _39) -> [return: bb24, unwind: bb82]
  }
  preds [bb21]
  succs [bb24, bb82]

bb24
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/util/captures.rs:460:57-460:58)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/util/captures.rs:460:57-460:58)
  2: StorageDead(_32)
    SourceInfo(regex-automata/src/util/captures.rs:460:72-460:73)
  3: StorageDead(_31)
    SourceInfo(regex-automata/src/util/captures.rs:460:73-460:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb23]
  succs [bb77]

bb25
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/util/captures.rs:460:72-460:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:37-460:74)
      kind: _30 = <core::option::Option<usize> as core::ops::Try>::branch(move _31) -> [return: bb26, unwind: bb82]
  }
  preds [bb22]
  succs [bb26, bb82]

bb26
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/util/captures.rs:460:73-460:74)
  1: PlaceMention(_30)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:74)
  2: _41 = discriminant(_30)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:37-460:74)
      kind: switchInt(move _41) -> [0: bb29, 1: bb28, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb28, bb29]

bb27
  0: FakeRead(ForMatchedPlace(None), _30)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:37-460:74)
      kind: unreachable
  }
  preds [bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:73-460:74)
      kind: falseEdge -> [real: bb30, imaginary: bb29]
  }
  preds [bb26]
  succs [bb29, bb30]

bb29
  0: StorageLive(_45)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:74)
  1: _45 = ((_30 as Continue).0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:74)
  2: _29 = _45
    SourceInfo(regex-automata/src/util/captures.rs:460:37-460:74)
  3: StorageDead(_45)
    SourceInfo(regex-automata/src/util/captures.rs:460:73-460:74)
  4: _14 = (move _20, move _29)
    SourceInfo(regex-automata/src/util/captures.rs:460:13-460:75)
  5: StorageDead(_29)
    SourceInfo(regex-automata/src/util/captures.rs:460:74-460:75)
  6: StorageDead(_20)
    SourceInfo(regex-automata/src/util/captures.rs:460:74-460:75)
  7: StorageDead(_33)
    SourceInfo(regex-automata/src/util/captures.rs:461:9-461:10)
  8: StorageDead(_30)
    SourceInfo(regex-automata/src/util/captures.rs:461:9-461:10)
  9: StorageDead(_21)
    SourceInfo(regex-automata/src/util/captures.rs:461:9-461:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:459:38-463:10)
      kind: goto -> bb41
  }
  preds [bb26, bb28]
  succs [bb41]

bb30
  0: StorageLive(_42)
    SourceInfo(regex-automata/src/util/captures.rs:460:73-460:74)
  1: _42 = ((_30 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/util/captures.rs:460:73-460:74)
  2: StorageLive(_44)
    SourceInfo(regex-automata/src/util/captures.rs:460:73-460:74)
  3: _44 = _42
    SourceInfo(regex-automata/src/util/captures.rs:460:73-460:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:460:37-460:74)
      kind: _0 = <core::option::Option<util::search::Span> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _44) -> [return: bb31, unwind: bb82]
  }
  preds [bb28]
  succs [bb31, bb82]

bb31
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/util/captures.rs:460:73-460:74)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/util/captures.rs:460:73-460:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb30]
  succs [bb77]

bb32
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/util/captures.rs:459:76-459:77)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/util/captures.rs:459:76-459:77)
  2: StorageLive(_46)
    SourceInfo(regex-automata/src/util/captures.rs:462:13-462:49)
  3: StorageLive(_47)
    SourceInfo(regex-automata/src/util/captures.rs:462:13-462:48)
  4: StorageLive(_48)
    SourceInfo(regex-automata/src/util/captures.rs:462:13-462:30)
  5: StorageLive(_49)
    SourceInfo(regex-automata/src/util/captures.rs:462:13-462:30)
  6: StorageLive(_50)
    SourceInfo(regex-automata/src/util/captures.rs:462:13-462:17)
  7: _50 = &(*_1)
    SourceInfo(regex-automata/src/util/captures.rs:462:13-462:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:462:13-462:30)
      kind: _49 = util::captures::Captures::group_info(move _50) -> [return: bb33, unwind: bb82]
  }
  preds [bb9]
  succs [bb33, bb82]

bb33
  0: _48 = &(*_49)
    SourceInfo(regex-automata/src/util/captures.rs:462:13-462:30)
  1: StorageDead(_50)
    SourceInfo(regex-automata/src/util/captures.rs:462:29-462:30)
  2: StorageLive(_51)
    SourceInfo(regex-automata/src/util/captures.rs:462:37-462:40)
  3: _51 = _3
    SourceInfo(regex-automata/src/util/captures.rs:462:37-462:40)
  4: StorageLive(_52)
    SourceInfo(regex-automata/src/util/captures.rs:462:42-462:47)
  5: _52 = _2
    SourceInfo(regex-automata/src/util/captures.rs:462:42-462:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:462:13-462:48)
      kind: _47 = util::captures::GroupInfo::slots(move _48, move _51, move _52) -> [return: bb34, unwind: bb82]
  }
  preds [bb32]
  succs [bb34, bb82]

bb34
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/util/captures.rs:462:47-462:48)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/util/captures.rs:462:47-462:48)
  2: StorageDead(_48)
    SourceInfo(regex-automata/src/util/captures.rs:462:47-462:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:462:13-462:49)
      kind: _46 = <core::option::Option<(usize, usize)> as core::ops::Try>::branch(move _47) -> [return: bb35, unwind: bb82]
  }
  preds [bb33]
  succs [bb35, bb82]

bb35
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/util/captures.rs:462:48-462:49)
  1: PlaceMention(_46)
    SourceInfo(regex-automata/src/util/captures.rs:462:13-462:49)
  2: _53 = discriminant(_46)
    SourceInfo(regex-automata/src/util/captures.rs:462:13-462:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:462:13-462:49)
      kind: switchInt(move _53) -> [0: bb38, 1: bb37, otherwise: bb36]
  }
  preds [bb34]
  succs [bb36, bb37, bb38]

bb36
  0: FakeRead(ForMatchedPlace(None), _46)
    SourceInfo(regex-automata/src/util/captures.rs:462:13-462:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:462:13-462:49)
      kind: unreachable
  }
  preds [bb35]
  succs []

bb37
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:462:48-462:49)
      kind: falseEdge -> [real: bb39, imaginary: bb38]
  }
  preds [bb35]
  succs [bb38, bb39]

bb38
  0: StorageLive(_57)
    SourceInfo(regex-automata/src/util/captures.rs:462:13-462:49)
  1: _57 = ((_46 as Continue).0: (usize, usize))
    SourceInfo(regex-automata/src/util/captures.rs:462:13-462:49)
  2: _14 = _57
    SourceInfo(regex-automata/src/util/captures.rs:462:13-462:49)
  3: StorageDead(_57)
    SourceInfo(regex-automata/src/util/captures.rs:462:48-462:49)
  4: StorageDead(_49)
    SourceInfo(regex-automata/src/util/captures.rs:463:9-463:10)
  5: StorageDead(_46)
    SourceInfo(regex-automata/src/util/captures.rs:463:9-463:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:459:38-463:10)
      kind: goto -> bb41
  }
  preds [bb35, bb37]
  succs [bb41]

bb39
  0: StorageLive(_54)
    SourceInfo(regex-automata/src/util/captures.rs:462:48-462:49)
  1: _54 = ((_46 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/util/captures.rs:462:48-462:49)
  2: StorageLive(_56)
    SourceInfo(regex-automata/src/util/captures.rs:462:48-462:49)
  3: _56 = _54
    SourceInfo(regex-automata/src/util/captures.rs:462:48-462:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:462:13-462:49)
      kind: _0 = <core::option::Option<util::search::Span> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _56) -> [return: bb40, unwind: bb82]
  }
  preds [bb37]
  succs [bb40, bb82]

bb40
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/util/captures.rs:462:48-462:49)
  1: StorageDead(_54)
    SourceInfo(regex-automata/src/util/captures.rs:462:48-462:49)
  2: StorageDead(_49)
    SourceInfo(regex-automata/src/util/captures.rs:463:9-463:10)
  3: StorageDead(_46)
    SourceInfo(regex-automata/src/util/captures.rs:463:9-463:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb39]
  succs [bb79]

bb41
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/captures.rs:463:9-463:10)
  1: PlaceMention(_14)
    SourceInfo(regex-automata/src/util/captures.rs:459:38-463:10)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/util/captures.rs:459:14-459:24)
  3: _12 = (_14.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:459:14-459:24)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/util/captures.rs:459:26-459:34)
  5: _13 = (_14.1: usize)
    SourceInfo(regex-automata/src/util/captures.rs:459:26-459:34)
  6: StorageDead(_14)
    SourceInfo(regex-automata/src/util/captures.rs:463:10-463:11)
  7: StorageLive(_58)
    SourceInfo(regex-automata/src/util/captures.rs:464:13-464:18)
  8: StorageLive(_59)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:58)
  9: StorageLive(_60)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:57)
  10: StorageLive(_61)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:57)
  11: StorageLive(_62)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:56)
  12: StorageLive(_63)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:47)
  13: StorageLive(_64)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:31)
  14: StorageLive(_65)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:47)
  15: StorageLive(_66)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:31)
  16: _66 = &((*_1).2: std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>>)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:464:21-464:47)
      kind: _65 = <std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>> as core::ops::Deref>::deref(move _66) -> [return: bb42, unwind: bb82]
  }
  preds [bb29, bb38]
  succs [bb42, bb82]

bb42
  0: _64 = &(*_65)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:31)
  1: StorageDead(_66)
    SourceInfo(regex-automata/src/util/captures.rs:464:30-464:31)
  2: StorageLive(_67)
    SourceInfo(regex-automata/src/util/captures.rs:464:36-464:46)
  3: _67 = _12
    SourceInfo(regex-automata/src/util/captures.rs:464:36-464:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:464:21-464:47)
      kind: _63 = core::slice::<impl [core::option::Option<util::primitives::NonMaxUsize>]>::get::<usize>(move _64, move _67) -> [return: bb43, unwind: bb82]
  }
  preds [bb41]
  succs [bb43, bb82]

bb43
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/util/captures.rs:464:46-464:47)
  1: StorageDead(_64)
    SourceInfo(regex-automata/src/util/captures.rs:464:46-464:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:464:21-464:56)
      kind: _62 = core::option::Option::<&core::option::Option<util::primitives::NonMaxUsize>>::copied(move _63) -> [return: bb44, unwind: bb82]
  }
  preds [bb42]
  succs [bb44, bb82]

bb44
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/util/captures.rs:464:55-464:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:464:21-464:57)
      kind: _61 = <core::option::Option<core::option::Option<util::primitives::NonMaxUsize>> as core::ops::Try>::branch(move _62) -> [return: bb45, unwind: bb82]
  }
  preds [bb43]
  succs [bb45, bb82]

bb45
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/util/captures.rs:464:56-464:57)
  1: PlaceMention(_61)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:57)
  2: _68 = discriminant(_61)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:464:21-464:57)
      kind: switchInt(move _68) -> [0: bb48, 1: bb47, otherwise: bb46]
  }
  preds [bb44]
  succs [bb46, bb47, bb48]

bb46
  0: FakeRead(ForMatchedPlace(None), _61)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:464:21-464:57)
      kind: unreachable
  }
  preds [bb45]
  succs []

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:464:56-464:57)
      kind: falseEdge -> [real: bb49, imaginary: bb48]
  }
  preds [bb45]
  succs [bb48, bb49]

bb48
  0: StorageLive(_72)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:57)
  1: _72 = ((_61 as Continue).0: core::option::Option<util::primitives::NonMaxUsize>)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:57)
  2: _60 = _72
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:57)
  3: StorageDead(_72)
    SourceInfo(regex-automata/src/util/captures.rs:464:56-464:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:464:21-464:58)
      kind: _59 = <core::option::Option<util::primitives::NonMaxUsize> as core::ops::Try>::branch(move _60) -> [return: bb51, unwind: bb82]
  }
  preds [bb45, bb47]
  succs [bb51, bb82]

bb49
  0: StorageLive(_69)
    SourceInfo(regex-automata/src/util/captures.rs:464:56-464:57)
  1: _69 = ((_61 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/util/captures.rs:464:56-464:57)
  2: StorageLive(_71)
    SourceInfo(regex-automata/src/util/captures.rs:464:56-464:57)
  3: _71 = _69
    SourceInfo(regex-automata/src/util/captures.rs:464:56-464:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:464:21-464:57)
      kind: _0 = <core::option::Option<util::search::Span> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _71) -> [return: bb50, unwind: bb82]
  }
  preds [bb47]
  succs [bb50, bb82]

bb50
  0: StorageDead(_71)
    SourceInfo(regex-automata/src/util/captures.rs:464:56-464:57)
  1: StorageDead(_69)
    SourceInfo(regex-automata/src/util/captures.rs:464:56-464:57)
  2: StorageDead(_60)
    SourceInfo(regex-automata/src/util/captures.rs:464:57-464:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb75
  }
  preds [bb49]
  succs [bb75]

bb51
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/util/captures.rs:464:57-464:58)
  1: PlaceMention(_59)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:58)
  2: _73 = discriminant(_59)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:464:21-464:58)
      kind: switchInt(move _73) -> [0: bb54, 1: bb53, otherwise: bb52]
  }
  preds [bb48]
  succs [bb52, bb53, bb54]

bb52
  0: FakeRead(ForMatchedPlace(None), _59)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:464:21-464:58)
      kind: unreachable
  }
  preds [bb51]
  succs []

bb53
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:464:57-464:58)
      kind: falseEdge -> [real: bb55, imaginary: bb54]
  }
  preds [bb51]
  succs [bb54, bb55]

bb54
  0: StorageLive(_77)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:58)
  1: _77 = ((_59 as Continue).0: util::primitives::NonMaxUsize)
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:58)
  2: _58 = _77
    SourceInfo(regex-automata/src/util/captures.rs:464:21-464:58)
  3: StorageDead(_77)
    SourceInfo(regex-automata/src/util/captures.rs:464:57-464:58)
  4: FakeRead(ForLet(None), _58)
    SourceInfo(regex-automata/src/util/captures.rs:464:13-464:18)
  5: StorageDead(_65)
    SourceInfo(regex-automata/src/util/captures.rs:464:58-464:59)
  6: StorageDead(_61)
    SourceInfo(regex-automata/src/util/captures.rs:464:58-464:59)
  7: StorageDead(_59)
    SourceInfo(regex-automata/src/util/captures.rs:464:58-464:59)
  8: StorageLive(_78)
    SourceInfo(regex-automata/src/util/captures.rs:465:13-465:16)
  9: StorageLive(_79)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:54)
  10: StorageLive(_80)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:53)
  11: StorageLive(_81)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:53)
  12: StorageLive(_82)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:52)
  13: StorageLive(_83)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:43)
  14: StorageLive(_84)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:29)
  15: StorageLive(_85)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:43)
  16: StorageLive(_86)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:29)
  17: _86 = &((*_1).2: std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>>)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:465:19-465:43)
      kind: _85 = <std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>> as core::ops::Deref>::deref(move _86) -> [return: bb57, unwind: bb82]
  }
  preds [bb51, bb53]
  succs [bb57, bb82]

bb55
  0: StorageLive(_74)
    SourceInfo(regex-automata/src/util/captures.rs:464:57-464:58)
  1: _74 = ((_59 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/util/captures.rs:464:57-464:58)
  2: StorageLive(_76)
    SourceInfo(regex-automata/src/util/captures.rs:464:57-464:58)
  3: _76 = _74
    SourceInfo(regex-automata/src/util/captures.rs:464:57-464:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:464:21-464:58)
      kind: _0 = <core::option::Option<util::search::Span> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _76) -> [return: bb56, unwind: bb82]
  }
  preds [bb53]
  succs [bb56, bb82]

bb56
  0: StorageDead(_76)
    SourceInfo(regex-automata/src/util/captures.rs:464:57-464:58)
  1: StorageDead(_74)
    SourceInfo(regex-automata/src/util/captures.rs:464:57-464:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb75
  }
  preds [bb55]
  succs [bb75]

bb57
  0: _84 = &(*_85)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:29)
  1: StorageDead(_86)
    SourceInfo(regex-automata/src/util/captures.rs:465:28-465:29)
  2: StorageLive(_87)
    SourceInfo(regex-automata/src/util/captures.rs:465:34-465:42)
  3: _87 = _13
    SourceInfo(regex-automata/src/util/captures.rs:465:34-465:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:465:19-465:43)
      kind: _83 = core::slice::<impl [core::option::Option<util::primitives::NonMaxUsize>]>::get::<usize>(move _84, move _87) -> [return: bb58, unwind: bb82]
  }
  preds [bb54]
  succs [bb58, bb82]

bb58
  0: StorageDead(_87)
    SourceInfo(regex-automata/src/util/captures.rs:465:42-465:43)
  1: StorageDead(_84)
    SourceInfo(regex-automata/src/util/captures.rs:465:42-465:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:465:19-465:52)
      kind: _82 = core::option::Option::<&core::option::Option<util::primitives::NonMaxUsize>>::copied(move _83) -> [return: bb59, unwind: bb82]
  }
  preds [bb57]
  succs [bb59, bb82]

bb59
  0: StorageDead(_83)
    SourceInfo(regex-automata/src/util/captures.rs:465:51-465:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:465:19-465:53)
      kind: _81 = <core::option::Option<core::option::Option<util::primitives::NonMaxUsize>> as core::ops::Try>::branch(move _82) -> [return: bb60, unwind: bb82]
  }
  preds [bb58]
  succs [bb60, bb82]

bb60
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/util/captures.rs:465:52-465:53)
  1: PlaceMention(_81)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:53)
  2: _88 = discriminant(_81)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:465:19-465:53)
      kind: switchInt(move _88) -> [0: bb63, 1: bb62, otherwise: bb61]
  }
  preds [bb59]
  succs [bb61, bb62, bb63]

bb61
  0: FakeRead(ForMatchedPlace(None), _81)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:465:19-465:53)
      kind: unreachable
  }
  preds [bb60]
  succs []

bb62
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:465:52-465:53)
      kind: falseEdge -> [real: bb64, imaginary: bb63]
  }
  preds [bb60]
  succs [bb63, bb64]

bb63
  0: StorageLive(_92)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:53)
  1: _92 = ((_81 as Continue).0: core::option::Option<util::primitives::NonMaxUsize>)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:53)
  2: _80 = _92
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:53)
  3: StorageDead(_92)
    SourceInfo(regex-automata/src/util/captures.rs:465:52-465:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:465:19-465:54)
      kind: _79 = <core::option::Option<util::primitives::NonMaxUsize> as core::ops::Try>::branch(move _80) -> [return: bb66, unwind: bb82]
  }
  preds [bb60, bb62]
  succs [bb66, bb82]

bb64
  0: StorageLive(_89)
    SourceInfo(regex-automata/src/util/captures.rs:465:52-465:53)
  1: _89 = ((_81 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/util/captures.rs:465:52-465:53)
  2: StorageLive(_91)
    SourceInfo(regex-automata/src/util/captures.rs:465:52-465:53)
  3: _91 = _89
    SourceInfo(regex-automata/src/util/captures.rs:465:52-465:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:465:19-465:53)
      kind: _0 = <core::option::Option<util::search::Span> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _91) -> [return: bb65, unwind: bb82]
  }
  preds [bb62]
  succs [bb65, bb82]

bb65
  0: StorageDead(_91)
    SourceInfo(regex-automata/src/util/captures.rs:465:52-465:53)
  1: StorageDead(_89)
    SourceInfo(regex-automata/src/util/captures.rs:465:52-465:53)
  2: StorageDead(_80)
    SourceInfo(regex-automata/src/util/captures.rs:465:53-465:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb74
  }
  preds [bb64]
  succs [bb74]

bb66
  0: StorageDead(_80)
    SourceInfo(regex-automata/src/util/captures.rs:465:53-465:54)
  1: PlaceMention(_79)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:54)
  2: _93 = discriminant(_79)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:465:19-465:54)
      kind: switchInt(move _93) -> [0: bb69, 1: bb68, otherwise: bb67]
  }
  preds [bb63]
  succs [bb67, bb68, bb69]

bb67
  0: FakeRead(ForMatchedPlace(None), _79)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:465:19-465:54)
      kind: unreachable
  }
  preds [bb66]
  succs []

bb68
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:465:53-465:54)
      kind: falseEdge -> [real: bb70, imaginary: bb69]
  }
  preds [bb66]
  succs [bb69, bb70]

bb69
  0: StorageLive(_97)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:54)
  1: _97 = ((_79 as Continue).0: util::primitives::NonMaxUsize)
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:54)
  2: _78 = _97
    SourceInfo(regex-automata/src/util/captures.rs:465:19-465:54)
  3: StorageDead(_97)
    SourceInfo(regex-automata/src/util/captures.rs:465:53-465:54)
  4: FakeRead(ForLet(None), _78)
    SourceInfo(regex-automata/src/util/captures.rs:465:13-465:16)
  5: StorageDead(_85)
    SourceInfo(regex-automata/src/util/captures.rs:465:54-465:55)
  6: StorageDead(_81)
    SourceInfo(regex-automata/src/util/captures.rs:465:54-465:55)
  7: StorageDead(_79)
    SourceInfo(regex-automata/src/util/captures.rs:465:54-465:55)
  8: StorageLive(_98)
    SourceInfo(regex-automata/src/util/captures.rs:466:14-466:57)
  9: StorageLive(_99)
    SourceInfo(regex-automata/src/util/captures.rs:466:28-466:39)
  10: StorageLive(_100)
    SourceInfo(regex-automata/src/util/captures.rs:466:28-466:33)
  11: _100 = _58
    SourceInfo(regex-automata/src/util/captures.rs:466:28-466:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:466:28-466:39)
      kind: _99 = util::primitives::NonMaxUsize::get(move _100) -> [return: bb72, unwind: bb82]
  }
  preds [bb66, bb68]
  succs [bb72, bb82]

bb70
  0: StorageLive(_94)
    SourceInfo(regex-automata/src/util/captures.rs:465:53-465:54)
  1: _94 = ((_79 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/util/captures.rs:465:53-465:54)
  2: StorageLive(_96)
    SourceInfo(regex-automata/src/util/captures.rs:465:53-465:54)
  3: _96 = _94
    SourceInfo(regex-automata/src/util/captures.rs:465:53-465:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:465:19-465:54)
      kind: _0 = <core::option::Option<util::search::Span> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _96) -> [return: bb71, unwind: bb82]
  }
  preds [bb68]
  succs [bb71, bb82]

bb71
  0: StorageDead(_96)
    SourceInfo(regex-automata/src/util/captures.rs:465:53-465:54)
  1: StorageDead(_94)
    SourceInfo(regex-automata/src/util/captures.rs:465:53-465:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb74
  }
  preds [bb70]
  succs [bb74]

bb72
  0: StorageDead(_100)
    SourceInfo(regex-automata/src/util/captures.rs:466:38-466:39)
  1: StorageLive(_101)
    SourceInfo(regex-automata/src/util/captures.rs:466:46-466:55)
  2: StorageLive(_102)
    SourceInfo(regex-automata/src/util/captures.rs:466:46-466:49)
  3: _102 = _78
    SourceInfo(regex-automata/src/util/captures.rs:466:46-466:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:466:46-466:55)
      kind: _101 = util::primitives::NonMaxUsize::get(move _102) -> [return: bb73, unwind: bb82]
  }
  preds [bb69]
  succs [bb73, bb82]

bb73
  0: StorageDead(_102)
    SourceInfo(regex-automata/src/util/captures.rs:466:54-466:55)
  1: _98 = util::search::Span { start: move _99, end: move _101 }
    SourceInfo(regex-automata/src/util/captures.rs:466:14-466:57)
  2: StorageDead(_101)
    SourceInfo(regex-automata/src/util/captures.rs:466:56-466:57)
  3: StorageDead(_99)
    SourceInfo(regex-automata/src/util/captures.rs:466:56-466:57)
  4: _0 = core::option::Option::<util::search::Span>::Some(move _98)
    SourceInfo(regex-automata/src/util/captures.rs:466:9-466:58)
  5: StorageDead(_98)
    SourceInfo(regex-automata/src/util/captures.rs:466:57-466:58)
  6: StorageDead(_78)
    SourceInfo(regex-automata/src/util/captures.rs:467:5-467:6)
  7: StorageDead(_58)
    SourceInfo(regex-automata/src/util/captures.rs:467:5-467:6)
  8: StorageDead(_13)
    SourceInfo(regex-automata/src/util/captures.rs:467:5-467:6)
  9: StorageDead(_12)
    SourceInfo(regex-automata/src/util/captures.rs:467:5-467:6)
  10: StorageDead(_3)
    SourceInfo(regex-automata/src/util/captures.rs:467:5-467:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:467:6-467:6)
      kind: goto -> bb81
  }
  preds [bb72]
  succs [bb81]

bb74
  0: StorageDead(_85)
    SourceInfo(regex-automata/src/util/captures.rs:465:54-465:55)
  1: StorageDead(_81)
    SourceInfo(regex-automata/src/util/captures.rs:465:54-465:55)
  2: StorageDead(_79)
    SourceInfo(regex-automata/src/util/captures.rs:465:54-465:55)
  3: StorageDead(_78)
    SourceInfo(regex-automata/src/util/captures.rs:467:5-467:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb65, bb71]
  succs [bb76]

bb75
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/util/captures.rs:464:58-464:59)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/util/captures.rs:464:58-464:59)
  2: StorageDead(_59)
    SourceInfo(regex-automata/src/util/captures.rs:464:58-464:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb50, bb56]
  succs [bb76]

bb76
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/util/captures.rs:467:5-467:6)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/util/captures.rs:467:5-467:6)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/util/captures.rs:467:5-467:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb80
  }
  preds [bb74, bb75]
  succs [bb80]

bb77
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/util/captures.rs:460:74-460:75)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/util/captures.rs:460:74-460:75)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/util/captures.rs:461:9-461:10)
  3: StorageDead(_30)
    SourceInfo(regex-automata/src/util/captures.rs:461:9-461:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb24, bb31]
  succs [bb78]

bb78
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/util/captures.rs:461:9-461:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb17, bb77]
  succs [bb79]

bb79
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/captures.rs:463:9-463:10)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/util/captures.rs:463:10-463:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb80
  }
  preds [bb40, bb78]
  succs [bb80]

bb80
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/captures.rs:467:5-467:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:467:6-467:6)
      kind: goto -> bb81
  }
  preds [bb7, bb76, bb79]
  succs [bb81]

bb81
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:467:6-467:6)
      kind: return
  }
  preds [bb73, bb80]
  succs []

bb82
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:454:5-467:6)
      kind: resume
  }
  preds [bb0, bb1, bb5, bb6, bb8, bb10, bb11, bb15, bb16, bb18, bb22, bb23, bb25, bb30, bb32, bb33, bb34, bb39, bb41, bb42, bb43, bb44, bb48, bb49, bb54, bb55, bb57, bb58, bb59, bb63, bb64, bb69, bb70, bb72]
  succs []

