bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/remapper.rs:133:13-133:19)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/remapper.rs:133:22-133:30)
  2: _4 = &(_1.0: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/dfa/remapper.rs:133:22-133:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:133:22-133:38)
      kind: _3 = <std::vec::Vec<util::primitives::StateID> as core::clone::Clone>::clone(move _4) -> [return: bb1, unwind: bb28]
  }
  preds []
  succs [bb1, bb28]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/remapper.rs:133:37-133:38)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/dfa/remapper.rs:133:13-133:19)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:9-148:10)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:21-134:34)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:21-134:22)
  7: _9 = &(*_2)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:21-134:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:134:21-134:34)
      kind: _8 = <impl Remappable as dfa::remapper::Remappable>::state_len(move _9) -> [return: bb2, unwind: bb27]
  }
  preds [bb0]
  succs [bb2, bb27]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:33-134:34)
  1: _7 = core::ops::Range::<usize> { start: const 0_usize, end: move _8 }
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:33-134:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
      kind: _6 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _7) -> [return: bb3, unwind: bb27]
  }
  preds [bb1]
  succs [bb3, bb27]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:33-134:34)
  1: PlaceMention(_6)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  3: _10 = move _6
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:134:9-148:10)
      kind: goto -> bb4
  }
  preds [bb2]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:134:9-148:10)
      kind: falseUnwind -> [real: bb5, unwind: bb27]
  }
  preds [bb3, bb14, bb22]
  succs [bb5, bb27]

bb5
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  1: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  4: _15 = &mut _10
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  5: _14 = &mut (*_15)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
      kind: _13 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _14) -> [return: bb6, unwind: bb27]
  }
  preds [bb4]
  succs [bb6, bb27]

bb6
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:33-134:34)
  1: PlaceMention(_13)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  2: _16 = discriminant(_13)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
      kind: switchInt(move _16) -> [0: bb8, 1: bb9, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:134:18-134:34)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:134:9-148:10)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:13-134:14)
  1: _18 = ((_13 as Some).0: usize)
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:13-134:14)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/remapper.rs:135:17-135:23)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/remapper.rs:135:26-135:37)
  4: _20 = &(_1.1: dfa::remapper::IndexMapper)
    SourceInfo(regex-automata/src/dfa/remapper.rs:135:26-135:37)
  5: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/remapper.rs:135:50-135:51)
  6: _21 = _18
    SourceInfo(regex-automata/src/dfa/remapper.rs:135:50-135:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:135:26-135:52)
      kind: _19 = dfa::remapper::IndexMapper::to_state_id(move _20, move _21) -> [return: bb11, unwind: bb27]
  }
  preds [bb6, bb8]
  succs [bb11, bb27]

bb10
  0: _5 = const ()
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:9-148:10)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  4: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  5: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  6: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  7: StorageLive(_47)
    SourceInfo(regex-automata/src/dfa/remapper.rs:149:9-149:61)
  8: StorageLive(_48)
    SourceInfo(regex-automata/src/dfa/remapper.rs:149:9-149:10)
  9: _48 = &mut (*_2)
    SourceInfo(regex-automata/src/dfa/remapper.rs:149:9-149:10)
  10: StorageLive(_49)
    SourceInfo(regex-automata/src/dfa/remapper.rs:149:17-149:60)
  11: StorageLive(_50)
    SourceInfo(regex-automata/src/dfa/remapper.rs:149:17-149:60)
  12: _50 = &(_1.0: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/dfa/remapper.rs:149:17-149:60)
  13: StorageLive(_51)
    SourceInfo(regex-automata/src/dfa/remapper.rs:149:17-149:60)
  14: _51 = &(_1.1: dfa::remapper::IndexMapper)
    SourceInfo(regex-automata/src/dfa/remapper.rs:149:17-149:60)
  15: _49 = {closure@regex-automata/src/dfa/remapper.rs:149:17: 149:23} { self: move _50 }
    SourceInfo(regex-automata/src/dfa/remapper.rs:149:17-149:60)
  16: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/remapper.rs:149:22-149:23)
  17: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/remapper.rs:149:22-149:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:149:9-149:61)
      kind: _47 = <impl Remappable as dfa::remapper::Remappable>::remap::<{closure@regex-automata/src/dfa/remapper.rs:149:17: 149:23}>(move _48, move _49) -> [return: bb24, unwind: bb27]
  }
  preds [bb8]
  succs [bb24, bb27]

bb11
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/remapper.rs:135:51-135:52)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/remapper.rs:135:51-135:52)
  2: FakeRead(ForLet(None), _19)
    SourceInfo(regex-automata/src/dfa/remapper.rs:135:17-135:23)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/remapper.rs:136:17-136:27)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/remapper.rs:136:36-136:39)
  5: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/remapper.rs:136:30-136:36)
  6: _24 = &_3
    SourceInfo(regex-automata/src/dfa/remapper.rs:136:30-136:36)
  7: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/remapper.rs:136:37-136:38)
  8: _25 = _18
    SourceInfo(regex-automata/src/dfa/remapper.rs:136:37-136:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:136:36-136:39)
      kind: _23 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<usize>>::index(move _24, move _25) -> [return: bb12, unwind: bb27]
  }
  preds [bb9]
  succs [bb12, bb27]

bb12
  0: _22 = (*_23)
    SourceInfo(regex-automata/src/dfa/remapper.rs:136:30-136:39)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/remapper.rs:136:38-136:39)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/remapper.rs:136:38-136:39)
  3: FakeRead(ForLet(None), _22)
    SourceInfo(regex-automata/src/dfa/remapper.rs:136:17-136:27)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/remapper.rs:136:39-136:40)
  5: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/remapper.rs:137:13-139:14)
  6: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/remapper.rs:137:16-137:32)
  7: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/remapper.rs:137:16-137:22)
  8: _28 = &_19
    SourceInfo(regex-automata/src/dfa/remapper.rs:137:16-137:22)
  9: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/remapper.rs:137:26-137:32)
  10: _29 = &_22
    SourceInfo(regex-automata/src/dfa/remapper.rs:137:26-137:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:137:16-137:32)
      kind: _27 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _28, move _29) -> [return: bb13, unwind: bb27]
  }
  preds [bb11]
  succs [bb13, bb27]

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:137:16-137:32)
      kind: switchInt(move _27) -> [0: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15]

bb14
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/remapper.rs:137:31-137:32)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/remapper.rs:137:31-137:32)
  2: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/remapper.rs:139:13-139:14)
  3: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/remapper.rs:139:13-139:14)
  4: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  5: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  6: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  7: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  8: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  9: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb4
  }
  preds [bb13]
  succs [bb4]

bb15
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/remapper.rs:137:31-137:32)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/remapper.rs:137:31-137:32)
  2: _26 = const ()
    SourceInfo(regex-automata/src/dfa/remapper.rs:139:14-139:14)
  3: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/remapper.rs:139:13-139:14)
  4: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/remapper.rs:139:13-139:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:140:13-147:14)
      kind: goto -> bb16
  }
  preds [bb13]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:140:13-147:14)
      kind: falseUnwind -> [real: bb17, unwind: bb27]
  }
  preds [bb15, bb23]
  succs [bb17, bb27]

bb17
  0: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:21-141:23)
  1: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:32-141:62)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:26-141:32)
  3: _33 = &_3
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:26-141:32)
  4: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:33-141:61)
  5: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:33-141:44)
  6: _35 = &(_1.1: dfa::remapper::IndexMapper)
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:33-141:44)
  7: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:54-141:60)
  8: _36 = _22
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:54-141:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:141:33-141:61)
      kind: _34 = dfa::remapper::IndexMapper::to_index(move _35, move _36) -> [return: bb18, unwind: bb27]
  }
  preds [bb16]
  succs [bb18, bb27]

bb18
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:60-141:61)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:60-141:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:141:32-141:62)
      kind: _32 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<usize>>::index(move _33, move _34) -> [return: bb19, unwind: bb27]
  }
  preds [bb17]
  succs [bb19, bb27]

bb19
  0: _31 = (*_32)
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:26-141:62)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:61-141:62)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:61-141:62)
  3: FakeRead(ForLet(None), _31)
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:21-141:23)
  4: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/remapper.rs:141:62-141:63)
  5: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/remapper.rs:142:17-145:18)
  6: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/remapper.rs:142:20-142:32)
  7: StorageLive(_39)
    SourceInfo(regex-automata/src/dfa/remapper.rs:142:20-142:26)
  8: _39 = &_19
    SourceInfo(regex-automata/src/dfa/remapper.rs:142:20-142:26)
  9: StorageLive(_40)
    SourceInfo(regex-automata/src/dfa/remapper.rs:142:30-142:32)
  10: _40 = &_31
    SourceInfo(regex-automata/src/dfa/remapper.rs:142:30-142:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:142:20-142:32)
      kind: _38 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _39, move _40) -> [return: bb20, unwind: bb27]
  }
  preds [bb18]
  succs [bb20, bb27]

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:142:20-142:32)
      kind: switchInt(move _38) -> [0: bb23, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb23]

bb21
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/remapper.rs:142:31-142:32)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/remapper.rs:142:31-142:32)
  2: StorageLive(_42)
    SourceInfo(regex-automata/src/dfa/remapper.rs:143:35-143:41)
  3: _42 = _22
    SourceInfo(regex-automata/src/dfa/remapper.rs:143:35-143:41)
  4: StorageLive(_43)
    SourceInfo(regex-automata/src/dfa/remapper.rs:143:29-143:32)
  5: StorageLive(_44)
    SourceInfo(regex-automata/src/dfa/remapper.rs:143:21-143:29)
  6: _44 = &mut (_1.0: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/dfa/remapper.rs:143:21-143:29)
  7: StorageLive(_45)
    SourceInfo(regex-automata/src/dfa/remapper.rs:143:30-143:31)
  8: _45 = _18
    SourceInfo(regex-automata/src/dfa/remapper.rs:143:30-143:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:143:29-143:32)
      kind: _43 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<usize>>::index_mut(move _44, move _45) -> [return: bb22, unwind: bb27]
  }
  preds [bb20]
  succs [bb22, bb27]

bb22
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/dfa/remapper.rs:143:31-143:32)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/dfa/remapper.rs:143:31-143:32)
  2: (*_43) = move _42
    SourceInfo(regex-automata/src/dfa/remapper.rs:143:21-143:41)
  3: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/remapper.rs:143:40-143:41)
  4: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/remapper.rs:143:41-143:42)
  5: _12 = const ()
    SourceInfo(regex-automata/src/dfa/remapper.rs:144:21-144:26)
  6: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/remapper.rs:145:17-145:18)
  7: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/remapper.rs:145:17-145:18)
  8: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/remapper.rs:147:13-147:14)
  9: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  10: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  11: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  12: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  13: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  14: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/remapper.rs:148:9-148:10)
  15: _11 = const ()
    SourceInfo(regex-automata/src/dfa/remapper.rs:134:9-148:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:134:9-148:10)
      kind: goto -> bb4
  }
  preds [bb21]
  succs [bb4]

bb23
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/remapper.rs:142:31-142:32)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/remapper.rs:142:31-142:32)
  2: _37 = const ()
    SourceInfo(regex-automata/src/dfa/remapper.rs:145:18-145:18)
  3: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/remapper.rs:145:17-145:18)
  4: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/remapper.rs:145:17-145:18)
  5: StorageLive(_46)
    SourceInfo(regex-automata/src/dfa/remapper.rs:146:26-146:28)
  6: _46 = _31
    SourceInfo(regex-automata/src/dfa/remapper.rs:146:26-146:28)
  7: _22 = move _46
    SourceInfo(regex-automata/src/dfa/remapper.rs:146:17-146:28)
  8: StorageDead(_46)
    SourceInfo(regex-automata/src/dfa/remapper.rs:146:27-146:28)
  9: _11 = const ()
    SourceInfo(regex-automata/src/dfa/remapper.rs:140:18-147:14)
  10: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/remapper.rs:147:13-147:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:140:13-147:14)
      kind: goto -> bb16
  }
  preds [bb20]
  succs [bb16]

bb24
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/dfa/remapper.rs:149:60-149:61)
  1: StorageDead(_48)
    SourceInfo(regex-automata/src/dfa/remapper.rs:149:60-149:61)
  2: StorageDead(_47)
    SourceInfo(regex-automata/src/dfa/remapper.rs:149:61-149:62)
  3: _0 = const ()
    SourceInfo(regex-automata/src/dfa/remapper.rs:115:60-150:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:150:5-150:6)
      kind: drop(_3) -> [return: bb25, unwind: bb28]
  }
  preds [bb10]
  succs [bb25, bb28]

bb25
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/remapper.rs:150:5-150:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:150:5-150:6)
      kind: drop(_1) -> [return: bb26, unwind: bb29]
  }
  preds [bb24]
  succs [bb26, bb29]

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:150:6-150:6)
      kind: return
  }
  preds [bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:150:5-150:6)
      kind: drop(_3) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb4, bb5, bb9, bb10, bb11, bb12, bb16, bb17, bb18, bb19, bb21]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:150:5-150:6)
      kind: drop(_1) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb0, bb24, bb27]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:115:5-150:6)
      kind: resume
  }
  preds [bb25, bb28]
  succs []

