bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/wire.rs:428:9-428:18)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/wire.rs:429:9-429:51)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/wire.rs:429:9-429:51)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/wire.rs:429:9-429:44)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/util/wire.rs:429:14-429:44)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/util/wire.rs:429:9-429:14)
  6: _8 = &(*_1)
    SourceInfo(regex-automata/src/util/wire.rs:429:9-429:14)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/util/wire.rs:429:15-429:43)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/util/wire.rs:429:17-429:43)
  9: StorageLive(_11)
    SourceInfo(regex-automata/src/util/wire.rs:429:26-429:37)
  10: StorageLive(_12)
    SourceInfo(regex-automata/src/util/wire.rs:429:26-429:31)
  11: _12 = &(*_1)
    SourceInfo(regex-automata/src/util/wire.rs:429:26-429:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:429:26-429:37)
      kind: _11 = core::slice::<impl [u8]>::len(move _12) -> [return: bb1, unwind: bb26]
  }
  preds []
  succs [bb1, bb26]

bb1
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/wire.rs:429:36-429:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:429:17-429:43)
      kind: _10 = core::cmp::min::<usize>(move _11, const 256_usize) -> [return: bb2, unwind: bb26]
  }
  preds [bb0]
  succs [bb2, bb26]

bb2
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/util/wire.rs:429:42-429:43)
  1: _9 = core::ops::RangeTo::<usize> { end: move _10 }
    SourceInfo(regex-automata/src/util/wire.rs:429:15-429:43)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/util/wire.rs:429:42-429:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:429:14-429:44)
      kind: _7 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _8, move _9) -> [return: bb3, unwind: bb26]
  }
  preds [bb1]
  succs [bb3, bb26]

bb3
  0: _6 = &(*_7)
    SourceInfo(regex-automata/src/util/wire.rs:429:9-429:44)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/util/wire.rs:429:43-429:44)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/util/wire.rs:429:43-429:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:429:9-429:51)
      kind: _5 = core::slice::<impl [u8]>::iter(move _6) -> [return: bb4, unwind: bb26]
  }
  preds [bb2]
  succs [bb4, bb26]

bb4
  0: _4 = &mut _5
    SourceInfo(regex-automata/src/util/wire.rs:429:9-429:51)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/util/wire.rs:429:50-429:51)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/util/wire.rs:429:61-429:72)
  3: _13 = {closure@regex-automata/src/util/wire.rs:429:61: 429:65}
    SourceInfo(regex-automata/src/util/wire.rs:429:61-429:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:429:9-429:73)
      kind: _3 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::position::<{closure@regex-automata/src/util/wire.rs:429:61: 429:65}>(move _4, move _13) -> [return: bb5, unwind: bb26]
  }
  preds [bb3]
  succs [bb5, bb26]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/wire.rs:429:72-429:73)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/wire.rs:429:72-429:73)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/wire.rs:428:9-428:18)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/util/wire.rs:429:73-429:74)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/util/wire.rs:429:73-429:74)
  5: StorageLive(_14)
    SourceInfo(regex-automata/src/util/wire.rs:430:9-430:18)
  6: PlaceMention(_3)
    SourceInfo(regex-automata/src/util/wire.rs:430:27-430:36)
  7: _15 = discriminant(_3)
    SourceInfo(regex-automata/src/util/wire.rs:430:27-430:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:430:21-430:36)
      kind: switchInt(move _15) -> [0: bb8, 1: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(regex-automata/src/util/wire.rs:430:27-430:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:430:27-430:36)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:431:9-431:24)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_18)
    SourceInfo(regex-automata/src/util/wire.rs:433:24-436:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:433:24-436:14)
      kind: _18 = util::wire::DeserializeError::generic(const "could not find NUL terminated label at start of serialized object") -> [return: bb10, unwind: bb26]
  }
  preds [bb5, bb7]
  succs [bb10, bb26]

bb9
  0: StorageLive(_16)
    SourceInfo(regex-automata/src/util/wire.rs:431:14-431:23)
  1: _16 = ((_3 as Some).0: usize)
    SourceInfo(regex-automata/src/util/wire.rs:431:14-431:23)
  2: _14 = _16
    SourceInfo(regex-automata/src/util/wire.rs:431:28-431:37)
  3: StorageDead(_16)
    SourceInfo(regex-automata/src/util/wire.rs:431:36-431:37)
  4: FakeRead(ForLet(None), _14)
    SourceInfo(regex-automata/src/util/wire.rs:430:9-430:18)
  5: StorageLive(_19)
    SourceInfo(regex-automata/src/util/wire.rs:439:9-439:12)
  6: StorageLive(_20)
    SourceInfo(regex-automata/src/util/wire.rs:439:15-439:24)
  7: _20 = _14
    SourceInfo(regex-automata/src/util/wire.rs:439:15-439:24)
  8: StorageLive(_21)
    SourceInfo(regex-automata/src/util/wire.rs:439:27-439:49)
  9: StorageLive(_22)
    SourceInfo(regex-automata/src/util/wire.rs:439:39-439:48)
  10: _22 = _14
    SourceInfo(regex-automata/src/util/wire.rs:439:39-439:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:439:27-439:49)
      kind: _21 = util::wire::padding_len(move _22) -> [return: bb11, unwind: bb26]
  }
  preds [bb7]
  succs [bb11, bb26]

bb10
  0: _0 = core::result::Result::<usize, util::wire::DeserializeError>::Err(move _18)
    SourceInfo(regex-automata/src/util/wire.rs:433:20-436:15)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/util/wire.rs:436:14-436:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:433:13-436:15)
      kind: goto -> bb24
  }
  preds [bb8]
  succs [bb24]

bb11
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/util/wire.rs:439:48-439:49)
  1: _23 = AddWithOverflow(_20, _21)
    SourceInfo(regex-automata/src/util/wire.rs:439:15-439:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:439:15-439:49)
      kind: assert(!move (_23.1: bool), "attempt to compute `{} + {}`, which would overflow", move _20, move _21) -> [success: bb12, unwind: bb26]
  }
  preds [bb9]
  succs [bb12, bb26]

bb12
  0: _19 = move (_23.0: usize)
    SourceInfo(regex-automata/src/util/wire.rs:439:15-439:49)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/util/wire.rs:439:48-439:49)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/util/wire.rs:439:48-439:49)
  3: FakeRead(ForLet(None), _19)
    SourceInfo(regex-automata/src/util/wire.rs:439:9-439:12)
  4: StorageLive(_24)
    SourceInfo(regex-automata/src/util/wire.rs:440:5-444:6)
  5: StorageLive(_25)
    SourceInfo(regex-automata/src/util/wire.rs:440:8-440:25)
  6: StorageLive(_26)
    SourceInfo(regex-automata/src/util/wire.rs:440:8-440:19)
  7: StorageLive(_27)
    SourceInfo(regex-automata/src/util/wire.rs:440:8-440:13)
  8: _27 = &(*_1)
    SourceInfo(regex-automata/src/util/wire.rs:440:8-440:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:440:8-440:19)
      kind: _26 = core::slice::<impl [u8]>::len(move _27) -> [return: bb13, unwind: bb26]
  }
  preds [bb11]
  succs [bb13, bb26]

bb13
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/util/wire.rs:440:18-440:19)
  1: StorageLive(_28)
    SourceInfo(regex-automata/src/util/wire.rs:440:22-440:25)
  2: _28 = _19
    SourceInfo(regex-automata/src/util/wire.rs:440:22-440:25)
  3: _25 = Lt(move _26, move _28)
    SourceInfo(regex-automata/src/util/wire.rs:440:8-440:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:440:8-440:25)
      kind: switchInt(move _25) -> [0: bb16, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb16]

bb14
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/util/wire.rs:440:24-440:25)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/util/wire.rs:440:24-440:25)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/util/wire.rs:441:20-443:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:441:20-443:10)
      kind: _30 = util::wire::DeserializeError::generic(const "could not find properly sized label at start of serialized object") -> [return: bb15, unwind: bb26]
  }
  preds [bb13]
  succs [bb15, bb26]

bb15
  0: _0 = core::result::Result::<usize, util::wire::DeserializeError>::Err(move _30)
    SourceInfo(regex-automata/src/util/wire.rs:441:16-443:11)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/util/wire.rs:443:10-443:11)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/util/wire.rs:444:5-444:6)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/util/wire.rs:444:5-444:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb14]
  succs [bb23]

bb16
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/util/wire.rs:440:24-440:25)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/util/wire.rs:440:24-440:25)
  2: _24 = const ()
    SourceInfo(regex-automata/src/util/wire.rs:444:6-444:6)
  3: StorageDead(_25)
    SourceInfo(regex-automata/src/util/wire.rs:444:5-444:6)
  4: StorageDead(_24)
    SourceInfo(regex-automata/src/util/wire.rs:444:5-444:6)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/util/wire.rs:445:5-447:6)
  6: StorageLive(_32)
    SourceInfo(regex-automata/src/util/wire.rs:445:8-445:56)
  7: StorageLive(_33)
    SourceInfo(regex-automata/src/util/wire.rs:445:8-445:33)
  8: StorageLive(_34)
    SourceInfo(regex-automata/src/util/wire.rs:445:8-445:33)
  9: StorageLive(_35)
    SourceInfo(regex-automata/src/util/wire.rs:445:8-445:22)
  10: _35 = &(*_2)
    SourceInfo(regex-automata/src/util/wire.rs:445:8-445:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:445:8-445:33)
      kind: _34 = core::str::<impl str>::as_bytes(move _35) -> [return: bb17, unwind: bb26]
  }
  preds [bb13]
  succs [bb17, bb26]

bb17
  0: _33 = &_34
    SourceInfo(regex-automata/src/util/wire.rs:445:8-445:33)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/util/wire.rs:445:32-445:33)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/util/wire.rs:445:37-445:56)
  3: StorageLive(_37)
    SourceInfo(regex-automata/src/util/wire.rs:445:37-445:56)
  4: StorageLive(_38)
    SourceInfo(regex-automata/src/util/wire.rs:445:43-445:56)
  5: StorageLive(_39)
    SourceInfo(regex-automata/src/util/wire.rs:445:38-445:43)
  6: _39 = &(*_1)
    SourceInfo(regex-automata/src/util/wire.rs:445:38-445:43)
  7: StorageLive(_40)
    SourceInfo(regex-automata/src/util/wire.rs:445:44-445:55)
  8: StorageLive(_41)
    SourceInfo(regex-automata/src/util/wire.rs:445:46-445:55)
  9: _41 = _14
    SourceInfo(regex-automata/src/util/wire.rs:445:46-445:55)
  10: _40 = core::ops::RangeTo::<usize> { end: move _41 }
    SourceInfo(regex-automata/src/util/wire.rs:445:44-445:55)
  11: StorageDead(_41)
    SourceInfo(regex-automata/src/util/wire.rs:445:54-445:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:445:43-445:56)
      kind: _38 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _39, move _40) -> [return: bb18, unwind: bb26]
  }
  preds [bb16]
  succs [bb18, bb26]

bb18
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/util/wire.rs:445:55-445:56)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/util/wire.rs:445:55-445:56)
  2: _37 = &(*_38)
    SourceInfo(regex-automata/src/util/wire.rs:445:37-445:56)
  3: _36 = &_37
    SourceInfo(regex-automata/src/util/wire.rs:445:37-445:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:445:8-445:56)
      kind: _32 = <&[u8] as core::cmp::PartialEq>::ne(move _33, move _36) -> [return: bb19, unwind: bb26]
  }
  preds [bb17]
  succs [bb19, bb26]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:445:8-445:56)
      kind: switchInt(move _32) -> [0: bb22, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb22]

bb20
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/util/wire.rs:445:55-445:56)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/util/wire.rs:445:55-445:56)
  2: StorageDead(_36)
    SourceInfo(regex-automata/src/util/wire.rs:445:55-445:56)
  3: StorageDead(_34)
    SourceInfo(regex-automata/src/util/wire.rs:445:55-445:56)
  4: StorageDead(_33)
    SourceInfo(regex-automata/src/util/wire.rs:445:55-445:56)
  5: StorageLive(_43)
    SourceInfo(regex-automata/src/util/wire.rs:446:20-446:68)
  6: StorageLive(_44)
    SourceInfo(regex-automata/src/util/wire.rs:446:53-446:67)
  7: _44 = _2
    SourceInfo(regex-automata/src/util/wire.rs:446:53-446:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:446:20-446:68)
      kind: _43 = util::wire::DeserializeError::label_mismatch(move _44) -> [return: bb21, unwind: bb26]
  }
  preds [bb19]
  succs [bb21, bb26]

bb21
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/util/wire.rs:446:67-446:68)
  1: _0 = core::result::Result::<usize, util::wire::DeserializeError>::Err(move _43)
    SourceInfo(regex-automata/src/util/wire.rs:446:16-446:69)
  2: StorageDead(_43)
    SourceInfo(regex-automata/src/util/wire.rs:446:68-446:69)
  3: StorageDead(_32)
    SourceInfo(regex-automata/src/util/wire.rs:447:5-447:6)
  4: StorageDead(_31)
    SourceInfo(regex-automata/src/util/wire.rs:447:5-447:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb20]
  succs [bb23]

bb22
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/util/wire.rs:445:55-445:56)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/util/wire.rs:445:55-445:56)
  2: StorageDead(_36)
    SourceInfo(regex-automata/src/util/wire.rs:445:55-445:56)
  3: StorageDead(_34)
    SourceInfo(regex-automata/src/util/wire.rs:445:55-445:56)
  4: StorageDead(_33)
    SourceInfo(regex-automata/src/util/wire.rs:445:55-445:56)
  5: _31 = const ()
    SourceInfo(regex-automata/src/util/wire.rs:447:6-447:6)
  6: StorageDead(_32)
    SourceInfo(regex-automata/src/util/wire.rs:447:5-447:6)
  7: StorageDead(_31)
    SourceInfo(regex-automata/src/util/wire.rs:447:5-447:6)
  8: StorageLive(_45)
    SourceInfo(regex-automata/src/util/wire.rs:448:8-448:11)
  9: _45 = _19
    SourceInfo(regex-automata/src/util/wire.rs:448:8-448:11)
  10: _0 = core::result::Result::<usize, util::wire::DeserializeError>::Ok(move _45)
    SourceInfo(regex-automata/src/util/wire.rs:448:5-448:12)
  11: StorageDead(_45)
    SourceInfo(regex-automata/src/util/wire.rs:448:11-448:12)
  12: StorageDead(_19)
    SourceInfo(regex-automata/src/util/wire.rs:449:1-449:2)
  13: StorageDead(_14)
    SourceInfo(regex-automata/src/util/wire.rs:449:1-449:2)
  14: StorageDead(_3)
    SourceInfo(regex-automata/src/util/wire.rs:449:1-449:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:449:2-449:2)
      kind: goto -> bb25
  }
  preds [bb19]
  succs [bb25]

bb23
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/util/wire.rs:449:1-449:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb24
  }
  preds [bb15, bb21]
  succs [bb24]

bb24
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/util/wire.rs:449:1-449:2)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/util/wire.rs:449:1-449:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:449:2-449:2)
      kind: goto -> bb25
  }
  preds [bb10, bb23]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:449:2-449:2)
      kind: return
  }
  preds [bb22, bb24]
  succs []

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:421:1-449:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb8, bb9, bb11, bb12, bb14, bb16, bb17, bb18, bb20]
  succs []

