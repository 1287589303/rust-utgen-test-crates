{
  "regex-automata/src/meta/wrappers.rs:391:16:391:63": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "info.props_union().explicit_captures_len() == 0",
          "lhs": "info.props_union().explicit_captures_len()",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/meta/wrappers.rs:392:21:392:74": [
    {
      "Bool": {
        "Other": "info.props_union().look_set().contains_word_unicode()"
      }
    }
  ],
  "regex-automata/src/meta/wrappers.rs:379:17:379:44": [
    {
      "Bool": {
        "Other": "info.config().get_onepass()"
      }
    }
  ],
  "regex-automata/src/meta/wrappers.rs:408:32:408:38": [
    {
      "Match": {
        "match_source": "regex-automata/src/meta/wrappers.rs:408:32:408:38",
        "match_str": "result",
        "match_kind": {
          "Enum": [
            "Ok",
            "Err"
          ]
        },
        "arms": {
          "regex-automata/src/meta/wrappers.rs:409:17:409:27": {
            "pat": {
              "pat_str": "Ok(engine)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/meta/wrappers.rs:409:31:409:37"
          },
          "regex-automata/src/meta/wrappers.rs:410:17:410:26": {
            "pat": {
              "pat_str": "Err(_err)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/meta/wrappers.rs:410:30:413:18"
          }
        }
      }
    }
  ]
}