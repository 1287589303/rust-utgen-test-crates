bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1772:15-1772:35)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1772:15-1772:20)
  2: _4 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1772:15-1772:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1772:15-1772:35)
      kind: _3 = util::search::Input::<'_>::get_anchored(move _4) -> [return: bb1, unwind: bb20]
  }
  preds []
  succs [bb1, bb20]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1772:34-1772:35)
  1: PlaceMention(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1772:15-1772:35)
  2: _5 = discriminant(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1772:15-1772:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1772:9-1772:35)
      kind: switchInt(move _5) -> [0: bb3, 1: bb4, 2: bb5, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb5]

bb2
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1772:15-1772:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1772:15-1772:35)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1775:13-1775:25)
      kind: falseEdge -> [real: bb6, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb6]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1779:13-1779:26)
      kind: falseEdge -> [real: bb9, imaginary: bb5]
  }
  preds [bb1, bb3]
  succs [bb5, bb9]

bb5
  0: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1780:31-1780:34)
  1: _14 = ((_3 as Pattern).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1780:31-1780:34)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:22-1781:58)
  3: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:57)
  4: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:57)
  5: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:56)
  6: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:37)
  7: _19 = &((*_1).1: nfa::thompson::nfa::NFA)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:37)
  8: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:52-1781:55)
  9: _20 = _14
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:52-1781:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:56)
      kind: _18 = nfa::thompson::nfa::NFA::start_pattern(move _19, move _20) -> [return: bb11, unwind: bb20]
  }
  preds [bb1, bb4]
  succs [bb11, bb20]

bb6
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1775:34-1778:14)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1776:17-1776:52)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1776:17-1776:25)
  3: _8 = &((*_1).1: nfa::thompson::nfa::NFA)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1776:17-1776:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1776:17-1776:52)
      kind: _7 = nfa::thompson::nfa::NFA::is_always_start_anchored(move _8) -> [return: bb7, unwind: bb20]
  }
  preds [bb3]
  succs [bb7, bb20]

bb7
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1776:51-1776:52)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1777:17-1777:42)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1777:17-1777:25)
  3: _10 = &((*_1).1: nfa::thompson::nfa::NFA)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1777:17-1777:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1777:17-1777:42)
      kind: _9 = nfa::thompson::nfa::NFA::start_anchored(move _10) -> [return: bb8, unwind: bb20]
  }
  preds [bb6]
  succs [bb8, bb20]

bb8
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1777:41-1777:42)
  1: _6 = (move _7, move _9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1775:34-1778:14)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1778:13-1778:14)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1778:13-1778:14)
  4: _0 = core::option::Option::<(bool, util::primitives::StateID)>::Some(move _6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1775:29-1778:15)
  5: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1778:14-1778:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1778:14-1778:15)
      kind: goto -> bb18
  }
  preds [bb7]
  succs [bb18]

bb9
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1779:35-1779:68)
  1: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1779:42-1779:67)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1779:42-1779:50)
  3: _13 = &((*_1).1: nfa::thompson::nfa::NFA)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1779:42-1779:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1779:42-1779:67)
      kind: _12 = nfa::thompson::nfa::NFA::start_anchored(move _13) -> [return: bb10, unwind: bb20]
  }
  preds [bb4]
  succs [bb10, bb20]

bb10
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1779:66-1779:67)
  1: _11 = (const true, move _12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1779:35-1779:68)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1779:67-1779:68)
  3: _0 = core::option::Option::<(bool, util::primitives::StateID)>::Some(move _11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1779:30-1779:69)
  4: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1779:68-1779:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1779:68-1779:69)
      kind: goto -> bb18
  }
  preds [bb9]
  succs [bb18]

bb11
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:55-1781:56)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:55-1781:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:57)
      kind: _17 = <core::option::Option<util::primitives::StateID> as core::ops::Try>::branch(move _18) -> [return: bb12, unwind: bb20]
  }
  preds [bb5]
  succs [bb12, bb20]

bb12
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:56-1781:57)
  1: PlaceMention(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:57)
  2: _21 = discriminant(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:57)
      kind: switchInt(move _21) -> [0: bb15, 1: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:57)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:56-1781:57)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:57)
  1: _25 = ((_17 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:57)
  2: _16 = _25
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:57)
  3: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:56-1781:57)
  4: _15 = (const true, move _16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:22-1781:58)
  5: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:57-1781:58)
  6: _0 = core::option::Option::<(bool, util::primitives::StateID)>::Some(move _15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:17-1781:59)
  7: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:58-1781:59)
  8: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1782:13-1782:14)
  9: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1782:13-1782:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1782:13-1782:14)
      kind: goto -> bb18
  }
  preds [bb12, bb14]
  succs [bb18]

bb16
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:56-1781:57)
  1: _22 = ((_17 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:56-1781:57)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:56-1781:57)
  3: _24 = _22
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:56-1781:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:29-1781:57)
      kind: _0 = <core::option::Option<(bool, util::primitives::StateID)> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _24) -> [return: bb17, unwind: bb20]
  }
  preds [bb14]
  succs [bb17, bb20]

bb17
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:56-1781:57)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:56-1781:57)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:57-1781:58)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1781:58-1781:59)
  4: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1782:13-1782:14)
  5: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1782:13-1782:14)
  6: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1784:5-1784:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1784:6-1784:6)
      kind: goto -> bb19
  }
  preds [bb16]
  succs [bb19]

bb18
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1784:5-1784:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1784:6-1784:6)
      kind: goto -> bb19
  }
  preds [bb8, bb10, bb15]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1784:6-1784:6)
      kind: return
  }
  preds [bb17, bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1771:5-1784:6)
      kind: resume
  }
  preds [bb0, bb5, bb6, bb7, bb9, bb11, bb16]
  succs []

