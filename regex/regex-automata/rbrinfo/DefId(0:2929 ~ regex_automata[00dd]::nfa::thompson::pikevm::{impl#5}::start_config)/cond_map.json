{
  "regex-automata/src/nfa/thompson/pikevm.rs:1772:15:1772:35": [
    {
      "Match": {
        "match_source": "regex-automata/src/nfa/thompson/pikevm.rs:1772:15:1772:35",
        "match_str": "input.get_anchored()",
        "match_kind": {
          "Enum": [
            "No",
            "Yes",
            "Pattern"
          ]
        },
        "arms": {
          "regex-automata/src/nfa/thompson/pikevm.rs:1779:13:1779:26": {
            "pat": {
              "pat_str": "Anchored::Yes",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/pikevm.rs:1779:30:1779:69"
          },
          "regex-automata/src/nfa/thompson/pikevm.rs:1780:13:1780:35": {
            "pat": {
              "pat_str": "Anchored::Pattern(pid)",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/pikevm.rs:1780:39:1782:14"
          },
          "regex-automata/src/nfa/thompson/pikevm.rs:1775:13:1775:25": {
            "pat": {
              "pat_str": "Anchored::No",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/pikevm.rs:1775:29:1778:15"
          }
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/pikevm.rs:1781:29:1781:57": [
    {
      "Try": "self.nfa.start_pattern(pid)?"
    }
  ]
}