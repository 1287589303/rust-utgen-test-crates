bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:772:13-772:18)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:772:21-772:33)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:772:21-772:26)
  3: _6 = move _3
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:772:21-772:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:772:21-772:33)
      kind: _5 = <I as core::convert::Into<util::search::Input<'_>>>::into(move _6) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:772:32-772:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:772:21-772:48)
      kind: _4 = util::search::Input::<'_>::earliest(move _5, const true) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:772:47-772:48)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:772:13-772:18)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:9-773:50)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:9-773:50)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:9-773:13)
  5: _9 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:9-773:13)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:27-773:32)
  7: _10 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:27-773:32)
  8: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:34-773:40)
  9: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:34-773:40)
  10: _12 = &_4
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:34-773:40)
  11: _11 = &(*_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:34-773:40)
  12: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:42-773:49)
  13: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:42-773:49)
  14: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:42-773:49)
  15: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:47-773:49)
  16: _16 = []
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:47-773:49)
  17: _15 = &mut _16
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:42-773:49)
  18: _14 = &mut (*_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:42-773:49)
  19: _13 = move _14 as &mut [core::option::Option<util::primitives::NonMaxUsize>] (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:42-773:49)
  20: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:48-773:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:9-773:50)
      kind: _8 = nfa::thompson::pikevm::PikeVM::search_slots(move _9, move _10, move _11, move _13) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: _7 = &_8
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:9-773:50)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:49-773:50)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:49-773:50)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:49-773:50)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:49-773:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:9-773:60)
      kind: _0 = core::option::Option::<util::primitives::PatternID>::is_some(move _7) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:773:59-773:60)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:774:5-774:6)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:774:5-774:6)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:774:5-774:6)
  4: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:774:5-774:6)
  5: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:774:5-774:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:774:5-774:6)
      kind: drop(_3) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:774:6-774:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:772:32-772:33)
      kind: drop(_6) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:774:5-774:6)
      kind: drop(_3) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb3, bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:767:5-774:6)
      kind: resume
  }
  preds [bb4, bb7]
  succs []

