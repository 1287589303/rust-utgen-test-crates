bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:17-415:65)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:17-415:65)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:23-415:65)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:18-415:23)
  4: _5 = &(*_1)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:18-415:23)
  5: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:24-415:64)
  6: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:26-415:64)
  7: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:52-415:63)
  8: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:52-415:57)
  9: _9 = &(*_1)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:52-415:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:415:52-415:63)
      kind: _8 = core::slice::<impl [u8]>::len(move _9) -> [return: bb1, unwind: bb14]
  }
  preds []
  succs [bb1, bb14]

bb1
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:62-415:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:415:26-415:64)
      kind: _7 = core::cmp::min::<usize>(const dfa::accel::ACCEL_LEN, move _8) -> [return: bb2, unwind: bb14]
  }
  preds [bb0]
  succs [bb2, bb14]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:63-415:64)
  1: _6 = core::ops::RangeTo::<usize> { end: move _7 }
    SourceInfo(regex-automata/src/dfa/accel.rs:415:24-415:64)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:63-415:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:415:23-415:65)
      kind: _4 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _5, move _6) -> [return: bb3, unwind: bb14]
  }
  preds [bb1]
  succs [bb3, bb14]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:64-415:65)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:64-415:65)
  2: _3 = &(*_4)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:17-415:65)
  3: _2 = &(*_3)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:17-415:65)
  4: _1 = move _2
    SourceInfo(regex-automata/src/dfa/accel.rs:415:9-415:65)
  5: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:64-415:65)
  6: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:65-415:66)
  7: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/accel.rs:415:65-415:66)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/accel.rs:416:13-416:18)
  9: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/accel.rs:416:21-418:77)
  10: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/accel.rs:416:21-418:76)
  11: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/accel.rs:416:21-417:24)
  12: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/accel.rs:416:21-416:26)
  13: _14 = &(*_1)
    SourceInfo(regex-automata/src/dfa/accel.rs:416:21-416:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:416:21-417:24)
      kind: _13 = <&[u8] as core::convert::TryInto<[u8; 4]>>::try_into(move _14) -> [return: bb4, unwind: bb14]
  }
  preds [bb2]
  succs [bb4, bb14]

bb4
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/accel.rs:417:23-417:24)
  1: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/accel.rs:418:22-418:75)
  2: _15 = {closure@regex-automata/src/dfa/accel.rs:418:22: 418:25}
    SourceInfo(regex-automata/src/dfa/accel.rs:418:22-418:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:416:21-418:76)
      kind: _12 = core::result::Result::<[u8; 4], core::array::TryFromSliceError>::map_err::<util::wire::DeserializeError, {closure@regex-automata/src/dfa/accel.rs:418:22: 418:25}>(move _13, move _15) -> [return: bb5, unwind: bb14]
  }
  preds [bb3]
  succs [bb5, bb14]

bb5
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/accel.rs:418:75-418:76)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/accel.rs:418:75-418:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:416:21-418:77)
      kind: _11 = <core::result::Result<[u8; 4], util::wire::DeserializeError> as core::ops::Try>::branch(move _12) -> [return: bb6, unwind: bb14]
  }
  preds [bb4]
  succs [bb6, bb14]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/accel.rs:418:76-418:77)
  1: PlaceMention(_11)
    SourceInfo(regex-automata/src/dfa/accel.rs:416:21-418:77)
  2: _16 = discriminant(_11)
    SourceInfo(regex-automata/src/dfa/accel.rs:416:21-418:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:416:21-418:77)
      kind: switchInt(move _16) -> [0: bb9, 1: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _11)
    SourceInfo(regex-automata/src/dfa/accel.rs:416:21-418:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:416:21-418:77)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:418:76-418:77)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/accel.rs:416:21-418:77)
  1: _20 = ((_11 as Continue).0: [u8; 4])
    SourceInfo(regex-automata/src/dfa/accel.rs:416:21-418:77)
  2: _10 = _20
    SourceInfo(regex-automata/src/dfa/accel.rs:416:21-418:77)
  3: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/accel.rs:418:76-418:77)
  4: FakeRead(ForLet(None), _10)
    SourceInfo(regex-automata/src/dfa/accel.rs:416:13-416:18)
  5: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/accel.rs:418:77-418:78)
  6: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/accel.rs:419:27-419:32)
  7: _21 = _10
    SourceInfo(regex-automata/src/dfa/accel.rs:419:27-419:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:419:9-419:33)
      kind: _0 = dfa::accel::Accel::from_bytes(move _21) -> [return: bb12, unwind: bb14]
  }
  preds [bb6, bb8]
  succs [bb12, bb14]

bb10
  0: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/accel.rs:418:76-418:77)
  1: _17 = move ((_11 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/accel.rs:418:76-418:77)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/accel.rs:418:76-418:77)
  3: _19 = move _17
    SourceInfo(regex-automata/src/dfa/accel.rs:418:76-418:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:416:21-418:77)
      kind: _0 = <core::result::Result<dfa::accel::Accel, util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _19) -> [return: bb11, unwind: bb14]
  }
  preds [bb8]
  succs [bb11, bb14]

bb11
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/accel.rs:418:76-418:77)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/accel.rs:418:76-418:77)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/accel.rs:418:77-418:78)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/accel.rs:420:5-420:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:420:6-420:6)
      kind: goto -> bb13
  }
  preds [bb10]
  succs [bb13]

bb12
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/accel.rs:419:32-419:33)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/accel.rs:420:5-420:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:420:6-420:6)
      kind: goto -> bb13
  }
  preds [bb9]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:420:6-420:6)
      kind: return
  }
  preds [bb11, bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:414:5-420:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb9, bb10]
  succs []

