{
  "regex-automata/src/nfa/thompson/nfa.rs:1695:15:1695:20": [
    {
      "Match": {
        "match_source": "regex-automata/src/nfa/thompson/nfa.rs:1695:15:1695:20",
        "match_str": "*self",
        "match_kind": {
          "Enum": [
            "ByteRange",
            "Sparse",
            "Dense",
            "Look",
            "Union",
            "BinaryUnion",
            "Capture",
            "Fail",
            "Match"
          ]
        },
        "arms": {
          "regex-automata/src/nfa/thompson/nfa.rs:1699:13:1699:69": {
            "pat": {
              "pat_str": "State::Sparse(SparseTransitions { ref mut transitions })",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1699:73:1703:14"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1704:13:1704:67": {
            "pat": {
              "pat_str": "State::Dense(DenseTransitions { ref mut transitions })",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1704:71:1708:14"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1715:13:1715:62": {
            "pat": {
              "pat_str": "State::BinaryUnion { ref mut alt1, ref mut alt2 }",
              "kind": {
                "Enum": 5
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1715:66:1718:14"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1709:13:1709:45": {
            "pat": {
              "pat_str": "State::Look { ref mut next, .. }",
              "kind": {
                "Enum": 3
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1709:49:1709:69"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1710:13:1710:48": {
            "pat": {
              "pat_str": "State::Union { ref mut alternates }",
              "kind": {
                "Enum": 4
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1710:52:1714:14"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1720:13:1720:24": {
            "pat": {
              "pat_str": "State::Fail",
              "kind": {
                "Enum": 7
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1720:28:1720:30"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1719:13:1719:48": {
            "pat": {
              "pat_str": "State::Capture { ref mut next, .. }",
              "kind": {
                "Enum": 6
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1719:52:1719:72"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1721:13:1721:32": {
            "pat": {
              "pat_str": "State::Match { .. }",
              "kind": {
                "Enum": 8
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1721:36:1721:38"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1696:13:1696:47": {
            "pat": {
              "pat_str": "State::ByteRange { ref mut trans }",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1696:51:1698:14"
          }
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/nfa.rs:1711:28:1711:49": [
    {
      "For": {
        "iter_var": "alt",
        "iter_range": "alternates.iter_mut()"
      }
    }
  ],
  "regex-automata/src/nfa/thompson/nfa.rs:1705:28:1705:50": [
    {
      "For": {
        "iter_var": "sid",
        "iter_range": "transitions.iter_mut()"
      }
    }
  ],
  "regex-automata/src/nfa/thompson/nfa.rs:1700:26:1700:48": [
    {
      "For": {
        "iter_var": "t",
        "iter_range": "transitions.iter_mut()"
      }
    }
  ]
}