{
  "regex-automata/src/dfa/sparse.rs:2195:19:2195:40": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "start + StateID::SIZE",
          "lhs": "start",
          "rhs": "StateID::SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2191:23:2191:49": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(i - (2 * self.st.stride))",
          "lhs": "i",
          "rhs": "(2 * self.st.stride)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2188:19:2188:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "i < (2 * self.st.stride)",
          "lhs": "i",
          "rhs": "(2 * self.st.stride)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2191:23:2191:66": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(i - (2 * self.st.stride)) / self.st.stride",
          "lhs": "(i - (2 * self.st.stride))",
          "rhs": "self.st.stride",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2188:23:2188:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(2 * self.st.stride)",
          "lhs": "2",
          "rhs": "self.st.stride",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2194:21:2194:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "i * StateID::SIZE",
          "lhs": "i",
          "rhs": "StateID::SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2185:44:2185:62": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "i % self.st.stride",
          "lhs": "i",
          "rhs": "self.st.stride",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2178:12:2178:30": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "i >= self.st.len()",
          "lhs": "i",
          "rhs": "self.st.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2186:27:2186:45": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "i < self.st.stride",
          "lhs": "i",
          "rhs": "self.st.stride",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2191:28:2191:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(2 * self.st.stride)",
          "lhs": "2",
          "rhs": "self.st.stride",
          "cmp_with_int": true
        }
      }
    }
  ]
}