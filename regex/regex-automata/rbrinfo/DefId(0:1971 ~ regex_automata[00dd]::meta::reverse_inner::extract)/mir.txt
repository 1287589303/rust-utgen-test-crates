bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:54:5-61:6)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:54:8-54:23)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:54:8-54:18)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:54:8-54:12)
  4: _5 = &(*_1)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:54:8-54:12)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:54:8-54:18)
      kind: _4 = core::slice::<impl [&regex_syntax::hir::Hir]>::len(move _5) -> [return: bb1, unwind: bb73]
  }
  preds []
  succs [bb1, bb73]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:54:17-54:18)
  1: _3 = Ne(move _4, const 1_usize)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:54:8-54:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:54:8-54:23)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:54:22-54:23)
  1: _0 = core::option::Option::<(regex_syntax::hir::Hir, util::prefilter::Prefilter)>::None
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:60:16-60:20)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:61:5-61:6)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:61:5-61:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb59
  }
  preds [bb1]
  succs [bb59]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:54:22-54:23)
  1: _2 = const ()
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:61:6-61:6)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:61:5-61:6)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:61:5-61:6)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:9-62:19)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:28-62:47)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:39-62:46)
  7: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:44-62:45)
  8: _10 = const 0_usize
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:44-62:45)
  9: _11 = Len((*_1))
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:39-62:46)
  10: _12 = Lt(_10, _11)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:39-62:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:39-62:46)
      kind: assert(move _12, "index out of bounds: the length is {} but the index is {}", move _11, _10) -> [success: bb4, unwind: bb73]
  }
  preds [bb1]
  succs [bb4, bb73]

bb4
  0: _9 = &(*(*_1)[_10])
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:39-62:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:28-62:47)
      kind: _8 = meta::reverse_inner::top_concat(move _9) -> [return: bb5, unwind: bb73]
  }
  preds [bb3]
  succs [bb5, bb73]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:46-62:47)
  1: PlaceMention(_8)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:28-62:47)
  2: _13 = discriminant(_8)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:28-62:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:22-62:47)
      kind: switchInt(move _13) -> [0: bb8, 1: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:28-62:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:28-62:47)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:63:9-63:21)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: _0 = core::option::Option::<(regex_syntax::hir::Hir, util::prefilter::Prefilter)>::None
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:69:20-69:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:71:6-71:7)
      kind: drop(_8) -> [return: bb57, unwind: bb73]
  }
  preds [bb5, bb7]
  succs [bb57, bb73]

bb9
  0: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:63:14-63:20)
  1: _14 = move ((_8 as Some).0: std::vec::Vec<regex_syntax::hir::Hir>)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:63:14-63:20)
  2: _7 = move _14
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:63:25-63:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:63:30-63:31)
      kind: drop(_14) -> [return: bb10, unwind: bb72]
  }
  preds [bb7]
  succs [bb10, bb72]

bb10
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:63:30-63:31)
  1: FakeRead(ForLet(None), _7)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:62:9-62:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:71:6-71:7)
      kind: drop(_8) -> [return: bb11, unwind: bb71]
  }
  preds [bb9]
  succs [bb11, bb71]

bb11
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:71:6-71:7)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:71:6-71:7)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:5-110:6)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  4: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  5: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:17-74:29)
  6: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:17-74:23)
  7: _20 = &_7
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:17-74:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:17-74:29)
      kind: _19 = std::vec::Vec::<regex_syntax::hir::Hir>::len(move _20) -> [return: bb12, unwind: bb71]
  }
  preds [bb10]
  succs [bb12, bb71]

bb12
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:28-74:29)
  1: _18 = core::ops::Range::<usize> { start: const 1_usize, end: move _19 }
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:28-74:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
      kind: _17 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _18) -> [return: bb13, unwind: bb71]
  }
  preds [bb11]
  succs [bb13, bb71]

bb13
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:28-74:29)
  1: PlaceMention(_17)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  3: _21 = move _17
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:5-110:6)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:5-110:6)
      kind: falseUnwind -> [real: bb15, unwind: bb71]
  }
  preds [bb13, bb51]
  succs [bb15, bb71]

bb15
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  1: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  4: _26 = &mut _21
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  5: _25 = &mut (*_26)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
      kind: _24 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _25) -> [return: bb16, unwind: bb71]
  }
  preds [bb14]
  succs [bb16, bb71]

bb16
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:28-74:29)
  1: PlaceMention(_24)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  2: _27 = discriminant(_24)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
      kind: switchInt(move _27) -> [0: bb18, 1: bb19, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18, bb19]

bb17
  0: FakeRead(ForMatchedPlace(None), _24)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:14-74:29)
      kind: unreachable
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:5-110:6)
      kind: falseEdge -> [real: bb20, imaginary: bb19]
  }
  preds [bb16]
  succs [bb19, bb20]

bb19
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:9-74:10)
  1: _29 = ((_24 as Some).0: usize)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:9-74:10)
  2: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:75:13-75:16)
  3: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:75:26-75:29)
  4: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:75:20-75:26)
  5: _33 = &_7
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:75:20-75:26)
  6: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:75:27-75:28)
  7: _34 = _29
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:75:27-75:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:75:26-75:29)
      kind: _32 = <std::vec::Vec<regex_syntax::hir::Hir> as core::ops::Index<usize>>::index(move _33, move _34) -> [return: bb21, unwind: bb71]
  }
  preds [bb16, bb18]
  succs [bb21, bb71]

bb20
  0: _16 = const ()
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:74:5-110:6)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  4: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  5: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  6: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  7: _0 = core::option::Option::<(regex_syntax::hir::Hir, util::prefilter::Prefilter)>::None
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:115:5-115:9)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:116:1-116:2)
      kind: drop(_7) -> [return: bb52, unwind: bb73]
  }
  preds [bb18]
  succs [bb52, bb73]

bb21
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:75:28-75:29)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:75:28-75:29)
  2: _31 = &(*_32)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:75:19-75:29)
  3: FakeRead(ForLet(None), _31)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:75:13-75:16)
  4: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:76:13-76:16)
  5: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:76:25-76:39)
  6: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:76:35-76:38)
  7: _37 = &(*_31)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:76:35-76:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:76:25-76:39)
      kind: _36 = meta::reverse_inner::prefilter(move _37) -> [return: bb22, unwind: bb71]
  }
  preds [bb19]
  succs [bb22, bb71]

bb22
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:76:38-76:39)
  1: PlaceMention(_36)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:76:25-76:39)
  2: _38 = discriminant(_36)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:76:25-76:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:76:19-76:39)
      kind: switchInt(move _38) -> [0: bb24, 1: bb25, otherwise: bb23]
  }
  preds [bb21]
  succs [bb23, bb24, bb25]

bb23
  0: FakeRead(ForMatchedPlace(None), _36)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:76:25-76:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:76:25-76:39)
      kind: unreachable
  }
  preds [bb22]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:77:13-77:17)
      kind: falseEdge -> [real: bb49, imaginary: bb25]
  }
  preds [bb22]
  succs [bb25, bb49]

bb25
  0: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:78:18-78:21)
  1: _40 = move ((_36 as Some).0: util::prefilter::Prefilter)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:78:18-78:21)
  2: _35 = move _40
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:78:26-78:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:78:28-78:29)
      kind: drop(_40) -> [return: bb26, unwind: bb70]
  }
  preds [bb22, bb24]
  succs [bb26, bb70]

bb26
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:78:28-78:29)
  1: FakeRead(ForLet(None), _35)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:76:13-76:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:79:10-79:11)
      kind: drop(_36) -> [return: bb27, unwind: bb69]
  }
  preds [bb25]
  succs [bb27, bb69]

bb27
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:79:10-79:11)
  1: StorageLive(_41)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:85:9-91:10)
  2: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:85:13-85:26)
  3: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:85:13-85:16)
  4: _43 = &_35
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:85:13-85:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:85:13-85:26)
      kind: _42 = util::prefilter::Prefilter::is_fast(move _43) -> [return: bb28, unwind: bb69]
  }
  preds [bb26]
  succs [bb28, bb69]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:85:13-85:26)
      kind: switchInt(move _42) -> [0: bb30, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb30]

bb29
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:85:25-85:26)
  1: _41 = const ()
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:91:10-91:10)
  2: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:91:9-91:10)
  3: StorageDead(_41)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:91:9-91:10)
  4: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:92:13-92:26)
  5: StorageLive(_46)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:92:41-92:60)
  6: StorageLive(_47)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:92:41-92:47)
  7: _47 = &mut _7
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:92:41-92:47)
  8: StorageLive(_48)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:92:58-92:59)
  9: _48 = _29
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:92:58-92:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:92:41-92:60)
      kind: _46 = std::vec::Vec::<regex_syntax::hir::Hir>::split_off(move _47, move _48) -> [return: bb31, unwind: bb69]
  }
  preds [bb28]
  succs [bb31, bb69]

bb30
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:85:25-85:26)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:91:9-91:10)
  2: StorageDead(_41)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:91:9-91:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
      kind: drop(_35) -> [return: bb51, unwind: bb71]
  }
  preds [bb28]
  succs [bb51, bb71]

bb31
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:92:59-92:60)
  1: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:92:59-92:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:92:29-92:61)
      kind: _45 = regex_syntax::hir::Hir::concat(move _46) -> [return: bb32, unwind: bb68]
  }
  preds [bb29]
  succs [bb32, bb68]

bb32
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:92:60-92:61)
  1: FakeRead(ForLet(None), _45)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:92:13-92:26)
  2: StorageLive(_49)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:93:13-93:26)
  3: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:93:41-93:47)
  4: _50 = move _7
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:93:41-93:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:93:29-93:48)
      kind: _49 = regex_syntax::hir::Hir::concat(move _50) -> [return: bb33, unwind: bb66]
  }
  preds [bb31]
  succs [bb33, bb66]

bb33
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:93:47-93:48)
  1: FakeRead(ForLet(None), _49)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:93:13-93:26)
  2: StorageLive(_51)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:99:13-99:17)
  3: StorageLive(_52)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:99:26-99:51)
  4: StorageLive(_53)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:99:36-99:50)
  5: StorageLive(_54)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:99:36-99:50)
  6: _54 = &_45
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:99:36-99:50)
  7: _53 = &(*_54)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:99:36-99:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:99:26-99:51)
      kind: _52 = meta::reverse_inner::prefilter(move _53) -> [return: bb34, unwind: bb65]
  }
  preds [bb32]
  succs [bb34, bb65]

bb34
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:99:50-99:51)
  1: PlaceMention(_52)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:99:26-99:51)
  2: _55 = discriminant(_52)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:99:26-99:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:99:20-99:51)
      kind: switchInt(move _55) -> [0: bb36, 1: bb37, otherwise: bb35]
  }
  preds [bb33]
  succs [bb35, bb36, bb37]

bb35
  0: FakeRead(ForMatchedPlace(None), _52)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:99:26-99:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:99:26-99:51)
      kind: unreachable
  }
  preds [bb34]
  succs []

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:100:13-100:17)
      kind: falseEdge -> [real: bb38, imaginary: bb37]
  }
  preds [bb34]
  succs [bb37, bb38]

bb37
  0: StorageLive(_56)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:101:18-101:22)
  1: _56 = move ((_52 as Some).0: util::prefilter::Prefilter)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:101:18-101:22)
  2: StorageLive(_57)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:102:20-102:34)
  3: StorageLive(_58)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:102:20-102:24)
  4: _58 = &_56
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:102:20-102:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:102:20-102:34)
      kind: _57 = util::prefilter::Prefilter::is_fast(move _58) -> [return: bb39, unwind: bb63]
  }
  preds [bb34, bb36]
  succs [bb39, bb63]

bb38
  0: _51 = move _35
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:100:21-100:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:100:21-100:24)
      kind: goto -> bb44
  }
  preds [bb36]
  succs [bb44]

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:102:20-102:34)
      kind: switchInt(move _57) -> [0: bb41, otherwise: bb40]
  }
  preds [bb37]
  succs [bb40, bb41]

bb40
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:102:33-102:34)
  1: _51 = move _56
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:103:21-103:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:102:17-106:18)
      kind: goto -> bb42
  }
  preds [bb39]
  succs [bb42]

bb41
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:102:33-102:34)
  1: _51 = move _35
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:105:21-105:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:102:17-106:18)
      kind: goto -> bb42
  }
  preds [bb39]
  succs [bb42]

bb42
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:106:17-106:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:107:13-107:14)
      kind: drop(_56) -> [return: bb43, unwind: bb64]
  }
  preds [bb40, bb41]
  succs [bb43, bb64]

bb43
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:107:13-107:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:107:13-107:14)
      kind: goto -> bb44
  }
  preds [bb42]
  succs [bb44]

bb44
  0: FakeRead(ForLet(None), _51)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:99:13-99:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:108:10-108:11)
      kind: drop(_52) -> [return: bb45, unwind: bb62]
  }
  preds [bb38, bb43]
  succs [bb45, bb62]

bb45
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:108:10-108:11)
  1: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:108:10-108:11)
  2: StorageLive(_59)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:21-109:42)
  3: StorageLive(_60)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:22-109:35)
  4: _60 = move _49
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:22-109:35)
  5: StorageLive(_61)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:37-109:41)
  6: _61 = move _51
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:37-109:41)
  7: _59 = (move _60, move _61)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:21-109:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:41-109:42)
      kind: drop(_61) -> [return: bb46, unwind: bb60]
  }
  preds [bb44]
  succs [bb46, bb60]

bb46
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:41-109:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:41-109:42)
      kind: drop(_60) -> [return: bb47, unwind: bb61]
  }
  preds [bb45]
  succs [bb47, bb61]

bb47
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:41-109:42)
  1: _0 = core::option::Option::<(regex_syntax::hir::Hir, util::prefilter::Prefilter)>::Some(move _59)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:16-109:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:42-109:43)
      kind: drop(_59) -> [return: bb48, unwind: bb62]
  }
  preds [bb46]
  succs [bb48, bb62]

bb48
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:42-109:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
      kind: drop(_51) -> [return: bb53, unwind: bb65]
  }
  preds [bb47]
  succs [bb53, bb65]

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:79:10-79:11)
      kind: drop(_36) -> [return: bb50, unwind: bb71]
  }
  preds [bb24]
  succs [bb50, bb71]

bb50
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:79:10-79:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb51
  }
  preds [bb49]
  succs [bb51]

bb51
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  4: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  5: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  6: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb14
  }
  preds [bb30, bb50]
  succs [bb14]

bb52
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:116:1-116:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:116:2-116:2)
      kind: goto -> bb59
  }
  preds [bb20]
  succs [bb59]

bb53
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
      kind: drop(_49) -> [return: bb54, unwind: bb67]
  }
  preds [bb48]
  succs [bb54, bb67]

bb54
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
      kind: drop(_45) -> [return: bb55, unwind: bb69]
  }
  preds [bb53]
  succs [bb55, bb69]

bb55
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
      kind: drop(_35) -> [return: bb56, unwind: bb71]
  }
  preds [bb54]
  succs [bb56, bb71]

bb56
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  4: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  5: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  6: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  7: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  8: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  9: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:116:1-116:2)
      kind: drop(_7) -> [return: bb58, unwind: bb73]
  }
  preds [bb55]
  succs [bb58, bb73]

bb57
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:71:6-71:7)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:71:6-71:7)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb58
  }
  preds [bb8]
  succs [bb58]

bb58
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/reverse_inner.rs:116:1-116:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb59
  }
  preds [bb56, bb57]
  succs [bb59]

bb59
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:116:2-116:2)
      kind: return
  }
  preds [bb2, bb52, bb58]
  succs []

bb60
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:41-109:42)
      kind: drop(_60) -> [return: bb61, unwind terminate(cleanup)]
  }
  preds [bb45]
  succs [bb61]

bb61
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:109:42-109:43)
      kind: drop(_59) -> [return: bb62, unwind terminate(cleanup)]
  }
  preds [bb46, bb60]
  succs [bb62]

bb62
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
      kind: drop(_51) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb44, bb47, bb61]
  succs [bb65]

bb63
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:107:13-107:14)
      kind: drop(_56) -> [return: bb64, unwind terminate(cleanup)]
  }
  preds [bb37]
  succs [bb64]

bb64
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:108:10-108:11)
      kind: drop(_52) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb42, bb63]
  succs [bb65]

bb65
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
      kind: drop(_49) -> [return: bb67, unwind terminate(cleanup)]
  }
  preds [bb33, bb48, bb62, bb64]
  succs [bb67]

bb66
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:93:47-93:48)
      kind: drop(_50) -> [return: bb67, unwind terminate(cleanup)]
  }
  preds [bb32]
  succs [bb67]

bb67
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
      kind: drop(_45) -> [return: bb69, unwind terminate(cleanup)]
  }
  preds [bb53, bb65, bb66]
  succs [bb69]

bb68
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:92:60-92:61)
      kind: drop(_46) -> [return: bb69, unwind terminate(cleanup)]
  }
  preds [bb31]
  succs [bb69]

bb69
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:110:5-110:6)
      kind: drop(_35) -> [return: bb71, unwind terminate(cleanup)]
  }
  preds [bb26, bb27, bb29, bb54, bb67, bb68]
  succs [bb71]

bb70
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:79:10-79:11)
      kind: drop(_36) -> [return: bb71, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb71]

bb71
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:116:1-116:2)
      kind: drop(_7) -> [return: bb73, unwind terminate(cleanup)]
  }
  preds [bb10, bb11, bb12, bb14, bb15, bb19, bb21, bb30, bb49, bb55, bb69, bb70]
  succs [bb73]

bb72
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:71:6-71:7)
      kind: drop(_8) -> [return: bb73, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb73]

bb73
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/reverse_inner.rs:53:1-116:2)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb8, bb20, bb56, bb71, bb72]
  succs []

