bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:9-2280:10)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:13-2278:54)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:13-2278:26)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:13-2278:26)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:13-2278:17)
  5: _8 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:13-2278:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:13-2278:26)
      kind: _7 = hybrid::dfa::Lazy::<'_, '_>::as_ref(move _8) -> [return: bb1, unwind: bb65]
  }
  preds []
  succs [bb1, bb65]

bb1
  0: _6 = &_7
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:13-2278:26)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:25-2278:26)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:47-2278:53)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:47-2278:53)
  4: _10 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:47-2278:53)
  5: _9 = &(*_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:47-2278:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:13-2278:54)
      kind: _5 = hybrid::dfa::LazyRef::<'_, '_>::state_fits_in_cache(move _6, move _9) -> [return: bb2, unwind: bb65]
  }
  preds [bb0]
  succs [bb2, bb65]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:13-2278:54)
      kind: switchInt(move _5) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:53-2278:54)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:53-2278:54)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:53-2278:54)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:53-2278:54)
  4: _4 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2280:10-2280:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:9-2280:10)
      kind: goto -> bb12
  }
  preds [bb2]
  succs [bb12]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:53-2278:54)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:53-2278:54)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:53-2278:54)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:53-2278:54)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:36)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:36)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:35)
  7: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:17)
  8: _14 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:35)
      kind: _13 = hybrid::dfa::Lazy::<'_, '_>::try_clear_cache(move _14) -> [return: bb5, unwind: bb65]
  }
  preds [bb2]
  succs [bb5, bb65]

bb5
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:34-2279:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:36)
      kind: _12 = <core::result::Result<(), hybrid::error::CacheError> as core::ops::Try>::branch(move _13) -> [return: bb6, unwind: bb65]
  }
  preds [bb4]
  succs [bb6, bb65]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:35-2279:36)
  1: PlaceMention(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:36)
  2: _15 = discriminant(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:36)
      kind: switchInt(move _15) -> [0: bb9, 1: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:36)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:35-2279:36)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:36)
  1: _19 = ((_12 as Continue).0: ())
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:36)
  2: _11 = _19
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:36)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:35-2279:36)
  4: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:36-2279:37)
  5: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:36-2279:37)
  6: _4 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:55-2280:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2278:9-2280:10)
      kind: goto -> bb12
  }
  preds [bb6, bb8]
  succs [bb12]

bb10
  0: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:35-2279:36)
  1: _16 = move ((_12 as Break).0: core::result::Result<core::convert::Infallible, hybrid::error::CacheError>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:35-2279:36)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:35-2279:36)
  3: _18 = move _16
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:35-2279:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:13-2279:36)
      kind: _0 = <core::result::Result<hybrid::id::LazyStateID, hybrid::error::CacheError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hybrid::error::CacheError>>>::from_residual(move _18) -> [return: bb11, unwind: bb65]
  }
  preds [bb8]
  succs [bb11, bb65]

bb11
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:35-2279:36)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:35-2279:36)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:36-2279:37)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2279:36-2279:37)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2280:9-2280:10)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2280:9-2280:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb10]
  succs [bb60]

bb12
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2280:9-2280:10)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2280:9-2280:10)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:13-2285:19)
  3: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:22-2285:27)
  4: _21 = &_3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:22-2285:27)
  5: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:22-2285:50)
  6: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:49)
  7: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:49)
  8: StorageLive(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:48)
  9: StorageLive(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:32)
  10: _26 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:48)
      kind: _25 = hybrid::dfa::Lazy::<'_, '_>::next_state_id(move _26) -> [return: bb13, unwind: bb65]
  }
  preds [bb3, bb9]
  succs [bb13, bb65]

bb13
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:47-2285:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:49)
      kind: _24 = <core::result::Result<hybrid::id::LazyStateID, hybrid::error::CacheError> as core::ops::Try>::branch(move _25) -> [return: bb14, unwind: bb65]
  }
  preds [bb12]
  succs [bb14, bb65]

bb14
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:48-2285:49)
  1: PlaceMention(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:49)
  2: _27 = discriminant(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:49)
      kind: switchInt(move _27) -> [0: bb17, 1: bb16, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16, bb17]

bb15
  0: FakeRead(ForMatchedPlace(None), _24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:49)
      kind: unreachable
  }
  preds [bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:48-2285:49)
      kind: falseEdge -> [real: bb18, imaginary: bb17]
  }
  preds [bb14]
  succs [bb17, bb18]

bb17
  0: StorageLive(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:49)
  1: _31 = ((_24 as Continue).0: hybrid::id::LazyStateID)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:49)
  2: _23 = _31
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:49)
  3: StorageDead(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:48-2285:49)
  4: _22 = (move _23,)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:22-2285:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:22-2285:50)
      kind: _20 = <impl Fn(LazyStateID) -> LazyStateID as core::ops::Fn<(hybrid::id::LazyStateID,)>>::call(move _21, move _22) -> [return: bb20, unwind: bb65]
  }
  preds [bb14, bb16]
  succs [bb20, bb65]

bb18
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:48-2285:49)
  1: _28 = move ((_24 as Break).0: core::result::Result<core::convert::Infallible, hybrid::error::CacheError>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:48-2285:49)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:48-2285:49)
  3: _30 = move _28
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:48-2285:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:28-2285:49)
      kind: _0 = <core::result::Result<hybrid::id::LazyStateID, hybrid::error::CacheError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hybrid::error::CacheError>>>::from_residual(move _30) -> [return: bb19, unwind: bb65]
  }
  preds [bb16]
  succs [bb19, bb65]

bb19
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:48-2285:49)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:48-2285:49)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:49-2285:50)
  3: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:49-2285:50)
  4: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:49-2285:50)
  5: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:50-2285:51)
  6: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2311:5-2311:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb18]
  succs [bb60]

bb20
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:49-2285:50)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:49-2285:50)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:49-2285:50)
  3: FakeRead(ForLet(None), _20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:13-2285:19)
  4: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2285:50-2285:51)
  5: StorageLive(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2286:9-2288:10)
  6: StorageLive(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2286:12-2286:28)
  7: StorageLive(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2286:12-2286:17)
  8: _34 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2286:12-2286:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2286:12-2286:28)
      kind: _33 = util::determinize::state::State::is_match(move _34) -> [return: bb21, unwind: bb65]
  }
  preds [bb17]
  succs [bb21, bb65]

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2286:12-2286:28)
      kind: switchInt(move _33) -> [0: bb24, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb24]

bb22
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2286:27-2286:28)
  1: StorageLive(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2287:18-2287:31)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2287:18-2287:20)
  3: _36 = &_20
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2287:18-2287:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2287:18-2287:31)
      kind: _35 = hybrid::id::LazyStateID::to_match(move _36) -> [return: bb23, unwind: bb65]
  }
  preds [bb21]
  succs [bb23, bb65]

bb23
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2287:30-2287:31)
  1: _20 = move _35
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2287:13-2287:31)
  2: StorageDead(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2287:30-2287:31)
  3: _32 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2286:29-2288:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2286:9-2288:10)
      kind: goto -> bb25
  }
  preds [bb22]
  succs [bb25]

bb24
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2286:27-2286:28)
  1: _32 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2288:10-2288:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2286:9-2288:10)
      kind: goto -> bb25
  }
  preds [bb21]
  succs [bb25]

bb25
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2288:9-2288:10)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2288:9-2288:10)
  2: StorageLive(_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2291:9-2293:10)
  3: StorageLive(_38)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2291:9-2291:25)
  4: _38 = &mut ((*((*_1).1: &mut hybrid::dfa::Cache)).0: std::vec::Vec<hybrid::id::LazyStateID>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2291:9-2291:25)
  5: StorageLive(_39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:13-2292:77)
  6: StorageLive(_40)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:13-2292:53)
  7: StorageLive(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:26-2292:52)
  8: StorageLive(_42)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:26-2292:39)
  9: StorageLive(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:26-2292:39)
  10: StorageLive(_44)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:26-2292:30)
  11: _44 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:26-2292:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:26-2292:39)
      kind: _43 = hybrid::dfa::Lazy::<'_, '_>::as_ref(move _44) -> [return: bb26, unwind: bb65]
  }
  preds [bb23, bb24]
  succs [bb26, bb65]

bb26
  0: _42 = &_43
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:26-2292:39)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:38-2292:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:26-2292:52)
      kind: _41 = hybrid::dfa::LazyRef::<'_, '_>::unknown_id(move _42) -> [return: bb27, unwind: bb65]
  }
  preds [bb25]
  succs [bb27, bb65]

bb27
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:51-2292:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:13-2292:53)
      kind: _40 = core::iter::repeat::<hybrid::id::LazyStateID>(move _41) -> [return: bb28, unwind: bb65]
  }
  preds [bb26]
  succs [bb28, bb65]

bb28
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:52-2292:53)
  1: StorageLive(_45)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:59-2292:76)
  2: StorageLive(_46)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:59-2292:67)
  3: _46 = &(*((*_1).0: &hybrid::dfa::DFA))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:59-2292:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:59-2292:76)
      kind: _45 = hybrid::dfa::DFA::stride(move _46) -> [return: bb29, unwind: bb65]
  }
  preds [bb27]
  succs [bb29, bb65]

bb29
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:75-2292:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:13-2292:77)
      kind: _39 = <core::iter::Repeat<hybrid::id::LazyStateID> as core::iter::Iterator>::take(move _40, move _45) -> [return: bb30, unwind: bb65]
  }
  preds [bb28]
  succs [bb30, bb65]

bb30
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:76-2292:77)
  1: StorageDead(_40)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2292:76-2292:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2291:9-2293:10)
      kind: _37 = <std::vec::Vec<hybrid::id::LazyStateID> as core::iter::Extend<hybrid::id::LazyStateID>>::extend::<core::iter::Take<core::iter::Repeat<hybrid::id::LazyStateID>>>(move _38, move _39) -> [return: bb31, unwind: bb65]
  }
  preds [bb29]
  succs [bb31, bb65]

bb31
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2293:9-2293:10)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2293:9-2293:10)
  2: StorageDead(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2293:10-2293:11)
  3: StorageDead(_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2293:10-2293:11)
  4: StorageLive(_47)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:9-2306:10)
  5: StorageLive(_48)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:13-2301:40)
  6: StorageLive(_49)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:13-2301:29)
  7: _49 = &((*((*_1).0: &hybrid::dfa::DFA)).5: util::alphabet::ByteSet)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:13-2301:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:13-2301:40)
      kind: _48 = util::alphabet::ByteSet::is_empty(move _49) -> [return: bb32, unwind: bb65]
  }
  preds [bb30]
  succs [bb32, bb65]

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:13-2301:40)
      kind: switchInt(move _48) -> [0: bb34, otherwise: bb33]
  }
  preds [bb31]
  succs [bb33, bb34]

bb33
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:39-2301:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:75-2306:10)
      kind: goto -> bb52
  }
  preds [bb32]
  succs [bb52]

bb34
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:39-2301:40)
  1: StorageLive(_50)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:45-2301:74)
  2: StorageLive(_51)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:45-2301:58)
  3: StorageLive(_52)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:45-2301:58)
  4: StorageLive(_53)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:45-2301:49)
  5: _53 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:45-2301:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:45-2301:58)
      kind: _52 = hybrid::dfa::Lazy::<'_, '_>::as_ref(move _53) -> [return: bb35, unwind: bb65]
  }
  preds [bb32]
  succs [bb35, bb65]

bb35
  0: _51 = &_52
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:45-2301:58)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:57-2301:58)
  2: StorageLive(_54)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:71-2301:73)
  3: _54 = _20
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:71-2301:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:45-2301:74)
      kind: _50 = hybrid::dfa::LazyRef::<'_, '_>::is_sentinel(move _51, move _54) -> [return: bb36, unwind: bb65]
  }
  preds [bb34]
  succs [bb36, bb65]

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:45-2301:74)
      kind: switchInt(move _50) -> [0: bb38, otherwise: bb37]
  }
  preds [bb35]
  succs [bb37, bb38]

bb37
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:73-2301:74)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:73-2301:74)
  2: StorageDead(_52)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:73-2301:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb52
  }
  preds [bb36]
  succs [bb52]

bb38
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:73-2301:74)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:73-2301:74)
  2: StorageDead(_52)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:73-2301:74)
  3: StorageLive(_55)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2302:17-2302:24)
  4: StorageLive(_56)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2302:27-2302:40)
  5: StorageLive(_57)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2302:27-2302:40)
  6: StorageLive(_58)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2302:27-2302:31)
  7: _58 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2302:27-2302:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2302:27-2302:40)
      kind: _57 = hybrid::dfa::Lazy::<'_, '_>::as_ref(move _58) -> [return: bb39, unwind: bb65]
  }
  preds [bb36]
  succs [bb39, bb65]

bb39
  0: _56 = &_57
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2302:27-2302:40)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2302:39-2302:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2302:27-2302:50)
      kind: _55 = hybrid::dfa::LazyRef::<'_, '_>::quit_id(move _56) -> [return: bb40, unwind: bb65]
  }
  preds [bb38]
  succs [bb40, bb65]

bb40
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2302:49-2302:50)
  1: FakeRead(ForLet(None), _55)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2302:17-2302:24)
  2: StorageDead(_57)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2302:50-2302:51)
  3: StorageLive(_59)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
  4: StorageLive(_60)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
  5: StorageLive(_61)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:38)
  6: _61 = &((*((*_1).0: &hybrid::dfa::DFA)).5: util::alphabet::ByteSet)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
      kind: _60 = util::alphabet::ByteSet::iter(move _61) -> [return: bb41, unwind: bb65]
  }
  preds [bb39]
  succs [bb41, bb65]

bb41
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:44-2303:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
      kind: _59 = <util::alphabet::ByteSetIter<'_> as core::iter::IntoIterator>::into_iter(move _60) -> [return: bb42, unwind: bb65]
  }
  preds [bb40]
  succs [bb42, bb65]

bb42
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:44-2303:45)
  1: PlaceMention(_59)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
  2: StorageLive(_62)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
  3: _62 = move _59
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:13-2305:14)
      kind: goto -> bb43
  }
  preds [bb41]
  succs [bb43]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:13-2305:14)
      kind: falseUnwind -> [real: bb44, unwind: bb65]
  }
  preds [bb42, bb51]
  succs [bb44, bb65]

bb44
  0: StorageLive(_64)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
  1: StorageLive(_65)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
  2: StorageLive(_66)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
  3: StorageLive(_67)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
  4: _67 = &mut _62
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
  5: _66 = &mut (*_67)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
      kind: _65 = <util::alphabet::ByteSetIter<'_> as core::iter::Iterator>::next(move _66) -> [return: bb45, unwind: bb65]
  }
  preds [bb43]
  succs [bb45, bb65]

bb45
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:44-2303:45)
  1: PlaceMention(_65)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
  2: _68 = discriminant(_65)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
      kind: switchInt(move _68) -> [0: bb47, 1: bb48, otherwise: bb46]
  }
  preds [bb44]
  succs [bb46, bb47, bb48]

bb46
  0: FakeRead(ForMatchedPlace(None), _65)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:22-2303:45)
      kind: unreachable
  }
  preds [bb45]
  succs []

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:13-2305:14)
      kind: falseEdge -> [real: bb49, imaginary: bb48]
  }
  preds [bb45]
  succs [bb48, bb49]

bb48
  0: StorageLive(_70)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:17-2303:18)
  1: _70 = ((_65 as Some).0: u8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:17-2303:18)
  2: StorageLive(_71)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:17-2304:72)
  3: StorageLive(_72)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:17-2304:21)
  4: _72 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:17-2304:21)
  5: StorageLive(_73)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:37-2304:39)
  6: _73 = _20
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:37-2304:39)
  7: StorageLive(_74)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:41-2304:62)
  8: StorageLive(_75)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:60-2304:61)
  9: _75 = _70
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:60-2304:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:41-2304:62)
      kind: _74 = util::alphabet::Unit::u8(move _75) -> [return: bb50, unwind: bb65]
  }
  preds [bb45, bb47]
  succs [bb50, bb65]

bb49
  0: _47 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:13-2305:14)
  1: StorageDead(_67)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2305:13-2305:14)
  2: StorageDead(_65)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2305:13-2305:14)
  3: StorageDead(_64)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2305:13-2305:14)
  4: StorageDead(_62)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2305:13-2305:14)
  5: StorageDead(_59)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2305:13-2305:14)
  6: StorageDead(_55)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2306:9-2306:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:9-2306:10)
      kind: goto -> bb53
  }
  preds [bb47]
  succs [bb53]

bb50
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:61-2304:62)
  1: StorageLive(_76)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:64-2304:71)
  2: _76 = _55
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:64-2304:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:17-2304:72)
      kind: _71 = hybrid::dfa::Lazy::<'_, '_>::set_transition(move _72, move _73, move _74, move _76) -> [return: bb51, unwind: bb65]
  }
  preds [bb48]
  succs [bb51, bb65]

bb51
  0: StorageDead(_76)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:71-2304:72)
  1: StorageDead(_74)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:71-2304:72)
  2: StorageDead(_73)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:71-2304:72)
  3: StorageDead(_72)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:71-2304:72)
  4: StorageDead(_71)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2304:72-2304:73)
  5: _64 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:46-2305:14)
  6: StorageDead(_70)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2305:13-2305:14)
  7: StorageDead(_67)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2305:13-2305:14)
  8: StorageDead(_65)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2305:13-2305:14)
  9: StorageDead(_64)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2305:13-2305:14)
  10: _63 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:13-2305:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2303:13-2305:14)
      kind: goto -> bb43
  }
  preds [bb50]
  succs [bb43]

bb52
  0: _47 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2306:10-2306:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2301:9-2306:10)
      kind: goto -> bb53
  }
  preds [bb33, bb37]
  succs [bb53]

bb53
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2306:9-2306:10)
  1: StorageDead(_48)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2306:9-2306:10)
  2: StorageDead(_47)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2306:9-2306:10)
  3: StorageLive(_77)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2307:42-2307:62)
  4: StorageLive(_78)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2307:42-2307:47)
  5: _78 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2307:42-2307:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2307:42-2307:62)
      kind: _77 = util::determinize::state::State::memory_usage(move _78) -> [return: bb54, unwind: bb65]
  }
  preds [bb49, bb52]
  succs [bb54, bb65]

bb54
  0: StorageDead(_78)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2307:61-2307:62)
  1: _79 = AddWithOverflow(((*((*_1).1: &mut hybrid::dfa::Cache)).8: usize), _77)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2307:9-2307:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2307:9-2307:62)
      kind: assert(!move (_79.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*((*_1).1: &mut hybrid::dfa::Cache)).8: usize), move _77) -> [success: bb55, unwind: bb65]
  }
  preds [bb53]
  succs [bb55, bb65]

bb55
  0: ((*((*_1).1: &mut hybrid::dfa::Cache)).8: usize) = move (_79.0: usize)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2307:9-2307:62)
  1: StorageDead(_77)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2307:61-2307:62)
  2: StorageLive(_80)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2308:9-2308:46)
  3: StorageLive(_81)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2308:9-2308:26)
  4: _81 = &mut ((*((*_1).1: &mut hybrid::dfa::Cache)).2: std::vec::Vec<util::determinize::state::State>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2308:9-2308:26)
  5: StorageLive(_82)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2308:32-2308:45)
  6: StorageLive(_83)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2308:32-2308:37)
  7: _83 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2308:32-2308:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2308:32-2308:45)
      kind: _82 = <util::determinize::state::State as core::clone::Clone>::clone(move _83) -> [return: bb56, unwind: bb65]
  }
  preds [bb54]
  succs [bb56, bb65]

bb56
  0: StorageDead(_83)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2308:44-2308:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2308:9-2308:46)
      kind: _80 = std::vec::Vec::<util::determinize::state::State>::push(move _81, move _82) -> [return: bb57, unwind: bb64]
  }
  preds [bb55]
  succs [bb57, bb64]

bb57
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2308:45-2308:46)
  1: StorageDead(_81)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2308:45-2308:46)
  2: StorageDead(_80)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2308:46-2308:47)
  3: StorageLive(_84)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2309:9-2309:50)
  4: StorageLive(_85)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2309:9-2309:32)
  5: _85 = &mut ((*((*_1).1: &mut hybrid::dfa::Cache)).3: std::collections::HashMap<util::determinize::state::State, hybrid::id::LazyStateID>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2309:9-2309:32)
  6: StorageLive(_86)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2309:40-2309:45)
  7: _86 = move _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2309:40-2309:45)
  8: StorageLive(_87)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2309:47-2309:49)
  9: _87 = _20
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2309:47-2309:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2309:9-2309:50)
      kind: _84 = std::collections::HashMap::<util::determinize::state::State, hybrid::id::LazyStateID>::insert(move _85, move _86, move _87) -> [return: bb58, unwind: bb63]
  }
  preds [bb56]
  succs [bb58, bb63]

bb58
  0: StorageDead(_87)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2309:49-2309:50)
  1: StorageDead(_86)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2309:49-2309:50)
  2: StorageDead(_85)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2309:49-2309:50)
  3: StorageDead(_84)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2309:50-2309:51)
  4: StorageLive(_88)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2310:12-2310:14)
  5: _88 = _20
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2310:12-2310:14)
  6: _0 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::CacheError>::Ok(move _88)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2310:9-2310:15)
  7: StorageDead(_88)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2310:14-2310:15)
  8: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2311:5-2311:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2311:5-2311:6)
      kind: drop(_3) -> [return: bb59, unwind: bb66]
  }
  preds [bb57]
  succs [bb59, bb66]

bb59
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2311:5-2311:6)
      kind: drop(_2) -> [return: bb62, unwind: bb67]
  }
  preds [bb58]
  succs [bb62, bb67]

bb60
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2311:5-2311:6)
      kind: drop(_3) -> [return: bb61, unwind: bb66]
  }
  preds [bb11, bb19]
  succs [bb61, bb66]

bb61
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2311:5-2311:6)
      kind: drop(_2) -> [return: bb62, unwind: bb67]
  }
  preds [bb60]
  succs [bb62, bb67]

bb62
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2311:6-2311:6)
      kind: return
  }
  preds [bb59, bb61]
  succs []

bb63
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2309:49-2309:50)
      kind: drop(_86) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb57]
  succs [bb65]

bb64
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2308:45-2308:46)
      kind: drop(_82) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb56]
  succs [bb65]

bb65
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2311:5-2311:6)
      kind: drop(_3) -> [return: bb66, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb4, bb5, bb10, bb12, bb13, bb17, bb18, bb20, bb22, bb25, bb26, bb27, bb28, bb29, bb30, bb31, bb34, bb35, bb38, bb39, bb40, bb41, bb43, bb44, bb48, bb50, bb53, bb54, bb55, bb63, bb64]
  succs [bb66]

bb66
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2311:5-2311:6)
      kind: drop(_2) -> [return: bb67, unwind terminate(cleanup)]
  }
  preds [bb58, bb60, bb65]
  succs [bb67]

bb67
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2273:5-2311:6)
      kind: resume
  }
  preds [bb59, bb61, bb66]
  succs []

