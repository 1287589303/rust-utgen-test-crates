bb0
  0: PlaceMention(_1)
    SourceInfo(regex-automata/src/meta/regex.rs:2088:49-2088:53)
  1: StorageLive(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:2088:27-2088:29)
  2: _2 = (_1.0: &meta::regex::Regex)
    SourceInfo(regex-automata/src/meta/regex.rs:2088:27-2088:29)
  3: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:2088:31-2088:40)
  4: _3 = move (_1.1: util::pool::PoolGuard<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>)
    SourceInfo(regex-automata/src/meta/regex.rs:2088:31-2088:40)
  5: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:2088:42-2088:44)
  6: _4 = move (_1.2: util::iter::Searcher<'_>)
    SourceInfo(regex-automata/src/meta/regex.rs:2088:42-2088:44)
  7: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:2090:13-2090:18)
  8: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:2090:26-2090:32)
  9: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:2090:27-2090:32)
  10: _7 = &mut _3
    SourceInfo(regex-automata/src/meta/regex.rs:2090:27-2090:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2090:26-2090:32)
      kind: _6 = <util::pool::PoolGuard<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>> as core::ops::DerefMut>::deref_mut(move _7) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:2090:31-2090:32)
  1: _5 = &mut (*_6)
    SourceInfo(regex-automata/src/meta/regex.rs:2090:21-2090:32)
  2: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/meta/regex.rs:2090:13-2090:18)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:2091:9-2093:10)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:2091:9-2091:11)
  5: _9 = move _4
    SourceInfo(regex-automata/src/meta/regex.rs:2091:9-2091:11)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:2092:13-2092:58)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:2092:13-2092:58)
  8: _11 = &(*_2)
    SourceInfo(regex-automata/src/meta/regex.rs:2092:13-2092:58)
  9: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:2092:13-2092:58)
  10: _12 = &mut (*_5)
    SourceInfo(regex-automata/src/meta/regex.rs:2092:13-2092:58)
  11: _10 = {closure@regex-automata/src/meta/regex.rs:2092:13: 2092:20} { re: move _11, cache: move _12 }
    SourceInfo(regex-automata/src/meta/regex.rs:2092:13-2092:58)
  12: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:2092:19-2092:20)
  13: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:2092:19-2092:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2091:9-2093:10)
      kind: _8 = util::iter::Searcher::<'_>::into_half_matches_iter::<{closure@regex-automata/src/meta/regex.rs:2092:13: 2092:20}>(move _9, move _10) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:2093:9-2093:10)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:2093:9-2093:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2091:9-2094:17)
      kind: _0 = <util::iter::TryHalfMatchesIter<'_, {closure@regex-automata/src/meta/regex.rs:2092:13: 2092:20}> as core::iter::Iterator>::count(move _8) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:2094:16-2094:17)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:2095:5-2095:6)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:2095:5-2095:6)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:2095:5-2095:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2095:5-2095:6)
      kind: drop(_3) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:2095:5-2095:6)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:2095:5-2095:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2095:5-2095:6)
      kind: drop(_1) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2095:6-2095:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2095:5-2095:6)
      kind: drop(_3) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2095:5-2095:6)
      kind: drop(_1) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb3, bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2083:5-2095:6)
      kind: resume
  }
  preds [bb4, bb7]
  succs []

