bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2446:9-2446:33)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2446:9-2446:25)
  2: _3 = &mut ((*((*_1).1: &mut hybrid::dfa::Cache)).0: std::vec::Vec<hybrid::id::LazyStateID>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2446:9-2446:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2446:9-2446:33)
      kind: _2 = std::vec::Vec::<hybrid::id::LazyStateID>::clear(move _3) -> [return: bb1, unwind: bb31]
  }
  preds []
  succs [bb1, bb31]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2446:32-2446:33)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2446:33-2446:34)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2447:9-2447:34)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2447:9-2447:26)
  4: _5 = &mut ((*((*_1).1: &mut hybrid::dfa::Cache)).1: std::vec::Vec<hybrid::id::LazyStateID>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2447:9-2447:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2447:9-2447:34)
      kind: _4 = std::vec::Vec::<hybrid::id::LazyStateID>::clear(move _5) -> [return: bb2, unwind: bb31]
  }
  preds [bb0]
  succs [bb2, bb31]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2447:33-2447:34)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2447:34-2447:35)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2448:9-2448:34)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2448:9-2448:26)
  4: _7 = &mut ((*((*_1).1: &mut hybrid::dfa::Cache)).2: std::vec::Vec<util::determinize::state::State>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2448:9-2448:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2448:9-2448:34)
      kind: _6 = std::vec::Vec::<util::determinize::state::State>::clear(move _7) -> [return: bb3, unwind: bb31]
  }
  preds [bb1]
  succs [bb3, bb31]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2448:33-2448:34)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2448:34-2448:35)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2449:9-2449:40)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2449:9-2449:32)
  4: _9 = &mut ((*((*_1).1: &mut hybrid::dfa::Cache)).3: std::collections::HashMap<util::determinize::state::State, hybrid::id::LazyStateID>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2449:9-2449:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2449:9-2449:40)
      kind: _8 = std::collections::HashMap::<util::determinize::state::State, hybrid::id::LazyStateID>::clear(move _9) -> [return: bb4, unwind: bb31]
  }
  preds [bb2]
  succs [bb4, bb31]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2449:39-2449:40)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2449:40-2449:41)
  2: ((*((*_1).1: &mut hybrid::dfa::Cache)).8: usize) = const 0_usize
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2450:9-2450:42)
  3: _10 = AddWithOverflow(((*((*_1).1: &mut hybrid::dfa::Cache)).9: usize), const 1_usize)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2451:9-2451:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2451:9-2451:36)
      kind: assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*((*_1).1: &mut hybrid::dfa::Cache)).9: usize), const 1_usize) -> [success: bb5, unwind: bb31]
  }
  preds [bb3]
  succs [bb5, bb31]

bb5
  0: ((*((*_1).1: &mut hybrid::dfa::Cache)).9: usize) = move (_10.0: usize)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2451:9-2451:36)
  1: ((*((*_1).1: &mut hybrid::dfa::Cache)).10: usize) = const 0_usize
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2452:9-2452:38)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2453:9-2455:10)
  3: PlaceMention(((*((*_1).1: &mut hybrid::dfa::Cache)).11: core::option::Option<hybrid::dfa::SearchProgress>))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2453:41-2453:60)
  4: _12 = discriminant(((*((*_1).1: &mut hybrid::dfa::Cache)).11: core::option::Option<hybrid::dfa::SearchProgress>))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2453:41-2453:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2453:16-2453:38)
      kind: switchInt(move _12) -> [1: bb6, otherwise: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2453:16-2453:38)
      kind: falseEdge -> [real: bb7, imaginary: bb8]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2453:21-2453:37)
  1: _13 = &mut ((((*((*_1).1: &mut hybrid::dfa::Cache)).11: core::option::Option<hybrid::dfa::SearchProgress>) as Some).0: hybrid::dfa::SearchProgress)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2453:21-2453:37)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2454:30-2454:41)
  3: _14 = ((*_13).1: usize)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2454:30-2454:41)
  4: ((*_13).0: usize) = move _14
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2454:13-2454:41)
  5: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2454:40-2454:41)
  6: _11 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2453:61-2455:10)
  7: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2455:9-2455:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2453:9-2455:10)
      kind: goto -> bb9
  }
  preds [bb6]
  succs [bb9]

bb8
  0: _11 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2455:10-2455:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2453:9-2455:10)
      kind: goto -> bb9
  }
  preds [bb5, bb6]
  succs [bb9]

bb9
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2455:9-2455:10)
  1: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2460:9-2460:26)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2460:9-2460:13)
  3: _16 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2460:9-2460:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2460:9-2460:26)
      kind: _15 = hybrid::dfa::Lazy::<'_, '_>::init_cache(move _16) -> [return: bb10, unwind: bb31]
  }
  preds [bb7, bb8]
  succs [bb10, bb31]

bb10
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2460:25-2460:26)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2460:26-2460:27)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:40-2465:77)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:40-2465:62)
  4: _18 = &mut ((*((*_1).1: &mut hybrid::dfa::Cache)).7: hybrid::dfa::StateSaver)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:40-2465:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:40-2465:77)
      kind: _17 = hybrid::dfa::StateSaver::take_to_save(move _18) -> [return: bb11, unwind: bb31]
  }
  preds [bb9]
  succs [bb11, bb31]

bb11
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:76-2465:77)
  1: PlaceMention(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:40-2465:77)
  2: _19 = discriminant(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:40-2465:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:16-2465:37)
      kind: switchInt(move _19) -> [1: bb12, otherwise: bb24]
  }
  preds [bb10]
  succs [bb12, bb24]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:16-2465:37)
      kind: falseEdge -> [real: bb13, imaginary: bb24]
  }
  preds [bb11]
  succs [bb13, bb24]

bb13
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:22-2465:28)
  1: _20 = (((_17 as Some).0: (hybrid::id::LazyStateID, util::determinize::state::State)).0: hybrid::id::LazyStateID)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:22-2465:28)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:30-2465:35)
  3: _21 = move (((_17 as Some).0: (hybrid::id::LazyStateID, util::determinize::state::State)).1: util::determinize::state::State)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:30-2465:35)
  4: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2473:13-2476:14)
  5: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:18-2474:51)
  6: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:18-2474:31)
  7: StorageLive(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:18-2474:31)
  8: StorageLive(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:18-2474:22)
  9: _26 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:18-2474:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:18-2474:31)
      kind: _25 = hybrid::dfa::Lazy::<'_, '_>::as_ref(move _26) -> [return: bb14, unwind: bb29]
  }
  preds [bb12]
  succs [bb14, bb29]

bb14
  0: _24 = &_25
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:18-2474:31)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:30-2474:31)
  2: StorageLive(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:44-2474:50)
  3: _27 = _20
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:44-2474:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:18-2474:51)
      kind: _23 = hybrid::dfa::LazyRef::<'_, '_>::is_sentinel(move _24, move _27) -> [return: bb15, unwind: bb29]
  }
  preds [bb13]
  succs [bb15, bb29]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:18-2474:51)
      kind: switchInt(move _23) -> [0: bb17, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb17]

bb16
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:50-2474:51)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:50-2474:51)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2476:13-2476:14)
  3: StorageLive(_29)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  4: StorageLive(_30)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2475:17-2475:45)
  6: StorageLive(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2475:17-2475:45)
  7: StorageLive(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2475:17-2475:45)
  8: _33 = [const "cannot save sentinel state"]
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2475:17-2475:45)
  9: _32 = &_33
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2475:17-2475:45)
  10: _31 = &(*_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2475:17-2475:45)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _30 = core::fmt::Arguments::<'_>::new_const::<1>(move _31) -> [return: bb18, unwind: bb29]
  }
  preds [bb15]
  succs [bb18, bb29]

bb17
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:50-2474:51)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2474:50-2474:51)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2476:13-2476:14)
  3: _22 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2476:14-2476:14)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2476:13-2476:14)
  5: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2476:13-2476:14)
  6: StorageLive(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2477:17-2477:23)
  7: StorageLive(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2477:26-2488:19)
  8: StorageLive(_36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2477:26-2477:30)
  9: _36 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2477:26-2477:30)
  10: StorageLive(_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2478:28-2478:33)
  11: _37 = move _21
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2478:28-2478:33)
  12: StorageLive(_38)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2478:35-2488:18)
  13: StorageLive(_39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2478:35-2488:18)
  14: _39 = &_20
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2478:35-2488:18)
  15: _38 = {closure@regex-automata/src/hybrid/dfa.rs:2478:35: 2478:39} { old_id: move _39 }
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2478:35-2488:18)
  16: StorageDead(_39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2478:38-2478:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2477:26-2488:19)
      kind: _35 = hybrid::dfa::Lazy::<'_, '_>::add_state::<{closure@regex-automata/src/hybrid/dfa.rs:2478:35: 2478:39}>(move _36, move _37, move _38) -> [return: bb19, unwind: bb28]
  }
  preds [bb15]
  succs [bb19, bb28]

bb18
  0: StorageDead(_31)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _29 = core::panicking::panic_fmt(move _30) -> bb29
  }
  preds [bb16]
  succs [bb29]

bb19
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2488:18-2488:19)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2488:18-2488:19)
  2: StorageDead(_36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2488:18-2488:19)
  3: StorageLive(_40)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2492:25-2492:71)
  4: StorageLive(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2492:25-2492:71)
  5: _41 = const "adding one state after cache clear must work"
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2492:25-2492:71)
  6: _40 = &(*_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2492:25-2492:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2477:26-2492:72)
      kind: _34 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::CacheError>::expect(move _35, move _40) -> [return: bb20, unwind: bb29]
  }
  preds [bb17]
  succs [bb20, bb29]

bb20
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2492:71-2492:72)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2492:71-2492:72)
  2: FakeRead(ForLet(None), _34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2477:17-2477:23)
  3: StorageDead(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2492:72-2492:73)
  4: StorageLive(_42)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2493:38-2493:63)
  5: StorageLive(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2493:56-2493:62)
  6: _43 = _34
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2493:56-2493:62)
  7: _42 = hybrid::dfa::StateSaver::Saved(move _43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2493:38-2493:63)
  8: StorageDead(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2493:62-2493:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2493:13-2493:35)
      kind: drop(((*((*_1).1: &mut hybrid::dfa::Cache)).7: hybrid::dfa::StateSaver)) -> [return: bb21, unwind: bb22]
  }
  preds [bb19]
  succs [bb21, bb22]

bb21
  0: ((*((*_1).1: &mut hybrid::dfa::Cache)).7: hybrid::dfa::StateSaver) = move _42
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2493:13-2493:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2493:62-2493:63)
      kind: drop(_42) -> [return: bb23, unwind: bb29]
  }
  preds [bb20]
  succs [bb23, bb29]

bb22
  0: ((*((*_1).1: &mut hybrid::dfa::Cache)).7: hybrid::dfa::StateSaver) = move _42
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2493:13-2493:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2493:62-2493:63)
      kind: drop(_42) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb29]

bb23
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2493:62-2493:63)
  1: _0 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:78-2494:10)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2494:9-2494:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2494:9-2494:10)
      kind: drop(_21) -> [return: bb25, unwind: bb30]
  }
  preds [bb21]
  succs [bb25, bb30]

bb24
  0: _0 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2494:10-2494:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:9-2494:10)
      kind: goto -> bb26
  }
  preds [bb11, bb12]
  succs [bb26]

bb25
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2494:9-2494:10)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2494:9-2494:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2465:9-2494:10)
      kind: goto -> bb26
  }
  preds [bb23]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2495:5-2495:6)
      kind: drop(_17) -> [return: bb27, unwind: bb31]
  }
  preds [bb24, bb25]
  succs [bb27, bb31]

bb27
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2495:5-2495:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2495:6-2495:6)
      kind: return
  }
  preds [bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2488:18-2488:19)
      kind: drop(_37) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2494:9-2494:10)
      kind: drop(_21) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb13, bb14, bb16, bb18, bb19, bb21, bb22, bb28]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2495:5-2495:6)
      kind: drop(_17) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb23, bb29]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2445:5-2495:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb9, bb10, bb26, bb30]
  succs []

