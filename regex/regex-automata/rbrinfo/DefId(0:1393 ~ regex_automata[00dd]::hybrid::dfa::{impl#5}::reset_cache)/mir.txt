bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2425:34-2425:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2425:34-2425:52)
      kind: _2 = hybrid::dfa::StateSaver::none() -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2425:9-2425:31)
      kind: drop(((*((*_1).1: &mut hybrid::dfa::Cache)).7: hybrid::dfa::StateSaver)) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: ((*((*_1).1: &mut hybrid::dfa::Cache)).7: hybrid::dfa::StateSaver) = move _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2425:9-2425:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2425:51-2425:52)
      kind: drop(_2) -> [return: bb4, unwind: bb10]
  }
  preds [bb1]
  succs [bb4, bb10]

bb3
  0: ((*((*_1).1: &mut hybrid::dfa::Cache)).7: hybrid::dfa::StateSaver) = move _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2425:9-2425:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2425:51-2425:52)
      kind: drop(_2) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb10]

bb4
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2425:51-2425:52)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2426:9-2426:27)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2426:9-2426:13)
  3: _4 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2426:9-2426:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2426:9-2426:27)
      kind: _3 = hybrid::dfa::Lazy::<'_, '_>::clear_cache(move _4) -> [return: bb5, unwind: bb10]
  }
  preds [bb2]
  succs [bb5, bb10]

bb5
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2426:26-2426:27)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2426:27-2426:28)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:9-2430:69)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:9-2430:27)
  4: _6 = &mut ((*((*_1).1: &mut hybrid::dfa::Cache)).4: util::sparse_set::SparseSets)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:9-2430:27)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:35-2430:68)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:35-2430:62)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:35-2430:62)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:35-2430:53)
  9: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:35-2430:53)
  10: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:35-2430:43)
  11: _12 = &(*((*_1).0: &hybrid::dfa::DFA))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:35-2430:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:35-2430:53)
      kind: _11 = hybrid::dfa::DFA::get_nfa(move _12) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: _10 = &(*_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:35-2430:53)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:52-2430:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:35-2430:62)
      kind: _9 = nfa::thompson::nfa::NFA::states(move _10) -> [return: bb7, unwind: bb10]
  }
  preds [bb5]
  succs [bb7, bb10]

bb7
  0: _8 = &(*_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:35-2430:62)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:61-2430:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:35-2430:68)
      kind: _7 = core::slice::<impl [nfa::thompson::nfa::State]>::len(move _8) -> [return: bb8, unwind: bb10]
  }
  preds [bb6]
  succs [bb8, bb10]

bb8
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:67-2430:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:9-2430:69)
      kind: _5 = util::sparse_set::SparseSets::resize(move _6, move _7) -> [return: bb9, unwind: bb10]
  }
  preds [bb7]
  succs [bb9, bb10]

bb9
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:68-2430:69)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:68-2430:69)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:69-2430:70)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:69-2430:70)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2430:69-2430:70)
  5: ((*((*_1).1: &mut hybrid::dfa::Cache)).9: usize) = const 0_usize
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2431:9-2431:35)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2432:31-2432:35)
  7: _13 = core::option::Option::<hybrid::dfa::SearchProgress>::None
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2432:31-2432:35)
  8: ((*((*_1).1: &mut hybrid::dfa::Cache)).11: core::option::Option<hybrid::dfa::SearchProgress>) = move _13
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2432:9-2432:35)
  9: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2432:34-2432:35)
  10: _0 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2424:31-2433:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2433:6-2433:6)
      kind: return
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2424:5-2433:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb5, bb6, bb7, bb8]
  succs []

