bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/determinize/state.rs:736:9-736:15)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/determinize/state.rs:736:18-736:29)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:736:18-736:19)
  3: _5 = _2
    SourceInfo(regex-automata/src/util/determinize/state.rs:736:18-736:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:736:18-736:29)
      kind: _4 = <i32 as util::int::I32>::to_bits(move _5) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:736:28-736:29)
  1: _6 = const 1_i32 as u32 (IntToInt)
    SourceInfo(regex-automata/src/util/determinize/state.rs:736:18-736:34)
  2: _7 = Lt(move _6, const 32_u32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:736:18-736:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:736:18-736:34)
      kind: assert(move _7, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: _3 = Shl(move _4, const 1_i32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:736:18-736:34)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/determinize/state.rs:736:33-736:34)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/determinize/state.rs:736:9-736:15)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/util/determinize/state.rs:737:5-739:6)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/util/determinize/state.rs:737:8-737:13)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/util/determinize/state.rs:737:8-737:9)
  6: _10 = _2
    SourceInfo(regex-automata/src/util/determinize/state.rs:737:8-737:9)
  7: _9 = Lt(move _10, const 0_i32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:737:8-737:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:737:8-737:13)
      kind: switchInt(move _9) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/determinize/state.rs:737:12-737:13)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/util/determinize/state.rs:738:15-738:17)
  2: _11 = _3
    SourceInfo(regex-automata/src/util/determinize/state.rs:738:15-738:17)
  3: _3 = Not(move _11)
    SourceInfo(regex-automata/src/util/determinize/state.rs:738:9-738:17)
  4: StorageDead(_11)
    SourceInfo(regex-automata/src/util/determinize/state.rs:738:16-738:17)
  5: _8 = const ()
    SourceInfo(regex-automata/src/util/determinize/state.rs:737:14-739:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:737:5-739:6)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/determinize/state.rs:737:12-737:13)
  1: _8 = const ()
    SourceInfo(regex-automata/src/util/determinize/state.rs:739:6-739:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:737:5-739:6)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/determinize/state.rs:739:5-739:6)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/determinize/state.rs:739:5-739:6)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/util/determinize/state.rs:740:18-740:22)
  3: _12 = &mut (*_1)
    SourceInfo(regex-automata/src/util/determinize/state.rs:740:18-740:22)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/util/determinize/state.rs:740:24-740:26)
  5: _13 = _3
    SourceInfo(regex-automata/src/util/determinize/state.rs:740:24-740:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:740:5-740:27)
      kind: _0 = util::determinize::state::write_varu32(move _12, move _13) -> [return: bb6, unwind: bb7]
  }
  preds [bb3, bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/determinize/state.rs:740:26-740:27)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/util/determinize/state.rs:740:26-740:27)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/util/determinize/state.rs:741:1-741:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:741:2-741:2)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:735:1-741:2)
      kind: resume
  }
  preds [bb0, bb1, bb5]
  succs []

