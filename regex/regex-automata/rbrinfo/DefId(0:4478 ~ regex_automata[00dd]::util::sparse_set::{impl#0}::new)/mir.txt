bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/sparse_set.rs:47:19-47:43)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/sparse_set.rs:47:34-47:42)
  2: _3 = _1
    SourceInfo(regex-automata/src/util/sparse_set.rs:47:34-47:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:47:19-47:43)
      kind: _2 = util::sparse_set::SparseSet::new(move _3) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/sparse_set.rs:47:42-47:43)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/sparse_set.rs:48:19-48:43)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/sparse_set.rs:48:34-48:42)
  3: _5 = _1
    SourceInfo(regex-automata/src/util/sparse_set.rs:48:34-48:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:48:19-48:43)
      kind: _4 = util::sparse_set::SparseSet::new(move _5) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/sparse_set.rs:48:42-48:43)
  1: _0 = util::sparse_set::SparseSets { set1: move _2, set2: move _4 }
    SourceInfo(regex-automata/src/util/sparse_set.rs:46:9-49:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:49:9-49:10)
      kind: drop(_4) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/sparse_set.rs:49:9-49:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:49:9-49:10)
      kind: drop(_2) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/util/sparse_set.rs:49:9-49:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:50:6-50:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:49:9-49:10)
      kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb2]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:45:5-50:6)
      kind: resume
  }
  preds [bb0, bb3, bb5]
  succs []

