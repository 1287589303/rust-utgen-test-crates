{
  "regex-automata/src/dfa/sparse.rs:2383:23:2384:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "2\n            + (self.ntrans * 2)",
          "lhs": "2",
          "rhs": "(self.ntrans * 2)",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2387:12:2387:25": [
    {
      "Bool": {
        "Other": "self.is_match"
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2384:15:2384:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.ntrans * 2)",
          "lhs": "self.ntrans",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2383:23:2385:44": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "2\n            + (self.ntrans * 2)\n            + (self.ntrans * StateID::SIZE)",
          "lhs": "2\n            + (self.ntrans * 2)",
          "rhs": "(self.ntrans * StateID::SIZE)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2388:20:2388:61": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "size_of::<u32>() + self.pattern_ids.len()",
          "lhs": "size_of::<u32>()",
          "rhs": "self.pattern_ids.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2386:15:2386:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(1 + self.accel.len())",
          "lhs": "1",
          "rhs": "self.accel.len()",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2383:23:2386:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "2\n            + (self.ntrans * 2)\n            + (self.ntrans * StateID::SIZE)\n            + (1 + self.accel.len())",
          "lhs": "2\n            + (self.ntrans * 2)\n            + (self.ntrans * StateID::SIZE)",
          "rhs": "(1 + self.accel.len())",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/sparse.rs:2385:15:2385:44": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.ntrans * StateID::SIZE)",
          "lhs": "self.ntrans",
          "rhs": "StateID::SIZE",
          "cmp_with_int": false
        }
      }
    }
  ]
}