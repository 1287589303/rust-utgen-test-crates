bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/captures.rs:2271:13-2271:19)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/captures.rs:2271:22-2271:55)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/captures.rs:2271:22-2271:40)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/captures.rs:2271:22-2271:26)
  4: _5 = &(*_1)
    SourceInfo(regex-automata/src/util/captures.rs:2271:22-2271:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2271:22-2271:40)
      kind: _4 = util::captures::GroupInfoInner::pattern_len(move _5) -> [return: bb1, unwind: bb49]
  }
  preds []
  succs [bb1, bb49]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/captures.rs:2271:39-2271:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2271:22-2271:55)
      kind: _3 = core::num::<impl usize>::checked_mul(move _4, const 2_usize) -> [return: bb2, unwind: bb49]
  }
  preds [bb0]
  succs [bb2, bb49]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/captures.rs:2271:54-2271:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2271:22-2271:64)
      kind: _2 = core::option::Option::<usize>::unwrap(move _3) -> [return: bb3, unwind: bb49]
  }
  preds [bb1]
  succs [bb3, bb49]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/captures.rs:2271:63-2271:64)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/util/captures.rs:2271:13-2271:19)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/util/captures.rs:2272:9-2289:10)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:40)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:29)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:40)
  8: StorageLive(_12)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:29)
  9: _12 = &mut ((*_1).0: std::vec::Vec<(util::primitives::SmallIndex, util::primitives::SmallIndex)>)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:40)
      kind: _11 = <std::vec::Vec<(util::primitives::SmallIndex, util::primitives::SmallIndex)> as core::ops::DerefMut>::deref_mut(move _12) -> [return: bb4, unwind: bb49]
  }
  preds [bb2]
  succs [bb4, bb49]

bb4
  0: _10 = &mut (*_11)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:29)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/util/captures.rs:2273:28-2273:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:40)
      kind: _9 = core::slice::<impl [(util::primitives::SmallIndex, util::primitives::SmallIndex)]>::iter_mut(move _10) -> [return: bb5, unwind: bb49]
  }
  preds [bb3]
  succs [bb5, bb49]

bb5
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/captures.rs:2273:39-2273:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
      kind: _8 = <core::slice::IterMut<'_, (util::primitives::SmallIndex, util::primitives::SmallIndex)> as util::primitives::IteratorIndexExt>::with_pattern_ids(move _9) -> [return: bb6, unwind: bb49]
  }
  preds [bb4]
  succs [bb6, bb49]

bb6
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/captures.rs:2273:58-2273:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
      kind: _7 = <util::primitives::WithPatternIDIter<core::slice::IterMut<'_, (util::primitives::SmallIndex, util::primitives::SmallIndex)>> as core::iter::IntoIterator>::into_iter(move _8) -> [return: bb7, unwind: bb49]
  }
  preds [bb5]
  succs [bb7, bb49]

bb7
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/captures.rs:2273:58-2273:59)
  1: PlaceMention(_7)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
  3: _13 = move _7
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2272:9-2289:10)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2272:9-2289:10)
      kind: falseUnwind -> [real: bb9, unwind: bb49]
  }
  preds [bb7, bb40]
  succs [bb9, bb49]

bb9
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
  1: StorageLive(_16)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
  4: _18 = &mut _13
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
  5: _17 = &mut (*_18)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
      kind: _16 = <util::primitives::WithPatternIDIter<core::slice::IterMut<'_, (util::primitives::SmallIndex, util::primitives::SmallIndex)>> as core::iter::Iterator>::next(move _17) -> [return: bb10, unwind: bb49]
  }
  preds [bb8]
  succs [bb10, bb49]

bb10
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/util/captures.rs:2273:58-2273:59)
  1: PlaceMention(_16)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
  2: _19 = discriminant(_16)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
      kind: switchInt(move _19) -> [0: bb12, 1: bb13, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13]

bb11
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2273:13-2273:59)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2272:9-2289:10)
      kind: falseEdge -> [real: bb14, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageLive(_21)
    SourceInfo(regex-automata/src/util/captures.rs:2272:14-2272:17)
  1: _21 = (((_16 as Some).0: (util::primitives::PatternID, &mut (util::primitives::SmallIndex, util::primitives::SmallIndex))).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/util/captures.rs:2272:14-2272:17)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/util/captures.rs:2272:25-2272:38)
  3: _22 = &mut ((*(((_16 as Some).0: (util::primitives::PatternID, &mut (util::primitives::SmallIndex, util::primitives::SmallIndex))).1: &mut (util::primitives::SmallIndex, util::primitives::SmallIndex))).0: util::primitives::SmallIndex)
    SourceInfo(regex-automata/src/util/captures.rs:2272:25-2272:38)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/util/captures.rs:2272:40-2272:51)
  5: _23 = &mut ((*(((_16 as Some).0: (util::primitives::PatternID, &mut (util::primitives::SmallIndex, util::primitives::SmallIndex))).1: &mut (util::primitives::SmallIndex, util::primitives::SmallIndex))).1: util::primitives::SmallIndex)
    SourceInfo(regex-automata/src/util/captures.rs:2272:40-2272:51)
  6: StorageLive(_24)
    SourceInfo(regex-automata/src/util/captures.rs:2275:17-2275:26)
  7: StorageLive(_25)
    SourceInfo(regex-automata/src/util/captures.rs:2275:33-2275:74)
  8: StorageLive(_26)
    SourceInfo(regex-automata/src/util/captures.rs:2275:34-2275:69)
  9: StorageLive(_27)
    SourceInfo(regex-automata/src/util/captures.rs:2275:35-2275:49)
  10: StorageLive(_28)
    SourceInfo(regex-automata/src/util/captures.rs:2275:35-2275:38)
  11: _28 = &(*_23)
    SourceInfo(regex-automata/src/util/captures.rs:2275:35-2275:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2275:35-2275:49)
      kind: _27 = util::primitives::SmallIndex::as_usize(move _28) -> [return: bb15, unwind: bb49]
  }
  preds [bb10, bb12]
  succs [bb15, bb49]

bb14
  0: _6 = const ()
    SourceInfo(regex-automata/src/util/captures.rs:2272:9-2289:10)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  4: StorageDead(_13)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  5: StorageDead(_11)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  6: StorageDead(_7)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  7: StorageDead(_6)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  8: StorageLive(_65)
    SourceInfo(regex-automata/src/util/captures.rs:2290:12-2290:14)
  9: _65 = ()
    SourceInfo(regex-automata/src/util/captures.rs:2290:12-2290:14)
  10: _0 = core::result::Result::<(), util::captures::GroupInfoError>::Ok(move _65)
    SourceInfo(regex-automata/src/util/captures.rs:2290:9-2290:15)
  11: StorageDead(_65)
    SourceInfo(regex-automata/src/util/captures.rs:2290:14-2290:15)
  12: StorageDead(_2)
    SourceInfo(regex-automata/src/util/captures.rs:2291:5-2291:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2291:6-2291:6)
      kind: goto -> bb44
  }
  preds [bb12]
  succs [bb44]

bb15
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/util/captures.rs:2275:48-2275:49)
  1: StorageLive(_29)
    SourceInfo(regex-automata/src/util/captures.rs:2275:52-2275:68)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/util/captures.rs:2275:52-2275:57)
  3: _30 = &(*_22)
    SourceInfo(regex-automata/src/util/captures.rs:2275:52-2275:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2275:52-2275:68)
      kind: _29 = util::primitives::SmallIndex::as_usize(move _30) -> [return: bb16, unwind: bb49]
  }
  preds [bb13]
  succs [bb16, bb49]

bb16
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/util/captures.rs:2275:67-2275:68)
  1: _31 = SubWithOverflow(_27, _29)
    SourceInfo(regex-automata/src/util/captures.rs:2275:34-2275:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2275:34-2275:69)
      kind: assert(!move (_31.1: bool), "attempt to compute `{} - {}`, which would overflow", move _27, move _29) -> [success: bb17, unwind: bb49]
  }
  preds [bb15]
  succs [bb17, bb49]

bb17
  0: _26 = move (_31.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:2275:34-2275:69)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/util/captures.rs:2275:68-2275:69)
  2: StorageDead(_27)
    SourceInfo(regex-automata/src/util/captures.rs:2275:68-2275:69)
  3: _32 = Eq(const 2_usize, const 0_usize)
    SourceInfo(regex-automata/src/util/captures.rs:2275:33-2275:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2275:33-2275:74)
      kind: assert(!move _32, "attempt to divide `{}` by zero", _26) -> [success: bb18, unwind: bb49]
  }
  preds [bb16]
  succs [bb18, bb49]

bb18
  0: _25 = Div(move _26, const 2_usize)
    SourceInfo(regex-automata/src/util/captures.rs:2275:33-2275:74)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/util/captures.rs:2275:73-2275:74)
  2: _33 = AddWithOverflow(const 1_usize, _25)
    SourceInfo(regex-automata/src/util/captures.rs:2275:29-2275:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2275:29-2275:74)
      kind: assert(!move (_33.1: bool), "attempt to compute `{} + {}`, which would overflow", const 1_usize, move _25) -> [success: bb19, unwind: bb49]
  }
  preds [bb17]
  succs [bb19, bb49]

bb19
  0: _24 = move (_33.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:2275:29-2275:74)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/util/captures.rs:2275:73-2275:74)
  2: FakeRead(ForLet(None), _24)
    SourceInfo(regex-automata/src/util/captures.rs:2275:17-2275:26)
  3: StorageLive(_34)
    SourceInfo(regex-automata/src/util/captures.rs:2276:17-2276:24)
  4: StorageLive(_35)
    SourceInfo(regex-automata/src/util/captures.rs:2276:33-2276:67)
  5: StorageLive(_36)
    SourceInfo(regex-automata/src/util/captures.rs:2276:33-2276:47)
  6: StorageLive(_37)
    SourceInfo(regex-automata/src/util/captures.rs:2276:33-2276:36)
  7: _37 = &(*_23)
    SourceInfo(regex-automata/src/util/captures.rs:2276:33-2276:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2276:33-2276:47)
      kind: _36 = util::primitives::SmallIndex::as_usize(move _37) -> [return: bb20, unwind: bb49]
  }
  preds [bb18]
  succs [bb20, bb49]

bb20
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/util/captures.rs:2276:46-2276:47)
  1: StorageLive(_38)
    SourceInfo(regex-automata/src/util/captures.rs:2276:60-2276:66)
  2: _38 = _2
    SourceInfo(regex-automata/src/util/captures.rs:2276:60-2276:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2276:33-2276:67)
      kind: _35 = core::num::<impl usize>::checked_add(move _36, move _38) -> [return: bb21, unwind: bb49]
  }
  preds [bb19]
  succs [bb21, bb49]

bb21
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/util/captures.rs:2276:66-2276:67)
  1: StorageDead(_36)
    SourceInfo(regex-automata/src/util/captures.rs:2276:66-2276:67)
  2: PlaceMention(_35)
    SourceInfo(regex-automata/src/util/captures.rs:2276:33-2276:67)
  3: _39 = discriminant(_35)
    SourceInfo(regex-automata/src/util/captures.rs:2276:33-2276:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2276:27-2276:67)
      kind: switchInt(move _39) -> [0: bb24, 1: bb23, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb23, bb24]

bb22
  0: FakeRead(ForMatchedPlace(None), _35)
    SourceInfo(regex-automata/src/util/captures.rs:2276:33-2276:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2276:33-2276:67)
      kind: unreachable
  }
  preds [bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2277:17-2277:30)
      kind: falseEdge -> [real: bb25, imaginary: bb24]
  }
  preds [bb21]
  succs [bb24, bb25]

bb24
  0: StorageLive(_42)
    SourceInfo(regex-automata/src/util/captures.rs:2279:32-2281:22)
  1: StorageLive(_43)
    SourceInfo(regex-automata/src/util/captures.rs:2280:25-2280:28)
  2: _43 = _21
    SourceInfo(regex-automata/src/util/captures.rs:2280:25-2280:28)
  3: StorageLive(_44)
    SourceInfo(regex-automata/src/util/captures.rs:2280:30-2280:39)
  4: _44 = _24
    SourceInfo(regex-automata/src/util/captures.rs:2280:30-2280:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2279:32-2281:22)
      kind: _42 = util::captures::GroupInfoError::too_many_groups(move _43, move _44) -> [return: bb26, unwind: bb49]
  }
  preds [bb21, bb23]
  succs [bb26, bb49]

bb25
  0: StorageLive(_40)
    SourceInfo(regex-automata/src/util/captures.rs:2277:22-2277:29)
  1: _40 = ((_35 as Some).0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:2277:22-2277:29)
  2: _34 = _40
    SourceInfo(regex-automata/src/util/captures.rs:2277:34-2277:41)
  3: StorageDead(_40)
    SourceInfo(regex-automata/src/util/captures.rs:2277:40-2277:41)
  4: FakeRead(ForLet(None), _34)
    SourceInfo(regex-automata/src/util/captures.rs:2276:17-2276:24)
  5: StorageDead(_35)
    SourceInfo(regex-automata/src/util/captures.rs:2283:14-2283:15)
  6: StorageLive(_45)
    SourceInfo(regex-automata/src/util/captures.rs:2284:20-2286:16)
  7: StorageLive(_46)
    SourceInfo(regex-automata/src/util/captures.rs:2284:20-2286:16)
  8: StorageLive(_47)
    SourceInfo(regex-automata/src/util/captures.rs:2284:20-2286:15)
  9: StorageLive(_48)
    SourceInfo(regex-automata/src/util/captures.rs:2284:20-2284:44)
  10: StorageLive(_49)
    SourceInfo(regex-automata/src/util/captures.rs:2284:36-2284:43)
  11: _49 = _34
    SourceInfo(regex-automata/src/util/captures.rs:2284:36-2284:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2284:20-2284:44)
      kind: _48 = util::primitives::SmallIndex::new(move _49) -> [return: bb28, unwind: bb49]
  }
  preds [bb23]
  succs [bb28, bb49]

bb26
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/util/captures.rs:2281:21-2281:22)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/util/captures.rs:2281:21-2281:22)
  2: _0 = core::result::Result::<(), util::captures::GroupInfoError>::Err(move _42)
    SourceInfo(regex-automata/src/util/captures.rs:2279:28-2281:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2281:22-2281:23)
      kind: drop(_42) -> [return: bb27, unwind: bb49]
  }
  preds [bb24]
  succs [bb27, bb49]

bb27
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/util/captures.rs:2281:22-2281:23)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/util/captures.rs:2283:14-2283:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb43
  }
  preds [bb26]
  succs [bb43]

bb28
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/util/captures.rs:2284:43-2284:44)
  1: StorageLive(_50)
    SourceInfo(regex-automata/src/util/captures.rs:2284:53-2286:14)
  2: StorageLive(_51)
    SourceInfo(regex-automata/src/util/captures.rs:2284:53-2286:14)
  3: _51 = &_21
    SourceInfo(regex-automata/src/util/captures.rs:2284:53-2286:14)
  4: StorageLive(_52)
    SourceInfo(regex-automata/src/util/captures.rs:2284:53-2286:14)
  5: _52 = &_24
    SourceInfo(regex-automata/src/util/captures.rs:2284:53-2286:14)
  6: _50 = {closure@regex-automata/src/util/captures.rs:2284:53: 2284:56} { pid: move _51, group_len: move _52 }
    SourceInfo(regex-automata/src/util/captures.rs:2284:53-2286:14)
  7: StorageDead(_52)
    SourceInfo(regex-automata/src/util/captures.rs:2284:55-2284:56)
  8: StorageDead(_51)
    SourceInfo(regex-automata/src/util/captures.rs:2284:55-2284:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2284:20-2286:15)
      kind: _47 = core::result::Result::<util::primitives::SmallIndex, util::primitives::SmallIndexError>::map_err::<util::captures::GroupInfoError, {closure@regex-automata/src/util/captures.rs:2284:53: 2284:56}>(move _48, move _50) -> [return: bb29, unwind: bb49]
  }
  preds [bb25]
  succs [bb29, bb49]

bb29
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/util/captures.rs:2286:14-2286:15)
  1: StorageDead(_48)
    SourceInfo(regex-automata/src/util/captures.rs:2286:14-2286:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2284:20-2286:16)
      kind: _46 = <core::result::Result<util::primitives::SmallIndex, util::captures::GroupInfoError> as core::ops::Try>::branch(move _47) -> [return: bb30, unwind: bb48]
  }
  preds [bb28]
  succs [bb30, bb48]

bb30
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
  1: PlaceMention(_46)
    SourceInfo(regex-automata/src/util/captures.rs:2284:20-2286:16)
  2: _53 = discriminant(_46)
    SourceInfo(regex-automata/src/util/captures.rs:2284:20-2286:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2284:20-2286:16)
      kind: switchInt(move _53) -> [0: bb33, 1: bb32, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb32, bb33]

bb31
  0: FakeRead(ForMatchedPlace(None), _46)
    SourceInfo(regex-automata/src/util/captures.rs:2284:20-2286:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2284:20-2286:16)
      kind: unreachable
  }
  preds [bb30]
  succs []

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
      kind: falseEdge -> [real: bb34, imaginary: bb33]
  }
  preds [bb30]
  succs [bb33, bb34]

bb33
  0: StorageLive(_57)
    SourceInfo(regex-automata/src/util/captures.rs:2284:20-2286:16)
  1: _57 = ((_46 as Continue).0: util::primitives::SmallIndex)
    SourceInfo(regex-automata/src/util/captures.rs:2284:20-2286:16)
  2: _45 = _57
    SourceInfo(regex-automata/src/util/captures.rs:2284:20-2286:16)
  3: StorageDead(_57)
    SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
  4: (*_23) = move _45
    SourceInfo(regex-automata/src/util/captures.rs:2284:13-2286:16)
  5: StorageDead(_45)
    SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2286:16-2286:17)
      kind: drop(_46) -> [return: bb36, unwind: bb49]
  }
  preds [bb30, bb32]
  succs [bb36, bb49]

bb34
  0: StorageLive(_54)
    SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
  1: _54 = move ((_46 as Break).0: core::result::Result<core::convert::Infallible, util::captures::GroupInfoError>)
    SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
  2: StorageLive(_56)
    SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
  3: _56 = move _54
    SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2284:20-2286:16)
      kind: _0 = <core::result::Result<(), util::captures::GroupInfoError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::captures::GroupInfoError>>>::from_residual(move _56) -> [return: bb35, unwind: bb45]
  }
  preds [bb32]
  succs [bb35, bb45]

bb35
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
      kind: drop(_54) -> [return: bb41, unwind: bb47]
  }
  preds [bb34]
  succs [bb41, bb47]

bb36
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/util/captures.rs:2286:16-2286:17)
  1: StorageLive(_58)
    SourceInfo(regex-automata/src/util/captures.rs:2288:22-2288:73)
  2: StorageLive(_59)
    SourceInfo(regex-automata/src/util/captures.rs:2288:22-2288:64)
  3: StorageLive(_60)
    SourceInfo(regex-automata/src/util/captures.rs:2288:38-2288:63)
  4: StorageLive(_61)
    SourceInfo(regex-automata/src/util/captures.rs:2288:38-2288:54)
  5: StorageLive(_62)
    SourceInfo(regex-automata/src/util/captures.rs:2288:38-2288:43)
  6: _62 = &(*_22)
    SourceInfo(regex-automata/src/util/captures.rs:2288:38-2288:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2288:38-2288:54)
      kind: _61 = util::primitives::SmallIndex::as_usize(move _62) -> [return: bb37, unwind: bb49]
  }
  preds [bb33]
  succs [bb37, bb49]

bb37
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/util/captures.rs:2288:53-2288:54)
  1: StorageLive(_63)
    SourceInfo(regex-automata/src/util/captures.rs:2288:57-2288:63)
  2: _63 = _2
    SourceInfo(regex-automata/src/util/captures.rs:2288:57-2288:63)
  3: _64 = AddWithOverflow(_61, _63)
    SourceInfo(regex-automata/src/util/captures.rs:2288:38-2288:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2288:38-2288:63)
      kind: assert(!move (_64.1: bool), "attempt to compute `{} + {}`, which would overflow", move _61, move _63) -> [success: bb38, unwind: bb49]
  }
  preds [bb36]
  succs [bb38, bb49]

bb38
  0: _60 = move (_64.0: usize)
    SourceInfo(regex-automata/src/util/captures.rs:2288:38-2288:63)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/util/captures.rs:2288:62-2288:63)
  2: StorageDead(_61)
    SourceInfo(regex-automata/src/util/captures.rs:2288:62-2288:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2288:22-2288:64)
      kind: _59 = util::primitives::SmallIndex::new(move _60) -> [return: bb39, unwind: bb49]
  }
  preds [bb37]
  succs [bb39, bb49]

bb39
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/util/captures.rs:2288:63-2288:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2288:22-2288:73)
      kind: _58 = core::result::Result::<util::primitives::SmallIndex, util::primitives::SmallIndexError>::unwrap(move _59) -> [return: bb40, unwind: bb49]
  }
  preds [bb38]
  succs [bb40, bb49]

bb40
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/util/captures.rs:2288:72-2288:73)
  1: (*_22) = move _58
    SourceInfo(regex-automata/src/util/captures.rs:2288:13-2288:73)
  2: StorageDead(_58)
    SourceInfo(regex-automata/src/util/captures.rs:2288:72-2288:73)
  3: _15 = const ()
    SourceInfo(regex-automata/src/util/captures.rs:2274:9-2289:10)
  4: StorageDead(_34)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  5: StorageDead(_24)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  6: StorageDead(_23)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  7: StorageDead(_22)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  8: StorageDead(_21)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  9: StorageDead(_18)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  10: StorageDead(_16)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  11: StorageDead(_15)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  12: _14 = const ()
    SourceInfo(regex-automata/src/util/captures.rs:2272:9-2289:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2272:9-2289:10)
      kind: goto -> bb8
  }
  preds [bb39]
  succs [bb8]

bb41
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2286:16-2286:17)
      kind: drop(_46) -> [return: bb42, unwind: bb49]
  }
  preds [bb35]
  succs [bb42, bb49]

bb42
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/util/captures.rs:2286:16-2286:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb43
  }
  preds [bb41]
  succs [bb43]

bb43
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  3: StorageDead(_22)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  4: StorageDead(_21)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  5: StorageDead(_18)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  6: StorageDead(_16)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  7: StorageDead(_15)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  8: StorageDead(_13)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  9: StorageDead(_11)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  10: StorageDead(_7)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  11: StorageDead(_6)
    SourceInfo(regex-automata/src/util/captures.rs:2289:9-2289:10)
  12: StorageDead(_2)
    SourceInfo(regex-automata/src/util/captures.rs:2291:5-2291:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2291:6-2291:6)
      kind: goto -> bb44
  }
  preds [bb27, bb42]
  succs [bb44]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2291:6-2291:6)
      kind: return
  }
  preds [bb14, bb43]
  succs []

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
      kind: drop(_56) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb34]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
      kind: drop(_54) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb45]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2286:16-2286:17)
      kind: drop(_46) -> [return: bb49, unwind terminate(cleanup)]
  }
  preds [bb35, bb46]
  succs [bb49]

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2286:15-2286:16)
      kind: drop(_47) -> [return: bb49, unwind terminate(cleanup)]
  }
  preds [bb29]
  succs [bb49]

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2266:5-2291:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb8, bb9, bb13, bb15, bb16, bb17, bb18, bb19, bb20, bb24, bb25, bb26, bb28, bb33, bb36, bb37, bb38, bb39, bb41, bb47, bb48]
  succs []

