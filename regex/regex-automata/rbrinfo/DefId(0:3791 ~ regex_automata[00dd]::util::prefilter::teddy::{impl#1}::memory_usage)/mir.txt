bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:13-126:41)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:13-126:26)
  2: _3 = &((*_1).0: aho_corasick::packed::Searcher)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:13-126:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:13-126:41)
      kind: _2 = aho_corasick::packed::Searcher::memory_usage(move _3) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:40-126:41)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:44-126:75)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:44-126:60)
  3: _5 = &((*_1).1: aho_corasick::dfa::DFA)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:44-126:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:44-126:75)
      kind: _4 = <aho_corasick::dfa::DFA as aho_corasick::automaton::Automaton>::memory_usage(move _5) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:74-126:75)
  1: _6 = AddWithOverflow(_2, _4)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:13-126:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:13-126:75)
      kind: assert(!move (_6.1: bool), "attempt to compute `{} + {}`, which would overflow", move _2, move _4) -> [success: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: _0 = move (_6.0: usize)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:13-126:75)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:74-126:75)
  2: StorageDead(_2)
    SourceInfo(regex-automata/src/util/prefilter/teddy.rs:126:74-126:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:128:6-128:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/teddy.rs:118:5-128:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

