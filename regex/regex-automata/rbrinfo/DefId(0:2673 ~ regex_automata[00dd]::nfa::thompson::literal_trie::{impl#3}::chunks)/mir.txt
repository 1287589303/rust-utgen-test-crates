bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:399:26-399:44)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:399:26-399:44)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:399:27-399:44)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:399:28-399:44)
  4: _5 = &((*_1).0: std::vec::Vec<nfa::thompson::literal_trie::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:399:28-399:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:399:27-399:44)
      kind: _4 = <std::vec::Vec<nfa::thompson::literal_trie::Transition> as core::ops::Deref>::deref(move _5) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:399:43-399:44)
  1: _3 = &(*_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:399:26-399:44)
  2: _2 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:399:26-399:44)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:400:21-400:39)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:400:21-400:32)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:400:21-400:39)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:400:21-400:32)
  7: _9 = &((*_1).1: std::vec::Vec<(usize, usize)>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:400:21-400:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:400:21-400:39)
      kind: _8 = <std::vec::Vec<(usize, usize)> as core::ops::Deref>::deref(move _9) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: _7 = &(*_8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:400:21-400:32)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:400:31-400:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:400:21-400:39)
      kind: _6 = core::slice::<impl [(usize, usize)]>::iter(move _7) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:400:38-400:39)
  1: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:401:21-401:46)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:401:26-401:45)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:401:26-401:45)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:401:26-401:30)
  5: _13 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:401:26-401:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:401:26-401:45)
      kind: _12 = nfa::thompson::literal_trie::State::active_chunk(move _13) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: _11 = &(*_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:401:26-401:45)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:401:44-401:45)
  2: _10 = core::option::Option::<&[nfa::thompson::literal_trie::Transition]>::Some(move _11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:401:21-401:46)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:401:45-401:46)
  4: _0 = nfa::thompson::literal_trie::StateChunksIter::<'_> { transitions: move _2, chunks: move _6, active: move _10 }
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:398:9-402:10)
  5: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:402:9-402:10)
  6: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:402:9-402:10)
  7: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:402:9-402:10)
  8: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:403:5-403:6)
  9: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:403:5-403:6)
  10: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:403:5-403:6)
  11: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:403:5-403:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:403:6-403:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:397:5-403:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

