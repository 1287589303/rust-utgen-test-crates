bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:503:9-503:34)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:503:9-503:26)
  2: _3 = &((*_1).5: core::option::Option<util::look::LookMatcher>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:503:9-503:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:503:9-503:34)
      kind: _2 = <core::option::Option<util::look::LookMatcher> as core::clone::Clone>::clone(move _3) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:503:33-503:34)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:503:45-503:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:503:45-503:67)
      kind: _4 = <util::look::LookMatcher as core::default::Default>::default() -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:503:9-503:68)
      kind: _0 = core::option::Option::<util::look::LookMatcher>::unwrap_or(move _2, move _4) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:503:67-503:68)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:503:67-503:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:504:6-504:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:502:5-504:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

