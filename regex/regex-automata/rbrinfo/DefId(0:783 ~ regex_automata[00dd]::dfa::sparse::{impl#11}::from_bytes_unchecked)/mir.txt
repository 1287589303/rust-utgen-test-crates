bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1857:13-1857:24)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1857:27-1857:41)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1857:27-1857:32)
  3: _4 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1857:27-1857:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1857:27-1857:41)
      kind: _3 = core::slice::<impl [u8]>::as_ptr(move _4) -> [return: bb1, unwind: bb138]
  }
  preds []
  succs [bb1, bb138]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1857:40-1857:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1857:27-1857:52)
      kind: _2 = <*const u8 as util::int::Pointer>::as_usize(move _3) -> [return: bb2, unwind: bb138]
  }
  preds [bb0]
  succs [bb2, bb138]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1857:51-1857:52)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1857:13-1857:24)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:55)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:55)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:54)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:48-1859:53)
  6: _10 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:48-1859:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:54)
      kind: _9 = dfa::start::StartKind::from_bytes(move _10) -> [return: bb3, unwind: bb138]
  }
  preds [bb1]
  succs [bb3, bb138]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:53-1859:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:55)
      kind: _8 = <core::result::Result<(dfa::start::StartKind, usize), util::wire::DeserializeError> as core::ops::Try>::branch(move _9) -> [return: bb4, unwind: bb138]
  }
  preds [bb2]
  succs [bb4, bb138]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:54-1859:55)
  1: PlaceMention(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:55)
  2: _11 = discriminant(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:55)
      kind: switchInt(move _11) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:55)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1859:54-1859:55)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:55)
  1: _15 = ((_8 as Continue).0: (dfa::start::StartKind, usize))
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:55)
  2: _7 = _15
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:55)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:54-1859:55)
  4: PlaceMention(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:55)
  5: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:14-1859:18)
  6: _5 = (_7.0: dfa::start::StartKind)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:14-1859:18)
  7: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:20-1859:22)
  8: _6 = (_7.1: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:20-1859:22)
  9: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:55-1859:56)
  10: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:55-1859:56)
  11: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:17-1860:29)
  12: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:17-1860:29)
  13: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:23-1860:29)
  14: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:18-1860:23)
  15: _19 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:18-1860:23)
  16: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:24-1860:28)
  17: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:24-1860:26)
  18: _21 = _6
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:24-1860:26)
  19: _20 = core::ops::RangeFrom::<usize> { start: move _21 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:24-1860:28)
  20: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:27-1860:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1860:23-1860:29)
      kind: _18 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _19, move _20) -> [return: bb10, unwind: bb138]
  }
  preds [bb4, bb6]
  succs [bb10, bb138]

bb8
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:54-1859:55)
  1: _12 = move ((_8 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:54-1859:55)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:54-1859:55)
  3: _14 = move _12
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:54-1859:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1859:26-1859:55)
      kind: _0 = <core::result::Result<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _14) -> [return: bb9, unwind: bb138]
  }
  preds [bb6]
  succs [bb9, bb138]

bb9
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:54-1859:55)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:54-1859:55)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:55-1859:56)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1859:55-1859:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb136
  }
  preds [bb8]
  succs [bb136]

bb10
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:28-1860:29)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:28-1860:29)
  2: _17 = &(*_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:17-1860:29)
  3: _16 = &(*_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:17-1860:29)
  4: _1 = move _16
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:9-1860:29)
  5: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:28-1860:29)
  6: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:29-1860:30)
  7: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1860:29-1860:30)
  8: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:63)
  9: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:63)
  10: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:62)
  11: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:56-1862:61)
  12: _27 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:56-1862:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:62)
      kind: _26 = util::start::StartByteMap::from_bytes(move _27) -> [return: bb11, unwind: bb138]
  }
  preds [bb7]
  succs [bb11, bb138]

bb11
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:61-1862:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:63)
      kind: _25 = <core::result::Result<(util::start::StartByteMap, usize), util::wire::DeserializeError> as core::ops::Try>::branch(move _26) -> [return: bb12, unwind: bb138]
  }
  preds [bb10]
  succs [bb12, bb138]

bb12
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:62-1862:63)
  1: PlaceMention(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:63)
  2: _28 = discriminant(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:63)
      kind: switchInt(move _28) -> [0: bb15, 1: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:63)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1862:62-1862:63)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:63)
  1: _32 = move ((_25 as Continue).0: (util::start::StartByteMap, usize))
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:63)
  2: _24 = move _32
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:63)
  3: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:62-1862:63)
  4: PlaceMention(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:63)
  5: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:14-1862:23)
  6: _22 = move (_24.0: util::start::StartByteMap)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:14-1862:23)
  7: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:25-1862:27)
  8: _23 = (_24.1: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:25-1862:27)
  9: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:63-1862:64)
  10: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:63-1862:64)
  11: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:17-1863:29)
  12: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:17-1863:29)
  13: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:23-1863:29)
  14: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:18-1863:23)
  15: _36 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:18-1863:23)
  16: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:24-1863:28)
  17: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:24-1863:26)
  18: _38 = _23
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:24-1863:26)
  19: _37 = core::ops::RangeFrom::<usize> { start: move _38 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:24-1863:28)
  20: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:27-1863:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1863:23-1863:29)
      kind: _35 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _36, move _37) -> [return: bb18, unwind: bb138]
  }
  preds [bb12, bb14]
  succs [bb18, bb138]

bb16
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:62-1862:63)
  1: _29 = move ((_25 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:62-1862:63)
  2: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:62-1862:63)
  3: _31 = move _29
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:62-1862:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1862:31-1862:63)
      kind: _0 = <core::result::Result<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _31) -> [return: bb17, unwind: bb138]
  }
  preds [bb14]
  succs [bb17, bb138]

bb17
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:62-1862:63)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:62-1862:63)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:63-1862:64)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1862:63-1862:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb135
  }
  preds [bb16]
  succs [bb135]

bb18
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:28-1863:29)
  1: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:28-1863:29)
  2: _34 = &(*_35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:17-1863:29)
  3: _33 = &(*_34)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:17-1863:29)
  4: _1 = move _33
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:9-1863:29)
  5: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:28-1863:29)
  6: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:29-1863:30)
  7: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1863:29-1863:30)
  8: StorageLive(_41)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:77)
  9: StorageLive(_42)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:77)
  10: StorageLive(_43)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:76)
  11: StorageLive(_44)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:41-1866:46)
  12: _44 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:41-1866:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:76)
      kind: _43 = util::wire::try_read_u32_as_usize(move _44, const "sparse start table stride") -> [return: bb19, unwind: bb138]
  }
  preds [bb15]
  succs [bb19, bb138]

bb19
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:75-1866:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:77)
      kind: _42 = <core::result::Result<(usize, usize), util::wire::DeserializeError> as core::ops::Try>::branch(move _43) -> [return: bb20, unwind: bb138]
  }
  preds [bb18]
  succs [bb20, bb138]

bb20
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:76-1866:77)
  1: PlaceMention(_42)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:77)
  2: _45 = discriminant(_42)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:77)
      kind: switchInt(move _45) -> [0: bb23, 1: bb22, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb22, bb23]

bb21
  0: FakeRead(ForMatchedPlace(None), _42)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:77)
      kind: unreachable
  }
  preds [bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1866:76-1866:77)
      kind: falseEdge -> [real: bb24, imaginary: bb23]
  }
  preds [bb20]
  succs [bb23, bb24]

bb23
  0: StorageLive(_49)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:77)
  1: _49 = ((_42 as Continue).0: (usize, usize))
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:77)
  2: _41 = _49
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:77)
  3: StorageDead(_49)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:76-1866:77)
  4: PlaceMention(_41)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:77)
  5: StorageLive(_39)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1865:14-1865:20)
  6: _39 = (_41.0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1865:14-1865:20)
  7: StorageLive(_40)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1865:22-1865:24)
  8: _40 = (_41.1: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1865:22-1865:24)
  9: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:77-1866:78)
  10: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:77-1866:78)
  11: StorageLive(_50)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:17-1867:29)
  12: StorageLive(_51)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:17-1867:29)
  13: StorageLive(_52)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:23-1867:29)
  14: StorageLive(_53)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:18-1867:23)
  15: _53 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:18-1867:23)
  16: StorageLive(_54)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:24-1867:28)
  17: StorageLive(_55)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:24-1867:26)
  18: _55 = _40
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:24-1867:26)
  19: _54 = core::ops::RangeFrom::<usize> { start: move _55 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:24-1867:28)
  20: StorageDead(_55)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:27-1867:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1867:23-1867:29)
      kind: _52 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _53, move _54) -> [return: bb26, unwind: bb138]
  }
  preds [bb20, bb22]
  succs [bb26, bb138]

bb24
  0: StorageLive(_46)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:76-1866:77)
  1: _46 = move ((_42 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:76-1866:77)
  2: StorageLive(_48)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:76-1866:77)
  3: _48 = move _46
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:76-1866:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1866:13-1866:77)
      kind: _0 = <core::result::Result<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _48) -> [return: bb25, unwind: bb138]
  }
  preds [bb22]
  succs [bb25, bb138]

bb25
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:76-1866:77)
  1: StorageDead(_46)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:76-1866:77)
  2: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:77-1866:78)
  3: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1866:77-1866:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb24]
  succs [bb134]

bb26
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:28-1867:29)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:28-1867:29)
  2: _51 = &(*_52)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:17-1867:29)
  3: _50 = &(*_51)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:17-1867:29)
  4: _1 = move _50
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:9-1867:29)
  5: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:28-1867:29)
  6: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:29-1867:30)
  7: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1867:29-1867:30)
  8: StorageLive(_56)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1868:9-1872:10)
  9: StorageLive(_57)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1868:12-1868:34)
  10: StorageLive(_58)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1868:12-1868:18)
  11: _58 = _39
    SourceInfo(regex-automata/src/dfa/sparse.rs:1868:12-1868:18)
  12: StorageLive(_59)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1868:22-1868:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1868:22-1868:34)
      kind: _59 = util::start::Start::len() -> [return: bb27, unwind: bb138]
  }
  preds [bb23]
  succs [bb27, bb138]

bb27
  0: _57 = Ne(move _58, move _59)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1868:12-1868:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1868:12-1868:34)
      kind: switchInt(move _57) -> [0: bb30, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb30]

bb28
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1868:33-1868:34)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1868:33-1868:34)
  2: StorageLive(_61)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1869:24-1871:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1869:24-1871:14)
      kind: _61 = util::wire::DeserializeError::generic(const "invalid sparse starting table stride") -> [return: bb29, unwind: bb138]
  }
  preds [bb27]
  succs [bb29, bb138]

bb29
  0: _0 = core::result::Result::<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError>::Err(move _61)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1869:20-1871:15)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1871:14-1871:15)
  2: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1872:9-1872:10)
  3: StorageDead(_56)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1872:9-1872:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb28]
  succs [bb133]

bb30
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1868:33-1868:34)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1868:33-1868:34)
  2: _56 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:1872:10-1872:10)
  3: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1872:9-1872:10)
  4: StorageDead(_56)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1872:9-1872:10)
  5: StorageLive(_64)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:79)
  6: StorageLive(_65)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:79)
  7: StorageLive(_66)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:78)
  8: StorageLive(_67)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:41-1875:46)
  9: _67 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:41-1875:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:78)
      kind: _66 = util::wire::try_read_u32_as_usize(move _67, const "sparse start table patterns") -> [return: bb31, unwind: bb138]
  }
  preds [bb27]
  succs [bb31, bb138]

bb31
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:77-1875:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:79)
      kind: _65 = <core::result::Result<(usize, usize), util::wire::DeserializeError> as core::ops::Try>::branch(move _66) -> [return: bb32, unwind: bb138]
  }
  preds [bb30]
  succs [bb32, bb138]

bb32
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:78-1875:79)
  1: PlaceMention(_65)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:79)
  2: _68 = discriminant(_65)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:79)
      kind: switchInt(move _68) -> [0: bb35, 1: bb34, otherwise: bb33]
  }
  preds [bb31]
  succs [bb33, bb34, bb35]

bb33
  0: FakeRead(ForMatchedPlace(None), _65)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:79)
      kind: unreachable
  }
  preds [bb32]
  succs []

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1875:78-1875:79)
      kind: falseEdge -> [real: bb36, imaginary: bb35]
  }
  preds [bb32]
  succs [bb35, bb36]

bb35
  0: StorageLive(_72)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:79)
  1: _72 = ((_65 as Continue).0: (usize, usize))
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:79)
  2: _64 = _72
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:79)
  3: StorageDead(_72)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:78-1875:79)
  4: PlaceMention(_64)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:79)
  5: StorageLive(_62)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1874:14-1874:31)
  6: _62 = (_64.0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1874:14-1874:31)
  7: StorageLive(_63)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1874:33-1874:35)
  8: _63 = (_64.1: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1874:33-1874:35)
  9: StorageDead(_65)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:79-1875:80)
  10: StorageDead(_64)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:79-1875:80)
  11: StorageLive(_73)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:17-1876:29)
  12: StorageLive(_74)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:17-1876:29)
  13: StorageLive(_75)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:23-1876:29)
  14: StorageLive(_76)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:18-1876:23)
  15: _76 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:18-1876:23)
  16: StorageLive(_77)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:24-1876:28)
  17: StorageLive(_78)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:24-1876:26)
  18: _78 = _63
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:24-1876:26)
  19: _77 = core::ops::RangeFrom::<usize> { start: move _78 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:24-1876:28)
  20: StorageDead(_78)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:27-1876:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1876:23-1876:29)
      kind: _75 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _76, move _77) -> [return: bb38, unwind: bb138]
  }
  preds [bb32, bb34]
  succs [bb38, bb138]

bb36
  0: StorageLive(_69)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:78-1875:79)
  1: _69 = move ((_65 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:78-1875:79)
  2: StorageLive(_71)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:78-1875:79)
  3: _71 = move _69
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:78-1875:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1875:13-1875:79)
      kind: _0 = <core::result::Result<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _71) -> [return: bb37, unwind: bb138]
  }
  preds [bb34]
  succs [bb37, bb138]

bb37
  0: StorageDead(_71)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:78-1875:79)
  1: StorageDead(_69)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:78-1875:79)
  2: StorageDead(_65)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:79-1875:80)
  3: StorageDead(_64)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1875:79-1875:80)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb36]
  succs [bb133]

bb38
  0: StorageDead(_77)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:28-1876:29)
  1: StorageDead(_76)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:28-1876:29)
  2: _74 = &(*_75)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:17-1876:29)
  3: _73 = &(*_74)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:17-1876:29)
  4: _1 = move _73
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:9-1876:29)
  5: StorageDead(_73)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:28-1876:29)
  6: StorageDead(_75)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:29-1876:30)
  7: StorageDead(_74)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1876:29-1876:30)
  8: StorageLive(_79)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1877:13-1877:24)
  9: StorageLive(_80)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1877:30-1877:68)
  10: StorageLive(_81)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1877:30-1877:56)
  11: StorageLive(_82)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1877:30-1877:47)
  12: _82 = _62
    SourceInfo(regex-automata/src/dfa/sparse.rs:1877:30-1877:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1877:30-1877:56)
      kind: _81 = <usize as util::int::Usize>::as_u32(move _82) -> [return: bb39, unwind: bb138]
  }
  preds [bb35]
  succs [bb39, bb138]

bb39
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1877:55-1877:56)
  1: _80 = Eq(move _81, const core::num::<impl u32>::MAX)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1877:30-1877:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1877:30-1877:68)
      kind: switchInt(move _80) -> [0: bb41, otherwise: bb40]
  }
  preds [bb38]
  succs [bb40, bb41]

bb40
  0: StorageDead(_81)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1877:67-1877:68)
  1: _79 = core::option::Option::<usize>::None
    SourceInfo(regex-automata/src/dfa/sparse.rs:1878:13-1878:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1877:27-1881:10)
      kind: goto -> bb42
  }
  preds [bb39]
  succs [bb42]

bb41
  0: StorageDead(_81)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1877:67-1877:68)
  1: StorageLive(_83)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1880:18-1880:35)
  2: _83 = _62
    SourceInfo(regex-automata/src/dfa/sparse.rs:1880:18-1880:35)
  3: _79 = core::option::Option::<usize>::Some(move _83)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1880:13-1880:36)
  4: StorageDead(_83)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1880:35-1880:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1877:27-1881:10)
      kind: goto -> bb42
  }
  preds [bb39]
  succs [bb42]

bb42
  0: StorageDead(_80)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1881:9-1881:10)
  1: FakeRead(ForLet(None), _79)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1877:13-1877:24)
  2: StorageLive(_84)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1882:9-1886:10)
  3: StorageLive(_85)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1882:12-1882:67)
  4: StorageLive(_86)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1882:12-1882:23)
  5: _86 = _79
    SourceInfo(regex-automata/src/dfa/sparse.rs:1882:12-1882:23)
  6: StorageLive(_87)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1882:38-1882:66)
  7: _87 = {closure@regex-automata/src/dfa/sparse.rs:1882:38: 1882:43}
    SourceInfo(regex-automata/src/dfa/sparse.rs:1882:38-1882:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1882:12-1882:67)
      kind: _85 = core::option::Option::<usize>::map_or::<bool, {closure@regex-automata/src/dfa/sparse.rs:1882:38: 1882:43}>(move _86, const false, move _87) -> [return: bb43, unwind: bb138]
  }
  preds [bb40, bb41]
  succs [bb43, bb138]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1882:12-1882:67)
      kind: switchInt(move _85) -> [0: bb46, otherwise: bb44]
  }
  preds [bb42]
  succs [bb44, bb46]

bb44
  0: StorageDead(_87)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1882:66-1882:67)
  1: StorageDead(_86)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1882:66-1882:67)
  2: StorageLive(_89)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1883:24-1885:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1883:24-1885:14)
      kind: _89 = util::wire::DeserializeError::generic(const "sparse invalid number of patterns") -> [return: bb45, unwind: bb138]
  }
  preds [bb43]
  succs [bb45, bb138]

bb45
  0: _0 = core::result::Result::<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError>::Err(move _89)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1883:20-1885:15)
  1: StorageDead(_89)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1885:14-1885:15)
  2: StorageDead(_85)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1886:9-1886:10)
  3: StorageDead(_84)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1886:9-1886:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb132
  }
  preds [bb44]
  succs [bb132]

bb46
  0: StorageDead(_87)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1882:66-1882:67)
  1: StorageDead(_86)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1882:66-1882:67)
  2: _84 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:1886:10-1886:10)
  3: StorageDead(_85)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1886:9-1886:10)
  4: StorageDead(_84)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1886:9-1886:10)
  5: StorageLive(_92)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:69)
  6: StorageLive(_93)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:69)
  7: StorageLive(_94)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:68)
  8: StorageLive(_95)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:32-1889:37)
  9: _95 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:32-1889:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:68)
      kind: _94 = util::wire::try_read_u32(move _95, const "universal unanchored start") -> [return: bb47, unwind: bb138]
  }
  preds [bb43]
  succs [bb47, bb138]

bb47
  0: StorageDead(_95)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:67-1889:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:69)
      kind: _93 = <core::result::Result<(u32, usize), util::wire::DeserializeError> as core::ops::Try>::branch(move _94) -> [return: bb48, unwind: bb138]
  }
  preds [bb46]
  succs [bb48, bb138]

bb48
  0: StorageDead(_94)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:68-1889:69)
  1: PlaceMention(_93)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:69)
  2: _96 = discriminant(_93)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:69)
      kind: switchInt(move _96) -> [0: bb51, 1: bb50, otherwise: bb49]
  }
  preds [bb47]
  succs [bb49, bb50, bb51]

bb49
  0: FakeRead(ForMatchedPlace(None), _93)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:69)
      kind: unreachable
  }
  preds [bb48]
  succs []

bb50
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1889:68-1889:69)
      kind: falseEdge -> [real: bb52, imaginary: bb51]
  }
  preds [bb48]
  succs [bb51, bb52]

bb51
  0: StorageLive(_100)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:69)
  1: _100 = ((_93 as Continue).0: (u32, usize))
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:69)
  2: _92 = _100
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:69)
  3: StorageDead(_100)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:68-1889:69)
  4: PlaceMention(_92)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:69)
  5: StorageLive(_90)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1888:14-1888:34)
  6: _90 = (_92.0: u32)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1888:14-1888:34)
  7: StorageLive(_91)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1888:36-1888:38)
  8: _91 = (_92.1: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1888:36-1888:38)
  9: StorageDead(_93)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:69-1889:70)
  10: StorageDead(_92)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:69-1889:70)
  11: StorageLive(_101)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:17-1890:29)
  12: StorageLive(_102)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:17-1890:29)
  13: StorageLive(_103)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:23-1890:29)
  14: StorageLive(_104)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:18-1890:23)
  15: _104 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:18-1890:23)
  16: StorageLive(_105)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:24-1890:28)
  17: StorageLive(_106)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:24-1890:26)
  18: _106 = _91
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:24-1890:26)
  19: _105 = core::ops::RangeFrom::<usize> { start: move _106 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:24-1890:28)
  20: StorageDead(_106)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:27-1890:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1890:23-1890:29)
      kind: _103 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _104, move _105) -> [return: bb54, unwind: bb138]
  }
  preds [bb48, bb50]
  succs [bb54, bb138]

bb52
  0: StorageLive(_97)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:68-1889:69)
  1: _97 = move ((_93 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:68-1889:69)
  2: StorageLive(_99)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:68-1889:69)
  3: _99 = move _97
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:68-1889:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1889:13-1889:69)
      kind: _0 = <core::result::Result<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _99) -> [return: bb53, unwind: bb138]
  }
  preds [bb50]
  succs [bb53, bb138]

bb53
  0: StorageDead(_99)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:68-1889:69)
  1: StorageDead(_97)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:68-1889:69)
  2: StorageDead(_93)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:69-1889:70)
  3: StorageDead(_92)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1889:69-1889:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb132
  }
  preds [bb52]
  succs [bb132]

bb54
  0: StorageDead(_105)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:28-1890:29)
  1: StorageDead(_104)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:28-1890:29)
  2: _102 = &(*_103)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:17-1890:29)
  3: _101 = &(*_102)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:17-1890:29)
  4: _1 = move _101
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:9-1890:29)
  5: StorageDead(_101)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:28-1890:29)
  6: StorageDead(_103)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:29-1890:30)
  7: StorageDead(_102)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1890:29-1890:30)
  8: StorageLive(_107)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1891:13-1891:39)
  9: StorageLive(_108)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1891:45-1891:77)
  10: StorageLive(_109)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1891:45-1891:65)
  11: _109 = _90
    SourceInfo(regex-automata/src/dfa/sparse.rs:1891:45-1891:65)
  12: _108 = Eq(move _109, const core::num::<impl u32>::MAX)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1891:45-1891:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1891:45-1891:77)
      kind: switchInt(move _108) -> [0: bb56, otherwise: bb55]
  }
  preds [bb51]
  succs [bb55, bb56]

bb55
  0: StorageDead(_109)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1891:76-1891:77)
  1: _107 = core::option::Option::<util::primitives::StateID>::None
    SourceInfo(regex-automata/src/dfa/sparse.rs:1892:13-1892:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1891:42-1900:10)
      kind: goto -> bb65
  }
  preds [bb54]
  succs [bb65]

bb56
  0: StorageDead(_109)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1891:76-1891:77)
  1: StorageLive(_110)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1899:16)
  2: StorageLive(_111)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1899:16)
  3: StorageLive(_112)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1899:15)
  4: StorageLive(_113)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1894:57)
  5: StorageLive(_114)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:36-1894:56)
  6: _114 = _90
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:36-1894:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1894:57)
      kind: _113 = <util::primitives::StateID as core::convert::TryFrom<u32>>::try_from(move _114) -> [return: bb57, unwind: bb138]
  }
  preds [bb54]
  succs [bb57, bb138]

bb57
  0: StorageDead(_114)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:56-1894:57)
  1: StorageLive(_115)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:66-1899:14)
  2: _115 = {closure@regex-automata/src/dfa/sparse.rs:1894:66: 1894:69}
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:66-1899:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1899:15)
      kind: _112 = core::result::Result::<util::primitives::StateID, util::primitives::StateIDError>::map_err::<util::wire::DeserializeError, {closure@regex-automata/src/dfa/sparse.rs:1894:66: 1894:69}>(move _113, move _115) -> [return: bb58, unwind: bb138]
  }
  preds [bb56]
  succs [bb58, bb138]

bb58
  0: StorageDead(_115)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1899:14-1899:15)
  1: StorageDead(_113)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1899:14-1899:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1899:16)
      kind: _111 = <core::result::Result<util::primitives::StateID, util::wire::DeserializeError> as core::ops::Try>::branch(move _112) -> [return: bb59, unwind: bb138]
  }
  preds [bb57]
  succs [bb59, bb138]

bb59
  0: StorageDead(_112)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1899:15-1899:16)
  1: PlaceMention(_111)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1899:16)
  2: _116 = discriminant(_111)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1899:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1899:16)
      kind: switchInt(move _116) -> [0: bb62, 1: bb61, otherwise: bb60]
  }
  preds [bb58]
  succs [bb60, bb61, bb62]

bb60
  0: FakeRead(ForMatchedPlace(None), _111)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1899:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1899:16)
      kind: unreachable
  }
  preds [bb59]
  succs []

bb61
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1899:15-1899:16)
      kind: falseEdge -> [real: bb63, imaginary: bb62]
  }
  preds [bb59]
  succs [bb62, bb63]

bb62
  0: StorageLive(_120)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1899:16)
  1: _120 = ((_111 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1899:16)
  2: _110 = _120
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1899:16)
  3: StorageDead(_120)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1899:15-1899:16)
  4: _107 = core::option::Option::<util::primitives::StateID>::Some(move _110)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1894:13-1899:17)
  5: StorageDead(_110)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1899:16-1899:17)
  6: StorageDead(_111)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1900:9-1900:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1891:42-1900:10)
      kind: goto -> bb65
  }
  preds [bb59, bb61]
  succs [bb65]

bb63
  0: StorageLive(_117)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1899:15-1899:16)
  1: _117 = move ((_111 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1899:15-1899:16)
  2: StorageLive(_119)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1899:15-1899:16)
  3: _119 = move _117
    SourceInfo(regex-automata/src/dfa/sparse.rs:1899:15-1899:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1894:18-1899:16)
      kind: _0 = <core::result::Result<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _119) -> [return: bb64, unwind: bb138]
  }
  preds [bb61]
  succs [bb64, bb138]

bb64
  0: StorageDead(_119)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1899:15-1899:16)
  1: StorageDead(_117)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1899:15-1899:16)
  2: StorageDead(_110)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1899:16-1899:17)
  3: StorageDead(_111)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1900:9-1900:10)
  4: StorageDead(_108)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1900:9-1900:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb131
  }
  preds [bb63]
  succs [bb131]

bb65
  0: StorageDead(_108)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1900:9-1900:10)
  1: FakeRead(ForLet(None), _107)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1891:13-1891:39)
  2: StorageLive(_123)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:67)
  3: StorageLive(_124)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:67)
  4: StorageLive(_125)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:66)
  5: StorageLive(_126)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:32-1903:37)
  6: _126 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:32-1903:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:66)
      kind: _125 = util::wire::try_read_u32(move _126, const "universal anchored start") -> [return: bb66, unwind: bb138]
  }
  preds [bb55, bb62]
  succs [bb66, bb138]

bb66
  0: StorageDead(_126)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:65-1903:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:67)
      kind: _124 = <core::result::Result<(u32, usize), util::wire::DeserializeError> as core::ops::Try>::branch(move _125) -> [return: bb67, unwind: bb138]
  }
  preds [bb65]
  succs [bb67, bb138]

bb67
  0: StorageDead(_125)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:66-1903:67)
  1: PlaceMention(_124)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:67)
  2: _127 = discriminant(_124)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:67)
      kind: switchInt(move _127) -> [0: bb70, 1: bb69, otherwise: bb68]
  }
  preds [bb66]
  succs [bb68, bb69, bb70]

bb68
  0: FakeRead(ForMatchedPlace(None), _124)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:67)
      kind: unreachable
  }
  preds [bb67]
  succs []

bb69
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1903:66-1903:67)
      kind: falseEdge -> [real: bb71, imaginary: bb70]
  }
  preds [bb67]
  succs [bb70, bb71]

bb70
  0: StorageLive(_131)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:67)
  1: _131 = ((_124 as Continue).0: (u32, usize))
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:67)
  2: _123 = _131
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:67)
  3: StorageDead(_131)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:66-1903:67)
  4: PlaceMention(_123)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:67)
  5: StorageLive(_121)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1902:14-1902:32)
  6: _121 = (_123.0: u32)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1902:14-1902:32)
  7: StorageLive(_122)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1902:34-1902:36)
  8: _122 = (_123.1: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1902:34-1902:36)
  9: StorageDead(_124)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:67-1903:68)
  10: StorageDead(_123)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:67-1903:68)
  11: StorageLive(_132)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:17-1904:29)
  12: StorageLive(_133)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:17-1904:29)
  13: StorageLive(_134)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:23-1904:29)
  14: StorageLive(_135)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:18-1904:23)
  15: _135 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:18-1904:23)
  16: StorageLive(_136)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:24-1904:28)
  17: StorageLive(_137)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:24-1904:26)
  18: _137 = _122
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:24-1904:26)
  19: _136 = core::ops::RangeFrom::<usize> { start: move _137 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:24-1904:28)
  20: StorageDead(_137)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:27-1904:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1904:23-1904:29)
      kind: _134 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _135, move _136) -> [return: bb73, unwind: bb138]
  }
  preds [bb67, bb69]
  succs [bb73, bb138]

bb71
  0: StorageLive(_128)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:66-1903:67)
  1: _128 = move ((_124 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:66-1903:67)
  2: StorageLive(_130)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:66-1903:67)
  3: _130 = move _128
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:66-1903:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1903:13-1903:67)
      kind: _0 = <core::result::Result<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _130) -> [return: bb72, unwind: bb138]
  }
  preds [bb69]
  succs [bb72, bb138]

bb72
  0: StorageDead(_130)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:66-1903:67)
  1: StorageDead(_128)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:66-1903:67)
  2: StorageDead(_124)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:67-1903:68)
  3: StorageDead(_123)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1903:67-1903:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb131
  }
  preds [bb71]
  succs [bb131]

bb73
  0: StorageDead(_136)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:28-1904:29)
  1: StorageDead(_135)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:28-1904:29)
  2: _133 = &(*_134)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:17-1904:29)
  3: _132 = &(*_133)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:17-1904:29)
  4: _1 = move _132
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:9-1904:29)
  5: StorageDead(_132)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:28-1904:29)
  6: StorageDead(_134)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:29-1904:30)
  7: StorageDead(_133)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1904:29-1904:30)
  8: StorageLive(_138)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1905:13-1905:37)
  9: StorageLive(_139)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1905:43-1905:73)
  10: StorageLive(_140)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1905:43-1905:61)
  11: _140 = _121
    SourceInfo(regex-automata/src/dfa/sparse.rs:1905:43-1905:61)
  12: _139 = Eq(move _140, const core::num::<impl u32>::MAX)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1905:43-1905:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1905:43-1905:73)
      kind: switchInt(move _139) -> [0: bb75, otherwise: bb74]
  }
  preds [bb70]
  succs [bb74, bb75]

bb74
  0: StorageDead(_140)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1905:72-1905:73)
  1: _138 = core::option::Option::<util::primitives::StateID>::None
    SourceInfo(regex-automata/src/dfa/sparse.rs:1906:13-1906:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1905:40-1911:10)
      kind: goto -> bb84
  }
  preds [bb73]
  succs [bb84]

bb75
  0: StorageDead(_140)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1905:72-1905:73)
  1: StorageLive(_141)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1910:16)
  2: StorageLive(_142)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1910:16)
  3: StorageLive(_143)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1910:15)
  4: StorageLive(_144)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1908:55)
  5: StorageLive(_145)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:36-1908:54)
  6: _145 = _121
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:36-1908:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1908:55)
      kind: _144 = <util::primitives::StateID as core::convert::TryFrom<u32>>::try_from(move _145) -> [return: bb76, unwind: bb138]
  }
  preds [bb73]
  succs [bb76, bb138]

bb76
  0: StorageDead(_145)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:54-1908:55)
  1: StorageLive(_146)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:64-1910:14)
  2: _146 = {closure@regex-automata/src/dfa/sparse.rs:1908:64: 1908:67}
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:64-1910:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1910:15)
      kind: _143 = core::result::Result::<util::primitives::StateID, util::primitives::StateIDError>::map_err::<util::wire::DeserializeError, {closure@regex-automata/src/dfa/sparse.rs:1908:64: 1908:67}>(move _144, move _146) -> [return: bb77, unwind: bb138]
  }
  preds [bb75]
  succs [bb77, bb138]

bb77
  0: StorageDead(_146)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1910:14-1910:15)
  1: StorageDead(_144)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1910:14-1910:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1910:16)
      kind: _142 = <core::result::Result<util::primitives::StateID, util::wire::DeserializeError> as core::ops::Try>::branch(move _143) -> [return: bb78, unwind: bb138]
  }
  preds [bb76]
  succs [bb78, bb138]

bb78
  0: StorageDead(_143)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1910:15-1910:16)
  1: PlaceMention(_142)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1910:16)
  2: _147 = discriminant(_142)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1910:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1910:16)
      kind: switchInt(move _147) -> [0: bb81, 1: bb80, otherwise: bb79]
  }
  preds [bb77]
  succs [bb79, bb80, bb81]

bb79
  0: FakeRead(ForMatchedPlace(None), _142)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1910:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1910:16)
      kind: unreachable
  }
  preds [bb78]
  succs []

bb80
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1910:15-1910:16)
      kind: falseEdge -> [real: bb82, imaginary: bb81]
  }
  preds [bb78]
  succs [bb81, bb82]

bb81
  0: StorageLive(_151)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1910:16)
  1: _151 = ((_142 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1910:16)
  2: _141 = _151
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1910:16)
  3: StorageDead(_151)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1910:15-1910:16)
  4: _138 = core::option::Option::<util::primitives::StateID>::Some(move _141)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1908:13-1910:17)
  5: StorageDead(_141)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1910:16-1910:17)
  6: StorageDead(_142)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1911:9-1911:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1905:40-1911:10)
      kind: goto -> bb84
  }
  preds [bb78, bb80]
  succs [bb84]

bb82
  0: StorageLive(_148)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1910:15-1910:16)
  1: _148 = move ((_142 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1910:15-1910:16)
  2: StorageLive(_150)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1910:15-1910:16)
  3: _150 = move _148
    SourceInfo(regex-automata/src/dfa/sparse.rs:1910:15-1910:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1908:18-1910:16)
      kind: _0 = <core::result::Result<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _150) -> [return: bb83, unwind: bb138]
  }
  preds [bb80]
  succs [bb83, bb138]

bb83
  0: StorageDead(_150)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1910:15-1910:16)
  1: StorageDead(_148)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1910:15-1910:16)
  2: StorageDead(_141)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1910:16-1910:17)
  3: StorageDead(_142)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1911:9-1911:10)
  4: StorageDead(_139)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1911:9-1911:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb130
  }
  preds [bb82]
  succs [bb130]

bb84
  0: StorageDead(_139)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1911:9-1911:10)
  1: FakeRead(ForLet(None), _138)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1905:13-1905:37)
  2: StorageLive(_152)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1913:13-1913:31)
  3: StorageLive(_153)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1913:34-1917:11)
  4: StorageLive(_154)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1913:34-1917:10)
  5: StorageLive(_155)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1914:13-1914:19)
  6: _155 = _39
    SourceInfo(regex-automata/src/dfa/sparse.rs:1914:13-1914:19)
  7: StorageLive(_156)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1915:13-1915:37)
  8: StorageLive(_157)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1915:13-1915:24)
  9: _157 = _79
    SourceInfo(regex-automata/src/dfa/sparse.rs:1915:13-1915:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1915:13-1915:37)
      kind: _156 = core::option::Option::<usize>::unwrap_or(move _157, const 0_usize) -> [return: bb85, unwind: bb138]
  }
  preds [bb74, bb81]
  succs [bb85, bb138]

bb85
  0: StorageDead(_157)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1915:36-1915:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1913:34-1917:10)
      kind: _154 = util::wire::mul(move _155, move _156, const "sparse invalid pattern length") -> [return: bb86, unwind: bb138]
  }
  preds [bb84]
  succs [bb86, bb138]

bb86
  0: StorageDead(_156)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1917:9-1917:10)
  1: StorageDead(_155)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1917:9-1917:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1913:34-1917:11)
      kind: _153 = <core::result::Result<usize, util::wire::DeserializeError> as core::ops::Try>::branch(move _154) -> [return: bb87, unwind: bb138]
  }
  preds [bb85]
  succs [bb87, bb138]

bb87
  0: StorageDead(_154)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1917:10-1917:11)
  1: PlaceMention(_153)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1913:34-1917:11)
  2: _158 = discriminant(_153)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1913:34-1917:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1913:34-1917:11)
      kind: switchInt(move _158) -> [0: bb90, 1: bb89, otherwise: bb88]
  }
  preds [bb86]
  succs [bb88, bb89, bb90]

bb88
  0: FakeRead(ForMatchedPlace(None), _153)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1913:34-1917:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1913:34-1917:11)
      kind: unreachable
  }
  preds [bb87]
  succs []

bb89
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1917:10-1917:11)
      kind: falseEdge -> [real: bb91, imaginary: bb90]
  }
  preds [bb87]
  succs [bb90, bb91]

bb90
  0: StorageLive(_162)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1913:34-1917:11)
  1: _162 = ((_153 as Continue).0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1913:34-1917:11)
  2: _152 = _162
    SourceInfo(regex-automata/src/dfa/sparse.rs:1913:34-1917:11)
  3: StorageDead(_162)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1917:10-1917:11)
  4: FakeRead(ForLet(None), _152)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1913:13-1913:31)
  5: StorageDead(_153)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1917:11-1917:12)
  6: StorageLive(_163)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1921:13-1921:28)
  7: StorageLive(_164)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1921:31-1925:11)
  8: StorageLive(_165)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1921:31-1925:10)
  9: StorageLive(_166)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:13-1922:64)
  10: StorageLive(_167)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:13-1922:64)
  11: StorageLive(_168)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:13-1922:63)
  12: StorageLive(_169)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:26-1922:32)
  13: _169 = _39
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:26-1922:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1922:13-1922:63)
      kind: _168 = util::wire::mul(const 2_usize, move _169, const "start state stride too big") -> [return: bb93, unwind: bb138]
  }
  preds [bb87, bb89]
  succs [bb93, bb138]

bb91
  0: StorageLive(_159)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1917:10-1917:11)
  1: _159 = move ((_153 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1917:10-1917:11)
  2: StorageLive(_161)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1917:10-1917:11)
  3: _161 = move _159
    SourceInfo(regex-automata/src/dfa/sparse.rs:1917:10-1917:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1913:34-1917:11)
      kind: _0 = <core::result::Result<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _161) -> [return: bb92, unwind: bb138]
  }
  preds [bb89]
  succs [bb92, bb138]

bb92
  0: StorageDead(_161)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1917:10-1917:11)
  1: StorageDead(_159)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1917:10-1917:11)
  2: StorageDead(_153)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1917:11-1917:12)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb129
  }
  preds [bb91]
  succs [bb129]

bb93
  0: StorageDead(_169)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:62-1922:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1922:13-1922:64)
      kind: _167 = <core::result::Result<usize, util::wire::DeserializeError> as core::ops::Try>::branch(move _168) -> [return: bb94, unwind: bb138]
  }
  preds [bb90]
  succs [bb94, bb138]

bb94
  0: StorageDead(_168)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:63-1922:64)
  1: PlaceMention(_167)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:13-1922:64)
  2: _170 = discriminant(_167)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:13-1922:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1922:13-1922:64)
      kind: switchInt(move _170) -> [0: bb97, 1: bb96, otherwise: bb95]
  }
  preds [bb93]
  succs [bb95, bb96, bb97]

bb95
  0: FakeRead(ForMatchedPlace(None), _167)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:13-1922:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1922:13-1922:64)
      kind: unreachable
  }
  preds [bb94]
  succs []

bb96
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1922:63-1922:64)
      kind: falseEdge -> [real: bb98, imaginary: bb97]
  }
  preds [bb94]
  succs [bb97, bb98]

bb97
  0: StorageLive(_174)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:13-1922:64)
  1: _174 = ((_167 as Continue).0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:13-1922:64)
  2: _166 = _174
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:13-1922:64)
  3: StorageDead(_174)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:63-1922:64)
  4: StorageLive(_175)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1923:13-1923:31)
  5: _175 = _152
    SourceInfo(regex-automata/src/dfa/sparse.rs:1923:13-1923:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1921:31-1925:10)
      kind: _165 = util::wire::add(move _166, move _175, const "sparse invalid 'any' pattern starts size") -> [return: bb100, unwind: bb138]
  }
  preds [bb94, bb96]
  succs [bb100, bb138]

bb98
  0: StorageLive(_171)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:63-1922:64)
  1: _171 = move ((_167 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:63-1922:64)
  2: StorageLive(_173)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:63-1922:64)
  3: _173 = move _171
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:63-1922:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1922:13-1922:64)
      kind: _0 = <core::result::Result<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _173) -> [return: bb99, unwind: bb138]
  }
  preds [bb96]
  succs [bb99, bb138]

bb99
  0: StorageDead(_173)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:63-1922:64)
  1: StorageDead(_171)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1922:63-1922:64)
  2: StorageDead(_166)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:9-1925:10)
  3: StorageDead(_165)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:10-1925:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb127
  }
  preds [bb98]
  succs [bb127]

bb100
  0: StorageDead(_175)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:9-1925:10)
  1: StorageDead(_166)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:9-1925:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1921:31-1925:11)
      kind: _164 = <core::result::Result<usize, util::wire::DeserializeError> as core::ops::Try>::branch(move _165) -> [return: bb101, unwind: bb138]
  }
  preds [bb97]
  succs [bb101, bb138]

bb101
  0: StorageDead(_165)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:10-1925:11)
  1: PlaceMention(_164)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1921:31-1925:11)
  2: _176 = discriminant(_164)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1921:31-1925:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1921:31-1925:11)
      kind: switchInt(move _176) -> [0: bb104, 1: bb103, otherwise: bb102]
  }
  preds [bb100]
  succs [bb102, bb103, bb104]

bb102
  0: FakeRead(ForMatchedPlace(None), _164)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1921:31-1925:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1921:31-1925:11)
      kind: unreachable
  }
  preds [bb101]
  succs []

bb103
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1925:10-1925:11)
      kind: falseEdge -> [real: bb105, imaginary: bb104]
  }
  preds [bb101]
  succs [bb104, bb105]

bb104
  0: StorageLive(_180)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1921:31-1925:11)
  1: _180 = ((_164 as Continue).0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1921:31-1925:11)
  2: _163 = _180
    SourceInfo(regex-automata/src/dfa/sparse.rs:1921:31-1925:11)
  3: StorageDead(_180)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:10-1925:11)
  4: FakeRead(ForLet(None), _163)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1921:13-1921:28)
  5: StorageDead(_167)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:11-1925:12)
  6: StorageDead(_164)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:11-1925:12)
  7: StorageLive(_181)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1926:13-1926:28)
  8: StorageLive(_182)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1926:31-1930:11)
  9: StorageLive(_183)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1926:31-1930:10)
  10: StorageLive(_184)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1927:13-1927:28)
  11: _184 = _163
    SourceInfo(regex-automata/src/dfa/sparse.rs:1927:13-1927:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1926:31-1930:10)
      kind: _183 = util::wire::mul(move _184, const util::primitives::StateID::SIZE, const "sparse pattern table bytes length") -> [return: bb107, unwind: bb138]
  }
  preds [bb101, bb103]
  succs [bb107, bb138]

bb105
  0: StorageLive(_177)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:10-1925:11)
  1: _177 = move ((_164 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:10-1925:11)
  2: StorageLive(_179)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:10-1925:11)
  3: _179 = move _177
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:10-1925:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1921:31-1925:11)
      kind: _0 = <core::result::Result<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _179) -> [return: bb106, unwind: bb138]
  }
  preds [bb103]
  succs [bb106, bb138]

bb106
  0: StorageDead(_179)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:10-1925:11)
  1: StorageDead(_177)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:10-1925:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb127
  }
  preds [bb105]
  succs [bb127]

bb107
  0: StorageDead(_184)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1930:9-1930:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1926:31-1930:11)
      kind: _182 = <core::result::Result<usize, util::wire::DeserializeError> as core::ops::Try>::branch(move _183) -> [return: bb108, unwind: bb138]
  }
  preds [bb104]
  succs [bb108, bb138]

bb108
  0: StorageDead(_183)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1930:10-1930:11)
  1: PlaceMention(_182)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1926:31-1930:11)
  2: _185 = discriminant(_182)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1926:31-1930:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1926:31-1930:11)
      kind: switchInt(move _185) -> [0: bb111, 1: bb110, otherwise: bb109]
  }
  preds [bb107]
  succs [bb109, bb110, bb111]

bb109
  0: FakeRead(ForMatchedPlace(None), _182)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1926:31-1930:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1926:31-1930:11)
      kind: unreachable
  }
  preds [bb108]
  succs []

bb110
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1930:10-1930:11)
      kind: falseEdge -> [real: bb112, imaginary: bb111]
  }
  preds [bb108]
  succs [bb111, bb112]

bb111
  0: StorageLive(_189)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1926:31-1930:11)
  1: _189 = ((_182 as Continue).0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1926:31-1930:11)
  2: _181 = _189
    SourceInfo(regex-automata/src/dfa/sparse.rs:1926:31-1930:11)
  3: StorageDead(_189)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1930:10-1930:11)
  4: FakeRead(ForLet(None), _181)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1926:13-1926:28)
  5: StorageDead(_182)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1930:11-1930:12)
  6: StorageLive(_190)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1931:9-1935:11)
  7: StorageLive(_191)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1931:9-1935:11)
  8: StorageLive(_192)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1931:9-1935:10)
  9: StorageLive(_193)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1932:13-1932:18)
  10: _193 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1932:13-1932:18)
  11: StorageLive(_194)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1933:13-1933:28)
  12: _194 = _181
    SourceInfo(regex-automata/src/dfa/sparse.rs:1933:13-1933:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1931:9-1935:10)
      kind: _192 = util::wire::check_slice_len::<u8>(move _193, move _194, const "sparse start ID table") -> [return: bb114, unwind: bb138]
  }
  preds [bb108, bb110]
  succs [bb114, bb138]

bb112
  0: StorageLive(_186)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1930:10-1930:11)
  1: _186 = move ((_182 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1930:10-1930:11)
  2: StorageLive(_188)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1930:10-1930:11)
  3: _188 = move _186
    SourceInfo(regex-automata/src/dfa/sparse.rs:1930:10-1930:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1926:31-1930:11)
      kind: _0 = <core::result::Result<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _188) -> [return: bb113, unwind: bb138]
  }
  preds [bb110]
  succs [bb113, bb138]

bb113
  0: StorageDead(_188)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1930:10-1930:11)
  1: StorageDead(_186)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1930:10-1930:11)
  2: StorageDead(_182)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1930:11-1930:12)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb126
  }
  preds [bb112]
  succs [bb126]

bb114
  0: StorageDead(_194)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1935:9-1935:10)
  1: StorageDead(_193)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1935:9-1935:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1931:9-1935:11)
      kind: _191 = <core::result::Result<(), util::wire::DeserializeError> as core::ops::Try>::branch(move _192) -> [return: bb115, unwind: bb138]
  }
  preds [bb111]
  succs [bb115, bb138]

bb115
  0: StorageDead(_192)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1935:10-1935:11)
  1: PlaceMention(_191)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1931:9-1935:11)
  2: _195 = discriminant(_191)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1931:9-1935:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1931:9-1935:11)
      kind: switchInt(move _195) -> [0: bb118, 1: bb117, otherwise: bb116]
  }
  preds [bb114]
  succs [bb116, bb117, bb118]

bb116
  0: FakeRead(ForMatchedPlace(None), _191)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1931:9-1935:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1931:9-1935:11)
      kind: unreachable
  }
  preds [bb115]
  succs []

bb117
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1935:10-1935:11)
      kind: falseEdge -> [real: bb119, imaginary: bb118]
  }
  preds [bb115]
  succs [bb118, bb119]

bb118
  0: StorageLive(_199)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1931:9-1935:11)
  1: _199 = ((_191 as Continue).0: ())
    SourceInfo(regex-automata/src/dfa/sparse.rs:1931:9-1935:11)
  2: _190 = _199
    SourceInfo(regex-automata/src/dfa/sparse.rs:1931:9-1935:11)
  3: StorageDead(_199)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1935:10-1935:11)
  4: StorageDead(_191)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1935:11-1935:12)
  5: StorageDead(_190)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1935:11-1935:12)
  6: StorageLive(_200)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1936:13-1936:18)
  7: StorageLive(_201)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1936:27-1936:46)
  8: StorageLive(_202)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1936:22-1936:27)
  9: _202 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1936:22-1936:27)
  10: StorageLive(_203)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1936:28-1936:45)
  11: StorageLive(_204)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1936:30-1936:45)
  12: _204 = _181
    SourceInfo(regex-automata/src/dfa/sparse.rs:1936:30-1936:45)
  13: _203 = core::ops::RangeTo::<usize> { end: move _204 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1936:28-1936:45)
  14: StorageDead(_204)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1936:44-1936:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1936:27-1936:46)
      kind: _201 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _202, move _203) -> [return: bb121, unwind: bb138]
  }
  preds [bb115, bb117]
  succs [bb121, bb138]

bb119
  0: StorageLive(_196)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1935:10-1935:11)
  1: _196 = move ((_191 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1935:10-1935:11)
  2: StorageLive(_198)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1935:10-1935:11)
  3: _198 = move _196
    SourceInfo(regex-automata/src/dfa/sparse.rs:1935:10-1935:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1931:9-1935:11)
      kind: _0 = <core::result::Result<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _198) -> [return: bb120, unwind: bb138]
  }
  preds [bb117]
  succs [bb120, bb138]

bb120
  0: StorageDead(_198)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1935:10-1935:11)
  1: StorageDead(_196)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1935:10-1935:11)
  2: StorageDead(_191)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1935:11-1935:12)
  3: StorageDead(_190)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1935:11-1935:12)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb126
  }
  preds [bb119]
  succs [bb126]

bb121
  0: StorageDead(_203)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1936:45-1936:46)
  1: StorageDead(_202)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1936:45-1936:46)
  2: _200 = &(*_201)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1936:21-1936:46)
  3: FakeRead(ForLet(None), _200)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1936:13-1936:18)
  4: StorageLive(_205)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:17-1937:42)
  5: StorageLive(_206)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:17-1937:42)
  6: StorageLive(_207)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:23-1937:42)
  7: StorageLive(_208)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:18-1937:23)
  8: _208 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:18-1937:23)
  9: StorageLive(_209)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:24-1937:41)
  10: StorageLive(_210)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:24-1937:39)
  11: _210 = _181
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:24-1937:39)
  12: _209 = core::ops::RangeFrom::<usize> { start: move _210 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:24-1937:41)
  13: StorageDead(_210)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:40-1937:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1937:23-1937:42)
      kind: _207 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _208, move _209) -> [return: bb122, unwind: bb138]
  }
  preds [bb118]
  succs [bb122, bb138]

bb122
  0: StorageDead(_209)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:41-1937:42)
  1: StorageDead(_208)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:41-1937:42)
  2: _206 = &(*_207)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:17-1937:42)
  3: _205 = &(*_206)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:17-1937:42)
  4: _1 = move _205
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:9-1937:42)
  5: StorageDead(_205)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:41-1937:42)
  6: StorageDead(_207)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:42-1937:43)
  7: StorageDead(_206)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1937:42-1937:43)
  8: StorageLive(_211)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1939:13-1939:15)
  9: StorageLive(_212)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1940:13-1940:18)
  10: _212 = _200
    SourceInfo(regex-automata/src/dfa/sparse.rs:1940:13-1940:18)
  11: StorageLive(_213)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1941:13-1941:17)
  12: _213 = _5
    SourceInfo(regex-automata/src/dfa/sparse.rs:1941:13-1941:17)
  13: StorageLive(_214)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1942:13-1942:22)
  14: _214 = move _22
    SourceInfo(regex-automata/src/dfa/sparse.rs:1942:13-1942:22)
  15: StorageLive(_215)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1943:13-1943:19)
  16: _215 = _39
    SourceInfo(regex-automata/src/dfa/sparse.rs:1943:13-1943:19)
  17: StorageLive(_216)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1944:13-1944:24)
  18: _216 = _79
    SourceInfo(regex-automata/src/dfa/sparse.rs:1944:13-1944:24)
  19: StorageLive(_217)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1945:13-1945:39)
  20: _217 = _107
    SourceInfo(regex-automata/src/dfa/sparse.rs:1945:13-1945:39)
  21: StorageLive(_218)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1946:13-1946:37)
  22: _218 = _138
    SourceInfo(regex-automata/src/dfa/sparse.rs:1946:13-1946:37)
  23: _211 = dfa::sparse::StartTable::<&[u8]> { table: move _212, kind: move _213, start_map: move _214, stride: move _215, pattern_len: move _216, universal_start_unanchored: move _217, universal_start_anchored: move _218 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1939:18-1947:10)
  24: StorageDead(_218)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1947:9-1947:10)
  25: StorageDead(_217)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1947:9-1947:10)
  26: StorageDead(_216)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1947:9-1947:10)
  27: StorageDead(_215)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1947:9-1947:10)
  28: StorageDead(_214)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1947:9-1947:10)
  29: StorageDead(_213)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1947:9-1947:10)
  30: StorageDead(_212)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1947:9-1947:10)
  31: FakeRead(ForLet(None), _211)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1939:13-1939:15)
  32: StorageLive(_219)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:12-1948:57)
  33: StorageLive(_220)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:13-1948:15)
  34: _220 = move _211
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:13-1948:15)
  35: StorageLive(_221)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:17-1948:56)
  36: StorageLive(_222)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:17-1948:42)
  37: StorageLive(_223)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:17-1948:31)
  38: StorageLive(_224)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:17-1948:22)
  39: _224 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:17-1948:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1948:17-1948:31)
      kind: _223 = core::slice::<impl [u8]>::as_ptr(move _224) -> [return: bb123, unwind: bb138]
  }
  preds [bb121]
  succs [bb123, bb138]

bb123
  0: StorageDead(_224)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:30-1948:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1948:17-1948:42)
      kind: _222 = <*const u8 as util::int::Pointer>::as_usize(move _223) -> [return: bb124, unwind: bb138]
  }
  preds [bb122]
  succs [bb124, bb138]

bb124
  0: StorageDead(_223)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:41-1948:42)
  1: StorageLive(_225)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:45-1948:56)
  2: _225 = _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:45-1948:56)
  3: _226 = SubWithOverflow(_222, _225)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:17-1948:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1948:17-1948:56)
      kind: assert(!move (_226.1: bool), "attempt to compute `{} - {}`, which would overflow", move _222, move _225) -> [success: bb125, unwind: bb138]
  }
  preds [bb123]
  succs [bb125, bb138]

bb125
  0: _221 = move (_226.0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:17-1948:56)
  1: StorageDead(_225)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:55-1948:56)
  2: StorageDead(_222)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:55-1948:56)
  3: _219 = (move _220, move _221)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:12-1948:57)
  4: StorageDead(_221)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:56-1948:57)
  5: StorageDead(_220)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:56-1948:57)
  6: _0 = core::result::Result::<(dfa::sparse::StartTable<&[u8]>, usize), util::wire::DeserializeError>::Ok(move _219)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:9-1948:58)
  7: StorageDead(_219)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1948:57-1948:58)
  8: StorageDead(_211)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  9: StorageDead(_201)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  10: StorageDead(_200)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  11: StorageDead(_181)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  12: StorageDead(_163)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  13: StorageDead(_152)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  14: StorageDead(_138)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  15: StorageDead(_122)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  16: StorageDead(_121)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  17: StorageDead(_107)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  18: StorageDead(_91)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  19: StorageDead(_90)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  20: StorageDead(_79)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  21: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  22: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  23: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  24: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  25: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  26: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  27: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  28: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  29: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1949:6-1949:6)
      kind: goto -> bb137
  }
  preds [bb124]
  succs [bb137]

bb126
  0: StorageDead(_181)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb128
  }
  preds [bb113, bb120]
  succs [bb128]

bb127
  0: StorageDead(_167)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:11-1925:12)
  1: StorageDead(_164)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1925:11-1925:12)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb128
  }
  preds [bb99, bb106]
  succs [bb128]

bb128
  0: StorageDead(_163)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb129
  }
  preds [bb126, bb127]
  succs [bb129]

bb129
  0: StorageDead(_152)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb130
  }
  preds [bb92, bb128]
  succs [bb130]

bb130
  0: StorageDead(_138)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  1: StorageDead(_122)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  2: StorageDead(_121)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb131
  }
  preds [bb83, bb129]
  succs [bb131]

bb131
  0: StorageDead(_107)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  1: StorageDead(_91)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  2: StorageDead(_90)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb132
  }
  preds [bb64, bb72, bb130]
  succs [bb132]

bb132
  0: StorageDead(_79)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  2: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb45, bb53, bb131]
  succs [bb133]

bb133
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb134
  }
  preds [bb29, bb37, bb132]
  succs [bb134]

bb134
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb135
  }
  preds [bb25, bb133]
  succs [bb135]

bb135
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb136
  }
  preds [bb17, bb134]
  succs [bb136]

bb136
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1949:5-1949:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1949:6-1949:6)
      kind: goto -> bb137
  }
  preds [bb9, bb135]
  succs [bb137]

bb137
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1949:6-1949:6)
      kind: return
  }
  preds [bb125, bb136]
  succs []

bb138
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1854:5-1949:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb7, bb8, bb10, bb11, bb15, bb16, bb18, bb19, bb23, bb24, bb26, bb28, bb30, bb31, bb35, bb36, bb38, bb42, bb44, bb46, bb47, bb51, bb52, bb56, bb57, bb58, bb63, bb65, bb66, bb70, bb71, bb75, bb76, bb77, bb82, bb84, bb85, bb86, bb90, bb91, bb93, bb97, bb98, bb100, bb104, bb105, bb107, bb111, bb112, bb114, bb118, bb119, bb121, bb122, bb123, bb124]
  succs []

