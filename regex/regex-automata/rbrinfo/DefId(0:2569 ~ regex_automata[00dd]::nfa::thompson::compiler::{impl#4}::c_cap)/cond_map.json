{
  "regex-automata/src/nfa/thompson/compiler.rs:1125:15:1125:47": [
    {
      "Match": {
        "match_source": "regex-automata/src/nfa/thompson/compiler.rs:1125:15:1125:47",
        "match_str": "self.config.get_which_captures()",
        "match_kind": {
          "Enum": [
            "All",
            "Implicit",
            "None"
          ]
        },
        "arms": {
          "regex-automata/src/nfa/thompson/compiler.rs:1130:13:1130:36": {
            "pat": {
              "pat_str": "WhichCaptures::Implicit",
              "kind": {
                "Enum": 1
              }
            },
            "guard": {
              "regex-automata/src/nfa/thompson/compiler.rs:1130:40:1130:49": [
                {
                  "Bool": {
                    "Binary": {
                      "kind": "Gt",
                      "expr": "index > 0",
                      "lhs": "index",
                      "rhs": "0",
                      "cmp_with_int": true
                    }
                  }
                }
              ]
            },
            "body_source": "regex-automata/src/nfa/thompson/compiler.rs:1130:53:1130:72"
          },
          "regex-automata/src/nfa/thompson/compiler.rs:1131:13:1131:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/compiler.rs:1131:18:1131:20"
          },
          "regex-automata/src/nfa/thompson/compiler.rs:1127:13:1127:32": {
            "pat": {
              "pat_str": "WhichCaptures::None",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/compiler.rs:1127:36:1127:55"
          }
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/compiler.rs:1134:21:1134:57": [
    {
      "Try": "self.add_capture_start(index, name)?"
    }
  ],
  "regex-automata/src/nfa/thompson/compiler.rs:1136:19:1136:47": [
    {
      "Try": "self.add_capture_end(index)?"
    }
  ],
  "regex-automata/src/nfa/thompson/compiler.rs:1138:9:1138:36": [
    {
      "Try": "self.patch(inner.end, end)?"
    }
  ],
  "regex-automata/src/nfa/thompson/compiler.rs:1137:9:1137:40": [
    {
      "Try": "self.patch(start, inner.start)?"
    }
  ],
  "regex-automata/src/nfa/thompson/compiler.rs:1130:40:1130:49": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "index > 0",
          "lhs": "index",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/compiler.rs:1135:21:1135:34": [
    {
      "Try": "self.c(expr)?"
    }
  ]
}