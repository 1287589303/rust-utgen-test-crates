{
  "regex-automata/src/dfa/dense.rs:2360:22:2360:40": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "1 <= needles.len()",
          "lhs": "1",
          "rhs": "needles.len()",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2354:20:2354:45": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "index >= dfa.accels.len()",
          "lhs": "index",
          "rhs": "dfa.accels.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2345:9:2345:31": [
    {
      "Try": "dfa.ms.validate(&dfa)?"
    }
  ],
  "regex-automata/src/dfa/dense.rs:2342:37:2342:70": [
    {
      "Try": "DFA::from_bytes_unchecked(slice)?"
    }
  ],
  "regex-automata/src/dfa/dense.rs:2343:9:2343:31": [
    {
      "Try": "dfa.tt.validate(&dfa)?"
    }
  ],
  "regex-automata/src/dfa/dense.rs:2346:9:2346:31": [
    {
      "Try": "dfa.accels.validate()?"
    }
  ],
  "regex-automata/src/dfa/dense.rs:2344:9:2344:31": [
    {
      "Try": "dfa.st.validate(&dfa)?"
    }
  ],
  "regex-automata/src/dfa/dense.rs:2349:22:2349:34": [
    {
      "For": {
        "iter_var": "state",
        "iter_range": "dfa.states()"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2352:16:2352:46": [
    {
      "Bool": {
        "Other": "dfa.is_accel_state(state.id())"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2360:44:2360:62": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "needles.len() <= 3",
          "lhs": "needles.len()",
          "rhs": "3",
          "cmp_with_int": true
        }
      }
    }
  ]
}