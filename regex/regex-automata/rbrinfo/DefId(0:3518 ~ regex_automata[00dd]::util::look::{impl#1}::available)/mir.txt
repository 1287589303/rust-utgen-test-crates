bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/look.rs:494:9-496:10)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/look.rs:494:12-494:40)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/look.rs:494:12-494:16)
  3: _4 = _1
    SourceInfo(regex-automata/src/util/look.rs:494:12-494:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:494:12-494:40)
      kind: _3 = util::look::LookSet::contains_word_unicode(move _4) -> [return: bb1, unwind: bb13]
  }
  preds []
  succs [bb1, bb13]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:494:12-494:40)
      kind: switchInt(move _3) -> [0: bb10, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/look.rs:494:39-494:40)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/util/look.rs:495:13-495:47)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/util/look.rs:495:13-495:47)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/util/look.rs:495:13-495:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:495:13-495:46)
      kind: _7 = util::look::UnicodeWordBoundaryError::check() -> [return: bb3, unwind: bb13]
  }
  preds [bb1]
  succs [bb3, bb13]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:495:13-495:47)
      kind: _6 = <core::result::Result<(), util::look::UnicodeWordBoundaryError> as core::ops::Try>::branch(move _7) -> [return: bb4, unwind: bb13]
  }
  preds [bb2]
  succs [bb4, bb13]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/look.rs:495:46-495:47)
  1: PlaceMention(_6)
    SourceInfo(regex-automata/src/util/look.rs:495:13-495:47)
  2: _8 = discriminant(_6)
    SourceInfo(regex-automata/src/util/look.rs:495:13-495:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:495:13-495:47)
      kind: switchInt(move _8) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _6)
    SourceInfo(regex-automata/src/util/look.rs:495:13-495:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:495:13-495:47)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:495:46-495:47)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/util/look.rs:495:13-495:47)
  1: _12 = ((_6 as Continue).0: ())
    SourceInfo(regex-automata/src/util/look.rs:495:13-495:47)
  2: _5 = _12
    SourceInfo(regex-automata/src/util/look.rs:495:13-495:47)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/util/look.rs:495:46-495:47)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/util/look.rs:495:47-495:48)
  5: StorageDead(_5)
    SourceInfo(regex-automata/src/util/look.rs:495:47-495:48)
  6: _2 = const ()
    SourceInfo(regex-automata/src/util/look.rs:494:41-496:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:494:9-496:10)
      kind: goto -> bb11
  }
  preds [bb4, bb6]
  succs [bb11]

bb8
  0: StorageLive(_9)
    SourceInfo(regex-automata/src/util/look.rs:495:46-495:47)
  1: _9 = move ((_6 as Break).0: core::result::Result<core::convert::Infallible, util::look::UnicodeWordBoundaryError>)
    SourceInfo(regex-automata/src/util/look.rs:495:46-495:47)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/util/look.rs:495:46-495:47)
  3: _11 = move _9
    SourceInfo(regex-automata/src/util/look.rs:495:46-495:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:495:13-495:47)
      kind: _0 = <core::result::Result<(), util::look::UnicodeWordBoundaryError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::look::UnicodeWordBoundaryError>>>::from_residual(move _11) -> [return: bb9, unwind: bb13]
  }
  preds [bb6]
  succs [bb9, bb13]

bb9
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/util/look.rs:495:46-495:47)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/util/look.rs:495:46-495:47)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/look.rs:495:47-495:48)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/util/look.rs:495:47-495:48)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/util/look.rs:496:9-496:10)
  5: StorageDead(_2)
    SourceInfo(regex-automata/src/util/look.rs:496:9-496:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:498:6-498:6)
      kind: goto -> bb12
  }
  preds [bb8]
  succs [bb12]

bb10
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/look.rs:494:39-494:40)
  1: _2 = const ()
    SourceInfo(regex-automata/src/util/look.rs:496:10-496:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:494:9-496:10)
      kind: goto -> bb11
  }
  preds [bb1]
  succs [bb11]

bb11
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/look.rs:496:9-496:10)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/util/look.rs:496:9-496:10)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/util/look.rs:497:12-497:14)
  3: _13 = ()
    SourceInfo(regex-automata/src/util/look.rs:497:12-497:14)
  4: _0 = core::result::Result::<(), util::look::UnicodeWordBoundaryError>::Ok(move _13)
    SourceInfo(regex-automata/src/util/look.rs:497:9-497:15)
  5: StorageDead(_13)
    SourceInfo(regex-automata/src/util/look.rs:497:14-497:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:498:6-498:6)
      kind: goto -> bb12
  }
  preds [bb7, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:498:6-498:6)
      kind: return
  }
  preds [bb9, bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:493:5-498:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb8]
  succs []

