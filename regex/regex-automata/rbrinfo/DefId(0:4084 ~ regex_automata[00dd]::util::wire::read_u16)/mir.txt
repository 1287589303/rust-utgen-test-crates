bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/wire.rs:761:9-761:14)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/wire.rs:761:26-761:62)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/wire.rs:761:26-761:51)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/wire.rs:761:31-761:51)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/util/wire.rs:761:26-761:31)
  5: _6 = &(*_1)
    SourceInfo(regex-automata/src/util/wire.rs:761:26-761:31)
  6: StorageLive(_7)
    SourceInfo(regex-automata/src/util/wire.rs:761:32-761:50)
  7: StorageLive(_8)
    SourceInfo(regex-automata/src/util/wire.rs:761:34-761:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:761:34-761:50)
      kind: _8 = core::mem::size_of::<u16>() -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: _7 = core::ops::RangeTo::<usize> { end: move _8 }
    SourceInfo(regex-automata/src/util/wire.rs:761:32-761:50)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/wire.rs:761:49-761:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:761:31-761:51)
      kind: _5 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _6, move _7) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: _4 = &(*_5)
    SourceInfo(regex-automata/src/util/wire.rs:761:26-761:51)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/wire.rs:761:50-761:51)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/wire.rs:761:50-761:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:761:26-761:62)
      kind: _3 = <&[u8] as core::convert::TryInto<[u8; 2]>>::try_into(move _4) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/wire.rs:761:61-761:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:761:26-761:71)
      kind: _2 = core::result::Result::<[u8; 2], core::array::TryFromSliceError>::unwrap(move _3) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/wire.rs:761:70-761:71)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/util/wire.rs:761:9-761:14)
  2: AscribeUserType(_2, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(regex-automata/src/util/wire.rs:761:16-761:23)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/util/wire.rs:761:71-761:72)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/util/wire.rs:762:24-762:29)
  5: _9 = _2
    SourceInfo(regex-automata/src/util/wire.rs:762:24-762:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:762:5-762:30)
      kind: _0 = core::num::<impl u16>::from_ne_bytes(move _9) -> [return: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/wire.rs:762:29-762:30)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/util/wire.rs:763:1-763:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:763:2-763:2)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:760:1-763:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

