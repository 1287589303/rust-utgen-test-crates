bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:910:9-916:10)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:910:13-910:47)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:910:13-910:22)
  3: _4 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:910:13-910:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:910:13-910:47)
      kind: _3 = meta::regex::RegexInfo::is_always_anchored_end(move _4) -> [return: bb1, unwind: bb22]
  }
  preds []
  succs [bb1, bb22]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:910:13-910:47)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:910:46-910:47)
  1: _2 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:916:10-916:10)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:916:9-916:10)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:916:9-916:10)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:925:9-931:10)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:925:12-925:48)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:925:12-925:21)
  7: _9 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:925:12-925:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:925:12-925:48)
      kind: _8 = meta::regex::RegexInfo::is_always_anchored_start(move _9) -> [return: bb5, unwind: bb22]
  }
  preds [bb1]
  succs [bb5, bb22]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:910:46-910:47)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:915:24-915:28)
  2: _6 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:915:24-915:28)
  3: _0 = core::result::Result::<meta::strategy::ReverseAnchored, meta::strategy::Core>::Err(move _6)
    SourceInfo(regex-automata/src/meta/strategy.rs:915:20-915:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:915:28-915:29)
      kind: drop(_6) -> [return: bb4, unwind: bb22]
  }
  preds [bb1]
  succs [bb4, bb22]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:915:28-915:29)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:916:9-916:10)
  2: StorageDead(_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:916:9-916:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb19
  }
  preds [bb3]
  succs [bb19]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:925:12-925:48)
      kind: switchInt(move _8) -> [0: bb8, otherwise: bb6]
  }
  preds [bb2]
  succs [bb6, bb8]

bb6
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:925:47-925:48)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:930:24-930:28)
  2: _11 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:930:24-930:28)
  3: _0 = core::result::Result::<meta::strategy::ReverseAnchored, meta::strategy::Core>::Err(move _11)
    SourceInfo(regex-automata/src/meta/strategy.rs:930:20-930:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:930:28-930:29)
      kind: drop(_11) -> [return: bb7, unwind: bb22]
  }
  preds [bb5]
  succs [bb7, bb22]

bb7
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:930:28-930:29)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:931:9-931:10)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:931:9-931:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb19
  }
  preds [bb6]
  succs [bb19]

bb8
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:925:47-925:48)
  1: _7 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:931:10-931:10)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:931:9-931:10)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:931:9-931:10)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:935:9-941:10)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:935:13-935:34)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:935:13-935:24)
  7: _14 = &(_1.7: meta::wrappers::Hybrid)
    SourceInfo(regex-automata/src/meta/strategy.rs:935:13-935:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:935:13-935:34)
      kind: _13 = meta::wrappers::Hybrid::is_some(move _14) -> [return: bb9, unwind: bb22]
  }
  preds [bb5]
  succs [bb9, bb22]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:935:13-935:34)
      kind: switchInt(move _13) -> [0: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11]

bb10
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:935:33-935:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:935:58-941:10)
      kind: goto -> bb16
  }
  preds [bb9]
  succs [bb16]

bb11
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:935:33-935:34)
  1: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:935:39-935:57)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:935:39-935:47)
  3: _16 = &(_1.8: meta::wrappers::DFA)
    SourceInfo(regex-automata/src/meta/strategy.rs:935:39-935:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:935:39-935:57)
      kind: _15 = meta::wrappers::DFA::is_some(move _16) -> [return: bb12, unwind: bb22]
  }
  preds [bb9]
  succs [bb12, bb22]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:935:39-935:57)
      kind: switchInt(move _15) -> [0: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14]

bb13
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:935:56-935:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:935:58-941:10)
      kind: goto -> bb16
  }
  preds [bb12]
  succs [bb16]

bb14
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:935:56-935:57)
  1: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:940:24-940:28)
  2: _18 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:940:24-940:28)
  3: _0 = core::result::Result::<meta::strategy::ReverseAnchored, meta::strategy::Core>::Err(move _18)
    SourceInfo(regex-automata/src/meta/strategy.rs:940:20-940:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:940:28-940:29)
      kind: drop(_18) -> [return: bb15, unwind: bb22]
  }
  preds [bb12]
  succs [bb15, bb22]

bb15
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:940:28-940:29)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:941:9-941:10)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:941:9-941:10)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:941:9-941:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb19
  }
  preds [bb14]
  succs [bb19]

bb16
  0: _12 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:941:10-941:10)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:941:9-941:10)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:941:9-941:10)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:941:9-941:10)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:942:12-942:36)
  5: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:942:30-942:34)
  6: _20 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:942:30-942:34)
  7: _19 = meta::strategy::ReverseAnchored { core: move _20 }
    SourceInfo(regex-automata/src/meta/strategy.rs:942:12-942:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:942:35-942:36)
      kind: drop(_20) -> [return: bb17, unwind: bb21]
  }
  preds [bb10, bb13]
  succs [bb17, bb21]

bb17
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:942:35-942:36)
  1: _0 = core::result::Result::<meta::strategy::ReverseAnchored, meta::strategy::Core>::Ok(move _19)
    SourceInfo(regex-automata/src/meta/strategy.rs:942:9-942:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:942:36-942:37)
      kind: drop(_19) -> [return: bb18, unwind: bb22]
  }
  preds [bb16]
  succs [bb18, bb22]

bb18
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:942:36-942:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:943:5-943:6)
      kind: drop(_1) -> [return: bb20, unwind: bb23]
  }
  preds [bb17]
  succs [bb20, bb23]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:943:5-943:6)
      kind: drop(_1) -> [return: bb20, unwind: bb23]
  }
  preds [bb4, bb7, bb15]
  succs [bb20, bb23]

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:943:6-943:6)
      kind: return
  }
  preds [bb18, bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:942:36-942:37)
      kind: drop(_19) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb16]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:943:5-943:6)
      kind: drop(_1) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb0, bb2, bb3, bb6, bb8, bb11, bb14, bb17, bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:909:5-943:6)
      kind: resume
  }
  preds [bb18, bb19, bb22]
  succs []

