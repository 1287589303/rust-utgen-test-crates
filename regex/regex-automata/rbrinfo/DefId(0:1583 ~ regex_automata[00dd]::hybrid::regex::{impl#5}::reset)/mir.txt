bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:660:9-660:41)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:660:9-660:21)
  2: _4 = &mut ((*_1).0: hybrid::dfa::Cache)
    SourceInfo(regex-automata/src/hybrid/regex.rs:660:9-660:21)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:660:28-660:40)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:660:28-660:40)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:660:28-660:30)
  6: _7 = &(*_2)
    SourceInfo(regex-automata/src/hybrid/regex.rs:660:28-660:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:660:28-660:40)
      kind: _6 = hybrid::regex::Regex::forward(move _7) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: _5 = &(*_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:660:28-660:40)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:660:39-660:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:660:9-660:41)
      kind: _3 = hybrid::dfa::Cache::reset(move _4, move _5) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:660:40-660:41)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:660:40-660:41)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:660:41-660:42)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:660:41-660:42)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:661:9-661:41)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:661:9-661:21)
  6: _9 = &mut ((*_1).1: hybrid::dfa::Cache)
    SourceInfo(regex-automata/src/hybrid/regex.rs:661:9-661:21)
  7: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/regex.rs:661:28-661:40)
  8: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/regex.rs:661:28-661:40)
  9: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/regex.rs:661:28-661:30)
  10: _12 = &(*_2)
    SourceInfo(regex-automata/src/hybrid/regex.rs:661:28-661:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:661:28-661:40)
      kind: _11 = hybrid::regex::Regex::reverse(move _12) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: _10 = &(*_11)
    SourceInfo(regex-automata/src/hybrid/regex.rs:661:28-661:40)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/regex.rs:661:39-661:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:661:9-661:41)
      kind: _8 = hybrid::dfa::Cache::reset(move _9, move _10) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/regex.rs:661:40-661:41)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:661:40-661:41)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/regex.rs:661:41-661:42)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:661:41-661:42)
  4: _0 = const ()
    SourceInfo(regex-automata/src/hybrid/regex.rs:659:41-662:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:662:6-662:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:659:5-662:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

