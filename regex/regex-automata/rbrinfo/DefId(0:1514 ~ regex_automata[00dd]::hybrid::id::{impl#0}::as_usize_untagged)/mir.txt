bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/hybrid/id.rs:216:9-216:34)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/id.rs:216:9-216:13)
  2: _3 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/id.rs:216:9-216:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/id.rs:216:9-216:34)
      kind: _2 = hybrid::id::LazyStateID::as_usize_unchecked(move _3) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/id.rs:216:33-216:34)
  1: _0 = BitAnd(move _2, const hybrid::id::LazyStateID::MAX)
    SourceInfo(regex-automata/src/hybrid/id.rs:216:9-216:53)
  2: StorageDead(_2)
    SourceInfo(regex-automata/src/hybrid/id.rs:216:52-216:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/id.rs:217:6-217:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/id.rs:215:5-217:6)
      kind: resume
  }
  preds [bb0]
  succs []

