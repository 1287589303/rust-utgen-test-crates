{
  "regex-automata/src/dfa/dense.rs:2582:12:2582:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "self.state_len() <= 2",
          "lhs": "self.state_len()",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2706:19:2706:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "cur_id >= next_norm_id",
          "lhs": "cur_id",
          "rhs": "next_norm_id",
          "cmp_with_int": false
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:21:53:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "(*left_val == *right_val)",
          "lhs": "*left_val",
          "rhs": "*right_val",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2789:21:2789:74": [
    {
      "Bool": {
        "Other": "prev.map_or(true, |p| self.tt.next_state_id(p) == id)"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:9:61:10": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15:51:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:13:52:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:14:52:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:24:52:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2788:28:2788:34": [
    {
      "For": {
        "iter_var": "(id, accel)",
        "iter_range": "accels"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2646:20:2646:60": [
    {
      "Bool": {
        "Other": "let Some(accel) = accels.remove(&cur_id)"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2747:19:2747:51": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "cur_id <= self.special.max_start",
          "lhs": "cur_id",
          "rhs": "self.special.max_start",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2715:24:2715:72": [
    {
      "Bool": {
        "Other": "let Some(accel2) = accels.remove(&next_start_id)"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2645:19:2645:51": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "cur_id >= self.special.min_match",
          "lhs": "cur_id",
          "rhs": "self.special.min_match",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2604:30:2604:60": [
    {
      "Bool": {
        "Other": "self.is_dead_state(state.id())"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2639:12:2639:22": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "cmatch > 0",
          "lhs": "cmatch",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2599:20:2599:51": [
    {
      "Bool": {
        "Other": "self.is_match_state(state.id())"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15:51:32": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15:51:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:13:52:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:14:52:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:24:52:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2592:16:2592:71": [
    {
      "Bool": {
        "Other": "let Some(accel) = state.accelerate(self.byte_classes())"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2712:24:2712:71": [
    {
      "Bool": {
        "Other": "let Some(accel2) = accels.remove(&next_norm_id)"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2639:26:2639:48": [
    {
      "Bool": {
        "Other": "self.special.matches()"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2702:47:2702:67": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.state_len() - 1",
          "lhs": "self.state_len()",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2601:27:2601:58": [
    {
      "Bool": {
        "Other": "self.is_start_state(state.id())"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2707:20:2707:60": [
    {
      "Bool": {
        "Other": "let Some(accel) = accels.remove(&cur_id)"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2699:12:2699:23": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "cnormal > 0",
          "lhs": "cnormal",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2741:12:2741:22": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "cstart > 0",
          "lhs": "cstart",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2605:30:2605:60": [
    {
      "Bool": {
        "Other": "self.is_quit_state(state.id())"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2611:12:2611:29": [
    {
      "Bool": {
        "Other": "accels.is_empty()"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2651:24:2651:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "cur_id != next_id",
          "lhs": "cur_id",
          "rhs": "next_id",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2748:20:2748:60": [
    {
      "Bool": {
        "Other": "let Some(accel) = accels.remove(&cur_id)"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2734:21:2734:49": [
    {
      "Bool": {
        "Other": "accels.contains_key(&cur_id)"
      }
    }
  ],
  "regex-automata/src/dfa/dense.rs:2591:22:2591:35": [
    {
      "For": {
        "iter_var": "state",
        "iter_range": "self.states()"
      }
    }
  ]
}