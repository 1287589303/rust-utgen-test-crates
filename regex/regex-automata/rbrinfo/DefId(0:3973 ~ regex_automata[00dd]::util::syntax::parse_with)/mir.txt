bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/syntax.rs:87:9-87:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:87:23-87:43)
      kind: _3 = regex_syntax::ParserBuilder::new() -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/syntax.rs:87:9-87:20)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/syntax.rs:88:5-88:31)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/syntax.rs:88:5-88:11)
  3: _5 = &(*_2)
    SourceInfo(regex-automata/src/util/syntax.rs:88:5-88:11)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/util/syntax.rs:88:18-88:30)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/util/syntax.rs:88:18-88:30)
  6: _7 = &mut _3
    SourceInfo(regex-automata/src/util/syntax.rs:88:18-88:30)
  7: _6 = &mut (*_7)
    SourceInfo(regex-automata/src/util/syntax.rs:88:18-88:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:88:5-88:31)
      kind: _4 = util::syntax::Config::apply(move _5, move _6) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/syntax.rs:88:30-88:31)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/syntax.rs:88:30-88:31)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/util/syntax.rs:88:31-88:32)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/util/syntax.rs:88:31-88:32)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/util/syntax.rs:89:5-89:20)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/util/syntax.rs:89:5-89:20)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/util/syntax.rs:89:5-89:12)
  7: _10 = &_3
    SourceInfo(regex-automata/src/util/syntax.rs:89:5-89:12)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:89:5-89:20)
      kind: _9 = regex_syntax::ParserBuilder::build(move _10) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: _8 = &mut _9
    SourceInfo(regex-automata/src/util/syntax.rs:89:5-89:20)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/util/syntax.rs:89:19-89:20)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/util/syntax.rs:89:27-89:34)
  3: _11 = &(*_1)
    SourceInfo(regex-automata/src/util/syntax.rs:89:27-89:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:89:5-89:35)
      kind: _0 = regex_syntax::Parser::parse(move _8, move _11) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/util/syntax.rs:89:34-89:35)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/syntax.rs:89:34-89:35)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/util/syntax.rs:90:1-90:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:90:1-90:2)
      kind: drop(_9) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/syntax.rs:90:1-90:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:90:2-90:2)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:90:1-90:2)
      kind: drop(_9) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:86:1-90:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb6]
  succs []

