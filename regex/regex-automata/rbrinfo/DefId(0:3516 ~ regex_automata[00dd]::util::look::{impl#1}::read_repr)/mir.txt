bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/look.rs:459:13-459:17)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/look.rs:459:39-459:69)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/look.rs:459:39-459:60)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/look.rs:459:39-459:49)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/util/look.rs:459:44-459:49)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/util/look.rs:459:39-459:44)
  6: _7 = &(*_1)
    SourceInfo(regex-automata/src/util/look.rs:459:39-459:44)
  7: StorageLive(_8)
    SourceInfo(regex-automata/src/util/look.rs:459:45-459:48)
  8: _8 = core::ops::RangeTo::<usize> { end: const 4_usize }
    SourceInfo(regex-automata/src/util/look.rs:459:45-459:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:459:44-459:49)
      kind: _6 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _7, move _8) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: _5 = &(*_6)
    SourceInfo(regex-automata/src/util/look.rs:459:39-459:49)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/look.rs:459:48-459:49)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/util/look.rs:459:48-459:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:459:39-459:60)
      kind: _4 = <&[u8] as core::convert::TryInto<[u8; 4]>>::try_into(move _5) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/look.rs:459:59-459:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:459:39-459:69)
      kind: _3 = core::result::Result::<[u8; 4], core::array::TryFromSliceError>::unwrap(move _4) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/look.rs:459:68-459:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:459:20-459:70)
      kind: _2 = core::num::<impl u32>::from_ne_bytes(move _3) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/look.rs:459:69-459:70)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/util/look.rs:459:13-459:17)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/look.rs:459:70-459:71)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/util/look.rs:460:19-460:23)
  4: _9 = _2
    SourceInfo(regex-automata/src/util/look.rs:460:19-460:23)
  5: _0 = util::look::LookSet { bits: move _9 }
    SourceInfo(regex-automata/src/util/look.rs:460:9-460:25)
  6: StorageDead(_9)
    SourceInfo(regex-automata/src/util/look.rs:460:24-460:25)
  7: StorageDead(_2)
    SourceInfo(regex-automata/src/util/look.rs:461:5-461:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:461:6-461:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/look.rs:458:5-461:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

