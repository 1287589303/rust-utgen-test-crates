bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/pool.rs:496:17-496:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:496:30-496:65)
      kind: _2 = std::vec::Vec::<util::pool::inner::CacheLine<std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>>>::with_capacity(const util::pool::inner::MAX_POOL_STACKS) -> [return: bb1, unwind: bb30]
  }
  preds []
  succs [bb1, bb30]

bb1
  0: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/util/pool.rs:496:17-496:27)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/pool.rs:497:13-499:14)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/util/pool.rs:497:25-497:42)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/util/pool.rs:497:25-497:31)
  6: _7 = &_2
    SourceInfo(regex-automata/src/util/pool.rs:497:25-497:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:497:25-497:42)
      kind: _6 = std::vec::Vec::<util::pool::inner::CacheLine<std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>>>::capacity(move _7) -> [return: bb2, unwind: bb29]
  }
  preds [bb0]
  succs [bb2, bb29]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/pool.rs:497:41-497:42)
  1: _5 = core::ops::Range::<usize> { start: const 0_usize, end: move _6 }
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/pool.rs:497:41-497:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
      kind: _4 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _5) -> [return: bb3, unwind: bb29]
  }
  preds [bb1]
  succs [bb3, bb29]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/pool.rs:497:41-497:42)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  3: _8 = move _4
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:497:13-499:14)
      kind: goto -> bb4
  }
  preds [bb2]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:497:13-499:14)
      kind: falseUnwind -> [real: bb5, unwind: bb29]
  }
  preds [bb3, bb14]
  succs [bb5, bb29]

bb5
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  4: _13 = &mut _8
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  5: _12 = &mut (*_13)
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
      kind: _11 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _12) -> [return: bb6, unwind: bb29]
  }
  preds [bb4]
  succs [bb6, bb29]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/pool.rs:497:41-497:42)
  1: PlaceMention(_11)
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  2: _14 = discriminant(_11)
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
      kind: switchInt(move _14) -> [0: bb8, 1: bb9, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _11)
    SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:497:22-497:42)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:497:13-499:14)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_16)
    SourceInfo(regex-automata/src/util/pool.rs:498:17-498:59)
  1: StorageLive(_17)
    SourceInfo(regex-automata/src/util/pool.rs:498:17-498:23)
  2: _17 = &mut _2
    SourceInfo(regex-automata/src/util/pool.rs:498:17-498:23)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/util/pool.rs:498:29-498:58)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/util/pool.rs:498:39-498:57)
  5: StorageLive(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _20 = std::vec::Vec::<std::boxed::Box<T>>::new() -> [return: bb11, unwind: bb29]
  }
  preds [bb6, bb8]
  succs [bb11, bb29]

bb10
  0: _3 = const ()
    SourceInfo(regex-automata/src/util/pool.rs:497:13-499:14)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/util/pool.rs:499:13-499:14)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/util/pool.rs:499:13-499:14)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/util/pool.rs:499:13-499:14)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/util/pool.rs:499:13-499:14)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/util/pool.rs:499:13-499:14)
  6: StorageDead(_3)
    SourceInfo(regex-automata/src/util/pool.rs:499:13-499:14)
  7: StorageLive(_21)
    SourceInfo(regex-automata/src/util/pool.rs:500:17-500:22)
  8: StorageLive(_22)
    SourceInfo(regex-automata/src/util/pool.rs:500:42-500:59)
  9: StorageLive(_23)
    SourceInfo(regex-automata/src/util/pool.rs:500:42-500:59)
  10: _23 = const {alloc48: &usize}
    SourceInfo(regex-automata/src/util/pool.rs:500:42-500:59)
  11: _22 = (*_23)
    SourceInfo(regex-automata/src/util/pool.rs:500:42-500:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:500:25-500:60)
      kind: _21 = core::sync::atomic::AtomicUsize::new(move _22) -> [return: bb15, unwind: bb29]
  }
  preds [bb8]
  succs [bb15, bb29]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:498:39-498:57)
      kind: _19 = std::sync::Mutex::<std::vec::Vec<std::boxed::Box<T>>>::new(move _20) -> [return: bb12, unwind: bb28]
  }
  preds [bb9]
  succs [bb12, bb28]

bb12
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/util/pool.rs:498:56-498:57)
  1: _18 = util::pool::inner::CacheLine::<std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>>(move _19)
    SourceInfo(regex-automata/src/util/pool.rs:498:29-498:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:498:57-498:58)
      kind: drop(_19) -> [return: bb13, unwind: bb27]
  }
  preds [bb11]
  succs [bb13, bb27]

bb13
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/util/pool.rs:498:57-498:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:498:17-498:59)
      kind: _16 = std::vec::Vec::<util::pool::inner::CacheLine<std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>>>::push(move _17, move _18) -> [return: bb14, unwind: bb27]
  }
  preds [bb12]
  succs [bb14, bb27]

bb14
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/util/pool.rs:498:58-498:59)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/util/pool.rs:498:58-498:59)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/util/pool.rs:498:59-498:60)
  3: _10 = const ()
    SourceInfo(regex-automata/src/util/pool.rs:497:43-499:14)
  4: StorageDead(_13)
    SourceInfo(regex-automata/src/util/pool.rs:499:13-499:14)
  5: StorageDead(_11)
    SourceInfo(regex-automata/src/util/pool.rs:499:13-499:14)
  6: StorageDead(_10)
    SourceInfo(regex-automata/src/util/pool.rs:499:13-499:14)
  7: _9 = const ()
    SourceInfo(regex-automata/src/util/pool.rs:497:13-499:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:497:13-499:14)
      kind: goto -> bb4
  }
  preds [bb13]
  succs [bb4]

bb15
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/util/pool.rs:500:59-500:60)
  1: FakeRead(ForLet(None), _21)
    SourceInfo(regex-automata/src/util/pool.rs:500:17-500:22)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/util/pool.rs:500:60-500:61)
  3: StorageLive(_24)
    SourceInfo(regex-automata/src/util/pool.rs:501:17-501:26)
  4: StorageLive(_25)
    SourceInfo(regex-automata/src/util/pool.rs:501:45-501:49)
  5: _25 = core::option::Option::<T>::None
    SourceInfo(regex-automata/src/util/pool.rs:501:45-501:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:501:29-501:50)
      kind: _24 = core::cell::UnsafeCell::<core::option::Option<T>>::new(move _25) -> [return: bb16, unwind: bb26]
  }
  preds [bb10]
  succs [bb16, bb26]

bb16
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/util/pool.rs:501:49-501:50)
  1: FakeRead(ForLet(None), _24)
    SourceInfo(regex-automata/src/util/pool.rs:501:17-501:26)
  2: StorageLive(_26)
    SourceInfo(regex-automata/src/util/pool.rs:502:20-502:26)
  3: _26 = move _1
    SourceInfo(regex-automata/src/util/pool.rs:502:20-502:26)
  4: StorageLive(_27)
    SourceInfo(regex-automata/src/util/pool.rs:502:28-502:34)
  5: _27 = move _2
    SourceInfo(regex-automata/src/util/pool.rs:502:28-502:34)
  6: StorageLive(_28)
    SourceInfo(regex-automata/src/util/pool.rs:502:36-502:41)
  7: _28 = move _21
    SourceInfo(regex-automata/src/util/pool.rs:502:36-502:41)
  8: StorageLive(_29)
    SourceInfo(regex-automata/src/util/pool.rs:502:43-502:52)
  9: _29 = move _24
    SourceInfo(regex-automata/src/util/pool.rs:502:43-502:52)
  10: _0 = util::pool::inner::Pool::<T, F> { create: move _26, stacks: move _27, owner: move _28, owner_val: move _29 }
    SourceInfo(regex-automata/src/util/pool.rs:502:13-502:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:502:53-502:54)
      kind: drop(_29) -> [return: bb17, unwind: bb23]
  }
  preds [bb15]
  succs [bb17, bb23]

bb17
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/util/pool.rs:502:53-502:54)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/util/pool.rs:502:53-502:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:502:53-502:54)
      kind: drop(_27) -> [return: bb18, unwind: bb24]
  }
  preds [bb16]
  succs [bb18, bb24]

bb18
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/util/pool.rs:502:53-502:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:502:53-502:54)
      kind: drop(_26) -> [return: bb19, unwind: bb25]
  }
  preds [bb17]
  succs [bb19, bb25]

bb19
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/util/pool.rs:502:53-502:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:503:9-503:10)
      kind: drop(_24) -> [return: bb20, unwind: bb29]
  }
  preds [bb18]
  succs [bb20, bb29]

bb20
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/util/pool.rs:503:9-503:10)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/util/pool.rs:503:9-503:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:503:9-503:10)
      kind: drop(_2) -> [return: bb21, unwind: bb30]
  }
  preds [bb19]
  succs [bb21, bb30]

bb21
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/util/pool.rs:503:9-503:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:503:9-503:10)
      kind: drop(_1) -> [return: bb22, unwind: bb31]
  }
  preds [bb20]
  succs [bb22, bb31]

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:503:10-503:10)
      kind: return
  }
  preds [bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:502:53-502:54)
      kind: drop(_27) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb16]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:502:53-502:54)
      kind: drop(_26) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb17, bb23]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:503:9-503:10)
      kind: drop(_24) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb18, bb24]
  succs [bb29]

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:501:49-501:50)
      kind: drop(_25) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb29]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:498:58-498:59)
      kind: drop(_18) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb12, bb13]
  succs [bb29]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:498:56-498:57)
      kind: drop(_20) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:503:9-503:10)
      kind: drop(_2) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb4, bb5, bb9, bb10, bb19, bb25, bb26, bb27, bb28]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:503:9-503:10)
      kind: drop(_1) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb0, bb20, bb29]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:457:9-503:10)
      kind: resume
  }
  preds [bb21, bb30]
  succs []

