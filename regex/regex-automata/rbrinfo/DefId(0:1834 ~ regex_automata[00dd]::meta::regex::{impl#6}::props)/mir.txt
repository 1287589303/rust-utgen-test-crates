bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:1940:9-1940:22)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1940:9-1940:22)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1940:9-1940:22)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1940:10-1940:22)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1940:10-1940:16)
  5: _6 = &((*_1).0: std::sync::Arc<meta::regex::RegexInfoI>)
    SourceInfo(regex-automata/src/meta/regex.rs:1940:10-1940:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1940:10-1940:22)
      kind: _5 = <std::sync::Arc<meta::regex::RegexInfoI> as core::ops::Deref>::deref(move _6) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1940:15-1940:16)
  1: _4 = &((*_5).1: std::vec::Vec<regex_syntax::hir::Properties>)
    SourceInfo(regex-automata/src/meta/regex.rs:1940:9-1940:22)
  2: _3 = &(*_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1940:9-1940:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1940:9-1940:22)
      kind: _2 = <std::vec::Vec<regex_syntax::hir::Properties> as core::ops::Deref>::deref(move _3) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: _0 = &(*_2)
    SourceInfo(regex-automata/src/meta/regex.rs:1940:9-1940:22)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1940:21-1940:22)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1941:5-1941:6)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1941:5-1941:6)
  4: StorageDead(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:1941:5-1941:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1941:6-1941:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1939:5-1941:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

