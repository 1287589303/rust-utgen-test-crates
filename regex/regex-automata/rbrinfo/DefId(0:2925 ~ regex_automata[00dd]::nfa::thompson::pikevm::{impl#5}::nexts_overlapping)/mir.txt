bb0
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:13-1505:22)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:25-1505:51)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:25-1505:39)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:25-1505:39)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:25-1505:29)
  5: _12 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:25-1505:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:25-1505:39)
      kind: _11 = nfa::thompson::pikevm::PikeVM::get_nfa(move _12) -> [return: bb1, unwind: bb34]
  }
  preds []
  succs [bb1, bb34]

bb1
  0: _10 = &(*_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:25-1505:39)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:38-1505:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:25-1505:51)
      kind: _9 = nfa::thompson::nfa::NFA::has_empty(move _10) -> [return: bb2, unwind: bb34]
  }
  preds [bb0]
  succs [bb2, bb34]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:25-1505:51)
      kind: switchInt(move _9) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:50-1505:51)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:50-1505:51)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:55-1505:69)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:55-1505:69)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:55-1505:59)
  5: _15 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:55-1505:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:55-1505:69)
      kind: _14 = nfa::thompson::pikevm::PikeVM::get_nfa(move _15) -> [return: bb5, unwind: bb34]
  }
  preds [bb2]
  succs [bb5, bb34]

bb4
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:50-1505:51)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:50-1505:51)
  2: _8 = const false
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:25-1505:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:25-1505:79)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb5
  0: _13 = &(*_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:55-1505:69)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:68-1505:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:55-1505:79)
      kind: _8 = nfa::thompson::nfa::NFA::is_utf8(move _13) -> [return: bb6, unwind: bb34]
  }
  preds [bb3]
  succs [bb6, bb34]

bb6
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:78-1505:79)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:78-1505:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:25-1505:79)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:78-1505:79)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1505:13-1505:22)
  2: PlaceMention((*_3))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1506:60-1506:65)
  3: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1506:28-1506:35)
  4: _16 = &((*_3).0: util::sparse_set::SparseSet)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1506:28-1506:35)
  5: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1506:37-1506:55)
  6: _17 = &mut ((*_3).1: nfa::thompson::pikevm::SlotTable)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1506:37-1506:55)
  7: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
  8: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
  9: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:23)
  10: _20 = &(*_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
      kind: _19 = util::sparse_set::SparseSet::iter(move _20) -> [return: bb8, unwind: bb34]
  }
  preds [bb4, bb6]
  succs [bb8, bb34]

bb8
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:29-1507:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
      kind: _18 = <util::sparse_set::SparseSetIter<'_> as core::iter::IntoIterator>::into_iter(move _19) -> [return: bb9, unwind: bb34]
  }
  preds [bb7]
  succs [bb9, bb34]

bb9
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:29-1507:30)
  1: PlaceMention(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
  3: _21 = move _18
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:9-1527:10)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:9-1527:10)
      kind: falseUnwind -> [real: bb11, unwind: bb34]
  }
  preds [bb9, bb29, bb33]
  succs [bb11, bb34]

bb11
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
  1: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
  4: _26 = &mut _21
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
  5: _25 = &mut (*_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
      kind: _24 = <util::sparse_set::SparseSetIter<'_> as core::iter::Iterator>::next(move _25) -> [return: bb12, unwind: bb34]
  }
  preds [bb10]
  succs [bb12, bb34]

bb12
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:29-1507:30)
  1: PlaceMention(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
  2: _27 = discriminant(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
      kind: switchInt(move _27) -> [0: bb14, 1: bb15, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:20-1507:30)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:9-1527:10)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:13-1507:16)
  1: _29 = ((_24 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:13-1507:16)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:17-1508:20)
  3: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:29-1508:79)
  4: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:29-1508:33)
  5: _32 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:29-1508:33)
  6: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:39-1508:44)
  7: _33 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:39-1508:44)
  8: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:46-1508:56)
  9: _34 = &mut (*_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:46-1508:56)
  10: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:58-1508:62)
  11: _35 = &mut (*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:58-1508:62)
  12: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:64-1508:69)
  13: _36 = &(*_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:64-1508:69)
  14: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:71-1508:73)
  15: _37 = _6
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:71-1508:73)
  16: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:75-1508:78)
  17: _38 = _29
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:75-1508:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:29-1508:79)
      kind: _31 = nfa::thompson::pikevm::PikeVM::next(move _32, move _33, move _34, move _35, move _36, move _37, move _38) -> [return: bb17, unwind: bb34]
  }
  preds [bb12, bb14]
  succs [bb17, bb34]

bb16
  0: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:9-1527:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:9-1527:10)
      kind: goto -> bb31
  }
  preds [bb14]
  succs [bb31]

bb17
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:78-1508:79)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:78-1508:79)
  2: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:78-1508:79)
  3: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:78-1508:79)
  4: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:78-1508:79)
  5: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:78-1508:79)
  6: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:78-1508:79)
  7: PlaceMention(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:29-1508:79)
  8: _39 = discriminant(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:29-1508:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:23-1508:79)
      kind: switchInt(move _39) -> [0: bb19, 1: bb20, otherwise: bb18]
  }
  preds [bb15]
  succs [bb18, bb19, bb20]

bb18
  0: FakeRead(ForMatchedPlace(None), _31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:29-1508:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:29-1508:79)
      kind: unreachable
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1510:17-1510:21)
      kind: falseEdge -> [real: bb32, imaginary: bb20]
  }
  preds [bb17]
  succs [bb20, bb32]

bb20
  0: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1511:22-1511:25)
  1: _41 = ((_31 as Some).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1511:22-1511:25)
  2: _30 = _41
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1511:30-1511:33)
  3: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1511:32-1511:33)
  4: FakeRead(ForLet(None), _30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1508:17-1508:20)
  5: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1512:14-1512:15)
  6: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:13-1522:14)
  7: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:16-1520:25)
  8: _43 = _8
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:16-1520:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:16-1520:25)
      kind: switchInt(move _43) -> [0: bb25, otherwise: bb21]
  }
  preds [bb17, bb19]
  succs [bb21, bb25]

bb21
  0: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:30-1520:56)
  1: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:30-1520:35)
  2: _45 = &(*_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:30-1520:35)
  3: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:53-1520:55)
  4: _46 = _6
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:53-1520:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:30-1520:56)
      kind: _44 = util::search::Input::<'_>::is_char_boundary(move _45, move _46) -> [return: bb22, unwind: bb34]
  }
  preds [bb20]
  succs [bb22, bb34]

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:30-1520:56)
      kind: switchInt(move _44) -> [0: bb24, otherwise: bb23]
  }
  preds [bb21]
  succs [bb23, bb24]

bb23
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:55-1520:56)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:55-1520:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:57-1522:14)
      kind: goto -> bb25
  }
  preds [bb22]
  succs [bb25]

bb24
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:55-1520:56)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1520:55-1520:56)
  2: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1522:13-1522:14)
  3: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1522:13-1522:14)
  4: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1522:13-1522:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb33
  }
  preds [bb22]
  succs [bb33]

bb25
  0: _42 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1522:14-1522:14)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1522:13-1522:14)
  2: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1522:13-1522:14)
  3: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1522:13-1522:14)
  4: StorageLive(_48)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1523:21-1523:43)
  5: StorageLive(_49)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1523:21-1523:27)
  6: _49 = &mut (*_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1523:21-1523:27)
  7: StorageLive(_50)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1523:39-1523:42)
  8: _50 = _30
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1523:39-1523:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1523:21-1523:43)
      kind: _48 = util::search::PatternSet::try_insert(move _49, move _50) -> [return: bb26, unwind: bb34]
  }
  preds [bb20, bb23]
  succs [bb26, bb34]

bb26
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1523:42-1523:43)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1523:42-1523:43)
  2: PlaceMention(_48)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1523:21-1523:43)
  3: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1523:43-1523:44)
  4: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1524:17-1524:73)
  5: StorageLive(_52)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1524:17-1524:45)
  6: StorageLive(_53)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1524:17-1524:45)
  7: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1524:17-1524:28)
  8: _54 = &((*_1).0: nfa::thompson::pikevm::Config)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1524:17-1524:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1524:17-1524:45)
      kind: _53 = nfa::thompson::pikevm::Config::get_match_kind(move _54) -> [return: bb27, unwind: bb34]
  }
  preds [bb25]
  succs [bb27, bb34]

bb27
  0: _52 = &_53
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1524:17-1524:45)
  1: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1524:44-1524:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1524:17-1524:73)
      kind: _51 = util::search::MatchKind::continue_past_first_match(move _52) -> [return: bb28, unwind: bb34]
  }
  preds [bb26]
  succs [bb28, bb34]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1524:17-1524:73)
      kind: switchInt(move _51) -> [0: bb30, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb30]

bb29
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1524:72-1524:73)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1524:72-1524:73)
  2: _23 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1526:14-1526:14)
  3: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1526:13-1526:14)
  4: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  5: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  6: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  7: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  8: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  9: _22 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:9-1527:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1507:9-1527:10)
      kind: goto -> bb10
  }
  preds [bb28]
  succs [bb10]

bb30
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1524:72-1524:73)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1524:72-1524:73)
  2: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1525:17-1525:22)
  3: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1526:13-1526:14)
  4: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  5: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb31
  }
  preds [bb28]
  succs [bb31]

bb31
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  3: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  4: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  5: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1528:5-1528:6)
  6: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1528:5-1528:6)
  7: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1528:5-1528:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1528:6-1528:6)
      kind: return
  }
  preds [bb16, bb30]
  succs []

bb32
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1512:14-1512:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb33
  }
  preds [bb19]
  succs [bb33]

bb33
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  2: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1527:9-1527:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb10
  }
  preds [bb24, bb32]
  succs [bb10]

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1495:5-1528:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb7, bb8, bb10, bb11, bb15, bb21, bb25, bb26, bb27]
  succs []

