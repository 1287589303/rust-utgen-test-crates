bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/start.rs:142:13-142:24)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/start.rs:142:27-144:28)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/start.rs:142:27-143:21)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/start.rs:142:27-142:32)
  4: _5 = &(*_1)
    SourceInfo(regex-automata/src/util/start.rs:142:27-142:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:142:27-143:21)
      kind: _4 = util::search::Input::<'_>::start(move _5) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/start.rs:143:20-143:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:142:27-144:28)
      kind: _3 = core::num::<impl usize>::checked_sub(move _4, const 1_usize) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/start.rs:144:27-144:28)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/util/start.rs:145:23-145:59)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/util/start.rs:145:23-145:59)
  3: _7 = &(*_1)
    SourceInfo(regex-automata/src/util/start.rs:145:23-145:59)
  4: _6 = {closure@regex-automata/src/util/start.rs:145:23: 145:26} { input: move _7 }
    SourceInfo(regex-automata/src/util/start.rs:145:23-145:59)
  5: StorageDead(_7)
    SourceInfo(regex-automata/src/util/start.rs:145:25-145:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:142:27-145:60)
      kind: _2 = core::option::Option::<usize>::and_then::<u8, {closure@regex-automata/src/util/start.rs:145:23: 145:26}>(move _3, move _6) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/start.rs:145:59-145:60)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/util/start.rs:145:59-145:60)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/util/start.rs:142:13-142:24)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/util/start.rs:146:18-146:29)
  4: _8 = _2
    SourceInfo(regex-automata/src/util/start.rs:146:18-146:29)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/util/start.rs:146:41-146:61)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/util/start.rs:146:41-146:46)
  7: _10 = &(*_1)
    SourceInfo(regex-automata/src/util/start.rs:146:41-146:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:146:41-146:61)
      kind: _9 = util::search::Input::<'_>::get_anchored(move _10) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/start.rs:146:60-146:61)
  1: _0 = util::start::Config { look_behind: move _8, anchored: move _9 }
    SourceInfo(regex-automata/src/util/start.rs:146:9-146:63)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/util/start.rs:146:62-146:63)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/util/start.rs:146:62-146:63)
  4: StorageDead(_2)
    SourceInfo(regex-automata/src/util/start.rs:147:5-147:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:147:6-147:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:141:5-147:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

