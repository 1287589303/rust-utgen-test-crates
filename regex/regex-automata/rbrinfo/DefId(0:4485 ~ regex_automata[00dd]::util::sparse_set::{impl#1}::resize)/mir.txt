bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/sparse_set.rs:130:9-134:10)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/sparse_set.rs:131:13-131:43)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/sparse_set.rs:131:13-131:25)
  3: _5 = _2
    SourceInfo(regex-automata/src/util/sparse_set.rs:131:13-131:25)
  4: _4 = Le(move _5, const util::primitives::StateID::LIMIT)
    SourceInfo(regex-automata/src/util/sparse_set.rs:131:13-131:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:131:13-131:43)
      kind: switchInt(move _4) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/sparse_set.rs:131:42-131:43)
  1: _3 = const ()
    SourceInfo(regex-automata/src/util/sparse_set.rs:134:10-134:10)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/sparse_set.rs:134:9-134:10)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/util/sparse_set.rs:134:9-134:10)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/util/sparse_set.rs:135:9-135:21)
  5: StorageLive(_20)
    SourceInfo(regex-automata/src/util/sparse_set.rs:135:9-135:13)
  6: _20 = &mut (*_1)
    SourceInfo(regex-automata/src/util/sparse_set.rs:135:9-135:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:135:9-135:21)
      kind: _19 = util::sparse_set::SparseSet::clear(move _20) -> [return: bb5, unwind: bb8]
  }
  preds [bb0]
  succs [bb5, bb8]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/sparse_set.rs:131:42-131:43)
  1: StorageLive(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  2: StorageLive(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/util/sparse_set.rs:132:13-132:53)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/util/sparse_set.rs:132:13-132:53)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/util/sparse_set.rs:132:13-132:53)
  6: _11 = [const "sparse set capacity cannot excced "]
    SourceInfo(regex-automata/src/util/sparse_set.rs:132:13-132:53)
  7: _10 = &_11
    SourceInfo(regex-automata/src/util/sparse_set.rs:132:13-132:53)
  8: _9 = &(*_10)
    SourceInfo(regex-automata/src/util/sparse_set.rs:132:13-132:53)
  9: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  10: StorageLive(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  12: StorageLive(_15)
    SourceInfo(regex-automata/src/util/sparse_set.rs:132:48-132:52)
  13: StorageLive(_16)
    SourceInfo(regex-automata/src/util/sparse_set.rs:133:13-133:27)
  14: StorageLive(_17)
    SourceInfo(regex-automata/src/util/sparse_set.rs:133:13-133:27)
  15: StorageLive(_18)
    SourceInfo(regex-automata/src/util/sparse_set.rs:133:13-133:27)
  16: _18 = const util::primitives::StateID::LIMIT
    SourceInfo(regex-automata/src/util/sparse_set.rs:133:13-133:27)
  17: _17 = &_18
    SourceInfo(regex-automata/src/util/sparse_set.rs:133:13-133:27)
  18: _16 = &(*_17)
    SourceInfo(regex-automata/src/util/sparse_set.rs:133:13-133:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:132:48-132:52)
      kind: _15 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(move _16) -> [return: bb3, unwind: bb8]
  }
  preds [bb0]
  succs [bb3, bb8]

bb3
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/util/sparse_set.rs:132:51-132:52)
  1: _14 = [move _15]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: _13 = &_14
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: _12 = &(*_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _8 = core::fmt::Arguments::<'_>::new_v1::<1, 1>(move _9, move _12) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _7 = core::panicking::panic_fmt(move _8) -> bb8
  }
  preds [bb3]
  succs [bb8]

bb5
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/util/sparse_set.rs:135:20-135:21)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/util/sparse_set.rs:135:21-135:22)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/util/sparse_set.rs:136:9-136:55)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/util/sparse_set.rs:136:9-136:19)
  4: _22 = &mut ((*_1).1: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/util/sparse_set.rs:136:9-136:19)
  5: StorageLive(_23)
    SourceInfo(regex-automata/src/util/sparse_set.rs:136:27-136:39)
  6: _23 = _2
    SourceInfo(regex-automata/src/util/sparse_set.rs:136:27-136:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:136:9-136:55)
      kind: _21 = std::vec::Vec::<util::primitives::StateID>::resize(move _22, move _23, const util::primitives::StateID::ZERO) -> [return: bb6, unwind: bb8]
  }
  preds [bb1]
  succs [bb6, bb8]

bb6
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/util/sparse_set.rs:136:54-136:55)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/util/sparse_set.rs:136:54-136:55)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/util/sparse_set.rs:136:55-136:56)
  3: StorageLive(_24)
    SourceInfo(regex-automata/src/util/sparse_set.rs:137:9-137:56)
  4: StorageLive(_25)
    SourceInfo(regex-automata/src/util/sparse_set.rs:137:9-137:20)
  5: _25 = &mut ((*_1).2: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/util/sparse_set.rs:137:9-137:20)
  6: StorageLive(_26)
    SourceInfo(regex-automata/src/util/sparse_set.rs:137:28-137:40)
  7: _26 = _2
    SourceInfo(regex-automata/src/util/sparse_set.rs:137:28-137:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:137:9-137:56)
      kind: _24 = std::vec::Vec::<util::primitives::StateID>::resize(move _25, move _26, const util::primitives::StateID::ZERO) -> [return: bb7, unwind: bb8]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/util/sparse_set.rs:137:55-137:56)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/util/sparse_set.rs:137:55-137:56)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/util/sparse_set.rs:137:56-137:57)
  3: _0 = const ()
    SourceInfo(regex-automata/src/util/sparse_set.rs:129:58-138:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:138:6-138:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:129:5-138:6)
      kind: resume
  }
  preds [bb1, bb2, bb3, bb4, bb5, bb6]
  succs []

