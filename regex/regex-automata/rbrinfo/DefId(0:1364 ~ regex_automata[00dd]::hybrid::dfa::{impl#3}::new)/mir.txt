bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1876:13-1876:22)
  1: StorageLive(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _3 = std::vec::Vec::<hybrid::id::LazyStateID>::new() -> [return: bb1, unwind: bb30]
  }
  preds []
  succs [bb1, bb30]

bb1
  0: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _4 = std::vec::Vec::<hybrid::id::LazyStateID>::new() -> [return: bb2, unwind: bb29]
  }
  preds [bb0]
  succs [bb2, bb29]

bb2
  0: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _5 = std::vec::Vec::<util::determinize::state::State>::new() -> [return: bb3, unwind: bb28]
  }
  preds [bb1]
  succs [bb3, bb28]

bb3
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1880:27-1880:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1880:27-1880:42)
      kind: _6 = std::collections::HashMap::<util::determinize::state::State, hybrid::id::LazyStateID>::new() -> [return: bb4, unwind: bb27]
  }
  preds [bb2]
  succs [bb4, bb27]

bb4
  0: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:22-1881:67)
  1: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:38-1881:66)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:38-1881:60)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:38-1881:60)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:38-1881:51)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:38-1881:51)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:38-1881:41)
  7: _13 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:38-1881:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:38-1881:51)
      kind: _12 = hybrid::dfa::DFA::get_nfa(move _13) -> [return: bb5, unwind: bb26]
  }
  preds [bb3]
  succs [bb5, bb26]

bb5
  0: _11 = &(*_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:38-1881:51)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:50-1881:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:38-1881:60)
      kind: _10 = nfa::thompson::nfa::NFA::states(move _11) -> [return: bb6, unwind: bb26]
  }
  preds [bb4]
  succs [bb6, bb26]

bb6
  0: _9 = &(*_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:38-1881:60)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:59-1881:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:38-1881:66)
      kind: _8 = core::slice::<impl [nfa::thompson::nfa::State]>::len(move _9) -> [return: bb7, unwind: bb26]
  }
  preds [bb5]
  succs [bb7, bb26]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:65-1881:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:22-1881:67)
      kind: _7 = util::sparse_set::SparseSets::new(move _8) -> [return: bb8, unwind: bb26]
  }
  preds [bb6]
  succs [bb8, bb26]

bb8
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1881:66-1881:67)
  1: StorageLive(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _14 = std::vec::Vec::<util::primitives::StateID>::new() -> [return: bb9, unwind: bb25]
  }
  preds [bb7]
  succs [bb9, bb25]

bb9
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1883:36-1883:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1883:36-1883:60)
      kind: _15 = util::determinize::state::StateBuilderEmpty::new() -> [return: bb10, unwind: bb24]
  }
  preds [bb8]
  succs [bb10, bb24]

bb10
  0: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1884:26-1884:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1884:26-1884:44)
      kind: _16 = hybrid::dfa::StateSaver::none() -> [return: bb11, unwind: bb23]
  }
  preds [bb9]
  succs [bb11, bb23]

bb11
  0: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1888:23-1888:27)
  1: _17 = core::option::Option::<hybrid::dfa::SearchProgress>::None
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1888:23-1888:27)
  2: _2 = hybrid::dfa::Cache { trans: move _3, starts: move _4, states: move _5, states_to_id: move _6, sparses: move _7, stack: move _14, scratch_state_builder: move _15, state_saver: move _16, memory_usage_state: const 0_usize, clear_count: const 0_usize, bytes_searched: const 0_usize, progress: move _17 }
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1876:25-1889:10)
  3: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_16) -> [return: bb12, unwind: bb23]
  }
  preds [bb10]
  succs [bb12, bb23]

bb12
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_15) -> [return: bb13, unwind: bb24]
  }
  preds [bb11]
  succs [bb13, bb24]

bb13
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_14) -> [return: bb14, unwind: bb25]
  }
  preds [bb12]
  succs [bb14, bb25]

bb14
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_7) -> [return: bb15, unwind: bb26]
  }
  preds [bb13]
  succs [bb15, bb26]

bb15
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_6) -> [return: bb16, unwind: bb27]
  }
  preds [bb14]
  succs [bb16, bb27]

bb16
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_5) -> [return: bb17, unwind: bb28]
  }
  preds [bb15]
  succs [bb17, bb28]

bb17
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_4) -> [return: bb18, unwind: bb29]
  }
  preds [bb16]
  succs [bb18, bb29]

bb18
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_3) -> [return: bb19, unwind: bb30]
  }
  preds [bb17]
  succs [bb19, bb30]

bb19
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1876:13-1876:22)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:10-1889:11)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:10-1889:11)
  4: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:9-1891:53)
  5: StorageLive(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:9-1891:40)
  6: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:9-1891:40)
  7: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:16-1891:19)
  8: _21 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:16-1891:19)
  9: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:28-1891:38)
  10: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:28-1891:38)
  11: _23 = &mut _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:28-1891:38)
  12: _22 = &mut (*_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:28-1891:38)
  13: _20 = hybrid::dfa::Lazy::<'_, '_> { dfa: move _21, cache: move _22 }
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:9-1891:40)
  14: _19 = &mut _20
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:9-1891:40)
  15: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:39-1891:40)
  16: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:39-1891:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:9-1891:53)
      kind: _18 = hybrid::dfa::Lazy::<'_, '_>::init_cache(move _19) -> [return: bb20, unwind: bb22]
  }
  preds [bb18]
  succs [bb20, bb22]

bb20
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:52-1891:53)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:53-1891:54)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:53-1891:54)
  3: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1891:53-1891:54)
  4: _0 = move _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1893:9-1893:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1894:5-1894:6)
      kind: drop(_2) -> [return: bb21, unwind: bb30]
  }
  preds [bb19]
  succs [bb21, bb30]

bb21
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1894:5-1894:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1894:6-1894:6)
      kind: return
  }
  preds [bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1894:5-1894:6)
      kind: drop(_2) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb30]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_15) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb10, bb11]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_14) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb9, bb12, bb23]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_7) -> [return: bb26, unwind terminate(cleanup)]
  }
  preds [bb8, bb13, bb24]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_6) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb4, bb5, bb6, bb7, bb14, bb25]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_5) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb3, bb15, bb26]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_4) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb2, bb16, bb27]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1889:9-1889:10)
      kind: drop(_3) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb1, bb17, bb28]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1875:5-1894:6)
      kind: resume
  }
  preds [bb0, bb18, bb20, bb22, bb29]
  succs []

