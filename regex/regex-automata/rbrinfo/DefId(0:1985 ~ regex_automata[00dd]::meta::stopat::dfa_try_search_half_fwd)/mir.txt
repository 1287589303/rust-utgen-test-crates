bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/stopat.rs:58:9-58:16)
  1: _3 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/meta/stopat.rs:58:19-58:23)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/meta/stopat.rs:58:9-58:16)
  3: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:9-59:16)
  4: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:50)
  5: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:49)
  6: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:22)
  7: _7 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:22)
  8: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:43-59:48)
  9: _8 = &(*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:43-59:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:49)
      kind: _6 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::start_state_forward(move _7, move _8) -> [return: bb1, unwind: bb94]
  }
  preds []
  succs [bb1, bb94]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:48-59:49)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:48-59:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:50)
      kind: _5 = <core::result::Result<util::primitives::StateID, util::search::MatchError> as core::ops::Try>::branch(move _6) -> [return: bb2, unwind: bb93]
  }
  preds [bb0]
  succs [bb2, bb93]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:49-59:50)
  1: PlaceMention(_5)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:50)
  2: _9 = discriminant(_5)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:50)
      kind: switchInt(move _9) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:50)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:59:49-59:50)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:50)
  1: _13 = ((_5 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:50)
  2: _4 = _13
    SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:50)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:49-59:50)
  4: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:9-59:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:59:50-59:51)
      kind: drop(_5) -> [return: bb8, unwind: bb94]
  }
  preds [bb2, bb4]
  succs [bb8, bb94]

bb6
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:49-59:50)
  1: _10 = move ((_5 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:49-59:50)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:49-59:50)
  3: _12 = move _10
    SourceInfo(regex-automata/src/meta/stopat.rs:59:49-59:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:59:19-59:50)
      kind: _0 = <core::result::Result<core::result::Result<util::search::HalfMatch, usize>, meta::error::RetryFailError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _12) -> [return: bb7, unwind: bb90]
  }
  preds [bb4]
  succs [bb7, bb90]

bb7
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:49-59:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:59:49-59:50)
      kind: drop(_10) -> [return: bb81, unwind: bb92]
  }
  preds [bb6]
  succs [bb81, bb92]

bb8
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:50-59:51)
  1: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/stopat.rs:60:9-60:15)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/stopat.rs:60:18-60:23)
  3: _15 = &(*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:60:18-60:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:60:18-60:31)
      kind: _14 = util::search::Input::<'_>::start(move _15) -> [return: bb9, unwind: bb94]
  }
  preds [bb5]
  succs [bb9, bb94]

bb9
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/stopat.rs:60:30-60:31)
  1: FakeRead(ForLet(None), _14)
    SourceInfo(regex-automata/src/meta/stopat.rs:60:9-60:15)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/stopat.rs:61:5-94:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:61:5-94:6)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:61:5-94:6)
      kind: falseUnwind -> [real: bb11, unwind: bb94]
  }
  preds [bb9, bb64, bb66]
  succs [bb11, bb94]

bb11
  0: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/stopat.rs:61:11-61:27)
  1: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/stopat.rs:61:11-61:13)
  2: _19 = _14
    SourceInfo(regex-automata/src/meta/stopat.rs:61:11-61:13)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/stopat.rs:61:16-61:27)
  4: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/stopat.rs:61:16-61:21)
  5: _21 = &(*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:61:16-61:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:61:16-61:27)
      kind: _20 = util::search::Input::<'_>::end(move _21) -> [return: bb12, unwind: bb94]
  }
  preds [bb10]
  succs [bb12, bb94]

bb12
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/stopat.rs:61:26-61:27)
  1: _18 = Lt(move _19, move _20)
    SourceInfo(regex-automata/src/meta/stopat.rs:61:11-61:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:61:11-61:27)
      kind: switchInt(move _18) -> [0: bb65, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb65]

bb13
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/stopat.rs:61:26-61:27)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/stopat.rs:61:26-61:27)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:15-62:56)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:15-62:18)
  4: _23 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:15-62:18)
  5: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:30-62:33)
  6: _24 = _4
    SourceInfo(regex-automata/src/meta/stopat.rs:62:30-62:33)
  7: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:35-62:55)
  8: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:35-62:51)
  9: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:35-62:40)
  10: _27 = &(*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:35-62:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:62:35-62:51)
      kind: _26 = util::search::Input::<'_>::haystack(move _27) -> [return: bb14, unwind: bb94]
  }
  preds [bb12]
  succs [bb14, bb94]

bb14
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:50-62:51)
  1: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:52-62:54)
  2: _28 = _14
    SourceInfo(regex-automata/src/meta/stopat.rs:62:52-62:54)
  3: _29 = Len((*_26))
    SourceInfo(regex-automata/src/meta/stopat.rs:62:35-62:55)
  4: _30 = Lt(_28, _29)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:35-62:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:62:35-62:55)
      kind: assert(move _30, "index out of bounds: the length is {} but the index is {}", move _29, _28) -> [success: bb15, unwind: bb94]
  }
  preds [bb13]
  succs [bb15, bb94]

bb15
  0: _25 = (*_26)[_28]
    SourceInfo(regex-automata/src/meta/stopat.rs:62:35-62:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:62:15-62:56)
      kind: _22 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::next_state(move _23, move _24, move _25) -> [return: bb16, unwind: bb94]
  }
  preds [bb14]
  succs [bb16, bb94]

bb16
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:55-62:56)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:55-62:56)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:55-62:56)
  3: _4 = move _22
    SourceInfo(regex-automata/src/meta/stopat.rs:62:9-62:56)
  4: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:55-62:56)
  5: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:56-62:57)
  6: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/stopat.rs:62:56-62:57)
  7: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/stopat.rs:63:9-92:10)
  8: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/stopat.rs:63:12-63:37)
  9: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/stopat.rs:63:12-63:15)
  10: _33 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:63:12-63:15)
  11: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/stopat.rs:63:33-63:36)
  12: _34 = _4
    SourceInfo(regex-automata/src/meta/stopat.rs:63:33-63:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:63:12-63:37)
      kind: _32 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::is_special_state(move _33, move _34) -> [return: bb17, unwind: bb94]
  }
  preds [bb15]
  succs [bb17, bb94]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:63:12-63:37)
      kind: switchInt(move _32) -> [0: bb62, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb62]

bb18
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/stopat.rs:63:36-63:37)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/stopat.rs:63:36-63:37)
  2: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/stopat.rs:64:16-64:39)
  3: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/stopat.rs:64:16-64:19)
  4: _36 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:64:16-64:19)
  5: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/stopat.rs:64:35-64:38)
  6: _37 = _4
    SourceInfo(regex-automata/src/meta/stopat.rs:64:35-64:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:64:16-64:39)
      kind: _35 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::is_match_state(move _36, move _37) -> [return: bb19, unwind: bb94]
  }
  preds [bb17]
  succs [bb19, bb94]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:64:16-64:39)
      kind: switchInt(move _35) -> [0: bb35, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb35]

bb20
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/stopat.rs:64:38-64:39)
  1: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/stopat.rs:64:38-64:39)
  2: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/stopat.rs:65:21-65:28)
  3: StorageLive(_39)
    SourceInfo(regex-automata/src/meta/stopat.rs:65:31-65:34)
  4: _39 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:65:31-65:34)
  5: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/stopat.rs:65:49-65:52)
  6: _40 = _4
    SourceInfo(regex-automata/src/meta/stopat.rs:65:49-65:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:65:31-65:56)
      kind: _38 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::match_pattern(move _39, move _40, const 0_usize) -> [return: bb21, unwind: bb94]
  }
  preds [bb19]
  succs [bb21, bb94]

bb21
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/stopat.rs:65:55-65:56)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/stopat.rs:65:55-65:56)
  2: FakeRead(ForLet(None), _38)
    SourceInfo(regex-automata/src/meta/stopat.rs:65:21-65:28)
  3: StorageLive(_41)
    SourceInfo(regex-automata/src/meta/stopat.rs:66:23-66:56)
  4: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/stopat.rs:66:28-66:55)
  5: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/stopat.rs:66:43-66:50)
  6: _43 = _38
    SourceInfo(regex-automata/src/meta/stopat.rs:66:43-66:50)
  7: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/stopat.rs:66:52-66:54)
  8: _44 = _14
    SourceInfo(regex-automata/src/meta/stopat.rs:66:52-66:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:66:28-66:55)
      kind: _42 = util::search::HalfMatch::new(move _43, move _44) -> [return: bb22, unwind: bb94]
  }
  preds [bb20]
  succs [bb22, bb94]

bb22
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/stopat.rs:66:54-66:55)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/stopat.rs:66:54-66:55)
  2: _41 = core::option::Option::<util::search::HalfMatch>::Some(move _42)
    SourceInfo(regex-automata/src/meta/stopat.rs:66:23-66:56)
  3: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/stopat.rs:66:55-66:56)
  4: _3 = move _41
    SourceInfo(regex-automata/src/meta/stopat.rs:66:17-66:56)
  5: StorageDead(_41)
    SourceInfo(regex-automata/src/meta/stopat.rs:66:55-66:56)
  6: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/stopat.rs:67:17-69:18)
  7: StorageLive(_46)
    SourceInfo(regex-automata/src/meta/stopat.rs:67:20-67:40)
  8: StorageLive(_47)
    SourceInfo(regex-automata/src/meta/stopat.rs:67:20-67:25)
  9: _47 = &(*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:67:20-67:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:67:20-67:40)
      kind: _46 = util::search::Input::<'_>::get_earliest(move _47) -> [return: bb23, unwind: bb94]
  }
  preds [bb21]
  succs [bb23, bb94]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:67:20-67:40)
      kind: switchInt(move _46) -> [0: bb26, otherwise: bb24]
  }
  preds [bb22]
  succs [bb24, bb26]

bb24
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/stopat.rs:67:39-67:40)
  1: StorageLive(_49)
    SourceInfo(regex-automata/src/meta/stopat.rs:68:31-68:44)
  2: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/stopat.rs:68:31-68:34)
  3: _50 = _3
    SourceInfo(regex-automata/src/meta/stopat.rs:68:31-68:34)
  4: StorageLive(_51)
    SourceInfo(regex-automata/src/meta/stopat.rs:68:41-68:43)
  5: _51 = _14
    SourceInfo(regex-automata/src/meta/stopat.rs:68:41-68:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:68:31-68:44)
      kind: _49 = core::option::Option::<util::search::HalfMatch>::ok_or::<usize>(move _50, move _51) -> [return: bb25, unwind: bb94]
  }
  preds [bb23]
  succs [bb25, bb94]

bb25
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/meta/stopat.rs:68:43-68:44)
  1: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/stopat.rs:68:43-68:44)
  2: _0 = core::result::Result::<core::result::Result<util::search::HalfMatch, usize>, meta::error::RetryFailError>::Ok(move _49)
    SourceInfo(regex-automata/src/meta/stopat.rs:68:28-68:45)
  3: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/stopat.rs:68:44-68:45)
  4: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/stopat.rs:69:17-69:18)
  5: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/stopat.rs:69:17-69:18)
  6: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/stopat.rs:76:13-76:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb24]
  succs [bb79]

bb26
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/stopat.rs:67:39-67:40)
  1: _45 = const ()
    SourceInfo(regex-automata/src/meta/stopat.rs:69:18-69:18)
  2: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/stopat.rs:69:17-69:18)
  3: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/stopat.rs:69:17-69:18)
  4: StorageLive(_52)
    SourceInfo(regex-automata/src/meta/stopat.rs:70:20-70:43)
  5: StorageLive(_53)
    SourceInfo(regex-automata/src/meta/stopat.rs:70:20-70:23)
  6: _53 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:70:20-70:23)
  7: StorageLive(_54)
    SourceInfo(regex-automata/src/meta/stopat.rs:70:39-70:42)
  8: _54 = _4
    SourceInfo(regex-automata/src/meta/stopat.rs:70:39-70:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:70:20-70:43)
      kind: _52 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::is_accel_state(move _53, move _54) -> [return: bb27, unwind: bb94]
  }
  preds [bb23]
  succs [bb27, bb94]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:70:20-70:43)
      kind: switchInt(move _52) -> [0: bb34, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb34]

bb28
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/stopat.rs:70:42-70:43)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/stopat.rs:70:42-70:43)
  2: StorageLive(_56)
    SourceInfo(regex-automata/src/meta/stopat.rs:71:25-71:30)
  3: StorageLive(_57)
    SourceInfo(regex-automata/src/meta/stopat.rs:71:33-71:36)
  4: _57 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:71:33-71:36)
  5: StorageLive(_58)
    SourceInfo(regex-automata/src/meta/stopat.rs:71:49-71:52)
  6: _58 = _4
    SourceInfo(regex-automata/src/meta/stopat.rs:71:49-71:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:71:33-71:53)
      kind: _56 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::accelerator(move _57, move _58) -> [return: bb29, unwind: bb94]
  }
  preds [bb27]
  succs [bb29, bb94]

bb29
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/stopat.rs:71:52-71:53)
  1: StorageDead(_57)
    SourceInfo(regex-automata/src/meta/stopat.rs:71:52-71:53)
  2: FakeRead(ForLet(None), _56)
    SourceInfo(regex-automata/src/meta/stopat.rs:71:25-71:30)
  3: StorageLive(_59)
    SourceInfo(regex-automata/src/meta/stopat.rs:72:26-73:48)
  4: StorageLive(_60)
    SourceInfo(regex-automata/src/meta/stopat.rs:72:26-72:70)
  5: StorageLive(_61)
    SourceInfo(regex-automata/src/meta/stopat.rs:72:42-72:47)
  6: _61 = &(*_56)
    SourceInfo(regex-automata/src/meta/stopat.rs:72:42-72:47)
  7: StorageLive(_62)
    SourceInfo(regex-automata/src/meta/stopat.rs:72:49-72:65)
  8: StorageLive(_63)
    SourceInfo(regex-automata/src/meta/stopat.rs:72:49-72:65)
  9: StorageLive(_64)
    SourceInfo(regex-automata/src/meta/stopat.rs:72:49-72:54)
  10: _64 = &(*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:72:49-72:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:72:49-72:65)
      kind: _63 = util::search::Input::<'_>::haystack(move _64) -> [return: bb30, unwind: bb94]
  }
  preds [bb28]
  succs [bb30, bb94]

bb30
  0: _62 = &(*_63)
    SourceInfo(regex-automata/src/meta/stopat.rs:72:49-72:65)
  1: StorageDead(_64)
    SourceInfo(regex-automata/src/meta/stopat.rs:72:64-72:65)
  2: StorageLive(_65)
    SourceInfo(regex-automata/src/meta/stopat.rs:72:67-72:69)
  3: _65 = _14
    SourceInfo(regex-automata/src/meta/stopat.rs:72:67-72:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:72:26-72:70)
      kind: _60 = dfa::accel::find_fwd(move _61, move _62, move _65) -> [return: bb31, unwind: bb94]
  }
  preds [bb29]
  succs [bb31, bb94]

bb31
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/meta/stopat.rs:72:69-72:70)
  1: StorageDead(_62)
    SourceInfo(regex-automata/src/meta/stopat.rs:72:69-72:70)
  2: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/stopat.rs:72:69-72:70)
  3: StorageLive(_66)
    SourceInfo(regex-automata/src/meta/stopat.rs:73:36-73:47)
  4: StorageLive(_67)
    SourceInfo(regex-automata/src/meta/stopat.rs:73:36-73:41)
  5: _67 = &(*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:73:36-73:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:73:36-73:47)
      kind: _66 = util::search::Input::<'_>::end(move _67) -> [return: bb32, unwind: bb94]
  }
  preds [bb30]
  succs [bb32, bb94]

bb32
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/meta/stopat.rs:73:46-73:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:72:26-73:48)
      kind: _59 = core::option::Option::<usize>::unwrap_or(move _60, move _66) -> [return: bb33, unwind: bb94]
  }
  preds [bb31]
  succs [bb33, bb94]

bb33
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/meta/stopat.rs:73:47-73:48)
  1: StorageDead(_60)
    SourceInfo(regex-automata/src/meta/stopat.rs:73:47-73:48)
  2: _14 = move _59
    SourceInfo(regex-automata/src/meta/stopat.rs:72:21-73:48)
  3: StorageDead(_59)
    SourceInfo(regex-automata/src/meta/stopat.rs:73:47-73:48)
  4: StorageDead(_63)
    SourceInfo(regex-automata/src/meta/stopat.rs:73:48-73:49)
  5: StorageDead(_56)
    SourceInfo(regex-automata/src/meta/stopat.rs:75:17-75:18)
  6: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/stopat.rs:75:17-75:18)
  7: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/stopat.rs:76:13-76:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb66
  }
  preds [bb32]
  succs [bb66]

bb34
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/stopat.rs:70:42-70:43)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/stopat.rs:70:42-70:43)
  2: _31 = const ()
    SourceInfo(regex-automata/src/meta/stopat.rs:75:18-75:18)
  3: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/stopat.rs:75:17-75:18)
  4: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/stopat.rs:76:13-76:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:64:13-91:14)
      kind: goto -> bb61
  }
  preds [bb27]
  succs [bb61]

bb35
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/stopat.rs:64:38-64:39)
  1: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/stopat.rs:64:38-64:39)
  2: StorageLive(_68)
    SourceInfo(regex-automata/src/meta/stopat.rs:76:23-76:46)
  3: StorageLive(_69)
    SourceInfo(regex-automata/src/meta/stopat.rs:76:23-76:26)
  4: _69 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:76:23-76:26)
  5: StorageLive(_70)
    SourceInfo(regex-automata/src/meta/stopat.rs:76:42-76:45)
  6: _70 = _4
    SourceInfo(regex-automata/src/meta/stopat.rs:76:42-76:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:76:23-76:46)
      kind: _68 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::is_accel_state(move _69, move _70) -> [return: bb36, unwind: bb94]
  }
  preds [bb19]
  succs [bb36, bb94]

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:76:23-76:46)
      kind: switchInt(move _68) -> [0: bb43, otherwise: bb37]
  }
  preds [bb35]
  succs [bb37, bb43]

bb37
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/meta/stopat.rs:76:45-76:46)
  1: StorageDead(_69)
    SourceInfo(regex-automata/src/meta/stopat.rs:76:45-76:46)
  2: StorageLive(_72)
    SourceInfo(regex-automata/src/meta/stopat.rs:77:21-77:26)
  3: StorageLive(_73)
    SourceInfo(regex-automata/src/meta/stopat.rs:77:29-77:32)
  4: _73 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:77:29-77:32)
  5: StorageLive(_74)
    SourceInfo(regex-automata/src/meta/stopat.rs:77:45-77:48)
  6: _74 = _4
    SourceInfo(regex-automata/src/meta/stopat.rs:77:45-77:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:77:29-77:49)
      kind: _72 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::accelerator(move _73, move _74) -> [return: bb38, unwind: bb94]
  }
  preds [bb36]
  succs [bb38, bb94]

bb38
  0: StorageDead(_74)
    SourceInfo(regex-automata/src/meta/stopat.rs:77:48-77:49)
  1: StorageDead(_73)
    SourceInfo(regex-automata/src/meta/stopat.rs:77:48-77:49)
  2: FakeRead(ForLet(None), _72)
    SourceInfo(regex-automata/src/meta/stopat.rs:77:21-77:26)
  3: StorageLive(_75)
    SourceInfo(regex-automata/src/meta/stopat.rs:78:22-79:44)
  4: StorageLive(_76)
    SourceInfo(regex-automata/src/meta/stopat.rs:78:22-78:66)
  5: StorageLive(_77)
    SourceInfo(regex-automata/src/meta/stopat.rs:78:38-78:43)
  6: _77 = &(*_72)
    SourceInfo(regex-automata/src/meta/stopat.rs:78:38-78:43)
  7: StorageLive(_78)
    SourceInfo(regex-automata/src/meta/stopat.rs:78:45-78:61)
  8: StorageLive(_79)
    SourceInfo(regex-automata/src/meta/stopat.rs:78:45-78:61)
  9: StorageLive(_80)
    SourceInfo(regex-automata/src/meta/stopat.rs:78:45-78:50)
  10: _80 = &(*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:78:45-78:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:78:45-78:61)
      kind: _79 = util::search::Input::<'_>::haystack(move _80) -> [return: bb39, unwind: bb94]
  }
  preds [bb37]
  succs [bb39, bb94]

bb39
  0: _78 = &(*_79)
    SourceInfo(regex-automata/src/meta/stopat.rs:78:45-78:61)
  1: StorageDead(_80)
    SourceInfo(regex-automata/src/meta/stopat.rs:78:60-78:61)
  2: StorageLive(_81)
    SourceInfo(regex-automata/src/meta/stopat.rs:78:63-78:65)
  3: _81 = _14
    SourceInfo(regex-automata/src/meta/stopat.rs:78:63-78:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:78:22-78:66)
      kind: _76 = dfa::accel::find_fwd(move _77, move _78, move _81) -> [return: bb40, unwind: bb94]
  }
  preds [bb38]
  succs [bb40, bb94]

bb40
  0: StorageDead(_81)
    SourceInfo(regex-automata/src/meta/stopat.rs:78:65-78:66)
  1: StorageDead(_78)
    SourceInfo(regex-automata/src/meta/stopat.rs:78:65-78:66)
  2: StorageDead(_77)
    SourceInfo(regex-automata/src/meta/stopat.rs:78:65-78:66)
  3: StorageLive(_82)
    SourceInfo(regex-automata/src/meta/stopat.rs:79:32-79:43)
  4: StorageLive(_83)
    SourceInfo(regex-automata/src/meta/stopat.rs:79:32-79:37)
  5: _83 = &(*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:79:32-79:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:79:32-79:43)
      kind: _82 = util::search::Input::<'_>::end(move _83) -> [return: bb41, unwind: bb94]
  }
  preds [bb39]
  succs [bb41, bb94]

bb41
  0: StorageDead(_83)
    SourceInfo(regex-automata/src/meta/stopat.rs:79:42-79:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:78:22-79:44)
      kind: _75 = core::option::Option::<usize>::unwrap_or(move _76, move _82) -> [return: bb42, unwind: bb94]
  }
  preds [bb40]
  succs [bb42, bb94]

bb42
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/meta/stopat.rs:79:43-79:44)
  1: StorageDead(_76)
    SourceInfo(regex-automata/src/meta/stopat.rs:79:43-79:44)
  2: _14 = move _75
    SourceInfo(regex-automata/src/meta/stopat.rs:78:17-79:44)
  3: StorageDead(_75)
    SourceInfo(regex-automata/src/meta/stopat.rs:79:43-79:44)
  4: StorageDead(_79)
    SourceInfo(regex-automata/src/meta/stopat.rs:79:44-79:45)
  5: StorageDead(_72)
    SourceInfo(regex-automata/src/meta/stopat.rs:81:13-81:14)
  6: StorageDead(_68)
    SourceInfo(regex-automata/src/meta/stopat.rs:91:13-91:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb66
  }
  preds [bb41]
  succs [bb66]

bb43
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/meta/stopat.rs:76:45-76:46)
  1: StorageDead(_69)
    SourceInfo(regex-automata/src/meta/stopat.rs:76:45-76:46)
  2: StorageLive(_84)
    SourceInfo(regex-automata/src/meta/stopat.rs:81:23-81:45)
  3: StorageLive(_85)
    SourceInfo(regex-automata/src/meta/stopat.rs:81:23-81:26)
  4: _85 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:81:23-81:26)
  5: StorageLive(_86)
    SourceInfo(regex-automata/src/meta/stopat.rs:81:41-81:44)
  6: _86 = _4
    SourceInfo(regex-automata/src/meta/stopat.rs:81:41-81:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:81:23-81:45)
      kind: _84 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::is_dead_state(move _85, move _86) -> [return: bb44, unwind: bb94]
  }
  preds [bb36]
  succs [bb44, bb94]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:81:23-81:45)
      kind: switchInt(move _84) -> [0: bb47, otherwise: bb45]
  }
  preds [bb43]
  succs [bb45, bb47]

bb45
  0: StorageDead(_86)
    SourceInfo(regex-automata/src/meta/stopat.rs:81:44-81:45)
  1: StorageDead(_85)
    SourceInfo(regex-automata/src/meta/stopat.rs:81:44-81:45)
  2: StorageLive(_88)
    SourceInfo(regex-automata/src/meta/stopat.rs:82:27-82:40)
  3: StorageLive(_89)
    SourceInfo(regex-automata/src/meta/stopat.rs:82:27-82:30)
  4: _89 = _3
    SourceInfo(regex-automata/src/meta/stopat.rs:82:27-82:30)
  5: StorageLive(_90)
    SourceInfo(regex-automata/src/meta/stopat.rs:82:37-82:39)
  6: _90 = _14
    SourceInfo(regex-automata/src/meta/stopat.rs:82:37-82:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:82:27-82:40)
      kind: _88 = core::option::Option::<util::search::HalfMatch>::ok_or::<usize>(move _89, move _90) -> [return: bb46, unwind: bb94]
  }
  preds [bb44]
  succs [bb46, bb94]

bb46
  0: StorageDead(_90)
    SourceInfo(regex-automata/src/meta/stopat.rs:82:39-82:40)
  1: StorageDead(_89)
    SourceInfo(regex-automata/src/meta/stopat.rs:82:39-82:40)
  2: _0 = core::result::Result::<core::result::Result<util::search::HalfMatch, usize>, meta::error::RetryFailError>::Ok(move _88)
    SourceInfo(regex-automata/src/meta/stopat.rs:82:24-82:41)
  3: StorageDead(_88)
    SourceInfo(regex-automata/src/meta/stopat.rs:82:40-82:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:82:17-82:41)
      kind: goto -> bb78
  }
  preds [bb45]
  succs [bb78]

bb47
  0: StorageDead(_86)
    SourceInfo(regex-automata/src/meta/stopat.rs:81:44-81:45)
  1: StorageDead(_85)
    SourceInfo(regex-automata/src/meta/stopat.rs:81:44-81:45)
  2: StorageLive(_91)
    SourceInfo(regex-automata/src/meta/stopat.rs:83:23-83:45)
  3: StorageLive(_92)
    SourceInfo(regex-automata/src/meta/stopat.rs:83:23-83:26)
  4: _92 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:83:23-83:26)
  5: StorageLive(_93)
    SourceInfo(regex-automata/src/meta/stopat.rs:83:41-83:44)
  6: _93 = _4
    SourceInfo(regex-automata/src/meta/stopat.rs:83:41-83:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:83:23-83:45)
      kind: _91 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::is_quit_state(move _92, move _93) -> [return: bb48, unwind: bb94]
  }
  preds [bb44]
  succs [bb48, bb94]

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:83:23-83:45)
      kind: switchInt(move _91) -> [0: bb54, otherwise: bb49]
  }
  preds [bb47]
  succs [bb49, bb54]

bb49
  0: StorageDead(_93)
    SourceInfo(regex-automata/src/meta/stopat.rs:83:44-83:45)
  1: StorageDead(_92)
    SourceInfo(regex-automata/src/meta/stopat.rs:83:44-83:45)
  2: StorageLive(_95)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:28-84:77)
  3: StorageLive(_96)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:28-84:70)
  4: StorageLive(_97)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:45-84:65)
  5: StorageLive(_98)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:45-84:61)
  6: StorageLive(_99)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:45-84:50)
  7: _99 = &(*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:45-84:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:84:45-84:61)
      kind: _98 = util::search::Input::<'_>::haystack(move _99) -> [return: bb50, unwind: bb94]
  }
  preds [bb48]
  succs [bb50, bb94]

bb50
  0: StorageDead(_99)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:60-84:61)
  1: StorageLive(_100)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:62-84:64)
  2: _100 = _14
    SourceInfo(regex-automata/src/meta/stopat.rs:84:62-84:64)
  3: _101 = Len((*_98))
    SourceInfo(regex-automata/src/meta/stopat.rs:84:45-84:65)
  4: _102 = Lt(_100, _101)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:45-84:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:84:45-84:65)
      kind: assert(move _102, "index out of bounds: the length is {} but the index is {}", move _101, _100) -> [success: bb51, unwind: bb94]
  }
  preds [bb49]
  succs [bb51, bb94]

bb51
  0: _97 = (*_98)[_100]
    SourceInfo(regex-automata/src/meta/stopat.rs:84:45-84:65)
  1: StorageLive(_103)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:67-84:69)
  2: _103 = _14
    SourceInfo(regex-automata/src/meta/stopat.rs:84:67-84:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:84:28-84:70)
      kind: _96 = util::search::MatchError::quit(move _97, move _103) -> [return: bb52, unwind: bb94]
  }
  preds [bb50]
  succs [bb52, bb94]

bb52
  0: StorageDead(_103)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:69-84:70)
  1: StorageDead(_97)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:69-84:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:84:28-84:77)
      kind: _95 = <util::search::MatchError as core::convert::Into<meta::error::RetryFailError>>::into(move _96) -> [return: bb53, unwind: bb89]
  }
  preds [bb51]
  succs [bb53, bb89]

bb53
  0: StorageDead(_96)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:76-84:77)
  1: _0 = core::result::Result::<core::result::Result<util::search::HalfMatch, usize>, meta::error::RetryFailError>::Err(move _95)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:24-84:78)
  2: StorageDead(_95)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:77-84:78)
  3: StorageDead(_100)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:78-84:79)
  4: StorageDead(_98)
    SourceInfo(regex-automata/src/meta/stopat.rs:84:78-84:79)
  5: StorageDead(_91)
    SourceInfo(regex-automata/src/meta/stopat.rs:91:13-91:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb52]
  succs [bb78]

bb54
  0: StorageDead(_93)
    SourceInfo(regex-automata/src/meta/stopat.rs:83:44-83:45)
  1: StorageDead(_92)
    SourceInfo(regex-automata/src/meta/stopat.rs:83:44-83:45)
  2: StorageLive(_104)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  3: StorageLive(_105)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  4: _105 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _105) -> [0: bb59, otherwise: bb55]
  }
  preds [bb48]
  succs [bb55, bb59]

bb55
  0: StorageLive(_106)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_107)
    SourceInfo(regex-automata/src/meta/stopat.rs:90:31-90:54)
  2: StorageLive(_108)
    SourceInfo(regex-automata/src/meta/stopat.rs:90:31-90:34)
  3: _108 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:90:31-90:34)
  4: StorageLive(_109)
    SourceInfo(regex-automata/src/meta/stopat.rs:90:50-90:53)
  5: _109 = _4
    SourceInfo(regex-automata/src/meta/stopat.rs:90:50-90:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:90:31-90:54)
      kind: _107 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::is_start_state(move _108, move _109) -> [return: bb56, unwind: bb94]
  }
  preds [bb54]
  succs [bb56, bb94]

bb56
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:90:31-90:54)
      kind: switchInt(move _107) -> [0: bb58, otherwise: bb57]
  }
  preds [bb55]
  succs [bb57, bb58]

bb57
  0: StorageDead(_109)
    SourceInfo(regex-automata/src/meta/stopat.rs:90:53-90:54)
  1: StorageDead(_108)
    SourceInfo(regex-automata/src/meta/stopat.rs:90:53-90:54)
  2: _106 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  3: StorageDead(_107)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: StorageDead(_106)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  5: _104 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb60
  }
  preds [bb56]
  succs [bb60]

bb58
  0: StorageDead(_109)
    SourceInfo(regex-automata/src/meta/stopat.rs:90:53-90:54)
  1: StorageDead(_108)
    SourceInfo(regex-automata/src/meta/stopat.rs:90:53-90:54)
  2: StorageLive(_110)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _110 = core::panicking::panic(const "assertion failed: dfa.is_start_state(sid)") -> bb94
  }
  preds [bb56]
  succs [bb94]

bb59
  0: _104 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb60
  }
  preds [bb54]
  succs [bb60]

bb60
  0: StorageDead(_105)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_104)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: _31 = const ()
    SourceInfo(regex-automata/src/meta/stopat.rs:85:20-91:14)
  3: StorageDead(_91)
    SourceInfo(regex-automata/src/meta/stopat.rs:91:13-91:14)
  4: StorageDead(_84)
    SourceInfo(regex-automata/src/meta/stopat.rs:91:13-91:14)
  5: StorageDead(_68)
    SourceInfo(regex-automata/src/meta/stopat.rs:91:13-91:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:64:13-91:14)
      kind: goto -> bb61
  }
  preds [bb57, bb59]
  succs [bb61]

bb61
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/stopat.rs:91:13-91:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:63:9-92:10)
      kind: goto -> bb63
  }
  preds [bb34, bb60]
  succs [bb63]

bb62
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/stopat.rs:63:36-63:37)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/stopat.rs:63:36-63:37)
  2: _31 = const ()
    SourceInfo(regex-automata/src/meta/stopat.rs:92:10-92:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:63:9-92:10)
      kind: goto -> bb63
  }
  preds [bb17]
  succs [bb63]

bb63
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/stopat.rs:92:9-92:10)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/stopat.rs:92:9-92:10)
  2: _111 = AddWithOverflow(_14, const 1_usize)
    SourceInfo(regex-automata/src/meta/stopat.rs:93:9-93:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:93:9-93:16)
      kind: assert(!move (_111.1: bool), "attempt to compute `{} + {}`, which would overflow", _14, const 1_usize) -> [success: bb64, unwind: bb94]
  }
  preds [bb61, bb62]
  succs [bb64, bb94]

bb64
  0: _14 = move (_111.0: usize)
    SourceInfo(regex-automata/src/meta/stopat.rs:93:9-93:16)
  1: _17 = const ()
    SourceInfo(regex-automata/src/meta/stopat.rs:61:28-94:6)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/stopat.rs:94:5-94:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:61:5-94:6)
      kind: goto -> bb10
  }
  preds [bb63]
  succs [bb10]

bb65
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/stopat.rs:61:26-61:27)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/stopat.rs:61:26-61:27)
  2: StorageLive(_113)
    SourceInfo(regex-automata/src/meta/stopat.rs:61:5-94:6)
  3: _16 = const ()
    SourceInfo(regex-automata/src/meta/stopat.rs:61:5-94:6)
  4: StorageDead(_113)
    SourceInfo(regex-automata/src/meta/stopat.rs:94:5-94:6)
  5: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/stopat.rs:94:5-94:6)
  6: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/stopat.rs:94:5-94:6)
  7: StorageLive(_115)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:5-95:49)
  8: StorageLive(_116)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:5-95:49)
  9: StorageLive(_117)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:5-95:48)
  10: StorageLive(_118)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:17-95:20)
  11: _118 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:17-95:20)
  12: StorageLive(_119)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:22-95:27)
  13: _119 = &(*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:22-95:27)
  14: StorageLive(_120)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:29-95:37)
  15: StorageLive(_121)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:29-95:37)
  16: _121 = &mut _4
    SourceInfo(regex-automata/src/meta/stopat.rs:95:29-95:37)
  17: _120 = &mut (*_121)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:29-95:37)
  18: StorageLive(_122)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:39-95:47)
  19: StorageLive(_123)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:39-95:47)
  20: _123 = &mut _3
    SourceInfo(regex-automata/src/meta/stopat.rs:95:39-95:47)
  21: _122 = &mut (*_123)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:39-95:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:95:5-95:48)
      kind: _117 = meta::stopat::dfa_eoi_fwd(move _118, move _119, move _120, move _122) -> [return: bb67, unwind: bb94]
  }
  preds [bb12]
  succs [bb67, bb94]

bb66
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/stopat.rs:91:13-91:14)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/stopat.rs:92:9-92:10)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/stopat.rs:92:9-92:10)
  3: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/stopat.rs:94:5-94:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb10
  }
  preds [bb33, bb42]
  succs [bb10]

bb67
  0: StorageDead(_122)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:47-95:48)
  1: StorageDead(_120)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:47-95:48)
  2: StorageDead(_119)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:47-95:48)
  3: StorageDead(_118)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:47-95:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:95:5-95:49)
      kind: _116 = <core::result::Result<(), util::search::MatchError> as core::ops::Try>::branch(move _117) -> [return: bb68, unwind: bb88]
  }
  preds [bb65]
  succs [bb68, bb88]

bb68
  0: StorageDead(_117)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:48-95:49)
  1: PlaceMention(_116)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:5-95:49)
  2: _124 = discriminant(_116)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:5-95:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:95:5-95:49)
      kind: switchInt(move _124) -> [0: bb71, 1: bb70, otherwise: bb69]
  }
  preds [bb67]
  succs [bb69, bb70, bb71]

bb69
  0: FakeRead(ForMatchedPlace(None), _116)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:5-95:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:95:5-95:49)
      kind: unreachable
  }
  preds [bb68]
  succs []

bb70
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:95:48-95:49)
      kind: falseEdge -> [real: bb72, imaginary: bb71]
  }
  preds [bb68]
  succs [bb71, bb72]

bb71
  0: StorageLive(_128)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:5-95:49)
  1: _128 = ((_116 as Continue).0: ())
    SourceInfo(regex-automata/src/meta/stopat.rs:95:5-95:49)
  2: _115 = _128
    SourceInfo(regex-automata/src/meta/stopat.rs:95:5-95:49)
  3: StorageDead(_128)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:48-95:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:95:49-95:50)
      kind: drop(_116) -> [return: bb74, unwind: bb94]
  }
  preds [bb68, bb70]
  succs [bb74, bb94]

bb72
  0: StorageLive(_125)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:48-95:49)
  1: _125 = move ((_116 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:48-95:49)
  2: StorageLive(_127)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:48-95:49)
  3: _127 = move _125
    SourceInfo(regex-automata/src/meta/stopat.rs:95:48-95:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:95:5-95:49)
      kind: _0 = <core::result::Result<core::result::Result<util::search::HalfMatch, usize>, meta::error::RetryFailError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _127) -> [return: bb73, unwind: bb85]
  }
  preds [bb70]
  succs [bb73, bb85]

bb73
  0: StorageDead(_127)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:48-95:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:95:48-95:49)
      kind: drop(_125) -> [return: bb76, unwind: bb87]
  }
  preds [bb72]
  succs [bb76, bb87]

bb74
  0: StorageDead(_123)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:49-95:50)
  1: StorageDead(_121)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:49-95:50)
  2: StorageDead(_116)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:49-95:50)
  3: StorageDead(_115)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:49-95:50)
  4: StorageLive(_129)
    SourceInfo(regex-automata/src/meta/stopat.rs:96:8-96:21)
  5: StorageLive(_130)
    SourceInfo(regex-automata/src/meta/stopat.rs:96:8-96:11)
  6: _130 = _3
    SourceInfo(regex-automata/src/meta/stopat.rs:96:8-96:11)
  7: StorageLive(_131)
    SourceInfo(regex-automata/src/meta/stopat.rs:96:18-96:20)
  8: _131 = _14
    SourceInfo(regex-automata/src/meta/stopat.rs:96:18-96:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:96:8-96:21)
      kind: _129 = core::option::Option::<util::search::HalfMatch>::ok_or::<usize>(move _130, move _131) -> [return: bb75, unwind: bb94]
  }
  preds [bb71]
  succs [bb75, bb94]

bb75
  0: StorageDead(_131)
    SourceInfo(regex-automata/src/meta/stopat.rs:96:20-96:21)
  1: StorageDead(_130)
    SourceInfo(regex-automata/src/meta/stopat.rs:96:20-96:21)
  2: _0 = core::result::Result::<core::result::Result<util::search::HalfMatch, usize>, meta::error::RetryFailError>::Ok(move _129)
    SourceInfo(regex-automata/src/meta/stopat.rs:96:5-96:22)
  3: StorageDead(_129)
    SourceInfo(regex-automata/src/meta/stopat.rs:96:21-96:22)
  4: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/stopat.rs:97:1-97:2)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/stopat.rs:97:1-97:2)
  6: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/stopat.rs:97:1-97:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:97:2-97:2)
      kind: goto -> bb84
  }
  preds [bb74]
  succs [bb84]

bb76
  0: StorageDead(_125)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:48-95:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:95:49-95:50)
      kind: drop(_116) -> [return: bb77, unwind: bb94]
  }
  preds [bb73]
  succs [bb77, bb94]

bb77
  0: StorageDead(_123)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:49-95:50)
  1: StorageDead(_121)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:49-95:50)
  2: StorageDead(_116)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:49-95:50)
  3: StorageDead(_115)
    SourceInfo(regex-automata/src/meta/stopat.rs:95:49-95:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb80
  }
  preds [bb76]
  succs [bb80]

bb78
  0: StorageDead(_84)
    SourceInfo(regex-automata/src/meta/stopat.rs:91:13-91:14)
  1: StorageDead(_68)
    SourceInfo(regex-automata/src/meta/stopat.rs:91:13-91:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb46, bb53]
  succs [bb79]

bb79
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/stopat.rs:91:13-91:14)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/stopat.rs:92:9-92:10)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/stopat.rs:92:9-92:10)
  3: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/stopat.rs:94:5-94:6)
  4: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/stopat.rs:94:5-94:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb80
  }
  preds [bb25, bb78]
  succs [bb80]

bb80
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/stopat.rs:97:1-97:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb83
  }
  preds [bb77, bb79]
  succs [bb83]

bb81
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:49-59:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:59:50-59:51)
      kind: drop(_5) -> [return: bb82, unwind: bb94]
  }
  preds [bb7]
  succs [bb82, bb94]

bb82
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/stopat.rs:59:50-59:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb83
  }
  preds [bb81]
  succs [bb83]

bb83
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/stopat.rs:97:1-97:2)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/stopat.rs:97:1-97:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:97:2-97:2)
      kind: goto -> bb84
  }
  preds [bb80, bb82]
  succs [bb84]

bb84
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:97:2-97:2)
      kind: return
  }
  preds [bb75, bb83]
  succs []

bb85
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:95:48-95:49)
      kind: drop(_127) -> [return: bb86, unwind terminate(cleanup)]
  }
  preds [bb72]
  succs [bb86]

bb86
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:95:48-95:49)
      kind: drop(_125) -> [return: bb87, unwind terminate(cleanup)]
  }
  preds [bb85]
  succs [bb87]

bb87
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:95:49-95:50)
      kind: drop(_116) -> [return: bb94, unwind terminate(cleanup)]
  }
  preds [bb73, bb86]
  succs [bb94]

bb88
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:95:48-95:49)
      kind: drop(_117) -> [return: bb94, unwind terminate(cleanup)]
  }
  preds [bb67]
  succs [bb94]

bb89
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:84:76-84:77)
      kind: drop(_96) -> [return: bb94, unwind terminate(cleanup)]
  }
  preds [bb52]
  succs [bb94]

bb90
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:59:49-59:50)
      kind: drop(_12) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb91]

bb91
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:59:49-59:50)
      kind: drop(_10) -> [return: bb92, unwind terminate(cleanup)]
  }
  preds [bb90]
  succs [bb92]

bb92
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:59:50-59:51)
      kind: drop(_5) -> [return: bb94, unwind terminate(cleanup)]
  }
  preds [bb7, bb91]
  succs [bb94]

bb93
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:59:49-59:50)
      kind: drop(_6) -> [return: bb94, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb94]

bb94
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:52:1-97:2)
      kind: resume
  }
  preds [bb0, bb5, bb8, bb10, bb11, bb13, bb14, bb15, bb16, bb18, bb20, bb21, bb22, bb24, bb26, bb28, bb29, bb30, bb31, bb32, bb35, bb37, bb38, bb39, bb40, bb41, bb43, bb45, bb47, bb49, bb50, bb51, bb55, bb58, bb63, bb65, bb71, bb74, bb76, bb81, bb87, bb88, bb89, bb92, bb93]
  succs []

