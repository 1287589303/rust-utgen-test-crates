{
  "regex-automata/src/hybrid/dfa.rs:2359:24:2359:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "len == 0",
          "lhs": "len",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/hybrid/dfa.rs:2350:12:2350:67": [
    {
      "Bool": {
        "Other": "let Some(min_count) = c.get_minimum_cache_clear_count()"
      }
    }
  ],
  "regex-automata/src/hybrid/dfa.rs:2351:16:2351:51": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "self.cache.clear_count >= min_count",
          "lhs": "self.cache.clear_count",
          "rhs": "min_count",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/hybrid/dfa.rs:2368:24:2368:39": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "len < min_bytes",
          "lhs": "len",
          "rhs": "min_bytes",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/hybrid/dfa.rs:2352:20:2352:77": [
    {
      "Bool": {
        "Other": "let Some(min_bytes_per) = c.get_minimum_bytes_per_state()"
      }
    }
  ]
}