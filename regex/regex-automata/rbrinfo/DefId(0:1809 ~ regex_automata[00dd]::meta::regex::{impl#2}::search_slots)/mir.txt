bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:9-1133:10)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:12-1131:46)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:12-1131:25)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:12-1131:25)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:12-1131:20)
  5: _8 = &((*_1).0: std::sync::Arc<meta::regex::RegexI>)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:12-1131:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1131:12-1131:25)
      kind: _7 = <std::sync::Arc<meta::regex::RegexI> as core::ops::Deref>::deref(move _8) -> [return: bb1, unwind: bb15]
  }
  preds []
  succs [bb1, bb15]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:19-1131:20)
  1: _6 = &((*_7).1: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:12-1131:25)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:40-1131:45)
  3: _9 = &(*_2)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:40-1131:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1131:12-1131:46)
      kind: _5 = meta::regex::RegexInfo::is_impossible(move _6, move _9) -> [return: bb2, unwind: bb15]
  }
  preds [bb0]
  succs [bb2, bb15]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1131:12-1131:46)
      kind: switchInt(move _5) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:45-1131:46)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:45-1131:46)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:45-1131:46)
  3: _0 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/meta/regex.rs:1132:20-1132:24)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1133:9-1133:10)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1133:9-1133:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1139:6-1139:6)
      kind: goto -> bb12
  }
  preds [bb2]
  succs [bb12]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:45-1131:46)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:45-1131:46)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1131:45-1131:46)
  3: _4 = const ()
    SourceInfo(regex-automata/src/meta/regex.rs:1133:10-1133:10)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1133:9-1133:10)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1133:9-1133:10)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:1134:13-1134:22)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:1134:25-1134:34)
  8: _12 = &((*_1).1: util::pool::Pool<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>)
    SourceInfo(regex-automata/src/meta/regex.rs:1134:25-1134:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1134:25-1134:40)
      kind: _11 = util::pool::Pool::<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>::get(move _12) -> [return: bb5, unwind: bb15]
  }
  preds [bb2]
  succs [bb5, bb15]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:1134:39-1134:40)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(regex-automata/src/meta/regex.rs:1134:13-1134:22)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:13-1135:19)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:22-1135:36)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:22-1135:75)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:22-1135:36)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:22-1135:36)
  7: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:22-1135:30)
  8: _18 = &((*_1).0: std::sync::Arc<meta::regex::RegexI>)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:22-1135:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1135:22-1135:36)
      kind: _17 = <std::sync::Arc<meta::regex::RegexI> as core::ops::Deref>::deref(move _18) -> [return: bb6, unwind: bb14]
  }
  preds [bb4]
  succs [bb6, bb14]

bb6
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:29-1135:30)
  1: _16 = &((*_17).0: std::sync::Arc<dyn meta::strategy::Strategy>)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:22-1135:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1135:22-1135:75)
      kind: _15 = <std::sync::Arc<dyn meta::strategy::Strategy> as core::ops::Deref>::deref(move _16) -> [return: bb7, unwind: bb14]
  }
  preds [bb5]
  succs [bb7, bb14]

bb7
  0: _14 = &(*_15)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:22-1135:36)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:35-1135:36)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:50-1135:60)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:50-1135:60)
  4: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:50-1135:60)
  5: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:50-1135:60)
  6: _22 = &mut _11
    SourceInfo(regex-automata/src/meta/regex.rs:1135:50-1135:60)
  7: _21 = &mut (*_22)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:50-1135:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1135:50-1135:60)
      kind: _20 = <util::pool::PoolGuard<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>> as core::ops::DerefMut>::deref_mut(move _21) -> [return: bb8, unwind: bb14]
  }
  preds [bb6]
  succs [bb8, bb14]

bb8
  0: _19 = &mut (*_20)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:50-1135:60)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:59-1135:60)
  2: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:62-1135:67)
  3: _23 = &(*_2)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:62-1135:67)
  4: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:69-1135:74)
  5: _24 = &mut (*_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:69-1135:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1135:22-1135:75)
      kind: _13 = <dyn meta::strategy::Strategy as meta::strategy::Strategy>::search_slots(move _14, move _19, move _23, move _24) -> [return: bb9, unwind: bb14]
  }
  preds [bb7]
  succs [bb9, bb14]

bb9
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:74-1135:75)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:74-1135:75)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:74-1135:75)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:74-1135:75)
  4: FakeRead(ForLet(None), _13)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:13-1135:19)
  5: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:75-1135:76)
  6: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:75-1135:76)
  7: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:75-1135:76)
  8: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:1135:75-1135:76)
  9: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/regex.rs:1137:9-1137:30)
  10: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/regex.rs:1137:24-1137:29)
  11: _26 = move _11
    SourceInfo(regex-automata/src/meta/regex.rs:1137:24-1137:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1137:9-1137:30)
      kind: _25 = util::pool::PoolGuard::<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>::put(move _26) -> [return: bb10, unwind: bb13]
  }
  preds [bb8]
  succs [bb10, bb13]

bb10
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/regex.rs:1137:29-1137:30)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/regex.rs:1137:30-1137:31)
  2: _0 = _13
    SourceInfo(regex-automata/src/meta/regex.rs:1138:9-1138:15)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:1139:5-1139:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1139:5-1139:6)
      kind: drop(_11) -> [return: bb11, unwind: bb15]
  }
  preds [bb9]
  succs [bb11, bb15]

bb11
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:1139:5-1139:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1139:6-1139:6)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1139:6-1139:6)
      kind: return
  }
  preds [bb3, bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1137:29-1137:30)
      kind: drop(_26) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1139:5-1139:6)
      kind: drop(_11) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb5, bb6, bb7, bb8, bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1126:5-1139:6)
      kind: resume
  }
  preds [bb0, bb1, bb4, bb10, bb14]
  succs []

