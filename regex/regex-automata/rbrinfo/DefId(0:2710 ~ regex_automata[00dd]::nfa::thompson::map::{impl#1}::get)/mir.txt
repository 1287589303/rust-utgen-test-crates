bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:276:13-276:18)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:276:30-276:36)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:276:22-276:30)
  3: _6 = &((*_1).2: std::vec::Vec<nfa::thompson::map::Utf8SuffixEntry>)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:276:22-276:30)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:276:31-276:35)
  5: _7 = _3
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:276:31-276:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:276:30-276:36)
      kind: _5 = <std::vec::Vec<nfa::thompson::map::Utf8SuffixEntry> as core::ops::Index<usize>>::index(move _6, move _7) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:276:35-276:36)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:276:35-276:36)
  2: _4 = &(*_5)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:276:21-276:36)
  3: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:276:13-276:18)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:277:9-279:10)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:277:12-277:41)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:277:12-277:25)
  7: _10 = ((*_4).0: u16)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:277:12-277:25)
  8: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:277:29-277:41)
  9: _11 = ((*_1).0: u16)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:277:29-277:41)
  10: _9 = Ne(move _10, move _11)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:277:12-277:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:277:12-277:41)
      kind: switchInt(move _9) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:277:40-277:41)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:277:40-277:41)
  2: _0 = core::option::Option::<util::primitives::StateID>::None
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:278:20-278:24)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:279:9-279:10)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:279:9-279:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb7
  }
  preds [bb1]
  succs [bb7]

bb3
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:277:40-277:41)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:277:40-277:41)
  2: _8 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:279:10-279:10)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:279:9-279:10)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:279:9-279:10)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:9-282:10)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:12-280:29)
  7: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:12-280:15)
  8: _15 = &_2
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:12-280:15)
  9: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:19-280:29)
  10: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:19-280:29)
  11: _17 = &((*_4).1: nfa::thompson::map::Utf8SuffixKey)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:19-280:29)
  12: _16 = &_17
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:19-280:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:12-280:29)
      kind: _14 = <&nfa::thompson::map::Utf8SuffixKey as core::cmp::PartialEq>::ne(move _15, move _16) -> [return: bb4, unwind: bb9]
  }
  preds [bb1]
  succs [bb4, bb9]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:12-280:29)
      kind: switchInt(move _14) -> [0: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:28-280:29)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:28-280:29)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:28-280:29)
  3: _0 = core::option::Option::<util::primitives::StateID>::None
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:281:20-281:24)
  4: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:282:9-282:10)
  5: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:282:9-282:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:28-280:29)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:28-280:29)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:280:28-280:29)
  3: _13 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:282:10-282:10)
  4: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:282:9-282:10)
  5: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:282:9-282:10)
  6: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:283:14-283:23)
  7: _19 = ((*_4).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:283:14-283:23)
  8: _0 = core::option::Option::<util::primitives::StateID>::Some(move _19)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:283:9-283:24)
  9: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:283:23-283:24)
  10: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:284:5-284:6)
  11: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:284:5-284:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:284:6-284:6)
      kind: goto -> bb8
  }
  preds [bb4]
  succs [bb8]

bb7
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:284:5-284:6)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/map.rs:284:5-284:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:284:6-284:6)
      kind: goto -> bb8
  }
  preds [bb2, bb5]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:284:6-284:6)
      kind: return
  }
  preds [bb6, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/map.rs:271:5-284:6)
      kind: resume
  }
  preds [bb0, bb3]
  succs []

