bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:196:18-196:52)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:196:18-196:23)
  2: _4 = move (_2.0: core::option::Option<core::option::Option<util::prefilter::Prefilter>>)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:196:18-196:23)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:196:32-196:51)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:196:32-196:51)
  5: _6 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:196:32-196:51)
  6: _5 = {closure@regex-automata/src/nfa/thompson/backtrack.rs:196:32: 196:34} { self: move _6 }
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:196:32-196:51)
  7: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:196:33-196:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:196:18-196:52)
      kind: _3 = core::option::Option::<core::option::Option<util::prefilter::Prefilter>>::or_else::<{closure@regex-automata/src/nfa/thompson/backtrack.rs:196:32: 196:34}>(move _4, move _5) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:196:51-196:52)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:196:51-196:52)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:197:31-197:75)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:197:31-197:49)
  4: _8 = (_2.1: core::option::Option<usize>)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:197:31-197:49)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:197:53-197:74)
  6: _9 = ((*_1).1: core::option::Option<usize>)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:197:53-197:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:197:31-197:75)
      kind: _7 = core::option::Option::<usize>::or(move _8, move _9) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:197:74-197:75)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:197:74-197:75)
  2: _0 = nfa::thompson::backtrack::Config { pre: move _3, visited_capacity: move _7 }
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:195:9-198:10)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:198:9-198:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:198:9-198:10)
      kind: drop(_3) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:198:9-198:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:199:5-199:6)
      kind: drop(_2) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:199:6-199:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:198:9-198:10)
      kind: drop(_3) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb7]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:196:51-196:52)
      kind: drop(_4) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:199:5-199:6)
      kind: drop(_2) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb2, bb5, bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:194:5-199:6)
      kind: resume
  }
  preds [bb3, bb7]
  succs []

