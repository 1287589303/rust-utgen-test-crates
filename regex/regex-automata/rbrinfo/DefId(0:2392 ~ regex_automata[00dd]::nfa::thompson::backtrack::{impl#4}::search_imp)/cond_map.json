{
  "regex-automata/src/nfa/thompson/backtrack.rs:1374:9:1374:42": [
    {
      "Try": "cache.setup_search(&self, input)?"
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1395:12:1395:20": [
    {
      "Bool": {
        "Other": "anchored"
      }
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1404:23:1404:55": [
    {
      "Match": {
        "match_source": "regex-automata/src/nfa/thompson/backtrack.rs:1404:23:1404:55",
        "match_str": "pre.find(input.haystack(), span)",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/nfa/thompson/backtrack.rs:1406:21:1406:35": {
            "pat": {
              "pat_str": "Some(ref span)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/backtrack.rs:1406:39:1406:54"
          },
          "regex-automata/src/nfa/thompson/backtrack.rs:1405:21:1405:25": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/backtrack.rs:1405:29:1405:34"
          }
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1409:16:1409:80": [
    {
      "Bool": {
        "Other": "let Some(hm) = self.backtrack(cache, input, at, start_id, slots)"
      }
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1375:12:1375:27": [
    {
      "Bool": {
        "Other": "input.is_done()"
      }
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1401:15:1401:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "at <= input.end()",
          "lhs": "at",
          "rhs": "input.end()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1378:42:1378:62": [
    {
      "Match": {
        "match_source": "regex-automata/src/nfa/thompson/backtrack.rs:1378:42:1378:62",
        "match_str": "input.get_anchored()",
        "match_kind": {
          "Enum": [
            "No",
            "Yes",
            "Pattern"
          ]
        },
        "arms": {
          "regex-automata/src/nfa/thompson/backtrack.rs:1389:13:1389:26": {
            "pat": {
              "pat_str": "Anchored::Yes",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/backtrack.rs:1389:30:1389:63"
          },
          "regex-automata/src/nfa/thompson/backtrack.rs:1390:13:1390:35": {
            "pat": {
              "pat_str": "Anchored::Pattern(pid)",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/backtrack.rs:1390:39:1393:14"
          },
          "regex-automata/src/nfa/thompson/backtrack.rs:1381:13:1381:25": {
            "pat": {
              "pat_str": "Anchored::No",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/backtrack.rs:1381:29:1388:14"
          }
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1402:16:1402:39": [
    {
      "Bool": {
        "Other": "let Some(ref pre) = pre"
      }
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1371:21:1371:37": [
    {
      "For": {
        "iter_var": "slot",
        "iter_range": "slots.iter_mut()"
      }
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1390:45:1390:72": [
    {
      "Match": {
        "match_source": "regex-automata/src/nfa/thompson/backtrack.rs:1390:45:1390:72",
        "match_str": "self.nfa.start_pattern(pid)",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/nfa/thompson/backtrack.rs:1391:17:1391:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/backtrack.rs:1391:25:1391:40"
          },
          "regex-automata/src/nfa/thompson/backtrack.rs:1392:17:1392:26": {
            "pat": {
              "pat_str": "Some(sid)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/backtrack.rs:1392:30:1392:41"
          }
        }
      }
    }
  ]
}