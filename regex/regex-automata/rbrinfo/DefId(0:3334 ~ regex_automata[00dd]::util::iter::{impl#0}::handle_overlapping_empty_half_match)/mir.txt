bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/util/iter.rs:642:9-642:73)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/util/iter.rs:642:9-642:19)
  2: _5 = &mut ((*_1).0: util::search::Input<'_>)
    SourceInfo(regex-automata/src/util/iter.rs:642:9-642:19)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/iter.rs:642:30-642:72)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/util/iter.rs:642:30-642:63)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/util/iter.rs:642:30-642:48)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/util/iter.rs:642:30-642:40)
  7: _9 = &((*_1).0: util::search::Input<'_>)
    SourceInfo(regex-automata/src/util/iter.rs:642:30-642:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:642:30-642:48)
      kind: _8 = util::search::Input::<'_>::start(move _9) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/iter.rs:642:47-642:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:642:30-642:63)
      kind: _7 = core::num::<impl usize>::checked_add(move _8, const 1_usize) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/iter.rs:642:62-642:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:642:30-642:72)
      kind: _6 = core::option::Option::<usize>::unwrap(move _7) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/iter.rs:642:71-642:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:642:9-642:73)
      kind: _4 = util::search::Input::<'_>::set_start(move _5, move _6) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/iter.rs:642:72-642:73)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/iter.rs:642:72-642:73)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/iter.rs:642:73-642:74)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/util/iter.rs:643:9-643:15)
  4: _10 = &mut _3
    SourceInfo(regex-automata/src/util/iter.rs:643:9-643:15)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/util/iter.rs:643:9-643:28)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/util/iter.rs:643:16-643:27)
  7: StorageLive(_13)
    SourceInfo(regex-automata/src/util/iter.rs:643:16-643:27)
  8: _13 = &((*_1).0: util::search::Input<'_>)
    SourceInfo(regex-automata/src/util/iter.rs:643:16-643:27)
  9: _12 = &(*_13)
    SourceInfo(regex-automata/src/util/iter.rs:643:16-643:27)
  10: _11 = (move _12,)
    SourceInfo(regex-automata/src/util/iter.rs:643:9-643:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:643:9-643:28)
      kind: _0 = <F as core::ops::FnMut<(&util::search::Input<'_>,)>>::call_mut(move _10, move _11) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/iter.rs:643:27-643:28)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/util/iter.rs:643:27-643:28)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/util/iter.rs:643:27-643:28)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/util/iter.rs:644:5-644:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:644:5-644:6)
      kind: drop(_3) -> [return: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:644:6-644:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:644:5-644:6)
      kind: drop(_3) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:625:5-644:6)
      kind: resume
  }
  preds [bb5, bb7]
  succs []

