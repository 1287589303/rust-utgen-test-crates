bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1361:23-1361:52)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1361:23-1361:44)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1361:23-1361:44)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1361:23-1361:31)
  4: _5 = &((*_1).1: nfa::thompson::nfa::NFA)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1361:23-1361:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:1361:23-1361:44)
      kind: _4 = nfa::thompson::nfa::NFA::group_info(move _5) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: _3 = &(*_4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1361:23-1361:44)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1361:43-1361:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:1361:23-1361:52)
      kind: _2 = <util::captures::GroupInfo as core::clone::Clone>::clone(move _3) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1361:51-1361:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:1361:9-1361:53)
      kind: _0 = util::captures::Captures::all(move _2) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1361:52-1361:53)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:1362:5-1362:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:1362:6-1362:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:1361:52-1361:53)
      kind: drop(_2) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:1360:5-1362:6)
      kind: resume
  }
  preds [bb0, bb1, bb4]
  succs []

