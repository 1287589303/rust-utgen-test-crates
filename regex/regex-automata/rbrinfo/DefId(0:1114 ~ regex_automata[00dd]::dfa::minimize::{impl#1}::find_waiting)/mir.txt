bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:9-280:28)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:9-280:28)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:9-280:21)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:9-280:28)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:9-280:21)
  5: _7 = &((*_1).3: std::vec::Vec<dfa::minimize::StateSet>)
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:9-280:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:280:9-280:28)
      kind: _6 = <std::vec::Vec<dfa::minimize::StateSet> as core::ops::Deref>::deref(move _7) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _5 = &(*_6)
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:9-280:21)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:20-280:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:280:9-280:28)
      kind: _4 = core::slice::<impl [dfa::minimize::StateSet]>::iter(move _5) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: _3 = &mut _4
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:9-280:28)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:27-280:28)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:38-280:50)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:38-280:50)
  4: _9 = &_2
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:38-280:50)
  5: _8 = {closure@regex-automata/src/dfa/minimize.rs:280:38: 280:41} { set: move _9 }
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:38-280:50)
  6: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:40-280:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:280:9-280:51)
      kind: _0 = <core::slice::Iter<'_, dfa::minimize::StateSet> as core::iter::Iterator>::position::<{closure@regex-automata/src/dfa/minimize.rs:280:38: 280:41}>(move _3, move _8) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:50-280:51)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/minimize.rs:280:50-280:51)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/minimize.rs:281:5-281:6)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/minimize.rs:281:5-281:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:281:6-281:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:279:5-281:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

