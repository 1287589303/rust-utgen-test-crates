bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2706:13-2706:16)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2706:19-2706:25)
  2: _3 = (_1.0: u64)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2706:19-2706:25)
  3: _4 = Lt(const dfa::onepass::PatternEpsilons::PATTERN_ID_SHIFT, const 64_u64)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2706:19-2706:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2706:19-2706:62)
      kind: assert(move _4, "attempt to shift right by `{}`, which would overflow", const dfa::onepass::PatternEpsilons::PATTERN_ID_SHIFT) -> [success: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: _2 = Shr(move _3, const dfa::onepass::PatternEpsilons::PATTERN_ID_SHIFT)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2706:19-2706:62)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2706:61-2706:62)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2706:13-2706:16)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2707:12-2707:52)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2707:12-2707:15)
  5: _6 = _2
    SourceInfo(regex-automata/src/dfa/onepass.rs:2707:12-2707:15)
  6: _5 = Eq(move _6, const dfa::onepass::PatternEpsilons::PATTERN_ID_LIMIT)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2707:12-2707:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2707:12-2707:52)
      kind: switchInt(move _5) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2707:51-2707:52)
  1: _0 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/dfa/onepass.rs:2708:13-2708:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2707:9-2711:10)
      kind: goto -> bb6
  }
  preds [bb1]
  succs [bb6]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2707:51-2707:52)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2710:18-2710:58)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2710:43-2710:57)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2710:43-2710:46)
  4: _9 = _2
    SourceInfo(regex-automata/src/dfa/onepass.rs:2710:43-2710:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2710:43-2710:57)
      kind: _8 = <u64 as util::int::U64>::as_usize(move _9) -> [return: bb4, unwind: bb7]
  }
  preds [bb1]
  succs [bb4, bb7]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2710:56-2710:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2710:18-2710:58)
      kind: _7 = util::primitives::PatternID::new_unchecked(move _8) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2710:57-2710:58)
  1: _0 = core::option::Option::<util::primitives::PatternID>::Some(move _7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2710:13-2710:59)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2710:58-2710:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2707:9-2711:10)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2711:9-2711:10)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2712:5-2712:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2712:6-2712:6)
      kind: return
  }
  preds [bb2, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2705:5-2712:6)
      kind: resume
  }
  preds [bb0, bb3, bb4]
  succs []

