bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:9-546:49)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:9-546:29)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:9-546:49)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:9-546:29)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:9-546:29)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:9-546:15)
  6: _8 = &((*_1).0: std::sync::Arc<nfa::thompson::nfa::Inner>)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:9-546:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:9-546:29)
      kind: _7 = <std::sync::Arc<nfa::thompson::nfa::Inner> as core::ops::Deref>::deref(move _8) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:14-546:15)
  1: _6 = &((*_7).3: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:9-546:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:9-546:49)
      kind: _5 = <std::vec::Vec<util::primitives::StateID> as core::ops::Deref>::deref(move _6) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: _4 = &(*_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:9-546:29)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:28-546:29)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:34-546:48)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:34-546:37)
  4: _10 = &_2
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:34-546:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:34-546:48)
      kind: _9 = util::primitives::PatternID::as_usize(move _10) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:47-546:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:9-546:49)
      kind: _3 = core::slice::<impl [util::primitives::StateID]>::get::<usize>(move _4, move _9) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:48-546:49)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:48-546:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:9-546:58)
      kind: _0 = core::option::Option::<&util::primitives::StateID>::copied(move _3) -> [return: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:546:57-546:58)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:547:5-547:6)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:547:5-547:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:547:6-547:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:545:5-547:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

