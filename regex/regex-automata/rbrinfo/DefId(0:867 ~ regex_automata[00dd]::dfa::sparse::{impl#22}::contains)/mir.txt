bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2528:9-2528:17)
  1: _3 = &((*_1).0: std::collections::BTreeSet<util::primitives::StateID>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2528:9-2528:17)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2528:27-2528:29)
  3: _4 = &(*_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2528:27-2528:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2528:9-2528:30)
      kind: _0 = std::collections::BTreeSet::<util::primitives::StateID>::contains::<util::primitives::StateID>(move _3, move _4) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2528:29-2528:30)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2528:29-2528:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2529:6-2529:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2527:5-2529:6)
      kind: resume
  }
  preds [bb0]
  succs []

