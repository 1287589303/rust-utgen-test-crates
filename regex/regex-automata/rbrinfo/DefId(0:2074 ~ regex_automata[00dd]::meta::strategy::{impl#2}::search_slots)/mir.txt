bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:13-419:14)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:43)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:42)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:21)
  4: _8 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:21)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:29-419:34)
  6: _9 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:29-419:34)
  7: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:36-419:41)
  8: _10 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:36-419:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:42)
      kind: _7 = <meta::strategy::Pre<P> as meta::strategy::Strategy>::search(move _8, move _9, move _10) -> [return: bb1, unwind: bb24]
  }
  preds []
  succs [bb1, bb24]

bb1
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:41-419:42)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:41-419:42)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:41-419:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:43)
      kind: _6 = <core::option::Option<util::search::Match> as core::ops::Try>::branch(move _7) -> [return: bb2, unwind: bb24]
  }
  preds [bb0]
  succs [bb2, bb24]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:42-419:43)
  1: PlaceMention(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:43)
  2: _11 = discriminant(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:43)
      kind: switchInt(move _11) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _6)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:43)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:419:42-419:43)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:43)
  1: _15 = ((_6 as Continue).0: util::search::Match)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:43)
  2: _5 = _15
    SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:43)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:42-419:43)
  4: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:13-419:14)
  5: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:43-419:44)
  6: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:420:9-422:10)
  7: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:420:29-420:45)
  8: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:420:29-420:34)
  9: _18 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:420:29-420:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:420:29-420:45)
      kind: _17 = core::slice::<impl [core::option::Option<util::primitives::NonMaxUsize>]>::get_mut::<usize>(move _18, const 0_usize) -> [return: bb8, unwind: bb24]
  }
  preds [bb2, bb4]
  succs [bb8, bb24]

bb6
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:42-419:43)
  1: _12 = ((_6 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:42-419:43)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:42-419:43)
  3: _14 = _12
    SourceInfo(regex-automata/src/meta/strategy.rs:419:42-419:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:419:17-419:43)
      kind: _0 = <core::option::Option<util::primitives::PatternID> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _14) -> [return: bb7, unwind: bb24]
  }
  preds [bb4]
  succs [bb7, bb24]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:42-419:43)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:42-419:43)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:419:43-419:44)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:427:5-427:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:427:6-427:6)
      kind: goto -> bb23
  }
  preds [bb6]
  succs [bb23]

bb8
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:420:44-420:45)
  1: PlaceMention(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:420:29-420:45)
  2: _19 = discriminant(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:420:29-420:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:420:16-420:26)
      kind: switchInt(move _19) -> [1: bb9, otherwise: bb13]
  }
  preds [bb5]
  succs [bb9, bb13]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:420:16-420:26)
      kind: falseEdge -> [real: bb10, imaginary: bb13]
  }
  preds [bb8]
  succs [bb10, bb13]

bb10
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:420:21-420:25)
  1: _20 = move ((_17 as Some).0: &mut core::option::Option<util::primitives::NonMaxUsize>)
    SourceInfo(regex-automata/src/meta/strategy.rs:420:21-420:25)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:421:21-421:48)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:421:38-421:47)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:421:38-421:39)
  5: _23 = &_5
    SourceInfo(regex-automata/src/meta/strategy.rs:421:38-421:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:421:38-421:47)
      kind: _22 = util::search::Match::start(move _23) -> [return: bb11, unwind: bb24]
  }
  preds [bb9]
  succs [bb11, bb24]

bb11
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:421:46-421:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:421:21-421:48)
      kind: _21 = util::primitives::NonMaxUsize::new(move _22) -> [return: bb12, unwind: bb24]
  }
  preds [bb10]
  succs [bb12, bb24]

bb12
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:421:47-421:48)
  1: (*_20) = move _21
    SourceInfo(regex-automata/src/meta/strategy.rs:421:13-421:48)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:421:47-421:48)
  3: _16 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:420:46-422:10)
  4: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:422:9-422:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:420:9-422:10)
      kind: goto -> bb14
  }
  preds [bb11]
  succs [bb14]

bb13
  0: _16 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:422:10-422:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:420:9-422:10)
      kind: goto -> bb14
  }
  preds [bb8, bb9]
  succs [bb14]

bb14
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:422:9-422:10)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:422:9-422:10)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:423:9-425:10)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:423:29-423:45)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:423:29-423:34)
  5: _26 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:423:29-423:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:423:29-423:45)
      kind: _25 = core::slice::<impl [core::option::Option<util::primitives::NonMaxUsize>]>::get_mut::<usize>(move _26, const 1_usize) -> [return: bb15, unwind: bb24]
  }
  preds [bb12, bb13]
  succs [bb15, bb24]

bb15
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:423:44-423:45)
  1: PlaceMention(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:423:29-423:45)
  2: _27 = discriminant(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:423:29-423:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:423:16-423:26)
      kind: switchInt(move _27) -> [1: bb16, otherwise: bb20]
  }
  preds [bb14]
  succs [bb16, bb20]

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:423:16-423:26)
      kind: falseEdge -> [real: bb17, imaginary: bb20]
  }
  preds [bb15]
  succs [bb17, bb20]

bb17
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:423:21-423:25)
  1: _28 = move ((_25 as Some).0: &mut core::option::Option<util::primitives::NonMaxUsize>)
    SourceInfo(regex-automata/src/meta/strategy.rs:423:21-423:25)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:424:21-424:46)
  3: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:424:38-424:45)
  4: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:424:38-424:39)
  5: _31 = &_5
    SourceInfo(regex-automata/src/meta/strategy.rs:424:38-424:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:424:38-424:45)
      kind: _30 = util::search::Match::end(move _31) -> [return: bb18, unwind: bb24]
  }
  preds [bb16]
  succs [bb18, bb24]

bb18
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:424:44-424:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:424:21-424:46)
      kind: _29 = util::primitives::NonMaxUsize::new(move _30) -> [return: bb19, unwind: bb24]
  }
  preds [bb17]
  succs [bb19, bb24]

bb19
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:424:45-424:46)
  1: (*_28) = move _29
    SourceInfo(regex-automata/src/meta/strategy.rs:424:13-424:46)
  2: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:424:45-424:46)
  3: _24 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:423:46-425:10)
  4: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:425:9-425:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:423:9-425:10)
      kind: goto -> bb21
  }
  preds [bb18]
  succs [bb21]

bb20
  0: _24 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:425:10-425:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:423:9-425:10)
      kind: goto -> bb21
  }
  preds [bb15, bb16]
  succs [bb21]

bb21
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:425:9-425:10)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:425:9-425:10)
  2: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:426:14-426:25)
  3: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:426:14-426:15)
  4: _33 = &_5
    SourceInfo(regex-automata/src/meta/strategy.rs:426:14-426:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:426:14-426:25)
      kind: _32 = util::search::Match::pattern(move _33) -> [return: bb22, unwind: bb24]
  }
  preds [bb19, bb20]
  succs [bb22, bb24]

bb22
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:426:24-426:25)
  1: _0 = core::option::Option::<util::primitives::PatternID>::Some(move _32)
    SourceInfo(regex-automata/src/meta/strategy.rs:426:9-426:26)
  2: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:426:25-426:26)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:427:5-427:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:427:6-427:6)
      kind: goto -> bb23
  }
  preds [bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:427:6-427:6)
      kind: return
  }
  preds [bb7, bb22]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:413:5-427:6)
      kind: resume
  }
  preds [bb0, bb1, bb5, bb6, bb10, bb11, bb14, bb17, bb18, bb21]
  succs []

