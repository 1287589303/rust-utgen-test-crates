{
  "regex-automata/src/util/start.rs:246:33:246:50": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "lineterm != b'\\n'",
          "lhs": "lineterm",
          "rhs": "b'\\n'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/start.rs:233:15:233:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "byte <= b'z'",
          "lhs": "byte",
          "rhs": "b'z'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/start.rs:228:15:228:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "byte <= b'Z'",
          "lhs": "byte",
          "rhs": "b'Z'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/start.rs:223:15:223:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "byte <= b'9'",
          "lhs": "byte",
          "rhs": "b'9'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/start.rs:246:12:246:29": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "lineterm != b'\\r'",
          "lhs": "lineterm",
          "rhs": "b'\\r'",
          "cmp_with_int": true
        }
      }
    }
  ]
}