bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/interpolate.rs:261:9-261:14)
  1: _2 = const 0_usize
    SourceInfo(regex-automata/src/util/interpolate.rs:261:17-261:18)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/util/interpolate.rs:261:9-261:14)
  3: StorageLive(_3)
    SourceInfo(regex-automata/src/util/interpolate.rs:262:9-262:12)
  4: _3 = &(*_1)
    SourceInfo(regex-automata/src/util/interpolate.rs:262:22-262:33)
  5: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/interpolate.rs:262:9-262:12)
  6: AscribeUserType(_3, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(regex-automata/src/util/interpolate.rs:262:14-262:19)
  7: StorageLive(_4)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:5-265:6)
  8: StorageLive(_5)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:8-263:22)
  9: StorageLive(_6)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:8-263:17)
  10: StorageLive(_7)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:8-263:11)
  11: _7 = &(*_3)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:8-263:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:263:8-263:17)
      kind: _6 = core::slice::<impl [u8]>::len(move _7) -> [return: bb1, unwind: bb35]
  }
  preds []
  succs [bb1, bb35]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:16-263:17)
  1: _5 = Le(move _6, const 1_usize)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:8-263:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:263:8-263:22)
      kind: switchInt(move _5) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:21-263:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:263:41-265:6)
      kind: goto -> bb6
  }
  preds [bb1]
  succs [bb6]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:21-263:22)
  1: StorageLive(_8)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:26-263:40)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:26-263:32)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:30-263:31)
  4: _10 = const 0_usize
    SourceInfo(regex-automata/src/util/interpolate.rs:263:30-263:31)
  5: _11 = Len((*_3))
    SourceInfo(regex-automata/src/util/interpolate.rs:263:26-263:32)
  6: _12 = Lt(_10, _11)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:26-263:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:263:26-263:32)
      kind: assert(move _12, "index out of bounds: the length is {} but the index is {}", move _11, _10) -> [success: bb4, unwind: bb35]
  }
  preds [bb1]
  succs [bb4, bb35]

bb4
  0: _9 = (*_3)[_10]
    SourceInfo(regex-automata/src/util/interpolate.rs:263:26-263:32)
  1: _8 = Ne(move _9, const 36_u8)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:26-263:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:263:26-263:40)
      kind: switchInt(move _8) -> [0: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:39-263:40)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:39-263:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:263:41-265:6)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  0: _0 = core::option::Option::<util::interpolate::CaptureRef<'_>>::None
    SourceInfo(regex-automata/src/util/interpolate.rs:264:16-264:20)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/interpolate.rs:265:5-265:6)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/util/interpolate.rs:265:5-265:6)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/util/interpolate.rs:265:5-265:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb33
  }
  preds [bb2, bb5]
  succs [bb33]

bb7
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:39-263:40)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/util/interpolate.rs:263:39-263:40)
  2: _4 = const ()
    SourceInfo(regex-automata/src/util/interpolate.rs:265:6-265:6)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/util/interpolate.rs:265:5-265:6)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/util/interpolate.rs:265:5-265:6)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/util/interpolate.rs:265:5-265:6)
  6: _14 = AddWithOverflow(_2, const 1_usize)
    SourceInfo(regex-automata/src/util/interpolate.rs:266:5-266:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:266:5-266:11)
      kind: assert(!move (_14.1: bool), "attempt to compute `{} + {}`, which would overflow", _2, const 1_usize) -> [success: bb8, unwind: bb35]
  }
  preds [bb4]
  succs [bb8, bb35]

bb8
  0: _2 = move (_14.0: usize)
    SourceInfo(regex-automata/src/util/interpolate.rs:266:5-266:11)
  1: StorageLive(_15)
    SourceInfo(regex-automata/src/util/interpolate.rs:267:5-269:6)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/util/interpolate.rs:267:8-267:22)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/util/interpolate.rs:267:8-267:14)
  4: StorageLive(_18)
    SourceInfo(regex-automata/src/util/interpolate.rs:267:12-267:13)
  5: _18 = _2
    SourceInfo(regex-automata/src/util/interpolate.rs:267:12-267:13)
  6: _19 = Len((*_3))
    SourceInfo(regex-automata/src/util/interpolate.rs:267:8-267:14)
  7: _20 = Lt(_18, _19)
    SourceInfo(regex-automata/src/util/interpolate.rs:267:8-267:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:267:8-267:14)
      kind: assert(move _20, "index out of bounds: the length is {} but the index is {}", move _19, _18) -> [success: bb9, unwind: bb35]
  }
  preds [bb7]
  succs [bb9, bb35]

bb9
  0: _17 = (*_3)[_18]
    SourceInfo(regex-automata/src/util/interpolate.rs:267:8-267:14)
  1: _16 = Eq(move _17, const 123_u8)
    SourceInfo(regex-automata/src/util/interpolate.rs:267:8-267:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:267:8-267:22)
      kind: switchInt(move _16) -> [0: bb13, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb13]

bb10
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/util/interpolate.rs:267:21-267:22)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/util/interpolate.rs:267:21-267:22)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/util/interpolate.rs:268:36-268:39)
  3: _22 = &(*_3)
    SourceInfo(regex-automata/src/util/interpolate.rs:268:36-268:39)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/util/interpolate.rs:268:41-268:46)
  5: StorageLive(_24)
    SourceInfo(regex-automata/src/util/interpolate.rs:268:41-268:42)
  6: _24 = _2
    SourceInfo(regex-automata/src/util/interpolate.rs:268:41-268:42)
  7: _25 = AddWithOverflow(_24, const 1_usize)
    SourceInfo(regex-automata/src/util/interpolate.rs:268:41-268:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:268:41-268:46)
      kind: assert(!move (_25.1: bool), "attempt to compute `{} + {}`, which would overflow", move _24, const 1_usize) -> [success: bb11, unwind: bb35]
  }
  preds [bb9]
  succs [bb11, bb35]

bb11
  0: _23 = move (_25.0: usize)
    SourceInfo(regex-automata/src/util/interpolate.rs:268:41-268:46)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/util/interpolate.rs:268:45-268:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:268:16-268:47)
      kind: _0 = util::interpolate::find_cap_ref_braced(move _22, move _23) -> [return: bb12, unwind: bb35]
  }
  preds [bb10]
  succs [bb12, bb35]

bb12
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/util/interpolate.rs:268:46-268:47)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/util/interpolate.rs:268:46-268:47)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/util/interpolate.rs:269:5-269:6)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/util/interpolate.rs:269:5-269:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb33
  }
  preds [bb11]
  succs [bb33]

bb13
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/util/interpolate.rs:267:21-267:22)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/util/interpolate.rs:267:21-267:22)
  2: _15 = const ()
    SourceInfo(regex-automata/src/util/interpolate.rs:269:6-269:6)
  3: StorageDead(_16)
    SourceInfo(regex-automata/src/util/interpolate.rs:269:5-269:6)
  4: StorageDead(_15)
    SourceInfo(regex-automata/src/util/interpolate.rs:269:5-269:6)
  5: StorageLive(_26)
    SourceInfo(regex-automata/src/util/interpolate.rs:270:9-270:20)
  6: _26 = _2
    SourceInfo(regex-automata/src/util/interpolate.rs:270:23-270:24)
  7: FakeRead(ForLet(None), _26)
    SourceInfo(regex-automata/src/util/interpolate.rs:270:9-270:20)
  8: StorageLive(_27)
    SourceInfo(regex-automata/src/util/interpolate.rs:271:5-273:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:271:5-273:6)
      kind: goto -> bb14
  }
  preds [bb9]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:271:5-273:6)
      kind: falseUnwind -> [real: bb15, unwind: bb35]
  }
  preds [bb13, bb20]
  succs [bb15, bb35]

bb15
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/util/interpolate.rs:271:11-271:71)
  1: StorageLive(_30)
    SourceInfo(regex-automata/src/util/interpolate.rs:271:11-271:36)
  2: StorageLive(_31)
    SourceInfo(regex-automata/src/util/interpolate.rs:271:11-271:27)
  3: StorageLive(_32)
    SourceInfo(regex-automata/src/util/interpolate.rs:271:11-271:14)
  4: _32 = &(*_3)
    SourceInfo(regex-automata/src/util/interpolate.rs:271:11-271:14)
  5: StorageLive(_33)
    SourceInfo(regex-automata/src/util/interpolate.rs:271:19-271:26)
  6: _33 = _26
    SourceInfo(regex-automata/src/util/interpolate.rs:271:19-271:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:271:11-271:27)
      kind: _31 = core::slice::<impl [u8]>::get::<usize>(move _32, move _33) -> [return: bb16, unwind: bb35]
  }
  preds [bb14]
  succs [bb16, bb35]

bb16
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/util/interpolate.rs:271:26-271:27)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/util/interpolate.rs:271:26-271:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:271:11-271:36)
      kind: _30 = core::option::Option::<&u8>::copied(move _31) -> [return: bb17, unwind: bb35]
  }
  preds [bb15]
  succs [bb17, bb35]

bb17
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/util/interpolate.rs:271:35-271:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:271:11-271:71)
      kind: _29 = core::option::Option::<u8>::map_or::<bool, fn(u8) -> bool {util::interpolate::is_valid_cap_letter}>(move _30, const false, util::interpolate::is_valid_cap_letter) -> [return: bb18, unwind: bb35]
  }
  preds [bb16]
  succs [bb18, bb35]

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:271:11-271:71)
      kind: switchInt(move _29) -> [0: bb21, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb21]

bb19
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/util/interpolate.rs:271:70-271:71)
  1: _34 = AddWithOverflow(_26, const 1_usize)
    SourceInfo(regex-automata/src/util/interpolate.rs:272:9-272:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:272:9-272:21)
      kind: assert(!move (_34.1: bool), "attempt to compute `{} + {}`, which would overflow", _26, const 1_usize) -> [success: bb20, unwind: bb35]
  }
  preds [bb18]
  succs [bb20, bb35]

bb20
  0: _26 = move (_34.0: usize)
    SourceInfo(regex-automata/src/util/interpolate.rs:272:9-272:21)
  1: _28 = const ()
    SourceInfo(regex-automata/src/util/interpolate.rs:271:72-273:6)
  2: StorageDead(_29)
    SourceInfo(regex-automata/src/util/interpolate.rs:273:5-273:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:271:5-273:6)
      kind: goto -> bb14
  }
  preds [bb19]
  succs [bb14]

bb21
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/util/interpolate.rs:271:70-271:71)
  1: StorageLive(_36)
    SourceInfo(regex-automata/src/util/interpolate.rs:271:5-273:6)
  2: _27 = const ()
    SourceInfo(regex-automata/src/util/interpolate.rs:271:5-273:6)
  3: StorageDead(_36)
    SourceInfo(regex-automata/src/util/interpolate.rs:273:5-273:6)
  4: StorageDead(_29)
    SourceInfo(regex-automata/src/util/interpolate.rs:273:5-273:6)
  5: StorageDead(_27)
    SourceInfo(regex-automata/src/util/interpolate.rs:273:5-273:6)
  6: StorageLive(_38)
    SourceInfo(regex-automata/src/util/interpolate.rs:274:5-276:6)
  7: StorageLive(_39)
    SourceInfo(regex-automata/src/util/interpolate.rs:274:8-274:20)
  8: StorageLive(_40)
    SourceInfo(regex-automata/src/util/interpolate.rs:274:8-274:15)
  9: _40 = _26
    SourceInfo(regex-automata/src/util/interpolate.rs:274:8-274:15)
  10: StorageLive(_41)
    SourceInfo(regex-automata/src/util/interpolate.rs:274:19-274:20)
  11: _41 = _2
    SourceInfo(regex-automata/src/util/interpolate.rs:274:19-274:20)
  12: _39 = Eq(move _40, move _41)
    SourceInfo(regex-automata/src/util/interpolate.rs:274:8-274:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:274:8-274:20)
      kind: switchInt(move _39) -> [0: bb23, otherwise: bb22]
  }
  preds [bb18]
  succs [bb22, bb23]

bb22
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/util/interpolate.rs:274:19-274:20)
  1: StorageDead(_40)
    SourceInfo(regex-automata/src/util/interpolate.rs:274:19-274:20)
  2: _0 = core::option::Option::<util::interpolate::CaptureRef<'_>>::None
    SourceInfo(regex-automata/src/util/interpolate.rs:275:16-275:20)
  3: StorageDead(_39)
    SourceInfo(regex-automata/src/util/interpolate.rs:276:5-276:6)
  4: StorageDead(_38)
    SourceInfo(regex-automata/src/util/interpolate.rs:276:5-276:6)
  5: StorageDead(_26)
    SourceInfo(regex-automata/src/util/interpolate.rs:290:1-290:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb33
  }
  preds [bb21]
  succs [bb33]

bb23
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/util/interpolate.rs:274:19-274:20)
  1: StorageDead(_40)
    SourceInfo(regex-automata/src/util/interpolate.rs:274:19-274:20)
  2: _38 = const ()
    SourceInfo(regex-automata/src/util/interpolate.rs:276:6-276:6)
  3: StorageDead(_39)
    SourceInfo(regex-automata/src/util/interpolate.rs:276:5-276:6)
  4: StorageDead(_38)
    SourceInfo(regex-automata/src/util/interpolate.rs:276:5-276:6)
  5: StorageLive(_43)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:9-281:12)
  6: StorageLive(_44)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:15-281:53)
  7: StorageLive(_45)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:36-281:52)
  8: StorageLive(_46)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:36-281:52)
  9: StorageLive(_47)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:40-281:52)
  10: StorageLive(_48)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:37-281:40)
  11: _48 = &(*_3)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:37-281:40)
  12: StorageLive(_49)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:41-281:51)
  13: StorageLive(_50)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:41-281:42)
  14: _50 = _2
    SourceInfo(regex-automata/src/util/interpolate.rs:281:41-281:42)
  15: StorageLive(_51)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:44-281:51)
  16: _51 = _26
    SourceInfo(regex-automata/src/util/interpolate.rs:281:44-281:51)
  17: _49 = core::ops::Range::<usize> { start: move _50, end: move _51 }
    SourceInfo(regex-automata/src/util/interpolate.rs:281:41-281:51)
  18: StorageDead(_51)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:50-281:51)
  19: StorageDead(_50)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:50-281:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:281:40-281:52)
      kind: _47 = <[u8] as core::ops::Index<core::ops::Range<usize>>>::index(move _48, move _49) -> [return: bb24, unwind: bb35]
  }
  preds [bb21]
  succs [bb24, bb35]

bb24
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:51-281:52)
  1: StorageDead(_48)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:51-281:52)
  2: _46 = &(*_47)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:36-281:52)
  3: _45 = &(*_46)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:36-281:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:281:15-281:53)
      kind: _44 = core::str::from_utf8(move _45) -> [return: bb25, unwind: bb35]
  }
  preds [bb23]
  succs [bb25, bb35]

bb25
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:52-281:53)
  1: StorageLive(_52)
    SourceInfo(regex-automata/src/util/interpolate.rs:282:17-282:43)
  2: StorageLive(_53)
    SourceInfo(regex-automata/src/util/interpolate.rs:282:17-282:43)
  3: _53 = const "valid UTF-8 capture name"
    SourceInfo(regex-automata/src/util/interpolate.rs:282:17-282:43)
  4: _52 = &(*_53)
    SourceInfo(regex-automata/src/util/interpolate.rs:282:17-282:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:281:15-282:44)
      kind: _43 = core::result::Result::<&str, core::str::Utf8Error>::expect(move _44, move _52) -> [return: bb26, unwind: bb35]
  }
  preds [bb24]
  succs [bb26, bb35]

bb26
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/util/interpolate.rs:282:43-282:44)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/util/interpolate.rs:282:43-282:44)
  2: FakeRead(ForLet(None), _43)
    SourceInfo(regex-automata/src/util/interpolate.rs:281:9-281:12)
  3: StorageDead(_53)
    SourceInfo(regex-automata/src/util/interpolate.rs:282:44-282:45)
  4: StorageDead(_47)
    SourceInfo(regex-automata/src/util/interpolate.rs:282:44-282:45)
  5: StorageDead(_46)
    SourceInfo(regex-automata/src/util/interpolate.rs:282:44-282:45)
  6: StorageLive(_54)
    SourceInfo(regex-automata/src/util/interpolate.rs:283:10-289:6)
  7: StorageLive(_55)
    SourceInfo(regex-automata/src/util/interpolate.rs:284:14-287:10)
  8: StorageLive(_56)
    SourceInfo(regex-automata/src/util/interpolate.rs:284:20-284:40)
  9: StorageLive(_57)
    SourceInfo(regex-automata/src/util/interpolate.rs:284:20-284:23)
  10: _57 = &(*_43)
    SourceInfo(regex-automata/src/util/interpolate.rs:284:20-284:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:284:20-284:40)
      kind: _56 = core::str::<impl str>::parse::<usize>(move _57) -> [return: bb27, unwind: bb35]
  }
  preds [bb25]
  succs [bb27, bb35]

bb27
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/util/interpolate.rs:284:39-284:40)
  1: PlaceMention(_56)
    SourceInfo(regex-automata/src/util/interpolate.rs:284:20-284:40)
  2: _58 = discriminant(_56)
    SourceInfo(regex-automata/src/util/interpolate.rs:284:20-284:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:284:14-284:40)
      kind: switchInt(move _58) -> [0: bb29, 1: bb30, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb29, bb30]

bb28
  0: FakeRead(ForMatchedPlace(None), _56)
    SourceInfo(regex-automata/src/util/interpolate.rs:284:20-284:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:284:20-284:40)
      kind: unreachable
  }
  preds [bb27]
  succs []

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:285:13-285:18)
      kind: falseEdge -> [real: bb31, imaginary: bb30]
  }
  preds [bb27]
  succs [bb30, bb31]

bb30
  0: StorageLive(_61)
    SourceInfo(regex-automata/src/util/interpolate.rs:286:34-286:37)
  1: _61 = &(*_43)
    SourceInfo(regex-automata/src/util/interpolate.rs:286:34-286:37)
  2: _55 = util::interpolate::Ref::<'_>::Named(move _61)
    SourceInfo(regex-automata/src/util/interpolate.rs:286:23-286:38)
  3: StorageDead(_61)
    SourceInfo(regex-automata/src/util/interpolate.rs:286:37-286:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:286:37-286:38)
      kind: goto -> bb32
  }
  preds [bb27, bb29]
  succs [bb32]

bb31
  0: StorageLive(_59)
    SourceInfo(regex-automata/src/util/interpolate.rs:285:16-285:17)
  1: _59 = ((_56 as Ok).0: usize)
    SourceInfo(regex-automata/src/util/interpolate.rs:285:16-285:17)
  2: StorageLive(_60)
    SourceInfo(regex-automata/src/util/interpolate.rs:285:34-285:35)
  3: _60 = _59
    SourceInfo(regex-automata/src/util/interpolate.rs:285:34-285:35)
  4: _55 = util::interpolate::Ref::<'_>::Number(move _60)
    SourceInfo(regex-automata/src/util/interpolate.rs:285:22-285:36)
  5: StorageDead(_60)
    SourceInfo(regex-automata/src/util/interpolate.rs:285:35-285:36)
  6: StorageDead(_59)
    SourceInfo(regex-automata/src/util/interpolate.rs:285:35-285:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:285:35-285:36)
      kind: goto -> bb32
  }
  preds [bb29]
  succs [bb32]

bb32
  0: StorageLive(_62)
    SourceInfo(regex-automata/src/util/interpolate.rs:288:14-288:21)
  1: _62 = _26
    SourceInfo(regex-automata/src/util/interpolate.rs:288:14-288:21)
  2: _54 = util::interpolate::CaptureRef::<'_> { cap: move _55, end: move _62 }
    SourceInfo(regex-automata/src/util/interpolate.rs:283:10-289:6)
  3: StorageDead(_62)
    SourceInfo(regex-automata/src/util/interpolate.rs:289:5-289:6)
  4: StorageDead(_55)
    SourceInfo(regex-automata/src/util/interpolate.rs:289:5-289:6)
  5: _0 = core::option::Option::<util::interpolate::CaptureRef<'_>>::Some(move _54)
    SourceInfo(regex-automata/src/util/interpolate.rs:283:5-289:7)
  6: StorageDead(_54)
    SourceInfo(regex-automata/src/util/interpolate.rs:289:6-289:7)
  7: StorageDead(_43)
    SourceInfo(regex-automata/src/util/interpolate.rs:290:1-290:2)
  8: StorageDead(_26)
    SourceInfo(regex-automata/src/util/interpolate.rs:290:1-290:2)
  9: StorageDead(_3)
    SourceInfo(regex-automata/src/util/interpolate.rs:290:1-290:2)
  10: StorageDead(_2)
    SourceInfo(regex-automata/src/util/interpolate.rs:290:1-290:2)
  11: StorageDead(_56)
    SourceInfo(regex-automata/src/util/interpolate.rs:290:1-290:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:290:2-290:2)
      kind: goto -> bb34
  }
  preds [bb30, bb31]
  succs [bb34]

bb33
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/interpolate.rs:290:1-290:2)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/util/interpolate.rs:290:1-290:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:290:2-290:2)
      kind: goto -> bb34
  }
  preds [bb6, bb12, bb22]
  succs [bb34]

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:290:2-290:2)
      kind: return
  }
  preds [bb32, bb33]
  succs []

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/interpolate.rs:260:1-290:2)
      kind: resume
  }
  preds [bb0, bb3, bb7, bb8, bb10, bb11, bb14, bb15, bb16, bb17, bb19, bb23, bb24, bb25, bb26]
  succs []

