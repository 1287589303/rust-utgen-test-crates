bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/search.rs:1393:9-1401:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1393:9-1401:10)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1393:9-1401:10)
      kind: falseUnwind -> [real: bb2, unwind: bb11]
  }
  preds [bb0, bb8]
  succs [bb2, bb11]

bb2
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/util/search.rs:1393:41-1393:60)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/util/search.rs:1393:41-1393:48)
  2: _5 = &mut ((*_1).0: core::iter::Enumerate<core::slice::Iter<'_, bool>>)
    SourceInfo(regex-automata/src/util/search.rs:1393:41-1393:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1393:41-1393:60)
      kind: _4 = <core::iter::Enumerate<core::slice::Iter<'_, bool>> as core::iter::DoubleEndedIterator>::next_back(move _5) -> [return: bb3, unwind: bb11]
  }
  preds [bb1]
  succs [bb3, bb11]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/search.rs:1393:59-1393:60)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/util/search.rs:1393:41-1393:60)
  2: _6 = discriminant(_4)
    SourceInfo(regex-automata/src/util/search.rs:1393:41-1393:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1393:19-1393:38)
      kind: switchInt(move _6) -> [1: bb4, otherwise: bb9]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1393:19-1393:38)
      kind: falseEdge -> [real: bb5, imaginary: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  0: StorageLive(_7)
    SourceInfo(regex-automata/src/util/search.rs:1393:25-1393:30)
  1: _7 = (((_4 as Some).0: (usize, &bool)).0: usize)
    SourceInfo(regex-automata/src/util/search.rs:1393:25-1393:30)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/util/search.rs:1393:33-1393:36)
  3: _8 = (*(((_4 as Some).0: (usize, &bool)).1: &bool))
    SourceInfo(regex-automata/src/util/search.rs:1393:33-1393:36)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/util/search.rs:1394:16-1394:19)
  5: _9 = _8
    SourceInfo(regex-automata/src/util/search.rs:1394:16-1394:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1394:16-1394:19)
      kind: switchInt(move _9) -> [0: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/util/search.rs:1399:29-1399:60)
  1: StorageLive(_12)
    SourceInfo(regex-automata/src/util/search.rs:1399:54-1399:59)
  2: _12 = _7
    SourceInfo(regex-automata/src/util/search.rs:1399:54-1399:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1399:29-1399:60)
      kind: _11 = util::primitives::PatternID::new_unchecked(move _12) -> [return: bb7, unwind: bb11]
  }
  preds [bb5]
  succs [bb7, bb11]

bb7
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/search.rs:1399:59-1399:60)
  1: _0 = core::option::Option::<util::primitives::PatternID>::Some(move _11)
    SourceInfo(regex-automata/src/util/search.rs:1399:24-1399:61)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/util/search.rs:1399:60-1399:61)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/util/search.rs:1400:13-1400:14)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/util/search.rs:1401:9-1401:10)
  5: StorageDead(_7)
    SourceInfo(regex-automata/src/util/search.rs:1401:9-1401:10)
  6: StorageDead(_4)
    SourceInfo(regex-automata/src/util/search.rs:1401:9-1401:10)
  7: StorageDead(_2)
    SourceInfo(regex-automata/src/util/search.rs:1401:9-1401:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1403:6-1403:6)
      kind: goto -> bb10
  }
  preds [bb6]
  succs [bb10]

bb8
  0: _3 = const ()
    SourceInfo(regex-automata/src/util/search.rs:1400:14-1400:14)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/util/search.rs:1400:13-1400:14)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/util/search.rs:1401:9-1401:10)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/util/search.rs:1401:9-1401:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/util/search.rs:1401:9-1401:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1393:9-1401:10)
      kind: goto -> bb1
  }
  preds [bb5]
  succs [bb1]

bb9
  0: StorageLive(_14)
    SourceInfo(regex-automata/src/util/search.rs:1393:9-1401:10)
  1: _2 = const ()
    SourceInfo(regex-automata/src/util/search.rs:1393:9-1401:10)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/util/search.rs:1401:9-1401:10)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/util/search.rs:1401:9-1401:10)
  4: StorageDead(_2)
    SourceInfo(regex-automata/src/util/search.rs:1401:9-1401:10)
  5: _0 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/util/search.rs:1402:9-1402:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1403:6-1403:6)
      kind: goto -> bb10
  }
  preds [bb3, bb4]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1403:6-1403:6)
      kind: return
  }
  preds [bb7, bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1392:5-1403:6)
      kind: resume
  }
  preds [bb1, bb2, bb6]
  succs []

