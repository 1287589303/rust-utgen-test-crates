bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:9-865:13)
  1: _5 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:9-865:13)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:21-865:26)
  3: _6 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:21-865:26)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:28-865:41)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:28-865:41)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:29-865:41)
  7: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:29-865:34)
  8: _10 = move _3
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:29-865:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:29-865:41)
      kind: _9 = <I as core::convert::Into<util::search::Input<'_>>>::into(move _10) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:40-865:41)
  1: _8 = &_9
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:28-865:41)
  2: _7 = &(*_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:28-865:41)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:43-865:47)
  4: _11 = &mut (*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:43-865:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:9-865:48)
      kind: _0 = nfa::thompson::pikevm::PikeVM::search(move _5, move _6, move _7, move _11) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:47-865:48)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:47-865:48)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:47-865:48)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:47-865:48)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:866:5-866:6)
  5: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:866:5-866:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:866:5-866:6)
      kind: drop(_3) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:866:6-866:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:865:40-865:41)
      kind: drop(_10) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:866:5-866:6)
      kind: drop(_3) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:859:5-866:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

