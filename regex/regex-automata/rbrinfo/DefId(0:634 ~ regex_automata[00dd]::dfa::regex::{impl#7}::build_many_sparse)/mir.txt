bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:13-756:15)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:44)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:43)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:22)
  4: _6 = &(*_1)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:22)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:34-756:42)
  6: _7 = &(*_2)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:34-756:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:43)
      kind: _5 = dfa::regex::Builder::build_many::<P>(move _6, move _7) -> [return: bb1, unwind: bb61]
  }
  preds []
  succs [bb1, bb61]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:42-756:43)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:42-756:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:44)
      kind: _4 = <core::result::Result<dfa::regex::Regex, dfa::dense::BuildError> as core::ops::Try>::branch(move _5) -> [return: bb2, unwind: bb60]
  }
  preds [bb0]
  succs [bb2, bb60]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:43-756:44)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:44)
  2: _8 = discriminant(_4)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:44)
      kind: switchInt(move _8) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:44)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:756:43-756:44)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:44)
  1: _12 = move ((_4 as Continue).0: dfa::regex::Regex)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:44)
  2: _3 = move _12
    SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:756:43-756:44)
      kind: drop(_12) -> [return: bb8, unwind: bb59]
  }
  preds [bb2, bb4]
  succs [bb8, bb59]

bb6
  0: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:43-756:44)
  1: _9 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, dfa::dense::BuildError>)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:43-756:44)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:43-756:44)
  3: _11 = move _9
    SourceInfo(regex-automata/src/dfa/regex.rs:756:43-756:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:756:18-756:44)
      kind: _0 = <core::result::Result<dfa::regex::Regex<dfa::sparse::DFA<std::vec::Vec<u8>>>, dfa::dense::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::dense::BuildError>>>::from_residual(move _11) -> [return: bb7, unwind: bb57]
  }
  preds [bb4]
  succs [bb7, bb57]

bb7
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:43-756:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:756:43-756:44)
      kind: drop(_9) -> [return: bb40, unwind: bb59]
  }
  preds [bb6]
  succs [bb40, bb59]

bb8
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:43-756:44)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:13-756:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:756:44-756:45)
      kind: drop(_4) -> [return: bb9, unwind: bb56]
  }
  preds [bb5]
  succs [bb9, bb56]

bb9
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:44-756:45)
  1: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:13-757:20)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:48)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:47)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:35)
  5: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:35)
  6: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:25)
  7: _18 = &_3
    SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:35)
      kind: _17 = dfa::regex::Regex::forward(move _18) -> [return: bb10, unwind: bb56]
  }
  preds [bb8]
  succs [bb10, bb56]

bb10
  0: _16 = &(*_17)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:35)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:34-757:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:47)
      kind: _15 = dfa::dense::DFA::<std::vec::Vec<u32>>::to_sparse(move _16) -> [return: bb11, unwind: bb56]
  }
  preds [bb9]
  succs [bb11, bb56]

bb11
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:46-757:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:48)
      kind: _14 = <core::result::Result<dfa::sparse::DFA<std::vec::Vec<u8>>, dfa::dense::BuildError> as core::ops::Try>::branch(move _15) -> [return: bb12, unwind: bb55]
  }
  preds [bb10]
  succs [bb12, bb55]

bb12
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:47-757:48)
  1: PlaceMention(_14)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:48)
  2: _19 = discriminant(_14)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:48)
      kind: switchInt(move _19) -> [0: bb15, 1: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:48)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:47-757:48)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:48)
  1: _23 = move ((_14 as Continue).0: dfa::sparse::DFA<std::vec::Vec<u8>>)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:48)
  2: _13 = move _23
    SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:47-757:48)
      kind: drop(_23) -> [return: bb18, unwind: bb54]
  }
  preds [bb12, bb14]
  succs [bb18, bb54]

bb16
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:47-757:48)
  1: _20 = move ((_14 as Break).0: core::result::Result<core::convert::Infallible, dfa::dense::BuildError>)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:47-757:48)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:47-757:48)
  3: _22 = move _20
    SourceInfo(regex-automata/src/dfa/regex.rs:757:47-757:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:23-757:48)
      kind: _0 = <core::result::Result<dfa::regex::Regex<dfa::sparse::DFA<std::vec::Vec<u8>>>, dfa::dense::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::dense::BuildError>>>::from_residual(move _22) -> [return: bb17, unwind: bb52]
  }
  preds [bb14]
  succs [bb17, bb52]

bb17
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:47-757:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:47-757:48)
      kind: drop(_20) -> [return: bb37, unwind: bb54]
  }
  preds [bb16]
  succs [bb37, bb54]

bb18
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:47-757:48)
  1: FakeRead(ForLet(None), _13)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:13-757:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:48-757:49)
      kind: drop(_14) -> [return: bb19, unwind: bb51]
  }
  preds [bb15]
  succs [bb19, bb51]

bb19
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:48-757:49)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:48-757:49)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:13-758:20)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:48)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:47)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:35)
  6: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:35)
  7: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:25)
  8: _29 = &_3
    SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:35)
      kind: _28 = dfa::regex::Regex::reverse(move _29) -> [return: bb20, unwind: bb51]
  }
  preds [bb18]
  succs [bb20, bb51]

bb20
  0: _27 = &(*_28)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:35)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:34-758:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:47)
      kind: _26 = dfa::dense::DFA::<std::vec::Vec<u32>>::to_sparse(move _27) -> [return: bb21, unwind: bb51]
  }
  preds [bb19]
  succs [bb21, bb51]

bb21
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:46-758:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:48)
      kind: _25 = <core::result::Result<dfa::sparse::DFA<std::vec::Vec<u8>>, dfa::dense::BuildError> as core::ops::Try>::branch(move _26) -> [return: bb22, unwind: bb50]
  }
  preds [bb20]
  succs [bb22, bb50]

bb22
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:47-758:48)
  1: PlaceMention(_25)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:48)
  2: _30 = discriminant(_25)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:48)
      kind: switchInt(move _30) -> [0: bb25, 1: bb24, otherwise: bb23]
  }
  preds [bb21]
  succs [bb23, bb24, bb25]

bb23
  0: FakeRead(ForMatchedPlace(None), _25)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:48)
      kind: unreachable
  }
  preds [bb22]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:47-758:48)
      kind: falseEdge -> [real: bb26, imaginary: bb25]
  }
  preds [bb22]
  succs [bb25, bb26]

bb25
  0: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:48)
  1: _34 = move ((_25 as Continue).0: dfa::sparse::DFA<std::vec::Vec<u8>>)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:48)
  2: _24 = move _34
    SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:47-758:48)
      kind: drop(_34) -> [return: bb28, unwind: bb49]
  }
  preds [bb22, bb24]
  succs [bb28, bb49]

bb26
  0: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:47-758:48)
  1: _31 = move ((_25 as Break).0: core::result::Result<core::convert::Infallible, dfa::dense::BuildError>)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:47-758:48)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:47-758:48)
  3: _33 = move _31
    SourceInfo(regex-automata/src/dfa/regex.rs:758:47-758:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:23-758:48)
      kind: _0 = <core::result::Result<dfa::regex::Regex<dfa::sparse::DFA<std::vec::Vec<u8>>>, dfa::dense::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::dense::BuildError>>>::from_residual(move _33) -> [return: bb27, unwind: bb47]
  }
  preds [bb24]
  succs [bb27, bb47]

bb27
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:47-758:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:47-758:48)
      kind: drop(_31) -> [return: bb35, unwind: bb49]
  }
  preds [bb26]
  succs [bb35, bb49]

bb28
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:47-758:48)
  1: FakeRead(ForLet(None), _24)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:13-758:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:48-758:49)
      kind: drop(_25) -> [return: bb29, unwind: bb46]
  }
  preds [bb25]
  succs [bb29, bb46]

bb29
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:48-758:49)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:48-758:49)
  2: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/regex.rs:759:12-759:50)
  3: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/regex.rs:759:12-759:16)
  4: _36 = &(*_1)
    SourceInfo(regex-automata/src/dfa/regex.rs:759:12-759:16)
  5: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/regex.rs:759:33-759:40)
  6: _37 = move _13
    SourceInfo(regex-automata/src/dfa/regex.rs:759:33-759:40)
  7: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/regex.rs:759:42-759:49)
  8: _38 = move _24
    SourceInfo(regex-automata/src/dfa/regex.rs:759:42-759:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:759:12-759:50)
      kind: _35 = dfa::regex::Builder::build_from_dfas::<dfa::sparse::DFA<std::vec::Vec<u8>>>(move _36, move _37, move _38) -> [return: bb30, unwind: bb44]
  }
  preds [bb28]
  succs [bb30, bb44]

bb30
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/regex.rs:759:49-759:50)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/regex.rs:759:49-759:50)
  2: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/regex.rs:759:49-759:50)
  3: _0 = core::result::Result::<dfa::regex::Regex<dfa::sparse::DFA<std::vec::Vec<u8>>>, dfa::dense::BuildError>::Ok(move _35)
    SourceInfo(regex-automata/src/dfa/regex.rs:759:9-759:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:759:50-759:51)
      kind: drop(_35) -> [return: bb31, unwind: bb46]
  }
  preds [bb29]
  succs [bb31, bb46]

bb31
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/regex.rs:759:50-759:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:760:5-760:6)
      kind: drop(_24) -> [return: bb32, unwind: bb51]
  }
  preds [bb30]
  succs [bb32, bb51]

bb32
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/regex.rs:760:5-760:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:760:5-760:6)
      kind: drop(_13) -> [return: bb33, unwind: bb56]
  }
  preds [bb31]
  succs [bb33, bb56]

bb33
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/regex.rs:760:5-760:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:760:5-760:6)
      kind: drop(_3) -> [return: bb34, unwind: bb61]
  }
  preds [bb32]
  succs [bb34, bb61]

bb34
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/regex.rs:760:5-760:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:760:6-760:6)
      kind: goto -> bb43
  }
  preds [bb33]
  succs [bb43]

bb35
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:47-758:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:48-758:49)
      kind: drop(_25) -> [return: bb36, unwind: bb51]
  }
  preds [bb27]
  succs [bb36, bb51]

bb36
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:48-758:49)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/regex.rs:758:48-758:49)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/regex.rs:760:5-760:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:760:5-760:6)
      kind: drop(_13) -> [return: bb39, unwind: bb56]
  }
  preds [bb35]
  succs [bb39, bb56]

bb37
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:47-757:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:48-757:49)
      kind: drop(_14) -> [return: bb38, unwind: bb56]
  }
  preds [bb17]
  succs [bb38, bb56]

bb38
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:48-757:49)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/regex.rs:757:48-757:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb39
  }
  preds [bb37]
  succs [bb39]

bb39
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/regex.rs:760:5-760:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:760:5-760:6)
      kind: drop(_3) -> [return: bb42, unwind: bb61]
  }
  preds [bb36, bb38]
  succs [bb42, bb61]

bb40
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:43-756:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:756:44-756:45)
      kind: drop(_4) -> [return: bb41, unwind: bb61]
  }
  preds [bb7]
  succs [bb41, bb61]

bb41
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/regex.rs:756:44-756:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb42
  }
  preds [bb40]
  succs [bb42]

bb42
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/regex.rs:760:5-760:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:760:6-760:6)
      kind: goto -> bb43
  }
  preds [bb39, bb41]
  succs [bb43]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:760:6-760:6)
      kind: return
  }
  preds [bb34, bb42]
  succs []

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:759:49-759:50)
      kind: drop(_38) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb29]
  succs [bb45]

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:759:49-759:50)
      kind: drop(_37) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb44]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:760:5-760:6)
      kind: drop(_24) -> [return: bb51, unwind terminate(cleanup)]
  }
  preds [bb28, bb30, bb45]
  succs [bb51]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:47-758:48)
      kind: drop(_33) -> [return: bb48, unwind terminate(cleanup)]
  }
  preds [bb26]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:47-758:48)
      kind: drop(_31) -> [return: bb49, unwind terminate(cleanup)]
  }
  preds [bb47]
  succs [bb49]

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:48-758:49)
      kind: drop(_25) -> [return: bb51, unwind terminate(cleanup)]
  }
  preds [bb25, bb27, bb48]
  succs [bb51]

bb50
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:758:47-758:48)
      kind: drop(_26) -> [return: bb51, unwind terminate(cleanup)]
  }
  preds [bb21]
  succs [bb51]

bb51
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:760:5-760:6)
      kind: drop(_13) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb18, bb19, bb20, bb31, bb35, bb46, bb49, bb50]
  succs [bb56]

bb52
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:47-757:48)
      kind: drop(_22) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb16]
  succs [bb53]

bb53
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:47-757:48)
      kind: drop(_20) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb52]
  succs [bb54]

bb54
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:48-757:49)
      kind: drop(_14) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb15, bb17, bb53]
  succs [bb56]

bb55
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:757:47-757:48)
      kind: drop(_15) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:760:5-760:6)
      kind: drop(_3) -> [return: bb61, unwind terminate(cleanup)]
  }
  preds [bb8, bb9, bb10, bb32, bb36, bb37, bb51, bb54, bb55]
  succs [bb61]

bb57
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:756:43-756:44)
      kind: drop(_11) -> [return: bb58, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb58]

bb58
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:756:43-756:44)
      kind: drop(_9) -> [return: bb59, unwind terminate(cleanup)]
  }
  preds [bb57]
  succs [bb59]

bb59
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:756:44-756:45)
      kind: drop(_4) -> [return: bb61, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb58]
  succs [bb61]

bb60
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:756:43-756:44)
      kind: drop(_5) -> [return: bb61, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb61]

bb61
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:752:5-760:6)
      kind: resume
  }
  preds [bb0, bb33, bb39, bb40, bb56, bb59, bb60]
  succs []

