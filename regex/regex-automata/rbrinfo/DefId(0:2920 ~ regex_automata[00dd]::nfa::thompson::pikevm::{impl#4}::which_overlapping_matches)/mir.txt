bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1214:9-1214:13)
  1: _5 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1214:9-1214:13)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1214:36-1214:41)
  3: _6 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1214:36-1214:41)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1214:43-1214:48)
  5: _7 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1214:43-1214:48)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1214:50-1214:56)
  7: _8 = &mut (*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1214:50-1214:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1214:9-1214:57)
      kind: _0 = nfa::thompson::pikevm::PikeVM::which_overlapping_imp(move _5, move _6, move _7, move _8) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1214:56-1214:57)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1214:56-1214:57)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1214:56-1214:57)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1214:56-1214:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1215:6-1215:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1208:5-1215:6)
      kind: resume
  }
  preds [bb0]
  succs []

