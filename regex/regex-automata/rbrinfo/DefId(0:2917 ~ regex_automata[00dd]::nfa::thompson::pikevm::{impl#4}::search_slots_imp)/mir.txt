bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:13-1145:22)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:25-1145:51)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:25-1145:39)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:25-1145:39)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:25-1145:29)
  5: _9 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:25-1145:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:25-1145:39)
      kind: _8 = nfa::thompson::pikevm::PikeVM::get_nfa(move _9) -> [return: bb1, unwind: bb23]
  }
  preds []
  succs [bb1, bb23]

bb1
  0: _7 = &(*_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:25-1145:39)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:38-1145:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:25-1145:51)
      kind: _6 = nfa::thompson::nfa::NFA::has_empty(move _7) -> [return: bb2, unwind: bb23]
  }
  preds [bb0]
  succs [bb2, bb23]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:25-1145:51)
      kind: switchInt(move _6) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:50-1145:51)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:50-1145:51)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:55-1145:69)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:55-1145:69)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:55-1145:59)
  5: _12 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:55-1145:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:55-1145:69)
      kind: _11 = nfa::thompson::pikevm::PikeVM::get_nfa(move _12) -> [return: bb5, unwind: bb23]
  }
  preds [bb2]
  succs [bb5, bb23]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:50-1145:51)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:50-1145:51)
  2: _5 = const false
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:25-1145:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:25-1145:79)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb5
  0: _10 = &(*_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:55-1145:69)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:68-1145:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:55-1145:79)
      kind: _5 = nfa::thompson::nfa::NFA::is_utf8(move _10) -> [return: bb6, unwind: bb23]
  }
  preds [bb3]
  succs [bb6, bb23]

bb6
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:78-1145:79)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:78-1145:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:25-1145:79)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:78-1145:79)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1145:13-1145:22)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:13-1146:15)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:24-1146:60)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:24-1146:28)
  5: _15 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:24-1146:28)
  6: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:40-1146:45)
  7: _16 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:40-1146:45)
  8: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:47-1146:52)
  9: _17 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:47-1146:52)
  10: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:54-1146:59)
  11: _18 = &mut (*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:54-1146:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:24-1146:60)
      kind: _14 = nfa::thompson::pikevm::PikeVM::search_imp(move _15, move _16, move _17, move _18) -> [return: bb8, unwind: bb23]
  }
  preds [bb4, bb6]
  succs [bb8, bb23]

bb8
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:59-1146:60)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:59-1146:60)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:59-1146:60)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:59-1146:60)
  4: PlaceMention(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:24-1146:60)
  5: _20 = discriminant(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:24-1146:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:18-1146:60)
      kind: switchInt(move _20) -> [0: bb10, 1: bb11, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10, bb11]

bb9
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:24-1146:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:24-1146:60)
      kind: unreachable
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1147:13-1147:17)
      kind: falseEdge -> [real: bb13, imaginary: bb11]
  }
  preds [bb8]
  succs [bb11, bb13]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:13-1148:21)
      kind: falseEdge -> [real: bb14, imaginary: bb12]
  }
  preds [bb8, bb10]
  succs [bb12, bb14]

bb12
  0: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1149:18-1149:20)
  1: _27 = ((_14 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1149:18-1149:20)
  2: _13 = _27
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1149:25-1149:27)
  3: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1149:26-1149:27)
  4: FakeRead(ForLet(None), _13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:13-1146:15)
  5: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1150:10-1150:11)
  6: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:9-1155:11)
  7: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:32-1151:37)
  8: _29 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:32-1151:37)
  9: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:39-1151:41)
  10: _30 = _13
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:39-1151:41)
  11: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:43-1151:54)
  12: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:43-1151:45)
  13: _32 = &_13
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:43-1151:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:43-1151:54)
      kind: _31 = util::search::HalfMatch::offset(move _32) -> [return: bb17, unwind: bb23]
  }
  preds [bb11, bb15]
  succs [bb17, bb23]

bb13
  0: _0 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1147:28-1147:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1147:21-1147:32)
      kind: goto -> bb20
  }
  preds [bb10]
  succs [bb20]

bb14
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:18-1148:20)
  1: _23 = &((_14 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:18-1148:20)
  2: _19 = &fake shallow _14
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1146:24-1146:60)
  3: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:26-1148:35)
  4: _24 = _5
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:26-1148:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:26-1148:35)
      kind: switchInt(move _24) -> [0: bb16, otherwise: bb15]
  }
  preds [bb11]
  succs [bb15, bb16]

bb15
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:34-1148:35)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:53-1148:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:25-1148:35)
      kind: goto -> bb12
  }
  preds [bb14]
  succs [bb12]

bb16
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:34-1148:35)
  1: FakeRead(ForMatchGuard, _19)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:34-1148:35)
  2: FakeRead(ForGuardBinding, _23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:34-1148:35)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:18-1148:20)
  4: _22 = ((_14 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:18-1148:20)
  5: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:51-1148:53)
  6: _26 = _22
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:51-1148:53)
  7: _0 = core::option::Option::<util::search::HalfMatch>::Some(move _26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:46-1148:54)
  8: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:53-1148:54)
  9: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:53-1148:54)
  10: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1148:53-1148:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb20
  }
  preds [bb14]
  succs [bb20]

bb17
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:53-1151:54)
  1: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:56-1155:10)
  2: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:56-1155:10)
  3: _34 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:56-1155:10)
  4: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:56-1155:10)
  5: _35 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:56-1155:10)
  6: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:56-1155:10)
  7: _36 = &mut (*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:56-1155:10)
  8: _33 = {closure@regex-automata/src/nfa/thompson/pikevm.rs:1151:56: 1151:63} { self: move _34, cache: move _35, slots: move _36 }
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:56-1155:10)
  9: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:62-1151:63)
  10: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:62-1151:63)
  11: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:62-1151:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:9-1155:11)
      kind: _28 = util::empty::skip_splits_fwd::<util::search::HalfMatch, {closure@regex-automata/src/nfa/thompson/pikevm.rs:1151:56: 1151:63}>(move _29, move _30, move _31, move _33) -> [return: bb18, unwind: bb23]
  }
  preds [bb12]
  succs [bb18, bb23]

bb18
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1155:10-1155:11)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1155:10-1155:11)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1155:10-1155:11)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1155:10-1155:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1151:9-1157:18)
      kind: _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::unwrap(move _28) -> [return: bb19, unwind: bb22]
  }
  preds [bb17]
  succs [bb19, bb22]

bb19
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1157:17-1157:18)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1158:5-1158:6)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1158:5-1158:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1158:6-1158:6)
      kind: goto -> bb21
  }
  preds [bb18]
  succs [bb21]

bb20
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1150:10-1150:11)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1158:5-1158:6)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1158:5-1158:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1158:6-1158:6)
      kind: goto -> bb21
  }
  preds [bb13, bb16]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1158:6-1158:6)
      kind: return
  }
  preds [bb19, bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1157:17-1157:18)
      kind: drop(_28) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb18]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1139:5-1158:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb7, bb12, bb17, bb22]
  succs []

