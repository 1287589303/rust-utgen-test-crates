bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/iter.rs:495:34-495:38)
  1: _3 = move _1
    SourceInfo(regex-automata/src/util/iter.rs:495:34-495:38)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/iter.rs:495:40-495:46)
  3: _4 = move _2
    SourceInfo(regex-automata/src/util/iter.rs:495:40-495:46)
  4: _0 = util::iter::TryHalfMatchesIter::<'_, F> { it: move _3, finder: move _4 }
    SourceInfo(regex-automata/src/util/iter.rs:495:9-495:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:495:47-495:48)
      kind: drop(_4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/iter.rs:495:47-495:48)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/util/iter.rs:495:47-495:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:496:5-496:6)
      kind: drop(_2) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:496:6-496:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:496:5-496:6)
      kind: drop(_2) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:488:5-496:6)
      kind: resume
  }
  preds [bb1, bb3]
  succs []

