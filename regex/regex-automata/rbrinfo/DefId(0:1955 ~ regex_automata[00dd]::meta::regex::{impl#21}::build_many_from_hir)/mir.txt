bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:3547:13-3547:19)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:3547:22-3547:33)
  2: _4 = &((*_1).0: meta::regex::Config)
    SourceInfo(regex-automata/src/meta/regex.rs:3547:22-3547:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3547:22-3547:41)
      kind: _3 = <meta::regex::Config as core::clone::Clone>::clone(move _4) -> [return: bb1, unwind: bb60]
  }
  preds []
  succs [bb1, bb60]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:3547:40-3547:41)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/meta/regex.rs:3547:13-3547:19)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:3551:13-3551:17)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:3551:31-3551:66)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:3551:31-3551:42)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:3551:31-3551:35)
  6: _8 = &(*_2)
    SourceInfo(regex-automata/src/meta/regex.rs:3551:31-3551:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3551:31-3551:42)
      kind: _7 = core::slice::<impl [H]>::iter(move _8) -> [return: bb2, unwind: bb59]
  }
  preds [bb0]
  succs [bb2, bb59]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:3551:41-3551:42)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:3551:47-3551:65)
  2: _9 = {closure@regex-automata/src/meta/regex.rs:3551:47: 3551:52}
    SourceInfo(regex-automata/src/meta/regex.rs:3551:47-3551:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3551:31-3551:66)
      kind: _6 = <core::slice::Iter<'_, H> as core::iter::Iterator>::map::<&regex_syntax::hir::Hir, {closure@regex-automata/src/meta/regex.rs:3551:47: 3551:52}>(move _7, move _9) -> [return: bb3, unwind: bb59]
  }
  preds [bb1]
  succs [bb3, bb59]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:3551:65-3551:66)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:3551:65-3551:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3551:31-3551:76)
      kind: _5 = <core::iter::Map<core::slice::Iter<'_, H>, {closure@regex-automata/src/meta/regex.rs:3551:47: 3551:52}> as core::iter::Iterator>::collect::<std::vec::Vec<&regex_syntax::hir::Hir>>(move _6) -> [return: bb4, unwind: bb59]
  }
  preds [bb2]
  succs [bb4, bb59]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:3551:75-3551:76)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/meta/regex.rs:3551:13-3551:17)
  2: AscribeUserType(_5, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(regex-automata/src/meta/regex.rs:3551:19-3551:28)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:3552:13-3552:17)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:3552:35-3552:41)
  5: _11 = move _3
    SourceInfo(regex-automata/src/meta/regex.rs:3552:35-3552:41)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:3552:43-3552:48)
  7: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:3552:43-3552:48)
  8: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:3552:43-3552:48)
  9: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:3552:43-3552:48)
  10: _15 = &_5
    SourceInfo(regex-automata/src/meta/regex.rs:3552:43-3552:48)
  11: _14 = &(*_15)
    SourceInfo(regex-automata/src/meta/regex.rs:3552:43-3552:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3552:43-3552:48)
      kind: _13 = <std::vec::Vec<&regex_syntax::hir::Hir> as core::ops::Deref>::deref(move _14) -> [return: bb5, unwind: bb57]
  }
  preds [bb3]
  succs [bb5, bb57]

bb5
  0: _12 = &(*_13)
    SourceInfo(regex-automata/src/meta/regex.rs:3552:43-3552:48)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:3552:47-3552:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3552:20-3552:49)
      kind: _10 = meta::regex::RegexInfo::new(move _11, move _12) -> [return: bb6, unwind: bb57]
  }
  preds [bb4]
  succs [bb6, bb57]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:3552:48-3552:49)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:3552:48-3552:49)
  2: FakeRead(ForLet(None), _10)
    SourceInfo(regex-automata/src/meta/regex.rs:3552:13-3552:17)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:3552:49-3552:50)
  4: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:3552:49-3552:50)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:13-3553:18)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:21-3553:49)
  7: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:21-3553:48)
  8: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:35-3553:40)
  9: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:35-3553:40)
  10: _20 = &_10
    SourceInfo(regex-automata/src/meta/regex.rs:3553:35-3553:40)
  11: _19 = &(*_20)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:35-3553:40)
  12: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:42-3553:47)
  13: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:42-3553:47)
  14: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:42-3553:47)
  15: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:42-3553:47)
  16: _24 = &_5
    SourceInfo(regex-automata/src/meta/regex.rs:3553:42-3553:47)
  17: _23 = &(*_24)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:42-3553:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:42-3553:47)
      kind: _22 = <std::vec::Vec<&regex_syntax::hir::Hir> as core::ops::Deref>::deref(move _23) -> [return: bb7, unwind: bb56]
  }
  preds [bb5]
  succs [bb7, bb56]

bb7
  0: _21 = &(*_22)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:42-3553:47)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:46-3553:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:21-3553:48)
      kind: _18 = meta::strategy::new(move _19, move _21) -> [return: bb8, unwind: bb56]
  }
  preds [bb6]
  succs [bb8, bb56]

bb8
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:47-3553:48)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:47-3553:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:21-3553:49)
      kind: _17 = <core::result::Result<std::sync::Arc<dyn meta::strategy::Strategy>, meta::error::BuildError> as core::ops::Try>::branch(move _18) -> [return: bb9, unwind: bb55]
  }
  preds [bb7]
  succs [bb9, bb55]

bb9
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:48-3553:49)
  1: PlaceMention(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:21-3553:49)
  2: _25 = discriminant(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:21-3553:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:21-3553:49)
      kind: switchInt(move _25) -> [0: bb12, 1: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _17)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:21-3553:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:21-3553:49)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:48-3553:49)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:21-3553:49)
  1: _29 = move ((_17 as Continue).0: std::sync::Arc<dyn meta::strategy::Strategy>)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:21-3553:49)
  2: _16 = move _29
    SourceInfo(regex-automata/src/meta/regex.rs:3553:21-3553:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:48-3553:49)
      kind: drop(_29) -> [return: bb15, unwind: bb54]
  }
  preds [bb9, bb11]
  succs [bb15, bb54]

bb13
  0: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:48-3553:49)
  1: _26 = move ((_17 as Break).0: core::result::Result<core::convert::Infallible, meta::error::BuildError>)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:48-3553:49)
  2: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:48-3553:49)
  3: _28 = move _26
    SourceInfo(regex-automata/src/meta/regex.rs:3553:48-3553:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:21-3553:49)
      kind: _0 = <core::result::Result<meta::regex::Regex, meta::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, meta::error::BuildError>>>::from_residual(move _28) -> [return: bb14, unwind: bb52]
  }
  preds [bb11]
  succs [bb14, bb52]

bb14
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:48-3553:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:48-3553:49)
      kind: drop(_26) -> [return: bb35, unwind: bb54]
  }
  preds [bb13]
  succs [bb35, bb54]

bb15
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:48-3553:49)
  1: FakeRead(ForLet(None), _16)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:13-3553:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:49-3553:50)
      kind: drop(_17) -> [return: bb16, unwind: bb51]
  }
  preds [bb12]
  succs [bb16, bb51]

bb16
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:49-3553:50)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:49-3553:50)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:49-3553:50)
  3: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:49-3553:50)
  4: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/regex.rs:3554:13-3554:17)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/regex.rs:3555:17-3555:22)
  6: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/regex.rs:3555:36-3555:42)
  7: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/regex.rs:3555:36-3555:42)
  8: _33 = &_16
    SourceInfo(regex-automata/src/meta/regex.rs:3555:36-3555:42)
  9: _32 = &(*_33)
    SourceInfo(regex-automata/src/meta/regex.rs:3555:36-3555:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3555:25-3555:43)
      kind: _31 = <std::sync::Arc<dyn meta::strategy::Strategy> as core::clone::Clone>::clone(move _32) -> [return: bb17, unwind: bb51]
  }
  preds [bb15]
  succs [bb17, bb51]

bb17
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/regex.rs:3555:42-3555:43)
  1: FakeRead(ForLet(None), _31)
    SourceInfo(regex-automata/src/meta/regex.rs:3555:17-3555:22)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/regex.rs:3555:43-3555:44)
  3: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/regex.rs:3556:17-3556:23)
  4: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/regex.rs:3556:39-3556:77)
  5: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/regex.rs:3556:48-3556:76)
  6: _36 = {closure@regex-automata/src/meta/regex.rs:3556:48: 3556:55} { strat: move _31 }
    SourceInfo(regex-automata/src/meta/regex.rs:3556:48-3556:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3556:39-3556:77)
      kind: _35 = std::boxed::Box::<{closure@regex-automata/src/meta/regex.rs:3556:48: 3556:55}>::new(move _36) -> [return: bb18, unwind: bb49]
  }
  preds [bb16]
  succs [bb18, bb49]

bb18
  0: _34 = move _35 as std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/meta/regex.rs:3556:39-3556:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3556:76-3556:77)
      kind: drop(_35) -> [return: bb19, unwind: bb49]
  }
  preds [bb17]
  succs [bb19, bb49]

bb19
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/regex.rs:3556:76-3556:77)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/regex.rs:3556:76-3556:77)
  2: FakeRead(ForLet(None), _34)
    SourceInfo(regex-automata/src/meta/regex.rs:3556:17-3556:23)
  3: AscribeUserType(_34, o, UserTypeProjection { base: UserType(5), projs: [] })
    SourceInfo(regex-automata/src/meta/regex.rs:3556:25-3556:36)
  4: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/regex.rs:3557:23-3557:29)
  5: _37 = move _34
    SourceInfo(regex-automata/src/meta/regex.rs:3557:23-3557:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3557:13-3557:30)
      kind: _30 = util::pool::Pool::<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>::new(move _37) -> [return: bb20, unwind: bb47]
  }
  preds [bb18]
  succs [bb20, bb47]

bb20
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/regex.rs:3557:29-3557:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3558:9-3558:10)
      kind: drop(_34) -> [return: bb21, unwind: bb50]
  }
  preds [bb19]
  succs [bb21, bb50]

bb21
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/regex.rs:3558:9-3558:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3558:9-3558:10)
      kind: drop(_31) -> [return: bb22, unwind: bb51]
  }
  preds [bb20]
  succs [bb22, bb51]

bb22
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/regex.rs:3558:9-3558:10)
  1: FakeRead(ForLet(None), _30)
    SourceInfo(regex-automata/src/meta/regex.rs:3554:13-3554:17)
  2: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:12-3559:65)
  3: StorageLive(_39)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:25-3559:57)
  4: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:34-3559:56)
  5: StorageLive(_41)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:43-3559:48)
  6: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:43-3559:48)
  7: _42 = move _16
    SourceInfo(regex-automata/src/meta/regex.rs:3559:43-3559:48)
  8: _41 = move _42 as std::sync::Arc<dyn meta::strategy::Strategy> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/meta/regex.rs:3559:43-3559:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3559:47-3559:48)
      kind: drop(_42) -> [return: bb23, unwind: bb45]
  }
  preds [bb21]
  succs [bb23, bb45]

bb23
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:47-3559:48)
  1: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:50-3559:54)
  2: _43 = move _10
    SourceInfo(regex-automata/src/meta/regex.rs:3559:50-3559:54)
  3: _40 = meta::regex::RegexI { strat: move _41, info: move _43 }
    SourceInfo(regex-automata/src/meta/regex.rs:3559:34-3559:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3559:55-3559:56)
      kind: drop(_43) -> [return: bb24, unwind: bb43]
  }
  preds [bb22]
  succs [bb24, bb43]

bb24
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:55-3559:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3559:55-3559:56)
      kind: drop(_41) -> [return: bb25, unwind: bb44]
  }
  preds [bb23]
  succs [bb25, bb44]

bb25
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:55-3559:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3559:25-3559:57)
      kind: _39 = std::sync::Arc::<meta::regex::RegexI>::new(move _40) -> [return: bb26, unwind: bb44]
  }
  preds [bb24]
  succs [bb26, bb44]

bb26
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:56-3559:57)
  1: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:59-3559:63)
  2: _44 = move _30
    SourceInfo(regex-automata/src/meta/regex.rs:3559:59-3559:63)
  3: _38 = meta::regex::Regex { imp: move _39, pool: move _44 }
    SourceInfo(regex-automata/src/meta/regex.rs:3559:12-3559:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3559:64-3559:65)
      kind: drop(_44) -> [return: bb27, unwind: bb41]
  }
  preds [bb25]
  succs [bb27, bb41]

bb27
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:64-3559:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3559:64-3559:65)
      kind: drop(_39) -> [return: bb28, unwind: bb42]
  }
  preds [bb26]
  succs [bb28, bb42]

bb28
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:64-3559:65)
  1: _0 = core::result::Result::<meta::regex::Regex, meta::error::BuildError>::Ok(move _38)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:9-3559:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3559:65-3559:66)
      kind: drop(_38) -> [return: bb29, unwind: bb46]
  }
  preds [bb27]
  succs [bb29, bb46]

bb29
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/regex.rs:3559:65-3559:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
      kind: drop(_30) -> [return: bb30, unwind: bb51]
  }
  preds [bb28]
  succs [bb30, bb51]

bb30
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
      kind: drop(_16) -> [return: bb31, unwind: bb56]
  }
  preds [bb29]
  succs [bb31, bb56]

bb31
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
      kind: drop(_10) -> [return: bb32, unwind: bb58]
  }
  preds [bb30]
  succs [bb32, bb58]

bb32
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
      kind: drop(_5) -> [return: bb33, unwind: bb59]
  }
  preds [bb31]
  succs [bb33, bb59]

bb33
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
      kind: drop(_3) -> [return: bb34, unwind: bb60]
  }
  preds [bb32]
  succs [bb34, bb60]

bb34
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:6-3560:6)
      kind: goto -> bb40
  }
  preds [bb33]
  succs [bb40]

bb35
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:48-3553:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:49-3553:50)
      kind: drop(_17) -> [return: bb36, unwind: bb56]
  }
  preds [bb14]
  succs [bb36, bb56]

bb36
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:49-3553:50)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:49-3553:50)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:49-3553:50)
  3: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:3553:49-3553:50)
  4: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
      kind: drop(_10) -> [return: bb37, unwind: bb58]
  }
  preds [bb35]
  succs [bb37, bb58]

bb37
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
      kind: drop(_5) -> [return: bb38, unwind: bb59]
  }
  preds [bb36]
  succs [bb38, bb59]

bb38
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
      kind: drop(_3) -> [return: bb39, unwind: bb60]
  }
  preds [bb37]
  succs [bb39, bb60]

bb39
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:6-3560:6)
      kind: goto -> bb40
  }
  preds [bb38]
  succs [bb40]

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:6-3560:6)
      kind: return
  }
  preds [bb34, bb39]
  succs []

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3559:64-3559:65)
      kind: drop(_39) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb26]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3559:65-3559:66)
      kind: drop(_38) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb27, bb41]
  succs [bb46]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3559:55-3559:56)
      kind: drop(_41) -> [return: bb44, unwind terminate(cleanup)]
  }
  preds [bb23]
  succs [bb44]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3559:56-3559:57)
      kind: drop(_40) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb24, bb25, bb43]
  succs [bb46]

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3559:55-3559:56)
      kind: drop(_41) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb22]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
      kind: drop(_30) -> [return: bb51, unwind terminate(cleanup)]
  }
  preds [bb28, bb42, bb44, bb45]
  succs [bb51]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3557:29-3557:30)
      kind: drop(_37) -> [return: bb48, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3558:9-3558:10)
      kind: drop(_34) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb47]
  succs [bb50]

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3556:76-3556:77)
      kind: drop(_36) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb17, bb18]
  succs [bb50]

bb50
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3558:9-3558:10)
      kind: drop(_31) -> [return: bb51, unwind terminate(cleanup)]
  }
  preds [bb20, bb48, bb49]
  succs [bb51]

bb51
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
      kind: drop(_16) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb15, bb16, bb21, bb29, bb46, bb50]
  succs [bb56]

bb52
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:48-3553:49)
      kind: drop(_28) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb53]

bb53
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:48-3553:49)
      kind: drop(_26) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb52]
  succs [bb54]

bb54
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:49-3553:50)
      kind: drop(_17) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb12, bb14, bb53]
  succs [bb56]

bb55
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3553:48-3553:49)
      kind: drop(_18) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
      kind: drop(_10) -> [return: bb58, unwind terminate(cleanup)]
  }
  preds [bb6, bb7, bb30, bb35, bb51, bb54, bb55]
  succs [bb58]

bb57
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3552:48-3552:49)
      kind: drop(_11) -> [return: bb58, unwind terminate(cleanup)]
  }
  preds [bb4, bb5]
  succs [bb58]

bb58
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
      kind: drop(_5) -> [return: bb59, unwind terminate(cleanup)]
  }
  preds [bb31, bb36, bb56, bb57]
  succs [bb59]

bb59
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3560:5-3560:6)
      kind: drop(_3) -> [return: bb60, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb3, bb32, bb37, bb58]
  succs [bb60]

bb60
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3543:5-3560:6)
      kind: resume
  }
  preds [bb0, bb33, bb38, bb59]
  succs []

