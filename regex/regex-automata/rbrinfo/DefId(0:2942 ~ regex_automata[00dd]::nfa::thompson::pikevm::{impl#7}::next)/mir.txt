bb0
  0: PlaceMention((*_1))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1851:13-1851:18)
  1: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1850:31-1850:33)
  2: _2 = ((*_1).0: &nfa::thompson::pikevm::PikeVM)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1850:31-1850:33)
  3: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1850:35-1850:48)
  4: _3 = &mut ((*_1).1: &mut nfa::thompson::pikevm::Cache)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1850:35-1850:48)
  5: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1850:50-1850:62)
  6: _4 = &mut ((*_1).2: util::captures::Captures)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1850:50-1850:62)
  7: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1850:64-1850:74)
  8: _5 = &mut ((*_1).3: util::iter::Searcher<'_>)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1850:64-1850:74)
  9: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:9-1857:11)
  10: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:9-1854:11)
  11: _7 = &mut (*_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:9-1854:11)
  12: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:20-1857:10)
  13: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:20-1857:10)
  14: _9 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:20-1857:10)
  15: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:20-1857:10)
  16: _10 = &mut (*(*_3))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:20-1857:10)
  17: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:20-1857:10)
  18: _11 = &mut (*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:20-1857:10)
  19: _8 = {closure@regex-automata/src/nfa/thompson/pikevm.rs:1854:20: 1854:27} { re: move _9, cache: move _10, caps: move _11 }
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:20-1857:10)
  20: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:26-1854:27)
  21: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:26-1854:27)
  22: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:26-1854:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1854:9-1857:11)
      kind: _6 = util::iter::Searcher::<'_>::advance::<{closure@regex-automata/src/nfa/thompson/pikevm.rs:1854:20: 1854:27}>(move _7, move _8) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1857:10-1857:11)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1857:10-1857:11)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1857:11-1857:12)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1858:12-1858:27)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1858:12-1858:16)
  5: _13 = &(*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1858:12-1858:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1858:12-1858:27)
      kind: _12 = util::captures::Captures::is_match(move _13) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1858:12-1858:27)
      kind: switchInt(move _12) -> [0: bb6, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1858:26-1858:27)
  1: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1859:18-1859:30)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1859:18-1859:22)
  3: _15 = &(*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1859:18-1859:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1859:18-1859:30)
      kind: _14 = <util::captures::Captures as core::clone::Clone>::clone(move _15) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1859:29-1859:30)
  1: _0 = core::option::Option::<util::captures::Captures>::Some(move _14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1859:13-1859:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1859:30-1859:31)
      kind: drop(_14) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1859:30-1859:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1858:9-1862:10)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1858:26-1858:27)
  1: _0 = core::option::Option::<util::captures::Captures>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1861:13-1861:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1858:9-1862:10)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb7
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1862:9-1862:10)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1863:5-1863:6)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1863:5-1863:6)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1863:5-1863:6)
  4: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1863:5-1863:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1863:6-1863:6)
      kind: return
  }
  preds [bb5, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1848:5-1863:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb4]
  succs []

