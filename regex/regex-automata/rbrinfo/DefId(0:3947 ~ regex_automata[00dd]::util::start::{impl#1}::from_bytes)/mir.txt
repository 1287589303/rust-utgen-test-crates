bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/start.rs:268:9-268:61)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/start.rs:268:9-268:61)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/start.rs:268:9-268:60)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/start.rs:268:31-268:36)
  4: _5 = &(*_1)
    SourceInfo(regex-automata/src/util/start.rs:268:31-268:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:268:9-268:60)
      kind: _4 = util::wire::check_slice_len::<u8>(move _5, const 256_usize, const "start byte map") -> [return: bb1, unwind: bb28]
  }
  preds []
  succs [bb1, bb28]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/start.rs:268:59-268:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:268:9-268:61)
      kind: _3 = <core::result::Result<(), util::wire::DeserializeError> as core::ops::Try>::branch(move _4) -> [return: bb2, unwind: bb28]
  }
  preds [bb0]
  succs [bb2, bb28]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/start.rs:268:60-268:61)
  1: PlaceMention(_3)
    SourceInfo(regex-automata/src/util/start.rs:268:9-268:61)
  2: _6 = discriminant(_3)
    SourceInfo(regex-automata/src/util/start.rs:268:9-268:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:268:9-268:61)
      kind: switchInt(move _6) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(regex-automata/src/util/start.rs:268:9-268:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:268:9-268:61)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:268:60-268:61)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/util/start.rs:268:9-268:61)
  1: _10 = ((_3 as Continue).0: ())
    SourceInfo(regex-automata/src/util/start.rs:268:9-268:61)
  2: _2 = _10
    SourceInfo(regex-automata/src/util/start.rs:268:9-268:61)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/util/start.rs:268:60-268:61)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/util/start.rs:268:61-268:62)
  5: StorageDead(_2)
    SourceInfo(regex-automata/src/util/start.rs:268:61-268:62)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/util/start.rs:269:13-269:20)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/util/start.rs:269:24-269:42)
  8: _12 = util::start::Start::NonWordByte
    SourceInfo(regex-automata/src/util/start.rs:269:24-269:42)
  9: _11 = [move _12; 256]
    SourceInfo(regex-automata/src/util/start.rs:269:23-269:48)
  10: StorageDead(_12)
    SourceInfo(regex-automata/src/util/start.rs:269:47-269:48)
  11: FakeRead(ForLet(None), _11)
    SourceInfo(regex-automata/src/util/start.rs:269:13-269:20)
  12: StorageLive(_13)
    SourceInfo(regex-automata/src/util/start.rs:270:9-279:10)
  13: StorageLive(_14)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
  14: StorageLive(_15)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
  15: StorageLive(_16)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:46)
  16: StorageLive(_17)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:39)
  17: StorageLive(_18)
    SourceInfo(regex-automata/src/util/start.rs:270:32-270:39)
  18: StorageLive(_19)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:32)
  19: _19 = &(*_1)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:32)
  20: StorageLive(_20)
    SourceInfo(regex-automata/src/util/start.rs:270:33-270:38)
  21: _20 = core::ops::RangeTo::<usize> { end: const 256_usize }
    SourceInfo(regex-automata/src/util/start.rs:270:33-270:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:270:32-270:39)
      kind: _18 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _19, move _20) -> [return: bb8, unwind: bb28]
  }
  preds [bb2, bb4]
  succs [bb8, bb28]

bb6
  0: StorageLive(_7)
    SourceInfo(regex-automata/src/util/start.rs:268:60-268:61)
  1: _7 = move ((_3 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/util/start.rs:268:60-268:61)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/util/start.rs:268:60-268:61)
  3: _9 = move _7
    SourceInfo(regex-automata/src/util/start.rs:268:60-268:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:268:9-268:61)
      kind: _0 = <core::result::Result<(util::start::StartByteMap, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _9) -> [return: bb7, unwind: bb28]
  }
  preds [bb4]
  succs [bb7, bb28]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/start.rs:268:60-268:61)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/start.rs:268:60-268:61)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/util/start.rs:268:61-268:62)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/util/start.rs:268:61-268:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb27
  }
  preds [bb6]
  succs [bb27]

bb8
  0: _17 = &(*_18)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:39)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/util/start.rs:270:38-270:39)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/util/start.rs:270:38-270:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:270:27-270:46)
      kind: _16 = core::slice::<impl [u8]>::iter(move _17) -> [return: bb9, unwind: bb28]
  }
  preds [bb5]
  succs [bb9, bb28]

bb9
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/util/start.rs:270:45-270:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
      kind: _15 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::enumerate(move _16) -> [return: bb10, unwind: bb28]
  }
  preds [bb8]
  succs [bb10, bb28]

bb10
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/util/start.rs:270:57-270:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
      kind: _14 = <core::iter::Enumerate<core::slice::Iter<'_, u8>> as core::iter::IntoIterator>::into_iter(move _15) -> [return: bb11, unwind: bb28]
  }
  preds [bb9]
  succs [bb11, bb28]

bb11
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/start.rs:270:57-270:58)
  1: PlaceMention(_14)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
  3: _21 = move _14
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:270:9-279:10)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:270:9-279:10)
      kind: falseUnwind -> [real: bb13, unwind: bb28]
  }
  preds [bb11, bb26]
  succs [bb13, bb28]

bb13
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
  1: StorageLive(_24)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
  4: _26 = &mut _21
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
  5: _25 = &mut (*_26)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
      kind: _24 = <core::iter::Enumerate<core::slice::Iter<'_, u8>> as core::iter::Iterator>::next(move _25) -> [return: bb14, unwind: bb28]
  }
  preds [bb12]
  succs [bb14, bb28]

bb14
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/util/start.rs:270:57-270:58)
  1: PlaceMention(_24)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
  2: _27 = discriminant(_24)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
      kind: switchInt(move _27) -> [0: bb16, 1: bb17, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16, bb17]

bb15
  0: FakeRead(ForMatchedPlace(None), _24)
    SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:270:27-270:58)
      kind: unreachable
  }
  preds [bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:270:9-279:10)
      kind: falseEdge -> [real: bb18, imaginary: bb17]
  }
  preds [bb14]
  succs [bb17, bb18]

bb17
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/util/start.rs:270:14-270:15)
  1: _29 = (((_24 as Some).0: (usize, &u8)).0: usize)
    SourceInfo(regex-automata/src/util/start.rs:270:14-270:15)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/util/start.rs:270:18-270:22)
  3: _30 = (*(((_24 as Some).0: (usize, &u8)).1: &u8))
    SourceInfo(regex-automata/src/util/start.rs:270:18-270:22)
  4: StorageLive(_31)
    SourceInfo(regex-automata/src/util/start.rs:271:22-278:14)
  5: StorageLive(_32)
    SourceInfo(regex-automata/src/util/start.rs:271:28-271:64)
  6: StorageLive(_33)
    SourceInfo(regex-automata/src/util/start.rs:271:46-271:63)
  7: StorageLive(_34)
    SourceInfo(regex-automata/src/util/start.rs:271:58-271:62)
  8: _34 = _30
    SourceInfo(regex-automata/src/util/start.rs:271:58-271:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:271:46-271:63)
      kind: _33 = <usize as core::convert::From<u8>>::from(move _34) -> [return: bb19, unwind: bb28]
  }
  preds [bb14, bb16]
  succs [bb19, bb28]

bb18
  0: _13 = const ()
    SourceInfo(regex-automata/src/util/start.rs:270:9-279:10)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  4: StorageDead(_21)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  5: StorageDead(_18)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  6: StorageDead(_14)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  7: StorageDead(_13)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  8: StorageLive(_42)
    SourceInfo(regex-automata/src/util/start.rs:280:12-280:39)
  9: StorageLive(_43)
    SourceInfo(regex-automata/src/util/start.rs:280:13-280:33)
  10: StorageLive(_44)
    SourceInfo(regex-automata/src/util/start.rs:280:28-280:31)
  11: _44 = _11
    SourceInfo(regex-automata/src/util/start.rs:280:28-280:31)
  12: _43 = util::start::StartByteMap { map: move _44 }
    SourceInfo(regex-automata/src/util/start.rs:280:13-280:33)
  13: StorageDead(_44)
    SourceInfo(regex-automata/src/util/start.rs:280:32-280:33)
  14: _42 = (move _43, const 256_usize)
    SourceInfo(regex-automata/src/util/start.rs:280:12-280:39)
  15: StorageDead(_43)
    SourceInfo(regex-automata/src/util/start.rs:280:38-280:39)
  16: _0 = core::result::Result::<(util::start::StartByteMap, usize), util::wire::DeserializeError>::Ok(move _42)
    SourceInfo(regex-automata/src/util/start.rs:280:9-280:40)
  17: StorageDead(_42)
    SourceInfo(regex-automata/src/util/start.rs:280:39-280:40)
  18: StorageDead(_11)
    SourceInfo(regex-automata/src/util/start.rs:281:5-281:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:281:6-281:6)
      kind: goto -> bb27
  }
  preds [bb16]
  succs [bb27]

bb19
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/util/start.rs:271:62-271:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:271:28-271:64)
      kind: _32 = util::start::Start::from_usize(move _33) -> [return: bb20, unwind: bb28]
  }
  preds [bb17]
  succs [bb20, bb28]

bb20
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/util/start.rs:271:63-271:64)
  1: PlaceMention(_32)
    SourceInfo(regex-automata/src/util/start.rs:271:28-271:64)
  2: _35 = discriminant(_32)
    SourceInfo(regex-automata/src/util/start.rs:271:28-271:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:271:22-271:64)
      kind: switchInt(move _35) -> [0: bb23, 1: bb22, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb22, bb23]

bb21
  0: FakeRead(ForMatchedPlace(None), _32)
    SourceInfo(regex-automata/src/util/start.rs:271:28-271:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:271:28-271:64)
      kind: unreachable
  }
  preds [bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:272:17-272:28)
      kind: falseEdge -> [real: bb24, imaginary: bb23]
  }
  preds [bb20]
  succs [bb23, bb24]

bb23
  0: StorageLive(_38)
    SourceInfo(regex-automata/src/util/start.rs:274:32-276:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:274:32-276:22)
      kind: _38 = util::wire::DeserializeError::generic(const "found invalid starting configuration") -> [return: bb25, unwind: bb28]
  }
  preds [bb20, bb22]
  succs [bb25, bb28]

bb24
  0: StorageLive(_36)
    SourceInfo(regex-automata/src/util/start.rs:272:22-272:27)
  1: _36 = ((_32 as Some).0: util::start::Start)
    SourceInfo(regex-automata/src/util/start.rs:272:22-272:27)
  2: _31 = _36
    SourceInfo(regex-automata/src/util/start.rs:272:32-272:37)
  3: StorageDead(_36)
    SourceInfo(regex-automata/src/util/start.rs:272:36-272:37)
  4: StorageLive(_39)
    SourceInfo(regex-automata/src/util/start.rs:271:17-271:18)
  5: _39 = _29
    SourceInfo(regex-automata/src/util/start.rs:271:17-271:18)
  6: _40 = Len(_11)
    SourceInfo(regex-automata/src/util/start.rs:271:13-271:19)
  7: _41 = Lt(_39, _40)
    SourceInfo(regex-automata/src/util/start.rs:271:13-271:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:271:13-271:19)
      kind: assert(move _41, "index out of bounds: the length is {} but the index is {}", move _40, _39) -> [success: bb26, unwind: bb28]
  }
  preds [bb22]
  succs [bb26, bb28]

bb25
  0: _0 = core::result::Result::<(util::start::StartByteMap, usize), util::wire::DeserializeError>::Err(move _38)
    SourceInfo(regex-automata/src/util/start.rs:274:28-276:23)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/util/start.rs:276:22-276:23)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/util/start.rs:278:13-278:14)
  3: StorageDead(_32)
    SourceInfo(regex-automata/src/util/start.rs:278:14-278:15)
  4: StorageDead(_30)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  5: StorageDead(_29)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  6: StorageDead(_26)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  7: StorageDead(_24)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  8: StorageDead(_23)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  9: StorageDead(_21)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  10: StorageDead(_18)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  11: StorageDead(_14)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  12: StorageDead(_13)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  13: StorageDead(_11)
    SourceInfo(regex-automata/src/util/start.rs:281:5-281:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb27
  }
  preds [bb23]
  succs [bb27]

bb26
  0: _11[_39] = move _31
    SourceInfo(regex-automata/src/util/start.rs:271:13-278:14)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/util/start.rs:278:13-278:14)
  2: StorageDead(_39)
    SourceInfo(regex-automata/src/util/start.rs:278:14-278:15)
  3: StorageDead(_32)
    SourceInfo(regex-automata/src/util/start.rs:278:14-278:15)
  4: _23 = const ()
    SourceInfo(regex-automata/src/util/start.rs:270:59-279:10)
  5: StorageDead(_30)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  6: StorageDead(_29)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  7: StorageDead(_26)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  8: StorageDead(_24)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  9: StorageDead(_23)
    SourceInfo(regex-automata/src/util/start.rs:279:9-279:10)
  10: _22 = const ()
    SourceInfo(regex-automata/src/util/start.rs:270:9-279:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:270:9-279:10)
      kind: goto -> bb12
  }
  preds [bb24]
  succs [bb12]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:281:6-281:6)
      kind: return
  }
  preds [bb7, bb18, bb25]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:265:5-281:6)
      kind: resume
  }
  preds [bb0, bb1, bb5, bb6, bb8, bb9, bb10, bb12, bb13, bb17, bb19, bb23, bb24]
  succs []

