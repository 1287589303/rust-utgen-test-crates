bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/search.rs:793:9-793:18)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/search.rs:793:21-793:26)
  2: _6 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/search.rs:793:21-793:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:793:21-793:34)
      kind: _5 = <util::search::Input<'_> as core::clone::Clone>::clone(move _6) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/search.rs:793:33-793:34)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/hybrid/search.rs:793:9-793:18)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/search.rs:794:5-794:24)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/search.rs:794:5-794:10)
  4: _8 = &mut _5
    SourceInfo(regex-automata/src/hybrid/search.rs:794:5-794:10)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/search.rs:794:21-794:23)
  6: _9 = _4
    SourceInfo(regex-automata/src/hybrid/search.rs:794:21-794:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:794:5-794:24)
      kind: _7 = util::search::Input::<'_>::set_start(move _8, move _9) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/search.rs:794:23-794:24)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/search.rs:794:23-794:24)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/search.rs:794:24-794:25)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/search.rs:795:14-795:17)
  4: _10 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/search.rs:795:14-795:17)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/search.rs:795:19-795:24)
  6: _11 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/search.rs:795:19-795:24)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/search.rs:795:26-795:32)
  8: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/search.rs:795:26-795:32)
  9: _13 = &_5
    SourceInfo(regex-automata/src/hybrid/search.rs:795:26-795:32)
  10: _12 = &(*_13)
    SourceInfo(regex-automata/src/hybrid/search.rs:795:26-795:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:795:5-795:33)
      kind: _0 = hybrid::search::init_fwd(move _10, move _11, move _12) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/search.rs:795:32-795:33)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/search.rs:795:32-795:33)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/search.rs:795:32-795:33)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/search.rs:796:1-796:2)
  4: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/search.rs:796:1-796:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:796:2-796:2)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/search.rs:787:1-796:2)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

