bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/wire.rs:735:5-735:52)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/wire.rs:735:5-735:52)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/wire.rs:735:5-735:51)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/wire.rs:735:21-735:26)
  4: _6 = &(*_1)
    SourceInfo(regex-automata/src/util/wire.rs:735:21-735:26)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/util/wire.rs:735:28-735:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:735:28-735:44)
      kind: _7 = core::mem::size_of::<u32>() -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/util/wire.rs:735:46-735:50)
  1: _8 = _2
    SourceInfo(regex-automata/src/util/wire.rs:735:46-735:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:735:5-735:51)
      kind: _5 = util::wire::check_slice_len::<u8>(move _6, move _7, move _8) -> [return: bb2, unwind: bb12]
  }
  preds [bb0]
  succs [bb2, bb12]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/wire.rs:735:50-735:51)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/wire.rs:735:50-735:51)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/wire.rs:735:50-735:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:735:5-735:52)
      kind: _4 = <core::result::Result<(), util::wire::DeserializeError> as core::ops::Try>::branch(move _5) -> [return: bb3, unwind: bb12]
  }
  preds [bb1]
  succs [bb3, bb12]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/wire.rs:735:51-735:52)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/util/wire.rs:735:5-735:52)
  2: _9 = discriminant(_4)
    SourceInfo(regex-automata/src/util/wire.rs:735:5-735:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:735:5-735:52)
      kind: switchInt(move _9) -> [0: bb6, 1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-automata/src/util/wire.rs:735:5-735:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:735:5-735:52)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:735:51-735:52)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_13)
    SourceInfo(regex-automata/src/util/wire.rs:735:5-735:52)
  1: _13 = ((_4 as Continue).0: ())
    SourceInfo(regex-automata/src/util/wire.rs:735:5-735:52)
  2: _3 = _13
    SourceInfo(regex-automata/src/util/wire.rs:735:5-735:52)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/util/wire.rs:735:51-735:52)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/util/wire.rs:735:52-735:53)
  5: StorageDead(_3)
    SourceInfo(regex-automata/src/util/wire.rs:735:52-735:53)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/util/wire.rs:736:8-736:43)
  7: StorageLive(_15)
    SourceInfo(regex-automata/src/util/wire.rs:736:9-736:24)
  8: StorageLive(_16)
    SourceInfo(regex-automata/src/util/wire.rs:736:18-736:23)
  9: _16 = &(*_1)
    SourceInfo(regex-automata/src/util/wire.rs:736:18-736:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:736:9-736:24)
      kind: _15 = util::wire::read_u32(move _16) -> [return: bb9, unwind: bb12]
  }
  preds [bb3, bb5]
  succs [bb9, bb12]

bb7
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/util/wire.rs:735:51-735:52)
  1: _10 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/util/wire.rs:735:51-735:52)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/util/wire.rs:735:51-735:52)
  3: _12 = move _10
    SourceInfo(regex-automata/src/util/wire.rs:735:51-735:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:735:5-735:52)
      kind: _0 = <core::result::Result<(u32, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _12) -> [return: bb8, unwind: bb12]
  }
  preds [bb5]
  succs [bb8, bb12]

bb8
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/wire.rs:735:51-735:52)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/util/wire.rs:735:51-735:52)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/wire.rs:735:52-735:53)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/util/wire.rs:735:52-735:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:737:2-737:2)
      kind: goto -> bb11
  }
  preds [bb7]
  succs [bb11]

bb9
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/util/wire.rs:736:23-736:24)
  1: StorageLive(_17)
    SourceInfo(regex-automata/src/util/wire.rs:736:26-736:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:736:26-736:42)
      kind: _17 = core::mem::size_of::<u32>() -> [return: bb10, unwind: bb12]
  }
  preds [bb6]
  succs [bb10, bb12]

bb10
  0: _14 = (move _15, move _17)
    SourceInfo(regex-automata/src/util/wire.rs:736:8-736:43)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/util/wire.rs:736:42-736:43)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/util/wire.rs:736:42-736:43)
  3: _0 = core::result::Result::<(u32, usize), util::wire::DeserializeError>::Ok(move _14)
    SourceInfo(regex-automata/src/util/wire.rs:736:5-736:44)
  4: StorageDead(_14)
    SourceInfo(regex-automata/src/util/wire.rs:736:43-736:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:737:2-737:2)
      kind: goto -> bb11
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:737:2-737:2)
      kind: return
  }
  preds [bb8, bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:731:1-737:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb6, bb7, bb9]
  succs []

