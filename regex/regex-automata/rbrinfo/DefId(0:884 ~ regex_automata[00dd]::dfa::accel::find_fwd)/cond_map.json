{
  "regex-automata/src/dfa/accel.rs:102:14:102:61": [
    {
      "Try": "memchr::memchr2(bs[0], bs[1], &haystack[at..])?"
    }
  ],
  "regex-automata/src/dfa/accel.rs:107:10:107:16": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "at + i",
          "lhs": "at",
          "rhs": "i",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/accel.rs:103:14:103:68": [
    {
      "Try": "memchr::memchr3(bs[0], bs[1], bs[2], &haystack[at..])?"
    }
  ],
  "regex-automata/src/dfa/accel.rs:100:19:100:32": [
    {
      "Match": {
        "match_source": "regex-automata/src/dfa/accel.rs:100:19:100:32",
        "match_str": "needles.len()",
        "match_kind": "Other",
        "arms": {
          "regex-automata/src/dfa/accel.rs:105:9:105:10": {
            "pat": {
              "pat_str": "n",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": null
          },
          "regex-automata/src/dfa/accel.rs:102:9:102:10": {
            "pat": {
              "pat_str": "2",
              "kind": {
                "Other": 2
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/accel.rs:102:14:102:61"
          },
          "regex-automata/src/dfa/accel.rs:104:9:104:10": {
            "pat": {
              "pat_str": "0",
              "kind": {
                "Other": 0
              }
            },
            "guard": null,
            "body_source": null
          },
          "regex-automata/src/dfa/accel.rs:101:9:101:10": {
            "pat": {
              "pat_str": "1",
              "kind": {
                "Other": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/accel.rs:101:14:101:53"
          },
          "regex-automata/src/dfa/accel.rs:103:9:103:10": {
            "pat": {
              "pat_str": "3",
              "kind": {
                "Other": 3
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/accel.rs:103:14:103:68"
          }
        }
      }
    }
  ],
  "regex-automata/src/dfa/accel.rs:101:14:101:53": [
    {
      "Try": "memchr::memchr(bs[0], &haystack[at..])?"
    }
  ]
}