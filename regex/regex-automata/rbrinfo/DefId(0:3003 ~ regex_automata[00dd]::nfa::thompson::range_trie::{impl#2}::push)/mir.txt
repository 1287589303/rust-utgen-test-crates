bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:663:12-663:29)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:663:12-663:18)
  2: _5 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:663:12-663:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:663:12-663:29)
      kind: _4 = core::slice::<impl [regex_syntax::utf8::Utf8Range]>::is_empty(move _5) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:663:12-663:29)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:663:28-663:29)
  1: _0 = const nfa::thompson::range_trie::FINAL
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:664:13-664:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:663:9-669:10)
      kind: goto -> bb7
  }
  preds [bb1]
  succs [bb7]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:663:28-663:29)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:666:17-666:24)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:666:27-666:31)
  3: _7 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:666:27-666:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:666:27-666:43)
      kind: _6 = nfa::thompson::range_trie::RangeTrie::add_empty(move _7) -> [return: bb4, unwind: bb8]
  }
  preds [bb1]
  succs [bb4, bb8]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:666:42-666:43)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:666:17-666:24)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:13-667:57)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:13-667:18)
  4: _9 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:13-667:18)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:24-667:56)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:40-667:47)
  7: _11 = _6
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:40-667:47)
  8: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:49-667:55)
  9: _12 = &(*_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:49-667:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:24-667:56)
      kind: _10 = nfa::thompson::range_trie::NextInsert::new(move _11, move _12) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:55-667:56)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:55-667:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:13-667:57)
      kind: _8 = std::vec::Vec::<nfa::thompson::range_trie::NextInsert>::push(move _9, move _10) -> [return: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:56-667:57)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:56-667:57)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:667:57-667:58)
  3: _0 = _6
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:668:13-668:20)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:669:9-669:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:663:9-669:10)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:669:9-669:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:670:6-670:6)
      kind: return
  }
  preds [bb2, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:658:5-670:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb5]
  succs []

