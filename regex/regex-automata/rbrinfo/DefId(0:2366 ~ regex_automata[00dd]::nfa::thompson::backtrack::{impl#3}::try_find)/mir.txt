bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:944:13-944:18)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:944:21-944:26)
  2: _5 = move _3
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:944:21-944:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:944:21-944:33)
      kind: _4 = <I as core::convert::Into<util::search::Input<'_>>>::into(move _5) -> [return: bb1, unwind: bb90]
  }
  preds []
  succs [bb1, bb90]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:944:32-944:33)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:944:13-944:18)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:9-960:10)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:12-945:45)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:12-945:40)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:12-945:26)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:12-945:26)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:12-945:16)
  8: _11 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:12-945:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:12-945:26)
      kind: _10 = nfa::thompson::backtrack::BoundedBacktracker::get_nfa(move _11) -> [return: bb2, unwind: bb91]
  }
  preds [bb0]
  succs [bb2, bb91]

bb2
  0: _9 = &(*_10)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:12-945:26)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:25-945:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:12-945:40)
      kind: _8 = nfa::thompson::nfa::NFA::pattern_len(move _9) -> [return: bb3, unwind: bb91]
  }
  preds [bb1]
  succs [bb3, bb91]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:39-945:40)
  1: _7 = Eq(move _8, const 1_usize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:12-945:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:12-945:45)
      kind: switchInt(move _7) -> [0: bb30, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb30]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:44-945:45)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:44-945:45)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:946:17-946:26)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:946:30-946:34)
  4: _14 = core::option::Option::<util::primitives::NonMaxUsize>::None
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:946:30-946:34)
  5: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:946:36-946:40)
  6: _15 = core::option::Option::<util::primitives::NonMaxUsize>::None
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:946:36-946:40)
  7: _13 = [move _14, move _15]
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:946:29-946:41)
  8: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:946:40-946:41)
  9: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:946:40-946:41)
  10: FakeRead(ForLet(None), _13)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:946:17-946:26)
  11: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:17-947:20)
  12: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
  13: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
  14: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:77)
  15: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:33)
  16: _20 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:33)
  17: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:51-947:56)
  18: _21 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:51-947:56)
  19: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:58-947:64)
  20: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:58-947:64)
  21: _23 = &_4
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:58-947:64)
  22: _22 = &(*_23)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:58-947:64)
  23: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:66-947:76)
  24: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:66-947:76)
  25: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:66-947:76)
  26: _26 = &mut _13
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:66-947:76)
  27: _25 = &mut (*_26)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:66-947:76)
  28: _24 = move _25 as &mut [core::option::Option<util::primitives::NonMaxUsize>] (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:66-947:76)
  29: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:75-947:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:77)
      kind: _19 = nfa::thompson::backtrack::BoundedBacktracker::try_search_slots(move _20, move _21, move _22, move _24) -> [return: bb5, unwind: bb91]
  }
  preds [bb3]
  succs [bb5, bb91]

bb5
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:76-947:77)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:76-947:77)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:76-947:77)
  3: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:76-947:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
      kind: _18 = <core::result::Result<core::option::Option<util::primitives::PatternID>, util::search::MatchError> as core::ops::Try>::branch(move _19) -> [return: bb6, unwind: bb89]
  }
  preds [bb4]
  succs [bb6, bb89]

bb6
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:77-947:78)
  1: PlaceMention(_18)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
  2: _27 = discriminant(_18)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
      kind: switchInt(move _27) -> [0: bb9, 1: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _18)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:77-947:78)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
  1: _31 = ((_18 as Continue).0: core::option::Option<util::primitives::PatternID>)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
  2: _17 = _31
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
  3: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:77-947:78)
  4: PlaceMention(_17)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
  5: _32 = discriminant(_17)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:23-947:78)
      kind: switchInt(move _32) -> [0: bb13, 1: bb14, otherwise: bb12]
  }
  preds [bb6, bb8]
  succs [bb12, bb13, bb14]

bb10
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:77-947:78)
  1: _28 = move ((_18 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:77-947:78)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:77-947:78)
  3: _30 = move _28
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:77-947:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
      kind: _0 = <core::result::Result<core::option::Option<util::search::Match>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _30) -> [return: bb11, unwind: bb86]
  }
  preds [bb8]
  succs [bb11, bb86]

bb11
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:77-947:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:77-947:78)
      kind: drop(_28) -> [return: bb75, unwind: bb88]
  }
  preds [bb10]
  succs [bb75, bb88]

bb12
  0: FakeRead(ForMatchedPlace(None), _17)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:29-947:78)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:948:17-948:21)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb9]
  succs [bb14, bb15]

bb14
  0: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:949:22-949:25)
  1: _35 = ((_17 as Some).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:949:22-949:25)
  2: _16 = _35
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:949:30-949:33)
  3: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:949:32-949:33)
  4: FakeRead(ForLet(None), _16)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:17-947:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:950:14-950:15)
      kind: drop(_18) -> [return: bb16, unwind: bb91]
  }
  preds [bb9, bb13]
  succs [bb16, bb91]

bb15
  0: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:948:35-948:39)
  1: _34 = core::option::Option::<util::search::Match>::None
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:948:35-948:39)
  2: _0 = core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::Ok(move _34)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:948:32-948:40)
  3: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:948:39-948:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:948:25-948:40)
      kind: goto -> bb76
  }
  preds [bb13]
  succs [bb76]

bb16
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:950:14-950:15)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:950:14-950:15)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:950:14-950:15)
  3: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:950:14-950:15)
  4: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:951:17-951:22)
  5: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:951:37-951:38)
  6: _37 = const 0_usize
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:951:37-951:38)
  7: _38 = Len(_13)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:951:31-951:39)
  8: _39 = Lt(_37, _38)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:951:31-951:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:951:31-951:39)
      kind: assert(move _39, "index out of bounds: the length is {} but the index is {}", move _38, _37) -> [success: bb17, unwind: bb91]
  }
  preds [bb14]
  succs [bb17, bb91]

bb17
  0: PlaceMention(_13[_37])
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:951:31-951:39)
  1: _40 = discriminant(_13[_37])
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:951:31-951:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:951:25-951:39)
      kind: switchInt(move _40) -> [0: bb19, 1: bb20, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19, bb20]

bb18
  0: FakeRead(ForMatchedPlace(None), _13[_37])
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:951:31-951:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:951:31-951:39)
      kind: unreachable
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:952:17-952:21)
      kind: falseEdge -> [real: bb21, imaginary: bb20]
  }
  preds [bb17]
  succs [bb20, bb21]

bb20
  0: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:953:22-953:23)
  1: _43 = ((_13[_37] as Some).0: util::primitives::NonMaxUsize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:953:22-953:23)
  2: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:953:28-953:29)
  3: _44 = _43
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:953:28-953:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:953:28-953:35)
      kind: _36 = util::primitives::NonMaxUsize::get(move _44) -> [return: bb22, unwind: bb91]
  }
  preds [bb17, bb19]
  succs [bb22, bb91]

bb21
  0: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:952:35-952:39)
  1: _42 = core::option::Option::<util::search::Match>::None
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:952:35-952:39)
  2: _0 = core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::Ok(move _42)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:952:32-952:40)
  3: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:952:39-952:40)
  4: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:954:14-954:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb74
  }
  preds [bb19]
  succs [bb74]

bb22
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:953:34-953:35)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:953:34-953:35)
  2: FakeRead(ForLet(None), _36)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:951:17-951:22)
  3: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:954:14-954:15)
  4: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:955:17-955:20)
  5: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:955:35-955:36)
  6: _46 = const 1_usize
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:955:35-955:36)
  7: _47 = Len(_13)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:955:29-955:37)
  8: _48 = Lt(_46, _47)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:955:29-955:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:955:29-955:37)
      kind: assert(move _48, "index out of bounds: the length is {} but the index is {}", move _47, _46) -> [success: bb23, unwind: bb91]
  }
  preds [bb20]
  succs [bb23, bb91]

bb23
  0: PlaceMention(_13[_46])
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:955:29-955:37)
  1: _49 = discriminant(_13[_46])
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:955:29-955:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:955:23-955:37)
      kind: switchInt(move _49) -> [0: bb25, 1: bb26, otherwise: bb24]
  }
  preds [bb22]
  succs [bb24, bb25, bb26]

bb24
  0: FakeRead(ForMatchedPlace(None), _13[_46])
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:955:29-955:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:955:29-955:37)
      kind: unreachable
  }
  preds [bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:956:17-956:21)
      kind: falseEdge -> [real: bb27, imaginary: bb26]
  }
  preds [bb23]
  succs [bb26, bb27]

bb26
  0: StorageLive(_52)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:957:22-957:23)
  1: _52 = ((_13[_46] as Some).0: util::primitives::NonMaxUsize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:957:22-957:23)
  2: StorageLive(_53)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:957:28-957:29)
  3: _53 = _52
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:957:28-957:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:957:28-957:35)
      kind: _45 = util::primitives::NonMaxUsize::get(move _53) -> [return: bb28, unwind: bb91]
  }
  preds [bb23, bb25]
  succs [bb28, bb91]

bb27
  0: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:956:35-956:39)
  1: _51 = core::option::Option::<util::search::Match>::None
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:956:35-956:39)
  2: _0 = core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::Ok(move _51)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:956:32-956:40)
  3: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:956:39-956:40)
  4: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:958:14-958:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb73
  }
  preds [bb25]
  succs [bb73]

bb28
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:957:34-957:35)
  1: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:957:34-957:35)
  2: FakeRead(ForLet(None), _45)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:955:17-955:20)
  3: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:958:14-958:15)
  4: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:23-959:65)
  5: StorageLive(_55)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:28-959:64)
  6: StorageLive(_56)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:39-959:42)
  7: _56 = _16
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:39-959:42)
  8: StorageLive(_57)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:44-959:63)
  9: StorageLive(_58)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:51-959:56)
  10: _58 = _36
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:51-959:56)
  11: StorageLive(_59)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:58-959:61)
  12: _59 = _45
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:58-959:61)
  13: _57 = util::search::Span { start: move _58, end: move _59 }
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:44-959:63)
  14: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:62-959:63)
  15: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:62-959:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:28-959:64)
      kind: _55 = util::search::Match::new::<util::search::Span>(move _56, move _57) -> [return: bb29, unwind: bb91]
  }
  preds [bb26]
  succs [bb29, bb91]

bb29
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:63-959:64)
  1: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:63-959:64)
  2: _54 = core::option::Option::<util::search::Match>::Some(move _55)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:23-959:65)
  3: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:64-959:65)
  4: _0 = core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::Ok(move _54)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:20-959:66)
  5: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:65-959:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:959:13-959:66)
      kind: goto -> bb73
  }
  preds [bb28]
  succs [bb73]

bb30
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:44-945:45)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:945:44-945:45)
  2: _6 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:960:10-960:10)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:960:9-960:10)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:960:9-960:10)
  5: StorageLive(_60)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:961:13-961:18)
  6: StorageLive(_61)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:961:21-961:35)
  7: StorageLive(_62)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:961:21-961:35)
  8: StorageLive(_63)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:961:21-961:25)
  9: _63 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:961:21-961:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:961:21-961:35)
      kind: _62 = nfa::thompson::backtrack::BoundedBacktracker::get_nfa(move _63) -> [return: bb31, unwind: bb91]
  }
  preds [bb3]
  succs [bb31, bb91]

bb31
  0: _61 = &(*_62)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:961:21-961:35)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:961:34-961:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:961:21-961:48)
      kind: _60 = nfa::thompson::nfa::NFA::group_info(move _61) -> [return: bb32, unwind: bb91]
  }
  preds [bb30]
  succs [bb32, bb91]

bb32
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:961:47-961:48)
  1: FakeRead(ForLet(None), _60)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:961:13-961:18)
  2: StorageDead(_62)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:961:48-961:49)
  3: StorageLive(_64)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:962:13-962:22)
  4: StorageLive(_65)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:962:25-962:30)
  5: _65 = &(*_60)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:962:25-962:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:962:25-962:50)
      kind: _64 = util::captures::GroupInfo::implicit_slot_len(move _65) -> [return: bb33, unwind: bb91]
  }
  preds [bb31]
  succs [bb33, bb91]

bb33
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:962:49-962:50)
  1: FakeRead(ForLet(None), _64)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:962:13-962:22)
  2: StorageLive(_66)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:963:13-963:22)
  3: StorageLive(_67)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:963:30-963:34)
  4: _67 = core::option::Option::<util::primitives::NonMaxUsize>::None
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:963:30-963:34)
  5: StorageLive(_68)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:963:36-963:45)
  6: _68 = _64
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:963:36-963:45)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
      kind: _66 = std::vec::from_elem::<core::option::Option<util::primitives::NonMaxUsize>>(move _67, move _68) -> [return: bb34, unwind: bb91]
  }
  preds [bb32]
  succs [bb34, bb91]

bb34
  0: StorageDead(_68)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  1: StorageDead(_67)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  2: FakeRead(ForLet(None), _66)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:963:13-963:22)
  3: StorageLive(_69)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:13-964:16)
  4: StorageLive(_70)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
  5: StorageLive(_71)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
  6: StorageLive(_72)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:73)
  7: StorageLive(_73)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:29)
  8: _73 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:29)
  9: StorageLive(_74)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:47-964:52)
  10: _74 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:47-964:52)
  11: StorageLive(_75)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:54-964:60)
  12: StorageLive(_76)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:54-964:60)
  13: _76 = &_4
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:54-964:60)
  14: _75 = &(*_76)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:54-964:60)
  15: StorageLive(_77)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:62-964:72)
  16: StorageLive(_78)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:62-964:72)
  17: StorageLive(_79)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:62-964:72)
  18: StorageLive(_80)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:62-964:72)
  19: _80 = &mut _66
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:62-964:72)
  20: _79 = &mut (*_80)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:62-964:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:62-964:72)
      kind: _78 = <std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>> as core::ops::DerefMut>::deref_mut(move _79) -> [return: bb35, unwind: bb85]
  }
  preds [bb33]
  succs [bb35, bb85]

bb35
  0: _77 = &mut (*_78)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:62-964:72)
  1: StorageDead(_79)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:71-964:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:73)
      kind: _72 = nfa::thompson::backtrack::BoundedBacktracker::try_search_slots(move _73, move _74, move _75, move _77) -> [return: bb36, unwind: bb85]
  }
  preds [bb34]
  succs [bb36, bb85]

bb36
  0: StorageDead(_77)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:72-964:73)
  1: StorageDead(_75)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:72-964:73)
  2: StorageDead(_74)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:72-964:73)
  3: StorageDead(_73)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:72-964:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
      kind: _71 = <core::result::Result<core::option::Option<util::primitives::PatternID>, util::search::MatchError> as core::ops::Try>::branch(move _72) -> [return: bb37, unwind: bb84]
  }
  preds [bb35]
  succs [bb37, bb84]

bb37
  0: StorageDead(_72)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:73-964:74)
  1: PlaceMention(_71)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
  2: _81 = discriminant(_71)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
      kind: switchInt(move _81) -> [0: bb40, 1: bb39, otherwise: bb38]
  }
  preds [bb36]
  succs [bb38, bb39, bb40]

bb38
  0: FakeRead(ForMatchedPlace(None), _71)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
      kind: unreachable
  }
  preds [bb37]
  succs []

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:73-964:74)
      kind: falseEdge -> [real: bb41, imaginary: bb40]
  }
  preds [bb37]
  succs [bb40, bb41]

bb40
  0: StorageLive(_85)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
  1: _85 = ((_71 as Continue).0: core::option::Option<util::primitives::PatternID>)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
  2: _70 = _85
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
  3: StorageDead(_85)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:73-964:74)
  4: PlaceMention(_70)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
  5: _86 = discriminant(_70)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:19-964:74)
      kind: switchInt(move _86) -> [0: bb44, 1: bb45, otherwise: bb43]
  }
  preds [bb37, bb39]
  succs [bb43, bb44, bb45]

bb41
  0: StorageLive(_82)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:73-964:74)
  1: _82 = move ((_71 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:73-964:74)
  2: StorageLive(_84)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:73-964:74)
  3: _84 = move _82
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:73-964:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
      kind: _0 = <core::result::Result<core::option::Option<util::search::Match>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _84) -> [return: bb42, unwind: bb81]
  }
  preds [bb39]
  succs [bb42, bb81]

bb42
  0: StorageDead(_84)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:73-964:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:73-964:74)
      kind: drop(_82) -> [return: bb68, unwind: bb83]
  }
  preds [bb41]
  succs [bb68, bb83]

bb43
  0: FakeRead(ForMatchedPlace(None), _70)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:25-964:74)
      kind: unreachable
  }
  preds [bb40]
  succs []

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:965:13-965:17)
      kind: falseEdge -> [real: bb46, imaginary: bb45]
  }
  preds [bb40]
  succs [bb45, bb46]

bb45
  0: StorageLive(_89)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:966:18-966:21)
  1: _89 = ((_70 as Some).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:966:18-966:21)
  2: _69 = _89
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:966:26-966:29)
  3: StorageDead(_89)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:966:28-966:29)
  4: FakeRead(ForLet(None), _69)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:13-964:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:967:10-967:11)
      kind: drop(_71) -> [return: bb47, unwind: bb85]
  }
  preds [bb40, bb44]
  succs [bb47, bb85]

bb46
  0: StorageLive(_88)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:965:31-965:35)
  1: _88 = core::option::Option::<util::search::Match>::None
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:965:31-965:35)
  2: _0 = core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::Ok(move _88)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:965:28-965:36)
  3: StorageDead(_88)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:965:35-965:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:965:21-965:36)
      kind: goto -> bb69
  }
  preds [bb44]
  succs [bb69]

bb47
  0: StorageDead(_80)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:967:10-967:11)
  1: StorageDead(_78)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:967:10-967:11)
  2: StorageDead(_76)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:967:10-967:11)
  3: StorageDead(_71)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:967:10-967:11)
  4: StorageDead(_70)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:967:10-967:11)
  5: StorageLive(_90)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:13-968:18)
  6: StorageLive(_91)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:32-968:52)
  7: StorageLive(_92)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:27-968:32)
  8: _92 = &_66
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:27-968:32)
  9: StorageLive(_93)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:33-968:51)
  10: StorageLive(_94)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:33-968:47)
  11: StorageLive(_95)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:33-968:36)
  12: _95 = &_69
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:33-968:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:33-968:47)
      kind: _94 = util::primitives::PatternID::as_usize(move _95) -> [return: bb48, unwind: bb85]
  }
  preds [bb45]
  succs [bb48, bb85]

bb48
  0: StorageDead(_95)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:46-968:47)
  1: _96 = MulWithOverflow(_94, const 2_usize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:33-968:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:33-968:51)
      kind: assert(!move (_96.1: bool), "attempt to compute `{} * {}`, which would overflow", move _94, const 2_usize) -> [success: bb49, unwind: bb85]
  }
  preds [bb47]
  succs [bb49, bb85]

bb49
  0: _93 = move (_96.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:33-968:51)
  1: StorageDead(_94)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:50-968:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:32-968:52)
      kind: _91 = <std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>> as core::ops::Index<usize>>::index(move _92, move _93) -> [return: bb50, unwind: bb85]
  }
  preds [bb48]
  succs [bb50, bb85]

bb50
  0: StorageDead(_93)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:51-968:52)
  1: StorageDead(_92)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:51-968:52)
  2: PlaceMention((*_91))
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:27-968:52)
  3: _97 = discriminant((*_91))
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:27-968:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:21-968:52)
      kind: switchInt(move _97) -> [0: bb52, 1: bb53, otherwise: bb51]
  }
  preds [bb49]
  succs [bb51, bb52, bb53]

bb51
  0: FakeRead(ForMatchedPlace(None), (*_91))
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:27-968:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:27-968:52)
      kind: unreachable
  }
  preds [bb50]
  succs []

bb52
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:969:13-969:17)
      kind: falseEdge -> [real: bb54, imaginary: bb53]
  }
  preds [bb50]
  succs [bb53, bb54]

bb53
  0: StorageLive(_100)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:970:18-970:19)
  1: _100 = (((*_91) as Some).0: util::primitives::NonMaxUsize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:970:18-970:19)
  2: StorageLive(_101)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:970:24-970:25)
  3: _101 = _100
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:970:24-970:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:970:24-970:31)
      kind: _90 = util::primitives::NonMaxUsize::get(move _101) -> [return: bb55, unwind: bb85]
  }
  preds [bb50, bb52]
  succs [bb55, bb85]

bb54
  0: StorageLive(_99)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:969:31-969:35)
  1: _99 = core::option::Option::<util::search::Match>::None
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:969:31-969:35)
  2: _0 = core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::Ok(move _99)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:969:28-969:36)
  3: StorageDead(_99)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:969:35-969:36)
  4: StorageDead(_91)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:971:10-971:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb67
  }
  preds [bb52]
  succs [bb67]

bb55
  0: StorageDead(_101)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:970:30-970:31)
  1: StorageDead(_100)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:970:30-970:31)
  2: FakeRead(ForLet(None), _90)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:968:13-968:18)
  3: StorageDead(_91)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:971:10-971:11)
  4: StorageLive(_102)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:13-972:16)
  5: StorageLive(_103)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:30-972:54)
  6: StorageLive(_104)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:25-972:30)
  7: _104 = &_66
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:25-972:30)
  8: StorageLive(_105)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:31-972:53)
  9: StorageLive(_106)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:31-972:49)
  10: StorageLive(_107)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:31-972:45)
  11: StorageLive(_108)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:31-972:34)
  12: _108 = &_69
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:31-972:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:31-972:45)
      kind: _107 = util::primitives::PatternID::as_usize(move _108) -> [return: bb56, unwind: bb85]
  }
  preds [bb53]
  succs [bb56, bb85]

bb56
  0: StorageDead(_108)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:44-972:45)
  1: _109 = MulWithOverflow(_107, const 2_usize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:31-972:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:31-972:49)
      kind: assert(!move (_109.1: bool), "attempt to compute `{} * {}`, which would overflow", move _107, const 2_usize) -> [success: bb57, unwind: bb85]
  }
  preds [bb55]
  succs [bb57, bb85]

bb57
  0: _106 = move (_109.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:31-972:49)
  1: StorageDead(_107)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:48-972:49)
  2: _110 = AddWithOverflow(_106, const 1_usize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:31-972:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:31-972:53)
      kind: assert(!move (_110.1: bool), "attempt to compute `{} + {}`, which would overflow", move _106, const 1_usize) -> [success: bb58, unwind: bb85]
  }
  preds [bb56]
  succs [bb58, bb85]

bb58
  0: _105 = move (_110.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:31-972:53)
  1: StorageDead(_106)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:52-972:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:30-972:54)
      kind: _103 = <std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>> as core::ops::Index<usize>>::index(move _104, move _105) -> [return: bb59, unwind: bb85]
  }
  preds [bb57]
  succs [bb59, bb85]

bb59
  0: StorageDead(_105)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:53-972:54)
  1: StorageDead(_104)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:53-972:54)
  2: PlaceMention((*_103))
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:25-972:54)
  3: _111 = discriminant((*_103))
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:25-972:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:19-972:54)
      kind: switchInt(move _111) -> [0: bb61, 1: bb62, otherwise: bb60]
  }
  preds [bb58]
  succs [bb60, bb61, bb62]

bb60
  0: FakeRead(ForMatchedPlace(None), (*_103))
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:25-972:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:25-972:54)
      kind: unreachable
  }
  preds [bb59]
  succs []

bb61
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:973:13-973:17)
      kind: falseEdge -> [real: bb63, imaginary: bb62]
  }
  preds [bb59]
  succs [bb62, bb63]

bb62
  0: StorageLive(_114)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:974:18-974:19)
  1: _114 = (((*_103) as Some).0: util::primitives::NonMaxUsize)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:974:18-974:19)
  2: StorageLive(_115)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:974:24-974:25)
  3: _115 = _114
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:974:24-974:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:974:24-974:31)
      kind: _102 = util::primitives::NonMaxUsize::get(move _115) -> [return: bb64, unwind: bb85]
  }
  preds [bb59, bb61]
  succs [bb64, bb85]

bb63
  0: StorageLive(_113)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:973:31-973:35)
  1: _113 = core::option::Option::<util::search::Match>::None
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:973:31-973:35)
  2: _0 = core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::Ok(move _113)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:973:28-973:36)
  3: StorageDead(_113)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:973:35-973:36)
  4: StorageDead(_103)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:975:10-975:11)
  5: StorageDead(_102)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb67
  }
  preds [bb61]
  succs [bb67]

bb64
  0: StorageDead(_115)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:974:30-974:31)
  1: StorageDead(_114)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:974:30-974:31)
  2: FakeRead(ForLet(None), _102)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:972:13-972:16)
  3: StorageDead(_103)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:975:10-975:11)
  4: StorageLive(_116)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:12-976:54)
  5: StorageLive(_117)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:17-976:53)
  6: StorageLive(_118)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:28-976:31)
  7: _118 = _69
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:28-976:31)
  8: StorageLive(_119)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:33-976:52)
  9: StorageLive(_120)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:40-976:45)
  10: _120 = _90
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:40-976:45)
  11: StorageLive(_121)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:47-976:50)
  12: _121 = _102
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:47-976:50)
  13: _119 = util::search::Span { start: move _120, end: move _121 }
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:33-976:52)
  14: StorageDead(_121)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:51-976:52)
  15: StorageDead(_120)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:51-976:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:17-976:53)
      kind: _117 = util::search::Match::new::<util::search::Span>(move _118, move _119) -> [return: bb65, unwind: bb85]
  }
  preds [bb62]
  succs [bb65, bb85]

bb65
  0: StorageDead(_119)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:52-976:53)
  1: StorageDead(_118)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:52-976:53)
  2: _116 = core::option::Option::<util::search::Match>::Some(move _117)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:12-976:54)
  3: StorageDead(_117)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:53-976:54)
  4: _0 = core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::Ok(move _116)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:9-976:55)
  5: StorageDead(_116)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:976:54-976:55)
  6: StorageDead(_102)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
  7: StorageDead(_90)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
  8: StorageDead(_69)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
      kind: drop(_66) -> [return: bb66, unwind: bb91]
  }
  preds [bb64]
  succs [bb66, bb91]

bb66
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
  1: StorageDead(_64)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
  2: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
      kind: drop(_3) -> [return: bb80, unwind: bb92]
  }
  preds [bb65]
  succs [bb80, bb92]

bb67
  0: StorageDead(_90)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb71
  }
  preds [bb54, bb63]
  succs [bb71]

bb68
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:73-964:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb69
  }
  preds [bb42]
  succs [bb69]

bb69
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:967:10-967:11)
      kind: drop(_71) -> [return: bb70, unwind: bb85]
  }
  preds [bb46, bb68]
  succs [bb70, bb85]

bb70
  0: StorageDead(_80)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:967:10-967:11)
  1: StorageDead(_78)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:967:10-967:11)
  2: StorageDead(_76)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:967:10-967:11)
  3: StorageDead(_71)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:967:10-967:11)
  4: StorageDead(_70)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:967:10-967:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb71
  }
  preds [bb69]
  succs [bb71]

bb71
  0: StorageDead(_69)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
      kind: drop(_66) -> [return: bb72, unwind: bb91]
  }
  preds [bb67, bb70]
  succs [bb72, bb91]

bb72
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
  1: StorageDead(_64)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
  2: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb71]
  succs [bb79]

bb73
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:960:9-960:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb74
  }
  preds [bb27, bb29]
  succs [bb74]

bb74
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:960:9-960:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb21, bb73]
  succs [bb78]

bb75
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:77-947:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb11]
  succs [bb76]

bb76
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:950:14-950:15)
      kind: drop(_18) -> [return: bb77, unwind: bb91]
  }
  preds [bb15, bb75]
  succs [bb77, bb91]

bb77
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:950:14-950:15)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:950:14-950:15)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:950:14-950:15)
  3: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:950:14-950:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb76]
  succs [bb78]

bb78
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:960:9-960:10)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:960:9-960:10)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:960:9-960:10)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:960:9-960:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb74, bb77]
  succs [bb79]

bb79
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
      kind: drop(_3) -> [return: bb80, unwind: bb92]
  }
  preds [bb72, bb78]
  succs [bb80, bb92]

bb80
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:6-977:6)
      kind: return
  }
  preds [bb66, bb79]
  succs []

bb81
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:73-964:74)
      kind: drop(_84) -> [return: bb82, unwind terminate(cleanup)]
  }
  preds [bb41]
  succs [bb82]

bb82
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:73-964:74)
      kind: drop(_82) -> [return: bb83, unwind terminate(cleanup)]
  }
  preds [bb81]
  succs [bb83]

bb83
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:967:10-967:11)
      kind: drop(_71) -> [return: bb85, unwind terminate(cleanup)]
  }
  preds [bb42, bb82]
  succs [bb85]

bb84
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:964:73-964:74)
      kind: drop(_72) -> [return: bb85, unwind terminate(cleanup)]
  }
  preds [bb36]
  succs [bb85]

bb85
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
      kind: drop(_66) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb34, bb35, bb45, bb47, bb48, bb49, bb53, bb55, bb56, bb57, bb58, bb62, bb64, bb69, bb83, bb84]
  succs [bb91]

bb86
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:77-947:78)
      kind: drop(_30) -> [return: bb87, unwind terminate(cleanup)]
  }
  preds [bb10]
  succs [bb87]

bb87
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:77-947:78)
      kind: drop(_28) -> [return: bb88, unwind terminate(cleanup)]
  }
  preds [bb86]
  succs [bb88]

bb88
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:950:14-950:15)
      kind: drop(_18) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb11, bb87]
  succs [bb91]

bb89
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:947:77-947:78)
      kind: drop(_19) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb91]

bb90
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:944:32-944:33)
      kind: drop(_5) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb91]

bb91
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:977:5-977:6)
      kind: drop(_3) -> [return: bb92, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb4, bb14, bb16, bb20, bb22, bb26, bb28, bb30, bb31, bb32, bb33, bb65, bb71, bb76, bb85, bb88, bb89, bb90]
  succs [bb92]

bb92
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:939:5-977:6)
      kind: resume
  }
  preds [bb66, bb79, bb91]
  succs []

