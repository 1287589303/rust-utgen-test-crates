bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/determinize/state.rs:623:22-623:28)
  1: _3 = const 3_i32 as u32 (IntToInt)
    SourceInfo(regex-automata/src/util/determinize/state.rs:623:22-623:28)
  2: _4 = Lt(move _3, const 8_u32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:623:22-623:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:623:22-623:28)
      kind: assert(move _4, "attempt to shift left by `{}`, which would overflow", const 3_i32) -> [success: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _2 = Shl(const 1_u8, const 3_i32)
    SourceInfo(regex-automata/src/util/determinize/state.rs:623:22-623:28)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:623:15-623:18)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/util/determinize/state.rs:623:9-623:15)
  3: _6 = &mut (*((*_1).0: &mut std::vec::Vec<u8>))
    SourceInfo(regex-automata/src/util/determinize/state.rs:623:9-623:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:623:15-623:18)
      kind: _5 = <std::vec::Vec<u8> as core::ops::IndexMut<usize>>::index_mut(move _6, const 0_usize) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/determinize/state.rs:623:17-623:18)
  1: (*_5) = BitOr((*_5), move _2)
    SourceInfo(regex-automata/src/util/determinize/state.rs:623:9-623:28)
  2: StorageDead(_2)
    SourceInfo(regex-automata/src/util/determinize/state.rs:623:27-623:28)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/util/determinize/state.rs:623:28-623:29)
  4: _0 = const ()
    SourceInfo(regex-automata/src/util/determinize/state.rs:622:36-624:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:624:6-624:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/determinize/state.rs:622:5-624:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

