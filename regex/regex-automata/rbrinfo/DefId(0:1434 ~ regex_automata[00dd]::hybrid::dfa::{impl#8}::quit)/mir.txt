bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:9-3358:10)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:12-3353:44)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:12-3353:16)
  3: _6 = &_1
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:12-3353:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:12-3353:44)
      kind: _5 = hybrid::dfa::Config::get_unicode_word_boundary(move _6) -> [return: bb1, unwind: bb25]
  }
  preds []
  succs [bb1, bb25]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:12-3353:44)
      kind: switchInt(move _5) -> [0: bb8, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:43-3353:44)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:49-3353:64)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:49-3353:53)
  3: _8 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:49-3353:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:49-3353:64)
      kind: _7 = core::num::<impl u8>::is_ascii(move _8) -> [return: bb3, unwind: bb25]
  }
  preds [bb1]
  succs [bb3, bb25]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:49-3353:64)
      kind: switchInt(move _7) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:63-3353:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:73-3358:10)
      kind: goto -> bb9
  }
  preds [bb3]
  succs [bb9]

bb5
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:63-3353:64)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:69-3353:72)
  2: _9 = _3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:69-3353:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:69-3353:72)
      kind: switchInt(move _9) -> [0: bb6, otherwise: bb9]
  }
  preds [bb3]
  succs [bb6, bb9]

bb6
  0: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  1: StorageLive(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3355:17-3356:54)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3355:17-3356:54)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3355:17-3356:54)
  5: _16 = [const "cannot set non-ASCII byte to be non-quit when Unicode word boundaries are enabled"]
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3355:17-3356:54)
  6: _15 = &_16
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3355:17-3356:54)
  7: _14 = &(*_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3355:17-3356:54)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _13 = core::fmt::Arguments::<'_>::new_const::<1>(move _14) -> [return: bb7, unwind: bb25]
  }
  preds [bb5]
  succs [bb7, bb25]

bb7
  0: StorageDead(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _12 = core::panicking::panic_fmt(move _13) -> bb25
  }
  preds [bb6]
  succs [bb25]

bb8
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3353:43-3353:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb9
  }
  preds [bb1]
  succs [bb9]

bb9
  0: _4 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3358:10-3358:10)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3358:9-3358:10)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3358:9-3358:10)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3358:9-3358:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3358:9-3358:10)
  5: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3359:9-3361:10)
  6: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3359:12-3359:34)
  7: StorageLive(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3359:12-3359:24)
  8: _19 = &(_1.5: core::option::Option<util::alphabet::ByteSet>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3359:12-3359:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3359:12-3359:34)
      kind: _18 = core::option::Option::<util::alphabet::ByteSet>::is_none(move _19) -> [return: bb10, unwind: bb25]
  }
  preds [bb4, bb5, bb8]
  succs [bb10, bb25]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3359:12-3359:34)
      kind: switchInt(move _18) -> [0: bb13, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb13]

bb11
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3359:33-3359:34)
  1: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3360:28-3360:50)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3360:33-3360:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3360:33-3360:49)
      kind: _21 = util::alphabet::ByteSet::empty() -> [return: bb12, unwind: bb25]
  }
  preds [bb10]
  succs [bb12, bb25]

bb12
  0: _20 = core::option::Option::<util::alphabet::ByteSet>::Some(move _21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3360:28-3360:50)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3360:49-3360:50)
  2: (_1.5: core::option::Option<util::alphabet::ByteSet>) = move _20
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3360:13-3360:50)
  3: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3360:49-3360:50)
  4: _17 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3359:35-3361:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3359:9-3361:10)
      kind: goto -> bb14
  }
  preds [bb11]
  succs [bb14]

bb13
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3359:33-3359:34)
  1: _17 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3361:10-3361:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3359:9-3361:10)
      kind: goto -> bb14
  }
  preds [bb10]
  succs [bb14]

bb14
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3361:9-3361:10)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3361:9-3361:10)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3362:9-3366:10)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3362:12-3362:15)
  4: _23 = _3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3362:12-3362:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3362:12-3362:15)
      kind: switchInt(move _23) -> [0: bb19, otherwise: bb15]
  }
  preds [bb12, bb13]
  succs [bb15, bb19]

bb15
  0: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:13-3363:53)
  1: StorageLive(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:13-3363:43)
  2: StorageLive(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:13-3363:43)
  3: StorageLive(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:13-3363:34)
  4: StorageLive(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:13-3363:25)
  5: _28 = &mut (_1.5: core::option::Option<util::alphabet::ByteSet>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:13-3363:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:13-3363:34)
      kind: _27 = core::option::Option::<util::alphabet::ByteSet>::as_mut(move _28) -> [return: bb16, unwind: bb25]
  }
  preds [bb14]
  succs [bb16, bb25]

bb16
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:33-3363:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:13-3363:43)
      kind: _26 = core::option::Option::<&mut util::alphabet::ByteSet>::unwrap(move _27) -> [return: bb17, unwind: bb25]
  }
  preds [bb15]
  succs [bb17, bb25]

bb17
  0: _25 = &mut (*_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:13-3363:43)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:42-3363:43)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:48-3363:52)
  3: _29 = _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:48-3363:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:13-3363:53)
      kind: _24 = util::alphabet::ByteSet::add(move _25, move _29) -> [return: bb18, unwind: bb25]
  }
  preds [bb16]
  succs [bb18, bb25]

bb18
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:52-3363:53)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:52-3363:53)
  2: StorageDead(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:53-3363:54)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3363:53-3363:54)
  4: _22 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3362:16-3364:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3362:9-3366:10)
      kind: goto -> bb23
  }
  preds [bb17]
  succs [bb23]

bb19
  0: StorageLive(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:13-3365:56)
  1: StorageLive(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:13-3365:43)
  2: StorageLive(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:13-3365:43)
  3: StorageLive(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:13-3365:34)
  4: StorageLive(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:13-3365:25)
  5: _34 = &mut (_1.5: core::option::Option<util::alphabet::ByteSet>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:13-3365:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:13-3365:34)
      kind: _33 = core::option::Option::<util::alphabet::ByteSet>::as_mut(move _34) -> [return: bb20, unwind: bb25]
  }
  preds [bb14]
  succs [bb20, bb25]

bb20
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:33-3365:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:13-3365:43)
      kind: _32 = core::option::Option::<&mut util::alphabet::ByteSet>::unwrap(move _33) -> [return: bb21, unwind: bb25]
  }
  preds [bb19]
  succs [bb21, bb25]

bb21
  0: _31 = &mut (*_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:13-3365:43)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:42-3365:43)
  2: StorageLive(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:51-3365:55)
  3: _35 = _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:51-3365:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:13-3365:56)
      kind: _30 = util::alphabet::ByteSet::remove(move _31, move _35) -> [return: bb22, unwind: bb25]
  }
  preds [bb20]
  succs [bb22, bb25]

bb22
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:55-3365:56)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:55-3365:56)
  2: StorageDead(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:56-3365:57)
  3: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3365:56-3365:57)
  4: _22 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3364:16-3366:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3362:9-3366:10)
      kind: goto -> bb23
  }
  preds [bb21]
  succs [bb23]

bb23
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3366:9-3366:10)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3366:9-3366:10)
  2: _0 = move _1
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3367:9-3367:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3368:5-3368:6)
      kind: drop(_1) -> [return: bb24, unwind: bb26]
  }
  preds [bb18, bb22]
  succs [bb24, bb26]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3368:6-3368:6)
      kind: return
  }
  preds [bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3368:5-3368:6)
      kind: drop(_1) -> [return: bb26, unwind terminate(cleanup)]
  }
  preds [bb0, bb2, bb6, bb7, bb9, bb11, bb15, bb16, bb17, bb19, bb20, bb21]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3352:5-3368:6)
      kind: resume
  }
  preds [bb23, bb25]
  succs []

