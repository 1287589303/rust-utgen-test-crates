{
  "regex-automata/src/util/empty.rs:256:15:256:28": [
    {
      "Match": {
        "match_source": "regex-automata/src/util/empty.rs:256:15:256:28",
        "match_str": "find(&input)?",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/util/empty.rs:258:13:258:45": {
            "pat": {
              "pat_str": "Some((new_value, new_match_end))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/empty.rs:258:49:261:14"
          },
          "regex-automata/src/util/empty.rs:257:13:257:17": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/empty.rs:257:21:257:36"
          }
        }
      }
    },
    {
      "Try": "find(&input)?"
    }
  ],
  "regex-automata/src/util/empty.rs:243:12:243:48": [
    {
      "Bool": {
        "Other": "input.is_char_boundary(match_offset)"
      }
    }
  ],
  "regex-automata/src/util/empty.rs:251:33:251:59": [
    {
      "Match": {
        "match_source": "regex-automata/src/util/empty.rs:251:33:251:59",
        "match_str": "input.end().checked_sub(1)",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/util/empty.rs:252:17:252:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/empty.rs:252:25:252:40"
          },
          "regex-automata/src/util/empty.rs:253:17:253:26": {
            "pat": {
              "pat_str": "Some(end)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/empty.rs:253:30:253:33"
          }
        }
      }
    }
  ],
  "regex-automata/src/util/empty.rs:244:12:244:19": [
    {
      "Bool": {
        "Other": "forward"
      }
    }
  ],
  "regex-automata/src/util/empty.rs:231:8:231:42": [
    {
      "Bool": {
        "Other": "input.get_anchored().is_anchored()"
      }
    }
  ],
  "regex-automata/src/util/empty.rs:232:22:232:58": [
    {
      "Bool": {
        "Other": "input.is_char_boundary(match_offset)"
      }
    }
  ]
}