bb0
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/util/empty.rs:231:5-237:6)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/util/empty.rs:231:8-231:42)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/util/empty.rs:231:8-231:28)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/util/empty.rs:231:8-231:28)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/util/empty.rs:231:8-231:13)
  5: _10 = &(*_2)
    SourceInfo(regex-automata/src/util/empty.rs:231:8-231:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:231:8-231:28)
      kind: _9 = util::search::Input::<'_>::get_anchored(move _10) -> [return: bb1, unwind: bb71]
  }
  preds []
  succs [bb1, bb71]

bb1
  0: _8 = &_9
    SourceInfo(regex-automata/src/util/empty.rs:231:8-231:28)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/util/empty.rs:231:27-231:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:231:8-231:42)
      kind: _7 = util::search::Anchored::is_anchored(move _8) -> [return: bb2, unwind: bb71]
  }
  preds [bb0]
  succs [bb2, bb71]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:231:8-231:42)
      kind: switchInt(move _7) -> [0: bb10, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb10]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/empty.rs:231:41-231:42)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/empty.rs:231:41-231:42)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/util/empty.rs:232:19-236:10)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/util/empty.rs:232:22-232:58)
  4: StorageLive(_14)
    SourceInfo(regex-automata/src/util/empty.rs:232:22-232:27)
  5: _14 = &(*_2)
    SourceInfo(regex-automata/src/util/empty.rs:232:22-232:27)
  6: StorageLive(_15)
    SourceInfo(regex-automata/src/util/empty.rs:232:45-232:57)
  7: _15 = _4
    SourceInfo(regex-automata/src/util/empty.rs:232:45-232:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:232:22-232:58)
      kind: _13 = util::search::Input::<'_>::is_char_boundary(move _14, move _15) -> [return: bb4, unwind: bb71]
  }
  preds [bb2]
  succs [bb4, bb71]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:232:22-232:58)
      kind: switchInt(move _13) -> [0: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/empty.rs:232:57-232:58)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/util/empty.rs:232:57-232:58)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/util/empty.rs:233:18-233:28)
  3: _16 = move _3
    SourceInfo(regex-automata/src/util/empty.rs:233:18-233:28)
  4: _12 = core::option::Option::<T>::Some(move _16)
    SourceInfo(regex-automata/src/util/empty.rs:233:13-233:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:233:28-233:29)
      kind: drop(_16) -> [return: bb6, unwind: bb71]
  }
  preds [bb4]
  succs [bb6, bb71]

bb6
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/util/empty.rs:233:28-233:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:232:19-236:10)
      kind: goto -> bb8
  }
  preds [bb5]
  succs [bb8]

bb7
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/empty.rs:232:57-232:58)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/util/empty.rs:232:57-232:58)
  2: _12 = core::option::Option::<T>::None
    SourceInfo(regex-automata/src/util/empty.rs:235:13-235:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:232:19-236:10)
      kind: goto -> bb8
  }
  preds [bb4]
  succs [bb8]

bb8
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/empty.rs:236:9-236:10)
  1: _0 = core::result::Result::<core::option::Option<T>, util::search::MatchError>::Ok(move _12)
    SourceInfo(regex-automata/src/util/empty.rs:232:16-236:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:236:10-236:11)
      kind: drop(_12) -> [return: bb9, unwind: bb71]
  }
  preds [bb6, bb7]
  succs [bb9, bb71]

bb9
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/empty.rs:236:10-236:11)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/empty.rs:237:5-237:6)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/empty.rs:237:5-237:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb8]
  succs [bb60]

bb10
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/empty.rs:231:41-231:42)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/empty.rs:231:41-231:42)
  2: _6 = const ()
    SourceInfo(regex-automata/src/util/empty.rs:237:6-237:6)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/util/empty.rs:237:5-237:6)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/util/empty.rs:237:5-237:6)
  5: StorageLive(_17)
    SourceInfo(regex-automata/src/util/empty.rs:241:9-241:18)
  6: _17 = move _3
    SourceInfo(regex-automata/src/util/empty.rs:241:21-241:31)
  7: FakeRead(ForLet(None), _17)
    SourceInfo(regex-automata/src/util/empty.rs:241:9-241:18)
  8: StorageLive(_18)
    SourceInfo(regex-automata/src/util/empty.rs:242:9-242:18)
  9: StorageLive(_19)
    SourceInfo(regex-automata/src/util/empty.rs:242:21-242:26)
  10: _19 = &(*_2)
    SourceInfo(regex-automata/src/util/empty.rs:242:21-242:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:242:21-242:34)
      kind: _18 = <util::search::Input<'_> as core::clone::Clone>::clone(move _19) -> [return: bb11, unwind: bb70]
  }
  preds [bb2]
  succs [bb11, bb70]

bb11
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/util/empty.rs:242:33-242:34)
  1: FakeRead(ForLet(None), _18)
    SourceInfo(regex-automata/src/util/empty.rs:242:9-242:18)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/util/empty.rs:243:5-263:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:243:5-263:6)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:243:5-263:6)
      kind: falseUnwind -> [real: bb13, unwind: bb70]
  }
  preds [bb11, bb50]
  succs [bb13, bb70]

bb13
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/util/empty.rs:243:12-243:48)
  1: StorageLive(_23)
    SourceInfo(regex-automata/src/util/empty.rs:243:12-243:17)
  2: _23 = &_18
    SourceInfo(regex-automata/src/util/empty.rs:243:12-243:17)
  3: StorageLive(_24)
    SourceInfo(regex-automata/src/util/empty.rs:243:35-243:47)
  4: _24 = _4
    SourceInfo(regex-automata/src/util/empty.rs:243:35-243:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:243:12-243:48)
      kind: _22 = util::search::Input::<'_>::is_char_boundary(move _23, move _24) -> [return: bb14, unwind: bb70]
  }
  preds [bb12]
  succs [bb14, bb70]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:243:12-243:48)
      kind: switchInt(move _22) -> [0: bb16, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16]

bb15
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/util/empty.rs:243:47-243:48)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/util/empty.rs:243:47-243:48)
  2: StorageLive(_63)
    SourceInfo(regex-automata/src/util/empty.rs:243:5-263:6)
  3: _20 = const ()
    SourceInfo(regex-automata/src/util/empty.rs:243:5-263:6)
  4: StorageDead(_63)
    SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
  5: StorageDead(_22)
    SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
  6: StorageDead(_20)
    SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
  7: StorageLive(_65)
    SourceInfo(regex-automata/src/util/empty.rs:264:8-264:19)
  8: StorageLive(_66)
    SourceInfo(regex-automata/src/util/empty.rs:264:13-264:18)
  9: _66 = move _17
    SourceInfo(regex-automata/src/util/empty.rs:264:13-264:18)
  10: _65 = core::option::Option::<T>::Some(move _66)
    SourceInfo(regex-automata/src/util/empty.rs:264:8-264:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:264:18-264:19)
      kind: drop(_66) -> [return: bb51, unwind: bb63]
  }
  preds [bb14]
  succs [bb51, bb63]

bb16
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/util/empty.rs:243:47-243:48)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/util/empty.rs:243:47-243:48)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/util/empty.rs:244:9-255:10)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/util/empty.rs:244:12-244:19)
  4: _26 = _1
    SourceInfo(regex-automata/src/util/empty.rs:244:12-244:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:244:12-244:19)
      kind: switchInt(move _26) -> [0: bb22, otherwise: bb17]
  }
  preds [bb14]
  succs [bb17, bb22]

bb17
  0: StorageLive(_27)
    SourceInfo(regex-automata/src/util/empty.rs:249:13-249:67)
  1: StorageLive(_28)
    SourceInfo(regex-automata/src/util/empty.rs:249:13-249:18)
  2: _28 = &mut _18
    SourceInfo(regex-automata/src/util/empty.rs:249:13-249:18)
  3: StorageLive(_29)
    SourceInfo(regex-automata/src/util/empty.rs:249:29-249:66)
  4: StorageLive(_30)
    SourceInfo(regex-automata/src/util/empty.rs:249:29-249:57)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/util/empty.rs:249:29-249:42)
  6: StorageLive(_32)
    SourceInfo(regex-automata/src/util/empty.rs:249:29-249:34)
  7: _32 = &_18
    SourceInfo(regex-automata/src/util/empty.rs:249:29-249:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:249:29-249:42)
      kind: _31 = util::search::Input::<'_>::start(move _32) -> [return: bb18, unwind: bb70]
  }
  preds [bb16]
  succs [bb18, bb70]

bb18
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/util/empty.rs:249:41-249:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:249:29-249:57)
      kind: _30 = core::num::<impl usize>::checked_add(move _31, const 1_usize) -> [return: bb19, unwind: bb70]
  }
  preds [bb17]
  succs [bb19, bb70]

bb19
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/util/empty.rs:249:56-249:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:249:29-249:66)
      kind: _29 = core::option::Option::<usize>::unwrap(move _30) -> [return: bb20, unwind: bb70]
  }
  preds [bb18]
  succs [bb20, bb70]

bb20
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/util/empty.rs:249:65-249:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:249:13-249:67)
      kind: _27 = util::search::Input::<'_>::set_start(move _28, move _29) -> [return: bb21, unwind: bb70]
  }
  preds [bb19]
  succs [bb21, bb70]

bb21
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/util/empty.rs:249:66-249:67)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/util/empty.rs:249:66-249:67)
  2: StorageDead(_27)
    SourceInfo(regex-automata/src/util/empty.rs:249:67-249:68)
  3: _25 = const ()
    SourceInfo(regex-automata/src/util/empty.rs:244:20-250:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:244:9-255:10)
      kind: goto -> bb31
  }
  preds [bb20]
  succs [bb31]

bb22
  0: StorageLive(_33)
    SourceInfo(regex-automata/src/util/empty.rs:251:13-254:15)
  1: StorageLive(_34)
    SourceInfo(regex-automata/src/util/empty.rs:251:13-251:18)
  2: _34 = &mut _18
    SourceInfo(regex-automata/src/util/empty.rs:251:13-251:18)
  3: StorageLive(_35)
    SourceInfo(regex-automata/src/util/empty.rs:251:27-254:14)
  4: StorageLive(_36)
    SourceInfo(regex-automata/src/util/empty.rs:251:33-251:59)
  5: StorageLive(_37)
    SourceInfo(regex-automata/src/util/empty.rs:251:33-251:44)
  6: StorageLive(_38)
    SourceInfo(regex-automata/src/util/empty.rs:251:33-251:38)
  7: _38 = &_18
    SourceInfo(regex-automata/src/util/empty.rs:251:33-251:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:251:33-251:44)
      kind: _37 = util::search::Input::<'_>::end(move _38) -> [return: bb23, unwind: bb70]
  }
  preds [bb16]
  succs [bb23, bb70]

bb23
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/util/empty.rs:251:43-251:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:251:33-251:59)
      kind: _36 = core::num::<impl usize>::checked_sub(move _37, const 1_usize) -> [return: bb24, unwind: bb70]
  }
  preds [bb22]
  succs [bb24, bb70]

bb24
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/util/empty.rs:251:58-251:59)
  1: PlaceMention(_36)
    SourceInfo(regex-automata/src/util/empty.rs:251:33-251:59)
  2: _39 = discriminant(_36)
    SourceInfo(regex-automata/src/util/empty.rs:251:33-251:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:251:27-251:59)
      kind: switchInt(move _39) -> [0: bb26, 1: bb27, otherwise: bb25]
  }
  preds [bb23]
  succs [bb25, bb26, bb27]

bb25
  0: FakeRead(ForMatchedPlace(None), _36)
    SourceInfo(regex-automata/src/util/empty.rs:251:33-251:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:251:33-251:59)
      kind: unreachable
  }
  preds [bb24]
  succs []

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:252:17-252:21)
      kind: falseEdge -> [real: bb28, imaginary: bb27]
  }
  preds [bb24]
  succs [bb27, bb28]

bb27
  0: StorageLive(_42)
    SourceInfo(regex-automata/src/util/empty.rs:253:22-253:25)
  1: _42 = ((_36 as Some).0: usize)
    SourceInfo(regex-automata/src/util/empty.rs:253:22-253:25)
  2: _35 = _42
    SourceInfo(regex-automata/src/util/empty.rs:253:30-253:33)
  3: StorageDead(_42)
    SourceInfo(regex-automata/src/util/empty.rs:253:32-253:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:251:13-254:15)
      kind: _33 = util::search::Input::<'_>::set_end(move _34, move _35) -> [return: bb30, unwind: bb70]
  }
  preds [bb24, bb26]
  succs [bb30, bb70]

bb28
  0: StorageLive(_41)
    SourceInfo(regex-automata/src/util/empty.rs:252:35-252:39)
  1: _41 = core::option::Option::<T>::None
    SourceInfo(regex-automata/src/util/empty.rs:252:35-252:39)
  2: _0 = core::result::Result::<core::option::Option<T>, util::search::MatchError>::Ok(move _41)
    SourceInfo(regex-automata/src/util/empty.rs:252:32-252:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:252:39-252:40)
      kind: drop(_41) -> [return: bb29, unwind: bb70]
  }
  preds [bb26]
  succs [bb29, bb70]

bb29
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/util/empty.rs:252:39-252:40)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/util/empty.rs:254:14-254:15)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/util/empty.rs:254:14-254:15)
  3: StorageDead(_36)
    SourceInfo(regex-automata/src/util/empty.rs:254:15-254:16)
  4: StorageDead(_33)
    SourceInfo(regex-automata/src/util/empty.rs:254:15-254:16)
  5: StorageDead(_26)
    SourceInfo(regex-automata/src/util/empty.rs:255:9-255:10)
  6: StorageDead(_25)
    SourceInfo(regex-automata/src/util/empty.rs:255:9-255:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb58
  }
  preds [bb28]
  succs [bb58]

bb30
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/util/empty.rs:254:14-254:15)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/util/empty.rs:254:14-254:15)
  2: StorageDead(_36)
    SourceInfo(regex-automata/src/util/empty.rs:254:15-254:16)
  3: StorageDead(_33)
    SourceInfo(regex-automata/src/util/empty.rs:254:15-254:16)
  4: _25 = const ()
    SourceInfo(regex-automata/src/util/empty.rs:250:16-255:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:244:9-255:10)
      kind: goto -> bb31
  }
  preds [bb27]
  succs [bb31]

bb31
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/util/empty.rs:255:9-255:10)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/util/empty.rs:255:9-255:10)
  2: StorageLive(_43)
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
  3: StorageLive(_44)
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
  4: StorageLive(_45)
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:27)
  5: StorageLive(_46)
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:19)
  6: _46 = &mut _5
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:19)
  7: StorageLive(_47)
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:27)
  8: StorageLive(_48)
    SourceInfo(regex-automata/src/util/empty.rs:256:20-256:26)
  9: StorageLive(_49)
    SourceInfo(regex-automata/src/util/empty.rs:256:20-256:26)
  10: _49 = &_18
    SourceInfo(regex-automata/src/util/empty.rs:256:20-256:26)
  11: _48 = &(*_49)
    SourceInfo(regex-automata/src/util/empty.rs:256:20-256:26)
  12: _47 = (move _48,)
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:256:15-256:27)
      kind: _45 = <F as core::ops::FnMut<(&util::search::Input<'_>,)>>::call_mut(move _46, move _47) -> [return: bb32, unwind: bb70]
  }
  preds [bb21, bb30]
  succs [bb32, bb70]

bb32
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/util/empty.rs:256:26-256:27)
  1: StorageDead(_47)
    SourceInfo(regex-automata/src/util/empty.rs:256:26-256:27)
  2: StorageDead(_46)
    SourceInfo(regex-automata/src/util/empty.rs:256:26-256:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
      kind: _44 = <core::result::Result<core::option::Option<(T, usize)>, util::search::MatchError> as core::ops::Try>::branch(move _45) -> [return: bb33, unwind: bb69]
  }
  preds [bb31]
  succs [bb33, bb69]

bb33
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/util/empty.rs:256:27-256:28)
  1: PlaceMention(_44)
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
  2: _50 = discriminant(_44)
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
      kind: switchInt(move _50) -> [0: bb36, 1: bb35, otherwise: bb34]
  }
  preds [bb32]
  succs [bb34, bb35, bb36]

bb34
  0: FakeRead(ForMatchedPlace(None), _44)
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
      kind: unreachable
  }
  preds [bb33]
  succs []

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:256:27-256:28)
      kind: falseEdge -> [real: bb37, imaginary: bb36]
  }
  preds [bb33]
  succs [bb36, bb37]

bb36
  0: StorageLive(_54)
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
  1: _54 = move ((_44 as Continue).0: core::option::Option<(T, usize)>)
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
  2: _43 = move _54
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:256:27-256:28)
      kind: drop(_54) -> [return: bb39, unwind: bb68]
  }
  preds [bb33, bb35]
  succs [bb39, bb68]

bb37
  0: StorageLive(_51)
    SourceInfo(regex-automata/src/util/empty.rs:256:27-256:28)
  1: _51 = move ((_44 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/util/empty.rs:256:27-256:28)
  2: StorageLive(_53)
    SourceInfo(regex-automata/src/util/empty.rs:256:27-256:28)
  3: _53 = move _51
    SourceInfo(regex-automata/src/util/empty.rs:256:27-256:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
      kind: _0 = <core::result::Result<core::option::Option<T>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _53) -> [return: bb38, unwind: bb66]
  }
  preds [bb35]
  succs [bb38, bb66]

bb38
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/util/empty.rs:256:27-256:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:256:27-256:28)
      kind: drop(_51) -> [return: bb55, unwind: bb68]
  }
  preds [bb37]
  succs [bb55, bb68]

bb39
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/util/empty.rs:256:27-256:28)
  1: PlaceMention(_43)
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
  2: _55 = discriminant(_43)
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:256:9-256:28)
      kind: switchInt(move _55) -> [0: bb41, 1: bb42, otherwise: bb40]
  }
  preds [bb36]
  succs [bb40, bb41, bb42]

bb40
  0: FakeRead(ForMatchedPlace(None), _43)
    SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:256:15-256:28)
      kind: unreachable
  }
  preds [bb39]
  succs []

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:257:13-257:17)
      kind: falseEdge -> [real: bb43, imaginary: bb42]
  }
  preds [bb39]
  succs [bb42, bb43]

bb42
  0: StorageLive(_58)
    SourceInfo(regex-automata/src/util/empty.rs:258:19-258:28)
  1: _58 = move (((_43 as Some).0: (T, usize)).0: T)
    SourceInfo(regex-automata/src/util/empty.rs:258:19-258:28)
  2: StorageLive(_59)
    SourceInfo(regex-automata/src/util/empty.rs:258:30-258:43)
  3: _59 = (((_43 as Some).0: (T, usize)).1: usize)
    SourceInfo(regex-automata/src/util/empty.rs:258:30-258:43)
  4: StorageLive(_60)
    SourceInfo(regex-automata/src/util/empty.rs:259:25-259:34)
  5: _60 = move _58
    SourceInfo(regex-automata/src/util/empty.rs:259:25-259:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:259:17-259:22)
      kind: drop(_17) -> [return: bb45, unwind: bb46]
  }
  preds [bb39, bb41]
  succs [bb45, bb46]

bb43
  0: StorageLive(_57)
    SourceInfo(regex-automata/src/util/empty.rs:257:31-257:35)
  1: _57 = core::option::Option::<T>::None
    SourceInfo(regex-automata/src/util/empty.rs:257:31-257:35)
  2: _0 = core::result::Result::<core::option::Option<T>, util::search::MatchError>::Ok(move _57)
    SourceInfo(regex-automata/src/util/empty.rs:257:28-257:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:257:35-257:36)
      kind: drop(_57) -> [return: bb44, unwind: bb65]
  }
  preds [bb41]
  succs [bb44, bb65]

bb44
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/util/empty.rs:257:35-257:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
      kind: drop(_43) -> [return: bb56, unwind: bb68]
  }
  preds [bb43]
  succs [bb56, bb68]

bb45
  0: _17 = move _60
    SourceInfo(regex-automata/src/util/empty.rs:259:17-259:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:259:33-259:34)
      kind: drop(_60) -> [return: bb47, unwind: bb64]
  }
  preds [bb42]
  succs [bb47, bb64]

bb46
  0: _17 = move _60
    SourceInfo(regex-automata/src/util/empty.rs:259:17-259:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:259:33-259:34)
      kind: drop(_60) -> [return: bb64, unwind terminate(cleanup)]
  }
  preds [bb42]
  succs [bb64]

bb47
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/util/empty.rs:259:33-259:34)
  1: StorageLive(_61)
    SourceInfo(regex-automata/src/util/empty.rs:260:32-260:45)
  2: _61 = _59
    SourceInfo(regex-automata/src/util/empty.rs:260:32-260:45)
  3: _4 = move _61
    SourceInfo(regex-automata/src/util/empty.rs:260:17-260:45)
  4: StorageDead(_61)
    SourceInfo(regex-automata/src/util/empty.rs:260:44-260:45)
  5: _21 = const ()
    SourceInfo(regex-automata/src/util/empty.rs:258:49-261:14)
  6: StorageDead(_59)
    SourceInfo(regex-automata/src/util/empty.rs:261:13-261:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:261:13-261:14)
      kind: drop(_58) -> [return: bb48, unwind: bb65]
  }
  preds [bb45]
  succs [bb48, bb65]

bb48
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/util/empty.rs:261:13-261:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
      kind: drop(_43) -> [return: bb49, unwind: bb68]
  }
  preds [bb47]
  succs [bb49, bb68]

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
      kind: drop(_44) -> [return: bb50, unwind: bb70]
  }
  preds [bb48]
  succs [bb50, bb70]

bb50
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
  2: StorageDead(_43)
    SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
  3: StorageDead(_22)
    SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:243:5-263:6)
      kind: goto -> bb12
  }
  preds [bb49]
  succs [bb12]

bb51
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/util/empty.rs:264:18-264:19)
  1: _0 = core::result::Result::<core::option::Option<T>, util::search::MatchError>::Ok(move _65)
    SourceInfo(regex-automata/src/util/empty.rs:264:5-264:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:264:19-264:20)
      kind: drop(_65) -> [return: bb52, unwind: bb70]
  }
  preds [bb15]
  succs [bb52, bb70]

bb52
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/util/empty.rs:264:19-264:20)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/util/empty.rs:265:1-265:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:265:1-265:2)
      kind: drop(_17) -> [return: bb53, unwind: bb71]
  }
  preds [bb51]
  succs [bb53, bb71]

bb53
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/util/empty.rs:265:1-265:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:265:1-265:2)
      kind: drop(_5) -> [return: bb54, unwind: bb72]
  }
  preds [bb52]
  succs [bb54, bb72]

bb54
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:265:1-265:2)
      kind: drop(_3) -> [return: bb62, unwind: bb73]
  }
  preds [bb53]
  succs [bb62, bb73]

bb55
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/util/empty.rs:256:27-256:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb56
  }
  preds [bb38]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
      kind: drop(_44) -> [return: bb57, unwind: bb70]
  }
  preds [bb44, bb55]
  succs [bb57, bb70]

bb57
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
  2: StorageDead(_43)
    SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb58
  }
  preds [bb56]
  succs [bb58]

bb58
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/util/empty.rs:265:1-265:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:265:1-265:2)
      kind: drop(_17) -> [return: bb59, unwind: bb71]
  }
  preds [bb29, bb57]
  succs [bb59, bb71]

bb59
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/util/empty.rs:265:1-265:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb58]
  succs [bb60]

bb60
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:265:1-265:2)
      kind: drop(_5) -> [return: bb61, unwind: bb72]
  }
  preds [bb9, bb59]
  succs [bb61, bb72]

bb61
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:265:1-265:2)
      kind: drop(_3) -> [return: bb62, unwind: bb73]
  }
  preds [bb60]
  succs [bb62, bb73]

bb62
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:265:2-265:2)
      kind: return
  }
  preds [bb54, bb61]
  succs []

bb63
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:264:19-264:20)
      kind: drop(_65) -> [return: bb70, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb70]

bb64
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:261:13-261:14)
      kind: drop(_58) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb45, bb46]
  succs [bb65]

bb65
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
      kind: drop(_43) -> [return: bb68, unwind terminate(cleanup)]
  }
  preds [bb43, bb47, bb64]
  succs [bb68]

bb66
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:256:27-256:28)
      kind: drop(_53) -> [return: bb67, unwind terminate(cleanup)]
  }
  preds [bb37]
  succs [bb67]

bb67
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:256:27-256:28)
      kind: drop(_51) -> [return: bb68, unwind terminate(cleanup)]
  }
  preds [bb66]
  succs [bb68]

bb68
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:263:5-263:6)
      kind: drop(_44) -> [return: bb70, unwind terminate(cleanup)]
  }
  preds [bb36, bb38, bb44, bb48, bb65, bb67]
  succs [bb70]

bb69
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:256:27-256:28)
      kind: drop(_45) -> [return: bb70, unwind terminate(cleanup)]
  }
  preds [bb32]
  succs [bb70]

bb70
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:265:1-265:2)
      kind: drop(_17) -> [return: bb71, unwind terminate(cleanup)]
  }
  preds [bb10, bb12, bb13, bb17, bb18, bb19, bb20, bb22, bb23, bb27, bb28, bb31, bb49, bb51, bb56, bb63, bb68, bb69]
  succs [bb71]

bb71
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:265:1-265:2)
      kind: drop(_5) -> [return: bb72, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb3, bb5, bb8, bb52, bb58, bb70]
  succs [bb72]

bb72
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:265:1-265:2)
      kind: drop(_3) -> [return: bb73, unwind terminate(cleanup)]
  }
  preds [bb53, bb60, bb71]
  succs [bb73]

bb73
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/empty.rs:187:1-265:2)
      kind: resume
  }
  preds [bb54, bb61, bb72]
  succs []

