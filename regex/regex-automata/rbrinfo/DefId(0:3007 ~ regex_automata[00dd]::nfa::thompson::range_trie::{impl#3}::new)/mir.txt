bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:789:13-789:18)
  1: _3 = {closure@regex-automata/src/nfa/thompson/range_trie.rs:789:21: 789:44}
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:789:21-792:10)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:789:13-789:18)
  3: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:793:13-793:16)
  4: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:793:19-793:48)
  5: _5 = &_3
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:793:19-793:48)
  6: _4 = {closure@regex-automata/src/nfa/thompson/range_trie.rs:793:19: 793:22} { range: move _5 }
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:793:19-793:48)
  7: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:793:21-793:22)
  8: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:793:13-793:16)
  9: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:794:13-794:16)
  10: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:794:19-794:48)
  11: _7 = &_3
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:794:19-794:48)
  12: _6 = {closure@regex-automata/src/nfa/thompson/range_trie.rs:794:19: 794:22} { range: move _7 }
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:794:19-794:48)
  13: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:794:21-794:22)
  14: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:794:13-794:16)
  15: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:795:13-795:17)
  16: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:795:20-795:50)
  17: _9 = &_3
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:795:20-795:50)
  18: _8 = {closure@regex-automata/src/nfa/thompson/range_trie.rs:795:20: 795:23} { range: move _9 }
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:795:20-795:50)
  19: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:795:22-795:23)
  20: FakeRead(ForLet(None), _8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:795:13-795:17)
  21: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:28-798:60)
  22: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:29-798:36)
  23: _15 = (_1.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:29-798:36)
  24: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:38-798:43)
  25: _16 = (_1.1: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:38-798:43)
  26: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:45-798:52)
  27: _17 = (_2.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:45-798:52)
  28: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:54-798:59)
  29: _18 = (_2.1: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:54-798:59)
  30: _14 = (move _15, move _16, move _17, move _18)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:28-798:60)
  31: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:59-798:60)
  32: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:59-798:60)
  33: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:59-798:60)
  34: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:59-798:60)
  35: PlaceMention(_14)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:28-798:60)
  36: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:14-798:15)
  37: _10 = (_14.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:14-798:15)
  38: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:17-798:18)
  39: _11 = (_14.1: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:17-798:18)
  40: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:20-798:21)
  41: _12 = (_14.2: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:20-798:21)
  42: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:23-798:24)
  43: _13 = (_14.3: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:23-798:24)
  44: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:798:60-798:61)
  45: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:12-800:17)
  46: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:12-800:13)
  47: _20 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:12-800:13)
  48: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:16-800:17)
  49: _21 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:16-800:17)
  50: _19 = Lt(move _20, move _21)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:12-800:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:12-800:17)
      kind: switchInt(move _19) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:16-800:17)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:16-800:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:27-803:10)
      kind: goto -> bb4
  }
  preds [bb0]
  succs [bb4]

bb2
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:16-800:17)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:16-800:17)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:21-800:26)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:21-800:22)
  4: _23 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:21-800:22)
  5: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:25-800:26)
  6: _24 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:25-800:26)
  7: _22 = Lt(move _23, move _24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:21-800:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:21-800:26)
      kind: switchInt(move _22) -> [0: bb5, otherwise: bb3]
  }
  preds [bb0]
  succs [bb3, bb5]

bb3
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:25-800:26)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:25-800:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:27-803:10)
      kind: goto -> bb4
  }
  preds [bb2]
  succs [bb4]

bb4
  0: _0 = core::option::Option::<nfa::thompson::range_trie::Split>::None
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:802:13-802:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:9-838:10)
      kind: goto -> bb152
  }
  preds [bb1, bb3]
  succs [bb152]

bb5
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:25-800:26)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:25-800:26)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:19-803:25)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:19-803:20)
  4: _26 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:19-803:20)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:24-803:25)
  6: _27 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:24-803:25)
  7: _25 = Eq(move _26, move _27)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:19-803:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:19-803:25)
      kind: switchInt(move _25) -> [0: bb12, otherwise: bb6]
  }
  preds [bb2]
  succs [bb6, bb12]

bb6
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:24-803:25)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:24-803:25)
  2: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:29-803:35)
  3: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:29-803:30)
  4: _29 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:29-803:30)
  5: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:34-803:35)
  6: _30 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:34-803:35)
  7: _28 = Eq(move _29, move _30)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:29-803:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:29-803:35)
      kind: switchInt(move _28) -> [0: bb11, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb11]

bb7
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:34-803:35)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:34-803:35)
  2: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:18-805:44)
  3: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:32-805:43)
  4: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:32-805:36)
  5: _33 = &_8
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:32-805:36)
  6: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:32-805:43)
  7: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:37-805:42)
  8: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:37-805:38)
  9: _36 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:37-805:38)
  10: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:41-805:42)
  11: _37 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:41-805:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:37-805:42)
      kind: _35 = core::ops::RangeInclusive::<u8>::new(move _36, move _37) -> [return: bb8, unwind: bb153]
  }
  preds [bb6]
  succs [bb8, bb153]

bb8
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:41-805:42)
  1: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:41-805:42)
  2: _34 = (move _35,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:32-805:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:32-805:43)
      kind: _32 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:795:20: 795:23} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _33, move _34) -> [return: bb9, unwind: bb153]
  }
  preds [bb7]
  succs [bb9, bb153]

bb9
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:42-805:43)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:42-805:43)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:42-805:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:18-805:44)
      kind: _31 = nfa::thompson::range_trie::Split::parts1(move _32) -> [return: bb10, unwind: bb153]
  }
  preds [bb8]
  succs [bb10, bb153]

bb10
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:43-805:44)
  1: _0 = core::option::Option::<nfa::thompson::range_trie::Split>::Some(move _31)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:13-805:45)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:805:44-805:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:16-838:10)
      kind: goto -> bb151
  }
  preds [bb9]
  succs [bb151]

bb11
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:34-803:35)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:34-803:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb13
  }
  preds [bb6]
  succs [bb13]

bb12
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:24-803:25)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:24-803:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb13
  }
  preds [bb5]
  succs [bb13]

bb13
  0: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:19-806:25)
  1: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:19-806:20)
  2: _39 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:19-806:20)
  3: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:24-806:25)
  4: _40 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:24-806:25)
  5: _38 = Eq(move _39, move _40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:19-806:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:19-806:25)
      kind: switchInt(move _38) -> [0: bb23, otherwise: bb14]
  }
  preds [bb11, bb12]
  succs [bb14, bb23]

bb14
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:24-806:25)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:24-806:25)
  2: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:29-806:34)
  3: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:29-806:30)
  4: _42 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:29-806:30)
  5: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:33-806:34)
  6: _43 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:33-806:34)
  7: _41 = Lt(move _42, move _43)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:29-806:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:29-806:34)
      kind: switchInt(move _41) -> [0: bb22, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb22]

bb15
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:33-806:34)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:33-806:34)
  2: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:18-808:60)
  3: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:32-808:43)
  4: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:32-808:36)
  5: _46 = &_8
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:32-808:36)
  6: StorageLive(_47)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:32-808:43)
  7: StorageLive(_48)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:37-808:42)
  8: StorageLive(_49)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:37-808:38)
  9: _49 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:37-808:38)
  10: StorageLive(_50)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:41-808:42)
  11: _50 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:41-808:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:37-808:42)
      kind: _48 = core::ops::RangeInclusive::<u8>::new(move _49, move _50) -> [return: bb16, unwind: bb153]
  }
  preds [bb14]
  succs [bb16, bb153]

bb16
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:41-808:42)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:41-808:42)
  2: _47 = (move _48,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:32-808:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:32-808:43)
      kind: _45 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:795:20: 795:23} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _46, move _47) -> [return: bb17, unwind: bb153]
  }
  preds [bb15]
  succs [bb17, bb153]

bb17
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:42-808:43)
  1: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:42-808:43)
  2: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:42-808:43)
  3: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:45-808:59)
  4: StorageLive(_52)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:45-808:48)
  5: _52 = &_6
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:45-808:48)
  6: StorageLive(_53)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:45-808:59)
  7: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:49-808:58)
  8: StorageLive(_55)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:49-808:54)
  9: StorageLive(_56)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:49-808:50)
  10: _56 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:49-808:50)
  11: _57 = AddWithOverflow(_56, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:49-808:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:49-808:54)
      kind: assert(!move (_57.1: bool), "attempt to compute `{} + {}`, which would overflow", move _56, const 1_u8) -> [success: bb18, unwind: bb153]
  }
  preds [bb16]
  succs [bb18, bb153]

bb18
  0: _55 = move (_57.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:49-808:54)
  1: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:53-808:54)
  2: StorageLive(_58)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:57-808:58)
  3: _58 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:57-808:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:49-808:58)
      kind: _54 = core::ops::RangeInclusive::<u8>::new(move _55, move _58) -> [return: bb19, unwind: bb153]
  }
  preds [bb17]
  succs [bb19, bb153]

bb19
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:57-808:58)
  1: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:57-808:58)
  2: _53 = (move _54,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:45-808:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:45-808:59)
      kind: _51 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:794:19: 794:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _52, move _53) -> [return: bb20, unwind: bb153]
  }
  preds [bb18]
  succs [bb20, bb153]

bb20
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:58-808:59)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:58-808:59)
  2: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:58-808:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:18-808:60)
      kind: _44 = nfa::thompson::range_trie::Split::parts2(move _45, move _51) -> [return: bb21, unwind: bb153]
  }
  preds [bb19]
  succs [bb21, bb153]

bb21
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:59-808:60)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:59-808:60)
  2: _0 = core::option::Option::<nfa::thompson::range_trie::Split>::Some(move _44)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:13-808:61)
  3: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:808:60-808:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:16-838:10)
      kind: goto -> bb150
  }
  preds [bb20]
  succs [bb150]

bb22
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:33-806:34)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:33-806:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb24
  }
  preds [bb14]
  succs [bb24]

bb23
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:24-806:25)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:24-806:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb24
  }
  preds [bb13]
  succs [bb24]

bb24
  0: StorageLive(_59)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:19-809:25)
  1: StorageLive(_60)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:19-809:20)
  2: _60 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:19-809:20)
  3: StorageLive(_61)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:24-809:25)
  4: _61 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:24-809:25)
  5: _59 = Eq(move _60, move _61)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:19-809:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:19-809:25)
      kind: switchInt(move _59) -> [0: bb34, otherwise: bb25]
  }
  preds [bb22, bb23]
  succs [bb25, bb34]

bb25
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:24-809:25)
  1: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:24-809:25)
  2: StorageLive(_62)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:29-809:34)
  3: StorageLive(_63)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:29-809:30)
  4: _63 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:29-809:30)
  5: StorageLive(_64)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:33-809:34)
  6: _64 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:33-809:34)
  7: _62 = Gt(move _63, move _64)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:29-809:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:29-809:34)
      kind: switchInt(move _62) -> [0: bb33, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb33]

bb26
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:33-809:34)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:33-809:34)
  2: StorageLive(_65)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:18-811:60)
  3: StorageLive(_66)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:32-811:46)
  4: StorageLive(_67)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:32-811:35)
  5: _67 = &_6
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:32-811:35)
  6: StorageLive(_68)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:32-811:46)
  7: StorageLive(_69)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:36-811:45)
  8: StorageLive(_70)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:36-811:37)
  9: _70 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:36-811:37)
  10: StorageLive(_71)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:40-811:45)
  11: StorageLive(_72)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:40-811:41)
  12: _72 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:40-811:41)
  13: _73 = SubWithOverflow(_72, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:40-811:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:40-811:45)
      kind: assert(!move (_73.1: bool), "attempt to compute `{} - {}`, which would overflow", move _72, const 1_u8) -> [success: bb27, unwind: bb153]
  }
  preds [bb25]
  succs [bb27, bb153]

bb27
  0: _71 = move (_73.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:40-811:45)
  1: StorageDead(_72)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:44-811:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:36-811:45)
      kind: _69 = core::ops::RangeInclusive::<u8>::new(move _70, move _71) -> [return: bb28, unwind: bb153]
  }
  preds [bb26]
  succs [bb28, bb153]

bb28
  0: StorageDead(_71)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:44-811:45)
  1: StorageDead(_70)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:44-811:45)
  2: _68 = (move _69,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:32-811:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:32-811:46)
      kind: _66 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:794:19: 794:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _67, move _68) -> [return: bb29, unwind: bb153]
  }
  preds [bb27]
  succs [bb29, bb153]

bb29
  0: StorageDead(_69)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:45-811:46)
  1: StorageDead(_68)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:45-811:46)
  2: StorageDead(_67)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:45-811:46)
  3: StorageLive(_74)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:48-811:59)
  4: StorageLive(_75)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:48-811:52)
  5: _75 = &_8
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:48-811:52)
  6: StorageLive(_76)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:48-811:59)
  7: StorageLive(_77)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:53-811:58)
  8: StorageLive(_78)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:53-811:54)
  9: _78 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:53-811:54)
  10: StorageLive(_79)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:57-811:58)
  11: _79 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:57-811:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:53-811:58)
      kind: _77 = core::ops::RangeInclusive::<u8>::new(move _78, move _79) -> [return: bb30, unwind: bb153]
  }
  preds [bb28]
  succs [bb30, bb153]

bb30
  0: StorageDead(_79)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:57-811:58)
  1: StorageDead(_78)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:57-811:58)
  2: _76 = (move _77,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:48-811:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:48-811:59)
      kind: _74 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:795:20: 795:23} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _75, move _76) -> [return: bb31, unwind: bb153]
  }
  preds [bb29]
  succs [bb31, bb153]

bb31
  0: StorageDead(_77)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:58-811:59)
  1: StorageDead(_76)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:58-811:59)
  2: StorageDead(_75)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:58-811:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:18-811:60)
      kind: _65 = nfa::thompson::range_trie::Split::parts2(move _66, move _74) -> [return: bb32, unwind: bb153]
  }
  preds [bb30]
  succs [bb32, bb153]

bb32
  0: StorageDead(_74)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:59-811:60)
  1: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:59-811:60)
  2: _0 = core::option::Option::<nfa::thompson::range_trie::Split>::Some(move _65)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:13-811:61)
  3: StorageDead(_65)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:811:60-811:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:16-838:10)
      kind: goto -> bb149
  }
  preds [bb31]
  succs [bb149]

bb33
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:33-809:34)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:33-809:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb35
  }
  preds [bb25]
  succs [bb35]

bb34
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:24-809:25)
  1: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:24-809:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb35
  }
  preds [bb24]
  succs [bb35]

bb35
  0: StorageLive(_80)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:19-812:25)
  1: StorageLive(_81)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:19-812:20)
  2: _81 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:19-812:20)
  3: StorageLive(_82)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:24-812:25)
  4: _82 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:24-812:25)
  5: _80 = Eq(move _81, move _82)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:19-812:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:19-812:25)
      kind: switchInt(move _80) -> [0: bb45, otherwise: bb36]
  }
  preds [bb33, bb34]
  succs [bb36, bb45]

bb36
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:24-812:25)
  1: StorageDead(_81)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:24-812:25)
  2: StorageLive(_83)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:29-812:34)
  3: StorageLive(_84)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:29-812:30)
  4: _84 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:29-812:30)
  5: StorageLive(_85)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:33-812:34)
  6: _85 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:33-812:34)
  7: _83 = Lt(move _84, move _85)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:29-812:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:29-812:34)
      kind: switchInt(move _83) -> [0: bb44, otherwise: bb37]
  }
  preds [bb35]
  succs [bb37, bb44]

bb37
  0: StorageDead(_85)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:33-812:34)
  1: StorageDead(_84)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:33-812:34)
  2: StorageLive(_86)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:18-814:60)
  3: StorageLive(_87)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:32-814:43)
  4: StorageLive(_88)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:32-814:36)
  5: _88 = &_8
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:32-814:36)
  6: StorageLive(_89)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:32-814:43)
  7: StorageLive(_90)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:37-814:42)
  8: StorageLive(_91)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:37-814:38)
  9: _91 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:37-814:38)
  10: StorageLive(_92)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:41-814:42)
  11: _92 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:41-814:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:37-814:42)
      kind: _90 = core::ops::RangeInclusive::<u8>::new(move _91, move _92) -> [return: bb38, unwind: bb153]
  }
  preds [bb36]
  succs [bb38, bb153]

bb38
  0: StorageDead(_92)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:41-814:42)
  1: StorageDead(_91)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:41-814:42)
  2: _89 = (move _90,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:32-814:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:32-814:43)
      kind: _87 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:795:20: 795:23} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _88, move _89) -> [return: bb39, unwind: bb153]
  }
  preds [bb37]
  succs [bb39, bb153]

bb39
  0: StorageDead(_90)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:42-814:43)
  1: StorageDead(_89)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:42-814:43)
  2: StorageDead(_88)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:42-814:43)
  3: StorageLive(_93)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:45-814:59)
  4: StorageLive(_94)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:45-814:48)
  5: _94 = &_4
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:45-814:48)
  6: StorageLive(_95)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:45-814:59)
  7: StorageLive(_96)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:49-814:58)
  8: StorageLive(_97)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:49-814:54)
  9: StorageLive(_98)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:49-814:50)
  10: _98 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:49-814:50)
  11: _99 = AddWithOverflow(_98, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:49-814:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:49-814:54)
      kind: assert(!move (_99.1: bool), "attempt to compute `{} + {}`, which would overflow", move _98, const 1_u8) -> [success: bb40, unwind: bb153]
  }
  preds [bb38]
  succs [bb40, bb153]

bb40
  0: _97 = move (_99.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:49-814:54)
  1: StorageDead(_98)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:53-814:54)
  2: StorageLive(_100)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:57-814:58)
  3: _100 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:57-814:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:49-814:58)
      kind: _96 = core::ops::RangeInclusive::<u8>::new(move _97, move _100) -> [return: bb41, unwind: bb153]
  }
  preds [bb39]
  succs [bb41, bb153]

bb41
  0: StorageDead(_100)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:57-814:58)
  1: StorageDead(_97)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:57-814:58)
  2: _95 = (move _96,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:45-814:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:45-814:59)
      kind: _93 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:793:19: 793:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _94, move _95) -> [return: bb42, unwind: bb153]
  }
  preds [bb40]
  succs [bb42, bb153]

bb42
  0: StorageDead(_96)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:58-814:59)
  1: StorageDead(_95)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:58-814:59)
  2: StorageDead(_94)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:58-814:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:18-814:60)
      kind: _86 = nfa::thompson::range_trie::Split::parts2(move _87, move _93) -> [return: bb43, unwind: bb153]
  }
  preds [bb41]
  succs [bb43, bb153]

bb43
  0: StorageDead(_93)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:59-814:60)
  1: StorageDead(_87)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:59-814:60)
  2: _0 = core::option::Option::<nfa::thompson::range_trie::Split>::Some(move _86)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:13-814:61)
  3: StorageDead(_86)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:814:60-814:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:16-838:10)
      kind: goto -> bb148
  }
  preds [bb42]
  succs [bb148]

bb44
  0: StorageDead(_85)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:33-812:34)
  1: StorageDead(_84)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:33-812:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb36]
  succs [bb46]

bb45
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:24-812:25)
  1: StorageDead(_81)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:24-812:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb35]
  succs [bb46]

bb46
  0: StorageLive(_101)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:19-815:25)
  1: StorageLive(_102)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:19-815:20)
  2: _102 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:19-815:20)
  3: StorageLive(_103)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:24-815:25)
  4: _103 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:24-815:25)
  5: _101 = Eq(move _102, move _103)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:19-815:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:19-815:25)
      kind: switchInt(move _101) -> [0: bb56, otherwise: bb47]
  }
  preds [bb44, bb45]
  succs [bb47, bb56]

bb47
  0: StorageDead(_103)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:24-815:25)
  1: StorageDead(_102)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:24-815:25)
  2: StorageLive(_104)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:29-815:34)
  3: StorageLive(_105)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:29-815:30)
  4: _105 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:29-815:30)
  5: StorageLive(_106)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:33-815:34)
  6: _106 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:33-815:34)
  7: _104 = Gt(move _105, move _106)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:29-815:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:29-815:34)
      kind: switchInt(move _104) -> [0: bb55, otherwise: bb48]
  }
  preds [bb46]
  succs [bb48, bb55]

bb48
  0: StorageDead(_106)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:33-815:34)
  1: StorageDead(_105)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:33-815:34)
  2: StorageLive(_107)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:18-817:60)
  3: StorageLive(_108)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:32-817:46)
  4: StorageLive(_109)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:32-817:35)
  5: _109 = &_4
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:32-817:35)
  6: StorageLive(_110)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:32-817:46)
  7: StorageLive(_111)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:36-817:45)
  8: StorageLive(_112)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:36-817:37)
  9: _112 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:36-817:37)
  10: StorageLive(_113)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:40-817:45)
  11: StorageLive(_114)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:40-817:41)
  12: _114 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:40-817:41)
  13: _115 = SubWithOverflow(_114, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:40-817:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:40-817:45)
      kind: assert(!move (_115.1: bool), "attempt to compute `{} - {}`, which would overflow", move _114, const 1_u8) -> [success: bb49, unwind: bb153]
  }
  preds [bb47]
  succs [bb49, bb153]

bb49
  0: _113 = move (_115.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:40-817:45)
  1: StorageDead(_114)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:44-817:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:36-817:45)
      kind: _111 = core::ops::RangeInclusive::<u8>::new(move _112, move _113) -> [return: bb50, unwind: bb153]
  }
  preds [bb48]
  succs [bb50, bb153]

bb50
  0: StorageDead(_113)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:44-817:45)
  1: StorageDead(_112)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:44-817:45)
  2: _110 = (move _111,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:32-817:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:32-817:46)
      kind: _108 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:793:19: 793:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _109, move _110) -> [return: bb51, unwind: bb153]
  }
  preds [bb49]
  succs [bb51, bb153]

bb51
  0: StorageDead(_111)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:45-817:46)
  1: StorageDead(_110)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:45-817:46)
  2: StorageDead(_109)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:45-817:46)
  3: StorageLive(_116)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:48-817:59)
  4: StorageLive(_117)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:48-817:52)
  5: _117 = &_8
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:48-817:52)
  6: StorageLive(_118)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:48-817:59)
  7: StorageLive(_119)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:53-817:58)
  8: StorageLive(_120)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:53-817:54)
  9: _120 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:53-817:54)
  10: StorageLive(_121)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:57-817:58)
  11: _121 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:57-817:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:53-817:58)
      kind: _119 = core::ops::RangeInclusive::<u8>::new(move _120, move _121) -> [return: bb52, unwind: bb153]
  }
  preds [bb50]
  succs [bb52, bb153]

bb52
  0: StorageDead(_121)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:57-817:58)
  1: StorageDead(_120)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:57-817:58)
  2: _118 = (move _119,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:48-817:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:48-817:59)
      kind: _116 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:795:20: 795:23} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _117, move _118) -> [return: bb53, unwind: bb153]
  }
  preds [bb51]
  succs [bb53, bb153]

bb53
  0: StorageDead(_119)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:58-817:59)
  1: StorageDead(_118)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:58-817:59)
  2: StorageDead(_117)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:58-817:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:18-817:60)
      kind: _107 = nfa::thompson::range_trie::Split::parts2(move _108, move _116) -> [return: bb54, unwind: bb153]
  }
  preds [bb52]
  succs [bb54, bb153]

bb54
  0: StorageDead(_116)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:59-817:60)
  1: StorageDead(_108)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:59-817:60)
  2: _0 = core::option::Option::<nfa::thompson::range_trie::Split>::Some(move _107)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:13-817:61)
  3: StorageDead(_107)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:817:60-817:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:16-838:10)
      kind: goto -> bb147
  }
  preds [bb53]
  succs [bb147]

bb55
  0: StorageDead(_106)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:33-815:34)
  1: StorageDead(_105)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:33-815:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb57
  }
  preds [bb47]
  succs [bb57]

bb56
  0: StorageDead(_103)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:24-815:25)
  1: StorageDead(_102)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:24-815:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb57
  }
  preds [bb46]
  succs [bb57]

bb57
  0: StorageLive(_122)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:19-818:24)
  1: StorageLive(_123)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:19-818:20)
  2: _123 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:19-818:20)
  3: StorageLive(_124)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:23-818:24)
  4: _124 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:23-818:24)
  5: _122 = Gt(move _123, move _124)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:19-818:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:19-818:24)
      kind: switchInt(move _122) -> [0: bb70, otherwise: bb58]
  }
  preds [bb55, bb56]
  succs [bb58, bb70]

bb58
  0: StorageDead(_124)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:23-818:24)
  1: StorageDead(_123)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:23-818:24)
  2: StorageLive(_125)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:28-818:33)
  3: StorageLive(_126)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:28-818:29)
  4: _126 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:28-818:29)
  5: StorageLive(_127)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:32-818:33)
  6: _127 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:32-818:33)
  7: _125 = Lt(move _126, move _127)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:28-818:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:28-818:33)
      kind: switchInt(move _125) -> [0: bb69, otherwise: bb59]
  }
  preds [bb57]
  succs [bb59, bb69]

bb59
  0: StorageDead(_127)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:32-818:33)
  1: StorageDead(_126)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:32-818:33)
  2: StorageLive(_128)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:18-820:76)
  3: StorageLive(_129)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:32-820:46)
  4: StorageLive(_130)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:32-820:35)
  5: _130 = &_6
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:32-820:35)
  6: StorageLive(_131)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:32-820:46)
  7: StorageLive(_132)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:36-820:45)
  8: StorageLive(_133)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:36-820:37)
  9: _133 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:36-820:37)
  10: StorageLive(_134)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:40-820:45)
  11: StorageLive(_135)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:40-820:41)
  12: _135 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:40-820:41)
  13: _136 = SubWithOverflow(_135, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:40-820:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:40-820:45)
      kind: assert(!move (_136.1: bool), "attempt to compute `{} - {}`, which would overflow", move _135, const 1_u8) -> [success: bb60, unwind: bb153]
  }
  preds [bb58]
  succs [bb60, bb153]

bb60
  0: _134 = move (_136.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:40-820:45)
  1: StorageDead(_135)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:44-820:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:36-820:45)
      kind: _132 = core::ops::RangeInclusive::<u8>::new(move _133, move _134) -> [return: bb61, unwind: bb153]
  }
  preds [bb59]
  succs [bb61, bb153]

bb61
  0: StorageDead(_134)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:44-820:45)
  1: StorageDead(_133)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:44-820:45)
  2: _131 = (move _132,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:32-820:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:32-820:46)
      kind: _129 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:794:19: 794:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _130, move _131) -> [return: bb62, unwind: bb153]
  }
  preds [bb60]
  succs [bb62, bb153]

bb62
  0: StorageDead(_132)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:45-820:46)
  1: StorageDead(_131)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:45-820:46)
  2: StorageDead(_130)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:45-820:46)
  3: StorageLive(_137)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:48-820:59)
  4: StorageLive(_138)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:48-820:52)
  5: _138 = &_8
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:48-820:52)
  6: StorageLive(_139)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:48-820:59)
  7: StorageLive(_140)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:53-820:58)
  8: StorageLive(_141)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:53-820:54)
  9: _141 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:53-820:54)
  10: StorageLive(_142)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:57-820:58)
  11: _142 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:57-820:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:53-820:58)
      kind: _140 = core::ops::RangeInclusive::<u8>::new(move _141, move _142) -> [return: bb63, unwind: bb153]
  }
  preds [bb61]
  succs [bb63, bb153]

bb63
  0: StorageDead(_142)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:57-820:58)
  1: StorageDead(_141)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:57-820:58)
  2: _139 = (move _140,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:48-820:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:48-820:59)
      kind: _137 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:795:20: 795:23} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _138, move _139) -> [return: bb64, unwind: bb153]
  }
  preds [bb62]
  succs [bb64, bb153]

bb64
  0: StorageDead(_140)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:58-820:59)
  1: StorageDead(_139)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:58-820:59)
  2: StorageDead(_138)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:58-820:59)
  3: StorageLive(_143)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:61-820:75)
  4: StorageLive(_144)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:61-820:64)
  5: _144 = &_6
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:61-820:64)
  6: StorageLive(_145)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:61-820:75)
  7: StorageLive(_146)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:65-820:74)
  8: StorageLive(_147)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:65-820:70)
  9: StorageLive(_148)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:65-820:66)
  10: _148 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:65-820:66)
  11: _149 = AddWithOverflow(_148, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:65-820:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:65-820:70)
      kind: assert(!move (_149.1: bool), "attempt to compute `{} + {}`, which would overflow", move _148, const 1_u8) -> [success: bb65, unwind: bb153]
  }
  preds [bb63]
  succs [bb65, bb153]

bb65
  0: _147 = move (_149.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:65-820:70)
  1: StorageDead(_148)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:69-820:70)
  2: StorageLive(_150)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:73-820:74)
  3: _150 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:73-820:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:65-820:74)
      kind: _146 = core::ops::RangeInclusive::<u8>::new(move _147, move _150) -> [return: bb66, unwind: bb153]
  }
  preds [bb64]
  succs [bb66, bb153]

bb66
  0: StorageDead(_150)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:73-820:74)
  1: StorageDead(_147)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:73-820:74)
  2: _145 = (move _146,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:61-820:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:61-820:75)
      kind: _143 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:794:19: 794:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _144, move _145) -> [return: bb67, unwind: bb153]
  }
  preds [bb65]
  succs [bb67, bb153]

bb67
  0: StorageDead(_146)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:74-820:75)
  1: StorageDead(_145)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:74-820:75)
  2: StorageDead(_144)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:74-820:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:18-820:76)
      kind: _128 = nfa::thompson::range_trie::Split::parts3(move _129, move _137, move _143) -> [return: bb68, unwind: bb153]
  }
  preds [bb66]
  succs [bb68, bb153]

bb68
  0: StorageDead(_143)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:75-820:76)
  1: StorageDead(_137)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:75-820:76)
  2: StorageDead(_129)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:75-820:76)
  3: _0 = core::option::Option::<nfa::thompson::range_trie::Split>::Some(move _128)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:13-820:77)
  4: StorageDead(_128)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:820:76-820:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:16-838:10)
      kind: goto -> bb146
  }
  preds [bb67]
  succs [bb146]

bb69
  0: StorageDead(_127)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:32-818:33)
  1: StorageDead(_126)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:32-818:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb71
  }
  preds [bb58]
  succs [bb71]

bb70
  0: StorageDead(_124)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:23-818:24)
  1: StorageDead(_123)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:23-818:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb71
  }
  preds [bb57]
  succs [bb71]

bb71
  0: StorageLive(_151)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:19-821:24)
  1: StorageLive(_152)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:19-821:20)
  2: _152 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:19-821:20)
  3: StorageLive(_153)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:23-821:24)
  4: _153 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:23-821:24)
  5: _151 = Gt(move _152, move _153)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:19-821:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:19-821:24)
      kind: switchInt(move _151) -> [0: bb84, otherwise: bb72]
  }
  preds [bb69, bb70]
  succs [bb72, bb84]

bb72
  0: StorageDead(_153)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:23-821:24)
  1: StorageDead(_152)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:23-821:24)
  2: StorageLive(_154)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:28-821:33)
  3: StorageLive(_155)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:28-821:29)
  4: _155 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:28-821:29)
  5: StorageLive(_156)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:32-821:33)
  6: _156 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:32-821:33)
  7: _154 = Lt(move _155, move _156)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:28-821:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:28-821:33)
      kind: switchInt(move _154) -> [0: bb83, otherwise: bb73]
  }
  preds [bb71]
  succs [bb73, bb83]

bb73
  0: StorageDead(_156)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:32-821:33)
  1: StorageDead(_155)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:32-821:33)
  2: StorageLive(_157)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:18-823:76)
  3: StorageLive(_158)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:32-823:46)
  4: StorageLive(_159)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:32-823:35)
  5: _159 = &_4
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:32-823:35)
  6: StorageLive(_160)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:32-823:46)
  7: StorageLive(_161)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:36-823:45)
  8: StorageLive(_162)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:36-823:37)
  9: _162 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:36-823:37)
  10: StorageLive(_163)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:40-823:45)
  11: StorageLive(_164)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:40-823:41)
  12: _164 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:40-823:41)
  13: _165 = SubWithOverflow(_164, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:40-823:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:40-823:45)
      kind: assert(!move (_165.1: bool), "attempt to compute `{} - {}`, which would overflow", move _164, const 1_u8) -> [success: bb74, unwind: bb153]
  }
  preds [bb72]
  succs [bb74, bb153]

bb74
  0: _163 = move (_165.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:40-823:45)
  1: StorageDead(_164)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:44-823:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:36-823:45)
      kind: _161 = core::ops::RangeInclusive::<u8>::new(move _162, move _163) -> [return: bb75, unwind: bb153]
  }
  preds [bb73]
  succs [bb75, bb153]

bb75
  0: StorageDead(_163)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:44-823:45)
  1: StorageDead(_162)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:44-823:45)
  2: _160 = (move _161,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:32-823:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:32-823:46)
      kind: _158 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:793:19: 793:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _159, move _160) -> [return: bb76, unwind: bb153]
  }
  preds [bb74]
  succs [bb76, bb153]

bb76
  0: StorageDead(_161)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:45-823:46)
  1: StorageDead(_160)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:45-823:46)
  2: StorageDead(_159)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:45-823:46)
  3: StorageLive(_166)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:48-823:59)
  4: StorageLive(_167)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:48-823:52)
  5: _167 = &_8
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:48-823:52)
  6: StorageLive(_168)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:48-823:59)
  7: StorageLive(_169)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:53-823:58)
  8: StorageLive(_170)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:53-823:54)
  9: _170 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:53-823:54)
  10: StorageLive(_171)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:57-823:58)
  11: _171 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:57-823:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:53-823:58)
      kind: _169 = core::ops::RangeInclusive::<u8>::new(move _170, move _171) -> [return: bb77, unwind: bb153]
  }
  preds [bb75]
  succs [bb77, bb153]

bb77
  0: StorageDead(_171)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:57-823:58)
  1: StorageDead(_170)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:57-823:58)
  2: _168 = (move _169,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:48-823:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:48-823:59)
      kind: _166 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:795:20: 795:23} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _167, move _168) -> [return: bb78, unwind: bb153]
  }
  preds [bb76]
  succs [bb78, bb153]

bb78
  0: StorageDead(_169)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:58-823:59)
  1: StorageDead(_168)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:58-823:59)
  2: StorageDead(_167)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:58-823:59)
  3: StorageLive(_172)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:61-823:75)
  4: StorageLive(_173)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:61-823:64)
  5: _173 = &_4
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:61-823:64)
  6: StorageLive(_174)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:61-823:75)
  7: StorageLive(_175)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:65-823:74)
  8: StorageLive(_176)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:65-823:70)
  9: StorageLive(_177)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:65-823:66)
  10: _177 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:65-823:66)
  11: _178 = AddWithOverflow(_177, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:65-823:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:65-823:70)
      kind: assert(!move (_178.1: bool), "attempt to compute `{} + {}`, which would overflow", move _177, const 1_u8) -> [success: bb79, unwind: bb153]
  }
  preds [bb77]
  succs [bb79, bb153]

bb79
  0: _176 = move (_178.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:65-823:70)
  1: StorageDead(_177)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:69-823:70)
  2: StorageLive(_179)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:73-823:74)
  3: _179 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:73-823:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:65-823:74)
      kind: _175 = core::ops::RangeInclusive::<u8>::new(move _176, move _179) -> [return: bb80, unwind: bb153]
  }
  preds [bb78]
  succs [bb80, bb153]

bb80
  0: StorageDead(_179)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:73-823:74)
  1: StorageDead(_176)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:73-823:74)
  2: _174 = (move _175,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:61-823:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:61-823:75)
      kind: _172 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:793:19: 793:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _173, move _174) -> [return: bb81, unwind: bb153]
  }
  preds [bb79]
  succs [bb81, bb153]

bb81
  0: StorageDead(_175)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:74-823:75)
  1: StorageDead(_174)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:74-823:75)
  2: StorageDead(_173)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:74-823:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:18-823:76)
      kind: _157 = nfa::thompson::range_trie::Split::parts3(move _158, move _166, move _172) -> [return: bb82, unwind: bb153]
  }
  preds [bb80]
  succs [bb82, bb153]

bb82
  0: StorageDead(_172)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:75-823:76)
  1: StorageDead(_166)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:75-823:76)
  2: StorageDead(_158)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:75-823:76)
  3: _0 = core::option::Option::<nfa::thompson::range_trie::Split>::Some(move _157)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:13-823:77)
  4: StorageDead(_157)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:823:76-823:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:16-838:10)
      kind: goto -> bb145
  }
  preds [bb81]
  succs [bb145]

bb83
  0: StorageDead(_156)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:32-821:33)
  1: StorageDead(_155)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:32-821:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb85
  }
  preds [bb72]
  succs [bb85]

bb84
  0: StorageDead(_153)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:23-821:24)
  1: StorageDead(_152)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:23-821:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb85
  }
  preds [bb71]
  succs [bb85]

bb85
  0: StorageLive(_180)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:19-824:25)
  1: StorageLive(_181)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:19-824:20)
  2: _181 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:19-824:20)
  3: StorageLive(_182)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:24-824:25)
  4: _182 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:24-824:25)
  5: _180 = Eq(move _181, move _182)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:19-824:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:19-824:25)
      kind: switchInt(move _180) -> [0: bb98, otherwise: bb86]
  }
  preds [bb83, bb84]
  succs [bb86, bb98]

bb86
  0: StorageDead(_182)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:24-824:25)
  1: StorageDead(_181)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:24-824:25)
  2: StorageLive(_183)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:29-824:34)
  3: StorageLive(_184)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:29-824:30)
  4: _184 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:29-824:30)
  5: StorageLive(_185)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:33-824:34)
  6: _185 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:33-824:34)
  7: _183 = Lt(move _184, move _185)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:29-824:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:29-824:34)
      kind: switchInt(move _183) -> [0: bb97, otherwise: bb87]
  }
  preds [bb85]
  succs [bb87, bb97]

bb87
  0: StorageDead(_185)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:33-824:34)
  1: StorageDead(_184)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:33-824:34)
  2: StorageLive(_186)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:18-826:76)
  3: StorageLive(_187)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:32-826:46)
  4: StorageLive(_188)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:32-826:35)
  5: _188 = &_4
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:32-826:35)
  6: StorageLive(_189)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:32-826:46)
  7: StorageLive(_190)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:36-826:45)
  8: StorageLive(_191)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:36-826:37)
  9: _191 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:36-826:37)
  10: StorageLive(_192)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:40-826:45)
  11: StorageLive(_193)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:40-826:41)
  12: _193 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:40-826:41)
  13: _194 = SubWithOverflow(_193, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:40-826:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:40-826:45)
      kind: assert(!move (_194.1: bool), "attempt to compute `{} - {}`, which would overflow", move _193, const 1_u8) -> [success: bb88, unwind: bb153]
  }
  preds [bb86]
  succs [bb88, bb153]

bb88
  0: _192 = move (_194.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:40-826:45)
  1: StorageDead(_193)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:44-826:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:36-826:45)
      kind: _190 = core::ops::RangeInclusive::<u8>::new(move _191, move _192) -> [return: bb89, unwind: bb153]
  }
  preds [bb87]
  succs [bb89, bb153]

bb89
  0: StorageDead(_192)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:44-826:45)
  1: StorageDead(_191)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:44-826:45)
  2: _189 = (move _190,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:32-826:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:32-826:46)
      kind: _187 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:793:19: 793:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _188, move _189) -> [return: bb90, unwind: bb153]
  }
  preds [bb88]
  succs [bb90, bb153]

bb90
  0: StorageDead(_190)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:45-826:46)
  1: StorageDead(_189)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:45-826:46)
  2: StorageDead(_188)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:45-826:46)
  3: StorageLive(_195)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:48-826:59)
  4: StorageLive(_196)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:48-826:52)
  5: _196 = &_8
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:48-826:52)
  6: StorageLive(_197)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:48-826:59)
  7: StorageLive(_198)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:53-826:58)
  8: StorageLive(_199)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:53-826:54)
  9: _199 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:53-826:54)
  10: StorageLive(_200)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:57-826:58)
  11: _200 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:57-826:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:53-826:58)
      kind: _198 = core::ops::RangeInclusive::<u8>::new(move _199, move _200) -> [return: bb91, unwind: bb153]
  }
  preds [bb89]
  succs [bb91, bb153]

bb91
  0: StorageDead(_200)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:57-826:58)
  1: StorageDead(_199)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:57-826:58)
  2: _197 = (move _198,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:48-826:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:48-826:59)
      kind: _195 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:795:20: 795:23} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _196, move _197) -> [return: bb92, unwind: bb153]
  }
  preds [bb90]
  succs [bb92, bb153]

bb92
  0: StorageDead(_198)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:58-826:59)
  1: StorageDead(_197)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:58-826:59)
  2: StorageDead(_196)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:58-826:59)
  3: StorageLive(_201)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:61-826:75)
  4: StorageLive(_202)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:61-826:64)
  5: _202 = &_6
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:61-826:64)
  6: StorageLive(_203)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:61-826:75)
  7: StorageLive(_204)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:65-826:74)
  8: StorageLive(_205)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:65-826:70)
  9: StorageLive(_206)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:65-826:66)
  10: _206 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:65-826:66)
  11: _207 = AddWithOverflow(_206, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:65-826:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:65-826:70)
      kind: assert(!move (_207.1: bool), "attempt to compute `{} + {}`, which would overflow", move _206, const 1_u8) -> [success: bb93, unwind: bb153]
  }
  preds [bb91]
  succs [bb93, bb153]

bb93
  0: _205 = move (_207.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:65-826:70)
  1: StorageDead(_206)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:69-826:70)
  2: StorageLive(_208)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:73-826:74)
  3: _208 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:73-826:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:65-826:74)
      kind: _204 = core::ops::RangeInclusive::<u8>::new(move _205, move _208) -> [return: bb94, unwind: bb153]
  }
  preds [bb92]
  succs [bb94, bb153]

bb94
  0: StorageDead(_208)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:73-826:74)
  1: StorageDead(_205)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:73-826:74)
  2: _203 = (move _204,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:61-826:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:61-826:75)
      kind: _201 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:794:19: 794:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _202, move _203) -> [return: bb95, unwind: bb153]
  }
  preds [bb93]
  succs [bb95, bb153]

bb95
  0: StorageDead(_204)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:74-826:75)
  1: StorageDead(_203)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:74-826:75)
  2: StorageDead(_202)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:74-826:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:18-826:76)
      kind: _186 = nfa::thompson::range_trie::Split::parts3(move _187, move _195, move _201) -> [return: bb96, unwind: bb153]
  }
  preds [bb94]
  succs [bb96, bb153]

bb96
  0: StorageDead(_201)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:75-826:76)
  1: StorageDead(_195)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:75-826:76)
  2: StorageDead(_187)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:75-826:76)
  3: _0 = core::option::Option::<nfa::thompson::range_trie::Split>::Some(move _186)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:13-826:77)
  4: StorageDead(_186)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:826:76-826:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:16-838:10)
      kind: goto -> bb144
  }
  preds [bb95]
  succs [bb144]

bb97
  0: StorageDead(_185)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:33-824:34)
  1: StorageDead(_184)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:33-824:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb99
  }
  preds [bb86]
  succs [bb99]

bb98
  0: StorageDead(_182)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:24-824:25)
  1: StorageDead(_181)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:24-824:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb99
  }
  preds [bb85]
  succs [bb99]

bb99
  0: StorageLive(_209)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:19-827:25)
  1: StorageLive(_210)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:19-827:20)
  2: _210 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:19-827:20)
  3: StorageLive(_211)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:24-827:25)
  4: _211 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:24-827:25)
  5: _209 = Eq(move _210, move _211)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:19-827:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:19-827:25)
      kind: switchInt(move _209) -> [0: bb112, otherwise: bb100]
  }
  preds [bb97, bb98]
  succs [bb100, bb112]

bb100
  0: StorageDead(_211)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:24-827:25)
  1: StorageDead(_210)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:24-827:25)
  2: StorageLive(_212)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:29-827:34)
  3: StorageLive(_213)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:29-827:30)
  4: _213 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:29-827:30)
  5: StorageLive(_214)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:33-827:34)
  6: _214 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:33-827:34)
  7: _212 = Lt(move _213, move _214)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:29-827:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:29-827:34)
      kind: switchInt(move _212) -> [0: bb111, otherwise: bb101]
  }
  preds [bb99]
  succs [bb101, bb111]

bb101
  0: StorageDead(_214)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:33-827:34)
  1: StorageDead(_213)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:33-827:34)
  2: StorageLive(_215)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:18-829:76)
  3: StorageLive(_216)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:32-829:46)
  4: StorageLive(_217)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:32-829:35)
  5: _217 = &_6
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:32-829:35)
  6: StorageLive(_218)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:32-829:46)
  7: StorageLive(_219)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:36-829:45)
  8: StorageLive(_220)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:36-829:37)
  9: _220 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:36-829:37)
  10: StorageLive(_221)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:40-829:45)
  11: StorageLive(_222)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:40-829:41)
  12: _222 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:40-829:41)
  13: _223 = SubWithOverflow(_222, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:40-829:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:40-829:45)
      kind: assert(!move (_223.1: bool), "attempt to compute `{} - {}`, which would overflow", move _222, const 1_u8) -> [success: bb102, unwind: bb153]
  }
  preds [bb100]
  succs [bb102, bb153]

bb102
  0: _221 = move (_223.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:40-829:45)
  1: StorageDead(_222)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:44-829:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:36-829:45)
      kind: _219 = core::ops::RangeInclusive::<u8>::new(move _220, move _221) -> [return: bb103, unwind: bb153]
  }
  preds [bb101]
  succs [bb103, bb153]

bb103
  0: StorageDead(_221)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:44-829:45)
  1: StorageDead(_220)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:44-829:45)
  2: _218 = (move _219,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:32-829:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:32-829:46)
      kind: _216 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:794:19: 794:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _217, move _218) -> [return: bb104, unwind: bb153]
  }
  preds [bb102]
  succs [bb104, bb153]

bb104
  0: StorageDead(_219)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:45-829:46)
  1: StorageDead(_218)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:45-829:46)
  2: StorageDead(_217)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:45-829:46)
  3: StorageLive(_224)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:48-829:59)
  4: StorageLive(_225)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:48-829:52)
  5: _225 = &_8
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:48-829:52)
  6: StorageLive(_226)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:48-829:59)
  7: StorageLive(_227)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:53-829:58)
  8: StorageLive(_228)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:53-829:54)
  9: _228 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:53-829:54)
  10: StorageLive(_229)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:57-829:58)
  11: _229 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:57-829:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:53-829:58)
      kind: _227 = core::ops::RangeInclusive::<u8>::new(move _228, move _229) -> [return: bb105, unwind: bb153]
  }
  preds [bb103]
  succs [bb105, bb153]

bb105
  0: StorageDead(_229)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:57-829:58)
  1: StorageDead(_228)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:57-829:58)
  2: _226 = (move _227,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:48-829:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:48-829:59)
      kind: _224 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:795:20: 795:23} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _225, move _226) -> [return: bb106, unwind: bb153]
  }
  preds [bb104]
  succs [bb106, bb153]

bb106
  0: StorageDead(_227)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:58-829:59)
  1: StorageDead(_226)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:58-829:59)
  2: StorageDead(_225)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:58-829:59)
  3: StorageLive(_230)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:61-829:75)
  4: StorageLive(_231)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:61-829:64)
  5: _231 = &_4
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:61-829:64)
  6: StorageLive(_232)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:61-829:75)
  7: StorageLive(_233)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:65-829:74)
  8: StorageLive(_234)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:65-829:70)
  9: StorageLive(_235)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:65-829:66)
  10: _235 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:65-829:66)
  11: _236 = AddWithOverflow(_235, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:65-829:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:65-829:70)
      kind: assert(!move (_236.1: bool), "attempt to compute `{} + {}`, which would overflow", move _235, const 1_u8) -> [success: bb107, unwind: bb153]
  }
  preds [bb105]
  succs [bb107, bb153]

bb107
  0: _234 = move (_236.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:65-829:70)
  1: StorageDead(_235)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:69-829:70)
  2: StorageLive(_237)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:73-829:74)
  3: _237 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:73-829:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:65-829:74)
      kind: _233 = core::ops::RangeInclusive::<u8>::new(move _234, move _237) -> [return: bb108, unwind: bb153]
  }
  preds [bb106]
  succs [bb108, bb153]

bb108
  0: StorageDead(_237)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:73-829:74)
  1: StorageDead(_234)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:73-829:74)
  2: _232 = (move _233,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:61-829:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:61-829:75)
      kind: _230 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:793:19: 793:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _231, move _232) -> [return: bb109, unwind: bb153]
  }
  preds [bb107]
  succs [bb109, bb153]

bb109
  0: StorageDead(_233)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:74-829:75)
  1: StorageDead(_232)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:74-829:75)
  2: StorageDead(_231)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:74-829:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:18-829:76)
      kind: _215 = nfa::thompson::range_trie::Split::parts3(move _216, move _224, move _230) -> [return: bb110, unwind: bb153]
  }
  preds [bb108]
  succs [bb110, bb153]

bb110
  0: StorageDead(_230)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:75-829:76)
  1: StorageDead(_224)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:75-829:76)
  2: StorageDead(_216)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:75-829:76)
  3: _0 = core::option::Option::<nfa::thompson::range_trie::Split>::Some(move _215)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:13-829:77)
  4: StorageDead(_215)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:829:76-829:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:16-838:10)
      kind: goto -> bb143
  }
  preds [bb109]
  succs [bb143]

bb111
  0: StorageDead(_214)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:33-827:34)
  1: StorageDead(_213)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:33-827:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb113
  }
  preds [bb100]
  succs [bb113]

bb112
  0: StorageDead(_211)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:24-827:25)
  1: StorageDead(_210)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:24-827:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb113
  }
  preds [bb99]
  succs [bb113]

bb113
  0: StorageLive(_238)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:19-830:24)
  1: StorageLive(_239)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:19-830:20)
  2: _239 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:19-830:20)
  3: StorageLive(_240)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:23-830:24)
  4: _240 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:23-830:24)
  5: _238 = Gt(move _239, move _240)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:19-830:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:19-830:24)
      kind: switchInt(move _238) -> [0: bb126, otherwise: bb114]
  }
  preds [bb111, bb112]
  succs [bb114, bb126]

bb114
  0: StorageDead(_240)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:23-830:24)
  1: StorageDead(_239)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:23-830:24)
  2: StorageLive(_241)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:28-830:33)
  3: StorageLive(_242)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:28-830:29)
  4: _242 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:28-830:29)
  5: StorageLive(_243)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:32-830:33)
  6: _243 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:32-830:33)
  7: _241 = Lt(move _242, move _243)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:28-830:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:28-830:33)
      kind: switchInt(move _241) -> [0: bb125, otherwise: bb115]
  }
  preds [bb113]
  succs [bb115, bb125]

bb115
  0: StorageDead(_243)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:32-830:33)
  1: StorageDead(_242)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:32-830:33)
  2: StorageLive(_244)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:18-832:76)
  3: StorageLive(_245)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:32-832:46)
  4: StorageLive(_246)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:32-832:35)
  5: _246 = &_4
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:32-832:35)
  6: StorageLive(_247)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:32-832:46)
  7: StorageLive(_248)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:36-832:45)
  8: StorageLive(_249)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:36-832:37)
  9: _249 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:36-832:37)
  10: StorageLive(_250)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:40-832:45)
  11: StorageLive(_251)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:40-832:41)
  12: _251 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:40-832:41)
  13: _252 = SubWithOverflow(_251, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:40-832:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:40-832:45)
      kind: assert(!move (_252.1: bool), "attempt to compute `{} - {}`, which would overflow", move _251, const 1_u8) -> [success: bb116, unwind: bb153]
  }
  preds [bb114]
  succs [bb116, bb153]

bb116
  0: _250 = move (_252.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:40-832:45)
  1: StorageDead(_251)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:44-832:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:36-832:45)
      kind: _248 = core::ops::RangeInclusive::<u8>::new(move _249, move _250) -> [return: bb117, unwind: bb153]
  }
  preds [bb115]
  succs [bb117, bb153]

bb117
  0: StorageDead(_250)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:44-832:45)
  1: StorageDead(_249)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:44-832:45)
  2: _247 = (move _248,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:32-832:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:32-832:46)
      kind: _245 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:793:19: 793:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _246, move _247) -> [return: bb118, unwind: bb153]
  }
  preds [bb116]
  succs [bb118, bb153]

bb118
  0: StorageDead(_248)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:45-832:46)
  1: StorageDead(_247)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:45-832:46)
  2: StorageDead(_246)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:45-832:46)
  3: StorageLive(_253)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:48-832:59)
  4: StorageLive(_254)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:48-832:52)
  5: _254 = &_8
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:48-832:52)
  6: StorageLive(_255)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:48-832:59)
  7: StorageLive(_256)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:53-832:58)
  8: StorageLive(_257)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:53-832:54)
  9: _257 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:53-832:54)
  10: StorageLive(_258)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:57-832:58)
  11: _258 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:57-832:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:53-832:58)
      kind: _256 = core::ops::RangeInclusive::<u8>::new(move _257, move _258) -> [return: bb119, unwind: bb153]
  }
  preds [bb117]
  succs [bb119, bb153]

bb119
  0: StorageDead(_258)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:57-832:58)
  1: StorageDead(_257)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:57-832:58)
  2: _255 = (move _256,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:48-832:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:48-832:59)
      kind: _253 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:795:20: 795:23} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _254, move _255) -> [return: bb120, unwind: bb153]
  }
  preds [bb118]
  succs [bb120, bb153]

bb120
  0: StorageDead(_256)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:58-832:59)
  1: StorageDead(_255)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:58-832:59)
  2: StorageDead(_254)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:58-832:59)
  3: StorageLive(_259)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:61-832:75)
  4: StorageLive(_260)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:61-832:64)
  5: _260 = &_6
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:61-832:64)
  6: StorageLive(_261)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:61-832:75)
  7: StorageLive(_262)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:65-832:74)
  8: StorageLive(_263)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:65-832:70)
  9: StorageLive(_264)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:65-832:66)
  10: _264 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:65-832:66)
  11: _265 = AddWithOverflow(_264, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:65-832:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:65-832:70)
      kind: assert(!move (_265.1: bool), "attempt to compute `{} + {}`, which would overflow", move _264, const 1_u8) -> [success: bb121, unwind: bb153]
  }
  preds [bb119]
  succs [bb121, bb153]

bb121
  0: _263 = move (_265.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:65-832:70)
  1: StorageDead(_264)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:69-832:70)
  2: StorageLive(_266)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:73-832:74)
  3: _266 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:73-832:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:65-832:74)
      kind: _262 = core::ops::RangeInclusive::<u8>::new(move _263, move _266) -> [return: bb122, unwind: bb153]
  }
  preds [bb120]
  succs [bb122, bb153]

bb122
  0: StorageDead(_266)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:73-832:74)
  1: StorageDead(_263)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:73-832:74)
  2: _261 = (move _262,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:61-832:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:61-832:75)
      kind: _259 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:794:19: 794:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _260, move _261) -> [return: bb123, unwind: bb153]
  }
  preds [bb121]
  succs [bb123, bb153]

bb123
  0: StorageDead(_262)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:74-832:75)
  1: StorageDead(_261)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:74-832:75)
  2: StorageDead(_260)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:74-832:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:18-832:76)
      kind: _244 = nfa::thompson::range_trie::Split::parts3(move _245, move _253, move _259) -> [return: bb124, unwind: bb153]
  }
  preds [bb122]
  succs [bb124, bb153]

bb124
  0: StorageDead(_259)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:75-832:76)
  1: StorageDead(_253)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:75-832:76)
  2: StorageDead(_245)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:75-832:76)
  3: _0 = core::option::Option::<nfa::thompson::range_trie::Split>::Some(move _244)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:13-832:77)
  4: StorageDead(_244)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:832:76-832:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:16-838:10)
      kind: goto -> bb142
  }
  preds [bb123]
  succs [bb142]

bb125
  0: StorageDead(_243)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:32-830:33)
  1: StorageDead(_242)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:32-830:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb127
  }
  preds [bb114]
  succs [bb127]

bb126
  0: StorageDead(_240)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:23-830:24)
  1: StorageDead(_239)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:23-830:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb127
  }
  preds [bb113]
  succs [bb127]

bb127
  0: StorageLive(_267)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:19-833:24)
  1: StorageLive(_268)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:19-833:20)
  2: _268 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:19-833:20)
  3: StorageLive(_269)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:23-833:24)
  4: _269 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:23-833:24)
  5: _267 = Gt(move _268, move _269)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:19-833:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:19-833:24)
      kind: switchInt(move _267) -> [0: bb140, otherwise: bb128]
  }
  preds [bb125, bb126]
  succs [bb128, bb140]

bb128
  0: StorageDead(_269)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:23-833:24)
  1: StorageDead(_268)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:23-833:24)
  2: StorageLive(_270)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:28-833:33)
  3: StorageLive(_271)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:28-833:29)
  4: _271 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:28-833:29)
  5: StorageLive(_272)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:32-833:33)
  6: _272 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:32-833:33)
  7: _270 = Lt(move _271, move _272)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:28-833:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:28-833:33)
      kind: switchInt(move _270) -> [0: bb139, otherwise: bb129]
  }
  preds [bb127]
  succs [bb129, bb139]

bb129
  0: StorageDead(_272)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:32-833:33)
  1: StorageDead(_271)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:32-833:33)
  2: StorageLive(_273)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:18-835:76)
  3: StorageLive(_274)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:32-835:46)
  4: StorageLive(_275)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:32-835:35)
  5: _275 = &_6
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:32-835:35)
  6: StorageLive(_276)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:32-835:46)
  7: StorageLive(_277)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:36-835:45)
  8: StorageLive(_278)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:36-835:37)
  9: _278 = _12
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:36-835:37)
  10: StorageLive(_279)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:40-835:45)
  11: StorageLive(_280)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:40-835:41)
  12: _280 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:40-835:41)
  13: _281 = SubWithOverflow(_280, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:40-835:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:40-835:45)
      kind: assert(!move (_281.1: bool), "attempt to compute `{} - {}`, which would overflow", move _280, const 1_u8) -> [success: bb130, unwind: bb153]
  }
  preds [bb128]
  succs [bb130, bb153]

bb130
  0: _279 = move (_281.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:40-835:45)
  1: StorageDead(_280)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:44-835:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:36-835:45)
      kind: _277 = core::ops::RangeInclusive::<u8>::new(move _278, move _279) -> [return: bb131, unwind: bb153]
  }
  preds [bb129]
  succs [bb131, bb153]

bb131
  0: StorageDead(_279)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:44-835:45)
  1: StorageDead(_278)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:44-835:45)
  2: _276 = (move _277,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:32-835:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:32-835:46)
      kind: _274 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:794:19: 794:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _275, move _276) -> [return: bb132, unwind: bb153]
  }
  preds [bb130]
  succs [bb132, bb153]

bb132
  0: StorageDead(_277)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:45-835:46)
  1: StorageDead(_276)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:45-835:46)
  2: StorageDead(_275)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:45-835:46)
  3: StorageLive(_282)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:48-835:59)
  4: StorageLive(_283)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:48-835:52)
  5: _283 = &_8
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:48-835:52)
  6: StorageLive(_284)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:48-835:59)
  7: StorageLive(_285)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:53-835:58)
  8: StorageLive(_286)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:53-835:54)
  9: _286 = _10
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:53-835:54)
  10: StorageLive(_287)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:57-835:58)
  11: _287 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:57-835:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:53-835:58)
      kind: _285 = core::ops::RangeInclusive::<u8>::new(move _286, move _287) -> [return: bb133, unwind: bb153]
  }
  preds [bb131]
  succs [bb133, bb153]

bb133
  0: StorageDead(_287)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:57-835:58)
  1: StorageDead(_286)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:57-835:58)
  2: _284 = (move _285,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:48-835:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:48-835:59)
      kind: _282 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:795:20: 795:23} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _283, move _284) -> [return: bb134, unwind: bb153]
  }
  preds [bb132]
  succs [bb134, bb153]

bb134
  0: StorageDead(_285)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:58-835:59)
  1: StorageDead(_284)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:58-835:59)
  2: StorageDead(_283)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:58-835:59)
  3: StorageLive(_288)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:61-835:75)
  4: StorageLive(_289)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:61-835:64)
  5: _289 = &_4
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:61-835:64)
  6: StorageLive(_290)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:61-835:75)
  7: StorageLive(_291)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:65-835:74)
  8: StorageLive(_292)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:65-835:70)
  9: StorageLive(_293)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:65-835:66)
  10: _293 = _13
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:65-835:66)
  11: _294 = AddWithOverflow(_293, const 1_u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:65-835:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:65-835:70)
      kind: assert(!move (_294.1: bool), "attempt to compute `{} + {}`, which would overflow", move _293, const 1_u8) -> [success: bb135, unwind: bb153]
  }
  preds [bb133]
  succs [bb135, bb153]

bb135
  0: _292 = move (_294.0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:65-835:70)
  1: StorageDead(_293)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:69-835:70)
  2: StorageLive(_295)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:73-835:74)
  3: _295 = _11
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:73-835:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:65-835:74)
      kind: _291 = core::ops::RangeInclusive::<u8>::new(move _292, move _295) -> [return: bb136, unwind: bb153]
  }
  preds [bb134]
  succs [bb136, bb153]

bb136
  0: StorageDead(_295)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:73-835:74)
  1: StorageDead(_292)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:73-835:74)
  2: _290 = (move _291,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:61-835:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:61-835:75)
      kind: _288 = <{closure@regex-automata/src/nfa/thompson/range_trie.rs:793:19: 793:22} as core::ops::Fn<(core::ops::RangeInclusive<u8>,)>>::call(move _289, move _290) -> [return: bb137, unwind: bb153]
  }
  preds [bb135]
  succs [bb137, bb153]

bb137
  0: StorageDead(_291)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:74-835:75)
  1: StorageDead(_290)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:74-835:75)
  2: StorageDead(_289)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:74-835:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:18-835:76)
      kind: _273 = nfa::thompson::range_trie::Split::parts3(move _274, move _282, move _288) -> [return: bb138, unwind: bb153]
  }
  preds [bb136]
  succs [bb138, bb153]

bb138
  0: StorageDead(_288)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:75-835:76)
  1: StorageDead(_282)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:75-835:76)
  2: StorageDead(_274)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:75-835:76)
  3: _0 = core::option::Option::<nfa::thompson::range_trie::Split>::Some(move _273)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:13-835:77)
  4: StorageDead(_273)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:835:76-835:77)
  5: StorageDead(_270)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  6: StorageDead(_267)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:830:16-838:10)
      kind: goto -> bb142
  }
  preds [bb137]
  succs [bb142]

bb139
  0: StorageDead(_272)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:32-833:33)
  1: StorageDead(_271)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:32-833:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb141
  }
  preds [bb128]
  succs [bb141]

bb140
  0: StorageDead(_269)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:23-833:24)
  1: StorageDead(_268)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:833:23-833:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb141
  }
  preds [bb127]
  succs [bb141]

bb141
  0: StorageLive(_296)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:137:9-137:77)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:137:9-137:77)
      kind: _296 = core::panicking::panic(const "internal error: entered unreachable code") -> bb153
  }
  preds [bb139, bb140]
  succs [bb153]

bb142
  0: StorageDead(_241)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  1: StorageDead(_238)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:827:16-838:10)
      kind: goto -> bb143
  }
  preds [bb124, bb138]
  succs [bb143]

bb143
  0: StorageDead(_212)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  1: StorageDead(_209)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:824:16-838:10)
      kind: goto -> bb144
  }
  preds [bb110, bb142]
  succs [bb144]

bb144
  0: StorageDead(_183)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  1: StorageDead(_180)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:821:16-838:10)
      kind: goto -> bb145
  }
  preds [bb96, bb143]
  succs [bb145]

bb145
  0: StorageDead(_154)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  1: StorageDead(_151)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:818:16-838:10)
      kind: goto -> bb146
  }
  preds [bb82, bb144]
  succs [bb146]

bb146
  0: StorageDead(_125)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  1: StorageDead(_122)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:815:16-838:10)
      kind: goto -> bb147
  }
  preds [bb68, bb145]
  succs [bb147]

bb147
  0: StorageDead(_104)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  1: StorageDead(_101)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:812:16-838:10)
      kind: goto -> bb148
  }
  preds [bb54, bb146]
  succs [bb148]

bb148
  0: StorageDead(_83)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  1: StorageDead(_80)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:809:16-838:10)
      kind: goto -> bb149
  }
  preds [bb43, bb147]
  succs [bb149]

bb149
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  1: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:806:16-838:10)
      kind: goto -> bb150
  }
  preds [bb32, bb148]
  succs [bb150]

bb150
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:803:16-838:10)
      kind: goto -> bb151
  }
  preds [bb21, bb149]
  succs [bb151]

bb151
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:800:9-838:10)
      kind: goto -> bb152
  }
  preds [bb10, bb150]
  succs [bb152]

bb152
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:838:9-838:10)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:839:5-839:6)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:839:5-839:6)
  4: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:839:5-839:6)
  5: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:839:5-839:6)
  6: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:839:5-839:6)
  7: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:839:5-839:6)
  8: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:839:5-839:6)
  9: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:839:5-839:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:839:6-839:6)
      kind: return
  }
  preds [bb4, bb151]
  succs []

bb153
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:788:5-839:6)
      kind: resume
  }
  preds [bb7, bb8, bb9, bb15, bb16, bb17, bb18, bb19, bb20, bb26, bb27, bb28, bb29, bb30, bb31, bb37, bb38, bb39, bb40, bb41, bb42, bb48, bb49, bb50, bb51, bb52, bb53, bb59, bb60, bb61, bb62, bb63, bb64, bb65, bb66, bb67, bb73, bb74, bb75, bb76, bb77, bb78, bb79, bb80, bb81, bb87, bb88, bb89, bb90, bb91, bb92, bb93, bb94, bb95, bb101, bb102, bb103, bb104, bb105, bb106, bb107, bb108, bb109, bb115, bb116, bb117, bb118, bb119, bb120, bb121, bb122, bb123, bb129, bb130, bb131, bb132, bb133, bb134, bb135, bb136, bb137, bb141]
  succs []

