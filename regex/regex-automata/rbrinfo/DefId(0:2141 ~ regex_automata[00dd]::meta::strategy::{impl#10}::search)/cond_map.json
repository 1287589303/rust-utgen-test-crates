{
  "regex-automata/src/meta/strategy.rs:1787:15:1787:49": [
    {
      "Match": {
        "match_source": "regex-automata/src/meta/strategy.rs:1787:15:1787:49",
        "match_str": "self.try_search_full(cache, input)",
        "match_kind": {
          "Enum": [
            "Ok",
            "Err"
          ]
        },
        "arms": {
          "regex-automata/src/meta/strategy.rs:1796:13:1796:25": {
            "pat": {
              "pat_str": "Ok(matornot)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/meta/strategy.rs:1796:29:1796:37"
          },
          "regex-automata/src/meta/strategy.rs:1788:13:1788:45": {
            "pat": {
              "pat_str": "Err(RetryError::Quadratic(_err))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/meta/strategy.rs:1788:49:1791:14"
          },
          "regex-automata/src/meta/strategy.rs:1792:13:1792:40": {
            "pat": {
              "pat_str": "Err(RetryError::Fail(_err))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/meta/strategy.rs:1792:44:1795:14"
          }
        }
      }
    }
  ],
  "regex-automata/src/meta/strategy.rs:1784:12:1784:46": [
    {
      "Bool": {
        "Other": "input.get_anchored().is_anchored()"
      }
    }
  ]
}