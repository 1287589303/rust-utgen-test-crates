bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1784:9-1786:10)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1784:12-1784:46)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1784:12-1784:32)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1784:12-1784:32)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1784:12-1784:17)
  5: _8 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1784:12-1784:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1784:12-1784:32)
      kind: _7 = util::search::Input::<'_>::get_anchored(move _8) -> [return: bb1, unwind: bb18]
  }
  preds []
  succs [bb1, bb18]

bb1
  0: _6 = &_7
    SourceInfo(regex-automata/src/meta/strategy.rs:1784:12-1784:32)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1784:31-1784:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1784:12-1784:46)
      kind: _5 = util::search::Anchored::is_anchored(move _6) -> [return: bb2, unwind: bb18]
  }
  preds [bb0]
  succs [bb2, bb18]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1784:12-1784:46)
      kind: switchInt(move _5) -> [0: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1784:45-1784:46)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1784:45-1784:46)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1785:20-1785:29)
  3: _10 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1785:20-1785:29)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1785:37-1785:42)
  5: _11 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1785:37-1785:42)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1785:44-1785:49)
  7: _12 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1785:44-1785:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1785:20-1785:50)
      kind: _0 = <meta::strategy::Core as meta::strategy::Strategy>::search(move _10, move _11, move _12) -> [return: bb4, unwind: bb18]
  }
  preds [bb2]
  succs [bb4, bb18]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1785:49-1785:50)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1785:49-1785:50)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1785:49-1785:50)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1786:9-1786:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1786:9-1786:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1798:6-1798:6)
      kind: goto -> bb17
  }
  preds [bb3]
  succs [bb17]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1784:45-1784:46)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1784:45-1784:46)
  2: _4 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1786:10-1786:10)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1786:9-1786:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1786:9-1786:10)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1787:15-1787:49)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1787:15-1787:19)
  7: _14 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:1787:15-1787:19)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1787:36-1787:41)
  9: _15 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1787:36-1787:41)
  10: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1787:43-1787:48)
  11: _16 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1787:43-1787:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1787:15-1787:49)
      kind: _13 = meta::strategy::ReverseInner::try_search_full(move _14, move _15, move _16) -> [return: bb6, unwind: bb18]
  }
  preds [bb2]
  succs [bb6, bb18]

bb6
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1787:48-1787:49)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1787:48-1787:49)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1787:48-1787:49)
  3: PlaceMention(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1787:15-1787:49)
  4: _18 = discriminant(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1787:15-1787:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1787:9-1787:49)
      kind: switchInt(move _18) -> [0: bb11, 1: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb11]

bb7
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1787:15-1787:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1787:15-1787:49)
      kind: unreachable
  }
  preds [bb6, bb8]
  succs []

bb8
  0: _17 = discriminant(((_13 as Err).0: meta::error::RetryError))
    SourceInfo(regex-automata/src/meta/strategy.rs:1787:15-1787:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1787:9-1787:49)
      kind: switchInt(move _17) -> [0: bb9, 1: bb10, otherwise: bb7]
  }
  preds [bb6]
  succs [bb7, bb9, bb10]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1788:13-1788:45)
      kind: falseEdge -> [real: bb12, imaginary: bb10]
  }
  preds [bb8]
  succs [bb10, bb12]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1792:13-1792:40)
      kind: falseEdge -> [real: bb14, imaginary: bb11]
  }
  preds [bb8, bb9]
  succs [bb11, bb14]

bb11
  0: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1796:16-1796:24)
  1: _27 = ((_13 as Ok).0: core::option::Option<util::search::Match>)
    SourceInfo(regex-automata/src/meta/strategy.rs:1796:16-1796:24)
  2: _0 = _27
    SourceInfo(regex-automata/src/meta/strategy.rs:1796:29-1796:37)
  3: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1796:36-1796:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1796:36-1796:37)
      kind: goto -> bb16
  }
  preds [bb6, bb10]
  succs [bb16]

bb12
  0: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:1788:39-1788:43)
  1: _19 = move ((((_13 as Err).0: meta::error::RetryError) as Quadratic).0: meta::error::RetryQuadraticError)
    SourceInfo(regex-automata/src/meta/strategy.rs:1788:39-1788:43)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1790:17-1790:26)
  3: _20 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1790:17-1790:26)
  4: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1790:34-1790:39)
  5: _21 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1790:34-1790:39)
  6: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1790:41-1790:46)
  7: _22 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1790:41-1790:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1790:17-1790:47)
      kind: _0 = <meta::strategy::Core as meta::strategy::Strategy>::search(move _20, move _21, move _22) -> [return: bb13, unwind: bb18]
  }
  preds [bb9]
  succs [bb13, bb18]

bb13
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1790:46-1790:47)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1790:46-1790:47)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1790:46-1790:47)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:1791:13-1791:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1791:13-1791:14)
      kind: goto -> bb16
  }
  preds [bb12]
  succs [bb16]

bb14
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1792:34-1792:38)
  1: _23 = move ((((_13 as Err).0: meta::error::RetryError) as Fail).0: meta::error::RetryFailError)
    SourceInfo(regex-automata/src/meta/strategy.rs:1792:34-1792:38)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1794:17-1794:26)
  3: _24 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1794:17-1794:26)
  4: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1794:41-1794:46)
  5: _25 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1794:41-1794:46)
  6: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1794:48-1794:53)
  7: _26 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1794:48-1794:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1794:17-1794:54)
      kind: _0 = meta::strategy::Core::search_nofail(move _24, move _25, move _26) -> [return: bb15, unwind: bb18]
  }
  preds [bb10]
  succs [bb15, bb18]

bb15
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1794:53-1794:54)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1794:53-1794:54)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1794:53-1794:54)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1795:13-1795:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1795:13-1795:14)
      kind: goto -> bb16
  }
  preds [bb14]
  succs [bb16]

bb16
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1798:5-1798:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1798:6-1798:6)
      kind: goto -> bb17
  }
  preds [bb11, bb13, bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1798:6-1798:6)
      kind: return
  }
  preds [bb4, bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1783:5-1798:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb12, bb14]
  succs []

