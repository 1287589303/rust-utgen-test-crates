bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:111:13-111:21)
  1: _3 = const util::primitives::StateID::ZERO
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:111:24-111:37)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:111:13-111:21)
  3: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:112:13-112:19)
  4: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:112:22-112:34)
  5: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:112:22-112:27)
  6: _6 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:112:22-112:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:112:22-112:34)
      kind: _5 = core::slice::<impl [u8]>::iter(move _6) -> [return: bb1, unwind: bb30]
  }
  preds []
  succs [bb1, bb30]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:112:33-112:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:112:22-112:43)
      kind: _4 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::copied::<'_, u8>(move _5) -> [return: bb2, unwind: bb30]
  }
  preds [bb0]
  succs [bb2, bb30]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:112:42-112:43)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:112:13-112:19)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:9-115:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:9-115:10)
      kind: goto -> bb3
  }
  preds [bb1]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:9-115:10)
      kind: falseUnwind -> [real: bb4, unwind: bb30]
  }
  preds [bb2, bb19]
  succs [bb4, bb30]

bb4
  0: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:29-113:78)
  1: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:32-113:40)
  2: _10 = ((*_1).1: bool)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:32-113:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:32-113:40)
      kind: switchInt(move _10) -> [0: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:43-113:45)
  1: _11 = &mut _4
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:43-113:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:43-113:57)
      kind: _9 = <core::iter::Copied<core::slice::Iter<'_, u8>> as core::iter::DoubleEndedIterator>::next_back(move _11) -> [return: bb6, unwind: bb30]
  }
  preds [bb4]
  succs [bb6, bb30]

bb6
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:56-113:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:29-113:78)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb7
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:67-113:69)
  1: _12 = &mut _4
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:67-113:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:67-113:76)
      kind: _9 = <core::iter::Copied<core::slice::Iter<'_, u8>> as core::iter::Iterator>::next(move _12) -> [return: bb8, unwind: bb30]
  }
  preds [bb4]
  succs [bb8, bb30]

bb8
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:75-113:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:29-113:78)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:77-113:78)
  1: PlaceMention(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:29-113:78)
  2: _13 = discriminant(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:29-113:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:19-113:26)
      kind: switchInt(move _13) -> [1: bb10, otherwise: bb20]
  }
  preds [bb6, bb8]
  succs [bb10, bb20]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:19-113:26)
      kind: falseEdge -> [real: bb11, imaginary: bb20]
  }
  preds [bb9]
  succs [bb11, bb20]

bb11
  0: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:24-113:25)
  1: _14 = ((_9 as Some).0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:24-113:25)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:51)
  3: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:51)
  4: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:50)
  5: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:24)
  6: _18 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:24)
  7: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:42-114:46)
  8: _19 = _3
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:42-114:46)
  9: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:48-114:49)
  10: _20 = _14
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:48-114:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:50)
      kind: _17 = nfa::thompson::literal_trie::LiteralTrie::get_or_add_state(move _18, move _19, move _20) -> [return: bb12, unwind: bb30]
  }
  preds [bb10]
  succs [bb12, bb30]

bb12
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:49-114:50)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:49-114:50)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:49-114:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:51)
      kind: _16 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _17) -> [return: bb13, unwind: bb29]
  }
  preds [bb11]
  succs [bb13, bb29]

bb13
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
  1: PlaceMention(_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:51)
  2: _21 = discriminant(_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:51)
      kind: switchInt(move _21) -> [0: bb16, 1: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15, bb16]

bb14
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:51)
      kind: unreachable
  }
  preds [bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
      kind: falseEdge -> [real: bb17, imaginary: bb16]
  }
  preds [bb13]
  succs [bb16, bb17]

bb16
  0: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:51)
  1: _25 = ((_16 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:51)
  2: _15 = _25
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:51)
  3: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
  4: _3 = move _15
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:13-114:51)
  5: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:51-114:52)
      kind: drop(_16) -> [return: bb19, unwind: bb30]
  }
  preds [bb13, bb15]
  succs [bb19, bb30]

bb17
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
  1: _22 = move ((_16 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
  3: _24 = move _22
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:20-114:51)
      kind: _0 = <core::result::Result<(), nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _24) -> [return: bb18, unwind: bb26]
  }
  preds [bb15]
  succs [bb18, bb26]

bb18
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
      kind: drop(_22) -> [return: bb23, unwind: bb28]
  }
  preds [bb17]
  succs [bb23, bb28]

bb19
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:51-114:52)
  1: _8 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:79-115:10)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:115:9-115:10)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:115:9-115:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:9-115:10)
      kind: goto -> bb3
  }
  preds [bb16]
  succs [bb3]

bb20
  0: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:9-115:10)
  1: _7 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:113:9-115:10)
  2: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:115:9-115:10)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:115:9-115:10)
  4: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:115:9-115:10)
  5: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:9-116:38)
  6: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:9-116:26)
  7: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:20-116:26)
  8: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:9-116:20)
  9: _32 = &mut ((*_1).0: std::vec::Vec<nfa::thompson::literal_trie::State>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:9-116:20)
  10: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:21-116:25)
  11: _33 = _3
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:21-116:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:20-116:26)
      kind: _31 = <std::vec::Vec<nfa::thompson::literal_trie::State> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _32, move _33) -> [return: bb21, unwind: bb30]
  }
  preds [bb9, bb10]
  succs [bb21, bb30]

bb21
  0: _30 = &mut (*_31)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:9-116:26)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:25-116:26)
  2: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:25-116:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:9-116:38)
      kind: _29 = nfa::thompson::literal_trie::State::add_match(move _30) -> [return: bb22, unwind: bb30]
  }
  preds [bb20]
  succs [bb22, bb30]

bb22
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:37-116:38)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:38-116:39)
  2: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:116:38-116:39)
  3: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:117:12-117:14)
  4: _34 = ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:117:12-117:14)
  5: _0 = core::result::Result::<(), nfa::thompson::error::BuildError>::Ok(move _34)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:117:9-117:15)
  6: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:117:14-117:15)
  7: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:118:5-118:6)
  8: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:118:5-118:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:118:6-118:6)
      kind: goto -> bb25
  }
  preds [bb21]
  succs [bb25]

bb23
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:51-114:52)
      kind: drop(_16) -> [return: bb24, unwind: bb30]
  }
  preds [bb18]
  succs [bb24, bb30]

bb24
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:51-114:52)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:115:9-115:10)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:115:9-115:10)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:115:9-115:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:118:5-118:6)
  5: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:118:5-118:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:118:6-118:6)
      kind: goto -> bb25
  }
  preds [bb23]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:118:6-118:6)
      kind: return
  }
  preds [bb22, bb24]
  succs []

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
      kind: drop(_24) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
      kind: drop(_22) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb26]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:51-114:52)
      kind: drop(_16) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb18, bb27]
  succs [bb30]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:114:50-114:51)
      kind: drop(_17) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:110:5-118:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb7, bb11, bb16, bb20, bb21, bb23, bb28, bb29]
  succs []

