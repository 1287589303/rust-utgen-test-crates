bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/iter.rs:431:13-431:18)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:46)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:33)
  5: _7 = &mut _2
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:33)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:46)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/util/iter.rs:431:34-431:45)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/util/iter.rs:431:34-431:45)
  9: _10 = &((*_1).0: util::search::Input<'_>)
    SourceInfo(regex-automata/src/util/iter.rs:431:34-431:45)
  10: _9 = &(*_10)
    SourceInfo(regex-automata/src/util/iter.rs:431:34-431:45)
  11: _8 = (move _9,)
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:431:27-431:46)
      kind: _6 = <F as core::ops::FnMut<(&util::search::Input<'_>,)>>::call_mut(move _7, move _8) -> [return: bb1, unwind: bb54]
  }
  preds []
  succs [bb1, bb54]

bb1
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/iter.rs:431:45-431:46)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/iter.rs:431:45-431:46)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/util/iter.rs:431:45-431:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
      kind: _5 = <core::result::Result<core::option::Option<util::search::Match>, util::search::MatchError> as core::ops::Try>::branch(move _6) -> [return: bb2, unwind: bb53]
  }
  preds [bb0]
  succs [bb2, bb53]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/iter.rs:431:46-431:47)
  1: PlaceMention(_5)
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
  2: _11 = discriminant(_5)
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
      kind: switchInt(move _11) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:431:46-431:47)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
  1: _15 = ((_5 as Continue).0: core::option::Option<util::search::Match>)
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
  2: _4 = _15
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/util/iter.rs:431:46-431:47)
  4: PlaceMention(_4)
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
  5: _16 = discriminant(_4)
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:431:21-431:47)
      kind: switchInt(move _16) -> [0: bb9, 1: bb10, otherwise: bb8]
  }
  preds [bb2, bb4]
  succs [bb8, bb9, bb10]

bb6
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/util/iter.rs:431:46-431:47)
  1: _12 = move ((_5 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/util/iter.rs:431:46-431:47)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/util/iter.rs:431:46-431:47)
  3: _14 = move _12
    SourceInfo(regex-automata/src/util/iter.rs:431:46-431:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
      kind: _0 = <core::result::Result<core::option::Option<util::search::Match>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _14) -> [return: bb7, unwind: bb50]
  }
  preds [bb4]
  succs [bb7, bb50]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/util/iter.rs:431:46-431:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:431:46-431:47)
      kind: drop(_12) -> [return: bb40, unwind: bb52]
  }
  preds [bb6]
  succs [bb40, bb52]

bb8
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:431:27-431:47)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:432:13-432:17)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb5]
  succs [bb10, bb11]

bb10
  0: StorageLive(_19)
    SourceInfo(regex-automata/src/util/iter.rs:433:18-433:19)
  1: _19 = ((_4 as Some).0: util::search::Match)
    SourceInfo(regex-automata/src/util/iter.rs:433:18-433:19)
  2: _3 = _19
    SourceInfo(regex-automata/src/util/iter.rs:433:24-433:25)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/util/iter.rs:433:24-433:25)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/iter.rs:431:13-431:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:434:10-434:11)
      kind: drop(_5) -> [return: bb12, unwind: bb54]
  }
  preds [bb5, bb9]
  succs [bb12, bb54]

bb11
  0: StorageLive(_18)
    SourceInfo(regex-automata/src/util/iter.rs:432:31-432:35)
  1: _18 = core::option::Option::<util::search::Match>::None
    SourceInfo(regex-automata/src/util/iter.rs:432:31-432:35)
  2: _0 = core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::Ok(move _18)
    SourceInfo(regex-automata/src/util/iter.rs:432:28-432:36)
  3: StorageDead(_18)
    SourceInfo(regex-automata/src/util/iter.rs:432:35-432:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:432:21-432:36)
      kind: goto -> bb41
  }
  preds [bb9]
  succs [bb41]

bb12
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/iter.rs:434:10-434:11)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/iter.rs:434:10-434:11)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/iter.rs:434:10-434:11)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/util/iter.rs:435:9-440:10)
  4: StorageLive(_21)
    SourceInfo(regex-automata/src/util/iter.rs:435:12-435:24)
  5: StorageLive(_22)
    SourceInfo(regex-automata/src/util/iter.rs:435:12-435:13)
  6: _22 = &_3
    SourceInfo(regex-automata/src/util/iter.rs:435:12-435:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:435:12-435:24)
      kind: _21 = util::search::Match::is_empty(move _22) -> [return: bb13, unwind: bb54]
  }
  preds [bb10]
  succs [bb13, bb54]

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:435:12-435:24)
      kind: switchInt(move _21) -> [0: bb31, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb31]

bb14
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/util/iter.rs:435:23-435:24)
  1: StorageLive(_23)
    SourceInfo(regex-automata/src/util/iter.rs:435:28-435:64)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/util/iter.rs:435:28-435:41)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/util/iter.rs:435:28-435:41)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/util/iter.rs:435:33-435:40)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/util/iter.rs:435:33-435:34)
  6: _27 = &_3
    SourceInfo(regex-automata/src/util/iter.rs:435:33-435:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:435:33-435:40)
      kind: _26 = util::search::Match::end(move _27) -> [return: bb15, unwind: bb54]
  }
  preds [bb13]
  succs [bb15, bb54]

bb15
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/util/iter.rs:435:39-435:40)
  1: _25 = core::option::Option::<usize>::Some(move _26)
    SourceInfo(regex-automata/src/util/iter.rs:435:28-435:41)
  2: _24 = &_25
    SourceInfo(regex-automata/src/util/iter.rs:435:28-435:41)
  3: StorageDead(_26)
    SourceInfo(regex-automata/src/util/iter.rs:435:40-435:41)
  4: StorageLive(_28)
    SourceInfo(regex-automata/src/util/iter.rs:435:45-435:64)
  5: _28 = &((*_1).1: core::option::Option<usize>)
    SourceInfo(regex-automata/src/util/iter.rs:435:45-435:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:435:28-435:64)
      kind: _23 = <core::option::Option<usize> as core::cmp::PartialEq>::eq(move _24, move _28) -> [return: bb16, unwind: bb54]
  }
  preds [bb14]
  succs [bb16, bb54]

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:435:28-435:64)
      kind: switchInt(move _23) -> [0: bb30, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb30]

bb17
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/util/iter.rs:435:63-435:64)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/util/iter.rs:435:63-435:64)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/util/iter.rs:435:63-435:64)
  3: StorageLive(_29)
    SourceInfo(regex-automata/src/util/iter.rs:436:17-439:14)
  4: StorageLive(_30)
    SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
  6: StorageLive(_32)
    SourceInfo(regex-automata/src/util/iter.rs:436:23-436:69)
  7: StorageLive(_33)
    SourceInfo(regex-automata/src/util/iter.rs:436:23-436:27)
  8: _33 = &mut (*_1)
    SourceInfo(regex-automata/src/util/iter.rs:436:23-436:27)
  9: StorageLive(_34)
    SourceInfo(regex-automata/src/util/iter.rs:436:59-436:60)
  10: _34 = _3
    SourceInfo(regex-automata/src/util/iter.rs:436:59-436:60)
  11: StorageLive(_35)
    SourceInfo(regex-automata/src/util/iter.rs:436:62-436:68)
  12: _35 = move _2
    SourceInfo(regex-automata/src/util/iter.rs:436:62-436:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:436:23-436:69)
      kind: _32 = util::iter::Searcher::<'_>::handle_overlapping_empty_match::<F>(move _33, move _34, move _35) -> [return: bb18, unwind: bb49]
  }
  preds [bb16]
  succs [bb18, bb49]

bb18
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/util/iter.rs:436:68-436:69)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/util/iter.rs:436:68-436:69)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/util/iter.rs:436:68-436:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
      kind: _31 = <core::result::Result<core::option::Option<util::search::Match>, util::search::MatchError> as core::ops::Try>::branch(move _32) -> [return: bb19, unwind: bb48]
  }
  preds [bb17]
  succs [bb19, bb48]

bb19
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/util/iter.rs:436:69-436:70)
  1: PlaceMention(_31)
    SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
  2: _36 = discriminant(_31)
    SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
      kind: switchInt(move _36) -> [0: bb22, 1: bb21, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb21, bb22]

bb20
  0: FakeRead(ForMatchedPlace(None), _31)
    SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
      kind: unreachable
  }
  preds [bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:436:69-436:70)
      kind: falseEdge -> [real: bb23, imaginary: bb22]
  }
  preds [bb19]
  succs [bb22, bb23]

bb22
  0: StorageLive(_40)
    SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
  1: _40 = ((_31 as Continue).0: core::option::Option<util::search::Match>)
    SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
  2: _30 = _40
    SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
  3: StorageDead(_40)
    SourceInfo(regex-automata/src/util/iter.rs:436:69-436:70)
  4: PlaceMention(_30)
    SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
  5: _41 = discriminant(_30)
    SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:436:17-436:70)
      kind: switchInt(move _41) -> [0: bb26, 1: bb27, otherwise: bb25]
  }
  preds [bb19, bb21]
  succs [bb25, bb26, bb27]

bb23
  0: StorageLive(_37)
    SourceInfo(regex-automata/src/util/iter.rs:436:69-436:70)
  1: _37 = move ((_31 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/util/iter.rs:436:69-436:70)
  2: StorageLive(_39)
    SourceInfo(regex-automata/src/util/iter.rs:436:69-436:70)
  3: _39 = move _37
    SourceInfo(regex-automata/src/util/iter.rs:436:69-436:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
      kind: _0 = <core::result::Result<core::option::Option<util::search::Match>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _39) -> [return: bb24, unwind: bb45]
  }
  preds [bb21]
  succs [bb24, bb45]

bb24
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/util/iter.rs:436:69-436:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:436:69-436:70)
      kind: drop(_37) -> [return: bb37, unwind: bb47]
  }
  preds [bb23]
  succs [bb37, bb47]

bb25
  0: FakeRead(ForMatchedPlace(None), _30)
    SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:436:23-436:70)
      kind: unreachable
  }
  preds [bb22]
  succs []

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:437:17-437:21)
      kind: falseEdge -> [real: bb28, imaginary: bb27]
  }
  preds [bb22]
  succs [bb27, bb28]

bb27
  0: StorageLive(_44)
    SourceInfo(regex-automata/src/util/iter.rs:438:22-438:23)
  1: _44 = ((_30 as Some).0: util::search::Match)
    SourceInfo(regex-automata/src/util/iter.rs:438:22-438:23)
  2: _29 = _44
    SourceInfo(regex-automata/src/util/iter.rs:438:28-438:29)
  3: StorageDead(_44)
    SourceInfo(regex-automata/src/util/iter.rs:438:28-438:29)
  4: _3 = move _29
    SourceInfo(regex-automata/src/util/iter.rs:436:13-439:14)
  5: StorageDead(_29)
    SourceInfo(regex-automata/src/util/iter.rs:439:13-439:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:439:14-439:15)
      kind: drop(_31) -> [return: bb29, unwind: bb54]
  }
  preds [bb22, bb26]
  succs [bb29, bb54]

bb28
  0: StorageLive(_43)
    SourceInfo(regex-automata/src/util/iter.rs:437:35-437:39)
  1: _43 = core::option::Option::<util::search::Match>::None
    SourceInfo(regex-automata/src/util/iter.rs:437:35-437:39)
  2: _0 = core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::Ok(move _43)
    SourceInfo(regex-automata/src/util/iter.rs:437:32-437:40)
  3: StorageDead(_43)
    SourceInfo(regex-automata/src/util/iter.rs:437:39-437:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:437:25-437:40)
      kind: goto -> bb38
  }
  preds [bb26]
  succs [bb38]

bb29
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/util/iter.rs:439:14-439:15)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/util/iter.rs:439:14-439:15)
  2: _20 = const ()
    SourceInfo(regex-automata/src/util/iter.rs:435:65-440:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:435:9-440:10)
      kind: goto -> bb33
  }
  preds [bb27]
  succs [bb33]

bb30
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/util/iter.rs:435:63-435:64)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/util/iter.rs:435:63-435:64)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/util/iter.rs:435:63-435:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb16]
  succs [bb32]

bb31
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/util/iter.rs:435:23-435:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb13]
  succs [bb32]

bb32
  0: _20 = const ()
    SourceInfo(regex-automata/src/util/iter.rs:440:10-440:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:435:9-440:10)
      kind: goto -> bb33
  }
  preds [bb30, bb31]
  succs [bb33]

bb33
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/util/iter.rs:440:9-440:10)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/util/iter.rs:440:9-440:10)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/util/iter.rs:440:9-440:10)
  3: StorageLive(_45)
    SourceInfo(regex-automata/src/util/iter.rs:441:9-441:38)
  4: StorageLive(_46)
    SourceInfo(regex-automata/src/util/iter.rs:441:9-441:19)
  5: _46 = &mut ((*_1).0: util::search::Input<'_>)
    SourceInfo(regex-automata/src/util/iter.rs:441:9-441:19)
  6: StorageLive(_47)
    SourceInfo(regex-automata/src/util/iter.rs:441:30-441:37)
  7: StorageLive(_48)
    SourceInfo(regex-automata/src/util/iter.rs:441:30-441:31)
  8: _48 = &_3
    SourceInfo(regex-automata/src/util/iter.rs:441:30-441:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:441:30-441:37)
      kind: _47 = util::search::Match::end(move _48) -> [return: bb34, unwind: bb54]
  }
  preds [bb29, bb32]
  succs [bb34, bb54]

bb34
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/util/iter.rs:441:36-441:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:441:9-441:38)
      kind: _45 = util::search::Input::<'_>::set_start(move _46, move _47) -> [return: bb35, unwind: bb54]
  }
  preds [bb33]
  succs [bb35, bb54]

bb35
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/util/iter.rs:441:37-441:38)
  1: StorageDead(_46)
    SourceInfo(regex-automata/src/util/iter.rs:441:37-441:38)
  2: StorageDead(_45)
    SourceInfo(regex-automata/src/util/iter.rs:441:38-441:39)
  3: StorageLive(_49)
    SourceInfo(regex-automata/src/util/iter.rs:442:31-442:44)
  4: StorageLive(_50)
    SourceInfo(regex-automata/src/util/iter.rs:442:36-442:43)
  5: StorageLive(_51)
    SourceInfo(regex-automata/src/util/iter.rs:442:36-442:37)
  6: _51 = &_3
    SourceInfo(regex-automata/src/util/iter.rs:442:36-442:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:442:36-442:43)
      kind: _50 = util::search::Match::end(move _51) -> [return: bb36, unwind: bb54]
  }
  preds [bb34]
  succs [bb36, bb54]

bb36
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/util/iter.rs:442:42-442:43)
  1: _49 = core::option::Option::<usize>::Some(move _50)
    SourceInfo(regex-automata/src/util/iter.rs:442:31-442:44)
  2: StorageDead(_50)
    SourceInfo(regex-automata/src/util/iter.rs:442:43-442:44)
  3: ((*_1).1: core::option::Option<usize>) = move _49
    SourceInfo(regex-automata/src/util/iter.rs:442:9-442:44)
  4: StorageDead(_49)
    SourceInfo(regex-automata/src/util/iter.rs:442:43-442:44)
  5: StorageLive(_52)
    SourceInfo(regex-automata/src/util/iter.rs:443:12-443:19)
  6: StorageLive(_53)
    SourceInfo(regex-automata/src/util/iter.rs:443:17-443:18)
  7: _53 = _3
    SourceInfo(regex-automata/src/util/iter.rs:443:17-443:18)
  8: _52 = core::option::Option::<util::search::Match>::Some(move _53)
    SourceInfo(regex-automata/src/util/iter.rs:443:12-443:19)
  9: StorageDead(_53)
    SourceInfo(regex-automata/src/util/iter.rs:443:18-443:19)
  10: _0 = core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::Ok(move _52)
    SourceInfo(regex-automata/src/util/iter.rs:443:9-443:20)
  11: StorageDead(_52)
    SourceInfo(regex-automata/src/util/iter.rs:443:19-443:20)
  12: StorageDead(_3)
    SourceInfo(regex-automata/src/util/iter.rs:444:5-444:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:444:5-444:6)
      kind: drop(_2) -> [return: bb44, unwind: bb55]
  }
  preds [bb35]
  succs [bb44, bb55]

bb37
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/util/iter.rs:436:69-436:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb24]
  succs [bb38]

bb38
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/util/iter.rs:439:13-439:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:439:14-439:15)
      kind: drop(_31) -> [return: bb39, unwind: bb54]
  }
  preds [bb28, bb37]
  succs [bb39, bb54]

bb39
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/util/iter.rs:439:14-439:15)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/util/iter.rs:439:14-439:15)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/util/iter.rs:440:9-440:10)
  3: StorageDead(_21)
    SourceInfo(regex-automata/src/util/iter.rs:440:9-440:10)
  4: StorageDead(_20)
    SourceInfo(regex-automata/src/util/iter.rs:440:9-440:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb43
  }
  preds [bb38]
  succs [bb43]

bb40
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/iter.rs:431:46-431:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb41
  }
  preds [bb7]
  succs [bb41]

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:434:10-434:11)
      kind: drop(_5) -> [return: bb42, unwind: bb54]
  }
  preds [bb11, bb40]
  succs [bb42, bb54]

bb42
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/iter.rs:434:10-434:11)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/iter.rs:434:10-434:11)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/iter.rs:434:10-434:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb43
  }
  preds [bb41]
  succs [bb43]

bb43
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/iter.rs:444:5-444:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:444:5-444:6)
      kind: drop(_2) -> [return: bb44, unwind: bb55]
  }
  preds [bb39, bb42]
  succs [bb44, bb55]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:444:6-444:6)
      kind: return
  }
  preds [bb36, bb43]
  succs []

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:436:69-436:70)
      kind: drop(_39) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb23]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:436:69-436:70)
      kind: drop(_37) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb45]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:439:14-439:15)
      kind: drop(_31) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb24, bb46]
  succs [bb54]

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:436:69-436:70)
      kind: drop(_32) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb18]
  succs [bb54]

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:436:68-436:69)
      kind: drop(_35) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb54]

bb50
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:431:46-431:47)
      kind: drop(_14) -> [return: bb51, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb51]

bb51
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:431:46-431:47)
      kind: drop(_12) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb50]
  succs [bb52]

bb52
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:434:10-434:11)
      kind: drop(_5) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb7, bb51]
  succs [bb54]

bb53
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:431:46-431:47)
      kind: drop(_6) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb54]

bb54
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:444:5-444:6)
      kind: drop(_2) -> [return: bb55, unwind terminate(cleanup)]
  }
  preds [bb0, bb10, bb12, bb14, bb15, bb27, bb33, bb34, bb35, bb38, bb41, bb47, bb48, bb49, bb52, bb53]
  succs [bb55]

bb55
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:424:5-444:6)
      kind: resume
  }
  preds [bb36, bb43, bb54]
  succs []

