bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:461:13-461:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:461:25-461:43)
      kind: _4 = util::look::LookMatcher::new() -> [return: bb1, unwind: bb192]
  }
  preds []
  succs [bb1, bb192]

bb1
  0: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/meta/strategy.rs:461:13-461:22)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:462:9-462:71)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:462:9-462:14)
  3: _6 = &mut _4
    SourceInfo(regex-automata/src/meta/strategy.rs:462:9-462:14)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:462:35-462:70)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:462:35-462:48)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:462:35-462:48)
  7: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:462:35-462:39)
  8: _10 = &_1
    SourceInfo(regex-automata/src/meta/strategy.rs:462:35-462:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:462:35-462:48)
      kind: _9 = meta::regex::RegexInfo::config(move _10) -> [return: bb2, unwind: bb192]
  }
  preds [bb0]
  succs [bb2, bb192]

bb2
  0: _8 = &(*_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:462:35-462:48)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:462:47-462:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:462:35-462:70)
      kind: _7 = meta::regex::Config::get_line_terminator(move _8) -> [return: bb3, unwind: bb192]
  }
  preds [bb1]
  succs [bb3, bb192]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:462:69-462:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:462:9-462:71)
      kind: _5 = util::look::LookMatcher::set_line_terminator(move _6, move _7) -> [return: bb4, unwind: bb192]
  }
  preds [bb2]
  succs [bb4, bb192]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:462:70-462:71)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:462:70-462:71)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:462:71-462:72)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:462:71-462:72)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:463:13-463:28)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:463:31-467:64)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:463:31-466:27)
  7: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:463:31-465:64)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:463:31-464:50)
  9: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:463:31-463:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:463:31-463:54)
      kind: _16 = nfa::thompson::compiler::Config::new() -> [return: bb5, unwind: bb192]
  }
  preds [bb3]
  succs [bb5, bb192]

bb5
  0: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:464:19-464:49)
  1: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:464:19-464:32)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:464:19-464:32)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:464:19-464:23)
  4: _20 = &_1
    SourceInfo(regex-automata/src/meta/strategy.rs:464:19-464:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:464:19-464:32)
      kind: _19 = meta::regex::RegexInfo::config(move _20) -> [return: bb6, unwind: bb192]
  }
  preds [bb4]
  succs [bb6, bb192]

bb6
  0: _18 = &(*_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:464:19-464:32)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:464:31-464:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:464:19-464:49)
      kind: _17 = meta::regex::Config::get_utf8_empty(move _18) -> [return: bb7, unwind: bb192]
  }
  preds [bb5]
  succs [bb7, bb192]

bb7
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:464:48-464:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:463:31-464:50)
      kind: _15 = nfa::thompson::compiler::Config::utf8(move _16, move _17) -> [return: bb8, unwind: bb192]
  }
  preds [bb6]
  succs [bb8, bb192]

bb8
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:464:49-464:50)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:464:49-464:50)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:465:29-465:63)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:465:29-465:42)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:465:29-465:42)
  5: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:465:29-465:33)
  6: _24 = &_1
    SourceInfo(regex-automata/src/meta/strategy.rs:465:29-465:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:465:29-465:42)
      kind: _23 = meta::regex::RegexInfo::config(move _24) -> [return: bb9, unwind: bb192]
  }
  preds [bb7]
  succs [bb9, bb192]

bb9
  0: _22 = &(*_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:465:29-465:42)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:465:41-465:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:465:29-465:63)
      kind: _21 = meta::regex::Config::get_nfa_size_limit(move _22) -> [return: bb10, unwind: bb192]
  }
  preds [bb8]
  succs [bb10, bb192]

bb10
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:465:62-465:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:463:31-465:64)
      kind: _14 = nfa::thompson::compiler::Config::nfa_size_limit(move _15, move _21) -> [return: bb11, unwind: bb192]
  }
  preds [bb9]
  succs [bb11, bb192]

bb11
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:465:63-465:64)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:465:63-465:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:463:31-466:27)
      kind: _13 = nfa::thompson::compiler::Config::shrink(move _14, const false) -> [return: bb12, unwind: bb192]
  }
  preds [bb10]
  succs [bb12, bb192]

bb12
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:466:26-466:27)
  1: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:467:29-467:63)
  2: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:467:29-467:42)
  3: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:467:29-467:42)
  4: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:467:29-467:33)
  5: _28 = &_1
    SourceInfo(regex-automata/src/meta/strategy.rs:467:29-467:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:467:29-467:42)
      kind: _27 = meta::regex::RegexInfo::config(move _28) -> [return: bb13, unwind: bb192]
  }
  preds [bb11]
  succs [bb13, bb192]

bb13
  0: _26 = &(*_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:467:29-467:42)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:467:41-467:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:467:29-467:63)
      kind: _25 = meta::regex::Config::get_which_captures(move _26) -> [return: bb14, unwind: bb192]
  }
  preds [bb12]
  succs [bb14, bb192]

bb14
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:467:62-467:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:463:31-467:64)
      kind: _12 = nfa::thompson::compiler::Config::which_captures(move _13, move _25) -> [return: bb15, unwind: bb192]
  }
  preds [bb13]
  succs [bb15, bb192]

bb15
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:467:63-467:64)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:467:63-467:64)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:468:27-468:32)
  3: _29 = move _4
    SourceInfo(regex-automata/src/meta/strategy.rs:468:27-468:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:463:31-468:33)
      kind: _11 = nfa::thompson::compiler::Config::look_matcher(move _12, move _29) -> [return: bb16, unwind: bb192]
  }
  preds [bb14]
  succs [bb16, bb192]

bb16
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:468:32-468:33)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:468:32-468:33)
  2: FakeRead(ForLet(None), _11)
    SourceInfo(regex-automata/src/meta/strategy.rs:463:13-463:28)
  3: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:468:33-468:34)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:468:33-468:34)
  5: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:468:33-468:34)
  6: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:13-469:16)
  7: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-472:39)
  8: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-472:38)
  9: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-471:39)
  10: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-470:48)
  11: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-470:48)
  12: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-469:44)
  13: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-469:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:469:19-469:44)
      kind: _37 = nfa::thompson::compiler::Compiler::new() -> [return: bb17, unwind: bb192]
  }
  preds [bb15]
  succs [bb17, bb192]

bb17
  0: _36 = &mut _37
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-469:44)
  1: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:470:24-470:47)
  2: StorageLive(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:470:24-470:39)
  3: _39 = &_11
    SourceInfo(regex-automata/src/meta/strategy.rs:470:24-470:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:470:24-470:47)
      kind: _38 = <nfa::thompson::compiler::Config as core::clone::Clone>::clone(move _39) -> [return: bb18, unwind: bb191]
  }
  preds [bb16]
  succs [bb18, bb191]

bb18
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:470:46-470:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:469:19-470:48)
      kind: _35 = nfa::thompson::compiler::Compiler::configure(move _36, move _38) -> [return: bb19, unwind: bb191]
  }
  preds [bb17]
  succs [bb19, bb191]

bb19
  0: _34 = &(*_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-470:48)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/strategy.rs:470:47-470:48)
  2: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:470:47-470:48)
  3: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:471:34-471:38)
  4: _40 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:471:34-471:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:469:19-471:39)
      kind: _33 = nfa::thompson::compiler::Compiler::build_many_from_hir::<&regex_syntax::hir::Hir>(move _34, move _40) -> [return: bb20, unwind: bb191]
  }
  preds [bb18]
  succs [bb20, bb191]

bb20
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:471:38-471:39)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:471:38-471:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:469:19-472:38)
      kind: _32 = core::result::Result::<nfa::thompson::nfa::NFA, nfa::thompson::error::BuildError>::map_err::<meta::error::BuildError, fn(nfa::thompson::error::BuildError) -> meta::error::BuildError {meta::error::BuildError::nfa}>(move _33, meta::error::BuildError::nfa) -> [return: bb21, unwind: bb190]
  }
  preds [bb19]
  succs [bb21, bb190]

bb21
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:472:37-472:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:469:19-472:39)
      kind: _31 = <core::result::Result<nfa::thompson::nfa::NFA, meta::error::BuildError> as core::ops::Try>::branch(move _32) -> [return: bb22, unwind: bb189]
  }
  preds [bb20]
  succs [bb22, bb189]

bb22
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:472:38-472:39)
  1: PlaceMention(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-472:39)
  2: _41 = discriminant(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-472:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:469:19-472:39)
      kind: switchInt(move _41) -> [0: bb25, 1: bb24, otherwise: bb23]
  }
  preds [bb21]
  succs [bb23, bb24, bb25]

bb23
  0: FakeRead(ForMatchedPlace(None), _31)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-472:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:469:19-472:39)
      kind: unreachable
  }
  preds [bb22]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:472:38-472:39)
      kind: falseEdge -> [real: bb26, imaginary: bb25]
  }
  preds [bb22]
  succs [bb25, bb26]

bb25
  0: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-472:39)
  1: _45 = move ((_31 as Continue).0: nfa::thompson::nfa::NFA)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-472:39)
  2: _30 = move _45
    SourceInfo(regex-automata/src/meta/strategy.rs:469:19-472:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:472:38-472:39)
      kind: drop(_45) -> [return: bb28, unwind: bb188]
  }
  preds [bb22, bb24]
  succs [bb28, bb188]

bb26
  0: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:472:38-472:39)
  1: _42 = move ((_31 as Break).0: core::result::Result<core::convert::Infallible, meta::error::BuildError>)
    SourceInfo(regex-automata/src/meta/strategy.rs:472:38-472:39)
  2: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:472:38-472:39)
  3: _44 = move _42
    SourceInfo(regex-automata/src/meta/strategy.rs:472:38-472:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:469:19-472:39)
      kind: _0 = <core::result::Result<meta::strategy::Core, meta::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, meta::error::BuildError>>>::from_residual(move _44) -> [return: bb27, unwind: bb186]
  }
  preds [bb24]
  succs [bb27, bb186]

bb27
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:472:38-472:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:472:38-472:39)
      kind: drop(_42) -> [return: bb137, unwind: bb188]
  }
  preds [bb26]
  succs [bb137, bb188]

bb28
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:472:38-472:39)
  1: FakeRead(ForLet(None), _30)
    SourceInfo(regex-automata/src/meta/strategy.rs:469:13-469:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:472:39-472:40)
      kind: drop(_31) -> [return: bb29, unwind: bb184]
  }
  preds [bb25]
  succs [bb29, bb184]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:472:39-472:40)
      kind: drop(_37) -> [return: bb30, unwind: bb185]
  }
  preds [bb28]
  succs [bb30, bb185]

bb30
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:472:39-472:40)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:472:39-472:40)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:472:39-472:40)
  3: StorageLive(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:13-479:19)
  4: StorageLive(_47)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:22-479:70)
  5: StorageLive(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:22-479:69)
  6: StorageLive(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:44-479:49)
  7: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:44-479:49)
  8: _50 = &_1
    SourceInfo(regex-automata/src/meta/strategy.rs:479:44-479:49)
  9: _49 = &(*_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:44-479:49)
  10: StorageLive(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:51-479:62)
  11: StorageLive(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:51-479:54)
  12: _52 = &_2
    SourceInfo(regex-automata/src/meta/strategy.rs:479:51-479:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:51-479:62)
      kind: _51 = <core::option::Option<util::prefilter::Prefilter> as core::clone::Clone>::clone(move _52) -> [return: bb31, unwind: bb185]
  }
  preds [bb29]
  succs [bb31, bb185]

bb31
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:61-479:62)
  1: StorageLive(_53)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:64-479:68)
  2: StorageLive(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:64-479:68)
  3: _54 = &_30
    SourceInfo(regex-automata/src/meta/strategy.rs:479:64-479:68)
  4: _53 = &(*_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:64-479:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:22-479:69)
      kind: _48 = meta::wrappers::PikeVM::new(move _49, move _51, move _53) -> [return: bb32, unwind: bb183]
  }
  preds [bb30]
  succs [bb32, bb183]

bb32
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:68-479:69)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:68-479:69)
  2: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:68-479:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:22-479:70)
      kind: _47 = <core::result::Result<meta::wrappers::PikeVM, meta::error::BuildError> as core::ops::Try>::branch(move _48) -> [return: bb33, unwind: bb182]
  }
  preds [bb31]
  succs [bb33, bb182]

bb33
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:69-479:70)
  1: PlaceMention(_47)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:22-479:70)
  2: _55 = discriminant(_47)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:22-479:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:22-479:70)
      kind: switchInt(move _55) -> [0: bb36, 1: bb35, otherwise: bb34]
  }
  preds [bb32]
  succs [bb34, bb35, bb36]

bb34
  0: FakeRead(ForMatchedPlace(None), _47)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:22-479:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:22-479:70)
      kind: unreachable
  }
  preds [bb33]
  succs []

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:69-479:70)
      kind: falseEdge -> [real: bb37, imaginary: bb36]
  }
  preds [bb33]
  succs [bb36, bb37]

bb36
  0: StorageLive(_59)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:22-479:70)
  1: _59 = move ((_47 as Continue).0: meta::wrappers::PikeVM)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:22-479:70)
  2: _46 = move _59
    SourceInfo(regex-automata/src/meta/strategy.rs:479:22-479:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:69-479:70)
      kind: drop(_59) -> [return: bb39, unwind: bb181]
  }
  preds [bb33, bb35]
  succs [bb39, bb181]

bb37
  0: StorageLive(_56)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:69-479:70)
  1: _56 = move ((_47 as Break).0: core::result::Result<core::convert::Infallible, meta::error::BuildError>)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:69-479:70)
  2: StorageLive(_58)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:69-479:70)
  3: _58 = move _56
    SourceInfo(regex-automata/src/meta/strategy.rs:479:69-479:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:22-479:70)
      kind: _0 = <core::result::Result<meta::strategy::Core, meta::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, meta::error::BuildError>>>::from_residual(move _58) -> [return: bb38, unwind: bb179]
  }
  preds [bb35]
  succs [bb38, bb179]

bb38
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:69-479:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:69-479:70)
      kind: drop(_56) -> [return: bb134, unwind: bb181]
  }
  preds [bb37]
  succs [bb134, bb181]

bb39
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:69-479:70)
  1: FakeRead(ForLet(None), _46)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:13-479:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:70-479:71)
      kind: drop(_47) -> [return: bb40, unwind: bb178]
  }
  preds [bb36]
  succs [bb40, bb178]

bb40
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:70-479:71)
  1: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:70-479:71)
  2: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:70-479:71)
  3: StorageLive(_60)
    SourceInfo(regex-automata/src/meta/strategy.rs:480:13-480:22)
  4: StorageLive(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:13-481:73)
  5: StorageLive(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:13-481:72)
  6: StorageLive(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:47-481:52)
  7: StorageLive(_64)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:47-481:52)
  8: _64 = &_1
    SourceInfo(regex-automata/src/meta/strategy.rs:481:47-481:52)
  9: _63 = &(*_64)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:47-481:52)
  10: StorageLive(_65)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:54-481:65)
  11: StorageLive(_66)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:54-481:57)
  12: _66 = &_2
    SourceInfo(regex-automata/src/meta/strategy.rs:481:54-481:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:54-481:65)
      kind: _65 = <core::option::Option<util::prefilter::Prefilter> as core::clone::Clone>::clone(move _66) -> [return: bb41, unwind: bb178]
  }
  preds [bb39]
  succs [bb41, bb178]

bb41
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:64-481:65)
  1: StorageLive(_67)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:67-481:71)
  2: StorageLive(_68)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:67-481:71)
  3: _68 = &_30
    SourceInfo(regex-automata/src/meta/strategy.rs:481:67-481:71)
  4: _67 = &(*_68)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:67-481:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:13-481:72)
      kind: _62 = meta::wrappers::BoundedBacktracker::new(move _63, move _65, move _67) -> [return: bb42, unwind: bb177]
  }
  preds [bb40]
  succs [bb42, bb177]

bb42
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:71-481:72)
  1: StorageDead(_65)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:71-481:72)
  2: StorageDead(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:71-481:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:13-481:73)
      kind: _61 = <core::result::Result<meta::wrappers::BoundedBacktracker, meta::error::BuildError> as core::ops::Try>::branch(move _62) -> [return: bb43, unwind: bb176]
  }
  preds [bb41]
  succs [bb43, bb176]

bb43
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:72-481:73)
  1: PlaceMention(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:13-481:73)
  2: _69 = discriminant(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:13-481:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:13-481:73)
      kind: switchInt(move _69) -> [0: bb46, 1: bb45, otherwise: bb44]
  }
  preds [bb42]
  succs [bb44, bb45, bb46]

bb44
  0: FakeRead(ForMatchedPlace(None), _61)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:13-481:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:13-481:73)
      kind: unreachable
  }
  preds [bb43]
  succs []

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:72-481:73)
      kind: falseEdge -> [real: bb47, imaginary: bb46]
  }
  preds [bb43]
  succs [bb46, bb47]

bb46
  0: StorageLive(_73)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:13-481:73)
  1: _73 = move ((_61 as Continue).0: meta::wrappers::BoundedBacktracker)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:13-481:73)
  2: _60 = move _73
    SourceInfo(regex-automata/src/meta/strategy.rs:481:13-481:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:72-481:73)
      kind: drop(_73) -> [return: bb49, unwind: bb175]
  }
  preds [bb43, bb45]
  succs [bb49, bb175]

bb47
  0: StorageLive(_70)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:72-481:73)
  1: _70 = move ((_61 as Break).0: core::result::Result<core::convert::Infallible, meta::error::BuildError>)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:72-481:73)
  2: StorageLive(_72)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:72-481:73)
  3: _72 = move _70
    SourceInfo(regex-automata/src/meta/strategy.rs:481:72-481:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:13-481:73)
      kind: _0 = <core::result::Result<meta::strategy::Core, meta::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, meta::error::BuildError>>>::from_residual(move _72) -> [return: bb48, unwind: bb173]
  }
  preds [bb45]
  succs [bb48, bb173]

bb48
  0: StorageDead(_72)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:72-481:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:72-481:73)
      kind: drop(_70) -> [return: bb131, unwind: bb175]
  }
  preds [bb47]
  succs [bb131, bb175]

bb49
  0: StorageDead(_73)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:72-481:73)
  1: FakeRead(ForLet(None), _60)
    SourceInfo(regex-automata/src/meta/strategy.rs:480:13-480:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:73-481:74)
      kind: drop(_61) -> [return: bb50, unwind: bb172]
  }
  preds [bb46]
  succs [bb50, bb172]

bb50
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:73-481:74)
  1: StorageDead(_64)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:73-481:74)
  2: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:73-481:74)
  3: StorageLive(_74)
    SourceInfo(regex-automata/src/meta/strategy.rs:486:13-486:20)
  4: StorageLive(_75)
    SourceInfo(regex-automata/src/meta/strategy.rs:486:46-486:51)
  5: StorageLive(_76)
    SourceInfo(regex-automata/src/meta/strategy.rs:486:46-486:51)
  6: _76 = &_1
    SourceInfo(regex-automata/src/meta/strategy.rs:486:46-486:51)
  7: _75 = &(*_76)
    SourceInfo(regex-automata/src/meta/strategy.rs:486:46-486:51)
  8: StorageLive(_77)
    SourceInfo(regex-automata/src/meta/strategy.rs:486:53-486:57)
  9: StorageLive(_78)
    SourceInfo(regex-automata/src/meta/strategy.rs:486:53-486:57)
  10: _78 = &_30
    SourceInfo(regex-automata/src/meta/strategy.rs:486:53-486:57)
  11: _77 = &(*_78)
    SourceInfo(regex-automata/src/meta/strategy.rs:486:53-486:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:486:23-486:58)
      kind: _74 = meta::wrappers::OnePass::new(move _75, move _77) -> [return: bb51, unwind: bb172]
  }
  preds [bb49]
  succs [bb51, bb172]

bb51
  0: StorageDead(_77)
    SourceInfo(regex-automata/src/meta/strategy.rs:486:57-486:58)
  1: StorageDead(_75)
    SourceInfo(regex-automata/src/meta/strategy.rs:486:57-486:58)
  2: FakeRead(ForLet(None), _74)
    SourceInfo(regex-automata/src/meta/strategy.rs:486:13-486:20)
  3: StorageDead(_78)
    SourceInfo(regex-automata/src/meta/strategy.rs:486:58-486:59)
  4: StorageDead(_76)
    SourceInfo(regex-automata/src/meta/strategy.rs:486:58-486:59)
  5: StorageLive(_82)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:13-535:14)
  6: StorageLive(_83)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:17-494:43)
  7: StorageLive(_84)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:17-494:30)
  8: StorageLive(_85)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:17-494:30)
  9: StorageLive(_86)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:17-494:21)
  10: _86 = &_1
    SourceInfo(regex-automata/src/meta/strategy.rs:494:17-494:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:494:17-494:30)
      kind: _85 = meta::regex::RegexInfo::config(move _86) -> [return: bb52, unwind: bb171]
  }
  preds [bb50]
  succs [bb52, bb171]

bb52
  0: _84 = &(*_85)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:17-494:30)
  1: StorageDead(_86)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:29-494:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:494:17-494:43)
      kind: _83 = meta::regex::Config::get_hybrid(move _84) -> [return: bb53, unwind: bb171]
  }
  preds [bb51]
  succs [bb53, bb171]

bb53
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:494:17-494:43)
      kind: switchInt(move _83) -> [0: bb55, otherwise: bb54]
  }
  preds [bb52]
  succs [bb54, bb55]

bb54
  0: StorageDead(_84)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:42-494:43)
  1: StorageDead(_85)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:42-494:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb65
  }
  preds [bb53]
  succs [bb65]

bb55
  0: StorageDead(_84)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:42-494:43)
  1: StorageDead(_85)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:42-494:43)
  2: StorageLive(_87)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:48-494:71)
  3: StorageLive(_88)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:48-494:61)
  4: StorageLive(_89)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:48-494:61)
  5: StorageLive(_90)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:48-494:52)
  6: _90 = &_1
    SourceInfo(regex-automata/src/meta/strategy.rs:494:48-494:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:494:48-494:61)
      kind: _89 = meta::regex::RegexInfo::config(move _90) -> [return: bb56, unwind: bb171]
  }
  preds [bb53]
  succs [bb56, bb171]

bb56
  0: _88 = &(*_89)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:48-494:61)
  1: StorageDead(_90)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:60-494:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:494:48-494:71)
      kind: _87 = meta::regex::Config::get_dfa(move _88) -> [return: bb57, unwind: bb171]
  }
  preds [bb55]
  succs [bb57, bb171]

bb57
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:494:48-494:71)
      kind: switchInt(move _87) -> [0: bb59, otherwise: bb58]
  }
  preds [bb56]
  succs [bb58, bb59]

bb58
  0: StorageDead(_88)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:70-494:71)
  1: StorageDead(_89)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:70-494:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb65
  }
  preds [bb57]
  succs [bb65]

bb59
  0: StorageDead(_88)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:70-494:71)
  1: StorageDead(_89)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:70-494:71)
  2: StorageLive(_91)
    SourceInfo(regex-automata/src/meta/strategy.rs:495:18-495:22)
  3: _91 = core::option::Option::<nfa::thompson::nfa::NFA>::None
    SourceInfo(regex-automata/src/meta/strategy.rs:495:18-495:22)
  4: StorageLive(_92)
    SourceInfo(regex-automata/src/meta/strategy.rs:495:24-495:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:495:24-495:48)
      kind: _92 = meta::wrappers::Hybrid::none() -> [return: bb60, unwind: bb170]
  }
  preds [bb57]
  succs [bb60, bb170]

bb60
  0: StorageLive(_93)
    SourceInfo(regex-automata/src/meta/strategy.rs:495:50-495:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:495:50-495:71)
      kind: _93 = meta::wrappers::DFA::none() -> [return: bb61, unwind: bb169]
  }
  preds [bb59]
  succs [bb61, bb169]

bb61
  0: _82 = (move _91, move _92, move _93)
    SourceInfo(regex-automata/src/meta/strategy.rs:495:17-495:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:495:71-495:72)
      kind: drop(_93) -> [return: bb62, unwind: bb169]
  }
  preds [bb60]
  succs [bb62, bb169]

bb62
  0: StorageDead(_93)
    SourceInfo(regex-automata/src/meta/strategy.rs:495:71-495:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:495:71-495:72)
      kind: drop(_92) -> [return: bb63, unwind: bb170]
  }
  preds [bb61]
  succs [bb63, bb170]

bb63
  0: StorageDead(_92)
    SourceInfo(regex-automata/src/meta/strategy.rs:495:71-495:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:495:71-495:72)
      kind: drop(_91) -> [return: bb64, unwind: bb171]
  }
  preds [bb62]
  succs [bb64, bb171]

bb64
  0: StorageDead(_91)
    SourceInfo(regex-automata/src/meta/strategy.rs:495:71-495:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:494:13-535:14)
      kind: goto -> bb107
  }
  preds [bb63]
  succs [bb107]

bb65
  0: StorageLive(_94)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:21-507:27)
  1: StorageLive(_95)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-520:47)
  2: StorageLive(_96)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-520:46)
  3: StorageLive(_97)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-519:47)
  4: StorageLive(_98)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-518:22)
  5: StorageLive(_99)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-518:22)
  6: StorageLive(_100)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-507:55)
  7: StorageLive(_101)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-507:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:507:30-507:55)
      kind: _101 = nfa::thompson::compiler::Compiler::new() -> [return: bb66, unwind: bb171]
  }
  preds [bb54, bb58]
  succs [bb66, bb171]

bb66
  0: _100 = &mut _101
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-507:55)
  1: StorageLive(_102)
    SourceInfo(regex-automata/src/meta/strategy.rs:514:25-517:43)
  2: StorageLive(_103)
    SourceInfo(regex-automata/src/meta/strategy.rs:514:25-516:65)
  3: StorageLive(_104)
    SourceInfo(regex-automata/src/meta/strategy.rs:514:25-515:37)
  4: StorageLive(_105)
    SourceInfo(regex-automata/src/meta/strategy.rs:514:25-514:40)
  5: _105 = &_11
    SourceInfo(regex-automata/src/meta/strategy.rs:514:25-514:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:514:25-515:37)
      kind: _104 = <nfa::thompson::compiler::Config as core::clone::Clone>::clone(move _105) -> [return: bb67, unwind: bb168]
  }
  preds [bb65]
  succs [bb67, bb168]

bb67
  0: StorageDead(_105)
    SourceInfo(regex-automata/src/meta/strategy.rs:515:36-515:37)
  1: StorageLive(_106)
    SourceInfo(regex-automata/src/meta/strategy.rs:516:45-516:64)
  2: _106 = nfa::thompson::compiler::WhichCaptures::None
    SourceInfo(regex-automata/src/meta/strategy.rs:516:45-516:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:514:25-516:65)
      kind: _103 = nfa::thompson::compiler::Config::which_captures(move _104, move _106) -> [return: bb68, unwind: bb168]
  }
  preds [bb66]
  succs [bb68, bb168]

bb68
  0: StorageDead(_106)
    SourceInfo(regex-automata/src/meta/strategy.rs:516:64-516:65)
  1: StorageDead(_104)
    SourceInfo(regex-automata/src/meta/strategy.rs:516:64-516:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:514:25-517:43)
      kind: _102 = nfa::thompson::compiler::Config::reverse(move _103, const true) -> [return: bb69, unwind: bb168]
  }
  preds [bb67]
  succs [bb69, bb168]

bb69
  0: StorageDead(_103)
    SourceInfo(regex-automata/src/meta/strategy.rs:517:42-517:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:507:30-518:22)
      kind: _99 = nfa::thompson::compiler::Compiler::configure(move _100, move _102) -> [return: bb70, unwind: bb168]
  }
  preds [bb68]
  succs [bb70, bb168]

bb70
  0: _98 = &(*_99)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-518:22)
  1: StorageDead(_102)
    SourceInfo(regex-automata/src/meta/strategy.rs:518:21-518:22)
  2: StorageDead(_100)
    SourceInfo(regex-automata/src/meta/strategy.rs:518:21-518:22)
  3: StorageLive(_107)
    SourceInfo(regex-automata/src/meta/strategy.rs:519:42-519:46)
  4: _107 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:519:42-519:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:507:30-519:47)
      kind: _97 = nfa::thompson::compiler::Compiler::build_many_from_hir::<&regex_syntax::hir::Hir>(move _98, move _107) -> [return: bb71, unwind: bb168]
  }
  preds [bb69]
  succs [bb71, bb168]

bb71
  0: StorageDead(_107)
    SourceInfo(regex-automata/src/meta/strategy.rs:519:46-519:47)
  1: StorageDead(_98)
    SourceInfo(regex-automata/src/meta/strategy.rs:519:46-519:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:507:30-520:46)
      kind: _96 = core::result::Result::<nfa::thompson::nfa::NFA, nfa::thompson::error::BuildError>::map_err::<meta::error::BuildError, fn(nfa::thompson::error::BuildError) -> meta::error::BuildError {meta::error::BuildError::nfa}>(move _97, meta::error::BuildError::nfa) -> [return: bb72, unwind: bb167]
  }
  preds [bb70]
  succs [bb72, bb167]

bb72
  0: StorageDead(_97)
    SourceInfo(regex-automata/src/meta/strategy.rs:520:45-520:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:507:30-520:47)
      kind: _95 = <core::result::Result<nfa::thompson::nfa::NFA, meta::error::BuildError> as core::ops::Try>::branch(move _96) -> [return: bb73, unwind: bb166]
  }
  preds [bb71]
  succs [bb73, bb166]

bb73
  0: StorageDead(_96)
    SourceInfo(regex-automata/src/meta/strategy.rs:520:46-520:47)
  1: PlaceMention(_95)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-520:47)
  2: _108 = discriminant(_95)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-520:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:507:30-520:47)
      kind: switchInt(move _108) -> [0: bb76, 1: bb75, otherwise: bb74]
  }
  preds [bb72]
  succs [bb74, bb75, bb76]

bb74
  0: FakeRead(ForMatchedPlace(None), _95)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-520:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:507:30-520:47)
      kind: unreachable
  }
  preds [bb73]
  succs []

bb75
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:520:46-520:47)
      kind: falseEdge -> [real: bb77, imaginary: bb76]
  }
  preds [bb73]
  succs [bb76, bb77]

bb76
  0: StorageLive(_112)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-520:47)
  1: _112 = move ((_95 as Continue).0: nfa::thompson::nfa::NFA)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-520:47)
  2: _94 = move _112
    SourceInfo(regex-automata/src/meta/strategy.rs:507:30-520:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:520:46-520:47)
      kind: drop(_112) -> [return: bb79, unwind: bb165]
  }
  preds [bb73, bb75]
  succs [bb79, bb165]

bb77
  0: StorageLive(_109)
    SourceInfo(regex-automata/src/meta/strategy.rs:520:46-520:47)
  1: _109 = move ((_95 as Break).0: core::result::Result<core::convert::Infallible, meta::error::BuildError>)
    SourceInfo(regex-automata/src/meta/strategy.rs:520:46-520:47)
  2: StorageLive(_111)
    SourceInfo(regex-automata/src/meta/strategy.rs:520:46-520:47)
  3: _111 = move _109
    SourceInfo(regex-automata/src/meta/strategy.rs:520:46-520:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:507:30-520:47)
      kind: _0 = <core::result::Result<meta::strategy::Core, meta::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, meta::error::BuildError>>>::from_residual(move _111) -> [return: bb78, unwind: bb163]
  }
  preds [bb75]
  succs [bb78, bb163]

bb78
  0: StorageDead(_111)
    SourceInfo(regex-automata/src/meta/strategy.rs:520:46-520:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:520:46-520:47)
      kind: drop(_109) -> [return: bb127, unwind: bb165]
  }
  preds [bb77]
  succs [bb127, bb165]

bb79
  0: StorageDead(_112)
    SourceInfo(regex-automata/src/meta/strategy.rs:520:46-520:47)
  1: FakeRead(ForLet(None), _94)
    SourceInfo(regex-automata/src/meta/strategy.rs:507:21-507:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:520:47-520:48)
      kind: drop(_95) -> [return: bb80, unwind: bb161]
  }
  preds [bb76]
  succs [bb80, bb161]

bb80
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:520:47-520:48)
      kind: drop(_101) -> [return: bb81, unwind: bb162]
  }
  preds [bb79]
  succs [bb81, bb162]

bb81
  0: StorageDead(_101)
    SourceInfo(regex-automata/src/meta/strategy.rs:520:47-520:48)
  1: StorageDead(_99)
    SourceInfo(regex-automata/src/meta/strategy.rs:520:47-520:48)
  2: StorageDead(_95)
    SourceInfo(regex-automata/src/meta/strategy.rs:520:47-520:48)
  3: StorageLive(_113)
    SourceInfo(regex-automata/src/meta/strategy.rs:521:21-521:24)
  4: StorageLive(_114)
    SourceInfo(regex-automata/src/meta/strategy.rs:521:31-521:54)
  5: StorageLive(_115)
    SourceInfo(regex-automata/src/meta/strategy.rs:521:31-521:44)
  6: StorageLive(_116)
    SourceInfo(regex-automata/src/meta/strategy.rs:521:31-521:44)
  7: StorageLive(_117)
    SourceInfo(regex-automata/src/meta/strategy.rs:521:31-521:35)
  8: _117 = &_1
    SourceInfo(regex-automata/src/meta/strategy.rs:521:31-521:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:521:31-521:44)
      kind: _116 = meta::regex::RegexInfo::config(move _117) -> [return: bb82, unwind: bb162]
  }
  preds [bb80]
  succs [bb82, bb162]

bb82
  0: _115 = &(*_116)
    SourceInfo(regex-automata/src/meta/strategy.rs:521:31-521:44)
  1: StorageDead(_117)
    SourceInfo(regex-automata/src/meta/strategy.rs:521:43-521:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:521:31-521:54)
      kind: _114 = meta::regex::Config::get_dfa(move _115) -> [return: bb83, unwind: bb162]
  }
  preds [bb81]
  succs [bb83, bb162]

bb83
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:521:31-521:54)
      kind: switchInt(move _114) -> [0: bb85, otherwise: bb84]
  }
  preds [bb82]
  succs [bb84, bb85]

bb84
  0: StorageDead(_115)
    SourceInfo(regex-automata/src/meta/strategy.rs:521:53-521:54)
  1: StorageDead(_116)
    SourceInfo(regex-automata/src/meta/strategy.rs:521:53-521:54)
  2: StorageLive(_118)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:40-524:45)
  3: StorageLive(_119)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:40-524:45)
  4: _119 = &_1
    SourceInfo(regex-automata/src/meta/strategy.rs:524:40-524:45)
  5: _118 = &(*_119)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:40-524:45)
  6: StorageLive(_120)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:47-524:58)
  7: StorageLive(_121)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:47-524:50)
  8: _121 = &_2
    SourceInfo(regex-automata/src/meta/strategy.rs:524:47-524:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:524:47-524:58)
      kind: _120 = <core::option::Option<util::prefilter::Prefilter> as core::clone::Clone>::clone(move _121) -> [return: bb86, unwind: bb162]
  }
  preds [bb83]
  succs [bb86, bb162]

bb85
  0: StorageDead(_115)
    SourceInfo(regex-automata/src/meta/strategy.rs:521:53-521:54)
  1: StorageDead(_116)
    SourceInfo(regex-automata/src/meta/strategy.rs:521:53-521:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:522:21-522:42)
      kind: _113 = meta::wrappers::DFA::none() -> [return: bb88, unwind: bb162]
  }
  preds [bb83]
  succs [bb88, bb162]

bb86
  0: StorageDead(_121)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:57-524:58)
  1: StorageLive(_122)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:60-524:64)
  2: StorageLive(_123)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:60-524:64)
  3: _123 = &_30
    SourceInfo(regex-automata/src/meta/strategy.rs:524:60-524:64)
  4: _122 = &(*_123)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:60-524:64)
  5: StorageLive(_124)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:66-524:73)
  6: StorageLive(_125)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:66-524:73)
  7: _125 = &_94
    SourceInfo(regex-automata/src/meta/strategy.rs:524:66-524:73)
  8: _124 = &(*_125)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:66-524:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:524:21-524:74)
      kind: _113 = meta::wrappers::DFA::new(move _118, move _120, move _122, move _124) -> [return: bb87, unwind: bb160]
  }
  preds [bb84]
  succs [bb87, bb160]

bb87
  0: StorageDead(_124)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:73-524:74)
  1: StorageDead(_122)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:73-524:74)
  2: StorageDead(_120)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:73-524:74)
  3: StorageDead(_118)
    SourceInfo(regex-automata/src/meta/strategy.rs:524:73-524:74)
  4: StorageDead(_125)
    SourceInfo(regex-automata/src/meta/strategy.rs:525:17-525:18)
  5: StorageDead(_123)
    SourceInfo(regex-automata/src/meta/strategy.rs:525:17-525:18)
  6: StorageDead(_119)
    SourceInfo(regex-automata/src/meta/strategy.rs:525:17-525:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:521:27-525:18)
      kind: goto -> bb88
  }
  preds [bb86]
  succs [bb88]

bb88
  0: StorageDead(_114)
    SourceInfo(regex-automata/src/meta/strategy.rs:525:17-525:18)
  1: FakeRead(ForLet(None), _113)
    SourceInfo(regex-automata/src/meta/strategy.rs:521:21-521:24)
  2: StorageLive(_126)
    SourceInfo(regex-automata/src/meta/strategy.rs:526:21-526:27)
  3: StorageLive(_127)
    SourceInfo(regex-automata/src/meta/strategy.rs:526:34-526:60)
  4: StorageLive(_128)
    SourceInfo(regex-automata/src/meta/strategy.rs:526:34-526:47)
  5: StorageLive(_129)
    SourceInfo(regex-automata/src/meta/strategy.rs:526:34-526:47)
  6: StorageLive(_130)
    SourceInfo(regex-automata/src/meta/strategy.rs:526:34-526:38)
  7: _130 = &_1
    SourceInfo(regex-automata/src/meta/strategy.rs:526:34-526:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:526:34-526:47)
      kind: _129 = meta::regex::RegexInfo::config(move _130) -> [return: bb89, unwind: bb159]
  }
  preds [bb85, bb87]
  succs [bb89, bb159]

bb89
  0: _128 = &(*_129)
    SourceInfo(regex-automata/src/meta/strategy.rs:526:34-526:47)
  1: StorageDead(_130)
    SourceInfo(regex-automata/src/meta/strategy.rs:526:46-526:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:526:34-526:60)
      kind: _127 = meta::regex::Config::get_hybrid(move _128) -> [return: bb90, unwind: bb159]
  }
  preds [bb88]
  succs [bb90, bb159]

bb90
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:526:34-526:60)
      kind: switchInt(move _127) -> [0: bb92, otherwise: bb91]
  }
  preds [bb89]
  succs [bb91, bb92]

bb91
  0: StorageDead(_128)
    SourceInfo(regex-automata/src/meta/strategy.rs:526:59-526:60)
  1: StorageDead(_129)
    SourceInfo(regex-automata/src/meta/strategy.rs:526:59-526:60)
  2: StorageLive(_131)
    SourceInfo(regex-automata/src/meta/strategy.rs:528:27-528:40)
  3: StorageLive(_132)
    SourceInfo(regex-automata/src/meta/strategy.rs:528:27-528:30)
  4: _132 = &_113
    SourceInfo(regex-automata/src/meta/strategy.rs:528:27-528:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:528:27-528:40)
      kind: _131 = meta::wrappers::DFA::is_some(move _132) -> [return: bb93, unwind: bb159]
  }
  preds [bb90]
  succs [bb93, bb159]

bb92
  0: StorageDead(_128)
    SourceInfo(regex-automata/src/meta/strategy.rs:526:59-526:60)
  1: StorageDead(_129)
    SourceInfo(regex-automata/src/meta/strategy.rs:526:59-526:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:527:21-527:45)
      kind: _126 = meta::wrappers::Hybrid::none() -> [return: bb99, unwind: bb159]
  }
  preds [bb90]
  succs [bb99, bb159]

bb93
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:528:27-528:40)
      kind: switchInt(move _131) -> [0: bb95, otherwise: bb94]
  }
  preds [bb91]
  succs [bb94, bb95]

bb94
  0: StorageDead(_132)
    SourceInfo(regex-automata/src/meta/strategy.rs:528:39-528:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:530:21-530:45)
      kind: _126 = meta::wrappers::Hybrid::none() -> [return: bb98, unwind: bb159]
  }
  preds [bb93]
  succs [bb98, bb159]

bb95
  0: StorageDead(_132)
    SourceInfo(regex-automata/src/meta/strategy.rs:528:39-528:40)
  1: StorageLive(_133)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:43-532:48)
  2: StorageLive(_134)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:43-532:48)
  3: _134 = &_1
    SourceInfo(regex-automata/src/meta/strategy.rs:532:43-532:48)
  4: _133 = &(*_134)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:43-532:48)
  5: StorageLive(_135)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:50-532:61)
  6: StorageLive(_136)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:50-532:53)
  7: _136 = &_2
    SourceInfo(regex-automata/src/meta/strategy.rs:532:50-532:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:532:50-532:61)
      kind: _135 = <core::option::Option<util::prefilter::Prefilter> as core::clone::Clone>::clone(move _136) -> [return: bb96, unwind: bb159]
  }
  preds [bb93]
  succs [bb96, bb159]

bb96
  0: StorageDead(_136)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:60-532:61)
  1: StorageLive(_137)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:63-532:67)
  2: StorageLive(_138)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:63-532:67)
  3: _138 = &_30
    SourceInfo(regex-automata/src/meta/strategy.rs:532:63-532:67)
  4: _137 = &(*_138)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:63-532:67)
  5: StorageLive(_139)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:69-532:76)
  6: StorageLive(_140)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:69-532:76)
  7: _140 = &_94
    SourceInfo(regex-automata/src/meta/strategy.rs:532:69-532:76)
  8: _139 = &(*_140)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:69-532:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:532:21-532:77)
      kind: _126 = meta::wrappers::Hybrid::new(move _133, move _135, move _137, move _139) -> [return: bb97, unwind: bb158]
  }
  preds [bb95]
  succs [bb97, bb158]

bb97
  0: StorageDead(_139)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:76-532:77)
  1: StorageDead(_137)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:76-532:77)
  2: StorageDead(_135)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:76-532:77)
  3: StorageDead(_133)
    SourceInfo(regex-automata/src/meta/strategy.rs:532:76-532:77)
  4: StorageDead(_140)
    SourceInfo(regex-automata/src/meta/strategy.rs:533:17-533:18)
  5: StorageDead(_138)
    SourceInfo(regex-automata/src/meta/strategy.rs:533:17-533:18)
  6: StorageDead(_134)
    SourceInfo(regex-automata/src/meta/strategy.rs:533:17-533:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:528:24-533:18)
      kind: goto -> bb98
  }
  preds [bb96]
  succs [bb98]

bb98
  0: StorageDead(_131)
    SourceInfo(regex-automata/src/meta/strategy.rs:533:17-533:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:526:30-533:18)
      kind: goto -> bb99
  }
  preds [bb94, bb97]
  succs [bb99]

bb99
  0: StorageDead(_127)
    SourceInfo(regex-automata/src/meta/strategy.rs:533:17-533:18)
  1: FakeRead(ForLet(None), _126)
    SourceInfo(regex-automata/src/meta/strategy.rs:526:21-526:27)
  2: StorageLive(_141)
    SourceInfo(regex-automata/src/meta/strategy.rs:534:18-534:30)
  3: StorageLive(_142)
    SourceInfo(regex-automata/src/meta/strategy.rs:534:23-534:29)
  4: _142 = move _94
    SourceInfo(regex-automata/src/meta/strategy.rs:534:23-534:29)
  5: _141 = core::option::Option::<nfa::thompson::nfa::NFA>::Some(move _142)
    SourceInfo(regex-automata/src/meta/strategy.rs:534:18-534:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:534:29-534:30)
      kind: drop(_142) -> [return: bb100, unwind: bb156]
  }
  preds [bb92, bb98]
  succs [bb100, bb156]

bb100
  0: StorageDead(_142)
    SourceInfo(regex-automata/src/meta/strategy.rs:534:29-534:30)
  1: StorageLive(_143)
    SourceInfo(regex-automata/src/meta/strategy.rs:534:32-534:38)
  2: _143 = move _126
    SourceInfo(regex-automata/src/meta/strategy.rs:534:32-534:38)
  3: StorageLive(_144)
    SourceInfo(regex-automata/src/meta/strategy.rs:534:40-534:43)
  4: _144 = move _113
    SourceInfo(regex-automata/src/meta/strategy.rs:534:40-534:43)
  5: _82 = (move _141, move _143, move _144)
    SourceInfo(regex-automata/src/meta/strategy.rs:534:17-534:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:534:43-534:44)
      kind: drop(_144) -> [return: bb101, unwind: bb155]
  }
  preds [bb99]
  succs [bb101, bb155]

bb101
  0: StorageDead(_144)
    SourceInfo(regex-automata/src/meta/strategy.rs:534:43-534:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:534:43-534:44)
      kind: drop(_143) -> [return: bb102, unwind: bb156]
  }
  preds [bb100]
  succs [bb102, bb156]

bb102
  0: StorageDead(_143)
    SourceInfo(regex-automata/src/meta/strategy.rs:534:43-534:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:534:43-534:44)
      kind: drop(_141) -> [return: bb103, unwind: bb157]
  }
  preds [bb101]
  succs [bb103, bb157]

bb103
  0: StorageDead(_141)
    SourceInfo(regex-automata/src/meta/strategy.rs:534:43-534:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:535:13-535:14)
      kind: drop(_126) -> [return: bb104, unwind: bb159]
  }
  preds [bb102]
  succs [bb104, bb159]

bb104
  0: StorageDead(_126)
    SourceInfo(regex-automata/src/meta/strategy.rs:535:13-535:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:535:13-535:14)
      kind: drop(_113) -> [return: bb105, unwind: bb162]
  }
  preds [bb103]
  succs [bb105, bb162]

bb105
  0: StorageDead(_113)
    SourceInfo(regex-automata/src/meta/strategy.rs:535:13-535:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:535:13-535:14)
      kind: drop(_94) -> [return: bb106, unwind: bb171]
  }
  preds [bb104]
  succs [bb106, bb171]

bb106
  0: StorageDead(_94)
    SourceInfo(regex-automata/src/meta/strategy.rs:535:13-535:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:494:13-535:14)
      kind: goto -> bb107
  }
  preds [bb105]
  succs [bb107]

bb107
  0: StorageDead(_87)
    SourceInfo(regex-automata/src/meta/strategy.rs:535:13-535:14)
  1: StorageDead(_83)
    SourceInfo(regex-automata/src/meta/strategy.rs:535:13-535:14)
  2: PlaceMention(_82)
    SourceInfo(regex-automata/src/meta/strategy.rs:494:13-535:14)
  3: StorageLive(_79)
    SourceInfo(regex-automata/src/meta/strategy.rs:493:14-493:20)
  4: _79 = move (_82.0: core::option::Option<nfa::thompson::nfa::NFA>)
    SourceInfo(regex-automata/src/meta/strategy.rs:493:14-493:20)
  5: StorageLive(_80)
    SourceInfo(regex-automata/src/meta/strategy.rs:493:22-493:28)
  6: _80 = move (_82.1: meta::wrappers::Hybrid)
    SourceInfo(regex-automata/src/meta/strategy.rs:493:22-493:28)
  7: StorageLive(_81)
    SourceInfo(regex-automata/src/meta/strategy.rs:493:30-493:33)
  8: _81 = move (_82.2: meta::wrappers::DFA)
    SourceInfo(regex-automata/src/meta/strategy.rs:493:30-493:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:535:14-535:15)
      kind: drop(_82) -> [return: bb108, unwind: bb152]
  }
  preds [bb64, bb106]
  succs [bb108, bb152]

bb108
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/meta/strategy.rs:535:14-535:15)
  1: StorageLive(_145)
    SourceInfo(regex-automata/src/meta/strategy.rs:536:12-546:10)
  2: StorageLive(_146)
    SourceInfo(regex-automata/src/meta/strategy.rs:537:13-537:17)
  3: _146 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:537:13-537:17)
  4: StorageLive(_147)
    SourceInfo(regex-automata/src/meta/strategy.rs:538:13-538:16)
  5: _147 = move _2
    SourceInfo(regex-automata/src/meta/strategy.rs:538:13-538:16)
  6: StorageLive(_148)
    SourceInfo(regex-automata/src/meta/strategy.rs:539:13-539:16)
  7: _148 = move _30
    SourceInfo(regex-automata/src/meta/strategy.rs:539:13-539:16)
  8: StorageLive(_149)
    SourceInfo(regex-automata/src/meta/strategy.rs:540:13-540:19)
  9: _149 = move _79
    SourceInfo(regex-automata/src/meta/strategy.rs:540:13-540:19)
  10: StorageLive(_150)
    SourceInfo(regex-automata/src/meta/strategy.rs:541:13-541:19)
  11: _150 = move _46
    SourceInfo(regex-automata/src/meta/strategy.rs:541:13-541:19)
  12: StorageLive(_151)
    SourceInfo(regex-automata/src/meta/strategy.rs:542:13-542:22)
  13: _151 = move _60
    SourceInfo(regex-automata/src/meta/strategy.rs:542:13-542:22)
  14: StorageLive(_152)
    SourceInfo(regex-automata/src/meta/strategy.rs:543:13-543:20)
  15: _152 = move _74
    SourceInfo(regex-automata/src/meta/strategy.rs:543:13-543:20)
  16: StorageLive(_153)
    SourceInfo(regex-automata/src/meta/strategy.rs:544:13-544:19)
  17: _153 = move _80
    SourceInfo(regex-automata/src/meta/strategy.rs:544:13-544:19)
  18: StorageLive(_154)
    SourceInfo(regex-automata/src/meta/strategy.rs:545:13-545:16)
  19: _154 = move _81
    SourceInfo(regex-automata/src/meta/strategy.rs:545:13-545:16)
  20: _145 = meta::strategy::Core { info: move _146, pre: move _147, nfa: move _148, nfarev: move _149, pikevm: move _150, backtrack: move _151, onepass: move _152, hybrid: move _153, dfa: move _154 }
    SourceInfo(regex-automata/src/meta/strategy.rs:536:12-546:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_154) -> [return: bb109, unwind: bb143]
  }
  preds [bb107]
  succs [bb109, bb143]

bb109
  0: StorageDead(_154)
    SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_153) -> [return: bb110, unwind: bb144]
  }
  preds [bb108]
  succs [bb110, bb144]

bb110
  0: StorageDead(_153)
    SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_152) -> [return: bb111, unwind: bb145]
  }
  preds [bb109]
  succs [bb111, bb145]

bb111
  0: StorageDead(_152)
    SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_151) -> [return: bb112, unwind: bb146]
  }
  preds [bb110]
  succs [bb112, bb146]

bb112
  0: StorageDead(_151)
    SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_150) -> [return: bb113, unwind: bb147]
  }
  preds [bb111]
  succs [bb113, bb147]

bb113
  0: StorageDead(_150)
    SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_149) -> [return: bb114, unwind: bb148]
  }
  preds [bb112]
  succs [bb114, bb148]

bb114
  0: StorageDead(_149)
    SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_148) -> [return: bb115, unwind: bb149]
  }
  preds [bb113]
  succs [bb115, bb149]

bb115
  0: StorageDead(_148)
    SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_147) -> [return: bb116, unwind: bb150]
  }
  preds [bb114]
  succs [bb116, bb150]

bb116
  0: StorageDead(_147)
    SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_146) -> [return: bb117, unwind: bb151]
  }
  preds [bb115]
  succs [bb117, bb151]

bb117
  0: StorageDead(_146)
    SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
  1: _0 = core::result::Result::<meta::strategy::Core, meta::error::BuildError>::Ok(move _145)
    SourceInfo(regex-automata/src/meta/strategy.rs:536:9-546:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:10-546:11)
      kind: drop(_145) -> [return: bb118, unwind: bb152]
  }
  preds [bb116]
  succs [bb118, bb152]

bb118
  0: StorageDead(_145)
    SourceInfo(regex-automata/src/meta/strategy.rs:546:10-546:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_81) -> [return: bb119, unwind: bb153]
  }
  preds [bb117]
  succs [bb119, bb153]

bb119
  0: StorageDead(_81)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_80) -> [return: bb120, unwind: bb154]
  }
  preds [bb118]
  succs [bb120, bb154]

bb120
  0: StorageDead(_80)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_79) -> [return: bb121, unwind: bb171]
  }
  preds [bb119]
  succs [bb121, bb171]

bb121
  0: StorageDead(_79)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_74) -> [return: bb122, unwind: bb172]
  }
  preds [bb120]
  succs [bb122, bb172]

bb122
  0: StorageDead(_74)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_60) -> [return: bb123, unwind: bb178]
  }
  preds [bb121]
  succs [bb123, bb178]

bb123
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_46) -> [return: bb124, unwind: bb185]
  }
  preds [bb122]
  succs [bb124, bb185]

bb124
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_30) -> [return: bb125, unwind: bb192]
  }
  preds [bb123]
  succs [bb125, bb192]

bb125
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_2) -> [return: bb126, unwind: bb193]
  }
  preds [bb124]
  succs [bb126, bb193]

bb126
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_1) -> [return: bb142, unwind: bb194]
  }
  preds [bb125]
  succs [bb142, bb194]

bb127
  0: StorageDead(_109)
    SourceInfo(regex-automata/src/meta/strategy.rs:520:46-520:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:520:47-520:48)
      kind: drop(_95) -> [return: bb128, unwind: bb168]
  }
  preds [bb78]
  succs [bb128, bb168]

bb128
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:520:47-520:48)
      kind: drop(_101) -> [return: bb129, unwind: bb171]
  }
  preds [bb127]
  succs [bb129, bb171]

bb129
  0: StorageDead(_101)
    SourceInfo(regex-automata/src/meta/strategy.rs:520:47-520:48)
  1: StorageDead(_99)
    SourceInfo(regex-automata/src/meta/strategy.rs:520:47-520:48)
  2: StorageDead(_95)
    SourceInfo(regex-automata/src/meta/strategy.rs:520:47-520:48)
  3: StorageDead(_94)
    SourceInfo(regex-automata/src/meta/strategy.rs:535:13-535:14)
  4: StorageDead(_87)
    SourceInfo(regex-automata/src/meta/strategy.rs:535:13-535:14)
  5: StorageDead(_83)
    SourceInfo(regex-automata/src/meta/strategy.rs:535:13-535:14)
  6: StorageDead(_82)
    SourceInfo(regex-automata/src/meta/strategy.rs:535:14-535:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_74) -> [return: bb130, unwind: bb172]
  }
  preds [bb128]
  succs [bb130, bb172]

bb130
  0: StorageDead(_74)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_60) -> [return: bb133, unwind: bb178]
  }
  preds [bb129]
  succs [bb133, bb178]

bb131
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:72-481:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:73-481:74)
      kind: drop(_61) -> [return: bb132, unwind: bb178]
  }
  preds [bb48]
  succs [bb132, bb178]

bb132
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:73-481:74)
  1: StorageDead(_64)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:73-481:74)
  2: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:481:73-481:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb133
  }
  preds [bb131]
  succs [bb133]

bb133
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_46) -> [return: bb136, unwind: bb185]
  }
  preds [bb130, bb132]
  succs [bb136, bb185]

bb134
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:69-479:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:70-479:71)
      kind: drop(_47) -> [return: bb135, unwind: bb185]
  }
  preds [bb38]
  succs [bb135, bb185]

bb135
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:70-479:71)
  1: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:70-479:71)
  2: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/strategy.rs:479:70-479:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb136
  }
  preds [bb134]
  succs [bb136]

bb136
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_30) -> [return: bb140, unwind: bb192]
  }
  preds [bb133, bb135]
  succs [bb140, bb192]

bb137
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:472:38-472:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:472:39-472:40)
      kind: drop(_31) -> [return: bb138, unwind: bb191]
  }
  preds [bb27]
  succs [bb138, bb191]

bb138
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:472:39-472:40)
      kind: drop(_37) -> [return: bb139, unwind: bb192]
  }
  preds [bb137]
  succs [bb139, bb192]

bb139
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:472:39-472:40)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:472:39-472:40)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:472:39-472:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb140
  }
  preds [bb138]
  succs [bb140]

bb140
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_2) -> [return: bb141, unwind: bb193]
  }
  preds [bb136, bb139]
  succs [bb141, bb193]

bb141
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_1) -> [return: bb142, unwind: bb194]
  }
  preds [bb140]
  succs [bb142, bb194]

bb142
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:6-547:6)
      kind: return
  }
  preds [bb126, bb141]
  succs []

bb143
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_153) -> [return: bb144, unwind terminate(cleanup)]
  }
  preds [bb108]
  succs [bb144]

bb144
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_152) -> [return: bb145, unwind terminate(cleanup)]
  }
  preds [bb109, bb143]
  succs [bb145]

bb145
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_151) -> [return: bb146, unwind terminate(cleanup)]
  }
  preds [bb110, bb144]
  succs [bb146]

bb146
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_150) -> [return: bb147, unwind terminate(cleanup)]
  }
  preds [bb111, bb145]
  succs [bb147]

bb147
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_149) -> [return: bb148, unwind terminate(cleanup)]
  }
  preds [bb112, bb146]
  succs [bb148]

bb148
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_148) -> [return: bb149, unwind terminate(cleanup)]
  }
  preds [bb113, bb147]
  succs [bb149]

bb149
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_147) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb114, bb148]
  succs [bb150]

bb150
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:9-546:10)
      kind: drop(_146) -> [return: bb151, unwind terminate(cleanup)]
  }
  preds [bb115, bb149]
  succs [bb151]

bb151
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:546:10-546:11)
      kind: drop(_145) -> [return: bb152, unwind terminate(cleanup)]
  }
  preds [bb116, bb150]
  succs [bb152]

bb152
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_81) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb107, bb117, bb151]
  succs [bb153]

bb153
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_80) -> [return: bb154, unwind terminate(cleanup)]
  }
  preds [bb118, bb152]
  succs [bb154]

bb154
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_79) -> [return: bb171, unwind terminate(cleanup)]
  }
  preds [bb119, bb153]
  succs [bb171]

bb155
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:534:43-534:44)
      kind: drop(_143) -> [return: bb156, unwind terminate(cleanup)]
  }
  preds [bb100]
  succs [bb156]

bb156
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:534:43-534:44)
      kind: drop(_141) -> [return: bb157, unwind terminate(cleanup)]
  }
  preds [bb99, bb101, bb155]
  succs [bb157]

bb157
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:535:13-535:14)
      kind: drop(_126) -> [return: bb159, unwind terminate(cleanup)]
  }
  preds [bb102, bb156]
  succs [bb159]

bb158
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:532:76-532:77)
      kind: drop(_135) -> [return: bb159, unwind terminate(cleanup)]
  }
  preds [bb96]
  succs [bb159]

bb159
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:535:13-535:14)
      kind: drop(_113) -> [return: bb162, unwind terminate(cleanup)]
  }
  preds [bb88, bb89, bb91, bb92, bb94, bb95, bb103, bb157, bb158]
  succs [bb162]

bb160
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:524:73-524:74)
      kind: drop(_120) -> [return: bb162, unwind terminate(cleanup)]
  }
  preds [bb86]
  succs [bb162]

bb161
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:520:47-520:48)
      kind: drop(_101) -> [return: bb162, unwind terminate(cleanup)]
  }
  preds [bb79]
  succs [bb162]

bb162
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:535:13-535:14)
      kind: drop(_94) -> [return: bb171, unwind terminate(cleanup)]
  }
  preds [bb80, bb81, bb82, bb84, bb85, bb104, bb159, bb160, bb161]
  succs [bb171]

bb163
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:520:46-520:47)
      kind: drop(_111) -> [return: bb164, unwind terminate(cleanup)]
  }
  preds [bb77]
  succs [bb164]

bb164
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:520:46-520:47)
      kind: drop(_109) -> [return: bb165, unwind terminate(cleanup)]
  }
  preds [bb163]
  succs [bb165]

bb165
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:520:47-520:48)
      kind: drop(_95) -> [return: bb168, unwind terminate(cleanup)]
  }
  preds [bb76, bb78, bb164]
  succs [bb168]

bb166
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:520:46-520:47)
      kind: drop(_96) -> [return: bb168, unwind terminate(cleanup)]
  }
  preds [bb72]
  succs [bb168]

bb167
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:520:45-520:46)
      kind: drop(_97) -> [return: bb168, unwind terminate(cleanup)]
  }
  preds [bb71]
  succs [bb168]

bb168
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:520:47-520:48)
      kind: drop(_101) -> [return: bb171, unwind terminate(cleanup)]
  }
  preds [bb66, bb67, bb68, bb69, bb70, bb127, bb165, bb166, bb167]
  succs [bb171]

bb169
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:495:71-495:72)
      kind: drop(_92) -> [return: bb170, unwind terminate(cleanup)]
  }
  preds [bb60, bb61]
  succs [bb170]

bb170
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:495:71-495:72)
      kind: drop(_91) -> [return: bb171, unwind terminate(cleanup)]
  }
  preds [bb59, bb62, bb169]
  succs [bb171]

bb171
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_74) -> [return: bb172, unwind terminate(cleanup)]
  }
  preds [bb51, bb52, bb55, bb56, bb63, bb65, bb105, bb120, bb128, bb154, bb162, bb168, bb170]
  succs [bb172]

bb172
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_60) -> [return: bb178, unwind terminate(cleanup)]
  }
  preds [bb49, bb50, bb121, bb129, bb171]
  succs [bb178]

bb173
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:72-481:73)
      kind: drop(_72) -> [return: bb174, unwind terminate(cleanup)]
  }
  preds [bb47]
  succs [bb174]

bb174
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:72-481:73)
      kind: drop(_70) -> [return: bb175, unwind terminate(cleanup)]
  }
  preds [bb173]
  succs [bb175]

bb175
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:73-481:74)
      kind: drop(_61) -> [return: bb178, unwind terminate(cleanup)]
  }
  preds [bb46, bb48, bb174]
  succs [bb178]

bb176
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:72-481:73)
      kind: drop(_62) -> [return: bb178, unwind terminate(cleanup)]
  }
  preds [bb42]
  succs [bb178]

bb177
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:481:71-481:72)
      kind: drop(_65) -> [return: bb178, unwind terminate(cleanup)]
  }
  preds [bb41]
  succs [bb178]

bb178
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_46) -> [return: bb185, unwind terminate(cleanup)]
  }
  preds [bb39, bb40, bb122, bb130, bb131, bb172, bb175, bb176, bb177]
  succs [bb185]

bb179
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:69-479:70)
      kind: drop(_58) -> [return: bb180, unwind terminate(cleanup)]
  }
  preds [bb37]
  succs [bb180]

bb180
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:69-479:70)
      kind: drop(_56) -> [return: bb181, unwind terminate(cleanup)]
  }
  preds [bb179]
  succs [bb181]

bb181
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:70-479:71)
      kind: drop(_47) -> [return: bb185, unwind terminate(cleanup)]
  }
  preds [bb36, bb38, bb180]
  succs [bb185]

bb182
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:69-479:70)
      kind: drop(_48) -> [return: bb185, unwind terminate(cleanup)]
  }
  preds [bb32]
  succs [bb185]

bb183
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:479:68-479:69)
      kind: drop(_51) -> [return: bb185, unwind terminate(cleanup)]
  }
  preds [bb31]
  succs [bb185]

bb184
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:472:39-472:40)
      kind: drop(_37) -> [return: bb185, unwind terminate(cleanup)]
  }
  preds [bb28]
  succs [bb185]

bb185
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_30) -> [return: bb192, unwind terminate(cleanup)]
  }
  preds [bb29, bb30, bb123, bb133, bb134, bb178, bb181, bb182, bb183, bb184]
  succs [bb192]

bb186
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:472:38-472:39)
      kind: drop(_44) -> [return: bb187, unwind terminate(cleanup)]
  }
  preds [bb26]
  succs [bb187]

bb187
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:472:38-472:39)
      kind: drop(_42) -> [return: bb188, unwind terminate(cleanup)]
  }
  preds [bb186]
  succs [bb188]

bb188
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:472:39-472:40)
      kind: drop(_31) -> [return: bb191, unwind terminate(cleanup)]
  }
  preds [bb25, bb27, bb187]
  succs [bb191]

bb189
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:472:38-472:39)
      kind: drop(_32) -> [return: bb191, unwind terminate(cleanup)]
  }
  preds [bb21]
  succs [bb191]

bb190
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:472:37-472:38)
      kind: drop(_33) -> [return: bb191, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb191]

bb191
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:472:39-472:40)
      kind: drop(_37) -> [return: bb192, unwind terminate(cleanup)]
  }
  preds [bb17, bb18, bb19, bb137, bb188, bb189, bb190]
  succs [bb192]

bb192
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_2) -> [return: bb193, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb15, bb16, bb124, bb136, bb138, bb185, bb191]
  succs [bb193]

bb193
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:547:5-547:6)
      kind: drop(_1) -> [return: bb194, unwind terminate(cleanup)]
  }
  preds [bb125, bb140, bb192]
  succs [bb194]

bb194
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:456:5-547:6)
      kind: resume
  }
  preds [bb126, bb141, bb193]
  succs []

