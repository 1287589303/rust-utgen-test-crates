bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2156:37)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2155:38)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2154:33)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2153:33)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2152:33)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2151:36)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2150:27)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2149:36)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2148:45)
  9: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2147:37)
  10: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:31-2147:36)
  11: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:31-2147:36)
  12: _13 = const dfa::dense::LABEL
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:31-2147:36)
  13: _12 = &(*_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:31-2147:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2147:37)
      kind: _11 = util::wire::write_label_len(move _12) -> [return: bb1, unwind: bb22]
  }
  preds []
  succs [bb1, bb22]

bb1
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:36-2147:37)
  1: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/dense.rs:2148:11-2148:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2148:11-2148:45)
      kind: _14 = util::wire::write_endianness_check_len() -> [return: bb2, unwind: bb22]
  }
  preds [bb0]
  succs [bb2, bb22]

bb2
  0: _15 = AddWithOverflow(_11, _14)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2148:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2148:45)
      kind: assert(!move (_15.1: bool), "attempt to compute `{} + {}`, which would overflow", move _11, move _14) -> [success: bb3, unwind: bb22]
  }
  preds [bb1]
  succs [bb3, bb22]

bb3
  0: _10 = move (_15.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2148:45)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/dense.rs:2148:44-2148:45)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/dense.rs:2148:44-2148:45)
  3: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:2149:11-2149:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2149:11-2149:36)
      kind: _16 = util::wire::write_version_len() -> [return: bb4, unwind: bb22]
  }
  preds [bb2]
  succs [bb4, bb22]

bb4
  0: _17 = AddWithOverflow(_10, _16)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2149:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2149:36)
      kind: assert(!move (_17.1: bool), "attempt to compute `{} + {}`, which would overflow", move _10, move _16) -> [success: bb5, unwind: bb22]
  }
  preds [bb3]
  succs [bb5, bb22]

bb5
  0: _9 = move (_17.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2149:36)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/dense.rs:2149:35-2149:36)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:2149:35-2149:36)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/dense.rs:2150:11-2150:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2150:11-2150:27)
      kind: _18 = core::mem::size_of::<u32>() -> [return: bb6, unwind: bb22]
  }
  preds [bb4]
  succs [bb6, bb22]

bb6
  0: _19 = AddWithOverflow(_9, _18)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2150:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2150:27)
      kind: assert(!move (_19.1: bool), "attempt to compute `{} + {}`, which would overflow", move _9, move _18) -> [success: bb7, unwind: bb22]
  }
  preds [bb5]
  succs [bb7, bb22]

bb7
  0: _8 = move (_19.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2150:27)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/dense.rs:2150:26-2150:27)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:2150:26-2150:27)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/dense.rs:2151:11-2151:36)
  4: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/dense.rs:2151:11-2151:21)
  5: _21 = &((*_1).7: dfa::dense::Flags)
    SourceInfo(regex-automata/src/dfa/dense.rs:2151:11-2151:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2151:11-2151:36)
      kind: _20 = dfa::dense::Flags::write_to_len(move _21) -> [return: bb8, unwind: bb22]
  }
  preds [bb6]
  succs [bb8, bb22]

bb8
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/dense.rs:2151:35-2151:36)
  1: _22 = AddWithOverflow(_8, _20)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2151:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2151:36)
      kind: assert(!move (_22.1: bool), "attempt to compute `{} + {}`, which would overflow", move _8, move _20) -> [success: bb9, unwind: bb22]
  }
  preds [bb7]
  succs [bb9, bb22]

bb9
  0: _7 = move (_22.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2151:36)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/dense.rs:2151:35-2151:36)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:2151:35-2151:36)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/dense.rs:2152:11-2152:33)
  4: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/dense.rs:2152:11-2152:18)
  5: _24 = &((*_1).0: dfa::dense::TransitionTable<T>)
    SourceInfo(regex-automata/src/dfa/dense.rs:2152:11-2152:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2152:11-2152:33)
      kind: _23 = dfa::dense::TransitionTable::<T>::write_to_len(move _24) -> [return: bb10, unwind: bb22]
  }
  preds [bb8]
  succs [bb10, bb22]

bb10
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/dense.rs:2152:32-2152:33)
  1: _25 = AddWithOverflow(_7, _23)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2152:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2152:33)
      kind: assert(!move (_25.1: bool), "attempt to compute `{} + {}`, which would overflow", move _7, move _23) -> [success: bb11, unwind: bb22]
  }
  preds [bb9]
  succs [bb11, bb22]

bb11
  0: _6 = move (_25.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2152:33)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/dense.rs:2152:32-2152:33)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:2152:32-2152:33)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/dense.rs:2153:11-2153:33)
  4: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/dense.rs:2153:11-2153:18)
  5: _27 = &((*_1).1: dfa::dense::StartTable<T>)
    SourceInfo(regex-automata/src/dfa/dense.rs:2153:11-2153:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2153:11-2153:33)
      kind: _26 = dfa::dense::StartTable::<T>::write_to_len(move _27) -> [return: bb12, unwind: bb22]
  }
  preds [bb10]
  succs [bb12, bb22]

bb12
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/dense.rs:2153:32-2153:33)
  1: _28 = AddWithOverflow(_6, _26)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2153:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2153:33)
      kind: assert(!move (_28.1: bool), "attempt to compute `{} + {}`, which would overflow", move _6, move _26) -> [success: bb13, unwind: bb22]
  }
  preds [bb11]
  succs [bb13, bb22]

bb13
  0: _5 = move (_28.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2153:33)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/dense.rs:2153:32-2153:33)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:2153:32-2153:33)
  3: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/dense.rs:2154:11-2154:33)
  4: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/dense.rs:2154:11-2154:18)
  5: _30 = &((*_1).2: dfa::dense::MatchStates<T>)
    SourceInfo(regex-automata/src/dfa/dense.rs:2154:11-2154:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2154:11-2154:33)
      kind: _29 = dfa::dense::MatchStates::<T>::write_to_len(move _30) -> [return: bb14, unwind: bb22]
  }
  preds [bb12]
  succs [bb14, bb22]

bb14
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/dense.rs:2154:32-2154:33)
  1: _31 = AddWithOverflow(_5, _29)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2154:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2154:33)
      kind: assert(!move (_31.1: bool), "attempt to compute `{} + {}`, which would overflow", move _5, move _29) -> [success: bb15, unwind: bb22]
  }
  preds [bb13]
  succs [bb15, bb22]

bb15
  0: _4 = move (_31.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2154:33)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/dense.rs:2154:32-2154:33)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:2154:32-2154:33)
  3: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/dense.rs:2155:11-2155:38)
  4: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/dense.rs:2155:11-2155:23)
  5: _33 = &((*_1).3: dfa::special::Special)
    SourceInfo(regex-automata/src/dfa/dense.rs:2155:11-2155:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2155:11-2155:38)
      kind: _32 = dfa::special::Special::write_to_len(move _33) -> [return: bb16, unwind: bb22]
  }
  preds [bb14]
  succs [bb16, bb22]

bb16
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/dense.rs:2155:37-2155:38)
  1: _34 = AddWithOverflow(_4, _32)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2155:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2155:38)
      kind: assert(!move (_34.1: bool), "attempt to compute `{} + {}`, which would overflow", move _4, move _32) -> [success: bb17, unwind: bb22]
  }
  preds [bb15]
  succs [bb17, bb22]

bb17
  0: _3 = move (_34.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2155:38)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/dense.rs:2155:37-2155:38)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:2155:37-2155:38)
  3: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/dense.rs:2156:11-2156:37)
  4: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/dense.rs:2156:11-2156:22)
  5: _36 = &((*_1).4: dfa::accel::Accels<T>)
    SourceInfo(regex-automata/src/dfa/dense.rs:2156:11-2156:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2156:11-2156:37)
      kind: _35 = dfa::accel::Accels::<T>::write_to_len(move _36) -> [return: bb18, unwind: bb22]
  }
  preds [bb16]
  succs [bb18, bb22]

bb18
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/dense.rs:2156:36-2156:37)
  1: _37 = AddWithOverflow(_3, _35)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2156:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2156:37)
      kind: assert(!move (_37.1: bool), "attempt to compute `{} + {}`, which would overflow", move _3, move _35) -> [success: bb19, unwind: bb22]
  }
  preds [bb17]
  succs [bb19, bb22]

bb19
  0: _2 = move (_37.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2156:37)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/dense.rs:2156:36-2156:37)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:2156:36-2156:37)
  3: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/dense.rs:2157:11-2157:38)
  4: StorageLive(_39)
    SourceInfo(regex-automata/src/dfa/dense.rs:2157:11-2157:23)
  5: _39 = &((*_1).6: util::alphabet::ByteSet)
    SourceInfo(regex-automata/src/dfa/dense.rs:2157:11-2157:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2157:11-2157:38)
      kind: _38 = util::alphabet::ByteSet::write_to_len(move _39) -> [return: bb20, unwind: bb22]
  }
  preds [bb18]
  succs [bb20, bb22]

bb20
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/dense.rs:2157:37-2157:38)
  1: _40 = AddWithOverflow(_2, _38)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2157:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2157:38)
      kind: assert(!move (_40.1: bool), "attempt to compute `{} + {}`, which would overflow", move _2, move _38) -> [success: bb21, unwind: bb22]
  }
  preds [bb19]
  succs [bb21, bb22]

bb21
  0: _0 = move (_40.0: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:2147:9-2157:38)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/dense.rs:2157:37-2157:38)
  2: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/dense.rs:2157:37-2157:38)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:2158:5-2158:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2158:6-2158:6)
      kind: return
  }
  preds [bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:2146:5-2158:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb15, bb16, bb17, bb18, bb19, bb20]
  succs []

