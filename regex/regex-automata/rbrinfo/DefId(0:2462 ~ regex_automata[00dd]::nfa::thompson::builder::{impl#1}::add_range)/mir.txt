bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:760:9-760:13)
  1: _3 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:760:9-760:13)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:760:18-760:44)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:760:37-760:42)
  4: _5 = _2
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:760:37-760:42)
  5: _4 = nfa::thompson::builder::State::ByteRange { trans: move _5 }
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:760:18-760:44)
  6: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:760:43-760:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:760:9-760:45)
      kind: _0 = nfa::thompson::builder::Builder::add(move _3, move _4) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:760:44-760:45)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:760:44-760:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:761:6-761:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:760:44-760:45)
      kind: drop(_4) -> [return: bb3, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:756:5-761:6)
      kind: resume
  }
  preds [bb2]
  succs []

