bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:13-4008:16)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4018:39)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4018:38)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4017:34)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4016:14)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4016:14)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4010:21)
  7: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4010:21)
  8: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4009:22)
  9: _11 = &((*_1).1: nfa::thompson::compiler::Compiler)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4009:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4010:21)
      kind: _10 = <nfa::thompson::compiler::Compiler as core::clone::Clone>::clone(move _11) -> [return: bb1, unwind: bb31]
  }
  preds []
  succs [bb1, bb31]

bb1
  0: _9 = &mut _10
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4010:21)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4010:20-4010:21)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4014:17-4015:67)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4014:17-4014:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4014:17-4014:40)
      kind: _13 = nfa::thompson::compiler::Config::new() -> [return: bb2, unwind: bb30]
  }
  preds [bb0]
  succs [bb2, bb30]

bb2
  0: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4015:37-4015:66)
  1: _14 = nfa::thompson::compiler::WhichCaptures::None
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4015:37-4015:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4014:17-4015:67)
      kind: _12 = nfa::thompson::compiler::Config::which_captures(move _13, move _14) -> [return: bb3, unwind: bb30]
  }
  preds [bb1]
  succs [bb3, bb30]

bb3
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4015:66-4015:67)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4015:66-4015:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4016:14)
      kind: _8 = nfa::thompson::compiler::Compiler::configure(move _9, move _12) -> [return: bb4, unwind: bb30]
  }
  preds [bb2]
  succs [bb4, bb30]

bb4
  0: _7 = &(*_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4016:14)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4016:13-4016:14)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4016:13-4016:14)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4017:25-4017:33)
  4: _15 = &(*_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4017:25-4017:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4017:34)
      kind: _6 = nfa::thompson::compiler::Compiler::build_many::<P>(move _7, move _15) -> [return: bb5, unwind: bb30]
  }
  preds [bb3]
  succs [bb5, bb30]

bb5
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4017:33-4017:34)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4017:33-4017:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4018:38)
      kind: _5 = core::result::Result::<nfa::thompson::nfa::NFA, nfa::thompson::error::BuildError>::map_err::<hybrid::error::BuildError, fn(nfa::thompson::error::BuildError) -> hybrid::error::BuildError {hybrid::error::BuildError::nfa}>(move _6, hybrid::error::BuildError::nfa) -> [return: bb6, unwind: bb29]
  }
  preds [bb4]
  succs [bb6, bb29]

bb6
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:37-4018:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4018:39)
      kind: _4 = <core::result::Result<nfa::thompson::nfa::NFA, hybrid::error::BuildError> as core::ops::Try>::branch(move _5) -> [return: bb7, unwind: bb28]
  }
  preds [bb5]
  succs [bb7, bb28]

bb7
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:38-4018:39)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4018:39)
  2: _16 = discriminant(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4018:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4018:39)
      kind: switchInt(move _16) -> [0: bb10, 1: bb9, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9, bb10]

bb8
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4018:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4018:39)
      kind: unreachable
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:38-4018:39)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4018:39)
  1: _20 = move ((_4 as Continue).0: nfa::thompson::nfa::NFA)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4018:39)
  2: _3 = move _20
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4018:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:38-4018:39)
      kind: drop(_20) -> [return: bb13, unwind: bb27]
  }
  preds [bb7, bb9]
  succs [bb13, bb27]

bb11
  0: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:38-4018:39)
  1: _17 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, hybrid::error::BuildError>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:38-4018:39)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:38-4018:39)
  3: _19 = move _17
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:38-4018:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:19-4018:39)
      kind: _0 = <core::result::Result<hybrid::dfa::DFA, hybrid::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hybrid::error::BuildError>>>::from_residual(move _19) -> [return: bb12, unwind: bb25]
  }
  preds [bb9]
  succs [bb12, bb25]

bb12
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:38-4018:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:38-4018:39)
      kind: drop(_17) -> [return: bb18, unwind: bb27]
  }
  preds [bb11]
  succs [bb18, bb27]

bb13
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:38-4018:39)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4008:13-4008:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:39-4018:40)
      kind: drop(_4) -> [return: bb14, unwind: bb23]
  }
  preds [bb10]
  succs [bb14, bb23]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:39-4018:40)
      kind: drop(_10) -> [return: bb15, unwind: bb24]
  }
  preds [bb13]
  succs [bb15, bb24]

bb15
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:39-4018:40)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:39-4018:40)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:39-4018:40)
  3: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4019:9-4019:13)
  4: _21 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4019:9-4019:13)
  5: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4019:29-4019:32)
  6: _22 = move _3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4019:29-4019:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4019:9-4019:33)
      kind: _0 = hybrid::dfa::Builder::build_from_nfa(move _21, move _22) -> [return: bb16, unwind: bb22]
  }
  preds [bb14]
  succs [bb16, bb22]

bb16
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4019:32-4019:33)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4019:32-4019:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4020:5-4020:6)
      kind: drop(_3) -> [return: bb17, unwind: bb31]
  }
  preds [bb15]
  succs [bb17, bb31]

bb17
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4020:5-4020:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4020:6-4020:6)
      kind: goto -> bb21
  }
  preds [bb16]
  succs [bb21]

bb18
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:38-4018:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:39-4018:40)
      kind: drop(_4) -> [return: bb19, unwind: bb30]
  }
  preds [bb12]
  succs [bb19, bb30]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:39-4018:40)
      kind: drop(_10) -> [return: bb20, unwind: bb31]
  }
  preds [bb18]
  succs [bb20, bb31]

bb20
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:39-4018:40)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:39-4018:40)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:39-4018:40)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:4020:5-4020:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4020:6-4020:6)
      kind: goto -> bb21
  }
  preds [bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4020:6-4020:6)
      kind: return
  }
  preds [bb17, bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4019:32-4019:33)
      kind: drop(_22) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb24]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:39-4018:40)
      kind: drop(_10) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4020:5-4020:6)
      kind: drop(_3) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb14, bb22, bb23]
  succs [bb31]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:38-4018:39)
      kind: drop(_19) -> [return: bb26, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:38-4018:39)
      kind: drop(_17) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:39-4018:40)
      kind: drop(_4) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb10, bb12, bb26]
  succs [bb30]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:38-4018:39)
      kind: drop(_5) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb30]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:37-4018:38)
      kind: drop(_6) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4018:39-4018:40)
      kind: drop(_10) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb3, bb4, bb18, bb27, bb28, bb29]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:4004:5-4020:6)
      kind: resume
  }
  preds [bb0, bb16, bb19, bb24, bb30]
  succs []

