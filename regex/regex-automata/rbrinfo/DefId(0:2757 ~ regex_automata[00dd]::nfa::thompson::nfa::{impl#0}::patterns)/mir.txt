bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:408:17-408:52)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:408:33-408:51)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:408:33-408:37)
  3: _4 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:408:33-408:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:408:33-408:51)
      kind: _3 = nfa::thompson::nfa::NFA::pattern_len(move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:408:50-408:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:408:17-408:52)
      kind: _2 = util::primitives::PatternID::iter(move _3) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:408:51-408:52)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:409:22-409:47)
  2: _5 = core::marker::PhantomData::<&()>
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:409:22-409:47)
  3: _0 = nfa::thompson::nfa::PatternIter::<'_> { it: move _2, _marker: move _5 }
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:407:9-410:10)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:410:9-410:10)
  5: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:410:9-410:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:411:6-411:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:406:5-411:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

