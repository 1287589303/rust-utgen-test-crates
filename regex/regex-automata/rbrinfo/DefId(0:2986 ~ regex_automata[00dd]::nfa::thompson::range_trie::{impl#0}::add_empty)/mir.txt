bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:13-429:15)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:24-429:60)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:42-429:59)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:42-429:53)
  4: _5 = &((*_1).0: std::vec::Vec<nfa::thompson::range_trie::State>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:42-429:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:42-429:59)
      kind: _4 = std::vec::Vec::<nfa::thompson::range_trie::State>::len(move _5) -> [return: bb1, unwind: bb24]
  }
  preds []
  succs [bb1, bb24]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:58-429:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:24-429:60)
      kind: _3 = <util::primitives::StateID as core::convert::TryFrom<usize>>::try_from(move _4) -> [return: bb2, unwind: bb24]
  }
  preds [bb0]
  succs [bb2, bb24]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:59-429:60)
  1: PlaceMention(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:24-429:60)
  2: _6 = discriminant(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:24-429:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:18-429:60)
      kind: switchInt(move _6) -> [0: bb4, 1: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:24-429:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:24-429:60)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:430:13-430:19)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  1: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:436:24-436:64)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:436:24-436:64)
  4: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:436:24-436:64)
  5: _14 = [const "too many sequences added to range trie"]
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:436:24-436:64)
  6: _13 = &_14
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:436:24-436:64)
  7: _12 = &(*_13)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:436:24-436:64)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _11 = core::fmt::Arguments::<'_>::new_const::<1>(move _12) -> [return: bb7, unwind: bb24]
  }
  preds [bb2, bb4]
  succs [bb7, bb24]

bb6
  0: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:430:16-430:18)
  1: _7 = ((_3 as Ok).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:430:16-430:18)
  2: _2 = _7
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:430:23-430:25)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:430:24-430:25)
  4: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:429:13-429:15)
  5: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:438:10-438:11)
  6: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:9-446:10)
  7: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:34-441:49)
  8: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:34-441:43)
  9: _17 = &mut ((*_1).1: std::vec::Vec<nfa::thompson::range_trie::State>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:34-441:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:34-441:49)
      kind: _16 = std::vec::Vec::<nfa::thompson::range_trie::State>::pop(move _17) -> [return: bb8, unwind: bb24]
  }
  preds [bb4]
  succs [bb8, bb24]

bb7
  0: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _10 = core::panicking::panic_fmt(move _11) -> bb24
  }
  preds [bb5]
  succs [bb24]

bb8
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:48-441:49)
  1: PlaceMention(_16)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:34-441:49)
  2: _18 = discriminant(_16)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:34-441:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:16-441:31)
      kind: switchInt(move _18) -> [1: bb9, otherwise: bb13]
  }
  preds [bb6]
  succs [bb9, bb13]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:16-441:31)
      kind: falseEdge -> [real: bb10, imaginary: bb13]
  }
  preds [bb8]
  succs [bb10, bb13]

bb10
  0: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:21-441:30)
  1: _19 = move ((_16 as Some).0: nfa::thompson::range_trie::State)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:21-441:30)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:442:13-442:26)
  3: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:442:13-442:18)
  4: _21 = &mut _19
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:442:13-442:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:442:13-442:26)
      kind: _20 = nfa::thompson::range_trie::State::clear(move _21) -> [return: bb11, unwind: bb22]
  }
  preds [bb9]
  succs [bb11, bb22]

bb11
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:442:25-442:26)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:442:26-442:27)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:443:13-443:36)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:443:13-443:24)
  4: _23 = &mut ((*_1).0: std::vec::Vec<nfa::thompson::range_trie::State>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:443:13-443:24)
  5: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:443:30-443:35)
  6: _24 = move _19
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:443:30-443:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:443:13-443:36)
      kind: _22 = std::vec::Vec::<nfa::thompson::range_trie::State>::push(move _23, move _24) -> [return: bb12, unwind: bb21]
  }
  preds [bb10]
  succs [bb12, bb21]

bb12
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:443:35-443:36)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:443:35-443:36)
  2: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:443:36-443:37)
  3: _15 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:50-444:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:444:9-444:10)
      kind: drop(_19) -> [return: bb14, unwind: bb23]
  }
  preds [bb11]
  succs [bb14, bb23]

bb13
  0: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:445:13-445:60)
  1: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:445:13-445:24)
  2: _26 = &mut ((*_1).0: std::vec::Vec<nfa::thompson::range_trie::State>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:445:13-445:24)
  3: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:445:30-445:59)
  4: StorageLive(_28)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _28 = std::vec::Vec::<nfa::thompson::range_trie::Transition>::new() -> [return: bb15, unwind: bb23]
  }
  preds [bb8, bb9]
  succs [bb15, bb23]

bb14
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:444:9-444:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:9-446:10)
      kind: goto -> bb18
  }
  preds [bb12]
  succs [bb18]

bb15
  0: _27 = nfa::thompson::range_trie::State { transitions: move _28 }
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:445:30-445:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:445:58-445:59)
      kind: drop(_28) -> [return: bb16, unwind: bb20]
  }
  preds [bb13]
  succs [bb16, bb20]

bb16
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:445:58-445:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:445:13-445:60)
      kind: _25 = std::vec::Vec::<nfa::thompson::range_trie::State>::push(move _26, move _27) -> [return: bb17, unwind: bb20]
  }
  preds [bb15]
  succs [bb17, bb20]

bb17
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:445:59-445:60)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:445:59-445:60)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:445:60-445:61)
  3: _15 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:444:16-446:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:441:9-446:10)
      kind: goto -> bb18
  }
  preds [bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:446:9-446:10)
      kind: drop(_16) -> [return: bb19, unwind: bb24]
  }
  preds [bb14, bb17]
  succs [bb19, bb24]

bb19
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:446:9-446:10)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:446:9-446:10)
  2: _0 = _2
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:447:9-447:11)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:448:5-448:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:448:6-448:6)
      kind: return
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:445:59-445:60)
      kind: drop(_27) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb15, bb16]
  succs [bb23]

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:443:35-443:36)
      kind: drop(_24) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:444:9-444:10)
      kind: drop(_19) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb10, bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:446:9-446:10)
      kind: drop(_16) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb12, bb13, bb20, bb22]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:428:5-448:6)
      kind: resume
  }
  preds [bb0, bb1, bb5, bb6, bb7, bb18, bb23]
  succs []

