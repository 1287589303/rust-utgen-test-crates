{
  "regex-automata/src/nfa/thompson/range_trie.rs:429:24:429:60": [
    {
      "Match": {
        "match_source": "regex-automata/src/nfa/thompson/range_trie.rs:429:24:429:60",
        "match_str": "StateID::try_from(self.states.len())",
        "match_kind": {
          "Enum": [
            "Ok",
            "Err"
          ]
        },
        "arms": {
          "regex-automata/src/nfa/thompson/range_trie.rs:431:13:431:19": {
            "pat": {
              "pat_str": "Err(_)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/range_trie.rs:431:23:437:14"
          },
          "regex-automata/src/nfa/thompson/range_trie.rs:430:13:430:19": {
            "pat": {
              "pat_str": "Ok(id)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/range_trie.rs:430:23:430:25"
          }
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/range_trie.rs:441:12:441:49": [
    {
      "Bool": {
        "Other": "let Some(mut state) = self.free.pop()"
      }
    }
  ]
}