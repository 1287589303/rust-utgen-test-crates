bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:13-1348:16)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:36)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:35)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:23)
  4: _6 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:35)
      kind: _5 = nfa::thompson::compiler::Compiler::add_empty(move _6) -> [return: bb1, unwind: bb50]
  }
  preds []
  succs [bb1, bb50]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:34-1348:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:36)
      kind: _4 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _5) -> [return: bb2, unwind: bb49]
  }
  preds [bb0]
  succs [bb2, bb49]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:35-1348:36)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:36)
  2: _7 = discriminant(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:36)
      kind: switchInt(move _7) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:36)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:35-1348:36)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:36)
  1: _11 = ((_4 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:36)
  2: _3 = _11
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:36)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:35-1348:36)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:13-1348:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:36-1348:37)
      kind: drop(_4) -> [return: bb8, unwind: bb50]
  }
  preds [bb2, bb4]
  succs [bb8, bb50]

bb6
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:35-1348:36)
  1: _8 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:35-1348:36)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:35-1348:36)
  3: _10 = move _8
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:35-1348:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:19-1348:36)
      kind: _0 = <core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _10) -> [return: bb7, unwind: bb46]
  }
  preds [bb4]
  succs [bb7, bb46]

bb7
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:35-1348:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:35-1348:36)
      kind: drop(_8) -> [return: bb36, unwind: bb48]
  }
  preds [bb6]
  succs [bb36, bb48]

bb8
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:36-1348:37)
  1: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:13-1349:22)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:44-1349:62)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:44-1349:56)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:44-1349:56)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:44-1349:47)
  6: _16 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:44-1349:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:44-1349:56)
      kind: _15 = regex_syntax::hir::ClassBytes::ranges(move _16) -> [return: bb9, unwind: bb50]
  }
  preds [bb5]
  succs [bb9, bb50]

bb9
  0: _14 = &(*_15)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:44-1349:56)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:55-1349:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:44-1349:62)
      kind: _13 = core::slice::<impl [regex_syntax::hir::ClassBytesRange]>::len(move _14) -> [return: bb10, unwind: bb50]
  }
  preds [bb8]
  succs [bb10, bb50]

bb10
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:61-1349:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:25-1349:63)
      kind: _12 = std::vec::Vec::<nfa::thompson::nfa::Transition>::with_capacity(move _13) -> [return: bb11, unwind: bb50]
  }
  preds [bb9]
  succs [bb11, bb50]

bb11
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:62-1349:63)
  1: FakeRead(ForLet(None), _12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:13-1349:22)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1349:63-1349:64)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:9-1356:10)
  4: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
  5: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
  6: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:21)
  7: _20 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
      kind: _19 = regex_syntax::hir::ClassBytes::iter(move _20) -> [return: bb12, unwind: bb45]
  }
  preds [bb10]
  succs [bb12, bb45]

bb12
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:27-1350:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
      kind: _18 = <regex_syntax::hir::ClassBytesIter<'_> as core::iter::IntoIterator>::into_iter(move _19) -> [return: bb13, unwind: bb45]
  }
  preds [bb11]
  succs [bb13, bb45]

bb13
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:27-1350:28)
  1: PlaceMention(_18)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
  3: _21 = move _18
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:9-1356:10)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:9-1356:10)
      kind: falseUnwind -> [real: bb15, unwind: bb45]
  }
  preds [bb13, bb23]
  succs [bb15, bb45]

bb15
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
  1: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
  4: _26 = &mut _21
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
  5: _25 = &mut (*_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
      kind: _24 = <regex_syntax::hir::ClassBytesIter<'_> as core::iter::Iterator>::next(move _25) -> [return: bb16, unwind: bb45]
  }
  preds [bb14]
  succs [bb16, bb45]

bb16
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:27-1350:28)
  1: PlaceMention(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
  2: _27 = discriminant(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
      kind: switchInt(move _27) -> [0: bb18, 1: bb19, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18, bb19]

bb17
  0: FakeRead(ForMatchedPlace(None), _24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:18-1350:28)
      kind: unreachable
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:9-1356:10)
      kind: falseEdge -> [real: bb20, imaginary: bb19]
  }
  preds [bb16]
  succs [bb19, bb20]

bb19
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:13-1350:14)
  1: _29 = ((_24 as Some).0: &regex_syntax::hir::ClassBytesRange)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:13-1350:14)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1351:13-1355:15)
  3: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1351:13-1351:18)
  4: _31 = &mut _12
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1351:13-1351:18)
  5: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1351:24-1355:14)
  6: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1352:24-1352:33)
  7: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1352:24-1352:25)
  8: _34 = &(*_29)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1352:24-1352:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1352:24-1352:33)
      kind: _33 = regex_syntax::hir::ClassBytesRange::start(move _34) -> [return: bb21, unwind: bb45]
  }
  preds [bb16, bb18]
  succs [bb21, bb45]

bb20
  0: _17 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:9-1356:10)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1356:9-1356:10)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1356:9-1356:10)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1356:9-1356:10)
  4: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1356:9-1356:10)
  5: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1356:9-1356:10)
  6: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1356:9-1356:10)
  7: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:12-1357:63)
  8: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:56)
  9: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:56)
  10: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:55)
  11: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:37)
  12: _42 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:37)
  13: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:49-1357:54)
  14: _43 = move _12
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:49-1357:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:55)
      kind: _41 = nfa::thompson::compiler::Compiler::add_sparse(move _42, move _43) -> [return: bb24, unwind: bb44]
  }
  preds [bb18]
  succs [bb24, bb44]

bb21
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1352:32-1352:33)
  1: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1353:22-1353:29)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1353:22-1353:23)
  3: _36 = &(*_29)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1353:22-1353:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1353:22-1353:29)
      kind: _35 = regex_syntax::hir::ClassBytesRange::end(move _36) -> [return: bb22, unwind: bb45]
  }
  preds [bb19]
  succs [bb22, bb45]

bb22
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1353:28-1353:29)
  1: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1354:23-1354:26)
  2: _37 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1354:23-1354:26)
  3: _32 = nfa::thompson::nfa::Transition { start: move _33, end: move _35, next: move _37 }
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1351:24-1355:14)
  4: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1355:13-1355:14)
  5: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1355:13-1355:14)
  6: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1355:13-1355:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1351:13-1355:15)
      kind: _30 = std::vec::Vec::<nfa::thompson::nfa::Transition>::push(move _31, move _32) -> [return: bb23, unwind: bb45]
  }
  preds [bb21]
  succs [bb23, bb45]

bb23
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1355:14-1355:15)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1355:14-1355:15)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1355:15-1355:16)
  3: _23 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:29-1356:10)
  4: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1356:9-1356:10)
  5: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1356:9-1356:10)
  6: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1356:9-1356:10)
  7: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1356:9-1356:10)
  8: _22 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:9-1356:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1350:9-1356:10)
      kind: goto -> bb14
  }
  preds [bb22]
  succs [bb14]

bb24
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:54-1357:55)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:54-1357:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:56)
      kind: _40 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _41) -> [return: bb25, unwind: bb43]
  }
  preds [bb20]
  succs [bb25, bb43]

bb25
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:55-1357:56)
  1: PlaceMention(_40)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:56)
  2: _44 = discriminant(_40)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:56)
      kind: switchInt(move _44) -> [0: bb28, 1: bb27, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27, bb28]

bb26
  0: FakeRead(ForMatchedPlace(None), _40)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:56)
      kind: unreachable
  }
  preds [bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:55-1357:56)
      kind: falseEdge -> [real: bb29, imaginary: bb28]
  }
  preds [bb25]
  succs [bb28, bb29]

bb28
  0: StorageLive(_48)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:56)
  1: _48 = ((_40 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:56)
  2: _39 = _48
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:56)
  3: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:55-1357:56)
  4: StorageLive(_49)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:58-1357:61)
  5: _49 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:58-1357:61)
  6: _38 = nfa::thompson::compiler::ThompsonRef { start: move _39, end: move _49 }
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:12-1357:63)
  7: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:62-1357:63)
  8: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:62-1357:63)
  9: _0 = core::result::Result::<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError>::Ok(move _38)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:9-1357:64)
  10: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:63-1357:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:5-1358:6)
      kind: drop(_12) -> [return: bb31, unwind: bb42]
  }
  preds [bb25, bb27]
  succs [bb31, bb42]

bb29
  0: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:55-1357:56)
  1: _45 = move ((_40 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:55-1357:56)
  2: StorageLive(_47)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:55-1357:56)
  3: _47 = move _45
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:55-1357:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:33-1357:56)
      kind: _0 = <core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _47) -> [return: bb30, unwind: bb39]
  }
  preds [bb27]
  succs [bb30, bb39]

bb30
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:55-1357:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:55-1357:56)
      kind: drop(_45) -> [return: bb33, unwind: bb41]
  }
  preds [bb29]
  succs [bb33, bb41]

bb31
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:5-1358:6)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:5-1358:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:5-1358:6)
      kind: drop(_40) -> [return: bb32, unwind: bb50]
  }
  preds [bb28]
  succs [bb32, bb50]

bb32
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:5-1358:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:6-1358:6)
      kind: goto -> bb38
  }
  preds [bb31]
  succs [bb38]

bb33
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:55-1357:56)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:62-1357:63)
  2: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:63-1357:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:5-1358:6)
      kind: drop(_12) -> [return: bb34, unwind: bb42]
  }
  preds [bb30]
  succs [bb34, bb42]

bb34
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:5-1358:6)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:5-1358:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:5-1358:6)
      kind: drop(_40) -> [return: bb35, unwind: bb50]
  }
  preds [bb33]
  succs [bb35, bb50]

bb35
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:5-1358:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb34]
  succs [bb38]

bb36
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:35-1348:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:36-1348:37)
      kind: drop(_4) -> [return: bb37, unwind: bb50]
  }
  preds [bb7]
  succs [bb37, bb50]

bb37
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:36-1348:37)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:5-1358:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb36]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:6-1358:6)
      kind: return
  }
  preds [bb32, bb35, bb37]
  succs []

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:55-1357:56)
      kind: drop(_47) -> [return: bb40, unwind terminate(cleanup)]
  }
  preds [bb29]
  succs [bb40]

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:55-1357:56)
      kind: drop(_45) -> [return: bb41, unwind terminate(cleanup)]
  }
  preds [bb39]
  succs [bb41]

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:5-1358:6)
      kind: drop(_12) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb30, bb40]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:5-1358:6)
      kind: drop(_40) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb28, bb33, bb41]
  succs [bb50]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:55-1357:56)
      kind: drop(_41) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb24]
  succs [bb45]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1357:54-1357:55)
      kind: drop(_43) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb45]

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1358:5-1358:6)
      kind: drop(_12) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb11, bb12, bb14, bb15, bb19, bb21, bb22, bb43, bb44]
  succs [bb50]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:35-1348:36)
      kind: drop(_10) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:35-1348:36)
      kind: drop(_8) -> [return: bb48, unwind terminate(cleanup)]
  }
  preds [bb46]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:36-1348:37)
      kind: drop(_4) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb7, bb47]
  succs [bb50]

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1348:35-1348:36)
      kind: drop(_5) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb50]

bb50
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1344:5-1358:6)
      kind: resume
  }
  preds [bb0, bb5, bb8, bb9, bb10, bb31, bb34, bb36, bb42, bb45, bb48, bb49]
  succs []

