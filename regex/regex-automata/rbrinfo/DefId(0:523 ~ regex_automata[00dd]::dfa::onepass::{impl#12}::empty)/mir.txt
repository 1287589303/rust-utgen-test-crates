bb0
  0: StorageLive(_1)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2693:13-2694:53)
  1: _2 = Lt(const dfa::onepass::PatternEpsilons::PATTERN_ID_SHIFT, const 64_u64)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2693:13-2694:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2693:13-2694:53)
      kind: assert(move _2, "attempt to shift left by `{}`, which would overflow", const dfa::onepass::PatternEpsilons::PATTERN_ID_SHIFT) -> [success: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _1 = Shl(const dfa::onepass::PatternEpsilons::PATTERN_ID_NONE, const dfa::onepass::PatternEpsilons::PATTERN_ID_SHIFT)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2693:13-2694:53)
  1: _0 = dfa::onepass::PatternEpsilons(move _1)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2692:9-2695:10)
  2: StorageDead(_1)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2695:9-2695:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2696:6-2696:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2691:5-2696:6)
      kind: resume
  }
  preds [bb0]
  succs []

