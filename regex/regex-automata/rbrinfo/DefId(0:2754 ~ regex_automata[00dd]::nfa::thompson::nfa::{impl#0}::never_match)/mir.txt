bb0
  0: StorageLive(_1)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:321:13-321:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:321:27-321:41)
      kind: _1 = nfa::thompson::builder::Builder::new() -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: FakeRead(ForLet(None), _1)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:321:13-321:24)
  1: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:322:13-322:16)
  2: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:322:19-322:37)
  3: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:322:19-322:26)
  4: _4 = &mut _1
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:322:19-322:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:322:19-322:37)
      kind: _3 = nfa::thompson::builder::Builder::add_fail(move _4) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:322:36-322:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:322:19-322:46)
      kind: _2 = core::result::Result::<util::primitives::StateID, nfa::thompson::error::BuildError>::unwrap(move _3) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:322:45-322:46)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:322:13-322:16)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:323:9-323:32)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:323:9-323:16)
  4: _6 = &_1
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:323:9-323:16)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:323:23-323:26)
  6: _7 = _2
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:323:23-323:26)
  7: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:323:28-323:31)
  8: _8 = _2
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:323:28-323:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:323:9-323:32)
      kind: _5 = nfa::thompson::builder::Builder::build(move _6, move _7, move _8) -> [return: bb4, unwind: bb9]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:323:31-323:32)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:323:31-323:32)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:323:31-323:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:323:9-323:41)
      kind: _0 = core::result::Result::<nfa::thompson::nfa::NFA, nfa::thompson::error::BuildError>::unwrap(move _5) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:323:40-323:41)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:324:5-324:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:324:5-324:6)
      kind: drop(_1) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_1)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:324:5-324:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:324:6-324:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:323:40-323:41)
      kind: drop(_5) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb9]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:322:45-322:46)
      kind: drop(_3) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:324:5-324:6)
      kind: drop(_1) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb1, bb3, bb7, bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:318:5-324:6)
      kind: resume
  }
  preds [bb0, bb5, bb9]
  succs []

