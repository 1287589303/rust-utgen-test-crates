bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/syntax.rs:455:9-458:31)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/syntax.rs:455:9-457:41)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/syntax.rs:455:9-457:41)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/syntax.rs:455:9-456:55)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/util/syntax.rs:455:9-456:55)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/util/syntax.rs:455:9-455:16)
  6: _8 = &mut (*_2)
    SourceInfo(regex-automata/src/util/syntax.rs:455:9-455:16)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/util/syntax.rs:456:32-456:54)
  8: _9 = ((*_1).6: bool)
    SourceInfo(regex-automata/src/util/syntax.rs:456:32-456:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:455:9-456:55)
      kind: _7 = regex_syntax::ast::parse::ParserBuilder::ignore_whitespace(move _8, move _9) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _6 = &mut (*_7)
    SourceInfo(regex-automata/src/util/syntax.rs:455:9-456:55)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/util/syntax.rs:456:54-456:55)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/util/syntax.rs:456:54-456:55)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/util/syntax.rs:457:25-457:40)
  4: _10 = ((*_1).9: u32)
    SourceInfo(regex-automata/src/util/syntax.rs:457:25-457:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:455:9-457:41)
      kind: _5 = regex_syntax::ast::parse::ParserBuilder::nest_limit(move _6, move _10) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: _4 = &mut (*_5)
    SourceInfo(regex-automata/src/util/syntax.rs:455:9-457:41)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/util/syntax.rs:457:40-457:41)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/syntax.rs:457:40-457:41)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/util/syntax.rs:458:20-458:30)
  4: _11 = ((*_1).10: bool)
    SourceInfo(regex-automata/src/util/syntax.rs:458:20-458:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:455:9-458:31)
      kind: _3 = regex_syntax::ast::parse::ParserBuilder::octal(move _4, move _11) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/util/syntax.rs:458:30-458:31)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/syntax.rs:458:30-458:31)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/util/syntax.rs:458:31-458:32)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/util/syntax.rs:458:31-458:32)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/util/syntax.rs:458:31-458:32)
  5: _0 = const ()
    SourceInfo(regex-automata/src/util/syntax.rs:454:77-459:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:459:6-459:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:454:5-459:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

