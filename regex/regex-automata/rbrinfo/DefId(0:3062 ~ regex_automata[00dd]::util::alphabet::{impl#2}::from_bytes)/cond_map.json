{
  "regex-automata/src/util/alphabet.rs:252:19:252:35": [
    {
      "For": {
        "iter_var": "&b",
        "iter_range": "classes.0.iter()"
      }
    }
  ],
  "regex-automata/src/util/alphabet.rs:244:9:244:61": [
    {
      "Try": "wire::check_slice_len(slice, 256, \"byte class map\")?"
    }
  ],
  "regex-automata/src/util/alphabet.rs:246:28:246:59": [
    {
      "For": {
        "iter_var": "(b, &class)",
        "iter_range": "slice[..256].iter().enumerate()"
      }
    }
  ],
  "regex-automata/src/util/alphabet.rs:253:16:253:56": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "usize::from(b) >= classes.alphabet_len()",
          "lhs": "usize::from(b)",
          "rhs": "classes.alphabet_len()",
          "cmp_with_int": false
        }
      }
    }
  ]
}