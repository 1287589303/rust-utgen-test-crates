bb0
  0: ((*_1).0: usize) = const 0_usize
    SourceInfo(regex-automata/src/util/search.rs:1203:9-1203:21)
  1: StorageLive(_2)
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
  2: StorageLive(_3)
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
  3: StorageLive(_4)
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:34)
  4: _4 = &mut (*((*_1).1: std::boxed::Box<[bool]>))
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
      kind: _3 = core::slice::<impl [bool]>::iter_mut(move _4) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/search.rs:1204:44-1204:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
      kind: _2 = <core::slice::IterMut<'_, bool> as core::iter::IntoIterator>::into_iter(move _3) -> [return: bb2, unwind: bb10]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/search.rs:1204:44-1204:45)
  1: PlaceMention(_2)
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
  3: _5 = move _2
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1204:9-1206:10)
      kind: goto -> bb3
  }
  preds [bb1]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1204:9-1206:10)
      kind: falseUnwind -> [real: bb4, unwind: bb10]
  }
  preds [bb2, bb8]
  succs [bb4, bb10]

bb4
  0: StorageLive(_7)
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
  1: StorageLive(_8)
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
  4: _10 = &mut _5
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
  5: _9 = &mut (*_10)
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
      kind: _8 = <core::slice::IterMut<'_, bool> as core::iter::Iterator>::next(move _9) -> [return: bb5, unwind: bb10]
  }
  preds [bb3]
  succs [bb5, bb10]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/search.rs:1204:44-1204:45)
  1: PlaceMention(_8)
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
  2: _11 = discriminant(_8)
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
      kind: switchInt(move _11) -> [0: bb7, 1: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1204:24-1204:45)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1204:9-1206:10)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_13)
    SourceInfo(regex-automata/src/util/search.rs:1204:13-1204:20)
  1: _13 = move ((_8 as Some).0: &mut bool)
    SourceInfo(regex-automata/src/util/search.rs:1204:13-1204:20)
  2: (*_13) = const false
    SourceInfo(regex-automata/src/util/search.rs:1205:13-1205:29)
  3: _7 = const ()
    SourceInfo(regex-automata/src/util/search.rs:1204:46-1206:10)
  4: StorageDead(_13)
    SourceInfo(regex-automata/src/util/search.rs:1206:9-1206:10)
  5: StorageDead(_10)
    SourceInfo(regex-automata/src/util/search.rs:1206:9-1206:10)
  6: StorageDead(_8)
    SourceInfo(regex-automata/src/util/search.rs:1206:9-1206:10)
  7: StorageDead(_7)
    SourceInfo(regex-automata/src/util/search.rs:1206:9-1206:10)
  8: _6 = const ()
    SourceInfo(regex-automata/src/util/search.rs:1204:9-1206:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1204:9-1206:10)
      kind: goto -> bb3
  }
  preds [bb5, bb7]
  succs [bb3]

bb9
  0: _0 = const ()
    SourceInfo(regex-automata/src/util/search.rs:1204:9-1206:10)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/util/search.rs:1206:9-1206:10)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/util/search.rs:1206:9-1206:10)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/util/search.rs:1206:9-1206:10)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/util/search.rs:1206:9-1206:10)
  5: StorageDead(_2)
    SourceInfo(regex-automata/src/util/search.rs:1206:9-1206:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1207:6-1207:6)
      kind: return
  }
  preds [bb7]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1202:5-1207:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb4]
  succs []

