bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/syntax.rs:38:16-38:23)
  1: _2 = &(*_1)
    SourceInfo(regex-automata/src/util/syntax.rs:38:16-38:23)
  2: StorageLive(_3)
    SourceInfo(regex-automata/src/util/syntax.rs:38:25-38:43)
  3: StorageLive(_4)
    SourceInfo(regex-automata/src/util/syntax.rs:38:25-38:43)
  4: StorageLive(_5)
    SourceInfo(regex-automata/src/util/syntax.rs:38:26-38:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:38:26-38:43)
      kind: _5 = <util::syntax::Config as core::default::Default>::default() -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _4 = &_5
    SourceInfo(regex-automata/src/util/syntax.rs:38:25-38:43)
  1: _3 = &(*_4)
    SourceInfo(regex-automata/src/util/syntax.rs:38:25-38:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:38:5-38:44)
      kind: _0 = util::syntax::parse_with(move _2, move _3) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/syntax.rs:38:43-38:44)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/util/syntax.rs:38:43-38:44)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/util/syntax.rs:39:1-39:2)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/util/syntax.rs:39:1-39:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:39:2-39:2)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/syntax.rs:37:1-39:2)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

