{
  "regex-automata/src/hybrid/dfa.rs:1561:27:1561:51": [
    {
      "Match": {
        "match_source": "regex-automata/src/hybrid/dfa.rs:1561:27:1561:51",
        "match_str": "config.get_look_behind()",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/hybrid/dfa.rs:1562:13:1562:17": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/hybrid/dfa.rs:1562:21:1562:32"
          },
          "regex-automata/src/hybrid/dfa.rs:1563:13:1563:23": {
            "pat": {
              "pat_str": "Some(byte)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/hybrid/dfa.rs:1563:27:1568:14"
          }
        }
      }
    }
  ],
  "regex-automata/src/hybrid/dfa.rs:1564:21:1564:44": [
    {
      "Bool": {
        "Other": "self.quitset.is_empty()"
      }
    }
  ],
  "regex-automata/src/hybrid/dfa.rs:1570:24:1570:66": [
    {
      "Try": "lazy.get_cached_start_id(anchored, start)?"
    }
  ],
  "regex-automata/src/hybrid/dfa.rs:1564:48:1564:75": [
    {
      "Bool": {
        "Other": "self.quitset.contains(byte)"
      }
    }
  ],
  "regex-automata/src/hybrid/dfa.rs:1571:13:1571:34": [
    {
      "Bool": {
        "Other": "start_id.is_unknown()"
      }
    }
  ]
}