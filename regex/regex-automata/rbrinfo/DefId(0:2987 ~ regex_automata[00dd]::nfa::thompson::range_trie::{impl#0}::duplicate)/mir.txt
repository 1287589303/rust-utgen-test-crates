bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:9-469:10)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:12-467:27)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:12-467:18)
  3: _5 = &_2
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:12-467:18)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:22-467:27)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:22-467:27)
  6: _7 = const nfa::thompson::range_trie::FINAL
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:22-467:27)
  7: _6 = &_7
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:22-467:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:12-467:27)
      kind: _4 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _5, move _6) -> [return: bb1, unwind: bb42]
  }
  preds []
  succs [bb1, bb42]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:12-467:27)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:26-467:27)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:26-467:27)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:26-467:27)
  3: _0 = const nfa::thompson::range_trie::FINAL
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:468:20-468:25)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:469:9-469:10)
  5: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:469:9-469:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:498:6-498:6)
      kind: goto -> bb39
  }
  preds [bb1]
  succs [bb39]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:26-467:27)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:26-467:27)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:467:26-467:27)
  3: _3 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:469:10-469:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:469:9-469:10)
  5: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:469:9-469:10)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:471:13-471:22)
  7: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:471:38-471:58)
  8: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:471:38-471:58)
  9: _11 = &mut ((*_1).4: std::vec::Vec<nfa::thompson::range_trie::NextDupe>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:471:38-471:58)
  10: _10 = &mut (*_11)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:471:38-471:58)
  11: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _12 = std::vec::Vec::<nfa::thompson::range_trie::NextDupe>::new() -> [return: bb4, unwind: bb42]
  }
  preds [bb1]
  succs [bb4, bb42]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:471:25-471:67)
      kind: _9 = core::mem::replace::<std::vec::Vec<nfa::thompson::range_trie::NextDupe>>(move _10, move _12) -> [return: bb5, unwind: bb41]
  }
  preds [bb3]
  succs [bb5, bb41]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:471:66-471:67)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:471:66-471:67)
  2: FakeRead(ForLet(None), _9)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:471:13-471:22)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:471:67-471:68)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:472:9-472:22)
  5: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:472:9-472:14)
  6: _14 = &mut _9
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:472:9-472:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:472:9-472:22)
      kind: _13 = std::vec::Vec::<nfa::thompson::range_trie::NextDupe>::clear(move _14) -> [return: bb6, unwind: bb40]
  }
  preds [bb4]
  succs [bb6, bb40]

bb6
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:472:21-472:22)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:472:22-472:23)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:474:13-474:19)
  3: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:474:22-474:26)
  4: _16 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:474:22-474:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:474:22-474:38)
      kind: _15 = nfa::thompson::range_trie::RangeTrie::add_empty(move _16) -> [return: bb7, unwind: bb40]
  }
  preds [bb5]
  succs [bb7, bb40]

bb7
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:474:37-474:38)
  1: FakeRead(ForLet(None), _15)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:474:13-474:19)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:9-477:48)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:9-477:14)
  4: _18 = &mut _9
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:9-477:14)
  5: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:20-477:47)
  6: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:31-477:37)
  7: _20 = _2
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:31-477:37)
  8: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:39-477:45)
  9: _21 = _15
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:39-477:45)
  10: _19 = nfa::thompson::range_trie::NextDupe { old_id: move _20, new_id: move _21 }
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:20-477:47)
  11: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:46-477:47)
  12: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:46-477:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:9-477:48)
      kind: _17 = std::vec::Vec::<nfa::thompson::range_trie::NextDupe>::push(move _18, move _19) -> [return: bb8, unwind: bb40]
  }
  preds [bb6]
  succs [bb8, bb40]

bb8
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:47-477:48)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:47-477:48)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:477:48-477:49)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:9-495:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:9-495:10)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:9-495:10)
      kind: falseUnwind -> [real: bb10, unwind: bb40]
  }
  preds [bb8, bb23]
  succs [bb10, bb40]

bb10
  0: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:55-478:66)
  1: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:55-478:60)
  2: _25 = &mut _9
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:55-478:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:55-478:66)
      kind: _24 = std::vec::Vec::<nfa::thompson::range_trie::NextDupe>::pop(move _25) -> [return: bb11, unwind: bb40]
  }
  preds [bb9]
  succs [bb11, bb40]

bb11
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:65-478:66)
  1: PlaceMention(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:55-478:66)
  2: _26 = discriminant(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:55-478:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:19-478:52)
      kind: switchInt(move _26) -> [1: bb12, otherwise: bb34]
  }
  preds [bb10]
  succs [bb12, bb34]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:19-478:52)
      kind: falseEdge -> [real: bb13, imaginary: bb34]
  }
  preds [bb11]
  succs [bb13, bb34]

bb13
  0: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:35-478:41)
  1: _27 = (((_24 as Some).0: nfa::thompson::range_trie::NextDupe).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:35-478:41)
  2: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:43-478:49)
  3: _28 = (((_24 as Some).0: nfa::thompson::range_trie::NextDupe).1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:43-478:49)
  4: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  5: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  6: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:25-479:61)
  7: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:25-479:55)
  8: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:25-479:43)
  9: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:25-479:29)
  10: _34 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:25-479:29)
  11: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:36-479:42)
  12: _35 = _27
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:36-479:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:25-479:43)
      kind: _33 = nfa::thompson::range_trie::RangeTrie::state(move _34, move _35) -> [return: bb14, unwind: bb40]
  }
  preds [bb12]
  succs [bb14, bb40]

bb14
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:42-479:43)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:42-479:43)
  2: _32 = &((*_33).0: std::vec::Vec<nfa::thompson::range_trie::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:25-479:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:25-479:61)
      kind: _31 = std::vec::Vec::<nfa::thompson::range_trie::Transition>::len(move _32) -> [return: bb15, unwind: bb40]
  }
  preds [bb13]
  succs [bb15, bb40]

bb15
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:60-479:61)
  1: _30 = core::ops::Range::<usize> { start: const 0_usize, end: move _31 }
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:60-479:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
      kind: _29 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _30) -> [return: bb16, unwind: bb40]
  }
  preds [bb14]
  succs [bb16, bb40]

bb16
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:60-479:61)
  1: PlaceMention(_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  3: _36 = move _29
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:13-494:14)
      kind: goto -> bb17
  }
  preds [bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:13-494:14)
      kind: falseUnwind -> [real: bb18, unwind: bb40]
  }
  preds [bb16, bb29, bb33]
  succs [bb18, bb40]

bb18
  0: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  1: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  2: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  3: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  4: _40 = &mut _36
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  5: _39 = &mut (*_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
      kind: _38 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _39) -> [return: bb19, unwind: bb40]
  }
  preds [bb17]
  succs [bb19, bb40]

bb19
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:60-479:61)
  1: PlaceMention(_38)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  2: _41 = discriminant(_38)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
      kind: switchInt(move _41) -> [0: bb21, 1: bb22, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb21, bb22]

bb20
  0: FakeRead(ForMatchedPlace(None), _38)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:22-479:61)
      kind: unreachable
  }
  preds [bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:13-494:14)
      kind: falseEdge -> [real: bb23, imaginary: bb22]
  }
  preds [bb19]
  succs [bb22, bb23]

bb22
  0: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:17-479:18)
  1: _43 = ((_38 as Some).0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:17-479:18)
  2: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:21-480:22)
  3: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:25-480:58)
  4: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:55-480:58)
  5: StorageLive(_47)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:25-480:55)
  6: StorageLive(_48)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:25-480:43)
  7: StorageLive(_49)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:25-480:29)
  8: _49 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:25-480:29)
  9: StorageLive(_50)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:36-480:42)
  10: _50 = _27
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:36-480:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:25-480:43)
      kind: _48 = nfa::thompson::range_trie::RangeTrie::state(move _49, move _50) -> [return: bb24, unwind: bb40]
  }
  preds [bb19, bb21]
  succs [bb24, bb40]

bb23
  0: _23 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:13-494:14)
  1: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  2: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  3: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  4: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  5: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  6: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  7: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:495:9-495:10)
  8: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:495:9-495:10)
  9: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:495:9-495:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:9-495:10)
      kind: goto -> bb9
  }
  preds [bb21]
  succs [bb9]

bb24
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:42-480:43)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:42-480:43)
  2: _47 = &((*_48).0: std::vec::Vec<nfa::thompson::range_trie::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:25-480:55)
  3: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:56-480:57)
  4: _51 = _43
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:56-480:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:55-480:58)
      kind: _46 = <std::vec::Vec<nfa::thompson::range_trie::Transition> as core::ops::Index<usize>>::index(move _47, move _51) -> [return: bb25, unwind: bb40]
  }
  preds [bb22]
  succs [bb25, bb40]

bb25
  0: _45 = &(*_46)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:25-480:58)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:57-480:58)
  2: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:57-480:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:25-480:66)
      kind: _44 = <nfa::thompson::range_trie::Transition as core::clone::Clone>::clone(move _45) -> [return: bb26, unwind: bb40]
  }
  preds [bb24]
  succs [bb26, bb40]

bb26
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:65-480:66)
  1: FakeRead(ForLet(None), _44)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:21-480:22)
  2: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:66-480:67)
  3: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:480:66-480:67)
  4: StorageLive(_52)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:17-486:18)
  5: StorageLive(_53)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:20-481:38)
  6: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:20-481:29)
  7: _54 = &(_44.1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:20-481:29)
  8: StorageLive(_55)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:33-481:38)
  9: StorageLive(_56)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:33-481:38)
  10: _56 = const nfa::thompson::range_trie::FINAL
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:33-481:38)
  11: _55 = &_56
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:33-481:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:20-481:38)
      kind: _53 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _54, move _55) -> [return: bb27, unwind: bb40]
  }
  preds [bb25]
  succs [bb27, bb40]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:20-481:38)
      kind: switchInt(move _53) -> [0: bb30, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb30]

bb28
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:37-481:38)
  1: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:37-481:38)
  2: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:37-481:38)
  3: StorageLive(_58)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:484:21-484:64)
  4: StorageLive(_59)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:484:21-484:25)
  5: _59 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:484:21-484:25)
  6: StorageLive(_60)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:484:41-484:47)
  7: _60 = _28
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:484:41-484:47)
  8: StorageLive(_61)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:484:49-484:56)
  9: _61 = (_44.0: regex_syntax::utf8::Utf8Range)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:484:49-484:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:484:21-484:64)
      kind: _58 = nfa::thompson::range_trie::RangeTrie::add_transition(move _59, move _60, move _61, const nfa::thompson::range_trie::FINAL) -> [return: bb29, unwind: bb40]
  }
  preds [bb27]
  succs [bb29, bb40]

bb29
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:484:63-484:64)
  1: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:484:63-484:64)
  2: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:484:63-484:64)
  3: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:484:64-484:65)
  4: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:486:17-486:18)
  5: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:486:17-486:18)
  6: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  7: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  8: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  9: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  10: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb17
  }
  preds [bb28]
  succs [bb17]

bb30
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:37-481:38)
  1: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:37-481:38)
  2: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:481:37-481:38)
  3: _52 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:486:18-486:18)
  4: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:486:17-486:18)
  5: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:486:17-486:18)
  6: StorageLive(_62)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:488:21-488:33)
  7: StorageLive(_63)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:488:36-488:40)
  8: _63 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:488:36-488:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:488:36-488:52)
      kind: _62 = nfa::thompson::range_trie::RangeTrie::add_empty(move _63) -> [return: bb31, unwind: bb40]
  }
  preds [bb27]
  succs [bb31, bb40]

bb31
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:488:51-488:52)
  1: FakeRead(ForLet(None), _62)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:488:21-488:33)
  2: StorageLive(_64)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:17-489:67)
  3: StorageLive(_65)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:17-489:21)
  4: _65 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:17-489:21)
  5: StorageLive(_66)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:37-489:43)
  6: _66 = _28
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:37-489:43)
  7: StorageLive(_67)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:45-489:52)
  8: _67 = (_44.0: regex_syntax::utf8::Utf8Range)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:45-489:52)
  9: StorageLive(_68)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:54-489:66)
  10: _68 = _62
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:54-489:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:17-489:67)
      kind: _64 = nfa::thompson::range_trie::RangeTrie::add_transition(move _65, move _66, move _67, move _68) -> [return: bb32, unwind: bb40]
  }
  preds [bb30]
  succs [bb32, bb40]

bb32
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:66-489:67)
  1: StorageDead(_67)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:66-489:67)
  2: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:66-489:67)
  3: StorageDead(_65)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:66-489:67)
  4: StorageDead(_64)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:489:67-489:68)
  5: StorageLive(_69)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:490:17-493:19)
  6: StorageLive(_70)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:490:17-490:22)
  7: _70 = &mut _9
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:490:17-490:22)
  8: StorageLive(_71)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:490:28-493:18)
  9: StorageLive(_72)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:491:29-491:38)
  10: _72 = (_44.1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:491:29-491:38)
  11: StorageLive(_73)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:492:29-492:41)
  12: _73 = _62
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:492:29-492:41)
  13: _71 = nfa::thompson::range_trie::NextDupe { old_id: move _72, new_id: move _73 }
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:490:28-493:18)
  14: StorageDead(_73)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:493:17-493:18)
  15: StorageDead(_72)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:493:17-493:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:490:17-493:19)
      kind: _69 = std::vec::Vec::<nfa::thompson::range_trie::NextDupe>::push(move _70, move _71) -> [return: bb33, unwind: bb40]
  }
  preds [bb31]
  succs [bb33, bb40]

bb33
  0: StorageDead(_71)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:493:18-493:19)
  1: StorageDead(_70)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:493:18-493:19)
  2: StorageDead(_69)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:493:19-493:20)
  3: _37 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:62-494:14)
  4: StorageDead(_62)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  5: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  6: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  7: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  8: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  9: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:494:13-494:14)
  10: _23 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:13-494:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:479:13-494:14)
      kind: goto -> bb17
  }
  preds [bb32]
  succs [bb17]

bb34
  0: StorageLive(_75)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:9-495:10)
  1: _22 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:478:9-495:10)
  2: StorageDead(_75)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:495:9-495:10)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:495:9-495:10)
  4: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:495:9-495:10)
  5: StorageLive(_77)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:496:27-496:32)
  6: _77 = move _9
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:496:27-496:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:496:9-496:24)
      kind: drop(((*_1).4: std::vec::Vec<nfa::thompson::range_trie::NextDupe>)) -> [return: bb35, unwind: bb36]
  }
  preds [bb11, bb12]
  succs [bb35, bb36]

bb35
  0: ((*_1).4: std::vec::Vec<nfa::thompson::range_trie::NextDupe>) = move _77
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:496:9-496:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:496:31-496:32)
      kind: drop(_77) -> [return: bb37, unwind: bb40]
  }
  preds [bb34]
  succs [bb37, bb40]

bb36
  0: ((*_1).4: std::vec::Vec<nfa::thompson::range_trie::NextDupe>) = move _77
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:496:9-496:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:496:31-496:32)
      kind: drop(_77) -> [return: bb40, unwind terminate(cleanup)]
  }
  preds [bb34]
  succs [bb40]

bb37
  0: StorageDead(_77)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:496:31-496:32)
  1: _0 = _15
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:497:9-497:15)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:498:5-498:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:498:5-498:6)
      kind: drop(_9) -> [return: bb38, unwind: bb42]
  }
  preds [bb35]
  succs [bb38, bb42]

bb38
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:498:5-498:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:498:6-498:6)
      kind: goto -> bb39
  }
  preds [bb37]
  succs [bb39]

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:498:6-498:6)
      kind: return
  }
  preds [bb2, bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:498:5-498:6)
      kind: drop(_9) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb5, bb6, bb7, bb9, bb10, bb13, bb14, bb15, bb17, bb18, bb22, bb24, bb25, bb26, bb28, bb30, bb31, bb32, bb35, bb36]
  succs [bb42]

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:471:66-471:67)
      kind: drop(_12) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:466:5-498:6)
      kind: resume
  }
  preds [bb0, bb3, bb37, bb40, bb41]
  succs []

