bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/search.rs:1834:25-1834:64)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/search.rs:1834:59-1834:62)
  2: _3 = _1
    SourceInfo(regex-automata/src/util/search.rs:1834:59-1834:62)
  3: _2 = util::search::MatchErrorKind::HaystackTooLong { len: move _3 }
    SourceInfo(regex-automata/src/util/search.rs:1834:25-1834:64)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/util/search.rs:1834:63-1834:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1834:9-1834:65)
      kind: _0 = util::search::MatchError::new(move _2) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/util/search.rs:1834:64-1834:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1835:6-1835:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1833:5-1835:6)
      kind: resume
  }
  preds [bb0]
  succs []

