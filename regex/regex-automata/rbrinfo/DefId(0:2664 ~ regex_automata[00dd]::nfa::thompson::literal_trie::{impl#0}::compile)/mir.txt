bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:13-170:16)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:39)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:38)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:26)
  4: _6 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:38)
      kind: _5 = nfa::thompson::builder::Builder::add_empty(move _6) -> [return: bb1, unwind: bb129]
  }
  preds []
  succs [bb1, bb129]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:37-170:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:39)
      kind: _4 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _5) -> [return: bb2, unwind: bb128]
  }
  preds [bb0]
  succs [bb2, bb128]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:38-170:39)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:39)
  2: _7 = discriminant(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:39)
      kind: switchInt(move _7) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:39)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:38-170:39)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:39)
  1: _11 = ((_4 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:39)
  2: _3 = _11
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:39)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:38-170:39)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:13-170:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:39-170:40)
      kind: drop(_4) -> [return: bb8, unwind: bb129]
  }
  preds [bb2, bb4]
  succs [bb8, bb129]

bb6
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:38-170:39)
  1: _8 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:38-170:39)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:38-170:39)
  3: _10 = move _8
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:38-170:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:19-170:39)
      kind: _0 = <core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _10) -> [return: bb7, unwind: bb125]
  }
  preds [bb4]
  succs [bb7, bb125]

bb7
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:38-170:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:38-170:39)
      kind: drop(_8) -> [return: bb100, unwind: bb127]
  }
  preds [bb6]
  succs [bb100, bb127]

bb8
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:39-170:40)
  1: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:171:13-171:22)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _12 = std::vec::Vec::<nfa::thompson::literal_trie::Frame<'_>>::new() -> [return: bb9, unwind: bb129]
  }
  preds [bb5]
  succs [bb9, bb129]

bb9
  0: FakeRead(ForLet(None), _12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:171:13-171:22)
  1: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:13-172:18)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:32-172:59)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:32-172:59)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:44-172:59)
  5: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:33-172:44)
  6: _17 = &((*_1).0: std::vec::Vec<nfa::thompson::literal_trie::State>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:33-172:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:44-172:59)
      kind: _16 = <std::vec::Vec<nfa::thompson::literal_trie::State> as core::ops::Index<util::primitives::StateID>>::index(move _17, const util::primitives::StateID::ZERO) -> [return: bb10, unwind: bb124]
  }
  preds [bb8]
  succs [bb10, bb124]

bb10
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:58-172:59)
  1: _15 = &(*_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:32-172:59)
  2: _14 = &(*_15)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:32-172:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:21-172:60)
      kind: _13 = nfa::thompson::literal_trie::Frame::<'_>::new(move _14) -> [return: bb11, unwind: bb124]
  }
  preds [bb9]
  succs [bb11, bb124]

bb11
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:59-172:60)
  1: FakeRead(ForLet(None), _13)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:13-172:18)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:60-172:61)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:172:60-172:61)
  4: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:173:9-235:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:173:9-235:10)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:173:9-235:10)
      kind: falseUnwind -> [real: bb13, unwind: bb123]
  }
  preds [bb11, bb29, bb65, bb87]
  succs [bb13, bb123]

bb13
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:174:13-195:14)
  1: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:174:30-174:50)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:174:30-174:43)
  3: _22 = &mut (_13.1: core::slice::Iter<'_, nfa::thompson::literal_trie::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:174:30-174:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:174:30-174:50)
      kind: _21 = <core::slice::Iter<'_, nfa::thompson::literal_trie::Transition> as core::iter::Iterator>::next(move _22) -> [return: bb14, unwind: bb123]
  }
  preds [bb12]
  succs [bb14, bb123]

bb14
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:174:49-174:50)
  1: PlaceMention(_21)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:174:30-174:50)
  2: _23 = discriminant(_21)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:174:30-174:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:174:20-174:27)
      kind: switchInt(move _23) -> [1: bb15, otherwise: bb30]
  }
  preds [bb13]
  succs [bb15, bb30]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:174:20-174:27)
      kind: falseEdge -> [real: bb16, imaginary: bb30]
  }
  preds [bb14]
  succs [bb16, bb30]

bb16
  0: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:174:25-174:26)
  1: _24 = ((_21 as Some).0: &nfa::thompson::literal_trie::Transition)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:174:25-174:26)
  2: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:17-193:18)
  3: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:20-175:49)
  4: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:20-175:39)
  5: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:31-175:39)
  6: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:20-175:31)
  7: _30 = &((*_1).0: std::vec::Vec<nfa::thompson::literal_trie::State>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:20-175:31)
  8: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:32-175:38)
  9: _31 = ((*_24).1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:32-175:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:31-175:39)
      kind: _29 = <std::vec::Vec<nfa::thompson::literal_trie::State> as core::ops::Index<util::primitives::StateID>>::index(move _30, move _31) -> [return: bb17, unwind: bb123]
  }
  preds [bb15]
  succs [bb17, bb123]

bb17
  0: _28 = &(*_29)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:20-175:39)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:38-175:39)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:38-175:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:20-175:49)
      kind: _27 = nfa::thompson::literal_trie::State::is_leaf(move _28) -> [return: bb18, unwind: bb123]
  }
  preds [bb16]
  succs [bb18, bb123]

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:20-175:49)
      kind: switchInt(move _27) -> [0: bb21, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb21]

bb19
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:48-175:49)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:48-175:49)
  2: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:176:21-180:23)
  3: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:176:21-176:29)
  4: _33 = &mut (_13.3: std::vec::Vec<nfa::thompson::nfa::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:176:21-176:29)
  5: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:176:35-180:22)
  6: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:177:32-177:38)
  7: _35 = ((*_24).0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:177:32-177:38)
  8: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:178:30-178:36)
  9: _36 = ((*_24).0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:178:30-178:36)
  10: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:179:31-179:34)
  11: _37 = _3
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:179:31-179:34)
  12: _34 = nfa::thompson::nfa::Transition { start: move _35, end: move _36, next: move _37 }
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:176:35-180:22)
  13: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:180:21-180:22)
  14: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:180:21-180:22)
  15: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:180:21-180:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:176:21-180:23)
      kind: _32 = std::vec::Vec::<nfa::thompson::nfa::Transition>::push(move _33, move _34) -> [return: bb20, unwind: bb123]
  }
  preds [bb18]
  succs [bb20, bb123]

bb20
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:180:22-180:23)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:180:22-180:23)
  2: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:180:23-180:24)
  3: _26 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:50-181:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:17-193:18)
      kind: goto -> bb29
  }
  preds [bb19]
  succs [bb29]

bb21
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:48-175:49)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:48-175:49)
  2: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:182:21-190:23)
  3: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:182:21-182:29)
  4: _39 = &mut (_13.3: std::vec::Vec<nfa::thompson::nfa::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:182:21-182:29)
  5: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:182:35-190:22)
  6: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:183:32-183:38)
  7: _41 = ((*_24).0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:183:32-183:38)
  8: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:184:30-184:36)
  9: _42 = ((*_24).0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:184:30-184:36)
  10: _40 = nfa::thompson::nfa::Transition { start: move _41, end: move _42, next: const util::primitives::StateID::ZERO }
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:182:35-190:22)
  11: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:190:21-190:22)
  12: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:190:21-190:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:182:21-190:23)
      kind: _38 = std::vec::Vec::<nfa::thompson::nfa::Transition>::push(move _39, move _40) -> [return: bb22, unwind: bb123]
  }
  preds [bb18]
  succs [bb22, bb123]

bb22
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:190:22-190:23)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:190:22-190:23)
  2: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:190:23-190:24)
  3: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:191:21-191:34)
  4: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:191:21-191:26)
  5: _44 = &mut _12
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:191:21-191:26)
  6: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:191:32-191:33)
  7: _45 = move _13
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:191:32-191:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:191:21-191:34)
      kind: _43 = std::vec::Vec::<nfa::thompson::literal_trie::Frame<'_>>::push(move _44, move _45) -> [return: bb23, unwind: bb122]
  }
  preds [bb21]
  succs [bb23, bb122]

bb23
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:191:33-191:34)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:191:33-191:34)
  2: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:191:34-191:35)
  3: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:25-192:57)
  4: StorageLive(_47)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:36-192:56)
  5: StorageLive(_48)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:36-192:56)
  6: StorageLive(_49)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:48-192:56)
  7: StorageLive(_50)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:37-192:48)
  8: _50 = &((*_1).0: std::vec::Vec<nfa::thompson::literal_trie::State>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:37-192:48)
  9: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:49-192:55)
  10: _51 = ((*_24).1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:49-192:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:48-192:56)
      kind: _49 = <std::vec::Vec<nfa::thompson::literal_trie::State> as core::ops::Index<util::primitives::StateID>>::index(move _50, move _51) -> [return: bb24, unwind: bb123]
  }
  preds [bb22]
  succs [bb24, bb123]

bb24
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:55-192:56)
  1: StorageDead(_50)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:55-192:56)
  2: _48 = &(*_49)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:36-192:56)
  3: _47 = &(*_48)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:36-192:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:25-192:57)
      kind: _46 = nfa::thompson::literal_trie::Frame::<'_>::new(move _47) -> [return: bb25, unwind: bb123]
  }
  preds [bb23]
  succs [bb25, bb123]

bb25
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:56-192:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:21-192:22)
      kind: drop(_13) -> [return: bb26, unwind: bb27]
  }
  preds [bb24]
  succs [bb26, bb27]

bb26
  0: _13 = move _46
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:21-192:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:56-192:57)
      kind: drop(_46) -> [return: bb28, unwind: bb123]
  }
  preds [bb25]
  succs [bb28, bb123]

bb27
  0: _13 = move _46
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:21-192:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:56-192:57)
      kind: drop(_46) -> [return: bb123, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb123]

bb28
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:56-192:57)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:57-192:58)
  2: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:192:57-192:58)
  3: _26 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:181:24-193:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:175:17-193:18)
      kind: goto -> bb29
  }
  preds [bb26]
  succs [bb29]

bb29
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:193:17-193:18)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:193:17-193:18)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:195:13-195:14)
  3: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:195:13-195:14)
  4: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:195:13-195:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb12
  }
  preds [bb20, bb28]
  succs [bb12]

bb30
  0: _20 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:195:14-195:14)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:195:13-195:14)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:195:13-195:14)
  3: StorageLive(_52)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:199:13-207:14)
  4: StorageLive(_53)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:199:17-199:36)
  5: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:199:17-199:25)
  6: _54 = &(_13.3: std::vec::Vec<nfa::thompson::nfa::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:199:17-199:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:199:17-199:36)
      kind: _53 = std::vec::Vec::<nfa::thompson::nfa::Transition>::is_empty(move _54) -> [return: bb31, unwind: bb123]
  }
  preds [bb14, bb15]
  succs [bb31, bb123]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:199:17-199:36)
      kind: switchInt(move _53) -> [0: bb33, otherwise: bb32]
  }
  preds [bb30]
  succs [bb32, bb33]

bb32
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:199:35-199:36)
  1: _52 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:207:14-207:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:199:13-207:14)
      kind: goto -> bb60
  }
  preds [bb31]
  succs [bb60]

bb33
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:199:35-199:36)
  1: StorageLive(_55)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:200:21-200:29)
  2: StorageLive(_56)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:200:35-200:54)
  3: StorageLive(_57)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:200:35-200:49)
  4: StorageLive(_58)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:200:35-200:43)
  5: _58 = &(_13.3: std::vec::Vec<nfa::thompson::nfa::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:200:35-200:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:200:35-200:49)
      kind: _57 = std::vec::Vec::<nfa::thompson::nfa::Transition>::len(move _58) -> [return: bb34, unwind: bb123]
  }
  preds [bb31]
  succs [bb34, bb123]

bb34
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:200:48-200:49)
  1: _56 = Eq(move _57, const 1_usize)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:200:35-200:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:200:35-200:54)
      kind: switchInt(move _56) -> [0: bb46, otherwise: bb35]
  }
  preds [bb33]
  succs [bb35, bb46]

bb35
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:200:53-200:54)
  1: StorageLive(_59)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:64)
  2: StorageLive(_60)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:63)
  3: StorageLive(_61)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:28)
  4: _61 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:28)
  5: StorageLive(_62)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:39-201:62)
  6: StorageLive(_63)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:39-201:53)
  7: StorageLive(_64)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:39-201:47)
  8: _64 = &mut (_13.3: std::vec::Vec<nfa::thompson::nfa::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:39-201:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:39-201:53)
      kind: _63 = std::vec::Vec::<nfa::thompson::nfa::Transition>::pop(move _64) -> [return: bb36, unwind: bb123]
  }
  preds [bb34]
  succs [bb36, bb123]

bb36
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:52-201:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:39-201:62)
      kind: _62 = core::option::Option::<nfa::thompson::nfa::Transition>::unwrap(move _63) -> [return: bb37, unwind: bb123]
  }
  preds [bb35]
  succs [bb37, bb123]

bb37
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:61-201:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:63)
      kind: _60 = nfa::thompson::builder::Builder::add_range(move _61, move _62) -> [return: bb38, unwind: bb123]
  }
  preds [bb36]
  succs [bb38, bb123]

bb38
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:62-201:63)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:62-201:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:64)
      kind: _59 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _60) -> [return: bb39, unwind: bb121]
  }
  preds [bb37]
  succs [bb39, bb121]

bb39
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:63-201:64)
  1: PlaceMention(_59)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:64)
  2: _65 = discriminant(_59)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:64)
      kind: switchInt(move _65) -> [0: bb42, 1: bb41, otherwise: bb40]
  }
  preds [bb38]
  succs [bb40, bb41, bb42]

bb40
  0: FakeRead(ForMatchedPlace(None), _59)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:64)
      kind: unreachable
  }
  preds [bb39]
  succs []

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:63-201:64)
      kind: falseEdge -> [real: bb43, imaginary: bb42]
  }
  preds [bb39]
  succs [bb42, bb43]

bb42
  0: StorageLive(_69)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:64)
  1: _69 = ((_59 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:64)
  2: _55 = _69
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:64)
  3: StorageDead(_69)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:63-201:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:202:17-202:18)
      kind: drop(_59) -> [return: bb45, unwind: bb123]
  }
  preds [bb39, bb41]
  succs [bb45, bb123]

bb43
  0: StorageLive(_66)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:63-201:64)
  1: _66 = move ((_59 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:63-201:64)
  2: StorageLive(_68)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:63-201:64)
  3: _68 = move _66
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:63-201:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:21-201:64)
      kind: _0 = <core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _68) -> [return: bb44, unwind: bb118]
  }
  preds [bb41]
  succs [bb44, bb118]

bb44
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:63-201:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:63-201:64)
      kind: drop(_66) -> [return: bb94, unwind: bb120]
  }
  preds [bb43]
  succs [bb94, bb120]

bb45
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:202:17-202:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:200:32-205:18)
      kind: goto -> bb58
  }
  preds [bb42]
  succs [bb58]

bb46
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:200:53-200:54)
  1: StorageLive(_70)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:203:25-203:31)
  2: StorageLive(_71)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:203:47-203:60)
  3: StorageLive(_72)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:203:47-203:60)
  4: _72 = &mut (_13.3: std::vec::Vec<nfa::thompson::nfa::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:203:47-203:60)
  5: _71 = &mut (*_72)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:203:47-203:60)
  6: StorageLive(_73)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _73 = std::vec::Vec::<nfa::thompson::nfa::Transition>::new() -> [return: bb47, unwind: bb123]
  }
  preds [bb34]
  succs [bb47, bb123]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:203:34-203:69)
      kind: _70 = core::mem::replace::<std::vec::Vec<nfa::thompson::nfa::Transition>>(move _71, move _73) -> [return: bb48, unwind: bb117]
  }
  preds [bb46]
  succs [bb48, bb117]

bb48
  0: StorageDead(_73)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:203:68-203:69)
  1: StorageDead(_71)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:203:68-203:69)
  2: FakeRead(ForLet(None), _70)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:203:25-203:31)
  3: StorageDead(_72)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:203:69-203:70)
  4: StorageLive(_74)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:48)
  5: StorageLive(_75)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:47)
  6: StorageLive(_76)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:28)
  7: _76 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:28)
  8: StorageLive(_77)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:40-204:46)
  9: _77 = move _70
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:40-204:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:47)
      kind: _75 = nfa::thompson::builder::Builder::add_sparse(move _76, move _77) -> [return: bb49, unwind: bb115]
  }
  preds [bb47]
  succs [bb49, bb115]

bb49
  0: StorageDead(_77)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:46-204:47)
  1: StorageDead(_76)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:46-204:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:48)
      kind: _74 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _75) -> [return: bb50, unwind: bb114]
  }
  preds [bb48]
  succs [bb50, bb114]

bb50
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:47-204:48)
  1: PlaceMention(_74)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:48)
  2: _78 = discriminant(_74)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:48)
      kind: switchInt(move _78) -> [0: bb53, 1: bb52, otherwise: bb51]
  }
  preds [bb49]
  succs [bb51, bb52, bb53]

bb51
  0: FakeRead(ForMatchedPlace(None), _74)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:48)
      kind: unreachable
  }
  preds [bb50]
  succs []

bb52
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:47-204:48)
      kind: falseEdge -> [real: bb54, imaginary: bb53]
  }
  preds [bb50]
  succs [bb53, bb54]

bb53
  0: StorageLive(_82)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:48)
  1: _82 = ((_74 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:48)
  2: _55 = _82
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:48)
  3: StorageDead(_82)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:47-204:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:205:17-205:18)
      kind: drop(_70) -> [return: bb56, unwind: bb113]
  }
  preds [bb50, bb52]
  succs [bb56, bb113]

bb54
  0: StorageLive(_79)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:47-204:48)
  1: _79 = move ((_74 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:47-204:48)
  2: StorageLive(_81)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:47-204:48)
  3: _81 = move _79
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:47-204:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:21-204:48)
      kind: _0 = <core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _81) -> [return: bb55, unwind: bb110]
  }
  preds [bb52]
  succs [bb55, bb110]

bb55
  0: StorageDead(_81)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:47-204:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:47-204:48)
      kind: drop(_79) -> [return: bb91, unwind: bb112]
  }
  preds [bb54]
  succs [bb91, bb112]

bb56
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:205:17-205:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:205:17-205:18)
      kind: drop(_74) -> [return: bb57, unwind: bb123]
  }
  preds [bb53]
  succs [bb57, bb123]

bb57
  0: StorageDead(_74)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:205:17-205:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:200:32-205:18)
      kind: goto -> bb58
  }
  preds [bb56]
  succs [bb58]

bb58
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:205:17-205:18)
  1: FakeRead(ForLet(None), _55)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:200:21-200:29)
  2: StorageLive(_83)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:206:17-206:39)
  3: StorageLive(_84)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:206:17-206:24)
  4: _84 = &mut (_13.2: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:206:17-206:24)
  5: StorageLive(_85)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:206:30-206:38)
  6: _85 = _55
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:206:30-206:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:206:17-206:39)
      kind: _83 = std::vec::Vec::<util::primitives::StateID>::push(move _84, move _85) -> [return: bb59, unwind: bb123]
  }
  preds [bb45, bb57]
  succs [bb59, bb123]

bb59
  0: StorageDead(_85)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:206:38-206:39)
  1: StorageDead(_84)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:206:38-206:39)
  2: StorageDead(_83)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:206:39-206:40)
  3: _52 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:199:37-207:14)
  4: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:207:13-207:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:199:13-207:14)
      kind: goto -> bb60
  }
  preds [bb58]
  succs [bb60]

bb60
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:207:13-207:14)
  1: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:207:13-207:14)
  2: StorageLive(_86)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:209:13-217:14)
  3: StorageLive(_87)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:209:34-209:49)
  4: StorageLive(_88)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:209:34-209:42)
  5: _88 = &mut (_13.0: nfa::thompson::literal_trie::StateChunksIter<'_>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:209:34-209:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:209:34-209:49)
      kind: _87 = <nfa::thompson::literal_trie::StateChunksIter<'_> as core::iter::Iterator>::next(move _88) -> [return: bb61, unwind: bb123]
  }
  preds [bb32, bb59]
  succs [bb61, bb123]

bb61
  0: StorageDead(_88)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:209:48-209:49)
  1: PlaceMention(_87)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:209:34-209:49)
  2: _89 = discriminant(_87)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:209:34-209:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:209:20-209:31)
      kind: switchInt(move _89) -> [1: bb62, otherwise: bb66]
  }
  preds [bb60]
  succs [bb62, bb66]

bb62
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:209:20-209:31)
      kind: falseEdge -> [real: bb63, imaginary: bb66]
  }
  preds [bb61]
  succs [bb63, bb66]

bb63
  0: StorageLive(_90)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:209:25-209:30)
  1: _90 = ((_87 as Some).0: &[nfa::thompson::literal_trie::Transition])
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:209:25-209:30)
  2: StorageLive(_92)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:213:17-213:34)
  3: StorageLive(_93)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:213:17-213:24)
  4: _93 = &mut (_13.2: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:213:17-213:24)
  5: StorageLive(_94)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:213:30-213:33)
  6: _94 = _3
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:213:30-213:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:213:17-213:34)
      kind: _92 = std::vec::Vec::<util::primitives::StateID>::push(move _93, move _94) -> [return: bb64, unwind: bb123]
  }
  preds [bb62]
  succs [bb64, bb123]

bb64
  0: StorageDead(_94)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:213:33-213:34)
  1: StorageDead(_93)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:213:33-213:34)
  2: StorageDead(_92)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:213:34-213:35)
  3: StorageLive(_95)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:215:33-215:45)
  4: StorageLive(_96)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:215:33-215:38)
  5: _96 = &(*_90)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:215:33-215:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:215:33-215:45)
      kind: _95 = core::slice::<impl [nfa::thompson::literal_trie::Transition]>::iter(move _96) -> [return: bb65, unwind: bb123]
  }
  preds [bb63]
  succs [bb65, bb123]

bb65
  0: StorageDead(_96)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:215:44-215:45)
  1: (_13.1: core::slice::Iter<'_, nfa::thompson::literal_trie::Transition>) = move _95
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:215:17-215:45)
  2: StorageDead(_95)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:215:44-215:45)
  3: StorageDead(_90)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:217:13-217:14)
  4: StorageDead(_87)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:217:13-217:14)
  5: StorageDead(_86)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:217:13-217:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb12
  }
  preds [bb64]
  succs [bb12]

bb66
  0: _86 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:217:14-217:14)
  1: StorageDead(_87)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:217:13-217:14)
  2: StorageDead(_86)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:217:13-217:14)
  3: StorageLive(_97)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:17-222:22)
  4: StorageLive(_98)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:52)
  5: StorageLive(_99)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:51)
  6: StorageLive(_100)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:32)
  7: _100 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:32)
  8: StorageLive(_101)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:43-222:50)
  9: _101 = move (_13.2: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:43-222:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:51)
      kind: _99 = nfa::thompson::builder::Builder::add_union(move _100, move _101) -> [return: bb67, unwind: bb109]
  }
  preds [bb61, bb62]
  succs [bb67, bb109]

bb67
  0: StorageDead(_101)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:50-222:51)
  1: StorageDead(_100)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:50-222:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:52)
      kind: _98 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _99) -> [return: bb68, unwind: bb108]
  }
  preds [bb66]
  succs [bb68, bb108]

bb68
  0: StorageDead(_99)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:51-222:52)
  1: PlaceMention(_98)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:52)
  2: _102 = discriminant(_98)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:52)
      kind: switchInt(move _102) -> [0: bb71, 1: bb70, otherwise: bb69]
  }
  preds [bb67]
  succs [bb69, bb70, bb71]

bb69
  0: FakeRead(ForMatchedPlace(None), _98)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:52)
      kind: unreachable
  }
  preds [bb68]
  succs []

bb70
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:51-222:52)
      kind: falseEdge -> [real: bb72, imaginary: bb71]
  }
  preds [bb68]
  succs [bb71, bb72]

bb71
  0: StorageLive(_106)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:52)
  1: _106 = ((_98 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:52)
  2: _97 = _106
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:52)
  3: StorageDead(_106)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:51-222:52)
  4: FakeRead(ForLet(None), _97)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:17-222:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:52-222:53)
      kind: drop(_98) -> [return: bb74, unwind: bb123]
  }
  preds [bb68, bb70]
  succs [bb74, bb123]

bb72
  0: StorageLive(_103)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:51-222:52)
  1: _103 = move ((_98 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:51-222:52)
  2: StorageLive(_105)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:51-222:52)
  3: _105 = move _103
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:51-222:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:25-222:52)
      kind: _0 = <core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _105) -> [return: bb73, unwind: bb105]
  }
  preds [bb70]
  succs [bb73, bb105]

bb73
  0: StorageDead(_105)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:51-222:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:51-222:52)
      kind: drop(_103) -> [return: bb89, unwind: bb107]
  }
  preds [bb72]
  succs [bb89, bb107]

bb74
  0: StorageDead(_98)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:52-222:53)
  1: StorageLive(_107)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:223:19-223:30)
  2: StorageLive(_108)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:223:19-223:24)
  3: _108 = &mut _12
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:223:19-223:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:223:19-223:30)
      kind: _107 = std::vec::Vec::<nfa::thompson::literal_trie::Frame<'_>>::pop(move _108) -> [return: bb75, unwind: bb123]
  }
  preds [bb71]
  succs [bb75, bb123]

bb75
  0: StorageDead(_108)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:223:29-223:30)
  1: PlaceMention(_107)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:223:19-223:30)
  2: _109 = discriminant(_107)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:223:19-223:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:223:13-223:30)
      kind: switchInt(move _109) -> [0: bb77, 1: bb78, otherwise: bb76]
  }
  preds [bb74]
  succs [bb76, bb77, bb78]

bb76
  0: FakeRead(ForMatchedPlace(None), _107)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:223:19-223:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:223:19-223:30)
      kind: unreachable
  }
  preds [bb75]
  succs []

bb77
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:224:17-224:21)
      kind: falseEdge -> [real: bb79, imaginary: bb78]
  }
  preds [bb75]
  succs [bb78, bb79]

bb78
  0: StorageLive(_114)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:227:22-227:32)
  1: _114 = move ((_107 as Some).0: nfa::thompson::literal_trie::Frame<'_>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:227:22-227:32)
  2: StorageLive(_115)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:62-231:67)
  3: _115 = _97
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:62-231:67)
  4: StorageLive(_116)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:21-231:54)
  5: StorageLive(_117)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:21-231:45)
  6: StorageLive(_118)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:21-231:34)
  7: StorageLive(_119)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:21-231:45)
  8: StorageLive(_120)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:21-231:34)
  9: _120 = &mut (_114.3: std::vec::Vec<nfa::thompson::nfa::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:21-231:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:21-231:45)
      kind: _119 = <std::vec::Vec<nfa::thompson::nfa::Transition> as core::ops::DerefMut>::deref_mut(move _120) -> [return: bb80, unwind: bb103]
  }
  preds [bb75, bb77]
  succs [bb80, bb103]

bb79
  0: StorageLive(_111)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:225:31-225:57)
  1: StorageLive(_112)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:225:45-225:50)
  2: _112 = _97
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:225:45-225:50)
  3: StorageLive(_113)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:225:52-225:55)
  4: _113 = _3
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:225:52-225:55)
  5: _111 = nfa::thompson::compiler::ThompsonRef { start: move _112, end: move _113 }
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:225:31-225:57)
  6: StorageDead(_113)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:225:56-225:57)
  7: StorageDead(_112)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:225:56-225:57)
  8: _0 = core::result::Result::<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError>::Ok(move _111)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:225:28-225:58)
  9: StorageDead(_111)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:225:57-225:58)
  10: StorageDead(_97)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:235:9-235:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:235:9-235:10)
      kind: drop(_107) -> [return: bb88, unwind: bb123]
  }
  preds [bb77]
  succs [bb88, bb123]

bb80
  0: _118 = &mut (*_119)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:21-231:34)
  1: StorageDead(_120)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:33-231:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:21-231:45)
      kind: _117 = core::slice::<impl [nfa::thompson::nfa::Transition]>::last_mut(move _118) -> [return: bb81, unwind: bb103]
  }
  preds [bb78]
  succs [bb81, bb103]

bb81
  0: StorageDead(_118)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:44-231:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:21-231:54)
      kind: _116 = core::option::Option::<&mut nfa::thompson::nfa::Transition>::unwrap(move _117) -> [return: bb82, unwind: bb103]
  }
  preds [bb80]
  succs [bb82, bb103]

bb82
  0: StorageDead(_117)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:53-231:54)
  1: ((*_116).2: util::primitives::StateID) = move _115
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:21-231:67)
  2: StorageDead(_115)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:66-231:67)
  3: StorageDead(_119)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:67-231:68)
  4: StorageDead(_116)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:231:67-231:68)
  5: StorageLive(_121)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:232:25-232:31)
  6: _121 = move _114
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:232:25-232:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:232:21-232:22)
      kind: drop(_13) -> [return: bb83, unwind: bb84]
  }
  preds [bb81]
  succs [bb83, bb84]

bb83
  0: _13 = move _121
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:232:21-232:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:232:30-232:31)
      kind: drop(_121) -> [return: bb85, unwind: bb103]
  }
  preds [bb82]
  succs [bb85, bb103]

bb84
  0: _13 = move _121
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:232:21-232:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:232:30-232:31)
      kind: drop(_121) -> [return: bb103, unwind terminate(cleanup)]
  }
  preds [bb82]
  succs [bb103]

bb85
  0: StorageDead(_121)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:232:30-232:31)
  1: _19 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:227:37-233:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:233:17-233:18)
      kind: drop(_114) -> [return: bb86, unwind: bb104]
  }
  preds [bb83]
  succs [bb86, bb104]

bb86
  0: StorageDead(_114)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:233:17-233:18)
  1: StorageDead(_97)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:235:9-235:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:235:9-235:10)
      kind: drop(_107) -> [return: bb87, unwind: bb123]
  }
  preds [bb85]
  succs [bb87, bb123]

bb87
  0: StorageDead(_107)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:235:9-235:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:173:9-235:10)
      kind: goto -> bb12
  }
  preds [bb86]
  succs [bb12]

bb88
  0: StorageDead(_107)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:235:9-235:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb97
  }
  preds [bb79]
  succs [bb97]

bb89
  0: StorageDead(_103)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:51-222:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:52-222:53)
      kind: drop(_98) -> [return: bb90, unwind: bb123]
  }
  preds [bb73]
  succs [bb90, bb123]

bb90
  0: StorageDead(_98)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:52-222:53)
  1: StorageDead(_97)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:235:9-235:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb97
  }
  preds [bb89]
  succs [bb97]

bb91
  0: StorageDead(_79)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:47-204:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:205:17-205:18)
      kind: drop(_70) -> [return: bb92, unwind: bb113]
  }
  preds [bb55]
  succs [bb92, bb113]

bb92
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:205:17-205:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:205:17-205:18)
      kind: drop(_74) -> [return: bb93, unwind: bb123]
  }
  preds [bb91]
  succs [bb93, bb123]

bb93
  0: StorageDead(_74)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:205:17-205:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb96
  }
  preds [bb92]
  succs [bb96]

bb94
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:63-201:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:202:17-202:18)
      kind: drop(_59) -> [return: bb95, unwind: bb123]
  }
  preds [bb44]
  succs [bb95, bb123]

bb95
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:202:17-202:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb96
  }
  preds [bb94]
  succs [bb96]

bb96
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:205:17-205:18)
  1: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:207:13-207:14)
  2: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:207:13-207:14)
  3: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:207:13-207:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb97
  }
  preds [bb93, bb95]
  succs [bb97]

bb97
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:235:9-235:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:236:5-236:6)
      kind: drop(_13) -> [return: bb98, unwind: bb124]
  }
  preds [bb88, bb90, bb96]
  succs [bb98, bb124]

bb98
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:236:5-236:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:236:5-236:6)
      kind: drop(_12) -> [return: bb99, unwind: bb129]
  }
  preds [bb97]
  succs [bb99, bb129]

bb99
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:236:5-236:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb102
  }
  preds [bb98]
  succs [bb102]

bb100
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:38-170:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:39-170:40)
      kind: drop(_4) -> [return: bb101, unwind: bb129]
  }
  preds [bb7]
  succs [bb101, bb129]

bb101
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:39-170:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb102
  }
  preds [bb100]
  succs [bb102]

bb102
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:236:5-236:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:236:6-236:6)
      kind: return
  }
  preds [bb99, bb101]
  succs []

bb103
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:233:17-233:18)
      kind: drop(_114) -> [return: bb104, unwind terminate(cleanup)]
  }
  preds [bb78, bb80, bb81, bb83, bb84]
  succs [bb104]

bb104
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:235:9-235:10)
      kind: drop(_107) -> [return: bb123, unwind terminate(cleanup)]
  }
  preds [bb85, bb103]
  succs [bb123]

bb105
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:51-222:52)
      kind: drop(_105) -> [return: bb106, unwind terminate(cleanup)]
  }
  preds [bb72]
  succs [bb106]

bb106
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:51-222:52)
      kind: drop(_103) -> [return: bb107, unwind terminate(cleanup)]
  }
  preds [bb105]
  succs [bb107]

bb107
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:52-222:53)
      kind: drop(_98) -> [return: bb123, unwind terminate(cleanup)]
  }
  preds [bb73, bb106]
  succs [bb123]

bb108
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:51-222:52)
      kind: drop(_99) -> [return: bb123, unwind terminate(cleanup)]
  }
  preds [bb67]
  succs [bb123]

bb109
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:222:50-222:51)
      kind: drop(_101) -> [return: bb123, unwind terminate(cleanup)]
  }
  preds [bb66]
  succs [bb123]

bb110
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:47-204:48)
      kind: drop(_81) -> [return: bb111, unwind terminate(cleanup)]
  }
  preds [bb54]
  succs [bb111]

bb111
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:47-204:48)
      kind: drop(_79) -> [return: bb112, unwind terminate(cleanup)]
  }
  preds [bb110]
  succs [bb112]

bb112
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:205:17-205:18)
      kind: drop(_70) -> [return: bb113, unwind terminate(cleanup)]
  }
  preds [bb55, bb111]
  succs [bb113]

bb113
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:205:17-205:18)
      kind: drop(_74) -> [return: bb123, unwind terminate(cleanup)]
  }
  preds [bb53, bb91, bb112]
  succs [bb123]

bb114
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:47-204:48)
      kind: drop(_75) -> [return: bb116, unwind terminate(cleanup)]
  }
  preds [bb49]
  succs [bb116]

bb115
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:204:46-204:47)
      kind: drop(_77) -> [return: bb116, unwind terminate(cleanup)]
  }
  preds [bb48]
  succs [bb116]

bb116
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:205:17-205:18)
      kind: drop(_70) -> [return: bb123, unwind terminate(cleanup)]
  }
  preds [bb114, bb115]
  succs [bb123]

bb117
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:203:68-203:69)
      kind: drop(_73) -> [return: bb123, unwind terminate(cleanup)]
  }
  preds [bb47]
  succs [bb123]

bb118
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:63-201:64)
      kind: drop(_68) -> [return: bb119, unwind terminate(cleanup)]
  }
  preds [bb43]
  succs [bb119]

bb119
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:63-201:64)
      kind: drop(_66) -> [return: bb120, unwind terminate(cleanup)]
  }
  preds [bb118]
  succs [bb120]

bb120
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:202:17-202:18)
      kind: drop(_59) -> [return: bb123, unwind terminate(cleanup)]
  }
  preds [bb44, bb119]
  succs [bb123]

bb121
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:201:63-201:64)
      kind: drop(_60) -> [return: bb123, unwind terminate(cleanup)]
  }
  preds [bb38]
  succs [bb123]

bb122
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:191:33-191:34)
      kind: drop(_45) -> [return: bb123, unwind terminate(cleanup)]
  }
  preds [bb22]
  succs [bb123]

bb123
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:236:5-236:6)
      kind: drop(_13) -> [return: bb124, unwind terminate(cleanup)]
  }
  preds [bb12, bb13, bb16, bb17, bb19, bb21, bb23, bb24, bb26, bb27, bb30, bb33, bb35, bb36, bb37, bb42, bb46, bb56, bb58, bb60, bb63, bb64, bb71, bb74, bb79, bb86, bb89, bb92, bb94, bb104, bb107, bb108, bb109, bb113, bb116, bb117, bb120, bb121, bb122]
  succs [bb124]

bb124
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:236:5-236:6)
      kind: drop(_12) -> [return: bb129, unwind terminate(cleanup)]
  }
  preds [bb9, bb10, bb97, bb123]
  succs [bb129]

bb125
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:38-170:39)
      kind: drop(_10) -> [return: bb126, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb126]

bb126
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:38-170:39)
      kind: drop(_8) -> [return: bb127, unwind terminate(cleanup)]
  }
  preds [bb125]
  succs [bb127]

bb127
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:39-170:40)
      kind: drop(_4) -> [return: bb129, unwind terminate(cleanup)]
  }
  preds [bb7, bb126]
  succs [bb129]

bb128
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:170:38-170:39)
      kind: drop(_5) -> [return: bb129, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb129]

bb129
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:151:5-236:6)
      kind: resume
  }
  preds [bb0, bb5, bb8, bb98, bb100, bb124, bb127, bb128]
  succs []

