bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/util/pool.rs:547:13-572:14)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/util/pool.rs:547:16-547:42)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/util/pool.rs:547:16-547:21)
  3: _6 = _3
    SourceInfo(regex-automata/src/util/pool.rs:547:16-547:21)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/util/pool.rs:547:25-547:42)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/util/pool.rs:547:25-547:42)
  6: _8 = const {alloc48: &usize}
    SourceInfo(regex-automata/src/util/pool.rs:547:25-547:42)
  7: _7 = (*_8)
    SourceInfo(regex-automata/src/util/pool.rs:547:25-547:42)
  8: _5 = Eq(move _6, move _7)
    SourceInfo(regex-automata/src/util/pool.rs:547:16-547:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:547:16-547:42)
      kind: switchInt(move _5) -> [0: bb13, otherwise: bb1]
  }
  preds []
  succs [bb1, bb13]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/pool.rs:547:41-547:42)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/pool.rs:547:41-547:42)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/pool.rs:547:41-547:42)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/util/pool.rs:557:21-557:24)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/util/pool.rs:557:27-557:37)
  5: _10 = &((*_1).2: core::sync::atomic::AtomicUsize)
    SourceInfo(regex-automata/src/util/pool.rs:557:27-557:37)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/util/pool.rs:558:21-558:38)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/util/pool.rs:558:21-558:38)
  8: _12 = const {alloc48: &usize}
    SourceInfo(regex-automata/src/util/pool.rs:558:21-558:38)
  9: _11 = (*_12)
    SourceInfo(regex-automata/src/util/pool.rs:558:21-558:38)
  10: StorageLive(_13)
    SourceInfo(regex-automata/src/util/pool.rs:559:21-559:36)
  11: StorageLive(_14)
    SourceInfo(regex-automata/src/util/pool.rs:559:21-559:36)
  12: _14 = const {alloc49: &usize}
    SourceInfo(regex-automata/src/util/pool.rs:559:21-559:36)
  13: _13 = (*_14)
    SourceInfo(regex-automata/src/util/pool.rs:559:21-559:36)
  14: StorageLive(_15)
    SourceInfo(regex-automata/src/util/pool.rs:560:21-560:37)
  15: _15 = core::sync::atomic::Ordering::AcqRel
    SourceInfo(regex-automata/src/util/pool.rs:560:21-560:37)
  16: StorageLive(_16)
    SourceInfo(regex-automata/src/util/pool.rs:561:21-561:38)
  17: _16 = core::sync::atomic::Ordering::Acquire
    SourceInfo(regex-automata/src/util/pool.rs:561:21-561:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:557:27-562:18)
      kind: _9 = core::sync::atomic::AtomicUsize::compare_exchange(move _10, move _11, move _13, move _15, move _16) -> [return: bb2, unwind: bb66]
  }
  preds [bb0]
  succs [bb2, bb66]

bb2
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/util/pool.rs:562:17-562:18)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/util/pool.rs:562:17-562:18)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/util/pool.rs:562:17-562:18)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/util/pool.rs:562:17-562:18)
  4: StorageDead(_10)
    SourceInfo(regex-automata/src/util/pool.rs:562:17-562:18)
  5: FakeRead(ForLet(None), _9)
    SourceInfo(regex-automata/src/util/pool.rs:557:21-557:24)
  6: StorageDead(_14)
    SourceInfo(regex-automata/src/util/pool.rs:562:18-562:19)
  7: StorageDead(_12)
    SourceInfo(regex-automata/src/util/pool.rs:562:18-562:19)
  8: StorageLive(_17)
    SourceInfo(regex-automata/src/util/pool.rs:563:20-563:31)
  9: StorageLive(_18)
    SourceInfo(regex-automata/src/util/pool.rs:563:20-563:23)
  10: _18 = &_9
    SourceInfo(regex-automata/src/util/pool.rs:563:20-563:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:563:20-563:31)
      kind: _17 = core::result::Result::<usize, usize>::is_ok(move _18) -> [return: bb3, unwind: bb66]
  }
  preds [bb1]
  succs [bb3, bb66]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:563:20-563:31)
      kind: switchInt(move _17) -> [0: bb12, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb12]

bb4
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/util/pool.rs:563:30-563:31)
  1: StorageLive(_20)
    SourceInfo(regex-automata/src/util/pool.rs:567:21-569:22)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/util/pool.rs:568:49-568:70)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/util/pool.rs:568:54-568:69)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/util/pool.rs:568:54-568:67)
  5: _23 = &((*_1).0: F)
    SourceInfo(regex-automata/src/util/pool.rs:568:54-568:67)
  6: StorageLive(_24)
    SourceInfo(regex-automata/src/util/pool.rs:568:54-568:69)
  7: _24 = ()
    SourceInfo(regex-automata/src/util/pool.rs:568:54-568:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:568:54-568:69)
      kind: _22 = <F as core::ops::Fn<()>>::call(move _23, move _24) -> [return: bb5, unwind: bb66]
  }
  preds [bb3]
  succs [bb5, bb66]

bb5
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/util/pool.rs:568:68-568:69)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/util/pool.rs:568:68-568:69)
  2: _21 = core::option::Option::<T>::Some(move _22)
    SourceInfo(regex-automata/src/util/pool.rs:568:49-568:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:568:69-568:70)
      kind: drop(_22) -> [return: bb6, unwind: bb65]
  }
  preds [bb4]
  succs [bb6, bb65]

bb6
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/util/pool.rs:568:69-568:70)
  1: StorageLive(_25)
    SourceInfo(regex-automata/src/util/pool.rs:568:26-568:46)
  2: StorageLive(_26)
    SourceInfo(regex-automata/src/util/pool.rs:568:26-568:40)
  3: _26 = &((*_1).3: core::cell::UnsafeCell<core::option::Option<T>>)
    SourceInfo(regex-automata/src/util/pool.rs:568:26-568:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:568:26-568:46)
      kind: _25 = core::cell::UnsafeCell::<core::option::Option<T>>::get(move _26) -> [return: bb7, unwind: bb65]
  }
  preds [bb5]
  succs [bb7, bb65]

bb7
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/util/pool.rs:568:45-568:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:568:25-568:46)
      kind: drop((*_25)) -> [return: bb8, unwind: bb9]
  }
  preds [bb6]
  succs [bb8, bb9]

bb8
  0: (*_25) = move _21
    SourceInfo(regex-automata/src/util/pool.rs:568:25-568:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:568:69-568:70)
      kind: drop(_21) -> [return: bb10, unwind: bb66]
  }
  preds [bb7]
  succs [bb10, bb66]

bb9
  0: (*_25) = move _21
    SourceInfo(regex-automata/src/util/pool.rs:568:25-568:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:568:25-568:46)
      kind: goto -> bb65
  }
  preds [bb7]
  succs [bb65]

bb10
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/util/pool.rs:568:69-568:70)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/util/pool.rs:568:70-568:71)
  2: _20 = const ()
    SourceInfo(regex-automata/src/util/pool.rs:567:21-569:22)
  3: StorageDead(_20)
    SourceInfo(regex-automata/src/util/pool.rs:569:21-569:22)
  4: StorageLive(_27)
    SourceInfo(regex-automata/src/util/pool.rs:570:28-570:32)
  5: _27 = &(*_1)
    SourceInfo(regex-automata/src/util/pool.rs:570:28-570:32)
  6: StorageLive(_28)
    SourceInfo(regex-automata/src/util/pool.rs:570:45-570:51)
  7: _28 = _2
    SourceInfo(regex-automata/src/util/pool.rs:570:45-570:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:570:28-570:52)
      kind: _0 = util::pool::inner::Pool::<T, F>::guard_owned(move _27, move _28) -> [return: bb11, unwind: bb66]
  }
  preds [bb8]
  succs [bb11, bb66]

bb11
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/util/pool.rs:570:51-570:52)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/util/pool.rs:570:51-570:52)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/util/pool.rs:571:17-571:18)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/util/pool.rs:572:13-572:14)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/util/pool.rs:572:13-572:14)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/util/pool.rs:572:13-572:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb53
  }
  preds [bb10]
  succs [bb53]

bb12
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/util/pool.rs:563:30-563:31)
  1: _4 = const ()
    SourceInfo(regex-automata/src/util/pool.rs:571:18-571:18)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/util/pool.rs:571:17-571:18)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/util/pool.rs:572:13-572:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:547:13-572:14)
      kind: goto -> bb14
  }
  preds [bb3]
  succs [bb14]

bb13
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/pool.rs:547:41-547:42)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/pool.rs:547:41-547:42)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/pool.rs:547:41-547:42)
  3: _4 = const ()
    SourceInfo(regex-automata/src/util/pool.rs:572:14-572:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:547:13-572:14)
      kind: goto -> bb14
  }
  preds [bb0]
  succs [bb14]

bb14
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/pool.rs:572:13-572:14)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/pool.rs:572:13-572:14)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/util/pool.rs:573:17-573:25)
  3: StorageLive(_30)
    SourceInfo(regex-automata/src/util/pool.rs:573:28-573:34)
  4: _30 = _2
    SourceInfo(regex-automata/src/util/pool.rs:573:28-573:34)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/util/pool.rs:573:37-573:54)
  6: StorageLive(_32)
    SourceInfo(regex-automata/src/util/pool.rs:573:37-573:48)
  7: _32 = &((*_1).1: std::vec::Vec<util::pool::inner::CacheLine<std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>>>)
    SourceInfo(regex-automata/src/util/pool.rs:573:37-573:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:573:37-573:54)
      kind: _31 = std::vec::Vec::<util::pool::inner::CacheLine<std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>>>::len(move _32) -> [return: bb15, unwind: bb66]
  }
  preds [bb12, bb13]
  succs [bb15, bb66]

bb15
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/util/pool.rs:573:53-573:54)
  1: _33 = Eq(_31, const 0_usize)
    SourceInfo(regex-automata/src/util/pool.rs:573:28-573:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:573:28-573:54)
      kind: assert(!move _33, "attempt to calculate the remainder of `{}` with a divisor of zero", _30) -> [success: bb16, unwind: bb66]
  }
  preds [bb14]
  succs [bb16, bb66]

bb16
  0: _29 = Rem(move _30, move _31)
    SourceInfo(regex-automata/src/util/pool.rs:573:28-573:54)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/util/pool.rs:573:53-573:54)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/util/pool.rs:573:53-573:54)
  3: FakeRead(ForLet(None), _29)
    SourceInfo(regex-automata/src/util/pool.rs:573:17-573:25)
  4: StorageLive(_34)
    SourceInfo(regex-automata/src/util/pool.rs:579:13-592:14)
  5: StorageLive(_35)
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  6: StorageLive(_36)
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  7: _36 = core::ops::Range::<i32> { start: const 0_i32, end: const 1_i32 }
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
      kind: _35 = <core::ops::Range<i32> as core::iter::IntoIterator>::into_iter(move _36) -> [return: bb17, unwind: bb66]
  }
  preds [bb15]
  succs [bb17, bb66]

bb17
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/util/pool.rs:579:25-579:26)
  1: PlaceMention(_35)
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  2: StorageLive(_37)
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  3: _37 = move _35
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:579:13-592:14)
      kind: goto -> bb18
  }
  preds [bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:579:13-592:14)
      kind: falseUnwind -> [real: bb19, unwind: bb66]
  }
  preds [bb17, bb44]
  succs [bb19, bb66]

bb19
  0: StorageLive(_39)
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  1: StorageLive(_40)
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  2: StorageLive(_41)
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  3: StorageLive(_42)
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  4: _42 = &mut _37
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  5: _41 = &mut (*_42)
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
      kind: _40 = <core::ops::Range<i32> as core::iter::Iterator>::next(move _41) -> [return: bb20, unwind: bb66]
  }
  preds [bb18]
  succs [bb20, bb66]

bb20
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/util/pool.rs:579:25-579:26)
  1: PlaceMention(_40)
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  2: _43 = discriminant(_40)
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
      kind: switchInt(move _43) -> [0: bb22, 1: bb23, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb22, bb23]

bb21
  0: FakeRead(ForMatchedPlace(None), _40)
    SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:579:22-579:26)
      kind: unreachable
  }
  preds [bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:579:13-592:14)
      kind: falseEdge -> [real: bb24, imaginary: bb23]
  }
  preds [bb20]
  succs [bb23, bb24]

bb23
  0: StorageLive(_46)
    SourceInfo(regex-automata/src/util/pool.rs:580:21-580:30)
  1: StorageLive(_47)
    SourceInfo(regex-automata/src/util/pool.rs:580:39-580:73)
  2: StorageLive(_48)
    SourceInfo(regex-automata/src/util/pool.rs:580:39-580:62)
  3: StorageLive(_49)
    SourceInfo(regex-automata/src/util/pool.rs:580:50-580:60)
  4: StorageLive(_50)
    SourceInfo(regex-automata/src/util/pool.rs:580:39-580:50)
  5: _50 = &((*_1).1: std::vec::Vec<util::pool::inner::CacheLine<std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>>>)
    SourceInfo(regex-automata/src/util/pool.rs:580:39-580:50)
  6: StorageLive(_51)
    SourceInfo(regex-automata/src/util/pool.rs:580:51-580:59)
  7: _51 = _29
    SourceInfo(regex-automata/src/util/pool.rs:580:51-580:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:580:50-580:60)
      kind: _49 = <std::vec::Vec<util::pool::inner::CacheLine<std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>>> as core::ops::Index<usize>>::index(move _50, move _51) -> [return: bb25, unwind: bb66]
  }
  preds [bb20, bb22]
  succs [bb25, bb66]

bb24
  0: _34 = const ()
    SourceInfo(regex-automata/src/util/pool.rs:579:13-592:14)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  2: StorageDead(_40)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  3: StorageDead(_39)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  4: StorageDead(_37)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  5: StorageDead(_35)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  6: StorageDead(_34)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  7: StorageLive(_73)
    SourceInfo(regex-automata/src/util/pool.rs:597:13-597:17)
  8: _73 = &(*_1)
    SourceInfo(regex-automata/src/util/pool.rs:597:13-597:17)
  9: StorageLive(_74)
    SourceInfo(regex-automata/src/util/pool.rs:597:40-597:65)
  10: StorageLive(_75)
    SourceInfo(regex-automata/src/util/pool.rs:597:49-597:64)
  11: StorageLive(_76)
    SourceInfo(regex-automata/src/util/pool.rs:597:49-597:62)
  12: _76 = &((*_1).0: F)
    SourceInfo(regex-automata/src/util/pool.rs:597:49-597:62)
  13: StorageLive(_77)
    SourceInfo(regex-automata/src/util/pool.rs:597:49-597:64)
  14: _77 = ()
    SourceInfo(regex-automata/src/util/pool.rs:597:49-597:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:597:49-597:64)
      kind: _75 = <F as core::ops::Fn<()>>::call(move _76, move _77) -> [return: bb45, unwind: bb66]
  }
  preds [bb22]
  succs [bb45, bb66]

bb25
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/util/pool.rs:580:59-580:60)
  1: StorageDead(_50)
    SourceInfo(regex-automata/src/util/pool.rs:580:59-580:60)
  2: _48 = &((*_49).0: std::sync::Mutex<std::vec::Vec<std::boxed::Box<T>>>)
    SourceInfo(regex-automata/src/util/pool.rs:580:39-580:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:580:39-580:73)
      kind: _47 = std::sync::Mutex::<std::vec::Vec<std::boxed::Box<T>>>::try_lock(move _48) -> [return: bb26, unwind: bb66]
  }
  preds [bb23]
  succs [bb26, bb66]

bb26
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/util/pool.rs:580:72-580:73)
  1: PlaceMention(_47)
    SourceInfo(regex-automata/src/util/pool.rs:580:39-580:73)
  2: _52 = discriminant(_47)
    SourceInfo(regex-automata/src/util/pool.rs:580:39-580:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:580:33-580:73)
      kind: switchInt(move _52) -> [0: bb29, 1: bb28, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb28, bb29]

bb27
  0: FakeRead(ForMatchedPlace(None), _47)
    SourceInfo(regex-automata/src/util/pool.rs:580:39-580:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:580:39-580:73)
      kind: unreachable
  }
  preds [bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:581:21-581:27)
      kind: falseEdge -> [real: bb43, imaginary: bb29]
  }
  preds [bb26]
  succs [bb29, bb43]

bb29
  0: StorageLive(_54)
    SourceInfo(regex-automata/src/util/pool.rs:582:24-582:29)
  1: _54 = move ((_47 as Ok).0: std::sync::MutexGuard<'_, std::vec::Vec<std::boxed::Box<T>>>)
    SourceInfo(regex-automata/src/util/pool.rs:582:24-582:29)
  2: _46 = move _54
    SourceInfo(regex-automata/src/util/pool.rs:582:34-582:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:582:38-582:39)
      kind: drop(_54) -> [return: bb30, unwind: bb64]
  }
  preds [bb26, bb28]
  succs [bb30, bb64]

bb30
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/util/pool.rs:582:38-582:39)
  1: FakeRead(ForLet(None), _46)
    SourceInfo(regex-automata/src/util/pool.rs:580:21-580:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:583:18-583:19)
      kind: drop(_47) -> [return: bb31, unwind: bb63]
  }
  preds [bb29]
  succs [bb31, bb63]

bb31
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/util/pool.rs:583:18-583:19)
  1: StorageDead(_47)
    SourceInfo(regex-automata/src/util/pool.rs:583:18-583:19)
  2: StorageLive(_55)
    SourceInfo(regex-automata/src/util/pool.rs:584:17-586:18)
  3: StorageLive(_56)
    SourceInfo(regex-automata/src/util/pool.rs:584:38-584:49)
  4: StorageLive(_57)
    SourceInfo(regex-automata/src/util/pool.rs:584:38-584:43)
  5: StorageLive(_58)
    SourceInfo(regex-automata/src/util/pool.rs:584:38-584:49)
  6: StorageLive(_59)
    SourceInfo(regex-automata/src/util/pool.rs:584:38-584:43)
  7: _59 = &mut _46
    SourceInfo(regex-automata/src/util/pool.rs:584:38-584:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:584:38-584:49)
      kind: _58 = <std::sync::MutexGuard<'_, std::vec::Vec<std::boxed::Box<T>>> as core::ops::DerefMut>::deref_mut(move _59) -> [return: bb32, unwind: bb63]
  }
  preds [bb30]
  succs [bb32, bb63]

bb32
  0: _57 = &mut (*_58)
    SourceInfo(regex-automata/src/util/pool.rs:584:38-584:43)
  1: StorageDead(_59)
    SourceInfo(regex-automata/src/util/pool.rs:584:42-584:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:584:38-584:49)
      kind: _56 = std::vec::Vec::<std::boxed::Box<T>>::pop(move _57) -> [return: bb33, unwind: bb63]
  }
  preds [bb31]
  succs [bb33, bb63]

bb33
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/util/pool.rs:584:48-584:49)
  1: PlaceMention(_56)
    SourceInfo(regex-automata/src/util/pool.rs:584:38-584:49)
  2: _60 = discriminant(_56)
    SourceInfo(regex-automata/src/util/pool.rs:584:38-584:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:584:24-584:35)
      kind: switchInt(move _60) -> [1: bb34, otherwise: bb37]
  }
  preds [bb32]
  succs [bb34, bb37]

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:584:24-584:35)
      kind: falseEdge -> [real: bb35, imaginary: bb37]
  }
  preds [bb33]
  succs [bb35, bb37]

bb35
  0: StorageLive(_61)
    SourceInfo(regex-automata/src/util/pool.rs:584:29-584:34)
  1: _61 = move ((_56 as Some).0: std::boxed::Box<T>)
    SourceInfo(regex-automata/src/util/pool.rs:584:29-584:34)
  2: StorageLive(_63)
    SourceInfo(regex-automata/src/util/pool.rs:585:28-585:32)
  3: _63 = &(*_1)
    SourceInfo(regex-automata/src/util/pool.rs:585:28-585:32)
  4: StorageLive(_64)
    SourceInfo(regex-automata/src/util/pool.rs:585:45-585:50)
  5: _64 = move _61
    SourceInfo(regex-automata/src/util/pool.rs:585:45-585:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:585:28-585:51)
      kind: _0 = util::pool::inner::Pool::<T, F>::guard_stack(move _63, move _64) -> [return: bb36, unwind: bb60]
  }
  preds [bb34]
  succs [bb36, bb60]

bb36
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/util/pool.rs:585:50-585:51)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/util/pool.rs:585:50-585:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:586:17-586:18)
      kind: drop(_61) -> [return: bb49, unwind: bb62]
  }
  preds [bb35]
  succs [bb49, bb62]

bb37
  0: _55 = const ()
    SourceInfo(regex-automata/src/util/pool.rs:586:18-586:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:586:17-586:18)
      kind: drop(_56) -> [return: bb38, unwind: bb63]
  }
  preds [bb33, bb34]
  succs [bb38, bb63]

bb38
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/util/pool.rs:586:17-586:18)
  1: StorageDead(_56)
    SourceInfo(regex-automata/src/util/pool.rs:586:17-586:18)
  2: StorageDead(_55)
    SourceInfo(regex-automata/src/util/pool.rs:586:17-586:18)
  3: StorageLive(_65)
    SourceInfo(regex-automata/src/util/pool.rs:589:17-589:28)
  4: StorageLive(_66)
    SourceInfo(regex-automata/src/util/pool.rs:589:22-589:27)
  5: _66 = move _46
    SourceInfo(regex-automata/src/util/pool.rs:589:22-589:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:589:17-589:28)
      kind: _65 = core::mem::drop::<std::sync::MutexGuard<'_, std::vec::Vec<std::boxed::Box<T>>>>(move _66) -> [return: bb39, unwind: bb59]
  }
  preds [bb37]
  succs [bb39, bb59]

bb39
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/util/pool.rs:589:27-589:28)
  1: StorageDead(_65)
    SourceInfo(regex-automata/src/util/pool.rs:589:28-589:29)
  2: StorageLive(_67)
    SourceInfo(regex-automata/src/util/pool.rs:590:21-590:26)
  3: StorageLive(_68)
    SourceInfo(regex-automata/src/util/pool.rs:590:38-590:53)
  4: StorageLive(_69)
    SourceInfo(regex-automata/src/util/pool.rs:590:38-590:51)
  5: _69 = &((*_1).0: F)
    SourceInfo(regex-automata/src/util/pool.rs:590:38-590:51)
  6: StorageLive(_70)
    SourceInfo(regex-automata/src/util/pool.rs:590:38-590:53)
  7: _70 = ()
    SourceInfo(regex-automata/src/util/pool.rs:590:38-590:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:590:38-590:53)
      kind: _68 = <F as core::ops::Fn<()>>::call(move _69, move _70) -> [return: bb40, unwind: bb63]
  }
  preds [bb38]
  succs [bb40, bb63]

bb40
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/util/pool.rs:590:52-590:53)
  1: StorageDead(_69)
    SourceInfo(regex-automata/src/util/pool.rs:590:52-590:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:590:29-590:54)
      kind: _67 = std::boxed::Box::<T>::new(move _68) -> [return: bb41, unwind: bb58]
  }
  preds [bb39]
  succs [bb41, bb58]

bb41
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/util/pool.rs:590:53-590:54)
  1: FakeRead(ForLet(None), _67)
    SourceInfo(regex-automata/src/util/pool.rs:590:21-590:26)
  2: StorageLive(_71)
    SourceInfo(regex-automata/src/util/pool.rs:591:24-591:28)
  3: _71 = &(*_1)
    SourceInfo(regex-automata/src/util/pool.rs:591:24-591:28)
  4: StorageLive(_72)
    SourceInfo(regex-automata/src/util/pool.rs:591:41-591:46)
  5: _72 = move _67
    SourceInfo(regex-automata/src/util/pool.rs:591:41-591:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:591:24-591:47)
      kind: _0 = util::pool::inner::Pool::<T, F>::guard_stack(move _71, move _72) -> [return: bb42, unwind: bb56]
  }
  preds [bb40]
  succs [bb42, bb56]

bb42
  0: StorageDead(_72)
    SourceInfo(regex-automata/src/util/pool.rs:591:46-591:47)
  1: StorageDead(_71)
    SourceInfo(regex-automata/src/util/pool.rs:591:46-591:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
      kind: drop(_67) -> [return: bb48, unwind: bb63]
  }
  preds [bb41]
  succs [bb48, bb63]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:583:18-583:19)
      kind: drop(_47) -> [return: bb44, unwind: bb66]
  }
  preds [bb28]
  succs [bb44, bb66]

bb44
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/util/pool.rs:583:18-583:19)
  1: StorageDead(_47)
    SourceInfo(regex-automata/src/util/pool.rs:583:18-583:19)
  2: StorageDead(_46)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  3: StorageDead(_42)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  4: StorageDead(_40)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  5: StorageDead(_39)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb18
  }
  preds [bb43]
  succs [bb18]

bb45
  0: StorageDead(_77)
    SourceInfo(regex-automata/src/util/pool.rs:597:63-597:64)
  1: StorageDead(_76)
    SourceInfo(regex-automata/src/util/pool.rs:597:63-597:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:597:40-597:65)
      kind: _74 = std::boxed::Box::<T>::new(move _75) -> [return: bb46, unwind: bb55]
  }
  preds [bb24]
  succs [bb46, bb55]

bb46
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/util/pool.rs:597:64-597:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:597:13-597:66)
      kind: _0 = util::pool::inner::Pool::<T, F>::guard_stack_transient(move _73, move _74) -> [return: bb47, unwind: bb54]
  }
  preds [bb45]
  succs [bb47, bb54]

bb47
  0: StorageDead(_74)
    SourceInfo(regex-automata/src/util/pool.rs:597:65-597:66)
  1: StorageDead(_73)
    SourceInfo(regex-automata/src/util/pool.rs:597:65-597:66)
  2: StorageDead(_29)
    SourceInfo(regex-automata/src/util/pool.rs:598:9-598:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:598:10-598:10)
      kind: goto -> bb53
  }
  preds [bb46]
  succs [bb53]

bb48
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb51
  }
  preds [bb42]
  succs [bb51]

bb49
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/util/pool.rs:586:17-586:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:586:17-586:18)
      kind: drop(_56) -> [return: bb50, unwind: bb63]
  }
  preds [bb36]
  succs [bb50, bb63]

bb50
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/util/pool.rs:586:17-586:18)
  1: StorageDead(_56)
    SourceInfo(regex-automata/src/util/pool.rs:586:17-586:18)
  2: StorageDead(_55)
    SourceInfo(regex-automata/src/util/pool.rs:586:17-586:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb51
  }
  preds [bb49]
  succs [bb51]

bb51
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
      kind: drop(_46) -> [return: bb52, unwind: bb66]
  }
  preds [bb48, bb50]
  succs [bb52, bb66]

bb52
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  2: StorageDead(_40)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  3: StorageDead(_39)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  4: StorageDead(_37)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  5: StorageDead(_35)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  6: StorageDead(_34)
    SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
  7: StorageDead(_29)
    SourceInfo(regex-automata/src/util/pool.rs:598:9-598:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb53
  }
  preds [bb51]
  succs [bb53]

bb53
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:598:10-598:10)
      kind: return
  }
  preds [bb11, bb47, bb52]
  succs []

bb54
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:597:65-597:66)
      kind: drop(_74) -> [return: bb66, unwind terminate(cleanup)]
  }
  preds [bb46]
  succs [bb66]

bb55
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:597:64-597:65)
      kind: drop(_75) -> [return: bb66, unwind terminate(cleanup)]
  }
  preds [bb45]
  succs [bb66]

bb56
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:591:46-591:47)
      kind: drop(_72) -> [return: bb57, unwind terminate(cleanup)]
  }
  preds [bb41]
  succs [bb57]

bb57
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
      kind: drop(_67) -> [return: bb63, unwind terminate(cleanup)]
  }
  preds [bb56]
  succs [bb63]

bb58
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:590:53-590:54)
      kind: drop(_68) -> [return: bb63, unwind terminate(cleanup)]
  }
  preds [bb40]
  succs [bb63]

bb59
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:589:27-589:28)
      kind: drop(_66) -> [return: bb63, unwind terminate(cleanup)]
  }
  preds [bb38]
  succs [bb63]

bb60
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:585:50-585:51)
      kind: drop(_64) -> [return: bb61, unwind terminate(cleanup)]
  }
  preds [bb35]
  succs [bb61]

bb61
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:586:17-586:18)
      kind: drop(_61) -> [return: bb62, unwind terminate(cleanup)]
  }
  preds [bb60]
  succs [bb62]

bb62
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:586:17-586:18)
      kind: drop(_56) -> [return: bb63, unwind terminate(cleanup)]
  }
  preds [bb36, bb61]
  succs [bb63]

bb63
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:592:13-592:14)
      kind: drop(_46) -> [return: bb66, unwind terminate(cleanup)]
  }
  preds [bb30, bb31, bb32, bb37, bb39, bb42, bb49, bb57, bb58, bb59, bb62]
  succs [bb66]

bb64
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:583:18-583:19)
      kind: drop(_47) -> [return: bb66, unwind terminate(cleanup)]
  }
  preds [bb29]
  succs [bb66]

bb65
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:568:69-568:70)
      kind: drop(_21) -> [return: bb66, unwind terminate(cleanup)]
  }
  preds [bb5, bb6, bb9]
  succs [bb66]

bb66
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:542:9-598:10)
      kind: resume
  }
  preds [bb1, bb2, bb4, bb8, bb10, bb14, bb15, bb16, bb18, bb19, bb23, bb24, bb25, bb43, bb51, bb54, bb55, bb63, bb64, bb65]
  succs []

