{
  "regex-automata/src/util/captures.rs:1602:29:1604:20": [
    {
      "Try": "SmallIndex::new(group_index).map_err(|_| {\n                    GroupInfoError::too_many_groups(pid, group_index)\n                })?"
    }
  ],
  "regex-automata/src/util/captures.rs:1598:46:1598:57": [
    {
      "For": {
        "iter_var": "(group_index, maybe_name)",
        "iter_range": "groups_iter"
      }
    }
  ],
  "regex-automata/src/util/captures.rs:1584:23:1585:61": [
    {
      "Try": "PatternID::new(pattern_index)\n                .map_err(GroupInfoError::too_many_patterns)?"
    }
  ],
  "regex-automata/src/util/captures.rs:1605:17:1605:71": [
    {
      "Try": "group_info.add_explicit_group(pid, group, maybe_name)?"
    }
  ],
  "regex-automata/src/util/captures.rs:1581:40:1581:78": [
    {
      "For": {
        "iter_var": "(pattern_index, groups)",
        "iter_range": "pattern_groups.into_iter().enumerate()"
      }
    }
  ],
  "regex-automata/src/util/captures.rs:1608:9:1608:40": [
    {
      "Try": "group_info.fixup_slot_ranges()?"
    }
  ],
  "regex-automata/src/util/captures.rs:1588:19:1588:37": [
    {
      "Match": {
        "match_source": "regex-automata/src/util/captures.rs:1588:19:1588:37",
        "match_str": "groups_iter.next()",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/util/captures.rs:1590:17:1590:35": {
            "pat": {
              "pat_str": "Some((_, Some(_)))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/captures.rs:1590:39:1592:18"
          },
          "regex-automata/src/util/captures.rs:1589:17:1589:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/captures.rs:1589:25:1589:72"
          },
          "regex-automata/src/util/captures.rs:1593:17:1593:32": {
            "pat": {
              "pat_str": "Some((_, None))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/captures.rs:1593:36:1593:38"
          }
        }
      }
    }
  ]
}