{
  "name": "regex_automata::dfa::accel::find_rev",
  "mod_info": {
    "name": "dfa::accel",
    "loc": "regex-automata/src/dfa/mod.rs:346:1:346:22"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/accel.rs:114:1:127:2",
  "doc": "/// Search for between 1 and 3 needle bytes in the given haystack in reverse,\n/// starting the search at the given position. If `needles` has a length other\n/// than 1-3, then this panics.\n",
  "code": [
    "pub(crate) fn find_rev(",
    "    needles: &[u8],",
    "    haystack: &[u8],",
    "    at: usize,",
    ") -> Option<usize> {",
    "    let bs = needles;",
    "    match needles.len() {",
    "        1 => memchr::memrchr(bs[0], &haystack[..at]),",
    "        2 => memchr::memrchr2(bs[0], bs[1], &haystack[..at]),",
    "        3 => memchr::memrchr3(bs[0], bs[1], bs[2], &haystack[..at]),",
    "        0 => panic!(\"cannot find with empty needles\"),",
    "        n => panic!(\"invalid needles length: {}\", n),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 0,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "needles.len() matches 3",
          "norm": null,
          "value": "true",
          "line": 123,
          "bound": null
        },
        {
          "cond": "needles.len() matches 1",
          "norm": null,
          "value": "true",
          "line": 121,
          "bound": null
        },
        {
          "cond": "needles.len() matches 2",
          "norm": null,
          "value": "true",
          "line": 122,
          "bound": null
        },
        {
          "cond": "needles.len() matches 0",
          "norm": null,
          "value": "true",
          "line": 124,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        24,
        25,
        27
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "needles.len() matches 0",
          "norm": null,
          "value": "true",
          "line": 124,
          "bound": null
        },
        {
          "cond": "needles.len() matches 0",
          "norm": null,
          "value": "true",
          "line": 120,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        22,
        23,
        27
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "needles.len() matches 3",
          "norm": null,
          "value": "true",
          "line": 123,
          "bound": null
        },
        {
          "cond": "needles.len() matches 3",
          "norm": null,
          "value": "true",
          "line": 120,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        16,
        17,
        18,
        19,
        20,
        21,
        26
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "needles.len() matches 2",
          "norm": null,
          "value": "true",
          "line": 122,
          "bound": null
        },
        {
          "cond": "needles.len() matches 2",
          "norm": null,
          "value": "true",
          "line": 120,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        11,
        12,
        13,
        14,
        15,
        26
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "needles.len() matches 1",
          "norm": null,
          "value": "true",
          "line": 121,
          "bound": null
        },
        {
          "cond": "needles.len() matches 1",
          "norm": null,
          "value": "true",
          "line": 120,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        7,
        8,
        9,
        10,
        26
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}