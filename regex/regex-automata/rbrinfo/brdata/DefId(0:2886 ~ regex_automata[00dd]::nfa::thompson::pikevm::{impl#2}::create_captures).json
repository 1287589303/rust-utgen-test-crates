{
  "name": "regex_automata::nfa::thompson::pikevm::{impl#2}::create_captures",
  "mod_info": {
    "name": "nfa::thompson::pikevm",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:68:1:68:16"
  },
  "visible": true,
  "loc": "regex-automata/src/nfa/thompson/pikevm.rs:600:5:602:6",
  "doc": "/// Create a new empty set of capturing groups that is guaranteed to be\n/// valid for the search APIs on this `PikeVM`.\n///\n/// A `Captures` value created for a specific `PikeVM` cannot be used with\n/// any other `PikeVM`.\n///\n/// This is a convenience function for [`Captures::all`]. See the\n/// [`Captures`] documentation for an explanation of its alternative\n/// constructors that permit the `PikeVM` to do less work during a search,\n/// and thus might make it faster.\n",
  "code": [
    "pub fn create_captures(&self) -> Captures {",
    "    Captures::all(self.get_nfa().group_info().clone())",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}