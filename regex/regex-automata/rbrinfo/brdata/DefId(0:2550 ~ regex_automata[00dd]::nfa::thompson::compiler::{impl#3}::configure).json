{
  "name": "regex_automata::nfa::thompson::compiler::{impl#3}::configure",
  "mod_info": {
    "name": "nfa::thompson::compiler",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:60:1:60:14"
  },
  "visible": true,
  "loc": "regex-automata/src/nfa/thompson/compiler.rs:897:5:900:6",
  "doc": "/// Apply the given NFA configuration options to this builder.\n///\n/// # Example\n///\n/// ```\n/// use regex_automata::nfa::thompson::NFA;\n///\n/// let config = NFA::config().nfa_size_limit(Some(1_000));\n/// let nfa = NFA::compiler().configure(config).build(r\"(?-u)\\w\")?;\n/// assert_eq!(nfa.pattern_len(), 1);\n///\n/// # Ok::<(), Box<dyn std::error::Error>>(())\n/// ```\n",
  "code": [
    "pub fn configure(&mut self, config: Config) -> &mut Compiler {",
    "    self.config = self.config.overwrite(config);",
    "    self",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}