{
  "name": "regex_automata::nfa::thompson::compiler::{impl#6}::new",
  "mod_info": {
    "name": "nfa::thompson::compiler",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:60:1:60:14"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/compiler.rs:1762:5:1771:6",
  "doc": "",
  "code": [
    "fn new(",
    "    builder: &'a mut Builder,",
    "    state: &'a mut Utf8State,",
    ") -> Result<Utf8Compiler<'a>, BuildError> {",
    "    let target = builder.add_empty()?;",
    "    state.clear();",
    "    let mut utf8c = Utf8Compiler { builder, state, target };",
    "    utf8c.add_empty();",
    "    Ok(utf8c)",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "builder.add_empty()?",
          "norm": null,
          "value": "Err/None",
          "line": 1766,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        11,
        12,
        13
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "builder.add_empty()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1766,
          "bound": null
        }
      ],
      "ret": "Ok(utf8c)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        13
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}