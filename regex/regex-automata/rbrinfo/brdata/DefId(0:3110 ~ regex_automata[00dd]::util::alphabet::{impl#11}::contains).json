{
  "name": "regex_automata::util::alphabet::{impl#11}::contains",
  "mod_info": {
    "name": "util::alphabet",
    "loc": "regex-automata/src/util/mod.rs:30:1:30:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/alphabet.rs:776:5:780:6",
  "doc": "/// Return true if and only if the given byte is in this set.\n",
  "code": [
    "pub(crate) fn contains(&self, byte: u8) -> bool {",
    "    let bucket = byte / 128;",
    "    let bit = byte % 128;",
    "    self.bits.0[usize::from(bucket)] & (1 << bit) > 0",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.bits.0[usize::from(bucket)] & (1 << bit) > 0",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}