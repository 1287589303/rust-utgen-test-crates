{
  "name": "regex_automata::dfa::sparse::{impl#18}::write_to_len",
  "mod_info": {
    "name": "dfa::sparse",
    "loc": "regex-automata/src/dfa/mod.rs:343:1:343:16"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/sparse.rs:2382:5:2391:6",
  "doc": "/// Return the total number of bytes that this state consumes in its\n/// encoded form.\n",
  "code": [
    "fn write_to_len(&self) -> usize {",
    "    let mut len = 2",
    "        + (self.ntrans * 2)",
    "        + (self.ntrans * StateID::SIZE)",
    "        + (1 + self.accel.len());",
    "    if self.is_match {",
    "        len += size_of::<u32>() + self.pattern_ids.len();",
    "    }",
    "    len",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.is_match",
          "norm": null,
          "value": "true",
          "line": 2387,
          "bound": null
        }
      ],
      "ret": "len",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        14
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.is_match",
          "norm": null,
          "value": "false",
          "line": 2387,
          "bound": null
        }
      ],
      "ret": "len",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        13,
        14
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}