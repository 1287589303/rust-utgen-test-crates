{
  "name": "regex_automata::util::alphabet::{impl#4}::fmt",
  "mod_info": {
    "name": "util::alphabet",
    "loc": "regex-automata/src/util/mod.rs:30:1:30:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/alphabet.rs:492:5:513:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {",
    "    if self.is_singleton() {",
    "        write!(f, \"ByteClasses({{singletons}})\")",
    "    } else {",
    "        write!(f, \"ByteClasses(\")?;",
    "        for (i, class) in self.iter().enumerate() {",
    "            if i > 0 {",
    "                write!(f, \", \")?;",
    "            }",
    "            write!(f, \"{:?} => [\", class.as_usize())?;",
    "            for (start, end) in self.element_ranges(class) {",
    "                if start == end {",
    "                    write!(f, \"{:?}\", start)?;",
    "                } else {",
    "                    write!(f, \"{:?}-{:?}\", start, end)?;",
    "                }",
    "            }",
    "            write!(f, \"]\")?;",
    "        }",
    "        write!(f, \")\")",
    "    }",
    "}"
  ],
  "size": {
    "chain": 22,
    "contra": 10,
    "min_set": 10
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "true",
          "line": 493,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        87,
        91
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Err/None",
          "line": 496,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        10,
        12,
        13,
        90,
        91
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 498,
          "bound": null
        },
        {
          "cond": "write!(f, \", \")?",
          "norm": null,
          "value": "Err/None",
          "line": 499,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        25,
        26,
        27,
        29,
        31,
        32,
        89,
        90,
        91
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 498,
          "bound": null
        },
        {
          "cond": "write!(f, \", \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 499,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Err/None",
          "line": 501,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        25,
        26,
        27,
        30,
        34,
        35,
        36,
        37,
        38,
        39,
        41,
        43,
        44,
        89,
        90,
        91
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 498,
          "bound": null
        },
        {
          "cond": "write!(f, \", \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 499,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "true",
          "line": 502,
          "bound": null
        },
        {
          "cond": "start == end",
          "norm": "end == start",
          "value": "true",
          "line": 503,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", start)?",
          "norm": null,
          "value": "Err/None",
          "line": 504,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        25,
        26,
        27,
        30,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        52,
        54,
        55,
        56,
        57,
        58,
        59,
        61,
        63,
        64,
        88,
        89,
        90,
        91
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 498,
          "bound": null
        },
        {
          "cond": "write!(f, \", \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 499,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "true",
          "line": 502,
          "bound": null
        },
        {
          "cond": "start == end",
          "norm": "end == start",
          "value": "true",
          "line": 503,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 504,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "false",
          "line": 502,
          "bound": null
        },
        {
          "cond": "write!(f, \"]\")?",
          "norm": null,
          "value": "Err/None",
          "line": 509,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        25,
        26,
        27,
        30,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        52,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        76,
        47,
        48,
        49,
        51,
        53,
        77,
        78,
        79,
        81,
        83,
        84,
        89,
        90,
        91
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 498,
          "bound": null
        },
        {
          "cond": "write!(f, \", \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 499,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "true",
          "line": 502,
          "bound": null
        },
        {
          "cond": "start == end",
          "norm": "end == start",
          "value": "true",
          "line": 503,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 504,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "false",
          "line": 502,
          "bound": null
        },
        {
          "cond": "write!(f, \"]\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 509,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 497,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        25,
        26,
        27,
        30,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        52,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        76,
        47,
        48,
        49,
        51,
        53,
        77,
        78,
        79,
        82,
        17,
        18,
        19,
        21,
        23,
        85,
        86,
        87,
        91
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 498,
          "bound": null
        },
        {
          "cond": "write!(f, \", \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 499,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "true",
          "line": 502,
          "bound": null
        },
        {
          "cond": "start == end",
          "norm": "end == start",
          "value": "false",
          "line": 503,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}-{:?}\", start, end)?",
          "norm": null,
          "value": "Err/None",
          "line": 506,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        25,
        26,
        27,
        30,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        52,
        54,
        65,
        66,
        67,
        68,
        69,
        70,
        72,
        74,
        75,
        88,
        89,
        90,
        91
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 498,
          "bound": null
        },
        {
          "cond": "write!(f, \", \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 499,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "true",
          "line": 502,
          "bound": null
        },
        {
          "cond": "start == end",
          "norm": "end == start",
          "value": "false",
          "line": 503,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}-{:?}\", start, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 506,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "false",
          "line": 502,
          "bound": null
        },
        {
          "cond": "write!(f, \"]\")?",
          "norm": null,
          "value": "Err/None",
          "line": 509,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        25,
        26,
        27,
        30,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        52,
        54,
        65,
        66,
        67,
        68,
        69,
        70,
        73,
        76,
        47,
        48,
        49,
        51,
        53,
        77,
        78,
        79,
        81,
        83,
        84,
        89,
        90,
        91
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 498,
          "bound": null
        },
        {
          "cond": "write!(f, \", \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 499,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "true",
          "line": 502,
          "bound": null
        },
        {
          "cond": "start == end",
          "norm": "end == start",
          "value": "false",
          "line": 503,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}-{:?}\", start, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 506,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "false",
          "line": 502,
          "bound": null
        },
        {
          "cond": "write!(f, \"]\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 509,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 497,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        25,
        26,
        27,
        30,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        52,
        54,
        65,
        66,
        67,
        68,
        69,
        70,
        73,
        76,
        47,
        48,
        49,
        51,
        53,
        77,
        78,
        79,
        82,
        17,
        18,
        19,
        21,
        23,
        85,
        86,
        87,
        91
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 498,
          "bound": null
        },
        {
          "cond": "write!(f, \", \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 499,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "false",
          "line": 502,
          "bound": null
        },
        {
          "cond": "write!(f, \"]\")?",
          "norm": null,
          "value": "Err/None",
          "line": 509,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        25,
        26,
        27,
        30,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        51,
        53,
        77,
        78,
        79,
        81,
        83,
        84,
        89,
        90,
        91
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 498,
          "bound": null
        },
        {
          "cond": "write!(f, \", \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 499,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "false",
          "line": 502,
          "bound": null
        },
        {
          "cond": "write!(f, \"]\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 509,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 497,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        25,
        26,
        27,
        30,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        51,
        53,
        77,
        78,
        79,
        82,
        17,
        18,
        19,
        21,
        23,
        85,
        86,
        87,
        91
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "false",
          "line": 498,
          "bound": "i == 0"
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Err/None",
          "line": 501,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        41,
        43,
        44,
        89,
        90,
        91
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "false",
          "line": 498,
          "bound": "i == 0"
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "true",
          "line": 502,
          "bound": null
        },
        {
          "cond": "start == end",
          "norm": "end == start",
          "value": "true",
          "line": 503,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", start)?",
          "norm": null,
          "value": "Err/None",
          "line": 504,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        52,
        54,
        55,
        56,
        57,
        58,
        59,
        61,
        63,
        64,
        88,
        89,
        90,
        91
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "false",
          "line": 498,
          "bound": "i == 0"
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "true",
          "line": 502,
          "bound": null
        },
        {
          "cond": "start == end",
          "norm": "end == start",
          "value": "true",
          "line": 503,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 504,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "false",
          "line": 502,
          "bound": null
        },
        {
          "cond": "write!(f, \"]\")?",
          "norm": null,
          "value": "Err/None",
          "line": 509,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        52,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        76,
        47,
        48,
        49,
        51,
        53,
        77,
        78,
        79,
        81,
        83,
        84,
        89,
        90,
        91
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "false",
          "line": 498,
          "bound": "i == 0"
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "true",
          "line": 502,
          "bound": null
        },
        {
          "cond": "start == end",
          "norm": "end == start",
          "value": "true",
          "line": 503,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 504,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "false",
          "line": 502,
          "bound": null
        },
        {
          "cond": "write!(f, \"]\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 509,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 497,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        52,
        54,
        55,
        56,
        57,
        58,
        59,
        62,
        76,
        47,
        48,
        49,
        51,
        53,
        77,
        78,
        79,
        82,
        17,
        18,
        19,
        21,
        23,
        85,
        86,
        87,
        91
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "false",
          "line": 498,
          "bound": "i == 0"
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "true",
          "line": 502,
          "bound": null
        },
        {
          "cond": "start == end",
          "norm": "end == start",
          "value": "false",
          "line": 503,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}-{:?}\", start, end)?",
          "norm": null,
          "value": "Err/None",
          "line": 506,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        52,
        54,
        65,
        66,
        67,
        68,
        69,
        70,
        72,
        74,
        75,
        88,
        89,
        90,
        91
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "false",
          "line": 498,
          "bound": "i == 0"
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "true",
          "line": 502,
          "bound": null
        },
        {
          "cond": "start == end",
          "norm": "end == start",
          "value": "false",
          "line": 503,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}-{:?}\", start, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 506,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "false",
          "line": 502,
          "bound": null
        },
        {
          "cond": "write!(f, \"]\")?",
          "norm": null,
          "value": "Err/None",
          "line": 509,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        52,
        54,
        65,
        66,
        67,
        68,
        69,
        70,
        73,
        76,
        47,
        48,
        49,
        51,
        53,
        77,
        78,
        79,
        81,
        83,
        84,
        89,
        90,
        91
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "false",
          "line": 498,
          "bound": "i == 0"
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "true",
          "line": 502,
          "bound": null
        },
        {
          "cond": "start == end",
          "norm": "end == start",
          "value": "false",
          "line": 503,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}-{:?}\", start, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 506,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "false",
          "line": 502,
          "bound": null
        },
        {
          "cond": "write!(f, \"]\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 509,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 497,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        52,
        54,
        65,
        66,
        67,
        68,
        69,
        70,
        73,
        76,
        47,
        48,
        49,
        51,
        53,
        77,
        78,
        79,
        82,
        17,
        18,
        19,
        21,
        23,
        85,
        86,
        87,
        91
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "false",
          "line": 498,
          "bound": "i == 0"
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "false",
          "line": 502,
          "bound": null
        },
        {
          "cond": "write!(f, \"]\")?",
          "norm": null,
          "value": "Err/None",
          "line": 509,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        51,
        53,
        77,
        78,
        79,
        81,
        83,
        84,
        89,
        90,
        91
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 497,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "false",
          "line": 498,
          "bound": "i == 0"
        },
        {
          "cond": "write!(f, \"{:?} => [\", class.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 501,
          "bound": null
        },
        {
          "cond": "(start, end) in self.element_ranges(class)",
          "norm": null,
          "value": "false",
          "line": 502,
          "bound": null
        },
        {
          "cond": "write!(f, \"]\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 509,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 497,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        48,
        49,
        51,
        53,
        77,
        78,
        79,
        82,
        17,
        18,
        19,
        21,
        23,
        85,
        86,
        87,
        91
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "self.is_singleton()",
          "norm": null,
          "value": "false",
          "line": 493,
          "bound": null
        },
        {
          "cond": "write!(f, \"ByteClasses(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 496,
          "bound": null
        },
        {
          "cond": "(i, class) in self.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 497,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        21,
        23,
        85,
        86,
        87,
        91
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}