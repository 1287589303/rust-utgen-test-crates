{
  "name": "regex_automata::dfa::dense::{impl#15}::is_valid",
  "mod_info": {
    "name": "dfa::dense",
    "loc": "regex-automata/src/dfa/mod.rs:337:1:337:15"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/dense.rs:3756:5:3759:6",
  "doc": "/// Returns true if and only if the given state ID is valid for this\n/// transition table. Validity in this context means that the given ID can\n/// be used as a valid offset with `self.stride()` to index this transition\n/// table.\n",
  "code": [
    "fn is_valid(&self, id: StateID) -> bool {",
    "    let id = id.as_usize();",
    "    id < self.table().len() && id % self.stride() == 0",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "id < self.table().len()",
          "norm": null,
          "value": "true",
          "line": 3758,
          "bound": null
        }
      ],
      "ret": "id % self.stride() == 0",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "id < self.table().len()",
          "norm": null,
          "value": "false",
          "line": 3758,
          "bound": "id == self.table().len()"
        }
      ],
      "ret": "id < self.table().len() && id % self.stride() == 0",
      "path": [
        0,
        1,
        2,
        3,
        5,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}