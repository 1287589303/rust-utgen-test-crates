{
  "name": "regex_automata::nfa::thompson::compiler::{impl#4}::c_alt_iter",
  "mod_info": {
    "name": "nfa::thompson::compiler",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:60:1:60:14"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/compiler.rs:1084:5:1109:6",
  "doc": "/// Compile an alternation, where each element yielded by the given\n/// iterator represents an item in the alternation. If the iterator yields\n/// no elements, then this compiles down to a \"fail\" state.\n///\n/// In an alternation, expressions appearing earlier are \"preferred\" at\n/// match time over expressions appearing later. At least, this is true\n/// when using \"leftmost first\" match semantics. (If \"leftmost longest\" are\n/// ever added in the future, then this preference order of priority would\n/// not apply in that mode.)\n",
  "code": [
    "fn c_alt_iter<I>(&self, mut it: I) -> Result<ThompsonRef, BuildError>",
    "where",
    "    I: Iterator<Item = Result<ThompsonRef, BuildError>>,",
    "{",
    "    let first = match it.next() {",
    "        None => return self.c_fail(),",
    "        Some(result) => result?,",
    "    };",
    "    let second = match it.next() {",
    "        None => return Ok(first),",
    "        Some(result) => result?,",
    "    };",
    "",
    "    let union = self.add_union()?;",
    "    let end = self.add_empty()?;",
    "    self.patch(union, first.start)?;",
    "    self.patch(first.end, end)?;",
    "    self.patch(union, second.start)?;",
    "    self.patch(second.end, end)?;",
    "    for result in it {",
    "        let compiled = result?;",
    "        self.patch(union, compiled.start)?;",
    "        self.patch(compiled.end, end)?;",
    "    }",
    "    Ok(ThompsonRef { start: union, end })",
    "}"
  ],
  "size": {
    "chain": 15,
    "contra": 1,
    "min_set": 15
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Err/None",
          "line": 1090,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        9,
        11,
        12,
        145,
        146,
        147,
        148,
        149,
        150,
        151
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1092,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Err/None",
          "line": 1094,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        10,
        13,
        14,
        15,
        16,
        19,
        21,
        23,
        25,
        26,
        139,
        140,
        141,
        142,
        143,
        144,
        150,
        151
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1092,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1094,
          "bound": null
        },
        {
          "cond": "self.add_union()?",
          "norm": null,
          "value": "Err/None",
          "line": 1097,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        10,
        13,
        14,
        15,
        16,
        19,
        21,
        24,
        27,
        28,
        29,
        30,
        31,
        33,
        35,
        36,
        136,
        137,
        138,
        144,
        150,
        151
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1092,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1094,
          "bound": null
        },
        {
          "cond": "self.add_union()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1097,
          "bound": null
        },
        {
          "cond": "self.add_empty()?",
          "norm": null,
          "value": "Err/None",
          "line": 1098,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        10,
        13,
        14,
        15,
        16,
        19,
        21,
        24,
        27,
        28,
        29,
        30,
        31,
        34,
        37,
        38,
        39,
        41,
        43,
        44,
        133,
        134,
        135,
        138,
        144,
        150,
        151
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1092,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1094,
          "bound": null
        },
        {
          "cond": "self.add_union()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1097,
          "bound": null
        },
        {
          "cond": "self.add_empty()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1098,
          "bound": null
        },
        {
          "cond": "self.patch(union, first.start)?",
          "norm": null,
          "value": "Err/None",
          "line": 1099,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        10,
        13,
        14,
        15,
        16,
        19,
        21,
        24,
        27,
        28,
        29,
        30,
        31,
        34,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        49,
        51,
        52,
        131,
        132,
        135,
        138,
        144,
        150,
        151
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1092,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1094,
          "bound": null
        },
        {
          "cond": "self.add_union()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1097,
          "bound": null
        },
        {
          "cond": "self.add_empty()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1098,
          "bound": null
        },
        {
          "cond": "self.patch(union, first.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1099,
          "bound": null
        },
        {
          "cond": "self.patch(first.end, end)?",
          "norm": null,
          "value": "Err/None",
          "line": 1100,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        10,
        13,
        14,
        15,
        16,
        19,
        21,
        24,
        27,
        28,
        29,
        30,
        31,
        34,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        50,
        53,
        54,
        55,
        57,
        59,
        60,
        129,
        130,
        135,
        138,
        144,
        150,
        151
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1092,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1094,
          "bound": null
        },
        {
          "cond": "self.add_union()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1097,
          "bound": null
        },
        {
          "cond": "self.add_empty()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1098,
          "bound": null
        },
        {
          "cond": "self.patch(union, first.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1099,
          "bound": null
        },
        {
          "cond": "self.patch(first.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1100,
          "bound": null
        },
        {
          "cond": "self.patch(union, second.start)?",
          "norm": null,
          "value": "Err/None",
          "line": 1101,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        10,
        13,
        14,
        15,
        16,
        19,
        21,
        24,
        27,
        28,
        29,
        30,
        31,
        34,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        50,
        53,
        54,
        55,
        58,
        61,
        62,
        63,
        65,
        67,
        68,
        127,
        128,
        135,
        138,
        144,
        150,
        151
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1092,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1094,
          "bound": null
        },
        {
          "cond": "self.add_union()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1097,
          "bound": null
        },
        {
          "cond": "self.add_empty()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1098,
          "bound": null
        },
        {
          "cond": "self.patch(union, first.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1099,
          "bound": null
        },
        {
          "cond": "self.patch(first.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1100,
          "bound": null
        },
        {
          "cond": "self.patch(union, second.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1101,
          "bound": null
        },
        {
          "cond": "self.patch(second.end, end)?",
          "norm": null,
          "value": "Err/None",
          "line": 1102,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        10,
        13,
        14,
        15,
        16,
        19,
        21,
        24,
        27,
        28,
        29,
        30,
        31,
        34,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        50,
        53,
        54,
        55,
        58,
        61,
        62,
        63,
        66,
        69,
        70,
        71,
        73,
        75,
        76,
        125,
        126,
        135,
        138,
        144,
        150,
        151
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1092,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1094,
          "bound": null
        },
        {
          "cond": "self.add_union()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1097,
          "bound": null
        },
        {
          "cond": "self.add_empty()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1098,
          "bound": null
        },
        {
          "cond": "self.patch(union, first.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1099,
          "bound": null
        },
        {
          "cond": "self.patch(first.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1100,
          "bound": null
        },
        {
          "cond": "self.patch(union, second.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1101,
          "bound": null
        },
        {
          "cond": "self.patch(second.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1102,
          "bound": null
        },
        {
          "cond": "result in it",
          "norm": null,
          "value": "true",
          "line": 1103,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Err/None",
          "line": 1104,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        10,
        13,
        14,
        15,
        16,
        19,
        21,
        24,
        27,
        28,
        29,
        30,
        31,
        34,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        50,
        53,
        54,
        55,
        58,
        61,
        62,
        63,
        66,
        69,
        70,
        71,
        74,
        77,
        78,
        79,
        80,
        81,
        84,
        86,
        88,
        90,
        91,
        118,
        119,
        120,
        121,
        122,
        123,
        124,
        135,
        138,
        144,
        150,
        151
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1092,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1094,
          "bound": null
        },
        {
          "cond": "self.add_union()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1097,
          "bound": null
        },
        {
          "cond": "self.add_empty()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1098,
          "bound": null
        },
        {
          "cond": "self.patch(union, first.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1099,
          "bound": null
        },
        {
          "cond": "self.patch(first.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1100,
          "bound": null
        },
        {
          "cond": "self.patch(union, second.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1101,
          "bound": null
        },
        {
          "cond": "self.patch(second.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1102,
          "bound": null
        },
        {
          "cond": "result in it",
          "norm": null,
          "value": "true",
          "line": 1103,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1104,
          "bound": null
        },
        {
          "cond": "self.patch(union, compiled.start)?",
          "norm": null,
          "value": "Err/None",
          "line": 1105,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        10,
        13,
        14,
        15,
        16,
        19,
        21,
        24,
        27,
        28,
        29,
        30,
        31,
        34,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        50,
        53,
        54,
        55,
        58,
        61,
        62,
        63,
        66,
        69,
        70,
        71,
        74,
        77,
        78,
        79,
        80,
        81,
        84,
        86,
        89,
        92,
        93,
        94,
        96,
        98,
        99,
        116,
        117,
        120,
        121,
        122,
        123,
        124,
        135,
        138,
        144,
        150,
        151
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1092,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1094,
          "bound": null
        },
        {
          "cond": "self.add_union()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1097,
          "bound": null
        },
        {
          "cond": "self.add_empty()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1098,
          "bound": null
        },
        {
          "cond": "self.patch(union, first.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1099,
          "bound": null
        },
        {
          "cond": "self.patch(first.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1100,
          "bound": null
        },
        {
          "cond": "self.patch(union, second.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1101,
          "bound": null
        },
        {
          "cond": "self.patch(second.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1102,
          "bound": null
        },
        {
          "cond": "result in it",
          "norm": null,
          "value": "true",
          "line": 1103,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1104,
          "bound": null
        },
        {
          "cond": "self.patch(union, compiled.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1105,
          "bound": null
        },
        {
          "cond": "self.patch(compiled.end, end)?",
          "norm": null,
          "value": "Err/None",
          "line": 1106,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        10,
        13,
        14,
        15,
        16,
        19,
        21,
        24,
        27,
        28,
        29,
        30,
        31,
        34,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        50,
        53,
        54,
        55,
        58,
        61,
        62,
        63,
        66,
        69,
        70,
        71,
        74,
        77,
        78,
        79,
        80,
        81,
        84,
        86,
        89,
        92,
        93,
        94,
        97,
        100,
        101,
        102,
        104,
        106,
        107,
        114,
        115,
        120,
        121,
        122,
        123,
        124,
        135,
        138,
        144,
        150,
        151
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1092,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1094,
          "bound": null
        },
        {
          "cond": "self.add_union()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1097,
          "bound": null
        },
        {
          "cond": "self.add_empty()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1098,
          "bound": null
        },
        {
          "cond": "self.patch(union, first.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1099,
          "bound": null
        },
        {
          "cond": "self.patch(first.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1100,
          "bound": null
        },
        {
          "cond": "self.patch(union, second.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1101,
          "bound": null
        },
        {
          "cond": "self.patch(second.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1102,
          "bound": null
        },
        {
          "cond": "result in it",
          "norm": null,
          "value": "true",
          "line": 1103,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1104,
          "bound": null
        },
        {
          "cond": "self.patch(union, compiled.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1105,
          "bound": null
        },
        {
          "cond": "self.patch(compiled.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1106,
          "bound": null
        },
        {
          "cond": "result in it",
          "norm": null,
          "value": "false",
          "line": 1103,
          "bound": null
        }
      ],
      "ret": "Ok(ThompsonRef { start: union, end })",
      "path": [
        0,
        1,
        4,
        7,
        10,
        13,
        14,
        15,
        16,
        19,
        21,
        24,
        27,
        28,
        29,
        30,
        31,
        34,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        50,
        53,
        54,
        55,
        58,
        61,
        62,
        63,
        66,
        69,
        70,
        71,
        74,
        77,
        78,
        79,
        80,
        81,
        84,
        86,
        89,
        92,
        93,
        94,
        97,
        100,
        101,
        102,
        105,
        108,
        109,
        110,
        79,
        80,
        81,
        83,
        85,
        111,
        112,
        113,
        151
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1092,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1094,
          "bound": null
        },
        {
          "cond": "self.add_union()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1097,
          "bound": null
        },
        {
          "cond": "self.add_empty()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1098,
          "bound": null
        },
        {
          "cond": "self.patch(union, first.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1099,
          "bound": null
        },
        {
          "cond": "self.patch(first.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1100,
          "bound": null
        },
        {
          "cond": "self.patch(union, second.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1101,
          "bound": null
        },
        {
          "cond": "self.patch(second.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1102,
          "bound": null
        },
        {
          "cond": "result in it",
          "norm": null,
          "value": "false",
          "line": 1103,
          "bound": null
        }
      ],
      "ret": "Ok(ThompsonRef { start: union, end })",
      "path": [
        0,
        1,
        4,
        7,
        10,
        13,
        14,
        15,
        16,
        19,
        21,
        24,
        27,
        28,
        29,
        30,
        31,
        34,
        37,
        38,
        39,
        42,
        45,
        46,
        47,
        50,
        53,
        54,
        55,
        58,
        61,
        62,
        63,
        66,
        69,
        70,
        71,
        74,
        77,
        78,
        79,
        80,
        81,
        83,
        85,
        111,
        112,
        113,
        151
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "it.next() matches Some(result)",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "result?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "it.next() matches None",
          "norm": null,
          "value": "true",
          "line": 1092,
          "bound": null
        },
        {
          "cond": "it.next() matches None",
          "norm": null,
          "value": "true",
          "line": 1092,
          "bound": null
        }
      ],
      "ret": "Ok(first)",
      "path": [
        0,
        1,
        4,
        7,
        10,
        13,
        14,
        15,
        16,
        18,
        20,
        142,
        143,
        144,
        150,
        151
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "it.next() matches None",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        },
        {
          "cond": "it.next() matches None",
          "norm": null,
          "value": "true",
          "line": 1088,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        6,
        148,
        149,
        150,
        151
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}