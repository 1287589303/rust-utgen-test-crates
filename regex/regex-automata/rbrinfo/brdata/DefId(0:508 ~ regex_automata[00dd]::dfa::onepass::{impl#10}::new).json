{
  "name": "regex_automata::dfa::onepass::{impl#10}::new",
  "mod_info": {
    "name": "dfa::onepass",
    "loc": "regex-automata/src/dfa/mod.rs:339:1:339:17"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/onepass.rs:2600:5:2605:6",
  "doc": "/// Return a new transition to the given state ID with the given epsilons.\n",
  "code": [
    "fn new(match_wins: bool, sid: StateID, epsilons: Epsilons) -> Transition {",
    "    let match_wins =",
    "        if match_wins { 1 << Transition::MATCH_WINS_SHIFT } else { 0 };",
    "    let sid = sid.as_u64() << Transition::STATE_ID_SHIFT;",
    "    Transition(sid | match_wins | epsilons.0)",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "match_wins",
          "norm": null,
          "value": "true",
          "line": 2602,
          "bound": null
        }
      ],
      "ret": "Transition(sid | match_wins | epsilons.0)",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "match_wins",
          "norm": null,
          "value": "false",
          "line": 2602,
          "bound": null
        }
      ],
      "ret": "Transition(sid | match_wins | epsilons.0)",
      "path": [
        0,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}