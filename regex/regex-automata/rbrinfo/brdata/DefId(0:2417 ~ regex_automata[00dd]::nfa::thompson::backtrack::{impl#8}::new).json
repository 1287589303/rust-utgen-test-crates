{
  "name": "regex_automata::nfa::thompson::backtrack::{impl#8}::new",
  "mod_info": {
    "name": "nfa::thompson::backtrack",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:57:1:57:19"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/backtrack.rs:1811:5:1815:6",
  "doc": "/// Create a new visited set for the given backtracker.\n///\n/// The set is ready to use, but must be setup at the beginning of each\n/// search by calling `setup_search`.\n",
  "code": [
    "fn new(re: &BoundedBacktracker) -> Visited {",
    "    let mut visited = Visited { bitset: vec![], stride: 0 };",
    "    visited.reset(re);",
    "    visited",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "visited",
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}