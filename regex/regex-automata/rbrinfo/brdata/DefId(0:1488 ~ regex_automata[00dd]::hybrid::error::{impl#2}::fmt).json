{
  "name": "regex_automata::hybrid::error::{impl#2}::fmt",
  "mod_info": {
    "name": "hybrid::error",
    "loc": "regex-automata/src/hybrid/mod.rs:141:1:141:11"
  },
  "visible": true,
  "loc": "regex-automata/src/hybrid/error.rs:77:5:95:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {",
    "    match self.kind {",
    "        BuildErrorKind::NFA(_) => write!(f, \"error building NFA\"),",
    "        BuildErrorKind::InsufficientCacheCapacity { minimum, given } => {",
    "            write!(",
    "                f,",
    "                \"given cache capacity ({}) is smaller than \\",
    "                 minimum required ({})\",",
    "                given, minimum,",
    "            )",
    "        }",
    "        BuildErrorKind::InsufficientStateIDCapacity { ref err } => {",
    "            err.fmt(f)",
    "        }",
    "        BuildErrorKind::Unsupported(ref msg) => {",
    "            write!(f, \"unsupported regex feature for DFAs: {}\", msg)",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.kind matches BuildErrorKind::Unsupported(ref msg)",
          "norm": null,
          "value": "true",
          "line": 78,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        16,
        17,
        18,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.kind matches BuildErrorKind::InsufficientStateIDCapacity { ref err }",
          "norm": null,
          "value": "true",
          "line": 78,
          "bound": null
        },
        {
          "cond": "self.kind matches BuildErrorKind::InsufficientStateIDCapacity { ref err }",
          "norm": null,
          "value": "true",
          "line": 78,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        14,
        15,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.kind matches BuildErrorKind::InsufficientCacheCapacity { minimum, given }",
          "norm": null,
          "value": "true",
          "line": 78,
          "bound": null
        },
        {
          "cond": "self.kind matches BuildErrorKind::InsufficientCacheCapacity { minimum, given }",
          "norm": null,
          "value": "true",
          "line": 78,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        9,
        10,
        11,
        12,
        13,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.kind matches BuildErrorKind::NFA(_)",
          "norm": null,
          "value": "true",
          "line": 78,
          "bound": null
        },
        {
          "cond": "self.kind matches BuildErrorKind::NFA(_)",
          "norm": null,
          "value": "true",
          "line": 78,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        6,
        7,
        8,
        19
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}