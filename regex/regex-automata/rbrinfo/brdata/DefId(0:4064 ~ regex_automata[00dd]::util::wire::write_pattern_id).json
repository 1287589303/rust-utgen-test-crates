{
  "name": "regex_automata::util::wire::write_pattern_id",
  "mod_info": {
    "name": "util::wire",
    "loc": "regex-automata/src/util/mod.rs:46:1:46:14"
  },
  "visible": true,
  "loc": "regex-automata/src/util/wire.rs:608:1:614:2",
  "doc": "/// Write the given pattern ID to the beginning of the given slice of bytes\n/// using the specified endianness. The given slice must have length at least\n/// `PatternID::SIZE`, or else this panics. Upon success, the total number of\n/// bytes written is returned.\n",
  "code": [
    "pub(crate) fn write_pattern_id<E: Endian>(",
    "    pid: PatternID,",
    "    dst: &mut [u8],",
    ") -> usize {",
    "    E::write_u32(pid.as_u32(), dst);",
    "    PatternID::SIZE",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "PatternID::SIZE",
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}