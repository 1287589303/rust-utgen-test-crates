{
  "name": "regex_automata::meta::regex::{impl#6}::new",
  "mod_info": {
    "name": "meta::regex",
    "loc": "regex-automata/src/meta/mod.rs:57:1:57:11"
  },
  "visible": false,
  "loc": "regex-automata/src/meta/regex.rs:1922:5:1933:6",
  "doc": "",
  "code": [
    "fn new(config: Config, hirs: &[&Hir]) -> RegexInfo {",
    "    // Collect all of the properties from each of the HIRs, and also",
    "    // union them into one big set of properties representing all HIRs",
    "    // as if they were in one big alternation.",
    "    let mut props = vec![];",
    "    for hir in hirs.iter() {",
    "        props.push(hir.properties().clone());",
    "    }",
    "    let props_union = hir::Properties::union(&props);",
    "",
    "    RegexInfo(Arc::new(RegexInfoI { config, props, props_union }))",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 1,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "true",
          "line": 1927,
          "bound": null
        },
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "false",
          "line": 1927,
          "bound": null
        }
      ],
      "ret": "RegexInfo(Arc::new(RegexInfoI { config, props, props_union }))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        4,
        5,
        6,
        8,
        10,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "false",
          "line": 1927,
          "bound": null
        }
      ],
      "ret": "RegexInfo(Arc::new(RegexInfoI { config, props, props_union }))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}