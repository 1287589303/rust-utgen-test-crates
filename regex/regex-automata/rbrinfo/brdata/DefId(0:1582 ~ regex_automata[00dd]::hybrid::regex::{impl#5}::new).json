{
  "name": "regex_automata::hybrid::regex::{impl#5}::new",
  "mod_info": {
    "name": "hybrid::regex",
    "loc": "regex-automata/src/hybrid/mod.rs:143:1:143:15"
  },
  "visible": true,
  "loc": "regex-automata/src/hybrid/regex.rs:612:5:616:6",
  "doc": "/// Create a new cache for the given `Regex`.\n///\n/// The cache returned should only be used for searches for the given\n/// `Regex`. If you want to reuse the cache for another `Regex`, then you\n/// must call [`Cache::reset`] with that `Regex`.\n",
  "code": [
    "pub fn new(re: &Regex) -> Cache {",
    "    let forward = dfa::Cache::new(re.forward());",
    "    let reverse = dfa::Cache::new(re.reverse());",
    "    Cache { forward, reverse }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Cache { forward, reverse }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}