{
  "name": "regex_automata::nfa::thompson::backtrack::{impl#4}::try_search_slots_imp",
  "mod_info": {
    "name": "nfa::thompson::backtrack",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:57:1:57:19"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/backtrack.rs:1331:5:1348:6",
  "doc": "/// This is the actual implementation of `try_search_slots_imp` that\n/// doesn't account for the special case when 1) the NFA has UTF-8 mode\n/// enabled, 2) the NFA can match the empty string and 3) the caller has\n/// provided an insufficient number of slots to record match offsets.\n",
  "code": [
    "fn try_search_slots_imp(",
    "    &self,",
    "    cache: &mut Cache,",
    "    input: &Input<'_>,",
    "    slots: &mut [Option<NonMaxUsize>],",
    ") -> Result<Option<HalfMatch>, MatchError> {",
    "    let utf8empty = self.get_nfa().has_empty() && self.get_nfa().is_utf8();",
    "    let hm = match self.search_imp(cache, input, slots)? {",
    "        None => return Ok(None),",
    "        Some(hm) if !utf8empty => return Ok(Some(hm)),",
    "        Some(hm) => hm,",
    "    };",
    "    empty::skip_splits_fwd(input, hm, hm.offset(), |input| {",
    "        Ok(self",
    "            .search_imp(cache, input, slots)?",
    "            .map(|hm| (hm, hm.offset())))",
    "    })",
    "}"
  ],
  "size": {
    "chain": 8,
    "contra": 4,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.get_nfa().has_empty()",
          "norm": null,
          "value": "true",
          "line": 1337,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)?",
          "norm": null,
          "value": "Err/None",
          "line": 1338,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        6,
        7,
        8,
        9,
        11,
        13,
        14,
        26,
        27,
        28,
        29
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.get_nfa().has_empty()",
          "norm": null,
          "value": "true",
          "line": 1337,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)?",
          "norm": null,
          "value": "Err/None",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)? matches Some(hm)",
          "norm": null,
          "value": "true",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "utf8empty",
          "norm": null,
          "value": "true",
          "line": 1340,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        6,
        7,
        8,
        9,
        12,
        17,
        20,
        21,
        18,
        23,
        24,
        25,
        29
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.get_nfa().has_empty()",
          "norm": null,
          "value": "true",
          "line": 1337,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)?",
          "norm": null,
          "value": "Err/None",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)? matches Some(hm)",
          "norm": null,
          "value": "true",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "utf8empty",
          "norm": null,
          "value": "false",
          "line": 1340,
          "bound": null
        }
      ],
      "ret": "Ok(Some(hm))",
      "path": [
        0,
        1,
        2,
        3,
        5,
        6,
        7,
        8,
        9,
        12,
        17,
        20,
        22,
        27,
        28,
        29
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.get_nfa().has_empty()",
          "norm": null,
          "value": "true",
          "line": 1337,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)? matches None",
          "norm": null,
          "value": "true",
          "line": 1338,
          "bound": null
        }
      ],
      "ret": "Ok(None)",
      "path": [
        0,
        1,
        2,
        3,
        5,
        6,
        7,
        8,
        9,
        12,
        16,
        19,
        27,
        28,
        29
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.get_nfa().has_empty()",
          "norm": null,
          "value": "false",
          "line": 1337,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)?",
          "norm": null,
          "value": "Err/None",
          "line": 1338,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        8,
        9,
        11,
        13,
        14,
        26,
        27,
        28,
        29
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.get_nfa().has_empty()",
          "norm": null,
          "value": "false",
          "line": 1337,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)?",
          "norm": null,
          "value": "Err/None",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)? matches Some(hm)",
          "norm": null,
          "value": "true",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "utf8empty",
          "norm": null,
          "value": "true",
          "line": 1340,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        8,
        9,
        12,
        17,
        20,
        21,
        18,
        23,
        24,
        25,
        29
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.get_nfa().has_empty()",
          "norm": null,
          "value": "false",
          "line": 1337,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)?",
          "norm": null,
          "value": "Err/None",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)? matches Some(hm)",
          "norm": null,
          "value": "true",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "utf8empty",
          "norm": null,
          "value": "false",
          "line": 1340,
          "bound": null
        }
      ],
      "ret": "Ok(Some(hm))",
      "path": [
        0,
        1,
        2,
        4,
        7,
        8,
        9,
        12,
        17,
        20,
        22,
        27,
        28,
        29
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self.get_nfa().has_empty()",
          "norm": null,
          "value": "false",
          "line": 1337,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1338,
          "bound": null
        },
        {
          "cond": "self.search_imp(cache, input, slots)? matches None",
          "norm": null,
          "value": "true",
          "line": 1338,
          "bound": null
        }
      ],
      "ret": "Ok(None)",
      "path": [
        0,
        1,
        2,
        4,
        7,
        8,
        9,
        12,
        16,
        19,
        27,
        28,
        29
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}