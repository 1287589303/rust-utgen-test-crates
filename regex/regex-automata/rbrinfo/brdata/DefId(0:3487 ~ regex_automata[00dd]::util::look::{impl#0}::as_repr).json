{
  "name": "regex_automata::util::look::{impl#0}::as_repr",
  "mod_info": {
    "name": "util::look",
    "loc": "regex-automata/src/util/mod.rs:38:1:38:14"
  },
  "visible": true,
  "loc": "regex-automata/src/util/look.rs:172:5:176:6",
  "doc": "/// Return the underlying representation of this look-around enumeration\n/// as an integer. Giving the return value to the [`Look::from_repr`]\n/// constructor is guaranteed to return the same look-around variant that\n/// one started with within a semver compatible release of this crate.\n",
  "code": [
    "pub const fn as_repr(self) -> u32 {",
    "    // AFAIK, 'as' is the only way to zero-cost convert an int enum to an",
    "    // actual int.",
    "    self as u32",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self as u32",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}