{
  "name": "regex_automata::util::prefilter::byteset::{impl#0}::new",
  "mod_info": {
    "name": "util::prefilter::byteset",
    "loc": "regex-automata/src/util/prefilter/mod.rs:37:1:37:13"
  },
  "visible": true,
  "loc": "regex-automata/src/util/prefilter/byteset.rs:10:5:30:6",
  "doc": "",
  "code": [
    "pub(crate) fn new<B: AsRef<[u8]>>(",
    "    _kind: MatchKind,",
    "    needles: &[B],",
    ") -> Option<ByteSet> {",
    "    #[cfg(not(feature = \"perf-literal-multisubstring\"))]",
    "    {",
    "        None",
    "    }",
    "    #[cfg(feature = \"perf-literal-multisubstring\")]",
    "    {",
    "        let mut set = [false; 256];",
    "        for needle in needles.iter() {",
    "            let needle = needle.as_ref();",
    "            if needle.len() != 1 {",
    "                return None;",
    "            }",
    "            set[usize::from(needle[0])] = true;",
    "        }",
    "        Some(ByteSet(set))",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 1,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "needle in needles.iter()",
          "norm": null,
          "value": "true",
          "line": 21,
          "bound": null
        },
        {
          "cond": "needle.len() != 1",
          "norm": "1 != needle.len()",
          "value": "true",
          "line": 23,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        10,
        11,
        12,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "needle in needles.iter()",
          "norm": null,
          "value": "true",
          "line": 21,
          "bound": null
        },
        {
          "cond": "needle.len() != 1",
          "norm": "1 != needle.len()",
          "value": "false",
          "line": 23,
          "bound": null
        },
        {
          "cond": "needle in needles.iter()",
          "norm": null,
          "value": "false",
          "line": 21,
          "bound": null
        }
      ],
      "ret": "Some(ByteSet(set))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        10,
        11,
        13,
        14,
        15,
        16,
        3,
        4,
        5,
        7,
        9,
        17
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "needle in needles.iter()",
          "norm": null,
          "value": "false",
          "line": 21,
          "bound": null
        }
      ],
      "ret": "Some(ByteSet(set))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        17
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}