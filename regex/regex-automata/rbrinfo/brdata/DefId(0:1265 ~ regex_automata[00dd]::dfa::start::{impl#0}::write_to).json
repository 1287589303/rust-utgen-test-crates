{
  "name": "regex_automata::dfa::start::{impl#0}::write_to",
  "mod_info": {
    "name": "dfa::start",
    "loc": "regex-automata/src/dfa/mod.rs:360:1:360:11"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/start.rs:44:5:59:6",
  "doc": "",
  "code": [
    "pub(crate) fn write_to<E: Endian>(",
    "    &self,",
    "    dst: &mut [u8],",
    ") -> Result<usize, SerializeError> {",
    "    let nwrite = self.write_to_len();",
    "    if dst.len() < nwrite {",
    "        return Err(SerializeError::buffer_too_small(\"start kind\"));",
    "    }",
    "    let n = match *self {",
    "        StartKind::Both => 0,",
    "        StartKind::Unanchored => 1,",
    "        StartKind::Anchored => 2,",
    "    };",
    "    E::write_u32(n, dst);",
    "    Ok(nwrite)",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "dst.len() < nwrite",
          "norm": null,
          "value": "true",
          "line": 49,
          "bound": null
        }
      ],
      "ret": "Err(SerializeError::buffer_too_small(\"start kind\"))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        14
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "dst.len() < nwrite",
          "norm": null,
          "value": "false",
          "line": 49,
          "bound": "dst.len() == nwrite"
        },
        {
          "cond": "*self matches StartKind::Anchored",
          "norm": null,
          "value": "true",
          "line": 52,
          "bound": null
        }
      ],
      "ret": "Ok(nwrite)",
      "path": [
        0,
        1,
        2,
        5,
        9,
        12,
        13,
        14
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "dst.len() < nwrite",
          "norm": null,
          "value": "false",
          "line": 49,
          "bound": "dst.len() == nwrite"
        },
        {
          "cond": "*self matches StartKind::Unanchored",
          "norm": null,
          "value": "true",
          "line": 52,
          "bound": null
        },
        {
          "cond": "*self matches StartKind::Unanchored",
          "norm": null,
          "value": "true",
          "line": 52,
          "bound": null
        }
      ],
      "ret": "Ok(nwrite)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        11,
        12,
        13,
        14
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "dst.len() < nwrite",
          "norm": null,
          "value": "false",
          "line": 49,
          "bound": "dst.len() == nwrite"
        },
        {
          "cond": "*self matches StartKind::Both",
          "norm": null,
          "value": "true",
          "line": 52,
          "bound": null
        },
        {
          "cond": "*self matches StartKind::Both",
          "norm": null,
          "value": "true",
          "line": 52,
          "bound": null
        }
      ],
      "ret": "Ok(nwrite)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        10,
        12,
        13,
        14
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}