{
  "name": "regex_automata::nfa::thompson::nfa::{impl#2}::remap",
  "mod_info": {
    "name": "nfa::thompson::nfa",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:66:1:66:9"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/nfa.rs:1447:5:1456:6",
  "doc": "/// Remap the transitions in every state of this NFA using the given map.\n/// The given map should be indexed according to state ID namespace used by\n/// the transitions of the states currently in this NFA.\n///\n/// This is particularly useful to the NFA builder, since it is convenient\n/// to add NFA states in order to produce their final IDs. Then, after all\n/// of the intermediate \"empty\" states (unconditional epsilon transitions)\n/// have been removed from the builder's representation, we can re-map all\n/// of the transitions in the states already added to their final IDs.\n",
  "code": [
    "pub(super) fn remap(&mut self, old_to_new: &[StateID]) {",
    "    for state in &mut self.states {",
    "        state.remap(old_to_new);",
    "    }",
    "    self.start_anchored = old_to_new[self.start_anchored];",
    "    self.start_unanchored = old_to_new[self.start_unanchored];",
    "    for id in self.start_pattern.iter_mut() {",
    "        *id = old_to_new[*id];",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 3,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "state in &mut self.states",
          "norm": null,
          "value": "true",
          "line": 1448,
          "bound": null
        },
        {
          "cond": "state in &mut self.states",
          "norm": null,
          "value": "false",
          "line": 1448,
          "bound": null
        },
        {
          "cond": "id in self.start_pattern.iter_mut()",
          "norm": null,
          "value": "true",
          "line": 1453,
          "bound": null
        },
        {
          "cond": "id in self.start_pattern.iter_mut()",
          "norm": null,
          "value": "false",
          "line": 1453,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        9,
        2,
        3,
        4,
        6,
        8,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        20,
        22,
        15,
        16,
        17,
        19,
        21
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "state in &mut self.states",
          "norm": null,
          "value": "true",
          "line": 1448,
          "bound": null
        },
        {
          "cond": "state in &mut self.states",
          "norm": null,
          "value": "false",
          "line": 1448,
          "bound": null
        },
        {
          "cond": "id in self.start_pattern.iter_mut()",
          "norm": null,
          "value": "false",
          "line": 1453,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        9,
        2,
        3,
        4,
        6,
        8,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        19,
        21
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "state in &mut self.states",
          "norm": null,
          "value": "false",
          "line": 1448,
          "bound": null
        },
        {
          "cond": "id in self.start_pattern.iter_mut()",
          "norm": null,
          "value": "true",
          "line": 1453,
          "bound": null
        },
        {
          "cond": "id in self.start_pattern.iter_mut()",
          "norm": null,
          "value": "false",
          "line": 1453,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        8,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        20,
        22,
        15,
        16,
        17,
        19,
        21
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "state in &mut self.states",
          "norm": null,
          "value": "false",
          "line": 1448,
          "bound": null
        },
        {
          "cond": "id in self.start_pattern.iter_mut()",
          "norm": null,
          "value": "false",
          "line": 1453,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        8,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        19,
        21
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}