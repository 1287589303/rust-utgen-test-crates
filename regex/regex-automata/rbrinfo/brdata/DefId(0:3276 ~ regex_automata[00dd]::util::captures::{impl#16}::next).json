{
  "name": "regex_automata::util::captures::{impl#16}::next",
  "mod_info": {
    "name": "util::captures",
    "loc": "regex-automata/src/util/mod.rs:32:1:32:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/captures.rs:2523:5:2547:6",
  "doc": "",
  "code": [
    "fn next(&mut self) -> Option<(PatternID, usize, Option<&'a str>)> {",
    "    // If the group info has no captures, then we never have anything",
    "    // to yield. We need to consider this case explicitly (at time of",
    "    // writing) because 'pattern_capture_names' will panic if captures",
    "    // aren't enabled.",
    "    if self.group_info.0.index_to_name.is_empty() {",
    "        return None;",
    "    }",
    "    if self.current_pid.is_none() {",
    "        self.current_pid = Some(self.pids.next()?);",
    "    }",
    "    let pid = self.current_pid.unwrap();",
    "    if self.names.is_none() {",
    "        self.names = Some(self.group_info.pattern_names(pid).enumerate());",
    "    }",
    "    let (group_index, name) = match self.names.as_mut().unwrap().next() {",
    "        Some((group_index, name)) => (group_index, name),",
    "        None => {",
    "            self.current_pid = None;",
    "            self.names = None;",
    "            return self.next();",
    "        }",
    "    };",
    "    Some((pid, group_index, name))",
    "}"
  ],
  "size": {
    "chain": 10,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.group_info.0.index_to_name.is_empty()",
          "norm": null,
          "value": "true",
          "line": 2528,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        31
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.group_info.0.index_to_name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2528,
          "bound": null
        },
        {
          "cond": "self.current_pid.is_none()",
          "norm": null,
          "value": "true",
          "line": 2531,
          "bound": null
        },
        {
          "cond": "self.pids.next()?",
          "norm": null,
          "value": "Err/None",
          "line": 2532,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        10,
        12,
        13,
        31
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.group_info.0.index_to_name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2528,
          "bound": null
        },
        {
          "cond": "self.current_pid.is_none()",
          "norm": null,
          "value": "true",
          "line": 2531,
          "bound": null
        },
        {
          "cond": "self.pids.next()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2532,
          "bound": null
        },
        {
          "cond": "self.names.is_none()",
          "norm": null,
          "value": "true",
          "line": 2535,
          "bound": null
        },
        {
          "cond": "self.names.as_mut().unwrap().next() matches Some((group_index, name))",
          "norm": null,
          "value": "true",
          "line": 2538,
          "bound": null
        },
        {
          "cond": "self.names.as_mut().unwrap().next() matches Some((group_index, name))",
          "norm": null,
          "value": "true",
          "line": 2538,
          "bound": null
        }
      ],
      "ret": "Some((pid, group_index, name))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        11,
        15,
        16,
        17,
        18,
        19,
        20,
        22,
        23,
        24,
        25,
        27,
        29,
        31
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.group_info.0.index_to_name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2528,
          "bound": null
        },
        {
          "cond": "self.current_pid.is_none()",
          "norm": null,
          "value": "true",
          "line": 2531,
          "bound": null
        },
        {
          "cond": "self.pids.next()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2532,
          "bound": null
        },
        {
          "cond": "self.names.is_none()",
          "norm": null,
          "value": "true",
          "line": 2535,
          "bound": null
        },
        {
          "cond": "self.names.as_mut().unwrap().next() matches None",
          "norm": null,
          "value": "true",
          "line": 2538,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        11,
        15,
        16,
        17,
        18,
        19,
        20,
        22,
        23,
        24,
        25,
        28,
        30,
        31
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.group_info.0.index_to_name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2528,
          "bound": null
        },
        {
          "cond": "self.current_pid.is_none()",
          "norm": null,
          "value": "true",
          "line": 2531,
          "bound": null
        },
        {
          "cond": "self.pids.next()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2532,
          "bound": null
        },
        {
          "cond": "self.names.is_none()",
          "norm": null,
          "value": "false",
          "line": 2535,
          "bound": null
        },
        {
          "cond": "self.names.as_mut().unwrap().next() matches Some((group_index, name))",
          "norm": null,
          "value": "true",
          "line": 2538,
          "bound": null
        },
        {
          "cond": "self.names.as_mut().unwrap().next() matches Some((group_index, name))",
          "norm": null,
          "value": "true",
          "line": 2538,
          "bound": null
        }
      ],
      "ret": "Some((pid, group_index, name))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        11,
        15,
        16,
        17,
        21,
        22,
        23,
        24,
        25,
        27,
        29,
        31
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.group_info.0.index_to_name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2528,
          "bound": null
        },
        {
          "cond": "self.current_pid.is_none()",
          "norm": null,
          "value": "true",
          "line": 2531,
          "bound": null
        },
        {
          "cond": "self.pids.next()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2532,
          "bound": null
        },
        {
          "cond": "self.names.is_none()",
          "norm": null,
          "value": "false",
          "line": 2535,
          "bound": null
        },
        {
          "cond": "self.names.as_mut().unwrap().next() matches None",
          "norm": null,
          "value": "true",
          "line": 2538,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        11,
        15,
        16,
        17,
        21,
        22,
        23,
        24,
        25,
        28,
        30,
        31
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.group_info.0.index_to_name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2528,
          "bound": null
        },
        {
          "cond": "self.current_pid.is_none()",
          "norm": null,
          "value": "false",
          "line": 2531,
          "bound": null
        },
        {
          "cond": "self.names.is_none()",
          "norm": null,
          "value": "true",
          "line": 2535,
          "bound": null
        },
        {
          "cond": "self.names.as_mut().unwrap().next() matches Some((group_index, name))",
          "norm": null,
          "value": "true",
          "line": 2538,
          "bound": null
        },
        {
          "cond": "self.names.as_mut().unwrap().next() matches Some((group_index, name))",
          "norm": null,
          "value": "true",
          "line": 2538,
          "bound": null
        }
      ],
      "ret": "Some((pid, group_index, name))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        22,
        23,
        24,
        25,
        27,
        29,
        31
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self.group_info.0.index_to_name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2528,
          "bound": null
        },
        {
          "cond": "self.current_pid.is_none()",
          "norm": null,
          "value": "false",
          "line": 2531,
          "bound": null
        },
        {
          "cond": "self.names.is_none()",
          "norm": null,
          "value": "true",
          "line": 2535,
          "bound": null
        },
        {
          "cond": "self.names.as_mut().unwrap().next() matches None",
          "norm": null,
          "value": "true",
          "line": 2538,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        22,
        23,
        24,
        25,
        28,
        30,
        31
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "self.group_info.0.index_to_name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2528,
          "bound": null
        },
        {
          "cond": "self.current_pid.is_none()",
          "norm": null,
          "value": "false",
          "line": 2531,
          "bound": null
        },
        {
          "cond": "self.names.is_none()",
          "norm": null,
          "value": "false",
          "line": 2535,
          "bound": null
        },
        {
          "cond": "self.names.as_mut().unwrap().next() matches Some((group_index, name))",
          "norm": null,
          "value": "true",
          "line": 2538,
          "bound": null
        },
        {
          "cond": "self.names.as_mut().unwrap().next() matches Some((group_index, name))",
          "norm": null,
          "value": "true",
          "line": 2538,
          "bound": null
        }
      ],
      "ret": "Some((pid, group_index, name))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        14,
        15,
        16,
        17,
        21,
        22,
        23,
        24,
        25,
        27,
        29,
        31
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "self.group_info.0.index_to_name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2528,
          "bound": null
        },
        {
          "cond": "self.current_pid.is_none()",
          "norm": null,
          "value": "false",
          "line": 2531,
          "bound": null
        },
        {
          "cond": "self.names.is_none()",
          "norm": null,
          "value": "false",
          "line": 2535,
          "bound": null
        },
        {
          "cond": "self.names.as_mut().unwrap().next() matches None",
          "norm": null,
          "value": "true",
          "line": 2538,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        14,
        15,
        16,
        17,
        21,
        22,
        23,
        24,
        25,
        28,
        30,
        31
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}