{
  "name": "regex_automata::dfa::dense::{impl#15}::alphabet_len",
  "mod_info": {
    "name": "dfa::dense",
    "loc": "regex-automata/src/dfa/mod.rs:337:1:337:15"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/dense.rs:3748:5:3750:6",
  "doc": "/// Returns the total number of elements in the alphabet for this\n/// transition table. This is always less than or equal to `self.stride()`.\n/// It is only equal when the alphabet length is a power of 2. Otherwise,\n/// it is always strictly less.\n",
  "code": [
    "fn alphabet_len(&self) -> usize {",
    "    self.classes.alphabet_len()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}