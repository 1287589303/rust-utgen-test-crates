{
  "name": "regex_automata::dfa::sparse::{impl#18}::pattern_len",
  "mod_info": {
    "name": "dfa::sparse",
    "loc": "regex-automata/src/dfa/mod.rs:343:1:343:16"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/sparse.rs:2328:5:2331:6",
  "doc": "/// Returns the total number of pattern IDs for this state. This is always\n/// zero when `is_match` is false.\n",
  "code": [
    "fn pattern_len(&self) -> usize {",
    "    assert_eq!(0, self.pattern_ids.len() % 4);",
    "    self.pattern_ids.len() / 4",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        }
      ],
      "ret": "self.pattern_ids.len() / 4",
      "path": [
        0,
        1,
        2,
        3,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}