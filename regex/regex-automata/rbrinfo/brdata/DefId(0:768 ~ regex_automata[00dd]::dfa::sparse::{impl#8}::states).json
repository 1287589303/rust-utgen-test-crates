{
  "name": "regex_automata::dfa::sparse::{impl#8}::states",
  "mod_info": {
    "name": "dfa::sparse",
    "loc": "regex-automata/src/dfa/mod.rs:343:1:343:16"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/sparse.rs:1693:5:1695:6",
  "doc": "/// Return an iterator over all of the states in this DFA.\n///\n/// The iterator returned yields tuples, where the first element is the\n/// state ID and the second element is the state itself.\n",
  "code": [
    "fn states(&self) -> StateIter<'_, T> {",
    "    StateIter { trans: self, id: DEAD.as_usize() }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "StateIter { trans: self, id: DEAD.as_usize() }",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}