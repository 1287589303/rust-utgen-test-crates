{
  "name": "regex_automata::nfa::thompson::compiler::{impl#4}::c_fail",
  "mod_info": {
    "name": "nfa::thompson::compiler",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:60:1:60:14"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/compiler.rs:1602:5:1605:6",
  "doc": "/// Compile a \"fail\" state that can never have any outgoing transitions.\n",
  "code": [
    "fn c_fail(&self) -> Result<ThompsonRef, BuildError> {",
    "    let id = self.add_fail()?;",
    "    Ok(ThompsonRef { start: id, end: id })",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.add_fail()?",
          "norm": null,
          "value": "Err/None",
          "line": 1603,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.add_fail()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1603,
          "bound": null
        }
      ],
      "ret": "Ok(ThompsonRef { start: id, end: id })",
      "path": [
        0,
        1,
        2,
        5,
        8,
        11
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}