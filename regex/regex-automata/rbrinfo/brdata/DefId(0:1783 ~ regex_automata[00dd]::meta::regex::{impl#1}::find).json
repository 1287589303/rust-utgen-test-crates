{
  "name": "regex_automata::meta::regex::{impl#1}::find",
  "mod_info": {
    "name": "meta::regex",
    "loc": "regex-automata/src/meta/mod.rs:57:1:57:11"
  },
  "visible": true,
  "loc": "regex-automata/src/meta/regex.rs:556:5:558:6",
  "doc": "/// Executes a leftmost search and returns the first match that is found,\n/// if one exists.\n///\n/// # Example\n///\n/// ```\n/// use regex_automata::{meta::Regex, Match};\n///\n/// let re = Regex::new(\"foo[0-9]+\")?;\n/// assert_eq!(Some(Match::must(0, 0..8)), re.find(\"foo12345\"));\n///\n/// # Ok::<(), Box<dyn std::error::Error>>(())\n/// ```\n",
  "code": [
    "pub fn find<'h, I: Into<Input<'h>>>(&self, input: I) -> Option<Match> {",
    "    self.search(&input.into())",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}