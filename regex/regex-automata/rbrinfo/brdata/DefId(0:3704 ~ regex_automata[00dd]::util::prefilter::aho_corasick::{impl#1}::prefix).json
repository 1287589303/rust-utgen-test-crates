{
  "name": "regex_automata::util::prefilter::aho_corasick::{impl#1}::prefix",
  "mod_info": {
    "name": "util::prefilter::aho_corasick",
    "loc": "regex-automata/src/util/prefilter/mod.rs:36:1:36:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/prefilter/aho_corasick.rs:98:5:112:6",
  "doc": "",
  "code": [
    "fn prefix(&self, haystack: &[u8], span: Span) -> Option<Span> {",
    "    #[cfg(not(feature = \"perf-literal-multisubstring\"))]",
    "    {",
    "        unreachable!()",
    "    }",
    "    #[cfg(feature = \"perf-literal-multisubstring\")]",
    "    {",
    "        let input = aho_corasick::Input::new(haystack)",
    "            .anchored(aho_corasick::Anchored::Yes)",
    "            .span(span.start..span.end);",
    "        self.ac",
    "            .find(input)",
    "            .map(|m| Span { start: m.start(), end: m.end() })",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}