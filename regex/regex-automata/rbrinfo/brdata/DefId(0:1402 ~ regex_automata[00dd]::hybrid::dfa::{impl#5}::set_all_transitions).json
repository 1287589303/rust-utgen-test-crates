{
  "name": "regex_automata::hybrid::dfa::{impl#5}::set_all_transitions",
  "mod_info": {
    "name": "hybrid::dfa",
    "loc": "regex-automata/src/hybrid/mod.rs:140:1:140:13"
  },
  "visible": false,
  "loc": "regex-automata/src/hybrid/dfa.rs:2584:5:2588:6",
  "doc": "/// Set all transitions on the state 'from' to 'to'.\n",
  "code": [
    "fn set_all_transitions(&mut self, from: LazyStateID, to: LazyStateID) {",
    "    for unit in self.dfa.classes.representatives(..) {",
    "        self.set_transition(from, unit, to);",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 1,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "unit in self.dfa.classes.representatives(..)",
          "norm": null,
          "value": "true",
          "line": 2585,
          "bound": null
        },
        {
          "cond": "unit in self.dfa.classes.representatives(..)",
          "norm": null,
          "value": "false",
          "line": 2585,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        10,
        3,
        4,
        5,
        7,
        9
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "unit in self.dfa.classes.representatives(..)",
          "norm": null,
          "value": "false",
          "line": 2585,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}