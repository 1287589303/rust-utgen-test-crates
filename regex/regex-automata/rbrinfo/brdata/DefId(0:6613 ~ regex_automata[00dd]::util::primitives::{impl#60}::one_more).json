{
  "name": "regex_automata::util::primitives::{impl#60}::one_more",
  "mod_info": {
    "name": "util::primitives",
    "loc": "regex-automata/src/util/mod.rs:42:1:42:20"
  },
  "visible": true,
  "loc": "regex-automata/src/util/primitives.rs:504:13:506:14",
  "doc": "/// Returns one more than this value as a usize.\n///\n/// Since values represented by a \"small index\" have constraints\n/// on their maximum value, adding `1` to it will always fit in a\n/// `usize`, `u32` and a `i32`.\n",
  "code": [
    "pub fn one_more(&self) -> usize {",
    "    self.0.one_more()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}