{
  "name": "regex_automata::hybrid::dfa::{impl#8}::get_minimum_bytes_per_state",
  "mod_info": {
    "name": "hybrid::dfa",
    "loc": "regex-automata/src/hybrid/mod.rs:140:1:140:13"
  },
  "visible": true,
  "loc": "regex-automata/src/hybrid/dfa.rs:3783:5:3785:6",
  "doc": "/// Returns, if set, the minimum number of bytes per state that need to be\n/// processed in order for the lazy DFA to keep going. If the minimum falls\n/// below this number (and the cache has been cleared a minimum number of\n/// times), then the lazy DFA will return a \"gave up\" error.\n",
  "code": [
    "pub fn get_minimum_bytes_per_state(&self) -> Option<usize> {",
    "    self.minimum_bytes_per_state.unwrap_or(None)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}