{
  "name": "regex_automata::dfa::dense::{impl#6}::as_ref",
  "mod_info": {
    "name": "dfa::dense",
    "loc": "regex-automata/src/dfa/mod.rs:337:1:337:15"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/dense.rs:1578:5:1589:6",
  "doc": "/// Cheaply return a borrowed version of this dense DFA. Specifically,\n/// the DFA returned always uses `&[u32]` for its transition table.\n",
  "code": [
    "pub fn as_ref(&self) -> DFA<&'_ [u32]> {",
    "    DFA {",
    "        tt: self.tt.as_ref(),",
    "        st: self.st.as_ref(),",
    "        ms: self.ms.as_ref(),",
    "        special: self.special,",
    "        accels: self.accels(),",
    "        pre: self.pre.clone(),",
    "        quitset: self.quitset,",
    "        flags: self.flags,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "DFA {\n            tt: self.tt.as_ref(),\n            st: self.st.as_ref(),\n            ms: self.ms.as_ref(),\n            special: self.special,\n            accels: self.accels(),\n            pre: self.pre.clone(),\n            quitset: self.quitset,\n            flags: self.flags,\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}