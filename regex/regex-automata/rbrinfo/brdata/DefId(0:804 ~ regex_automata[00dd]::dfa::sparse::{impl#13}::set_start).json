{
  "name": "regex_automata::dfa::sparse::{impl#13}::set_start",
  "mod_info": {
    "name": "dfa::sparse",
    "loc": "regex-automata/src/dfa/mod.rs:343:1:343:16"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/sparse.rs:2138:5:2164:6",
  "doc": "/// Set the start state for the given index and pattern.\n///\n/// If the pattern ID or state ID are not valid, then this will panic.\n",
  "code": [
    "fn set_start(&mut self, anchored: Anchored, start: Start, id: StateID) {",
    "    let start_index = start.as_usize();",
    "    let index = match anchored {",
    "        Anchored::No => start_index,",
    "        Anchored::Yes => self.stride + start_index,",
    "        Anchored::Pattern(pid) => {",
    "            let pid = pid.as_usize();",
    "            let len = self",
    "                .pattern_len",
    "                .expect(\"start states for each pattern enabled\");",
    "            assert!(pid < len, \"invalid pattern ID {:?}\", pid);",
    "            self.stride",
    "                .checked_mul(pid)",
    "                .unwrap()",
    "                .checked_add(self.stride.checked_mul(2).unwrap())",
    "                .unwrap()",
    "                .checked_add(start_index)",
    "                .unwrap()",
    "        }",
    "    };",
    "    let start = index * StateID::SIZE;",
    "    let end = start + StateID::SIZE;",
    "    wire::write_state_id::<wire::NE>(",
    "        id,",
    "        &mut self.table.as_mut()[start..end],",
    "    );",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "anchored matches Anchored::Pattern(pid)",
          "norm": null,
          "value": "true",
          "line": 2140,
          "bound": null
        },
        {
          "cond": "pid < len",
          "norm": "len > pid",
          "value": "true",
          "line": 2148,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        9,
        10,
        11,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "anchored matches Anchored::Pattern(pid)",
          "norm": null,
          "value": "true",
          "line": 2140,
          "bound": null
        },
        {
          "cond": "pid < len",
          "norm": "len > pid",
          "value": "false",
          "line": 2148,
          "bound": "pid == len"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        9,
        10,
        12,
        13,
        14,
        29
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "anchored matches Anchored::Yes",
          "norm": null,
          "value": "true",
          "line": 2140,
          "bound": null
        },
        {
          "cond": "anchored matches Anchored::Yes",
          "norm": null,
          "value": "true",
          "line": 2140,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        8,
        23,
        24,
        25,
        26,
        27,
        28
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "anchored matches Anchored::No",
          "norm": null,
          "value": "true",
          "line": 2140,
          "bound": null
        },
        {
          "cond": "anchored matches Anchored::No",
          "norm": null,
          "value": "true",
          "line": 2140,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        26,
        27,
        28
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}