{
  "name": "regex_automata::util::start::{impl#3}::as_u8",
  "mod_info": {
    "name": "util::start",
    "loc": "regex-automata/src/util/mod.rs:43:1:43:15"
  },
  "visible": true,
  "loc": "regex-automata/src/util/start.rs:394:5:398:6",
  "doc": "/// Return this starting configuration as `u8` integer. It is guaranteed to\n/// be less than `Start::len()`.\n",
  "code": [
    "pub(crate) fn as_u8(&self) -> u8 {",
    "    // AFAIK, 'as' is the only way to zero-cost convert an int enum to an",
    "    // actual int.",
    "    *self as u8",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "*self as u8",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}