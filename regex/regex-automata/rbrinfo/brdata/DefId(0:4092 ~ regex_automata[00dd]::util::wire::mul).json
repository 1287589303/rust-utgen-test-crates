{
  "name": "regex_automata::util::wire::mul",
  "mod_info": {
    "name": "util::wire",
    "loc": "regex-automata/src/util/mod.rs:46:1:46:14"
  },
  "visible": true,
  "loc": "regex-automata/src/util/wire.rs:801:1:810:2",
  "doc": "/// Multiply the given numbers, and on overflow, return an error that includes\n/// 'what' in the error message.\n///\n/// This is useful when doing arithmetic with untrusted data.\n",
  "code": [
    "pub(crate) fn mul(",
    "    a: usize,",
    "    b: usize,",
    "    what: &'static str,",
    ") -> Result<usize, DeserializeError> {",
    "    match a.checked_mul(b) {",
    "        Some(c) => Ok(c),",
    "        None => Err(DeserializeError::arithmetic_overflow(what)),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "a.checked_mul(b) matches Some(c)",
          "norm": null,
          "value": "true",
          "line": 806,
          "bound": null
        },
        {
          "cond": "a.checked_mul(b) matches Some(c)",
          "norm": null,
          "value": "true",
          "line": 806,
          "bound": null
        }
      ],
      "ret": "Ok(c)",
      "path": [
        0,
        1,
        3,
        5,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "a.checked_mul(b) matches None",
          "norm": null,
          "value": "true",
          "line": 806,
          "bound": null
        }
      ],
      "ret": "Err(DeserializeError::arithmetic_overflow(what))",
      "path": [
        0,
        1,
        4,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}