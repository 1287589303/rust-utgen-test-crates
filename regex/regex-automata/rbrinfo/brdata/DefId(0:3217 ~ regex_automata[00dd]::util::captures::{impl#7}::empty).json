{
  "name": "regex_automata::util::captures::{impl#7}::empty",
  "mod_info": {
    "name": "util::captures",
    "loc": "regex-automata/src/util/mod.rs:32:1:32:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/captures.rs:1633:5:1636:6",
  "doc": "/// This creates an empty `GroupInfo`.\n///\n/// This is a convenience routine for calling `GroupInfo::new` with an\n/// iterator that yields no elements.\n///\n/// # Example\n///\n/// This example shows how to build a new empty `GroupInfo` and query it\n/// for information.\n///\n/// ```\n/// use regex_automata::util::captures::GroupInfo;\n///\n/// let info = GroupInfo::empty();\n/// // Everything is zero.\n/// assert_eq!(0, info.pattern_len());\n/// assert_eq!(0, info.all_group_len());\n/// assert_eq!(0, info.slot_len());\n///\n/// # Ok::<(), Box<dyn std::error::Error>>(())\n/// ```\n",
  "code": [
    "pub fn empty() -> GroupInfo {",
    "    GroupInfo::new(core::iter::empty::<[Option<&str>; 0]>())",
    "        .expect(\"empty group info is always valid\")",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}