{
  "name": "regex_automata::nfa::thompson::literal_trie::{impl#0}::reverse",
  "mod_info": {
    "name": "nfa::thompson::literal_trie",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:63:1:63:18"
  },
  "visible": true,
  "loc": "regex-automata/src/nfa/thompson/literal_trie.rs:100:5:103:6",
  "doc": "/// Create a new literal trie that adds literals in reverse.\n",
  "code": [
    "pub(crate) fn reverse() -> LiteralTrie {",
    "    let root = State::default();",
    "    LiteralTrie { states: vec![root], rev: true }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "LiteralTrie { states: vec![root], rev: true }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}