{
  "name": "regex_automata::nfa::thompson::error::{impl#0}::size_limit",
  "mod_info": {
    "name": "nfa::thompson::error",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:61:1:61:11"
  },
  "visible": true,
  "loc": "regex-automata/src/nfa/thompson/error.rs:84:5:89:6",
  "doc": "/// If this error occurred because the NFA exceeded the configured size\n/// limit before being built, then this returns the configured size limit.\n///\n/// The limit returned is what was configured, and corresponds to the\n/// maximum amount of heap usage in bytes.\n",
  "code": [
    "pub fn size_limit(&self) -> Option<usize> {",
    "    match self.kind {",
    "        BuildErrorKind::ExceededSizeLimit { limit } => Some(limit),",
    "        _ => None,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.kind matches BuildErrorKind::ExceededSizeLimit { limit }",
          "norm": null,
          "value": "false",
          "line": 86,
          "bound": null
        },
        {
          "cond": "self.kind matches _",
          "norm": null,
          "value": "true",
          "line": 87,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.kind matches BuildErrorKind::ExceededSizeLimit { limit }",
          "norm": null,
          "value": "true",
          "line": 85,
          "bound": null
        },
        {
          "cond": "self.kind matches BuildErrorKind::ExceededSizeLimit { limit }",
          "norm": null,
          "value": "true",
          "line": 85,
          "bound": null
        }
      ],
      "ret": "Some(limit)",
      "path": [
        0,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}