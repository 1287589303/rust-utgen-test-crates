{
  "name": "regex_automata::util::determinize::state::{impl#8}::has_pattern_ids",
  "mod_info": {
    "name": "util::determinize::state",
    "loc": "regex-automata/src/util/determinize/mod.rs:57:1:57:11"
  },
  "visible": false,
  "loc": "regex-automata/src/util/determinize/state.rs:407:5:409:6",
  "doc": "/// Returns true if and only if this state has had at least one pattern\n/// ID added to it.\n///\n/// This is an internal-only flag that permits the representation to save\n/// space in the common case of an NFA with one pattern in it. In that\n/// case, a match state can only ever have exactly one pattern ID:\n/// PatternID::ZERO. So there's no need to represent it.\n",
  "code": [
    "fn has_pattern_ids(&self) -> bool {",
    "    self.0[0] & (1 << 1) > 0",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.0[0] & (1 << 1) > 0",
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}