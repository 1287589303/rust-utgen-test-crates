{
  "name": "regex_automata::dfa::regex::{impl#5}::pattern_len",
  "mod_info": {
    "name": "dfa::regex",
    "loc": "regex-automata/src/dfa/mod.rs:341:1:341:15"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/regex.rs:580:5:583:6",
  "doc": "/// Returns the total number of patterns matched by this regex.\n///\n/// # Example\n///\n/// ```\n/// # if cfg!(miri) { return Ok(()); } // miri takes too long\n/// use regex_automata::dfa::regex::Regex;\n///\n/// let re = Regex::new_many(&[r\"[a-z]+\", r\"[0-9]+\", r\"\\w+\"])?;\n/// assert_eq!(3, re.pattern_len());\n/// # Ok::<(), Box<dyn std::error::Error>>(())\n/// ```\n",
  "code": [
    "pub fn pattern_len(&self) -> usize {",
    "    assert_eq!(self.forward().pattern_len(), self.reverse().pattern_len());",
    "    self.forward().pattern_len()",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}