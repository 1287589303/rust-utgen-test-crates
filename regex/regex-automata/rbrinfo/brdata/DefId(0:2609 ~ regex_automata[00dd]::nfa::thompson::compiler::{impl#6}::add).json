{
  "name": "regex_automata::nfa::thompson::compiler::{impl#6}::add",
  "mod_info": {
    "name": "nfa::thompson::compiler",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:60:1:60:14"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/compiler.rs:1780:5:1794:6",
  "doc": "",
  "code": [
    "fn add(&mut self, ranges: &[Utf8Range]) -> Result<(), BuildError> {",
    "    let prefix_len = ranges",
    "        .iter()",
    "        .zip(&self.state.uncompiled)",
    "        .take_while(|&(range, node)| {",
    "            node.last.as_ref().map_or(false, |t| {",
    "                (t.start, t.end) == (range.start, range.end)",
    "            })",
    "        })",
    "        .count();",
    "    assert!(prefix_len < ranges.len());",
    "    self.compile_from(prefix_len)?;",
    "    self.add_suffix(&ranges[prefix_len..]);",
    "    Ok(())",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "prefix_len < ranges.len()",
          "norm": null,
          "value": "true",
          "line": 1790,
          "bound": null
        },
        {
          "cond": "self.compile_from(prefix_len)?",
          "norm": null,
          "value": "Err/None",
          "line": 1791,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        9,
        11,
        13,
        14,
        18,
        19,
        20
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "prefix_len < ranges.len()",
          "norm": null,
          "value": "true",
          "line": 1790,
          "bound": null
        },
        {
          "cond": "self.compile_from(prefix_len)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1791,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        9,
        12,
        15,
        16,
        17,
        20
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "prefix_len < ranges.len()",
          "norm": null,
          "value": "false",
          "line": 1790,
          "bound": "prefix_len == ranges.len()"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        25
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}