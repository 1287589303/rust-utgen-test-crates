{
  "name": "regex_automata::util::determinize::state::write_vari32",
  "mod_info": {
    "name": "util::determinize::state",
    "loc": "regex-automata/src/util/determinize/mod.rs:57:1:57:11"
  },
  "visible": false,
  "loc": "regex-automata/src/util/determinize/state.rs:735:1:741:2",
  "doc": "/// Write a signed 32-bit integer using zig-zag encoding.\n///\n/// https://developers.google.com/protocol-buffers/docs/encoding#varints\n",
  "code": [
    "fn write_vari32(data: &mut Vec<u8>, n: i32) {",
    "    let mut un = n.to_bits() << 1;",
    "    if n < 0 {",
    "        un = !un;",
    "    }",
    "    write_varu32(data, un)",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "n < 0",
          "norm": "0 > n",
          "value": "true",
          "line": 737,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "n < 0",
          "norm": "0 > n",
          "value": "false",
          "line": 737,
          "bound": "n == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}