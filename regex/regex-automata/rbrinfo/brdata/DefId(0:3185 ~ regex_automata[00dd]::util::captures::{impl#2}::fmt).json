{
  "name": "regex_automata::util::captures::{impl#2}::fmt",
  "mod_info": {
    "name": "util::captures",
    "loc": "regex-automata/src/util/mod.rs:32:1:32:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/captures.rs:1205:5:1212:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {",
    "    let mut dstruct = f.debug_struct(\"Captures\");",
    "    dstruct.field(\"pid\", &self.pid);",
    "    if let Some(pid) = self.pid {",
    "        dstruct.field(\"spans\", &CapturesDebugMap { pid, caps: self });",
    "    }",
    "    dstruct.finish()",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(pid) = self.pid",
          "norm": null,
          "value": "true",
          "line": 1208,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(pid) = self.pid",
          "norm": null,
          "value": "true",
          "line": 1208,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}