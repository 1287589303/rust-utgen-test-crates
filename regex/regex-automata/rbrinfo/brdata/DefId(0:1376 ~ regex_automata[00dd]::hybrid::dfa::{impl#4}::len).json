{
  "name": "regex_automata::hybrid::dfa::{impl#4}::len",
  "mod_info": {
    "name": "hybrid::dfa",
    "loc": "regex-automata/src/hybrid/mod.rs:140:1:140:13"
  },
  "visible": false,
  "loc": "regex-automata/src/hybrid/dfa.rs:2058:5:2064:6",
  "doc": "/// Returns the length, in bytes, of this search so far.\n///\n/// This automatically handles the case of a reverse search, where `at`\n/// is likely to be less than `start`.\n",
  "code": [
    "fn len(&self) -> usize {",
    "    if self.start <= self.at {",
    "        self.at - self.start",
    "    } else {",
    "        self.start - self.at",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.start <= self.at",
          "norm": "self.at >= self.start",
          "value": "true",
          "line": 2059,
          "bound": "self.start == self.at"
        }
      ],
      "ret": "self.at - self.start",
      "path": [
        0,
        1,
        2,
        5
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.start <= self.at",
          "norm": "self.at >= self.start",
          "value": "false",
          "line": 2059,
          "bound": null
        }
      ],
      "ret": "self.start - self.at",
      "path": [
        0,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}