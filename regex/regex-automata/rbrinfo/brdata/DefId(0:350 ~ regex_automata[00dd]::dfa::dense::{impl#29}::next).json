{
  "name": "regex_automata::dfa::dense::{impl#29}::next",
  "mod_info": {
    "name": "dfa::dense",
    "loc": "regex-automata/src/dfa/mod.rs:337:1:337:15"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/dense.rs:4882:5:4893:6",
  "doc": "",
  "code": [
    "fn next(&mut self) -> Option<(alphabet::Unit, StateID)> {",
    "    self.it.next().map(|(i, &id)| {",
    "        let unit = if i + 1 == self.len {",
    "            alphabet::Unit::eoi(i)",
    "        } else {",
    "            let b = u8::try_from(i)",
    "                .expect(\"raw byte alphabet is never exceeded\");",
    "            alphabet::Unit::u8(b)",
    "        };",
    "        (unit, id)",
    "    })",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}