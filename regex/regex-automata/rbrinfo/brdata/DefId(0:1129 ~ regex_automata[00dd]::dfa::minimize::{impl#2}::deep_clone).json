{
  "name": "regex_automata::dfa::minimize::{impl#2}::deep_clone",
  "mod_info": {
    "name": "dfa::minimize",
    "loc": "regex-automata/src/dfa/mod.rs:352:1:352:14"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/minimize.rs:375:5:378:6",
  "doc": "",
  "code": [
    "fn deep_clone(&self) -> StateSet {",
    "    let ids = self.ids.borrow().iter().cloned().collect();",
    "    StateSet { ids: Rc::new(RefCell::new(ids)) }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "StateSet { ids: Rc::new(RefCell::new(ids)) }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}