{
  "name": "regex_automata::hybrid::dfa::{impl#6}::state_builder_fits_in_cache",
  "mod_info": {
    "name": "hybrid::dfa",
    "loc": "regex-automata/src/hybrid/mod.rs:140:1:140:13"
  },
  "visible": false,
  "loc": "regex-automata/src/hybrid/dfa.rs:2773:5:2777:6",
  "doc": "/// Returns true if adding the state to be built by the given builder would\n/// fit in this cache.\n",
  "code": [
    "fn state_builder_fits_in_cache(&self, state: &StateBuilderNFA) -> bool {",
    "    let needed = self.cache.memory_usage()",
    "        + self.memory_usage_for_one_more_state(state.as_bytes().len());",
    "    needed <= self.dfa.cache_capacity",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "needed <= self.dfa.cache_capacity",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}