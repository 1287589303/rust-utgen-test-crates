{
  "name": "regex_automata::util::wire::read_u128",
  "mod_info": {
    "name": "util::wire",
    "loc": "regex-automata/src/util/mod.rs:46:1:46:14"
  },
  "visible": true,
  "loc": "regex-automata/src/util/wire.rs:778:1:781:2",
  "doc": "/// Read a u128 from the beginning of the given slice in native endian format.\n/// If the slice has fewer than 16 bytes, then this panics.\n",
  "code": [
    "pub(crate) fn read_u128(slice: &[u8]) -> u128 {",
    "    let bytes: [u8; 16] = slice[..size_of::<u128>()].try_into().unwrap();",
    "    u128::from_ne_bytes(bytes)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}