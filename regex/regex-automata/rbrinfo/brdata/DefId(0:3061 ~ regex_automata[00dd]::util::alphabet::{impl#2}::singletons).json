{
  "name": "regex_automata::util::alphabet::{impl#2}::singletons",
  "mod_info": {
    "name": "util::alphabet",
    "loc": "regex-automata/src/util/mod.rs:30:1:30:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/alphabet.rs:228:5:234:6",
  "doc": "/// Creates a new set of equivalence classes where each byte belongs to\n/// its own equivalence class.\n",
  "code": [
    "pub fn singletons() -> ByteClasses {",
    "    let mut classes = ByteClasses::empty();",
    "    for b in 0..=255 {",
    "        classes.set(b, b);",
    "    }",
    "    classes",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 1,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "b in 0..=255",
          "norm": null,
          "value": "true",
          "line": 230,
          "bound": null
        },
        {
          "cond": "b in 0..=255",
          "norm": null,
          "value": "false",
          "line": 230,
          "bound": null
        }
      ],
      "ret": "classes",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        4,
        5,
        6,
        8,
        10
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "b in 0..=255",
          "norm": null,
          "value": "false",
          "line": 230,
          "bound": null
        }
      ],
      "ret": "classes",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}