{
  "name": "regex_automata::util::search::{impl#0}::haystack",
  "mod_info": {
    "name": "util::search",
    "loc": "regex-automata/src/util/mod.rs:53:1:53:23"
  },
  "visible": true,
  "loc": "regex-automata/src/util/search.rs:593:5:595:6",
  "doc": "/// Return a borrow of the underlying haystack as a slice of bytes.\n///\n/// # Example\n///\n/// ```\n/// use regex_automata::Input;\n///\n/// let input = Input::new(\"foobar\");\n/// assert_eq!(b\"foobar\", input.haystack());\n/// ```\n",
  "code": [
    "pub fn haystack(&self) -> &[u8] {",
    "    self.haystack",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.haystack",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}