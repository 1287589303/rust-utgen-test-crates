{
  "name": "regex_automata::dfa::sparse::{impl#20}::set_next_at",
  "mod_info": {
    "name": "dfa::sparse",
    "loc": "regex-automata/src/dfa/mod.rs:343:1:343:16"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/sparse.rs:2464:5:2468:6",
  "doc": "/// Sets the ith transition to the given state.\n",
  "code": [
    "fn set_next_at(&mut self, i: usize, next: StateID) {",
    "    let start = i * StateID::SIZE;",
    "    let end = start + StateID::SIZE;",
    "    wire::write_state_id::<wire::NE>(next, &mut self.next[start..end]);",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}