{
  "name": "regex_automata::util::alphabet::{impl#2}::from_bytes",
  "mod_info": {
    "name": "util::alphabet",
    "loc": "regex-automata/src/util/mod.rs:30:1:30:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/alphabet.rs:241:5:260:6",
  "doc": "/// Deserializes a byte class map from the given slice. If the slice is of\n/// insufficient length or otherwise contains an impossible mapping, then\n/// an error is returned. Upon success, the number of bytes read along with\n/// the map are returned. The number of bytes read is always a multiple of\n/// 8.\n",
  "code": [
    "pub(crate) fn from_bytes(",
    "    slice: &[u8],",
    ") -> Result<(ByteClasses, usize), DeserializeError> {",
    "    wire::check_slice_len(slice, 256, \"byte class map\")?;",
    "    let mut classes = ByteClasses::empty();",
    "    for (b, &class) in slice[..256].iter().enumerate() {",
    "        classes.set(u8::try_from(b).unwrap(), class);",
    "    }",
    "    // We specifically don't use 'classes.iter()' here because that",
    "    // iterator depends on 'classes.alphabet_len()' being correct. But that",
    "    // is precisely the thing we're trying to verify below!",
    "    for &b in classes.0.iter() {",
    "        if usize::from(b) >= classes.alphabet_len() {",
    "            return Err(DeserializeError::generic(",
    "                \"found equivalence class greater than alphabet len\",",
    "            ));",
    "        }",
    "    }",
    "    Ok((classes, 256))",
    "}"
  ],
  "size": {
    "chain": 7,
    "contra": 4,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 256, \"byte class map\")?",
          "norm": null,
          "value": "Err/None",
          "line": 244,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        37
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 256, \"byte class map\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 244,
          "bound": null
        },
        {
          "cond": "(b, &class) in slice[..256].iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "(b, &class) in slice[..256].iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "&b in classes.0.iter()",
          "norm": null,
          "value": "true",
          "line": 252,
          "bound": null
        },
        {
          "cond": "usize::from(b) >= classes.alphabet_len()",
          "norm": "classes.alphabet_len() <= usize::from(b)",
          "value": "true",
          "line": 253,
          "bound": "usize::from(b) == classes.alphabet_len()"
        }
      ],
      "ret": "Err(DeserializeError::generic(\n                    \"found equivalence class greater than alphabet len\",\n                ))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        22,
        13,
        14,
        15,
        17,
        19,
        23,
        24,
        25,
        26,
        27,
        30,
        32,
        33,
        34,
        35,
        37
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 256, \"byte class map\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 244,
          "bound": null
        },
        {
          "cond": "(b, &class) in slice[..256].iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "(b, &class) in slice[..256].iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "&b in classes.0.iter()",
          "norm": null,
          "value": "true",
          "line": 252,
          "bound": null
        },
        {
          "cond": "usize::from(b) >= classes.alphabet_len()",
          "norm": "classes.alphabet_len() <= usize::from(b)",
          "value": "false",
          "line": 253,
          "bound": null
        },
        {
          "cond": "&b in classes.0.iter()",
          "norm": null,
          "value": "false",
          "line": 252,
          "bound": null
        }
      ],
      "ret": "Ok((classes, 256))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        22,
        13,
        14,
        15,
        17,
        19,
        23,
        24,
        25,
        26,
        27,
        30,
        32,
        33,
        36,
        25,
        26,
        27,
        29,
        31,
        37
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 256, \"byte class map\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 244,
          "bound": null
        },
        {
          "cond": "(b, &class) in slice[..256].iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "(b, &class) in slice[..256].iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "&b in classes.0.iter()",
          "norm": null,
          "value": "false",
          "line": 252,
          "bound": null
        }
      ],
      "ret": "Ok((classes, 256))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        22,
        13,
        14,
        15,
        17,
        19,
        23,
        24,
        25,
        26,
        27,
        29,
        31,
        37
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 256, \"byte class map\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 244,
          "bound": null
        },
        {
          "cond": "(b, &class) in slice[..256].iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "&b in classes.0.iter()",
          "norm": null,
          "value": "true",
          "line": 252,
          "bound": null
        },
        {
          "cond": "usize::from(b) >= classes.alphabet_len()",
          "norm": "classes.alphabet_len() <= usize::from(b)",
          "value": "true",
          "line": 253,
          "bound": "usize::from(b) == classes.alphabet_len()"
        }
      ],
      "ret": "Err(DeserializeError::generic(\n                    \"found equivalence class greater than alphabet len\",\n                ))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        23,
        24,
        25,
        26,
        27,
        30,
        32,
        33,
        34,
        35,
        37
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 256, \"byte class map\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 244,
          "bound": null
        },
        {
          "cond": "(b, &class) in slice[..256].iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "&b in classes.0.iter()",
          "norm": null,
          "value": "true",
          "line": 252,
          "bound": null
        },
        {
          "cond": "usize::from(b) >= classes.alphabet_len()",
          "norm": "classes.alphabet_len() <= usize::from(b)",
          "value": "false",
          "line": 253,
          "bound": null
        },
        {
          "cond": "&b in classes.0.iter()",
          "norm": null,
          "value": "false",
          "line": 252,
          "bound": null
        }
      ],
      "ret": "Ok((classes, 256))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        23,
        24,
        25,
        26,
        27,
        30,
        32,
        33,
        36,
        25,
        26,
        27,
        29,
        31,
        37
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 256, \"byte class map\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 244,
          "bound": null
        },
        {
          "cond": "(b, &class) in slice[..256].iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "&b in classes.0.iter()",
          "norm": null,
          "value": "false",
          "line": 252,
          "bound": null
        }
      ],
      "ret": "Ok((classes, 256))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        23,
        24,
        25,
        26,
        27,
        29,
        31,
        37
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}