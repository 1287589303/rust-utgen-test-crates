{
  "name": "regex_automata::dfa::dense::{impl#6}::stride2",
  "mod_info": {
    "name": "dfa::dense",
    "loc": "regex-automata/src/dfa/mod.rs:337:1:337:15"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/dense.rs:1705:5:1707:6",
  "doc": "/// Returns the total stride for every state in this DFA, expressed as the\n/// exponent of a power of 2. The stride is the amount of space each state\n/// takes up in the transition table, expressed as a number of transitions.\n/// (Unused transitions map to dead states.)\n///\n/// The stride of a DFA is always equivalent to the smallest power of 2\n/// that is greater than or equal to the DFA's alphabet length. This\n/// definition uses extra space, but permits faster translation between\n/// premultiplied state identifiers and contiguous indices (by using shifts\n/// instead of relying on integer division).\n///\n/// For example, if the DFA's stride is 16 transitions, then its `stride2`\n/// is `4` since `2^4 = 16`.\n///\n/// The minimum `stride2` value is `1` (corresponding to a stride of `2`)\n/// while the maximum `stride2` value is `9` (corresponding to a stride of\n/// `512`). The maximum is not `8` since the maximum alphabet size is `257`\n/// when accounting for the special EOI transition. However, an alphabet\n/// length of that size is exceptionally rare since the alphabet is shrunk\n/// into equivalence classes.\n",
  "code": [
    "pub fn stride2(&self) -> usize {",
    "    self.tt.stride2",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.tt.stride2",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}