{
  "name": "regex_automata::hybrid::dfa::{impl#6}::memory_usage_for_one_more_state",
  "mod_info": {
    "name": "hybrid::dfa",
    "loc": "regex-automata/src/hybrid/mod.rs:140:1:140:13"
  },
  "visible": false,
  "loc": "regex-automata/src/hybrid/dfa.rs:2782:5:2793:6",
  "doc": "/// Returns the additional memory usage, in bytes, required to add one more\n/// state to this cache. The given size should be the heap size, in bytes,\n/// that would be used by the new state being added.\n",
  "code": [
    "fn memory_usage_for_one_more_state(",
    "    &self,",
    "    state_heap_size: usize,",
    ") -> usize {",
    "    const ID_SIZE: usize = size_of::<LazyStateID>();",
    "    const STATE_SIZE: usize = size_of::<State>();",
    "",
    "    self.dfa.stride() * ID_SIZE // additional space needed in trans table",
    "    + STATE_SIZE // space in cache.states",
    "    + (STATE_SIZE + ID_SIZE) // space in cache.states_to_id",
    "    + state_heap_size // heap memory used by state itself",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.dfa.stride() * ID_SIZE // additional space needed in trans table\n        + STATE_SIZE // space in cache.states\n        + (STATE_SIZE + ID_SIZE) // space in cache.states_to_id\n        + state_heap_size",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}