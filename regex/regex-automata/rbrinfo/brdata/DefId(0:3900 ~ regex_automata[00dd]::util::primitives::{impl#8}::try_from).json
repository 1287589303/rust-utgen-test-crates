{
  "name": "regex_automata::util::primitives::{impl#8}::try_from",
  "mod_info": {
    "name": "util::primitives",
    "loc": "regex-automata/src/util/mod.rs:42:1:42:20"
  },
  "visible": true,
  "loc": "regex-automata/src/util/primitives.rs:315:5:320:6",
  "doc": "",
  "code": [
    "fn try_from(index: u16) -> Result<SmallIndex, SmallIndexError> {",
    "    if u32::from(index) > SmallIndex::MAX.as_u32() {",
    "        return Err(SmallIndexError { attempted: u64::from(index) });",
    "    }",
    "    Ok(SmallIndex::new_unchecked(index.as_usize()))",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "u32::from(index) > SmallIndex::MAX.as_u32()",
          "norm": "SmallIndex::MAX.as_u32() < u32::from(index)",
          "value": "true",
          "line": 316,
          "bound": null
        }
      ],
      "ret": "Err(SmallIndexError { attempted: u64::from(index) })",
      "path": [
        0,
        1,
        2,
        3,
        4,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "u32::from(index) > SmallIndex::MAX.as_u32()",
          "norm": "SmallIndex::MAX.as_u32() < u32::from(index)",
          "value": "false",
          "line": 316,
          "bound": "u32::from(index) == SmallIndex::MAX.as_u32()"
        }
      ],
      "ret": "Ok(SmallIndex::new_unchecked(index.as_usize()))",
      "path": [
        0,
        1,
        2,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}