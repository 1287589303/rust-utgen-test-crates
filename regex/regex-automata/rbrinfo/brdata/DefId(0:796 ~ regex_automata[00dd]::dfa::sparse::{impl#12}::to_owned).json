{
  "name": "regex_automata::dfa::sparse::{impl#12}::to_owned",
  "mod_info": {
    "name": "dfa::sparse",
    "loc": "regex-automata/src/dfa/mod.rs:343:1:343:16"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/sparse.rs:2052:5:2062:6",
  "doc": "/// Converts this start list to an owned value.\n",
  "code": [
    "fn to_owned(&self) -> StartTable<alloc::vec::Vec<u8>> {",
    "    StartTable {",
    "        table: self.table().to_vec(),",
    "        kind: self.kind,",
    "        start_map: self.start_map.clone(),",
    "        stride: self.stride,",
    "        pattern_len: self.pattern_len,",
    "        universal_start_unanchored: self.universal_start_unanchored,",
    "        universal_start_anchored: self.universal_start_anchored,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "StartTable {\n            table: self.table().to_vec(),\n            kind: self.kind,\n            start_map: self.start_map.clone(),\n            stride: self.stride,\n            pattern_len: self.pattern_len,\n            universal_start_unanchored: self.universal_start_unanchored,\n            universal_start_anchored: self.universal_start_anchored,\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}