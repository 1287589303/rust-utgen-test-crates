{
  "name": "regex_automata::util::wire::read_pattern_id",
  "mod_info": {
    "name": "util::wire",
    "loc": "regex-automata/src/util/mod.rs:46:1:46:14"
  },
  "visible": true,
  "loc": "regex-automata/src/util/wire.rs:581:1:590:2",
  "doc": "/// Reads a pattern ID from the given slice. If the slice has insufficient\n/// length, then this panics. If the deserialized integer exceeds the pattern\n/// ID limit for the current target, then this returns an error.\n///\n/// Upon success, this also returns the number of bytes read.\n",
  "code": [
    "pub(crate) fn read_pattern_id(",
    "    slice: &[u8],",
    "    what: &'static str,",
    ") -> Result<(PatternID, usize), DeserializeError> {",
    "    let bytes: [u8; PatternID::SIZE] =",
    "        slice[..PatternID::SIZE].try_into().unwrap();",
    "    let pid = PatternID::from_ne_bytes(bytes)",
    "        .map_err(|err| DeserializeError::pattern_id_error(err, what))?;",
    "    Ok((pid, PatternID::SIZE))",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "PatternID::from_ne_bytes(bytes)\n        .map_err(|err| DeserializeError::pattern_id_error(err, what))?",
          "norm": null,
          "value": "Err/None",
          "line": 587,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "PatternID::from_ne_bytes(bytes)\n        .map_err(|err| DeserializeError::pattern_id_error(err, what))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 587,
          "bound": null
        }
      ],
      "ret": "Ok((pid, PatternID::SIZE))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}