{
  "name": "regex_automata::hybrid::dfa::{impl#5}::set_transition",
  "mod_info": {
    "name": "hybrid::dfa",
    "loc": "regex-automata/src/hybrid/mod.rs:140:1:140:13"
  },
  "visible": false,
  "loc": "regex-automata/src/hybrid/dfa.rs:2595:5:2606:6",
  "doc": "/// Set the transition on 'from' for 'unit' to 'to'.\n///\n/// This panics if either 'from' or 'to' is invalid.\n///\n/// All unit values are OK.\n",
  "code": [
    "fn set_transition(",
    "    &mut self,",
    "    from: LazyStateID,",
    "    unit: alphabet::Unit,",
    "    to: LazyStateID,",
    ") {",
    "    assert!(self.as_ref().is_valid(from), \"invalid 'from' id: {:?}\", from);",
    "    assert!(self.as_ref().is_valid(to), \"invalid 'to' id: {:?}\", to);",
    "    let offset =",
    "        from.as_usize_untagged() + self.dfa.classes.get_by_unit(unit);",
    "    self.cache.trans[offset] = to;",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.as_ref().is_valid(from)",
          "norm": null,
          "value": "true",
          "line": 2601,
          "bound": null
        },
        {
          "cond": "self.as_ref().is_valid(to)",
          "norm": null,
          "value": "true",
          "line": 2602,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        7,
        8,
        9,
        13,
        14,
        15,
        16
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.as_ref().is_valid(from)",
          "norm": null,
          "value": "true",
          "line": 2601,
          "bound": null
        },
        {
          "cond": "self.as_ref().is_valid(to)",
          "norm": null,
          "value": "false",
          "line": 2602,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        7,
        8,
        10,
        11,
        12,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.as_ref().is_valid(from)",
          "norm": null,
          "value": "false",
          "line": 2601,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        17
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}