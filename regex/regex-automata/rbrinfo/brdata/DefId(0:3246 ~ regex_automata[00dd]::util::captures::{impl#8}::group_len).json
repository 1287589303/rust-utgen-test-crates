{
  "name": "regex_automata::util::captures::{impl#8}::group_len",
  "mod_info": {
    "name": "util::captures",
    "loc": "regex-automata/src/util/mod.rs:32:1:32:18"
  },
  "visible": false,
  "loc": "regex-automata/src/util/captures.rs:2302:5:2312:6",
  "doc": "/// Return the total number of capturing groups for the given pattern. If\n/// the given pattern isn't valid for this capture slot info, then 0 is\n/// returned.\n",
  "code": [
    "fn group_len(&self, pid: PatternID) -> usize {",
    "    let (start, end) = match self.slot_ranges.get(pid.as_usize()) {",
    "        None => return 0,",
    "        Some(range) => range,",
    "    };",
    "    // The difference between any two SmallIndex values always fits in a",
    "    // usize since we know that SmallIndex::MAX <= isize::MAX-1. We also",
    "    // know that start<=end by construction and that the number of groups",
    "    // never exceeds SmallIndex and thus never overflows usize.",
    "    1 + ((end.as_usize() - start.as_usize()) / 2)",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.slot_ranges.get(pid.as_usize()) matches Some(range)",
          "norm": null,
          "value": "true",
          "line": 2303,
          "bound": null
        }
      ],
      "ret": "1 + ((end.as_usize() - start.as_usize()) / 2)",
      "path": [
        0,
        1,
        2,
        3,
        6,
        8,
        9,
        10,
        11,
        12,
        13
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.slot_ranges.get(pid.as_usize()) matches None",
          "norm": null,
          "value": "true",
          "line": 2303,
          "bound": null
        },
        {
          "cond": "self.slot_ranges.get(pid.as_usize()) matches None",
          "norm": null,
          "value": "true",
          "line": 2303,
          "bound": null
        }
      ],
      "ret": "0",
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        13
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}