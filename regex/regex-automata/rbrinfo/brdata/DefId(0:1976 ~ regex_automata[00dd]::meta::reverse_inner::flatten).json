{
  "name": "regex_automata::meta::reverse_inner::flatten",
  "mod_info": {
    "name": "meta::reverse_inner",
    "loc": "regex-automata/src/meta/mod.rs:58:1:58:19"
  },
  "visible": false,
  "loc": "regex-automata/src/meta/reverse_inner.rs:203:1:220:2",
  "doc": "/// Returns a copy of the given HIR but with all capturing groups removed.\n",
  "code": [
    "fn flatten(hir: &Hir) -> Hir {",
    "    match hir.kind() {",
    "        HirKind::Empty => Hir::empty(),",
    "        HirKind::Literal(hir::Literal(ref x)) => Hir::literal(x.clone()),",
    "        HirKind::Class(ref x) => Hir::class(x.clone()),",
    "        HirKind::Look(ref x) => Hir::look(x.clone()),",
    "        HirKind::Repetition(ref x) => Hir::repetition(x.with(flatten(&x.sub))),",
    "        // This is the interesting case. We just drop the group information",
    "        // entirely and use the child HIR itself.",
    "        HirKind::Capture(hir::Capture { ref sub, .. }) => flatten(sub),",
    "        HirKind::Alternation(ref xs) => {",
    "            Hir::alternation(xs.iter().map(|x| flatten(x)).collect())",
    "        }",
    "        HirKind::Concat(ref xs) => {",
    "            Hir::concat(xs.iter().map(|x| flatten(x)).collect())",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 8,
    "contra": 0,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "hir.kind() matches HirKind::Alternation(ref xs)",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        },
        {
          "cond": "hir.kind() matches HirKind::Alternation(ref xs)",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        27,
        28,
        29,
        30,
        31,
        32,
        38
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "hir.kind() matches HirKind::Concat(ref xs)",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        10,
        33,
        34,
        35,
        36,
        37,
        38
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "hir.kind() matches HirKind::Capture(hir::Capture { ref sub, .. })",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        },
        {
          "cond": "hir.kind() matches HirKind::Capture(hir::Capture { ref sub, .. })",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        8,
        25,
        26,
        38
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "hir.kind() matches HirKind::Repetition(ref x)",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        },
        {
          "cond": "hir.kind() matches HirKind::Repetition(ref x)",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        7,
        21,
        22,
        23,
        24,
        38
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "hir.kind() matches HirKind::Look(ref x)",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        },
        {
          "cond": "hir.kind() matches HirKind::Look(ref x)",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        18,
        19,
        20,
        38
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "hir.kind() matches HirKind::Class(ref x)",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        },
        {
          "cond": "hir.kind() matches HirKind::Class(ref x)",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        15,
        16,
        17,
        38
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "hir.kind() matches HirKind::Literal(hir::Literal(ref x))",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        },
        {
          "cond": "hir.kind() matches HirKind::Literal(hir::Literal(ref x))",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        12,
        13,
        14,
        38
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        },
        {
          "cond": "hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 204,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        11,
        38
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}