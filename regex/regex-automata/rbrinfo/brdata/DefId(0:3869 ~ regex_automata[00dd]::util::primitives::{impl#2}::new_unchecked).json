{
  "name": "regex_automata::util::primitives::{impl#2}::new_unchecked",
  "mod_info": {
    "name": "util::primitives",
    "loc": "regex-automata/src/util/mod.rs:42:1:42:20"
  },
  "visible": true,
  "loc": "regex-automata/src/util/primitives.rs:187:5:190:6",
  "doc": "/// Create a new small index without checking whether the given value\n/// exceeds [`SmallIndex::MAX`].\n///\n/// Using this routine with an invalid index value will result in\n/// unspecified behavior, but *not* undefined behavior. In particular, an\n/// invalid index value is likely to cause panics or possibly even silent\n/// logical errors.\n///\n/// Callers must never rely on a `SmallIndex` to be within a certain range\n/// for memory safety.\n",
  "code": [
    "pub const fn new_unchecked(index: usize) -> SmallIndex {",
    "    // FIXME: Use as_u32() once const functions in traits are stable.",
    "    SmallIndex(index as u32)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "SmallIndex(index as u32)",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}