{
  "name": "regex_automata::hybrid::id::{impl#0}::new_unchecked",
  "mod_info": {
    "name": "hybrid::id",
    "loc": "regex-automata/src/hybrid/mod.rs:142:1:142:8"
  },
  "visible": false,
  "loc": "regex-automata/src/hybrid/id.rs:204:5:207:6",
  "doc": "/// Create a new lazy state ID without checking whether the given value\n/// exceeds [`LazyStateID::MAX`].\n///\n/// While this is unchecked, providing an incorrect value must never\n/// sacrifice memory safety.\n",
  "code": [
    "const fn new_unchecked(id: usize) -> LazyStateID {",
    "    // FIXME: Use as_u32() once const functions in traits are stable.",
    "    LazyStateID(id as u32)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "LazyStateID(id as u32)",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}