{
  "name": "regex_automata::dfa::dense::{impl#9}::set_pattern_map",
  "mod_info": {
    "name": "dfa::dense",
    "loc": "regex-automata/src/dfa/mod.rs:337:1:337:15"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/dense.rs:2570:5:2576:6",
  "doc": "/// Updates the match state pattern ID map to use the one provided.\n///\n/// This is useful when it's convenient to manipulate matching states\n/// (and their corresponding pattern IDs) as a map. In particular, the\n/// representation used by a DFA for this map is not amenable to mutation,\n/// so if things need to be changed (like when shuffling states), it's\n/// often easier to work with the map form.\n",
  "code": [
    "pub(crate) fn set_pattern_map(",
    "    &mut self,",
    "    map: &BTreeMap<StateID, Vec<PatternID>>,",
    ") -> Result<(), BuildError> {",
    "    self.ms = self.ms.new_with_map(map)?;",
    "    Ok(())",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.ms.new_with_map(map)?",
          "norm": null,
          "value": "Err/None",
          "line": 2574,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.ms.new_with_map(map)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2574,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        15
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}