{
  "name": "regex_automata::util::determinize::state::read_vari32",
  "mod_info": {
    "name": "util::determinize::state",
    "loc": "regex-automata/src/util/determinize/mod.rs:57:1:57:11"
  },
  "visible": false,
  "loc": "regex-automata/src/util/determinize/state.rs:747:1:754:2",
  "doc": "/// Read a signed 32-bit integer using zig-zag encoding. Also, return the\n/// number of bytes read.\n///\n/// https://developers.google.com/protocol-buffers/docs/encoding#varints\n",
  "code": [
    "fn read_vari32(data: &[u8]) -> (i32, usize) {",
    "    let (un, i) = read_varu32(data);",
    "    let mut n = i32::from_bits(un >> 1);",
    "    if un & 1 != 0 {",
    "        n = !n;",
    "    }",
    "    (n, i)",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "un & 1 != 0",
          "norm": "0 != un & 1",
          "value": "true",
          "line": 750,
          "bound": null
        }
      ],
      "ret": "(n, i)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "un & 1 != 0",
          "norm": "0 != un & 1",
          "value": "false",
          "line": 750,
          "bound": null
        }
      ],
      "ret": "(n, i)",
      "path": [
        0,
        1,
        2,
        3,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}