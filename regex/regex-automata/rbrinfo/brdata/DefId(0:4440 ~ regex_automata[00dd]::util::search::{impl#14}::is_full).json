{
  "name": "regex_automata::util::search::{impl#14}::is_full",
  "mod_info": {
    "name": "util::search",
    "loc": "regex-automata/src/util/mod.rs:53:1:53:23"
  },
  "visible": true,
  "loc": "regex-automata/src/util/search.rs:1297:5:1299:6",
  "doc": "/// Return true if and only if this set has the maximum number of pattern\n/// identifiers in the set. This occurs precisely when `PatternSet::len()\n/// == PatternSet::capacity()`.\n///\n/// This particular property is useful to test because it may allow one to\n/// stop a search earlier than you might otherwise. Namely, if a search is\n/// only reporting which patterns match a haystack and if you know all of\n/// the patterns match at a given point, then there's no new information\n/// that can be learned by continuing the search. (Because a pattern set\n/// does not keep track of offset information.)\n",
  "code": [
    "pub fn is_full(&self) -> bool {",
    "    self.len() == self.capacity()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.len() == self.capacity()",
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}