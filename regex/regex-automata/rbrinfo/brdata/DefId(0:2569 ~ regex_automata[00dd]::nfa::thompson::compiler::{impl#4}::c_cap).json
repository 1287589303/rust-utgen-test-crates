{
  "name": "regex_automata::nfa::thompson::compiler::{impl#4}::c_cap",
  "mod_info": {
    "name": "nfa::thompson::compiler",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:60:1:60:14"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/compiler.rs:1119:5:1140:6",
  "doc": "/// Compile the given capture sub-expression. `expr` should be the\n/// sub-expression contained inside the capture. If \"capture\" states are\n/// enabled, then they are added as appropriate.\n///\n/// This accepts the pieces of a capture instead of a `hir::Capture` so\n/// that it's easy to manufacture a \"fake\" group when necessary, e.g., for\n/// adding the entire pattern as if it were a group in order to create\n/// appropriate \"capture\" states in the NFA.\n",
  "code": [
    "fn c_cap(",
    "    &self,",
    "    index: u32,",
    "    name: Option<&str>,",
    "    expr: &Hir,",
    ") -> Result<ThompsonRef, BuildError> {",
    "    match self.config.get_which_captures() {",
    "        // No capture states means we always skip them.",
    "        WhichCaptures::None => return self.c(expr),",
    "        // Implicit captures states means we only add when index==0 since",
    "        // index==0 implies the group is implicit.",
    "        WhichCaptures::Implicit if index > 0 => return self.c(expr),",
    "        _ => {}",
    "    }",
    "",
    "    let start = self.add_capture_start(index, name)?;",
    "    let inner = self.c(expr)?;",
    "    let end = self.add_capture_end(index)?;",
    "    self.patch(start, inner.start)?;",
    "    self.patch(inner.end, end)?;",
    "    Ok(ThompsonRef { start, end })",
    "}"
  ],
  "size": {
    "chain": 14,
    "contra": 0,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "false",
          "line": 1130,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches _",
          "norm": null,
          "value": "true",
          "line": 1131,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::None",
          "norm": null,
          "value": "false",
          "line": 1127,
          "bound": null
        },
        {
          "cond": "self.add_capture_start(index, name)?",
          "norm": null,
          "value": "Err/None",
          "line": 1134,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        11,
        12,
        14,
        16,
        17,
        61,
        62,
        63,
        65
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "false",
          "line": 1130,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches _",
          "norm": null,
          "value": "true",
          "line": 1131,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::None",
          "norm": null,
          "value": "false",
          "line": 1127,
          "bound": null
        },
        {
          "cond": "self.add_capture_start(index, name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1134,
          "bound": null
        },
        {
          "cond": "self.c(expr)?",
          "norm": null,
          "value": "Err/None",
          "line": 1135,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        11,
        12,
        15,
        18,
        19,
        20,
        22,
        24,
        25,
        58,
        59,
        60,
        63,
        65
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "false",
          "line": 1130,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches _",
          "norm": null,
          "value": "true",
          "line": 1131,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::None",
          "norm": null,
          "value": "false",
          "line": 1127,
          "bound": null
        },
        {
          "cond": "self.add_capture_start(index, name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1134,
          "bound": null
        },
        {
          "cond": "self.c(expr)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1135,
          "bound": null
        },
        {
          "cond": "self.add_capture_end(index)?",
          "norm": null,
          "value": "Err/None",
          "line": 1136,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        11,
        12,
        15,
        18,
        19,
        20,
        23,
        26,
        27,
        28,
        30,
        32,
        33,
        55,
        56,
        57,
        60,
        63,
        65
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "false",
          "line": 1130,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches _",
          "norm": null,
          "value": "true",
          "line": 1131,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::None",
          "norm": null,
          "value": "false",
          "line": 1127,
          "bound": null
        },
        {
          "cond": "self.add_capture_start(index, name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1134,
          "bound": null
        },
        {
          "cond": "self.c(expr)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1135,
          "bound": null
        },
        {
          "cond": "self.add_capture_end(index)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1136,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Err/None",
          "line": 1137,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        11,
        12,
        15,
        18,
        19,
        20,
        23,
        26,
        27,
        28,
        31,
        34,
        35,
        36,
        38,
        40,
        41,
        53,
        54,
        57,
        60,
        63,
        65
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "false",
          "line": 1130,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches _",
          "norm": null,
          "value": "true",
          "line": 1131,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::None",
          "norm": null,
          "value": "false",
          "line": 1127,
          "bound": null
        },
        {
          "cond": "self.add_capture_start(index, name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1134,
          "bound": null
        },
        {
          "cond": "self.c(expr)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1135,
          "bound": null
        },
        {
          "cond": "self.add_capture_end(index)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1136,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1137,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Err/None",
          "line": 1138,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        11,
        12,
        15,
        18,
        19,
        20,
        23,
        26,
        27,
        28,
        31,
        34,
        35,
        36,
        39,
        42,
        43,
        44,
        46,
        48,
        49,
        51,
        52,
        57,
        60,
        63,
        65
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "false",
          "line": 1130,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches _",
          "norm": null,
          "value": "true",
          "line": 1131,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::None",
          "norm": null,
          "value": "false",
          "line": 1127,
          "bound": null
        },
        {
          "cond": "self.add_capture_start(index, name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1134,
          "bound": null
        },
        {
          "cond": "self.c(expr)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1135,
          "bound": null
        },
        {
          "cond": "self.add_capture_end(index)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1136,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1137,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1138,
          "bound": null
        }
      ],
      "ret": "Ok(ThompsonRef { start, end })",
      "path": [
        0,
        1,
        2,
        11,
        12,
        15,
        18,
        19,
        20,
        23,
        26,
        27,
        28,
        31,
        34,
        35,
        36,
        39,
        42,
        43,
        44,
        47,
        50,
        65
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::None",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::None",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        6,
        64,
        65
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "index > 0",
          "norm": "0 < index",
          "value": "true",
          "line": 1130,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        8,
        10,
        64,
        65
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "index > 0",
          "norm": "0 < index",
          "value": "false",
          "line": 1130,
          "bound": "index == 0"
        },
        {
          "cond": "self.add_capture_start(index, name)?",
          "norm": null,
          "value": "Err/None",
          "line": 1134,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        9,
        2,
        11,
        12,
        14,
        16,
        17,
        61,
        62,
        63,
        65
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "index > 0",
          "norm": "0 < index",
          "value": "false",
          "line": 1130,
          "bound": "index == 0"
        },
        {
          "cond": "self.add_capture_start(index, name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1134,
          "bound": null
        },
        {
          "cond": "self.c(expr)?",
          "norm": null,
          "value": "Err/None",
          "line": 1135,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        9,
        2,
        11,
        12,
        15,
        18,
        19,
        20,
        22,
        24,
        25,
        58,
        59,
        60,
        63,
        65
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "index > 0",
          "norm": "0 < index",
          "value": "false",
          "line": 1130,
          "bound": "index == 0"
        },
        {
          "cond": "self.add_capture_start(index, name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1134,
          "bound": null
        },
        {
          "cond": "self.c(expr)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1135,
          "bound": null
        },
        {
          "cond": "self.add_capture_end(index)?",
          "norm": null,
          "value": "Err/None",
          "line": 1136,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        9,
        2,
        11,
        12,
        15,
        18,
        19,
        20,
        23,
        26,
        27,
        28,
        30,
        32,
        33,
        55,
        56,
        57,
        60,
        63,
        65
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "index > 0",
          "norm": "0 < index",
          "value": "false",
          "line": 1130,
          "bound": "index == 0"
        },
        {
          "cond": "self.add_capture_start(index, name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1134,
          "bound": null
        },
        {
          "cond": "self.c(expr)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1135,
          "bound": null
        },
        {
          "cond": "self.add_capture_end(index)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1136,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Err/None",
          "line": 1137,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        9,
        2,
        11,
        12,
        15,
        18,
        19,
        20,
        23,
        26,
        27,
        28,
        31,
        34,
        35,
        36,
        38,
        40,
        41,
        53,
        54,
        57,
        60,
        63,
        65
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "index > 0",
          "norm": "0 < index",
          "value": "false",
          "line": 1130,
          "bound": "index == 0"
        },
        {
          "cond": "self.add_capture_start(index, name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1134,
          "bound": null
        },
        {
          "cond": "self.c(expr)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1135,
          "bound": null
        },
        {
          "cond": "self.add_capture_end(index)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1136,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1137,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Err/None",
          "line": 1138,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        9,
        2,
        11,
        12,
        15,
        18,
        19,
        20,
        23,
        26,
        27,
        28,
        31,
        34,
        35,
        36,
        39,
        42,
        43,
        44,
        46,
        48,
        49,
        51,
        52,
        57,
        60,
        63,
        65
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "self.config.get_which_captures() matches WhichCaptures::Implicit",
          "norm": null,
          "value": "true",
          "line": 1125,
          "bound": null
        },
        {
          "cond": "index > 0",
          "norm": "0 < index",
          "value": "false",
          "line": 1130,
          "bound": "index == 0"
        },
        {
          "cond": "self.add_capture_start(index, name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1134,
          "bound": null
        },
        {
          "cond": "self.c(expr)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1135,
          "bound": null
        },
        {
          "cond": "self.add_capture_end(index)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1136,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1137,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1138,
          "bound": null
        }
      ],
      "ret": "Ok(ThompsonRef { start, end })",
      "path": [
        0,
        1,
        4,
        7,
        9,
        2,
        11,
        12,
        15,
        18,
        19,
        20,
        23,
        26,
        27,
        28,
        31,
        34,
        35,
        36,
        39,
        42,
        43,
        44,
        47,
        50,
        65
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}