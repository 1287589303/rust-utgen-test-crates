{
  "name": "regex_automata::dfa::dense::{impl#17}::dead",
  "mod_info": {
    "name": "dfa::dense",
    "loc": "regex-automata/src/dfa/mod.rs:337:1:337:15"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/dense.rs:3902:5:3936:6",
  "doc": "/// Create a valid set of start states all pointing to the dead state.\n///\n/// When the corresponding DFA is constructed with start states for each\n/// pattern, then `patterns` should be the number of patterns. Otherwise,\n/// it should be zero.\n///\n/// If the total table size could exceed the allocatable limit, then this\n/// returns an error. In practice, this is unlikely to be able to occur,\n/// since it's likely that allocation would have failed long before it got\n/// to this point.\n",
  "code": [
    "fn dead(",
    "    kind: StartKind,",
    "    lookm: &LookMatcher,",
    "    pattern_len: Option<usize>,",
    ") -> Result<StartTable<Vec<u32>>, BuildError> {",
    "    if let Some(len) = pattern_len {",
    "        assert!(len <= PatternID::LIMIT);",
    "    }",
    "    let stride = Start::len();",
    "    // OK because 2*4 is never going to overflow anything.",
    "    let starts_len = stride.checked_mul(2).unwrap();",
    "    let pattern_starts_len =",
    "        match stride.checked_mul(pattern_len.unwrap_or(0)) {",
    "            Some(x) => x,",
    "            None => return Err(BuildError::too_many_start_states()),",
    "        };",
    "    let table_len = match starts_len.checked_add(pattern_starts_len) {",
    "        Some(x) => x,",
    "        None => return Err(BuildError::too_many_start_states()),",
    "    };",
    "    if let Err(_) = isize::try_from(table_len) {",
    "        return Err(BuildError::too_many_start_states());",
    "    }",
    "    let table = vec![DEAD.as_u32(); table_len];",
    "    let start_map = StartByteMap::new(lookm);",
    "    Ok(StartTable {",
    "        table,",
    "        kind,",
    "        start_map,",
    "        stride,",
    "        pattern_len,",
    "        universal_start_unanchored: None,",
    "        universal_start_anchored: None,",
    "    })",
    "}"
  ],
  "size": {
    "chain": 9,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(len) = pattern_len",
          "norm": null,
          "value": "true",
          "line": 3907,
          "bound": null
        },
        {
          "cond": "stride.checked_mul(pattern_len.unwrap_or(0)) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3914,
          "bound": null
        },
        {
          "cond": "stride.checked_mul(pattern_len.unwrap_or(0)) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3914,
          "bound": null
        },
        {
          "cond": "starts_len.checked_add(pattern_starts_len) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3918,
          "bound": null
        },
        {
          "cond": "starts_len.checked_add(pattern_starts_len) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3918,
          "bound": null
        },
        {
          "cond": "let Err(_) = isize::try_from(table_len)",
          "norm": null,
          "value": "true",
          "line": 3922,
          "bound": null
        }
      ],
      "ret": "Ok(StartTable {\n            table,\n            kind,\n            start_map,\n            stride,\n            pattern_len,\n            universal_start_unanchored: None,\n            universal_start_anchored: None,\n        })",
      "path": [
        0,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        13,
        15,
        18,
        20,
        22,
        25,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(len) = pattern_len",
          "norm": null,
          "value": "true",
          "line": 3907,
          "bound": null
        },
        {
          "cond": "stride.checked_mul(pattern_len.unwrap_or(0)) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3914,
          "bound": null
        },
        {
          "cond": "stride.checked_mul(pattern_len.unwrap_or(0)) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3914,
          "bound": null
        },
        {
          "cond": "starts_len.checked_add(pattern_starts_len) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3918,
          "bound": null
        },
        {
          "cond": "starts_len.checked_add(pattern_starts_len) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3918,
          "bound": null
        },
        {
          "cond": "let Err(_) = isize::try_from(table_len)",
          "norm": null,
          "value": "true",
          "line": 3922,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::too_many_start_states())",
      "path": [
        0,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        13,
        15,
        18,
        20,
        22,
        25,
        26,
        27,
        28,
        29,
        37,
        38,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let Some(len) = pattern_len",
          "norm": null,
          "value": "true",
          "line": 3907,
          "bound": null
        },
        {
          "cond": "stride.checked_mul(pattern_len.unwrap_or(0)) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3914,
          "bound": null
        },
        {
          "cond": "stride.checked_mul(pattern_len.unwrap_or(0)) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3914,
          "bound": null
        },
        {
          "cond": "starts_len.checked_add(pattern_starts_len) matches None",
          "norm": null,
          "value": "true",
          "line": 3918,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::too_many_start_states())",
      "path": [
        0,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        13,
        15,
        18,
        21,
        23,
        24,
        37,
        38,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "let Some(len) = pattern_len",
          "norm": null,
          "value": "true",
          "line": 3907,
          "bound": null
        },
        {
          "cond": "stride.checked_mul(pattern_len.unwrap_or(0)) matches None",
          "norm": null,
          "value": "true",
          "line": 3914,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::too_many_start_states())",
      "path": [
        0,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        14,
        16,
        17,
        38,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "let Some(len) = pattern_len",
          "norm": null,
          "value": "true",
          "line": 3907,
          "bound": null
        },
        {
          "cond": "len <= PatternID::LIMIT",
          "norm": "PatternID::LIMIT >= len",
          "value": "true",
          "line": 3908,
          "bound": "len == PatternID::LIMIT"
        },
        {
          "cond": "stride.checked_mul(pattern_len.unwrap_or(0)) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3914,
          "bound": null
        },
        {
          "cond": "stride.checked_mul(pattern_len.unwrap_or(0)) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3914,
          "bound": null
        },
        {
          "cond": "starts_len.checked_add(pattern_starts_len) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3918,
          "bound": null
        },
        {
          "cond": "starts_len.checked_add(pattern_starts_len) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3918,
          "bound": null
        },
        {
          "cond": "let Err(_) = isize::try_from(table_len)",
          "norm": null,
          "value": "true",
          "line": 3922,
          "bound": null
        }
      ],
      "ret": "Ok(StartTable {\n            table,\n            kind,\n            start_map,\n            stride,\n            pattern_len,\n            universal_start_unanchored: None,\n            universal_start_anchored: None,\n        })",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        9,
        10,
        11,
        13,
        15,
        18,
        20,
        22,
        25,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "let Some(len) = pattern_len",
          "norm": null,
          "value": "true",
          "line": 3907,
          "bound": null
        },
        {
          "cond": "len <= PatternID::LIMIT",
          "norm": "PatternID::LIMIT >= len",
          "value": "true",
          "line": 3908,
          "bound": "len == PatternID::LIMIT"
        },
        {
          "cond": "stride.checked_mul(pattern_len.unwrap_or(0)) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3914,
          "bound": null
        },
        {
          "cond": "stride.checked_mul(pattern_len.unwrap_or(0)) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3914,
          "bound": null
        },
        {
          "cond": "starts_len.checked_add(pattern_starts_len) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3918,
          "bound": null
        },
        {
          "cond": "starts_len.checked_add(pattern_starts_len) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3918,
          "bound": null
        },
        {
          "cond": "let Err(_) = isize::try_from(table_len)",
          "norm": null,
          "value": "true",
          "line": 3922,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::too_many_start_states())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        9,
        10,
        11,
        13,
        15,
        18,
        20,
        22,
        25,
        26,
        27,
        28,
        29,
        37,
        38,
        39
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "let Some(len) = pattern_len",
          "norm": null,
          "value": "true",
          "line": 3907,
          "bound": null
        },
        {
          "cond": "len <= PatternID::LIMIT",
          "norm": "PatternID::LIMIT >= len",
          "value": "true",
          "line": 3908,
          "bound": "len == PatternID::LIMIT"
        },
        {
          "cond": "stride.checked_mul(pattern_len.unwrap_or(0)) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3914,
          "bound": null
        },
        {
          "cond": "stride.checked_mul(pattern_len.unwrap_or(0)) matches Some(x)",
          "norm": null,
          "value": "true",
          "line": 3914,
          "bound": null
        },
        {
          "cond": "starts_len.checked_add(pattern_starts_len) matches None",
          "norm": null,
          "value": "true",
          "line": 3918,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::too_many_start_states())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        9,
        10,
        11,
        13,
        15,
        18,
        21,
        23,
        24,
        37,
        38,
        39
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "let Some(len) = pattern_len",
          "norm": null,
          "value": "true",
          "line": 3907,
          "bound": null
        },
        {
          "cond": "len <= PatternID::LIMIT",
          "norm": "PatternID::LIMIT >= len",
          "value": "true",
          "line": 3908,
          "bound": "len == PatternID::LIMIT"
        },
        {
          "cond": "stride.checked_mul(pattern_len.unwrap_or(0)) matches None",
          "norm": null,
          "value": "true",
          "line": 3914,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::too_many_start_states())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        9,
        10,
        11,
        14,
        16,
        17,
        38,
        39
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "let Some(len) = pattern_len",
          "norm": null,
          "value": "true",
          "line": 3907,
          "bound": null
        },
        {
          "cond": "len <= PatternID::LIMIT",
          "norm": "PatternID::LIMIT >= len",
          "value": "false",
          "line": 3908,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        42
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}