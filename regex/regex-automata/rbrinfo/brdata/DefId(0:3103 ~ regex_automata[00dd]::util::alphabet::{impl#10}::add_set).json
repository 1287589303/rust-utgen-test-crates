{
  "name": "regex_automata::util::alphabet::{impl#10}::add_set",
  "mod_info": {
    "name": "util::alphabet",
    "loc": "regex-automata/src/util/mod.rs:30:1:30:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/alphabet.rs:713:5:717:6",
  "doc": "/// Add the contiguous ranges in the set given to this byte class set.\n",
  "code": [
    "pub(crate) fn add_set(&mut self, set: &ByteSet) {",
    "    for (start, end) in set.iter_ranges() {",
    "        self.set_range(start, end);",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 1,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(start, end) in set.iter_ranges()",
          "norm": null,
          "value": "true",
          "line": 714,
          "bound": null
        },
        {
          "cond": "(start, end) in set.iter_ranges()",
          "norm": null,
          "value": "false",
          "line": 714,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        10,
        3,
        4,
        5,
        7,
        9
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(start, end) in set.iter_ranges()",
          "norm": null,
          "value": "false",
          "line": 714,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}