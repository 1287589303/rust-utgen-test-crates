{
  "name": "regex_automata::hybrid::search::find_rev_imp",
  "mod_info": {
    "name": "hybrid::search",
    "loc": "regex-automata/src/hybrid/mod.rs:144:1:144:12"
  },
  "visible": false,
  "loc": "regex-automata/src/hybrid/search.rs:312:1:440:2",
  "doc": "",
  "code": [
    "fn find_rev_imp(",
    "    dfa: &DFA,",
    "    cache: &mut Cache,",
    "    input: &Input<'_>,",
    "    earliest: bool,",
    ") -> Result<Option<HalfMatch>, MatchError> {",
    "    let mut mat = None;",
    "    let mut sid = init_rev(dfa, cache, input)?;",
    "    // In reverse search, the loop below can't handle the case of searching an",
    "    // empty slice. Ideally we could write something congruent to the forward",
    "    // search, i.e., 'while at >= start', but 'start' might be 0. Since we use",
    "    // an unsigned offset, 'at >= 0' is trivially always true. We could avoid",
    "    // this extra case handling by using a signed offset, but Rust makes it",
    "    // annoying to do. So... We just handle the empty case separately.",
    "    if input.start() == input.end() {",
    "        eoi_rev(dfa, cache, input, &mut sid, &mut mat)?;",
    "        return Ok(mat);",
    "    }",
    "",
    "    let mut at = input.end() - 1;",
    "    macro_rules! next_unchecked {",
    "        ($sid:expr, $at:expr) => {{",
    "            let byte = *input.haystack().get_unchecked($at);",
    "            dfa.next_state_untagged_unchecked(cache, $sid, byte)",
    "        }};",
    "    }",
    "    cache.search_start(at);",
    "    loop {",
    "        if sid.is_tagged() {",
    "            cache.search_update(at);",
    "            sid = dfa",
    "                .next_state(cache, sid, input.haystack()[at])",
    "                .map_err(|_| gave_up(at))?;",
    "        } else {",
    "            // SAFETY: See comments in 'find_fwd' for a safety argument.",
    "            //",
    "            // PERF: The comments in 'find_fwd' also provide a justification",
    "            // from a performance perspective as to 1) why we elide bounds",
    "            // checks and 2) why we do a specialized version of unrolling",
    "            // below. The reverse search does have a slightly different",
    "            // consideration in that most reverse searches tend to be",
    "            // anchored and on shorter haystacks. However, this still makes a",
    "            // difference. Take this command for example:",
    "            //",
    "            //     regex-cli find match hybrid -p '(?m)^.+$' -UBb bigfile",
    "            //",
    "            // (Notice that we use 'find hybrid regex', not 'find hybrid dfa'",
    "            // like in the justification for the forward direction. The 'regex'",
    "            // sub-command will find start-of-match and thus run the reverse",
    "            // direction.)",
    "            //",
    "            // Without unrolling below, the above command takes around 3.76s.",
    "            // But with the unrolling below, we get down to 2.55s. If we keep",
    "            // the unrolling but add in bounds checks, then we get 2.86s.",
    "            //",
    "            // NOTE: I used 'OpenSubtitles2018.raw.sample.en' for 'bigfile'.",
    "            let mut prev_sid = sid;",
    "            while at >= input.start() {",
    "                prev_sid = unsafe { next_unchecked!(sid, at) };",
    "                if prev_sid.is_tagged()",
    "                    || at <= input.start().saturating_add(3)",
    "                {",
    "                    core::mem::swap(&mut prev_sid, &mut sid);",
    "                    break;",
    "                }",
    "                at -= 1;",
    "",
    "                sid = unsafe { next_unchecked!(prev_sid, at) };",
    "                if sid.is_tagged() {",
    "                    break;",
    "                }",
    "                at -= 1;",
    "",
    "                prev_sid = unsafe { next_unchecked!(sid, at) };",
    "                if prev_sid.is_tagged() {",
    "                    core::mem::swap(&mut prev_sid, &mut sid);",
    "                    break;",
    "                }",
    "                at -= 1;",
    "",
    "                sid = unsafe { next_unchecked!(prev_sid, at) };",
    "                if sid.is_tagged() {",
    "                    break;",
    "                }",
    "                at -= 1;",
    "            }",
    "            // If we quit out of the code above with an unknown state ID at",
    "            // any point, then we need to re-compute that transition using",
    "            // 'next_state', which will do NFA powerset construction for us.",
    "            if sid.is_unknown() {",
    "                cache.search_update(at);",
    "                sid = dfa",
    "                    .next_state(cache, prev_sid, input.haystack()[at])",
    "                    .map_err(|_| gave_up(at))?;",
    "            }",
    "        }",
    "        if sid.is_tagged() {",
    "            if sid.is_start() {",
    "                // do nothing",
    "            } else if sid.is_match() {",
    "                let pattern = dfa.match_pattern(cache, sid, 0);",
    "                // Since reverse searches report the beginning of a match",
    "                // and the beginning is inclusive (not exclusive like the",
    "                // end of a match), we add 1 to make it inclusive.",
    "                mat = Some(HalfMatch::new(pattern, at + 1));",
    "                if earliest {",
    "                    cache.search_finish(at);",
    "                    return Ok(mat);",
    "                }",
    "            } else if sid.is_dead() {",
    "                cache.search_finish(at);",
    "                return Ok(mat);",
    "            } else if sid.is_quit() {",
    "                cache.search_finish(at);",
    "                return Err(MatchError::quit(input.haystack()[at], at));",
    "            } else {",
    "                debug_assert!(sid.is_unknown());",
    "                unreachable!(\"sid being unknown is a bug\");",
    "            }",
    "        }",
    "        if at == input.start() {",
    "            break;",
    "        }",
    "        at -= 1;",
    "    }",
    "    cache.search_finish(input.start());",
    "    eoi_rev(dfa, cache, input, &mut sid, &mut mat)?;",
    "    Ok(mat)",
    "}"
  ],
  "size": {
    "chain": 603,
    "contra": 450,
    "min_set": 14
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Err/None",
          "line": 319,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        164,
        165,
        166,
        167
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 326,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 327,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        17,
        18,
        161,
        162,
        163,
        166,
        167
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 326,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 327,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        16,
        19,
        163,
        166,
        167
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 30,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 31,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 32,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 33,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 34,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 35,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 36,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 37,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 38,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 39,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 40,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 41,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 42,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 43,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 44,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 45,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 46,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 47,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 48,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 49,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 50,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 51,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 52,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 53,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 54,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 55,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 56,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 57,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 58,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 59,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 60,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 61,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 62,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 63,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 64,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 65,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 66,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 67,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 68,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 69,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 70,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 71,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 72,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 73,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 74,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 75,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 76,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 77,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 78,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 79,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 80,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 81,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 82,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 83,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 84,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 85,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 86,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 87,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 88,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 89,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 90,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 91,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 92,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 93,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 94,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 95,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 96,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 97,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 98,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 99,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 100,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 101,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 102,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 103,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 104,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 105,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 106,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 107,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 108,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 109,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 110,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 111,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 112,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 113,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 114,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 115,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 116,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 117,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 118,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 119,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 120,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 121,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 122,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 123,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 124,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 125,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 126,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 127,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 128,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 129,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 130,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 131,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 132,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 133,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 134,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 135,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 136,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 137,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 138,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 139,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 140,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 141,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 142,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 143,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 144,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 145,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 146,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 147,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 148,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 149,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 150,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 151,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 152,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 153,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 154,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 155,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 156,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 157,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 158,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 159,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 160,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 161,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 162,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 163,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 164,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 165,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 166,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 167,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 168,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 169,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 170,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 171,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 172,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 173,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 174,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 175,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 176,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 177,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 178,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 179,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 180,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 181,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 182,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 183,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 184,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 185,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 186,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 187,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 188,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 189,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 190,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 191,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 192,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 193,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 194,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 195,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 196,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 197,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 198,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 199,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 200,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 201,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 202,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 203,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 204,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 205,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 206,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 207,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 208,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 209,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 210,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 211,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 212,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 213,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 214,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 215,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 216,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 217,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 218,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 219,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 220,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 221,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 222,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 223,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 224,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 225,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 226,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 227,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 228,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 229,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 230,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 231,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 232,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 233,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 234,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 235,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 236,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 237,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 238,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 239,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 240,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 241,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 242,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 243,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 244,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 245,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 246,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 247,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 248,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 249,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 250,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 251,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 252,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 253,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 254,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 255,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 256,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 257,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 258,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 259,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 260,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 261,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 262,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 263,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 264,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 265,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 266,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 267,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 268,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 269,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 270,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 271,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 272,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 273,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 274,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 275,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 276,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 277,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 278,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 279,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 280,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 281,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 282,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 283,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 284,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 285,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 286,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 287,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 288,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 289,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 290,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 291,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 292,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 293,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 294,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 295,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 296,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 297,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 298,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 299,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 300,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 301,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 302,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 303,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 304,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 305,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 306,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 307,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 308,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 309,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 310,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 311,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 312,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 313,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 314,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 315,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 316,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 317,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 318,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 319,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 320,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 321,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 322,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 323,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 324,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 325,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 326,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 327,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 328,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "true",
          "line": 372,
          "bound": "at == input.start().saturating_add(3)"
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        53,
        54,
        55,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 329,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 330,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 331,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 332,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 333,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 334,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 335,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 336,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 337,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 338,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 339,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 340,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 341,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 342,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 343,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 344,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 345,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 346,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 347,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 348,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 349,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 350,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 351,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 352,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 353,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 354,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 355,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 356,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 357,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 358,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 359,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 360,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 361,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 362,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 363,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 364,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 365,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 366,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 367,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 368,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 369,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 370,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 371,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 372,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 373,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 374,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 375,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 376,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 377,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 378,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 379,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 380,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 381,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 382,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 383,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 380,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 384,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 385,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 386,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 387,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 388,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 389,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 390,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 391,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 392,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 393,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 394,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 395,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 396,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 397,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 398,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 399,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 400,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 401,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 402,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 403,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 404,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 405,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 406,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 407,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 408,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 409,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 410,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 411,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 412,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 413,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 414,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 415,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 416,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 417,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 418,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 419,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 420,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 421,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 422,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 423,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 424,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 425,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 426,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 427,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 428,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 429,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 430,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 431,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 432,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 433,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 434,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 435,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 436,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 437,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 438,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 439,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 440,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 441,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 442,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 443,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 444,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 445,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 446,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 447,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 448,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 449,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 450,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 451,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 452,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 453,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 454,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 455,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 456,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 457,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 458,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 459,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 460,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 461,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 462,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 463,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 464,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 465,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 466,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 467,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 468,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 469,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 470,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 471,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 472,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 473,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 474,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 475,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 476,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 477,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 478,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 479,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 480,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 481,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 482,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 483,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 484,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 485,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 486,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 487,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 488,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 489,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 490,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 491,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 492,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 493,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 393,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 494,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 495,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 496,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 497,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 498,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 499,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 500,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 501,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 502,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 503,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 504,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 505,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 506,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 507,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 508,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 509,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 510,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 511,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 512,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 513,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 514,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 515,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 516,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 517,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 518,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 519,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 520,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 521,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 522,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 523,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 524,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 525,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 526,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 527,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 528,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 529,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 530,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 531,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 532,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 533,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 534,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 535,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 536,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 537,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 538,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 539,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 540,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 541,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 542,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 543,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 544,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 545,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 546,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 547,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 548,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": "at == input.start()"
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        },
        {
          "cond": "at <= input.start().saturating_add(3)",
          "norm": null,
          "value": "false",
          "line": 372,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 380,
          "bound": null
        },
        {
          "cond": "prev_sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 386,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 393,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        50,
        51,
        52,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        65,
        66,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        78,
        79,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 549,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        91,
        93,
        94,
        154,
        155,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 550,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 551,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 552,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 553,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 554,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 555,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 556,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 557,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 558,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 559,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 560,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 561,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 562,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 563,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 564,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 565,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 566,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 567,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 568,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 569,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 570,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 571,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 572,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 573,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 574,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 575,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 576,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        },
        {
          "cond": "dfa\n                    .next_state(cache, prev_sid, input.haystack()[at])\n                    .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 403,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        92,
        95,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 577,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 578,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 579,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 580,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 581,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 582,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 583,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 584,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 585,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 586,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 587,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 588,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 589,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 590,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 591,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 592,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 593,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 594,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Err/None",
          "line": 342,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        35,
        37,
        38,
        156,
        157,
        158,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 595,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 596,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 409,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        102,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 597,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "true",
          "line": 417,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 598,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Err/None",
          "line": 438,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        145,
        147,
        148,
        150,
        151,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 599,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "earliest",
          "norm": null,
          "value": "false",
          "line": 417,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "true",
          "line": 432,
          "bound": null
        },
        {
          "cond": "eoi_rev(dfa, cache, input, &mut sid, &mut mat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 438,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        111,
        133,
        135,
        136,
        137,
        140,
        141,
        142,
        143,
        146,
        149,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 600,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 421,
          "bound": null
        }
      ],
      "ret": "Ok(mat)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        114,
        115,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 601,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 424,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(input.haystack()[at], at))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        152,
        153,
        159,
        160,
        166,
        167
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 602,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        127,
        130,
        131,
        132,
        188
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 603,
      "conds": [
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 319,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 326,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "at >= input.start()",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 401,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 408,
          "bound": null
        },
        {
          "cond": "at == input.start()",
          "norm": null,
          "value": "false",
          "line": 432,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 340,
          "bound": null
        },
        {
          "cond": "dfa\n                .next_state(cache, sid, input.haystack()[at])\n                .map_err(|_| gave_up(at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 342,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 409,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 421,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 424,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        40,
        41,
        42,
        43,
        80,
        81,
        82,
        96,
        97,
        98,
        99,
        134,
        135,
        136,
        138,
        139,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        36,
        39,
        98,
        99,
        100,
        101,
        103,
        104,
        112,
        113,
        116,
        117,
        124,
        125,
        126,
        128,
        188
      ],
      "may_contra": true,
      "min_set": false
    }
  ]
}