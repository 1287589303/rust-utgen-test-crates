{
  "name": "regex_automata::util::alphabet::{impl#2}::alphabet_len",
  "mod_info": {
    "name": "util::alphabet",
    "loc": "regex-automata/src/util/mod.rs:30:1:30:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/alphabet.rs:321:5:326:6",
  "doc": "/// Return the total number of elements in the alphabet represented by\n/// these equivalence classes. Equivalently, this returns the total number\n/// of equivalence classes.\n",
  "code": [
    "pub fn alphabet_len(&self) -> usize {",
    "    // Add one since the number of equivalence classes is one bigger than",
    "    // the last one. But add another to account for the final EOI class",
    "    // that isn't explicitly represented.",
    "    usize::from(self.0[255]) + 1 + 1",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "usize::from(self.0[255]) + 1 + 1",
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}