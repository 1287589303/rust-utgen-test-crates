{
  "name": "regex_automata::util::prefilter::prefixes",
  "mod_info": {
    "name": "util::prefilter",
    "loc": "regex-automata/src/util/mod.rs:41:1:41:19"
  },
  "visible": true,
  "loc": "regex-automata/src/util/prefilter/mod.rs:649:1:682:2",
  "doc": "/// Extracts all of the prefix literals from the given HIR expressions into a\n/// single `Seq`. The literals in the sequence are ordered with respect to the\n/// order of the given HIR expressions and consistent with the match semantics\n/// given.\n///\n/// The sequence returned is \"optimized.\" That is, they may be shrunk or even\n/// truncated according to heuristics with the intent of making them more\n/// useful as a prefilter. (Which translates to both using faster algorithms\n/// and minimizing the false positive rate.)\n///\n/// Note that this erases any connection between the literals and which pattern\n/// (or patterns) they came from.\n///\n/// The match kind given must correspond to the match semantics of the regex\n/// that is represented by the HIRs given. The match semantics may change the\n/// literal sequence returned.\n",
  "code": [
    "pub(crate) fn prefixes<H>(kind: MatchKind, hirs: &[H]) -> literal::Seq",
    "where",
    "    H: core::borrow::Borrow<Hir>,",
    "{",
    "    let mut extractor = literal::Extractor::new();",
    "    extractor.kind(literal::ExtractKind::Prefix);",
    "",
    "    let mut prefixes = literal::Seq::empty();",
    "    for hir in hirs {",
    "        prefixes.union(&mut extractor.extract(hir.borrow()));",
    "    }",
    "    debug!(",
    "        \"prefixes (len={:?}, exact={:?}) extracted before optimization: {:?}\",",
    "        prefixes.len(),",
    "        prefixes.is_exact(),",
    "        prefixes",
    "    );",
    "    match kind {",
    "        MatchKind::All => {",
    "            prefixes.sort();",
    "            prefixes.dedup();",
    "        }",
    "        MatchKind::LeftmostFirst => {",
    "            prefixes.optimize_for_prefix_by_preference();",
    "        }",
    "    }",
    "    debug!(",
    "        \"prefixes (len={:?}, exact={:?}) extracted after optimization: {:?}\",",
    "        prefixes.len(),",
    "        prefixes.is_exact(),",
    "        prefixes",
    "    );",
    "    prefixes",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 2,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "hir in hirs",
          "norm": null,
          "value": "true",
          "line": 657,
          "bound": null
        },
        {
          "cond": "hir in hirs",
          "norm": null,
          "value": "false",
          "line": 657,
          "bound": null
        },
        {
          "cond": "kind matches MatchKind::LeftmostFirst",
          "norm": null,
          "value": "true",
          "line": 666,
          "bound": null
        }
      ],
      "ret": "prefixes",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        13,
        14,
        15,
        5,
        6,
        7,
        9,
        11,
        18,
        22,
        23,
        24
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "hir in hirs",
          "norm": null,
          "value": "true",
          "line": 657,
          "bound": null
        },
        {
          "cond": "hir in hirs",
          "norm": null,
          "value": "false",
          "line": 657,
          "bound": null
        },
        {
          "cond": "kind matches MatchKind::All",
          "norm": null,
          "value": "true",
          "line": 666,
          "bound": null
        },
        {
          "cond": "kind matches MatchKind::All",
          "norm": null,
          "value": "true",
          "line": 666,
          "bound": null
        }
      ],
      "ret": "prefixes",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        13,
        14,
        15,
        5,
        6,
        7,
        9,
        11,
        17,
        19,
        20,
        21,
        23,
        24
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "hir in hirs",
          "norm": null,
          "value": "false",
          "line": 657,
          "bound": null
        },
        {
          "cond": "kind matches MatchKind::LeftmostFirst",
          "norm": null,
          "value": "true",
          "line": 666,
          "bound": null
        }
      ],
      "ret": "prefixes",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        11,
        18,
        22,
        23,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "hir in hirs",
          "norm": null,
          "value": "false",
          "line": 657,
          "bound": null
        },
        {
          "cond": "kind matches MatchKind::All",
          "norm": null,
          "value": "true",
          "line": 666,
          "bound": null
        },
        {
          "cond": "kind matches MatchKind::All",
          "norm": null,
          "value": "true",
          "line": 666,
          "bound": null
        }
      ],
      "ret": "prefixes",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        11,
        17,
        19,
        20,
        21,
        23,
        24
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}