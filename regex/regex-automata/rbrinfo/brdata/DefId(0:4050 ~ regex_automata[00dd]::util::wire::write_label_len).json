{
  "name": "regex_automata::util::wire::write_label_len",
  "mod_info": {
    "name": "util::wire",
    "loc": "regex-automata/src/util/mod.rs:46:1:46:14"
  },
  "visible": true,
  "loc": "regex-automata/src/util/wire.rs:480:1:489:2",
  "doc": "/// Returns the total number of bytes (including padding) that would be written\n/// for the given label. This panics if the given label contains a NUL byte or\n/// is longer than 255 bytes. (The size restriction exists so that searching\n/// for a label during deserialization can be done in small bounded space.)\n",
  "code": [
    "pub(crate) fn write_label_len(label: &str) -> usize {",
    "    if label.len() > 255 {",
    "        panic!(\"label must not be longer than 255 bytes\");",
    "    }",
    "    if label.as_bytes().iter().position(|&b| b == 0).is_some() {",
    "        panic!(\"label must not contain NUL bytes\");",
    "    }",
    "    let label_len = label.len() + 1; // +1 for the NUL terminator",
    "    label_len + padding_len(label_len)",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "label.len() > 255",
          "norm": "255 < label.len()",
          "value": "true",
          "line": 481,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        16
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "label.len() > 255",
          "norm": "255 < label.len()",
          "value": "false",
          "line": 481,
          "bound": "label.len() == 255"
        },
        {
          "cond": "label.as_bytes().iter().position(|&b| b == 0).is_some()",
          "norm": null,
          "value": "true",
          "line": 484,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        16
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "label.len() > 255",
          "norm": "255 < label.len()",
          "value": "false",
          "line": 481,
          "bound": "label.len() == 255"
        },
        {
          "cond": "label.as_bytes().iter().position(|&b| b == 0).is_some()",
          "norm": null,
          "value": "false",
          "line": 484,
          "bound": null
        }
      ],
      "ret": "label_len + padding_len(label_len)",
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        11,
        12,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}