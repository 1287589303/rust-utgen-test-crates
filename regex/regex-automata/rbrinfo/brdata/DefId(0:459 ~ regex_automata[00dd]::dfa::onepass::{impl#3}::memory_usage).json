{
  "name": "regex_automata::dfa::onepass::{impl#3}::memory_usage",
  "mod_info": {
    "name": "dfa::onepass",
    "loc": "regex-automata/src/dfa/mod.rs:339:1:339:17"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/onepass.rs:1534:5:1539:6",
  "doc": "/// Returns the memory usage, in bytes, of this DFA.\n///\n/// The memory usage is computed based on the number of bytes used to\n/// represent this DFA.\n///\n/// This does **not** include the stack size used up by this DFA. To\n/// compute that, use `std::mem::size_of::<onepass::DFA>()`.\n",
  "code": [
    "pub fn memory_usage(&self) -> usize {",
    "    use core::mem::size_of;",
    "",
    "    self.table.len() * size_of::<Transition>()",
    "        + self.starts.len() * size_of::<StateID>()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.table.len() * size_of::<Transition>()\n            + self.starts.len() * size_of::<StateID>()",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}