{
  "name": "regex_automata::dfa::onepass::{impl#3}::alphabet_len",
  "mod_info": {
    "name": "dfa::onepass",
    "loc": "regex-automata/src/dfa/mod.rs:339:1:339:17"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/onepass.rs:1477:5:1479:6",
  "doc": "/// Returns the total number of elements in the alphabet for this DFA.\n///\n/// That is, this returns the total number of transitions that each\n/// state in this DFA must have. The maximum alphabet size is 256, which\n/// corresponds to each possible byte value.\n///\n/// The alphabet size may be less than 256 though, and unless\n/// [`Config::byte_classes`] is disabled, it is typically must less than\n/// 256. Namely, bytes are grouped into equivalence classes such that no\n/// two bytes in the same class can distinguish a match from a non-match.\n/// For example, in the regex `^[a-z]+$`, the ASCII bytes `a-z` could\n/// all be in the same equivalence class. This leads to a massive space\n/// savings.\n///\n/// Note though that the alphabet length does _not_ necessarily equal the\n/// total stride space taken up by a single DFA state in the transition\n/// table. Namely, for performance reasons, the stride is always the\n/// smallest power of two that is greater than or equal to the alphabet\n/// length. For this reason, [`DFA::stride`] or [`DFA::stride2`] are\n/// often more useful. The alphabet length is typically useful only for\n/// informational purposes.\n///\n/// Note also that unlike dense or sparse DFAs, a one-pass DFA does\n/// not have a special end-of-input (EOI) transition. This is because\n/// a one-pass DFA handles look-around assertions explicitly (like the\n/// [`PikeVM`](crate::nfa::thompson::pikevm::PikeVM)) and does not build\n/// them into the transitions of the DFA.\n",
  "code": [
    "pub fn alphabet_len(&self) -> usize {",
    "    self.alphabet_len",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.alphabet_len",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}