{
  "name": "regex_automata::util::prefilter::memchr::{impl#4}::new",
  "mod_info": {
    "name": "util::prefilter::memchr",
    "loc": "regex-automata/src/util/prefilter/mod.rs:38:1:38:12"
  },
  "visible": true,
  "loc": "regex-automata/src/util/prefilter/memchr.rs:130:5:151:6",
  "doc": "",
  "code": [
    "pub(crate) fn new<B: AsRef<[u8]>>(",
    "    _kind: MatchKind,",
    "    needles: &[B],",
    ") -> Option<Memchr3> {",
    "    #[cfg(not(feature = \"perf-literal-substring\"))]",
    "    {",
    "        None",
    "    }",
    "    #[cfg(feature = \"perf-literal-substring\")]",
    "    {",
    "        if needles.len() != 3 {",
    "            return None;",
    "        }",
    "        if !needles.iter().all(|n| n.as_ref().len() == 1) {",
    "            return None;",
    "        }",
    "        let b1 = needles[0].as_ref()[0];",
    "        let b2 = needles[1].as_ref()[0];",
    "        let b3 = needles[2].as_ref()[0];",
    "        Some(Memchr3(b1, b2, b3))",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "needles.len() != 3",
          "norm": "3 != needles.len()",
          "value": "true",
          "line": 140,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "needles.len() != 3",
          "norm": "3 != needles.len()",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "needles.iter().all(|n| n.as_ref().len() == 1)",
          "norm": null,
          "value": "true",
          "line": 143,
          "bound": null
        }
      ],
      "ret": "Some(Memchr3(b1, b2, b3))",
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "needles.len() != 3",
          "norm": "3 != needles.len()",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "needles.iter().all(|n| n.as_ref().len() == 1)",
          "norm": null,
          "value": "false",
          "line": 143,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        3,
        4,
        5,
        7,
        17
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}