{
  "name": "regex_automata::nfa::thompson::builder::{impl#1}::check_size_limit",
  "mod_info": {
    "name": "nfa::thompson::builder",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:58:1:58:13"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/builder.rs:1303:5:1310:6",
  "doc": "",
  "code": [
    "fn check_size_limit(&self) -> Result<(), BuildError> {",
    "    if let Some(limit) = self.size_limit {",
    "        if self.memory_usage() > limit {",
    "            return Err(BuildError::exceeded_size_limit(limit));",
    "        }",
    "    }",
    "    Ok(())",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(limit) = self.size_limit",
          "norm": null,
          "value": "true",
          "line": 1304,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        8,
        9,
        10
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(limit) = self.size_limit",
          "norm": null,
          "value": "true",
          "line": 1304,
          "bound": null
        },
        {
          "cond": "self.memory_usage() > limit",
          "norm": "limit < self.memory_usage()",
          "value": "true",
          "line": 1305,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::exceeded_size_limit(limit))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let Some(limit) = self.size_limit",
          "norm": null,
          "value": "true",
          "line": 1304,
          "bound": null
        },
        {
          "cond": "self.memory_usage() > limit",
          "norm": "limit < self.memory_usage()",
          "value": "false",
          "line": 1305,
          "bound": "self.memory_usage() == limit"
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        7,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}