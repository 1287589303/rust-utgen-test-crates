{
  "name": "regex_automata::dfa::onepass::{impl#0}::overwrite",
  "mod_info": {
    "name": "dfa::onepass",
    "loc": "regex-automata/src/dfa/mod.rs:339:1:339:17"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/onepass.rs:270:5:279:6",
  "doc": "/// Overwrite the default configuration such that the options in `o` are\n/// always used. If an option in `o` is not set, then the corresponding\n/// option in `self` is used. If it's not set in `self` either, then it\n/// remains not set.\n",
  "code": [
    "pub(crate) fn overwrite(&self, o: Config) -> Config {",
    "    Config {",
    "        match_kind: o.match_kind.or(self.match_kind),",
    "        starts_for_each_pattern: o",
    "            .starts_for_each_pattern",
    "            .or(self.starts_for_each_pattern),",
    "        byte_classes: o.byte_classes.or(self.byte_classes),",
    "        size_limit: o.size_limit.or(self.size_limit),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Config {\n            match_kind: o.match_kind.or(self.match_kind),\n            starts_for_each_pattern: o\n                .starts_for_each_pattern\n                .or(self.starts_for_each_pattern),\n            byte_classes: o.byte_classes.or(self.byte_classes),\n            size_limit: o.size_limit.or(self.size_limit),\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}