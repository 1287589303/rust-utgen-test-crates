{
  "name": "regex_automata::hybrid::dfa::{impl#6}::quit_id",
  "mod_info": {
    "name": "hybrid::dfa",
    "loc": "regex-automata/src/hybrid/mod.rs:140:1:140:13"
  },
  "visible": false,
  "loc": "regex-automata/src/hybrid/dfa.rs:2742:5:2748:6",
  "doc": "/// Returns the ID of the quit state for this lazy DFA.\n",
  "code": [
    "fn quit_id(&self) -> LazyStateID {",
    "    // This unwrap is OK since the maximum value here is 2 * 512 = 1024,",
    "    // which is <= 2047 (the maximum state ID on 16-bit systems). Where",
    "    // 512 is the worst case for our equivalence classes (every byte is a",
    "    // distinct class).",
    "    LazyStateID::new(2 << self.dfa.stride2()).unwrap().to_quit()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}