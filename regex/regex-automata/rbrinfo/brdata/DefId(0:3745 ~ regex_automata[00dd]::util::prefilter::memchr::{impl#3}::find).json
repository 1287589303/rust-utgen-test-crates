{
  "name": "regex_automata::util::prefilter::memchr::{impl#3}::find",
  "mod_info": {
    "name": "util::prefilter::memchr",
    "loc": "regex-automata/src/util/prefilter/mod.rs:38:1:38:12"
  },
  "visible": true,
  "loc": "regex-automata/src/util/prefilter/memchr.rs:93:5:106:6",
  "doc": "",
  "code": [
    "fn find(&self, haystack: &[u8], span: Span) -> Option<Span> {",
    "    #[cfg(not(feature = \"perf-literal-substring\"))]",
    "    {",
    "        unreachable!()",
    "    }",
    "    #[cfg(feature = \"perf-literal-substring\")]",
    "    {",
    "        memchr::memchr2(self.0, self.1, &haystack[span]).map(|i| {",
    "            let start = span.start + i;",
    "            let end = start + 1;",
    "            Span { start, end }",
    "        })",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}