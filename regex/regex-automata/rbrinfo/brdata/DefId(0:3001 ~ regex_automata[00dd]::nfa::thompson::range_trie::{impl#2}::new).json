{
  "name": "regex_automata::nfa::thompson::range_trie::{impl#2}::new",
  "mod_info": {
    "name": "nfa::thompson::range_trie",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:70:1:70:16"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/range_trie.rs:644:5:652:6",
  "doc": "/// Create the next item to visit. The given state ID should correspond\n/// to the state at which the first range in the given slice should be\n/// inserted. The slice given must not be empty and it must be no longer\n/// than 4.\n",
  "code": [
    "fn new(state_id: StateID, ranges: &[Utf8Range]) -> NextInsert {",
    "    let len = ranges.len();",
    "    assert!(len > 0);",
    "    assert!(len <= 4);",
    "",
    "    let mut tmp = [Utf8Range { start: 0, end: 0 }; 4];",
    "    tmp[..len].copy_from_slice(ranges);",
    "    NextInsert { state_id, ranges: tmp, len: u8::try_from(len).unwrap() }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "len > 0",
          "norm": "0 < len",
          "value": "true",
          "line": 646,
          "bound": null
        },
        {
          "cond": "len <= 4",
          "norm": "4 >= len",
          "value": "true",
          "line": 647,
          "bound": "len == 4"
        }
      ],
      "ret": "NextInsert { state_id, ranges: tmp, len: u8::try_from(len).unwrap() }",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "len > 0",
          "norm": "0 < len",
          "value": "true",
          "line": 646,
          "bound": null
        },
        {
          "cond": "len <= 4",
          "norm": "4 >= len",
          "value": "false",
          "line": 647,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "len > 0",
          "norm": "0 < len",
          "value": "false",
          "line": 646,
          "bound": "len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}