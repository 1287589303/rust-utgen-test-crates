{
  "name": "regex_automata::meta::strategy::{impl#2}::search",
  "mod_info": {
    "name": "meta::strategy",
    "loc": "regex-automata/src/meta/mod.rs:61:1:61:14"
  },
  "visible": false,
  "loc": "regex-automata/src/meta/strategy.rs:383:5:396:6",
  "doc": "",
  "code": [
    "fn search(&self, _cache: &mut Cache, input: &Input<'_>) -> Option<Match> {",
    "    if input.is_done() {",
    "        return None;",
    "    }",
    "    if input.get_anchored().is_anchored() {",
    "        return self",
    "            .pre",
    "            .prefix(input.haystack(), input.get_span())",
    "            .map(|sp| Match::new(PatternID::ZERO, sp));",
    "    }",
    "    self.pre",
    "        .find(input.haystack(), input.get_span())",
    "        .map(|sp| Match::new(PatternID::ZERO, sp))",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        16
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 384,
          "bound": null
        },
        {
          "cond": "input.get_anchored().is_anchored()",
          "norm": null,
          "value": "true",
          "line": 387,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        16
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 384,
          "bound": null
        },
        {
          "cond": "input.get_anchored().is_anchored()",
          "norm": null,
          "value": "false",
          "line": 387,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        11,
        12,
        13,
        14,
        15,
        16
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}