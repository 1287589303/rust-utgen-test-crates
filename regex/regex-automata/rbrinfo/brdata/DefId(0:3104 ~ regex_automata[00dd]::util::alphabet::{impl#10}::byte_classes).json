{
  "name": "regex_automata::util::alphabet::{impl#10}::byte_classes",
  "mod_info": {
    "name": "util::alphabet",
    "loc": "regex-automata/src/util/mod.rs:30:1:30:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/alphabet.rs:722:5:737:6",
  "doc": "/// Convert this boolean set to a map that maps all byte values to their\n/// corresponding equivalence class. The last mapping indicates the largest\n/// equivalence class identifier (which is never bigger than 255).\n",
  "code": [
    "pub(crate) fn byte_classes(&self) -> ByteClasses {",
    "    let mut classes = ByteClasses::empty();",
    "    let mut class = 0u8;",
    "    let mut b = 0u8;",
    "    loop {",
    "        classes.set(b, class);",
    "        if b == 255 {",
    "            break;",
    "        }",
    "        if self.0.contains(b) {",
    "            class = class.checked_add(1).unwrap();",
    "        }",
    "        b = b.checked_add(1).unwrap();",
    "    }",
    "    classes",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 2,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "b == 255",
          "norm": "255 == b",
          "value": "false",
          "line": 728,
          "bound": null
        }
      ],
      "ret": "classes",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "b == 255",
          "norm": "255 == b",
          "value": "true",
          "line": 728,
          "bound": null
        },
        {
          "cond": "self.0.contains(b)",
          "norm": null,
          "value": "true",
          "line": 731,
          "bound": null
        },
        {
          "cond": "b == 255",
          "norm": "255 == b",
          "value": "false",
          "line": 728,
          "bound": null
        }
      ],
      "ret": "classes",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        8,
        9,
        10,
        12,
        13,
        14,
        2,
        3,
        4,
        5
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "b == 255",
          "norm": "255 == b",
          "value": "true",
          "line": 728,
          "bound": null
        },
        {
          "cond": "self.0.contains(b)",
          "norm": null,
          "value": "false",
          "line": 731,
          "bound": null
        },
        {
          "cond": "b == 255",
          "norm": "255 == b",
          "value": "false",
          "line": 728,
          "bound": null
        }
      ],
      "ret": "classes",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        11,
        12,
        13,
        14,
        2,
        3,
        4,
        5
      ],
      "may_contra": true,
      "min_set": true
    }
  ]
}