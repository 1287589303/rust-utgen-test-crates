{
  "name": "regex_automata::util::alphabet::{impl#0}::eoi",
  "mod_info": {
    "name": "util::alphabet",
    "loc": "regex-automata/src/util/mod.rs:30:1:30:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/alphabet.rs:117:5:124:6",
  "doc": "/// Create a new \"end of input\" haystack unit.\n///\n/// The value given is the sentinel value used by this unit to represent\n/// the \"end of input.\" The value should be the total number of equivalence\n/// classes in the corresponding alphabet. Its maximum value is `256`,\n/// which occurs when every byte is its own equivalence class.\n///\n/// # Panics\n///\n/// This panics when `num_byte_equiv_classes` is greater than `256`.\n",
  "code": [
    "pub fn eoi(num_byte_equiv_classes: usize) -> Unit {",
    "    assert!(",
    "        num_byte_equiv_classes <= 256,",
    "        \"max number of byte-based equivalent classes is 256, but got {}\",",
    "        num_byte_equiv_classes,",
    "    );",
    "    Unit(UnitKind::EOI(u16::try_from(num_byte_equiv_classes).unwrap()))",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "num_byte_equiv_classes <= 256",
          "norm": "256 >= num_byte_equiv_classes",
          "value": "true",
          "line": 119,
          "bound": "num_byte_equiv_classes == 256"
        }
      ],
      "ret": "Unit(UnitKind::EOI(u16::try_from(num_byte_equiv_classes).unwrap()))",
      "path": [
        0,
        1,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "num_byte_equiv_classes <= 256",
          "norm": "256 >= num_byte_equiv_classes",
          "value": "false",
          "line": 119,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        3,
        4,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}