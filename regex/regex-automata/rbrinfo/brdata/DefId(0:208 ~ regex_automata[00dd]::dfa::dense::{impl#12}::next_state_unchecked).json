{
  "name": "regex_automata::dfa::dense::{impl#12}::next_state_unchecked",
  "mod_info": {
    "name": "dfa::dense",
    "loc": "regex-automata/src/dfa/mod.rs:337:1:337:15"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/dense.rs:3178:5:3191:6",
  "doc": "",
  "code": [
    "unsafe fn next_state_unchecked(",
    "    &self,",
    "    current: StateID,",
    "    byte: u8,",
    ") -> StateID {",
    "    // We don't (or shouldn't) need an unchecked variant for the byte",
    "    // class mapping, since bound checks should be omitted automatically",
    "    // by virtue of its representation. If this ends up not being true as",
    "    // confirmed by codegen, please file an issue. ---AG",
    "    let class = self.byte_classes().get(byte);",
    "    let o = current.as_usize() + usize::from(class);",
    "    let next = *self.trans().get_unchecked(o);",
    "    next",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "next",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}