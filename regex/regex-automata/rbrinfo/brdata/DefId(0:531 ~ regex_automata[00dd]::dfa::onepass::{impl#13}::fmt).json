{
  "name": "regex_automata::dfa::onepass::{impl#13}::fmt",
  "mod_info": {
    "name": "dfa::onepass",
    "loc": "regex-automata/src/dfa/mod.rs:339:1:339:17"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/onepass.rs:2751:5:2765:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {",
    "    if self.is_empty() {",
    "        return write!(f, \"N/A\");",
    "    }",
    "    if let Some(pid) = self.pattern_id() {",
    "        write!(f, \"{}\", pid.as_usize())?;",
    "    }",
    "    if !self.epsilons().is_empty() {",
    "        if self.pattern_id().is_some() {",
    "            write!(f, \"/\")?;",
    "        }",
    "        write!(f, \"{:?}\", self.epsilons())?;",
    "    }",
    "    Ok(())",
    "}"
  ],
  "size": {
    "chain": 14,
    "contra": 0,
    "min_set": 6
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "true",
          "line": 2752,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2752,
          "bound": null
        },
        {
          "cond": "let Some(pid) = self.pattern_id()",
          "norm": null,
          "value": "true",
          "line": 2755,
          "bound": null
        },
        {
          "cond": "self.epsilons().is_empty()",
          "norm": null,
          "value": "true",
          "line": 2758,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        6,
        19,
        20,
        21,
        22,
        23,
        48,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2752,
          "bound": null
        },
        {
          "cond": "let Some(pid) = self.pattern_id()",
          "norm": null,
          "value": "true",
          "line": 2755,
          "bound": null
        },
        {
          "cond": "self.epsilons().is_empty()",
          "norm": null,
          "value": "false",
          "line": 2758,
          "bound": null
        },
        {
          "cond": "self.pattern_id().is_some()",
          "norm": null,
          "value": "true",
          "line": 2759,
          "bound": null
        },
        {
          "cond": "write!(f, \"/\")?",
          "norm": null,
          "value": "Err/None",
          "line": 2760,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        19,
        20,
        21,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        32,
        34,
        35,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2752,
          "bound": null
        },
        {
          "cond": "let Some(pid) = self.pattern_id()",
          "norm": null,
          "value": "true",
          "line": 2755,
          "bound": null
        },
        {
          "cond": "self.epsilons().is_empty()",
          "norm": null,
          "value": "false",
          "line": 2758,
          "bound": null
        },
        {
          "cond": "self.pattern_id().is_some()",
          "norm": null,
          "value": "true",
          "line": 2759,
          "bound": null
        },
        {
          "cond": "write!(f, \"/\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2760,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", self.epsilons())?",
          "norm": null,
          "value": "Err/None",
          "line": 2762,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        19,
        20,
        21,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        33,
        37,
        38,
        39,
        40,
        41,
        42,
        44,
        46,
        47,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2752,
          "bound": null
        },
        {
          "cond": "let Some(pid) = self.pattern_id()",
          "norm": null,
          "value": "true",
          "line": 2755,
          "bound": null
        },
        {
          "cond": "self.epsilons().is_empty()",
          "norm": null,
          "value": "false",
          "line": 2758,
          "bound": null
        },
        {
          "cond": "self.pattern_id().is_some()",
          "norm": null,
          "value": "true",
          "line": 2759,
          "bound": null
        },
        {
          "cond": "write!(f, \"/\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2760,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", self.epsilons())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2762,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        6,
        19,
        20,
        21,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        33,
        37,
        38,
        39,
        40,
        41,
        42,
        45,
        48,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2752,
          "bound": null
        },
        {
          "cond": "let Some(pid) = self.pattern_id()",
          "norm": null,
          "value": "true",
          "line": 2755,
          "bound": null
        },
        {
          "cond": "self.epsilons().is_empty()",
          "norm": null,
          "value": "false",
          "line": 2758,
          "bound": null
        },
        {
          "cond": "self.pattern_id().is_some()",
          "norm": null,
          "value": "false",
          "line": 2759,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", self.epsilons())?",
          "norm": null,
          "value": "Err/None",
          "line": 2762,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        19,
        20,
        21,
        22,
        24,
        25,
        26,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        44,
        46,
        47,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2752,
          "bound": null
        },
        {
          "cond": "let Some(pid) = self.pattern_id()",
          "norm": null,
          "value": "true",
          "line": 2755,
          "bound": null
        },
        {
          "cond": "self.epsilons().is_empty()",
          "norm": null,
          "value": "false",
          "line": 2758,
          "bound": null
        },
        {
          "cond": "self.pattern_id().is_some()",
          "norm": null,
          "value": "false",
          "line": 2759,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", self.epsilons())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2762,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        6,
        19,
        20,
        21,
        22,
        24,
        25,
        26,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        45,
        48,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2752,
          "bound": null
        },
        {
          "cond": "let Some(pid) = self.pattern_id()",
          "norm": null,
          "value": "true",
          "line": 2755,
          "bound": null
        },
        {
          "cond": "write!(f, \"{}\", pid.as_usize())?",
          "norm": null,
          "value": "Err/None",
          "line": 2756,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        17,
        18,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2752,
          "bound": null
        },
        {
          "cond": "let Some(pid) = self.pattern_id()",
          "norm": null,
          "value": "true",
          "line": 2755,
          "bound": null
        },
        {
          "cond": "write!(f, \"{}\", pid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2756,
          "bound": null
        },
        {
          "cond": "self.epsilons().is_empty()",
          "norm": null,
          "value": "true",
          "line": 2758,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        16,
        20,
        21,
        22,
        23,
        48,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2752,
          "bound": null
        },
        {
          "cond": "let Some(pid) = self.pattern_id()",
          "norm": null,
          "value": "true",
          "line": 2755,
          "bound": null
        },
        {
          "cond": "write!(f, \"{}\", pid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2756,
          "bound": null
        },
        {
          "cond": "self.epsilons().is_empty()",
          "norm": null,
          "value": "false",
          "line": 2758,
          "bound": null
        },
        {
          "cond": "self.pattern_id().is_some()",
          "norm": null,
          "value": "true",
          "line": 2759,
          "bound": null
        },
        {
          "cond": "write!(f, \"/\")?",
          "norm": null,
          "value": "Err/None",
          "line": 2760,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        16,
        20,
        21,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        32,
        34,
        35,
        49,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2752,
          "bound": null
        },
        {
          "cond": "let Some(pid) = self.pattern_id()",
          "norm": null,
          "value": "true",
          "line": 2755,
          "bound": null
        },
        {
          "cond": "write!(f, \"{}\", pid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2756,
          "bound": null
        },
        {
          "cond": "self.epsilons().is_empty()",
          "norm": null,
          "value": "false",
          "line": 2758,
          "bound": null
        },
        {
          "cond": "self.pattern_id().is_some()",
          "norm": null,
          "value": "true",
          "line": 2759,
          "bound": null
        },
        {
          "cond": "write!(f, \"/\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2760,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", self.epsilons())?",
          "norm": null,
          "value": "Err/None",
          "line": 2762,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        16,
        20,
        21,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        33,
        37,
        38,
        39,
        40,
        41,
        42,
        44,
        46,
        47,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2752,
          "bound": null
        },
        {
          "cond": "let Some(pid) = self.pattern_id()",
          "norm": null,
          "value": "true",
          "line": 2755,
          "bound": null
        },
        {
          "cond": "write!(f, \"{}\", pid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2756,
          "bound": null
        },
        {
          "cond": "self.epsilons().is_empty()",
          "norm": null,
          "value": "false",
          "line": 2758,
          "bound": null
        },
        {
          "cond": "self.pattern_id().is_some()",
          "norm": null,
          "value": "true",
          "line": 2759,
          "bound": null
        },
        {
          "cond": "write!(f, \"/\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2760,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", self.epsilons())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2762,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        16,
        20,
        21,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        33,
        37,
        38,
        39,
        40,
        41,
        42,
        45,
        48,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2752,
          "bound": null
        },
        {
          "cond": "let Some(pid) = self.pattern_id()",
          "norm": null,
          "value": "true",
          "line": 2755,
          "bound": null
        },
        {
          "cond": "write!(f, \"{}\", pid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2756,
          "bound": null
        },
        {
          "cond": "self.epsilons().is_empty()",
          "norm": null,
          "value": "false",
          "line": 2758,
          "bound": null
        },
        {
          "cond": "self.pattern_id().is_some()",
          "norm": null,
          "value": "false",
          "line": 2759,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", self.epsilons())?",
          "norm": null,
          "value": "Err/None",
          "line": 2762,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        16,
        20,
        21,
        22,
        24,
        25,
        26,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        44,
        46,
        47,
        49,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 2752,
          "bound": null
        },
        {
          "cond": "let Some(pid) = self.pattern_id()",
          "norm": null,
          "value": "true",
          "line": 2755,
          "bound": null
        },
        {
          "cond": "write!(f, \"{}\", pid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2756,
          "bound": null
        },
        {
          "cond": "self.epsilons().is_empty()",
          "norm": null,
          "value": "false",
          "line": 2758,
          "bound": null
        },
        {
          "cond": "self.pattern_id().is_some()",
          "norm": null,
          "value": "false",
          "line": 2759,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", self.epsilons())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2762,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        16,
        20,
        21,
        22,
        24,
        25,
        26,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        45,
        48,
        50
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}