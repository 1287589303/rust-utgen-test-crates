{
  "name": "regex_automata::meta::regex::{impl#19}::memory_usage",
  "mod_info": {
    "name": "meta::regex",
    "loc": "regex-automata/src/meta/mod.rs:57:1:57:11"
  },
  "visible": true,
  "loc": "regex-automata/src/meta/regex.rs:2392:5:2400:6",
  "doc": "/// Returns the heap memory usage, in bytes, of this cache.\n///\n/// This does **not** include the stack size used up by this cache. To\n/// compute that, use `std::mem::size_of::<Cache>()`.\n",
  "code": [
    "pub fn memory_usage(&self) -> usize {",
    "    let mut bytes = 0;",
    "    bytes += self.pikevm.memory_usage();",
    "    bytes += self.backtrack.memory_usage();",
    "    bytes += self.onepass.memory_usage();",
    "    bytes += self.hybrid.memory_usage();",
    "    bytes += self.revhybrid.memory_usage();",
    "    bytes",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "bytes",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}