{
  "name": "regex_automata::meta::strategy::{impl#9}::try_search_half_fwd_stopat",
  "mod_info": {
    "name": "meta::strategy",
    "loc": "regex-automata/src/meta/mod.rs:61:1:61:14"
  },
  "visible": false,
  "loc": "regex-automata/src/meta/strategy.rs:1697:5:1717:6",
  "doc": "",
  "code": [
    "fn try_search_half_fwd_stopat(",
    "    &self,",
    "    cache: &mut Cache,",
    "    input: &Input<'_>,",
    ") -> Result<Result<HalfMatch, usize>, RetryFailError> {",
    "    if let Some(e) = self.core.dfa.get(&input) {",
    "        trace!(",
    "            \"using full DFA for forward reverse inner search at {:?}\",",
    "            input.get_span()",
    "        );",
    "        e.try_search_half_fwd_stopat(&input)",
    "    } else if let Some(e) = self.core.hybrid.get(&input) {",
    "        trace!(",
    "            \"using lazy DFA for forward reverse inner search at {:?}\",",
    "            input.get_span()",
    "        );",
    "        e.try_search_half_fwd_stopat(&mut cache.hybrid, &input)",
    "    } else {",
    "        unreachable!(\"ReverseInner always has a DFA\")",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(e) = self.core.dfa.get(&input)",
          "norm": null,
          "value": "true",
          "line": 1702,
          "bound": null
        },
        {
          "cond": "let Some(e) = self.core.hybrid.get(&input)",
          "norm": null,
          "value": "true",
          "line": 1708,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        10,
        11,
        12,
        14
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(e) = self.core.dfa.get(&input)",
          "norm": null,
          "value": "true",
          "line": 1702,
          "bound": null
        },
        {
          "cond": "let Some(e) = self.core.hybrid.get(&input)",
          "norm": null,
          "value": "true",
          "line": 1708,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8,
        9,
        13
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let Some(e) = self.core.dfa.get(&input)",
          "norm": null,
          "value": "true",
          "line": 1702,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        13
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}