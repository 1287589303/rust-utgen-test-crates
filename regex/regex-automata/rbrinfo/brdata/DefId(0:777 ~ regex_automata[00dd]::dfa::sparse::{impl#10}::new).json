{
  "name": "regex_automata::dfa::sparse::{impl#10}::new",
  "mod_info": {
    "name": "dfa::sparse",
    "loc": "regex-automata/src/dfa/mod.rs:343:1:343:16"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/sparse.rs:1805:5:1829:6",
  "doc": "",
  "code": [
    "fn new<T: AsRef<[u32]>>(",
    "    dfa: &dense::DFA<T>,",
    "    pattern_len: Option<usize>,",
    ") -> StartTable<Vec<u8>> {",
    "    let stride = Start::len();",
    "    // This is OK since the only way we're here is if a dense DFA could be",
    "    // constructed successfully, which uses the same space.",
    "    let len = stride",
    "        .checked_mul(pattern_len.unwrap_or(0))",
    "        .unwrap()",
    "        .checked_add(stride.checked_mul(2).unwrap())",
    "        .unwrap()",
    "        .checked_mul(StateID::SIZE)",
    "        .unwrap();",
    "    StartTable {",
    "        table: vec![0; len],",
    "        kind: dfa.start_kind(),",
    "        start_map: dfa.start_map().clone(),",
    "        stride,",
    "        pattern_len,",
    "        universal_start_unanchored: dfa",
    "            .universal_start_state(Anchored::No),",
    "        universal_start_anchored: dfa.universal_start_state(Anchored::Yes),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "StartTable {\n            table: vec![0; len],\n            kind: dfa.start_kind(),\n            start_map: dfa.start_map().clone(),\n            stride,\n            pattern_len,\n            universal_start_unanchored: dfa\n                .universal_start_state(Anchored::No),\n            universal_start_anchored: dfa.universal_start_state(Anchored::Yes),\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}