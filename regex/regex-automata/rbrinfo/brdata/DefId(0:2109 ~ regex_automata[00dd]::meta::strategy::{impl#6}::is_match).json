{
  "name": "regex_automata::meta::strategy::{impl#6}::is_match",
  "mod_info": {
    "name": "meta::strategy",
    "loc": "regex-automata/src/meta/mod.rs:61:1:61:14"
  },
  "visible": false,
  "loc": "regex-automata/src/meta/strategy.rs:1053:5:1065:6",
  "doc": "",
  "code": [
    "fn is_match(&self, cache: &mut Cache, input: &Input<'_>) -> bool {",
    "    if input.get_anchored().is_anchored() {",
    "        return self.core.is_match(cache, input);",
    "    }",
    "    match self.try_search_half_anchored_rev(cache, input) {",
    "        Err(_err) => {",
    "            trace!(\"fast reverse anchored search failed: {}\", _err);",
    "            self.core.is_match_nofail(cache, input)",
    "        }",
    "        Ok(None) => false,",
    "        Ok(Some(_)) => true,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "input.get_anchored().is_anchored()",
          "norm": null,
          "value": "true",
          "line": 1054,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        16
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "input.get_anchored().is_anchored()",
          "norm": null,
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.try_search_half_anchored_rev(cache, input) matches Err(_err)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "self.try_search_half_anchored_rev(cache, input) matches Err(_err)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        6,
        8,
        12,
        13,
        15,
        16
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "input.get_anchored().is_anchored()",
          "norm": null,
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.try_search_half_anchored_rev(cache, input) matches Ok(Some(_)) or Ok(None)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "self.try_search_half_anchored_rev(cache, input) matches Err(_err)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        }
      ],
      "ret": "true",
      "path": [
        0,
        1,
        2,
        5,
        6,
        9,
        11,
        15,
        16
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "input.get_anchored().is_anchored()",
          "norm": null,
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.try_search_half_anchored_rev(cache, input) matches Ok(Some(_)) or Ok(None)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "self.try_search_half_anchored_rev(cache, input) matches Ok(Some(_)) or Ok(None)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "self.try_search_half_anchored_rev(cache, input) matches Ok(None)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        }
      ],
      "ret": "false",
      "path": [
        0,
        1,
        2,
        5,
        6,
        9,
        10,
        14,
        15,
        16
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}