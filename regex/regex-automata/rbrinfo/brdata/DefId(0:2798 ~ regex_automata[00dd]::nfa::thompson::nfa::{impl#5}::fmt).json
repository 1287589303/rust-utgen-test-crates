{
  "name": "regex_automata::nfa::thompson::nfa::{impl#5}::fmt",
  "mod_info": {
    "name": "nfa::thompson::nfa",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:66:1:66:9"
  },
  "visible": true,
  "loc": "regex-automata/src/nfa/thompson/nfa.rs:1727:5:1782:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {",
    "    match *self {",
    "        State::ByteRange { ref trans } => trans.fmt(f),",
    "        State::Sparse(SparseTransitions { ref transitions }) => {",
    "            let rs = transitions",
    "                .iter()",
    "                .map(|t| format!(\"{:?}\", t))",
    "                .collect::<Vec<String>>()",
    "                .join(\", \");",
    "            write!(f, \"sparse({})\", rs)",
    "        }",
    "        State::Dense(ref dense) => {",
    "            write!(f, \"dense(\")?;",
    "            for (i, t) in dense.iter().enumerate() {",
    "                if i > 0 {",
    "                    write!(f, \", \")?;",
    "                }",
    "                write!(f, \"{:?}\", t)?;",
    "            }",
    "            write!(f, \")\")",
    "        }",
    "        State::Look { ref look, next } => {",
    "            write!(f, \"{:?} => {:?}\", look, next.as_usize())",
    "        }",
    "        State::Union { ref alternates } => {",
    "            let alts = alternates",
    "                .iter()",
    "                .map(|id| format!(\"{:?}\", id.as_usize()))",
    "                .collect::<Vec<String>>()",
    "                .join(\", \");",
    "            write!(f, \"union({})\", alts)",
    "        }",
    "        State::BinaryUnion { alt1, alt2 } => {",
    "            write!(",
    "                f,",
    "                \"binary-union({}, {})\",",
    "                alt1.as_usize(),",
    "                alt2.as_usize()",
    "            )",
    "        }",
    "        State::Capture { next, pattern_id, group_index, slot } => {",
    "            write!(",
    "                f,",
    "                \"capture(pid={:?}, group={:?}, slot={:?}) => {:?}\",",
    "                pattern_id.as_usize(),",
    "                group_index.as_usize(),",
    "                slot.as_usize(),",
    "                next.as_usize(),",
    "            )",
    "        }",
    "        State::Fail => write!(f, \"FAIL\"),",
    "        State::Match { pattern_id } => {",
    "            write!(f, \"MATCH({:?})\", pattern_id.as_usize())",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 15,
    "contra": 2,
    "min_set": 14
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*self matches State::Match { pattern_id }",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        10,
        105,
        106,
        107,
        108,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*self matches State::Fail",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "*self matches State::Fail",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        9,
        102,
        103,
        104,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*self matches State::Capture { next, pattern_id, group_index, slot }",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "*self matches State::Capture { next, pattern_id, group_index, slot }",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        8,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        101,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*self matches State::BinaryUnion { alt1, alt2 }",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "*self matches State::BinaryUnion { alt1, alt2 }",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        7,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "*self matches State::Union { ref alternates }",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "*self matches State::Union { ref alternates }",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "*self matches State::Look { ref look, next }",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "*self matches State::Look { ref look, next }",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        67,
        68,
        69,
        70,
        71,
        72,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "*self matches State::Dense(ref dense)",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "*self matches State::Dense(ref dense)",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "write!(f, \"dense(\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1739,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        24,
        25,
        26,
        27,
        29,
        31,
        32,
        112,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "*self matches State::Dense(ref dense)",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "*self matches State::Dense(ref dense)",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "write!(f, \"dense(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1739,
          "bound": null
        },
        {
          "cond": "(i, t) in dense.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 1740,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 1741,
          "bound": null
        },
        {
          "cond": "write!(f, \", \")?",
          "norm": null,
          "value": "Err/None",
          "line": 1742,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        43,
        44,
        45,
        46,
        48,
        50,
        51,
        109,
        110,
        111,
        112,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "*self matches State::Dense(ref dense)",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "*self matches State::Dense(ref dense)",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "write!(f, \"dense(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1739,
          "bound": null
        },
        {
          "cond": "(i, t) in dense.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 1740,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 1741,
          "bound": null
        },
        {
          "cond": "write!(f, \", \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1742,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", t)?",
          "norm": null,
          "value": "Err/None",
          "line": 1744,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        43,
        44,
        45,
        46,
        49,
        53,
        54,
        55,
        56,
        57,
        59,
        61,
        62,
        109,
        110,
        111,
        112,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "*self matches State::Dense(ref dense)",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "*self matches State::Dense(ref dense)",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "write!(f, \"dense(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1739,
          "bound": null
        },
        {
          "cond": "(i, t) in dense.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 1740,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 1741,
          "bound": null
        },
        {
          "cond": "write!(f, \", \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1742,
          "bound": null
        },
        {
          "cond": "write!(f, \"{:?}\", t)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1744,
          "bound": null
        },
        {
          "cond": "(i, t) in dense.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 1740,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        43,
        44,
        45,
        46,
        49,
        53,
        54,
        55,
        56,
        57,
        60,
        36,
        37,
        38,
        40,
        42,
        63,
        64,
        65,
        66,
        113
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "*self matches State::Dense(ref dense)",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "*self matches State::Dense(ref dense)",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "write!(f, \"dense(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1739,
          "bound": null
        },
        {
          "cond": "(i, t) in dense.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 1740,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "false",
          "line": 1741,
          "bound": "i == 0"
        },
        {
          "cond": "write!(f, \"{:?}\", t)?",
          "norm": null,
          "value": "Err/None",
          "line": 1744,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        52,
        53,
        54,
        55,
        56,
        57,
        59,
        61,
        62,
        109,
        110,
        111,
        112,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "*self matches State::Dense(ref dense)",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "*self matches State::Dense(ref dense)",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "write!(f, \"dense(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1739,
          "bound": null
        },
        {
          "cond": "(i, t) in dense.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 1740,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "false",
          "line": 1741,
          "bound": "i == 0"
        },
        {
          "cond": "write!(f, \"{:?}\", t)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1744,
          "bound": null
        },
        {
          "cond": "(i, t) in dense.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 1740,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        52,
        53,
        54,
        55,
        56,
        57,
        60,
        36,
        37,
        38,
        40,
        42,
        63,
        64,
        65,
        66,
        113
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "*self matches State::Dense(ref dense)",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "*self matches State::Dense(ref dense)",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "write!(f, \"dense(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1739,
          "bound": null
        },
        {
          "cond": "(i, t) in dense.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 1740,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        24,
        25,
        26,
        27,
        30,
        33,
        34,
        35,
        36,
        37,
        38,
        40,
        42,
        63,
        64,
        65,
        66,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "*self matches State::Sparse(SparseTransitions { ref transitions })",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "*self matches State::Sparse(SparseTransitions { ref transitions })",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "*self matches State::ByteRange { ref trans }",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        },
        {
          "cond": "*self matches State::ByteRange { ref trans }",
          "norm": null,
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        11,
        12,
        113
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}