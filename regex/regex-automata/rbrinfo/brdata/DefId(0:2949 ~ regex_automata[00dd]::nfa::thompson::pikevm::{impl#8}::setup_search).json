{
  "name": "regex_automata::nfa::thompson::pikevm::{impl#8}::setup_search",
  "mod_info": {
    "name": "nfa::thompson::pikevm",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:68:1:68:16"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/pikevm.rs:1971:5:1975:6",
  "doc": "/// Clears this cache. This should be called at the start of every search\n/// to ensure we start with a clean slate.\n///\n/// This also sets the length of the capturing groups used in the current\n/// search. This permits an optimization where by 'SlotTable::for_state'\n/// only returns the number of slots equivalent to the number of slots\n/// given in the 'Captures' value. This may be less than the total number\n/// of possible slots, e.g., when one only wants to track overall match\n/// offsets. This in turn permits less copying of capturing group spans\n/// in the PikeVM.\n",
  "code": [
    "fn setup_search(&mut self, captures_slot_len: usize) {",
    "    self.stack.clear();",
    "    self.curr.setup_search(captures_slot_len);",
    "    self.next.setup_search(captures_slot_len);",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}