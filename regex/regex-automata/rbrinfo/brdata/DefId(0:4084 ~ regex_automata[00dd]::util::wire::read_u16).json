{
  "name": "regex_automata::util::wire::read_u16",
  "mod_info": {
    "name": "util::wire",
    "loc": "regex-automata/src/util/mod.rs:46:1:46:14"
  },
  "visible": true,
  "loc": "regex-automata/src/util/wire.rs:760:1:763:2",
  "doc": "/// Read a u16 from the beginning of the given slice in native endian format.\n/// If the slice has fewer than 2 bytes, then this panics.\n///\n/// Marked as inline to speed up sparse searching which decodes integers from\n/// its automaton at search time.\n",
  "code": [
    "pub(crate) fn read_u16(slice: &[u8]) -> u16 {",
    "    let bytes: [u8; 2] = slice[..size_of::<u16>()].try_into().unwrap();",
    "    u16::from_ne_bytes(bytes)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}