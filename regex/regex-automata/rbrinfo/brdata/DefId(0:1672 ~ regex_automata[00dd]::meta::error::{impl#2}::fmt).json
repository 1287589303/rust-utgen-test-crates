{
  "name": "regex_automata::meta::error::{impl#2}::fmt",
  "mod_info": {
    "name": "meta::error",
    "loc": "regex-automata/src/meta/mod.rs:53:1:53:11"
  },
  "visible": true,
  "loc": "regex-automata/src/meta/error.rs:107:5:114:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {",
    "    match self.kind {",
    "        BuildErrorKind::Syntax { pid, .. } => {",
    "            write!(f, \"error parsing pattern {}\", pid.as_usize())",
    "        }",
    "        BuildErrorKind::NFA(_) => write!(f, \"error building NFA\"),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.kind matches BuildErrorKind::NFA(_)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        9,
        10,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.kind matches BuildErrorKind::Syntax { pid, .. }",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "self.kind matches BuildErrorKind::Syntax { pid, .. }",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        5,
        6,
        7,
        8,
        11
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}