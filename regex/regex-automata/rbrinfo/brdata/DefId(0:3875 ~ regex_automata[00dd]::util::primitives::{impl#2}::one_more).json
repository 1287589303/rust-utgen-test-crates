{
  "name": "regex_automata::util::primitives::{impl#2}::one_more",
  "mod_info": {
    "name": "util::primitives",
    "loc": "regex-automata/src/util/mod.rs:42:1:42:20"
  },
  "visible": true,
  "loc": "regex-automata/src/util/primitives.rs:234:5:236:6",
  "doc": "/// Returns one more than this small index as a usize.\n///\n/// Since a small index has constraints on its maximum value, adding `1` to\n/// it will always fit in a `usize`, `u32` and a `i32`.\n",
  "code": [
    "pub fn one_more(&self) -> usize {",
    "    self.as_usize() + 1",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.as_usize() + 1",
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}