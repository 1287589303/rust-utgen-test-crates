{
  "name": "regex_automata::nfa::thompson::compiler::{impl#4}::add_capture_start",
  "mod_info": {
    "name": "nfa::thompson::compiler",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:60:1:60:14"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/compiler.rs:1663:5:1674:6",
  "doc": "",
  "code": [
    "fn add_capture_start(",
    "    &self,",
    "    capture_index: u32,",
    "    name: Option<&str>,",
    ") -> Result<StateID, BuildError> {",
    "    let name = name.map(|n| Arc::from(n));",
    "    self.builder.borrow_mut().add_capture_start(",
    "        StateID::ZERO,",
    "        capture_index,",
    "        name,",
    "    )",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}