{
  "name": "regex_automata::util::determinize::state::{impl#8}::look_have",
  "mod_info": {
    "name": "util::determinize::state",
    "loc": "regex-automata/src/util/determinize/mod.rs:57:1:57:11"
  },
  "visible": false,
  "loc": "regex-automata/src/util/determinize/state.rs:444:5:446:6",
  "doc": "/// The set of look-behind assertions that were true in the transition that\n/// created this state.\n///\n/// Generally, this should be empty if 'look_need' is empty, since there is\n/// no reason to track which look-behind assertions are true if the state\n/// has no conditional epsilon transitions.\n///\n/// Satisfied look-ahead assertions are not tracked in states. Instead,\n/// these are re-computed on demand via epsilon closure when computing the\n/// transition function.\n",
  "code": [
    "fn look_have(&self) -> LookSet {",
    "    LookSet::read_repr(&self.0[1..])",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}