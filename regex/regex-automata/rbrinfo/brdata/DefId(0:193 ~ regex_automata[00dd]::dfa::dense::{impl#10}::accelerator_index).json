{
  "name": "regex_automata::dfa::dense::{impl#10}::accelerator_index",
  "mod_info": {
    "name": "dfa::dense",
    "loc": "regex-automata/src/dfa/mod.rs:337:1:337:15"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/dense.rs:3059:5:3065:6",
  "doc": "/// Returns the index of the accelerator state for the given ID. If the\n/// given ID does not correspond to an accelerator state, then this may\n/// panic or produce an incorrect result.\n",
  "code": [
    "fn accelerator_index(&self, id: StateID) -> usize {",
    "    let min = self.special().min_accel.as_usize();",
    "    // CORRECTNESS: We're allowed to produce an incorrect result or panic,",
    "    // so both the subtraction and the unchecked StateID construction is",
    "    // OK.",
    "    self.to_index(StateID::new_unchecked(id.as_usize() - min))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}