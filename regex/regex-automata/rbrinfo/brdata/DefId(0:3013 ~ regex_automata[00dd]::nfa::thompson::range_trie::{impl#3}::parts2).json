{
  "name": "regex_automata::nfa::thompson::range_trie::{impl#3}::parts2",
  "mod_info": {
    "name": "nfa::thompson::range_trie",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:70:1:70:16"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/range_trie.rs:850:5:854:6",
  "doc": "/// Create a new split with two partitions.\n",
  "code": [
    "fn parts2(r1: SplitRange, r2: SplitRange) -> Split {",
    "    // This value doesn't matter since it is never accessed.",
    "    let nada = SplitRange::Old(Utf8Range { start: 0, end: 0 });",
    "    Split { partitions: [r1, r2, nada], len: 2 }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Split { partitions: [r1, r2, nada], len: 2 }",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}