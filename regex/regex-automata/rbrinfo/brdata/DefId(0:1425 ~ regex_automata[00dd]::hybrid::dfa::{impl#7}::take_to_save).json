{
  "name": "regex_automata::hybrid::dfa::{impl#7}::take_to_save",
  "mod_info": {
    "name": "hybrid::dfa",
    "loc": "regex-automata/src/hybrid/mod.rs:140:1:140:13"
  },
  "visible": false,
  "loc": "regex-automata/src/hybrid/dfa.rs:2825:5:2830:6",
  "doc": "/// Replace this state saver with an empty saver, and if this saver is a\n/// request to save a state, return that request.\n",
  "code": [
    "fn take_to_save(&mut self) -> Option<(LazyStateID, State)> {",
    "    match core::mem::replace(self, StateSaver::None) {",
    "        StateSaver::None | StateSaver::Saved(_) => None,",
    "        StateSaver::ToSave { id, state } => Some((id, state)),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "core::mem::replace(self, StateSaver::None) matches StateSaver::Saved(_)",
          "norm": null,
          "value": "true",
          "line": 2826,
          "bound": null
        },
        {
          "cond": "core::mem::replace(self, StateSaver::None) matches StateSaver::Saved(_) or StateSaver::None",
          "norm": null,
          "value": "true",
          "line": 2826,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4,
        5,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "core::mem::replace(self, StateSaver::None) matches StateSaver::ToSave { id, state }",
          "norm": null,
          "value": "true",
          "line": 2826,
          "bound": null
        }
      ],
      "ret": "Some((id, state))",
      "path": [
        0,
        1,
        3,
        6,
        7,
        8,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "core::mem::replace(self, StateSaver::None) matches StateSaver::None",
          "norm": null,
          "value": "true",
          "line": 2826,
          "bound": null
        },
        {
          "cond": "core::mem::replace(self, StateSaver::None) matches StateSaver::Saved(_) or StateSaver::None",
          "norm": null,
          "value": "true",
          "line": 2826,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4,
        5,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}