{
  "name": "regex_automata::dfa::dense::{impl#23}::new",
  "mod_info": {
    "name": "dfa::dense",
    "loc": "regex-automata/src/dfa/mod.rs:337:1:337:15"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/dense.rs:4431:5:4453:6",
  "doc": "",
  "code": [
    "fn new(",
    "    matches: &BTreeMap<StateID, Vec<PatternID>>,",
    "    pattern_len: usize,",
    ") -> Result<MatchStates<Vec<u32>>, BuildError> {",
    "    let mut m = MatchStates::empty(pattern_len);",
    "    for (_, pids) in matches.iter() {",
    "        let start = PatternID::new(m.pattern_ids.len())",
    "            .map_err(|_| BuildError::too_many_match_pattern_ids())?;",
    "        m.slices.push(start.as_u32());",
    "        // This is always correct since the number of patterns in a single",
    "        // match state can never exceed maximum number of allowable",
    "        // patterns. Why? Because a pattern can only appear once in a",
    "        // particular match state, by construction. (And since our pattern",
    "        // ID limit is one less than u32::MAX, we're guaranteed that the",
    "        // length fits in a u32.)",
    "        m.slices.push(u32::try_from(pids.len()).unwrap());",
    "        for &pid in pids {",
    "            m.pattern_ids.push(pid.as_u32());",
    "        }",
    "    }",
    "    m.pattern_len = pattern_len;",
    "    Ok(m)",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 2,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(_, pids) in matches.iter()",
          "norm": null,
          "value": "true",
          "line": 4436,
          "bound": null
        },
        {
          "cond": "PatternID::new(m.pattern_ids.len())\n                .map_err(|_| BuildError::too_many_match_pattern_ids())?",
          "norm": null,
          "value": "Err/None",
          "line": 4437,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        14,
        16,
        18,
        19,
        39,
        40,
        41,
        42
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(_, pids) in matches.iter()",
          "norm": null,
          "value": "true",
          "line": 4436,
          "bound": null
        },
        {
          "cond": "PatternID::new(m.pattern_ids.len())\n                .map_err(|_| BuildError::too_many_match_pattern_ids())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 4437,
          "bound": null
        },
        {
          "cond": "&pid in pids",
          "norm": null,
          "value": "true",
          "line": 4447,
          "bound": null
        },
        {
          "cond": "&pid in pids",
          "norm": null,
          "value": "false",
          "line": 4447,
          "bound": null
        },
        {
          "cond": "(_, pids) in matches.iter()",
          "norm": null,
          "value": "false",
          "line": 4436,
          "bound": null
        }
      ],
      "ret": "Ok(m)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        14,
        17,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        33,
        35,
        36,
        28,
        29,
        30,
        32,
        34,
        4,
        5,
        6,
        8,
        10,
        37,
        38,
        42
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "(_, pids) in matches.iter()",
          "norm": null,
          "value": "true",
          "line": 4436,
          "bound": null
        },
        {
          "cond": "PatternID::new(m.pattern_ids.len())\n                .map_err(|_| BuildError::too_many_match_pattern_ids())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 4437,
          "bound": null
        },
        {
          "cond": "&pid in pids",
          "norm": null,
          "value": "false",
          "line": 4447,
          "bound": null
        },
        {
          "cond": "(_, pids) in matches.iter()",
          "norm": null,
          "value": "false",
          "line": 4436,
          "bound": null
        }
      ],
      "ret": "Ok(m)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        14,
        17,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        32,
        34,
        4,
        5,
        6,
        8,
        10,
        37,
        38,
        42
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "(_, pids) in matches.iter()",
          "norm": null,
          "value": "false",
          "line": 4436,
          "bound": null
        }
      ],
      "ret": "Ok(m)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        37,
        38,
        42
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}