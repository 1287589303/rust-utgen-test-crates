{
  "name": "regex_automata::dfa::accel::{impl#2}::as_bytes",
  "mod_info": {
    "name": "dfa::accel",
    "loc": "regex-automata/src/dfa/mod.rs:346:1:346:22"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/accel.rs:237:5:247:6",
  "doc": "/// Return the bytes representing the serialization of the accelerators.\n",
  "code": [
    "pub fn as_bytes(&self) -> &[u8] {",
    "    let accels = self.accels.as_ref();",
    "    // SAFETY: This is safe because accels is a just a slice of AccelTy,",
    "    // and u8 always has a smaller alignment.",
    "    unsafe {",
    "        core::slice::from_raw_parts(",
    "            accels.as_ptr().cast::<u8>(),",
    "            accels.len() * ACCEL_TY_SIZE,",
    "        )",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "core::slice::from_raw_parts(\n                accels.as_ptr().cast::<u8>(),\n                accels.len() * ACCEL_TY_SIZE,\n            )",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}