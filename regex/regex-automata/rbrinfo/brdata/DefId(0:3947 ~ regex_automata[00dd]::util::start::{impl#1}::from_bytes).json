{
  "name": "regex_automata::util::start::{impl#1}::from_bytes",
  "mod_info": {
    "name": "util::start",
    "loc": "regex-automata/src/util/mod.rs:43:1:43:15"
  },
  "visible": true,
  "loc": "regex-automata/src/util/start.rs:265:5:281:6",
  "doc": "/// Deserializes a byte class map from the given slice. If the slice is of\n/// insufficient length or otherwise contains an impossible mapping, then\n/// an error is returned. Upon success, the number of bytes read along with\n/// the map are returned. The number of bytes read is always a multiple of\n/// 8.\n",
  "code": [
    "pub(crate) fn from_bytes(",
    "    slice: &[u8],",
    ") -> Result<(StartByteMap, usize), DeserializeError> {",
    "    wire::check_slice_len(slice, 256, \"start byte map\")?;",
    "    let mut map = [Start::NonWordByte; 256];",
    "    for (i, &repr) in slice[..256].iter().enumerate() {",
    "        map[i] = match Start::from_usize(usize::from(repr)) {",
    "            Some(start) => start,",
    "            None => {",
    "                return Err(DeserializeError::generic(",
    "                    \"found invalid starting configuration\",",
    "                ))",
    "            }",
    "        };",
    "    }",
    "    Ok((StartByteMap { map }, 256))",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 1,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 256, \"start byte map\")?",
          "norm": null,
          "value": "Err/None",
          "line": 268,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        27
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 256, \"start byte map\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 268,
          "bound": null
        },
        {
          "cond": "(i, &repr) in slice[..256].iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 270,
          "bound": null
        },
        {
          "cond": "Start::from_usize(usize::from(repr)) matches Some(start)",
          "norm": null,
          "value": "true",
          "line": 271,
          "bound": null
        },
        {
          "cond": "Start::from_usize(usize::from(repr)) matches Some(start)",
          "norm": null,
          "value": "true",
          "line": 271,
          "bound": null
        },
        {
          "cond": "(i, &repr) in slice[..256].iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 270,
          "bound": null
        }
      ],
      "ret": "Ok((StartByteMap { map }, 256))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        17,
        19,
        20,
        22,
        24,
        26,
        12,
        13,
        14,
        16,
        18,
        27
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 256, \"start byte map\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 268,
          "bound": null
        },
        {
          "cond": "(i, &repr) in slice[..256].iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 270,
          "bound": null
        },
        {
          "cond": "Start::from_usize(usize::from(repr)) matches None",
          "norm": null,
          "value": "true",
          "line": 271,
          "bound": null
        }
      ],
      "ret": "Err(DeserializeError::generic(\n                        \"found invalid starting configuration\",\n                    ))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        17,
        19,
        20,
        23,
        25,
        27
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 256, \"start byte map\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 268,
          "bound": null
        },
        {
          "cond": "(i, &repr) in slice[..256].iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 270,
          "bound": null
        }
      ],
      "ret": "Ok((StartByteMap { map }, 256))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        18,
        27
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}