{
  "name": "regex_automata::nfa::thompson::map::{impl#1}::get",
  "mod_info": {
    "name": "nfa::thompson::map",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:65:1:65:9"
  },
  "visible": true,
  "loc": "regex-automata/src/nfa/thompson/map.rs:271:5:284:6",
  "doc": "/// Retrieve the cached state ID corresponding to the given key. The hash\n/// given must have been computed with `hash` using the same key value.\n///\n/// If there is no cached state with the given key, then None is returned.\n",
  "code": [
    "pub fn get(",
    "    &mut self,",
    "    key: &Utf8SuffixKey,",
    "    hash: usize,",
    ") -> Option<StateID> {",
    "    let entry = &self.map[hash];",
    "    if entry.version != self.version {",
    "        return None;",
    "    }",
    "    if key != &entry.key {",
    "        return None;",
    "    }",
    "    Some(entry.val)",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "entry.version != self.version",
          "norm": null,
          "value": "true",
          "line": 277,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "entry.version != self.version",
          "norm": null,
          "value": "false",
          "line": 277,
          "bound": null
        },
        {
          "cond": "key != &entry.key",
          "norm": "&entry.key != key",
          "value": "true",
          "line": 280,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        3,
        4,
        5,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "entry.version != self.version",
          "norm": null,
          "value": "false",
          "line": 277,
          "bound": null
        },
        {
          "cond": "key != &entry.key",
          "norm": "&entry.key != key",
          "value": "false",
          "line": 280,
          "bound": null
        }
      ],
      "ret": "Some(entry.val)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}