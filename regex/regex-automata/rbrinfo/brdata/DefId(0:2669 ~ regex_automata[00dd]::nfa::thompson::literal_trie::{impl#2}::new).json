{
  "name": "regex_automata::nfa::thompson::literal_trie::{impl#2}::new",
  "mod_info": {
    "name": "nfa::thompson::literal_trie",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:63:1:63:18"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/literal_trie.rs:326:5:332:6",
  "doc": "/// Create a new stack frame for trie traversal. This initializes the\n/// 'transitions' iterator to the transitions for the first chunk, with the\n/// 'chunks' iterator being every chunk after the first one.\n",
  "code": [
    "fn new(state: &'a State) -> Frame<'a> {",
    "    let mut chunks = state.chunks();",
    "    // every state has at least 1 chunk",
    "    let chunk = chunks.next().unwrap();",
    "    let transitions = chunk.iter();",
    "    Frame { chunks, transitions, union: vec![], sparse: vec![] }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Frame { chunks, transitions, union: vec![], sparse: vec![] }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}