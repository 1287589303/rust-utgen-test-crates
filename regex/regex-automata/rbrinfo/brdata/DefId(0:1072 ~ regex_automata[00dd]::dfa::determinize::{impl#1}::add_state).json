{
  "name": "regex_automata::dfa::determinize::{impl#1}::add_state",
  "mod_info": {
    "name": "dfa::determinize",
    "loc": "regex-automata/src/dfa/mod.rs:350:1:350:17"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/determinize.rs:526:5:560:6",
  "doc": "/// Add the given state to the DFA and make it available in the cache.\n///\n/// The state initially has no transitions. That is, it transitions to the\n/// dead state for all possible inputs, and transitions to the quit state\n/// for all quit bytes.\n///\n/// If adding the state would exceed the maximum value for StateID, then an\n/// error is returned.\n",
  "code": [
    "fn add_state(",
    "    &mut self,",
    "    builder: StateBuilderNFA,",
    ") -> Result<StateID, BuildError> {",
    "    let id = self.dfa.add_empty_state()?;",
    "    if !self.config.quit.is_empty() {",
    "        for b in self.config.quit.iter() {",
    "            self.dfa.set_transition(",
    "                id,",
    "                alphabet::Unit::u8(b),",
    "                self.dfa.quit_id(),",
    "            );",
    "        }",
    "    }",
    "    let state = builder.to_state();",
    "    // States use reference counting internally, so we only need to count",
    "    // their memory usage once.",
    "    self.memory_usage_state += state.memory_usage();",
    "    self.builder_states.push(state.clone());",
    "    self.cache.insert(state, id);",
    "    self.put_state_builder(builder);",
    "    if let Some(limit) = self.config.dfa_size_limit {",
    "        if self.dfa.memory_usage() > limit {",
    "            return Err(BuildError::dfa_exceeded_size_limit(limit));",
    "        }",
    "    }",
    "    if let Some(limit) = self.config.determinize_size_limit {",
    "        if self.memory_usage() > limit {",
    "            return Err(BuildError::determinize_exceeded_size_limit(",
    "                limit,",
    "            ));",
    "        }",
    "    }",
    "    Ok(id)",
    "}"
  ],
  "size": {
    "chain": 22,
    "contra": 7,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Err/None",
          "line": 530,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        53,
        54,
        55,
        56
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        }
      ],
      "ret": "Ok(id)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        39,
        40,
        48,
        49,
        50,
        56
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        },
        {
          "cond": "self.memory_usage() > limit",
          "norm": "limit < self.memory_usage()",
          "value": "true",
          "line": 553,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::determinize_exceeded_size_limit(\n                    limit,\n                ))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        51,
        52,
        55,
        56
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        },
        {
          "cond": "self.memory_usage() > limit",
          "norm": "limit < self.memory_usage()",
          "value": "false",
          "line": 553,
          "bound": "self.memory_usage() == limit"
        }
      ],
      "ret": "Ok(id)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        39,
        40,
        41,
        42,
        43,
        47,
        49,
        50,
        56
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "self.dfa.memory_usage() > limit",
          "norm": "limit < self.dfa.memory_usage()",
          "value": "true",
          "line": 548,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::dfa_exceeded_size_limit(limit))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        51,
        52,
        55,
        56
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "self.dfa.memory_usage() > limit",
          "norm": "limit < self.dfa.memory_usage()",
          "value": "false",
          "line": 548,
          "bound": "self.dfa.memory_usage() == limit"
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        }
      ],
      "ret": "Ok(id)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        38,
        40,
        48,
        49,
        50,
        56
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "self.dfa.memory_usage() > limit",
          "norm": "limit < self.dfa.memory_usage()",
          "value": "false",
          "line": 548,
          "bound": "self.dfa.memory_usage() == limit"
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        },
        {
          "cond": "self.memory_usage() > limit",
          "norm": "limit < self.memory_usage()",
          "value": "true",
          "line": 553,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::determinize_exceeded_size_limit(\n                    limit,\n                ))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        38,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        51,
        52,
        55,
        56
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "true",
          "line": 531,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "self.dfa.memory_usage() > limit",
          "norm": "limit < self.dfa.memory_usage()",
          "value": "false",
          "line": 548,
          "bound": "self.dfa.memory_usage() == limit"
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        },
        {
          "cond": "self.memory_usage() > limit",
          "norm": "limit < self.memory_usage()",
          "value": "false",
          "line": 553,
          "bound": "self.memory_usage() == limit"
        }
      ],
      "ret": "Ok(id)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        38,
        40,
        41,
        42,
        43,
        47,
        49,
        50,
        56
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        }
      ],
      "ret": "Ok(id)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        19,
        21,
        22,
        23,
        14,
        15,
        16,
        18,
        20,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        39,
        40,
        48,
        49,
        50,
        56
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        },
        {
          "cond": "self.memory_usage() > limit",
          "norm": "limit < self.memory_usage()",
          "value": "true",
          "line": 553,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::determinize_exceeded_size_limit(\n                    limit,\n                ))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        19,
        21,
        22,
        23,
        14,
        15,
        16,
        18,
        20,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        51,
        52,
        55,
        56
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        },
        {
          "cond": "self.memory_usage() > limit",
          "norm": "limit < self.memory_usage()",
          "value": "false",
          "line": 553,
          "bound": "self.memory_usage() == limit"
        }
      ],
      "ret": "Ok(id)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        19,
        21,
        22,
        23,
        14,
        15,
        16,
        18,
        20,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        39,
        40,
        41,
        42,
        43,
        47,
        49,
        50,
        56
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "self.dfa.memory_usage() > limit",
          "norm": "limit < self.dfa.memory_usage()",
          "value": "true",
          "line": 548,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::dfa_exceeded_size_limit(limit))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        19,
        21,
        22,
        23,
        14,
        15,
        16,
        18,
        20,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        51,
        52,
        55,
        56
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "self.dfa.memory_usage() > limit",
          "norm": "limit < self.dfa.memory_usage()",
          "value": "false",
          "line": 548,
          "bound": "self.dfa.memory_usage() == limit"
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        }
      ],
      "ret": "Ok(id)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        19,
        21,
        22,
        23,
        14,
        15,
        16,
        18,
        20,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        38,
        40,
        48,
        49,
        50,
        56
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "self.dfa.memory_usage() > limit",
          "norm": "limit < self.dfa.memory_usage()",
          "value": "false",
          "line": 548,
          "bound": "self.dfa.memory_usage() == limit"
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        },
        {
          "cond": "self.memory_usage() > limit",
          "norm": "limit < self.memory_usage()",
          "value": "true",
          "line": 553,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::determinize_exceeded_size_limit(\n                    limit,\n                ))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        19,
        21,
        22,
        23,
        14,
        15,
        16,
        18,
        20,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        38,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        51,
        52,
        55,
        56
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "true",
          "line": 532,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "self.dfa.memory_usage() > limit",
          "norm": "limit < self.dfa.memory_usage()",
          "value": "false",
          "line": 548,
          "bound": "self.dfa.memory_usage() == limit"
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        },
        {
          "cond": "self.memory_usage() > limit",
          "norm": "limit < self.memory_usage()",
          "value": "false",
          "line": 553,
          "bound": "self.memory_usage() == limit"
        }
      ],
      "ret": "Ok(id)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        19,
        21,
        22,
        23,
        14,
        15,
        16,
        18,
        20,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        38,
        40,
        41,
        42,
        43,
        47,
        49,
        50,
        56
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        }
      ],
      "ret": "Ok(id)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        18,
        20,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        39,
        40,
        48,
        49,
        50,
        56
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        },
        {
          "cond": "self.memory_usage() > limit",
          "norm": "limit < self.memory_usage()",
          "value": "true",
          "line": 553,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::determinize_exceeded_size_limit(\n                    limit,\n                ))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        18,
        20,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        51,
        52,
        55,
        56
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        },
        {
          "cond": "self.memory_usage() > limit",
          "norm": "limit < self.memory_usage()",
          "value": "false",
          "line": 553,
          "bound": "self.memory_usage() == limit"
        }
      ],
      "ret": "Ok(id)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        18,
        20,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        39,
        40,
        41,
        42,
        43,
        47,
        49,
        50,
        56
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "self.dfa.memory_usage() > limit",
          "norm": "limit < self.dfa.memory_usage()",
          "value": "true",
          "line": 548,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::dfa_exceeded_size_limit(limit))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        18,
        20,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        51,
        52,
        55,
        56
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "self.dfa.memory_usage() > limit",
          "norm": "limit < self.dfa.memory_usage()",
          "value": "false",
          "line": 548,
          "bound": "self.dfa.memory_usage() == limit"
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        }
      ],
      "ret": "Ok(id)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        18,
        20,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        38,
        40,
        48,
        49,
        50,
        56
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "self.dfa.memory_usage() > limit",
          "norm": "limit < self.dfa.memory_usage()",
          "value": "false",
          "line": 548,
          "bound": "self.dfa.memory_usage() == limit"
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        },
        {
          "cond": "self.memory_usage() > limit",
          "norm": "limit < self.memory_usage()",
          "value": "true",
          "line": 553,
          "bound": null
        }
      ],
      "ret": "Err(BuildError::determinize_exceeded_size_limit(\n                    limit,\n                ))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        18,
        20,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        38,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        51,
        52,
        55,
        56
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "self.dfa.add_empty_state()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 530,
          "bound": null
        },
        {
          "cond": "self.config.quit.is_empty()",
          "norm": null,
          "value": "false",
          "line": 531,
          "bound": null
        },
        {
          "cond": "b in self.config.quit.iter()",
          "norm": null,
          "value": "false",
          "line": 532,
          "bound": null
        },
        {
          "cond": "let Some(limit) = self.config.dfa_size_limit",
          "norm": null,
          "value": "true",
          "line": 547,
          "bound": null
        },
        {
          "cond": "self.dfa.memory_usage() > limit",
          "norm": "limit < self.dfa.memory_usage()",
          "value": "false",
          "line": 548,
          "bound": "self.dfa.memory_usage() == limit"
        },
        {
          "cond": "let Some(limit) = self.config.determinize_size_limit",
          "norm": null,
          "value": "true",
          "line": 552,
          "bound": null
        },
        {
          "cond": "self.memory_usage() > limit",
          "norm": "limit < self.memory_usage()",
          "value": "false",
          "line": 553,
          "bound": "self.memory_usage() == limit"
        }
      ],
      "ret": "Ok(id)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        18,
        20,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        38,
        40,
        41,
        42,
        43,
        47,
        49,
        50,
        56
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}