{
  "name": "regex_automata::util::determinize::state::read_varu32",
  "mod_info": {
    "name": "util::determinize::state",
    "loc": "regex-automata/src/util/determinize/mod.rs:57:1:57:11"
  },
  "visible": false,
  "loc": "regex-automata/src/util/determinize/state.rs:774:1:788:2",
  "doc": "/// Read an unsigned 32-bit varint. Also, return the number of bytes read.\n///\n/// https://developers.google.com/protocol-buffers/docs/encoding#varints\n",
  "code": [
    "fn read_varu32(data: &[u8]) -> (u32, usize) {",
    "    // N.B. We can assume correctness here since we know that all varuints are",
    "    // written with write_varu32. Hence, the 'as' uses and unchecked arithmetic",
    "    // is all okay.",
    "    let mut n: u32 = 0;",
    "    let mut shift: u32 = 0;",
    "    for (i, &b) in data.iter().enumerate() {",
    "        if b < 0b1000_0000 {",
    "            return (n | (u32::from(b) << shift), i + 1);",
    "        }",
    "        n |= (u32::from(b) & 0b0111_1111) << shift;",
    "        shift += 7;",
    "    }",
    "    (0, 0)",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 1,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(i, &b) in data.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 780,
          "bound": null
        },
        {
          "cond": "b < 0b1000_0000",
          "norm": "0b1000_0000 > b",
          "value": "true",
          "line": 781,
          "bound": null
        }
      ],
      "ret": "(n | (u32::from(b) << shift), i + 1)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        14,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(i, &b) in data.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 780,
          "bound": null
        },
        {
          "cond": "b < 0b1000_0000",
          "norm": "0b1000_0000 > b",
          "value": "false",
          "line": 781,
          "bound": "b == 0b1000_0000"
        },
        {
          "cond": "(i, &b) in data.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 780,
          "bound": null
        }
      ],
      "ret": "(0, 0)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        15,
        16,
        17,
        18,
        4,
        5,
        6,
        8,
        10,
        19
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "(i, &b) in data.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 780,
          "bound": null
        }
      ],
      "ret": "(0, 0)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        19
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}