{
  "name": "regex_automata::dfa::sparse::{impl#18}::next_at",
  "mod_info": {
    "name": "dfa::sparse",
    "loc": "regex-automata/src/dfa/mod.rs:343:1:343:16"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/sparse.rs:2312:5:2317:6",
  "doc": "/// Returns the next state for the ith transition in this state.\n",
  "code": [
    "fn next_at(&self, i: usize) -> StateID {",
    "    let start = i * StateID::SIZE;",
    "    let end = start + StateID::SIZE;",
    "    let bytes = self.next[start..end].try_into().unwrap();",
    "    StateID::from_ne_bytes_unchecked(bytes)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}