{
  "name": "regex_automata::dfa::dense::{impl#12}::match_pattern",
  "mod_info": {
    "name": "dfa::dense",
    "loc": "regex-automata/src/dfa/mod.rs:337:1:337:15"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/dense.rs:3211:5:3222:6",
  "doc": "",
  "code": [
    "fn match_pattern(&self, id: StateID, match_index: usize) -> PatternID {",
    "    // This is an optimization for the very common case of a DFA with a",
    "    // single pattern. This conditional avoids a somewhat more costly path",
    "    // that finds the pattern ID from the state machine, which requires",
    "    // a bit of slicing/pointer-chasing. This optimization tends to only",
    "    // matter when matches are frequent.",
    "    if self.ms.pattern_len == 1 {",
    "        return PatternID::ZERO;",
    "    }",
    "    let state_index = self.match_state_index(id);",
    "    self.ms.pattern_id(state_index, match_index)",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.ms.pattern_len == 1",
          "norm": "1 == self.ms.pattern_len",
          "value": "false",
          "line": 3217,
          "bound": null
        }
      ],
      "ret": "PatternID::ZERO",
      "path": [
        0,
        1,
        5
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.ms.pattern_len == 1",
          "norm": "1 == self.ms.pattern_len",
          "value": "true",
          "line": 3217,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}