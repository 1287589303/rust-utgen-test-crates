{
  "name": "regex_automata::util::captures::{impl#11}::fmt",
  "mod_info": {
    "name": "util::captures",
    "loc": "regex-automata/src/util/mod.rs:32:1:32:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/captures.rs:2431:5:2467:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {",
    "    use self::GroupInfoErrorKind::*;",
    "",
    "    match self.kind {",
    "        TooManyPatterns { ref err } => {",
    "            write!(f, \"too many patterns to build capture info: {}\", err)",
    "        }",
    "        TooManyGroups { pattern, minimum } => {",
    "            write!(",
    "                f,",
    "                \"too many capture groups (at least {}) were \\",
    "                 found for pattern {}\",",
    "                minimum,",
    "                pattern.as_usize()",
    "            )",
    "        }",
    "        MissingGroups { pattern } => write!(",
    "            f,",
    "            \"no capturing groups found for pattern {} \\",
    "             (either all patterns have zero groups or all patterns have \\",
    "              at least one group)\",",
    "            pattern.as_usize(),",
    "        ),",
    "        FirstMustBeUnnamed { pattern } => write!(",
    "            f,",
    "            \"first capture group (at index 0) for pattern {} has a name \\",
    "             (it must be unnamed)\",",
    "            pattern.as_usize(),",
    "        ),",
    "        Duplicate { pattern, ref name } => write!(",
    "            f,",
    "            \"duplicate capture group name '{}' found for pattern {}\",",
    "            name,",
    "            pattern.as_usize(),",
    "        ),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 0,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.kind matches Duplicate { pattern, ref name }",
          "norm": null,
          "value": "true",
          "line": 2434,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        27,
        28,
        29,
        30,
        31,
        32
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.kind matches FirstMustBeUnnamed { pattern }",
          "norm": null,
          "value": "true",
          "line": 2434,
          "bound": null
        },
        {
          "cond": "self.kind matches FirstMustBeUnnamed { pattern }",
          "norm": null,
          "value": "true",
          "line": 2434,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        22,
        23,
        24,
        25,
        26,
        32
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.kind matches MissingGroups { pattern }",
          "norm": null,
          "value": "true",
          "line": 2434,
          "bound": null
        },
        {
          "cond": "self.kind matches MissingGroups { pattern }",
          "norm": null,
          "value": "true",
          "line": 2434,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        17,
        18,
        19,
        20,
        21,
        32
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.kind matches TooManyGroups { pattern, minimum }",
          "norm": null,
          "value": "true",
          "line": 2434,
          "bound": null
        },
        {
          "cond": "self.kind matches TooManyGroups { pattern, minimum }",
          "norm": null,
          "value": "true",
          "line": 2434,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        11,
        12,
        13,
        14,
        15,
        16,
        32
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.kind matches TooManyPatterns { ref err }",
          "norm": null,
          "value": "true",
          "line": 2434,
          "bound": null
        },
        {
          "cond": "self.kind matches TooManyPatterns { ref err }",
          "norm": null,
          "value": "true",
          "line": 2434,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        7,
        8,
        9,
        10,
        32
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}