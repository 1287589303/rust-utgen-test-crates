{
  "name": "regex_automata::hybrid::search::find_overlapping_rev",
  "mod_info": {
    "name": "hybrid::search",
    "loc": "regex-automata/src/hybrid/mod.rs:144:1:144:12"
  },
  "visible": true,
  "loc": "regex-automata/src/hybrid/search.rs:567:1:664:2",
  "doc": "",
  "code": [
    "pub(crate) fn find_overlapping_rev(",
    "    dfa: &DFA,",
    "    cache: &mut Cache,",
    "    input: &Input<'_>,",
    "    state: &mut OverlappingState,",
    ") -> Result<(), MatchError> {",
    "    state.mat = None;",
    "    if input.is_done() {",
    "        return Ok(());",
    "    }",
    "    let mut sid = match state.id {",
    "        None => {",
    "            let sid = init_rev(dfa, cache, input)?;",
    "            state.id = Some(sid);",
    "            if input.start() == input.end() {",
    "                state.rev_eoi = true;",
    "            } else {",
    "                state.at = input.end() - 1;",
    "            }",
    "            sid",
    "        }",
    "        Some(sid) => {",
    "            if let Some(match_index) = state.next_match_index {",
    "                let match_len = dfa.match_len(cache, sid);",
    "                if match_index < match_len {",
    "                    state.next_match_index = Some(match_index + 1);",
    "                    let pattern = dfa.match_pattern(cache, sid, match_index);",
    "                    state.mat = Some(HalfMatch::new(pattern, state.at));",
    "                    return Ok(());",
    "                }",
    "            }",
    "            // Once we've reported all matches at a given position, we need",
    "            // to advance the search to the next position. However, if we've",
    "            // already followed the EOI transition, then we know we're done",
    "            // with the search and there cannot be any more matches to report.",
    "            if state.rev_eoi {",
    "                return Ok(());",
    "            } else if state.at == input.start() {",
    "                // At this point, we should follow the EOI transition. This",
    "                // will cause us the skip the main loop below and fall through",
    "                // to the final 'eoi_rev' transition.",
    "                state.rev_eoi = true;",
    "            } else {",
    "                // We haven't hit the end of the search yet, so move on.",
    "                state.at -= 1;",
    "            }",
    "            sid",
    "        }",
    "    };",
    "    cache.search_start(state.at);",
    "    while !state.rev_eoi {",
    "        sid = dfa",
    "            .next_state(cache, sid, input.haystack()[state.at])",
    "            .map_err(|_| gave_up(state.at))?;",
    "        if sid.is_tagged() {",
    "            state.id = Some(sid);",
    "            if sid.is_start() {",
    "                // do nothing",
    "            } else if sid.is_match() {",
    "                state.next_match_index = Some(1);",
    "                let pattern = dfa.match_pattern(cache, sid, 0);",
    "                state.mat = Some(HalfMatch::new(pattern, state.at + 1));",
    "                cache.search_finish(state.at);",
    "                return Ok(());",
    "            } else if sid.is_dead() {",
    "                cache.search_finish(state.at);",
    "                return Ok(());",
    "            } else if sid.is_quit() {",
    "                cache.search_finish(state.at);",
    "                return Err(MatchError::quit(",
    "                    input.haystack()[state.at],",
    "                    state.at,",
    "                ));",
    "            } else {",
    "                debug_assert!(sid.is_unknown());",
    "                unreachable!(\"sid being unknown is a bug\");",
    "            }",
    "        }",
    "        if state.at == input.start() {",
    "            break;",
    "        }",
    "        state.at -= 1;",
    "        cache.search_update(state.at);",
    "    }",
    "",
    "    let result = eoi_rev(dfa, cache, input, &mut sid, &mut state.mat);",
    "    state.rev_eoi = true;",
    "    state.id = Some(sid);",
    "    if state.mat.is_some() {",
    "        // '1' is always correct here since if we get to this point, this",
    "        // always corresponds to the first (index '0') match discovered at",
    "        // this position. So the next match to report at this position (if",
    "        // it exists) is at index '1'.",
    "        state.next_match_index = Some(1);",
    "    }",
    "    cache.search_finish(input.start());",
    "    result",
    "}"
  ],
  "size": {
    "chain": 101,
    "contra": 24,
    "min_set": 14
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "true",
          "line": 574,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        114
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 602,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        33,
        110,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Err/None",
          "line": 618,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        51,
        53,
        54,
        107,
        108,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        91,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        91,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 625,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 631,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        69,
        70,
        105,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 634,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(\n                    input.haystack()[state.at],\n                    state.at,\n                ))",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        105,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 634,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 641,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        79,
        80,
        81,
        82,
        85,
        86,
        87,
        124
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 634,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 641,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        79,
        80,
        81,
        83,
        124
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        91,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        91,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Err/None",
          "line": 618,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        51,
        53,
        54,
        107,
        108,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        91,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        91,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 625,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 631,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        69,
        70,
        105,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 634,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(\n                    input.haystack()[state.at],\n                    state.at,\n                ))",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        105,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 634,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 641,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        79,
        80,
        81,
        82,
        85,
        86,
        87,
        124
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 30,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 634,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 641,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        79,
        80,
        81,
        83,
        124
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 31,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        91,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 32,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        91,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 33,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 34,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        31,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 35,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "true",
          "line": 591,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        110,
        113,
        114
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 36,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 602,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        33,
        110,
        113,
        114
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 37,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 38,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 39,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Err/None",
          "line": 618,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        51,
        53,
        54,
        107,
        108,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 40,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        91,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 41,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        91,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 42,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 43,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 44,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 625,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 45,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 631,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        69,
        70,
        105,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 46,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 634,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(\n                    input.haystack()[state.at],\n                    state.at,\n                ))",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        105,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 47,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 634,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 641,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        79,
        80,
        81,
        82,
        85,
        86,
        87,
        124
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 48,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 634,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 641,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        79,
        80,
        81,
        83,
        124
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 49,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        91,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 50,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        91,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 51,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 52,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 53,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 54,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 55,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Err/None",
          "line": 618,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        51,
        53,
        54,
        107,
        108,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 56,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        91,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 57,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        91,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 58,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 59,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 60,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 625,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 61,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 631,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        69,
        70,
        105,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 62,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 634,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(\n                    input.haystack()[state.at],\n                    state.at,\n                ))",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        105,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 63,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 634,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 641,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        79,
        80,
        81,
        82,
        85,
        86,
        87,
        124
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 64,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 634,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 641,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        79,
        80,
        81,
        83,
        124
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 65,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        91,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 66,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        91,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 67,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 68,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches Some(sid)",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "let Some(match_index) = state.next_match_index",
          "norm": null,
          "value": "true",
          "line": 589,
          "bound": null
        },
        {
          "cond": "match_index < match_len",
          "norm": null,
          "value": "false",
          "line": 591,
          "bound": "match_index == match_len"
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 602,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 604,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        6,
        23,
        24,
        25,
        30,
        32,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 69,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Err/None",
          "line": 579,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        11,
        13,
        14,
        111,
        112,
        113,
        114
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 70,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 71,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 72,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Err/None",
          "line": 618,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        51,
        53,
        54,
        107,
        108,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 73,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        91,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 74,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        91,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 75,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 76,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 77,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 625,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 78,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 631,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        69,
        70,
        105,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 79,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 634,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(\n                    input.haystack()[state.at],\n                    state.at,\n                ))",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        105,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 80,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 634,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 641,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        79,
        80,
        81,
        82,
        85,
        86,
        87,
        124
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 81,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 634,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 641,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        79,
        80,
        81,
        83,
        124
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 82,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        91,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 83,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        91,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 84,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 85,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "true",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        18,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 86,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 87,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 88,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Err/None",
          "line": 618,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        51,
        53,
        54,
        107,
        108,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 89,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        91,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 90,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        91,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 91,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 92,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "true",
          "line": 623,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        59,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 93,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "true",
          "line": 625,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 94,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "true",
          "line": 631,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        69,
        70,
        105,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 95,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "true",
          "line": 634,
          "bound": null
        }
      ],
      "ret": "Err(MatchError::quit(\n                    input.haystack()[state.at],\n                    state.at,\n                ))",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        105,
        106,
        109,
        113,
        114
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 96,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 634,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "true",
          "line": 641,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        79,
        80,
        81,
        82,
        85,
        86,
        87,
        124
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 97,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "true",
          "line": 621,
          "bound": null
        },
        {
          "cond": "sid.is_start()",
          "norm": null,
          "value": "false",
          "line": 623,
          "bound": null
        },
        {
          "cond": "sid.is_match()",
          "norm": null,
          "value": "false",
          "line": 625,
          "bound": null
        },
        {
          "cond": "sid.is_dead()",
          "norm": null,
          "value": "false",
          "line": 631,
          "bound": null
        },
        {
          "cond": "sid.is_quit()",
          "norm": null,
          "value": "false",
          "line": 634,
          "bound": null
        },
        {
          "cond": "sid.is_unknown()",
          "norm": null,
          "value": "false",
          "line": 641,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        57,
        58,
        60,
        61,
        67,
        68,
        71,
        72,
        79,
        80,
        81,
        83,
        124
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 98,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        91,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 99,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "true",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        91,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 100,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "true",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        99,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 101,
      "conds": [
        {
          "cond": "input.is_done()",
          "norm": null,
          "value": "false",
          "line": 574,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "state.id matches None",
          "norm": null,
          "value": "true",
          "line": 577,
          "bound": null
        },
        {
          "cond": "init_rev(dfa, cache, input)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 579,
          "bound": null
        },
        {
          "cond": "input.start() == input.end()",
          "norm": "input.end() == input.start()",
          "value": "false",
          "line": 581,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "false",
          "line": 617,
          "bound": null
        },
        {
          "cond": "dfa\n            .next_state(cache, sid, input.haystack()[state.at])\n            .map_err(|_| gave_up(state.at))?",
          "norm": null,
          "value": "Ok/Some",
          "line": 618,
          "bound": null
        },
        {
          "cond": "sid.is_tagged()",
          "norm": null,
          "value": "false",
          "line": 621,
          "bound": null
        },
        {
          "cond": "state.at == input.start()",
          "norm": "input.start() == state.at",
          "value": "false",
          "line": 645,
          "bound": null
        },
        {
          "cond": "state.rev_eoi",
          "norm": null,
          "value": "true",
          "line": 617,
          "bound": null
        },
        {
          "cond": "state.mat.is_some()",
          "norm": null,
          "value": "false",
          "line": 655,
          "bound": null
        }
      ],
      "ret": "result",
      "path": [
        0,
        1,
        3,
        5,
        7,
        8,
        9,
        12,
        15,
        16,
        17,
        19,
        20,
        21,
        22,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        52,
        55,
        56,
        88,
        89,
        90,
        92,
        93,
        94,
        42,
        43,
        95,
        96,
        97,
        98,
        100,
        101,
        102,
        103,
        104,
        114
      ],
      "may_contra": true,
      "min_set": true
    }
  ]
}