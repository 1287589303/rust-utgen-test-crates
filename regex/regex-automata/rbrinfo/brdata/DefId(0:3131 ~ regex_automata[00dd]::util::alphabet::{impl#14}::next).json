{
  "name": "regex_automata::util::alphabet::{impl#14}::next",
  "mod_info": {
    "name": "util::alphabet",
    "loc": "regex-automata/src/util/mod.rs:30:1:30:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/alphabet.rs:898:5:915:6",
  "doc": "",
  "code": [
    "fn next(&mut self) -> Option<(u8, u8)> {",
    "    let asu8 = |n: usize| u8::try_from(n).unwrap();",
    "    while self.b <= 255 {",
    "        let start = asu8(self.b);",
    "        self.b += 1;",
    "        if !self.set.contains(start) {",
    "            continue;",
    "        }",
    "",
    "        let mut end = start;",
    "        while self.b <= 255 && self.set.contains(asu8(self.b)) {",
    "            end = asu8(self.b);",
    "            self.b += 1;",
    "        }",
    "        return Some((start, end));",
    "    }",
    "    None",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 2,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.b <= 255",
          "norm": "255 >= self.b",
          "value": "true",
          "line": 900,
          "bound": "self.b == 255"
        },
        {
          "cond": "self.set.contains(start)",
          "norm": null,
          "value": "true",
          "line": 903,
          "bound": null
        },
        {
          "cond": "self.b <= 255",
          "norm": "255 >= self.b",
          "value": "true",
          "line": 908,
          "bound": "self.b == 255"
        },
        {
          "cond": "self.set.contains(asu8(self.b))",
          "norm": null,
          "value": "true",
          "line": 908,
          "bound": null
        },
        {
          "cond": "self.b <= 255",
          "norm": "255 >= self.b",
          "value": "false",
          "line": 908,
          "bound": null
        }
      ],
      "ret": "Some((start, end))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        9,
        10,
        18,
        19,
        21
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.b <= 255",
          "norm": "255 >= self.b",
          "value": "true",
          "line": 900,
          "bound": "self.b == 255"
        },
        {
          "cond": "self.set.contains(start)",
          "norm": null,
          "value": "true",
          "line": 903,
          "bound": null
        },
        {
          "cond": "self.b <= 255",
          "norm": "255 >= self.b",
          "value": "true",
          "line": 908,
          "bound": "self.b == 255"
        },
        {
          "cond": "self.set.contains(asu8(self.b))",
          "norm": null,
          "value": "false",
          "line": 908,
          "bound": null
        }
      ],
      "ret": "Some((start, end))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        17,
        19,
        21
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.b <= 255",
          "norm": "255 >= self.b",
          "value": "true",
          "line": 900,
          "bound": "self.b == 255"
        },
        {
          "cond": "self.set.contains(start)",
          "norm": null,
          "value": "true",
          "line": 903,
          "bound": null
        },
        {
          "cond": "self.b <= 255",
          "norm": "255 >= self.b",
          "value": "false",
          "line": 908,
          "bound": null
        }
      ],
      "ret": "Some((start, end))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        10,
        18,
        19,
        21
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.b <= 255",
          "norm": "255 >= self.b",
          "value": "true",
          "line": 900,
          "bound": "self.b == 255"
        },
        {
          "cond": "self.set.contains(start)",
          "norm": null,
          "value": "false",
          "line": 903,
          "bound": null
        },
        {
          "cond": "self.b <= 255",
          "norm": "255 >= self.b",
          "value": "false",
          "line": 900,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        1,
        2,
        20,
        21
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.b <= 255",
          "norm": "255 >= self.b",
          "value": "false",
          "line": 900,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        20,
        21
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}