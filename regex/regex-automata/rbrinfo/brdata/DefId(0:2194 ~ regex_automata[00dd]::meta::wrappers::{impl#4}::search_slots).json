{
  "name": "regex_automata::meta::wrappers::{impl#4}::search_slots",
  "mod_info": {
    "name": "meta::wrappers",
    "loc": "regex-automata/src/meta/mod.rs:62:1:62:14"
  },
  "visible": true,
  "loc": "regex-automata/src/meta/wrappers.rs:251:5:272:6",
  "doc": "",
  "code": [
    "pub(crate) fn search_slots(",
    "    &self,",
    "    cache: &mut BoundedBacktrackerCache,",
    "    input: &Input<'_>,",
    "    slots: &mut [Option<NonMaxUsize>],",
    ") -> Option<PatternID> {",
    "    #[cfg(feature = \"nfa-backtrack\")]",
    "    {",
    "        // OK because we only permit access to this engine when we know",
    "        // the haystack is short enough for the backtracker to run without",
    "        // reporting an error.",
    "        self.0",
    "            .try_search_slots(cache.0.as_mut().unwrap(), input, slots)",
    "            .unwrap()",
    "    }",
    "    #[cfg(not(feature = \"nfa-backtrack\"))]",
    "    {",
    "        // Impossible to reach because this engine is never constructed",
    "        // if the requisite features aren't enabled.",
    "        unreachable!()",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}