{
  "name": "regex_automata::dfa::sparse::{impl#21}::fmt",
  "mod_info": {
    "name": "dfa::sparse",
    "loc": "regex-automata/src/dfa/mod.rs:343:1:343:16"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/sparse.rs:2473:5:2484:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {",
    "    let state = State {",
    "        id: self.id,",
    "        is_match: self.is_match,",
    "        ntrans: self.ntrans,",
    "        input_ranges: self.input_ranges,",
    "        next: self.next,",
    "        pattern_ids: self.pattern_ids,",
    "        accel: self.accel,",
    "    };",
    "    fmt::Debug::fmt(&state, f)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}