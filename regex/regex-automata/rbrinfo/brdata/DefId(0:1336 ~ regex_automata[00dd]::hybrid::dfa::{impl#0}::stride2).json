{
  "name": "regex_automata::hybrid::dfa::{impl#0}::stride2",
  "mod_info": {
    "name": "hybrid::dfa",
    "loc": "regex-automata/src/hybrid/mod.rs:140:1:140:13"
  },
  "visible": false,
  "loc": "regex-automata/src/hybrid/dfa.rs:423:5:425:6",
  "doc": "/// Returns the stride, as a base-2 exponent, required for these\n/// equivalence classes.\n///\n/// The stride is always the smallest power of 2 that is greater than or\n/// equal to the alphabet length. This is done so that converting between\n/// state IDs and indices can be done with shifts alone, which is much\n/// faster than integer division.\n",
  "code": [
    "fn stride2(&self) -> usize {",
    "    self.stride2",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.stride2",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}