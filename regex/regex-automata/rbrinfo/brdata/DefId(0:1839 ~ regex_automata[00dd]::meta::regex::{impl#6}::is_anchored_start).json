{
  "name": "regex_automata::meta::regex::{impl#6}::is_anchored_start",
  "mod_info": {
    "name": "meta::regex",
    "loc": "regex-automata/src/meta/mod.rs:57:1:57:11"
  },
  "visible": true,
  "loc": "regex-automata/src/meta/regex.rs:1963:5:1965:6",
  "doc": "/// Returns true when the search is guaranteed to be anchored. That is,\n/// when a match is reported, its offset is guaranteed to correspond to\n/// the start of the search.\n///\n/// This includes returning true when `input` _isn't_ anchored but the\n/// underlying regex is.\n",
  "code": [
    "pub(crate) fn is_anchored_start(&self, input: &Input<'_>) -> bool {",
    "    input.get_anchored().is_anchored() || self.is_always_anchored_start()",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "input.get_anchored().is_anchored()",
          "norm": null,
          "value": "true",
          "line": 1964,
          "bound": null
        }
      ],
      "ret": "input.get_anchored().is_anchored() || self.is_always_anchored_start()",
      "path": [
        0,
        1,
        2,
        3,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "input.get_anchored().is_anchored()",
          "norm": null,
          "value": "false",
          "line": 1964,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}