{
  "name": "regex_automata::dfa::onepass::{impl#8}::next",
  "mod_info": {
    "name": "dfa::onepass",
    "loc": "regex-automata/src/dfa/mod.rs:339:1:339:17"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/onepass.rs:2448:5:2475:6",
  "doc": "",
  "code": [
    "fn next(&mut self) -> Option<(u8, u8, Transition)> {",
    "    while let Some((b, &trans)) = self.it.next() {",
    "        // Fine because we'll never have more than u8::MAX transitions in",
    "        // one state.",
    "        let b = b.as_u8();",
    "        let (prev_start, prev_end, prev_trans) = match self.cur {",
    "            Some(t) => t,",
    "            None => {",
    "                self.cur = Some((b, b, trans));",
    "                continue;",
    "            }",
    "        };",
    "        if prev_trans == trans {",
    "            self.cur = Some((prev_start, b, prev_trans));",
    "        } else {",
    "            self.cur = Some((b, b, trans));",
    "            if prev_trans.state_id() != DEAD {",
    "                return Some((prev_start, prev_end, prev_trans));",
    "            }",
    "        }",
    "    }",
    "    if let Some((start, end, trans)) = self.cur.take() {",
    "        if trans.state_id() != DEAD {",
    "            return Some((start, end, trans));",
    "        }",
    "    }",
    "    None",
    "}"
  ],
  "size": {
    "chain": 13,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "let Some((start, end, trans)) = self.cur.take()",
          "norm": null,
          "value": "true",
          "line": 2469,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        19,
        20,
        27,
        28,
        29
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "let Some((start, end, trans)) = self.cur.take()",
          "norm": null,
          "value": "true",
          "line": 2469,
          "bound": null
        },
        {
          "cond": "trans.state_id() != DEAD",
          "norm": "DEAD != trans.state_id()",
          "value": "true",
          "line": 2470,
          "bound": null
        }
      ],
      "ret": "Some((start, end, trans))",
      "path": [
        0,
        1,
        2,
        3,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        29
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "let Some((start, end, trans)) = self.cur.take()",
          "norm": null,
          "value": "true",
          "line": 2469,
          "bound": null
        },
        {
          "cond": "trans.state_id() != DEAD",
          "norm": "DEAD != trans.state_id()",
          "value": "false",
          "line": 2470,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        19,
        20,
        21,
        22,
        23,
        24,
        26,
        28,
        29
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "self.cur matches Some(t)",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "self.cur matches Some(t)",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "prev_trans == trans",
          "norm": null,
          "value": "true",
          "line": 2460,
          "bound": null
        },
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "let Some((start, end, trans)) = self.cur.take()",
          "norm": null,
          "value": "true",
          "line": 2469,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        12,
        18,
        1,
        2,
        3,
        19,
        20,
        27,
        28,
        29
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "self.cur matches Some(t)",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "self.cur matches Some(t)",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "prev_trans == trans",
          "norm": null,
          "value": "true",
          "line": 2460,
          "bound": null
        },
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "let Some((start, end, trans)) = self.cur.take()",
          "norm": null,
          "value": "true",
          "line": 2469,
          "bound": null
        },
        {
          "cond": "trans.state_id() != DEAD",
          "norm": "DEAD != trans.state_id()",
          "value": "true",
          "line": 2470,
          "bound": null
        }
      ],
      "ret": "Some((start, end, trans))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        12,
        18,
        1,
        2,
        3,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        29
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "self.cur matches Some(t)",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "self.cur matches Some(t)",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "prev_trans == trans",
          "norm": null,
          "value": "true",
          "line": 2460,
          "bound": null
        },
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "let Some((start, end, trans)) = self.cur.take()",
          "norm": null,
          "value": "true",
          "line": 2469,
          "bound": null
        },
        {
          "cond": "trans.state_id() != DEAD",
          "norm": "DEAD != trans.state_id()",
          "value": "false",
          "line": 2470,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        12,
        18,
        1,
        2,
        3,
        19,
        20,
        21,
        22,
        23,
        24,
        26,
        28,
        29
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "self.cur matches Some(t)",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "self.cur matches Some(t)",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "prev_trans == trans",
          "norm": null,
          "value": "false",
          "line": 2460,
          "bound": null
        },
        {
          "cond": "prev_trans.state_id() != DEAD",
          "norm": "DEAD != prev_trans.state_id()",
          "value": "true",
          "line": 2464,
          "bound": null
        }
      ],
      "ret": "Some((prev_start, prev_end, prev_trans))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        13,
        14,
        15,
        16,
        29
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "self.cur matches Some(t)",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "self.cur matches Some(t)",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "prev_trans == trans",
          "norm": null,
          "value": "false",
          "line": 2460,
          "bound": null
        },
        {
          "cond": "prev_trans.state_id() != DEAD",
          "norm": "DEAD != prev_trans.state_id()",
          "value": "false",
          "line": 2464,
          "bound": null
        },
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "let Some((start, end, trans)) = self.cur.take()",
          "norm": null,
          "value": "true",
          "line": 2469,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        13,
        14,
        15,
        17,
        18,
        1,
        2,
        3,
        19,
        20,
        27,
        28,
        29
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "self.cur matches Some(t)",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "self.cur matches Some(t)",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "prev_trans == trans",
          "norm": null,
          "value": "false",
          "line": 2460,
          "bound": null
        },
        {
          "cond": "prev_trans.state_id() != DEAD",
          "norm": "DEAD != prev_trans.state_id()",
          "value": "false",
          "line": 2464,
          "bound": null
        },
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "let Some((start, end, trans)) = self.cur.take()",
          "norm": null,
          "value": "true",
          "line": 2469,
          "bound": null
        },
        {
          "cond": "trans.state_id() != DEAD",
          "norm": "DEAD != trans.state_id()",
          "value": "true",
          "line": 2470,
          "bound": null
        }
      ],
      "ret": "Some((start, end, trans))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        13,
        14,
        15,
        17,
        18,
        1,
        2,
        3,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        29
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "self.cur matches Some(t)",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "self.cur matches Some(t)",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "prev_trans == trans",
          "norm": null,
          "value": "false",
          "line": 2460,
          "bound": null
        },
        {
          "cond": "prev_trans.state_id() != DEAD",
          "norm": "DEAD != prev_trans.state_id()",
          "value": "false",
          "line": 2464,
          "bound": null
        },
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "let Some((start, end, trans)) = self.cur.take()",
          "norm": null,
          "value": "true",
          "line": 2469,
          "bound": null
        },
        {
          "cond": "trans.state_id() != DEAD",
          "norm": "DEAD != trans.state_id()",
          "value": "false",
          "line": 2470,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        13,
        14,
        15,
        17,
        18,
        1,
        2,
        3,
        19,
        20,
        21,
        22,
        23,
        24,
        26,
        28,
        29
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "self.cur matches None",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "let Some((start, end, trans)) = self.cur.take()",
          "norm": null,
          "value": "true",
          "line": 2469,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        1,
        2,
        3,
        19,
        20,
        27,
        28,
        29
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "self.cur matches None",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "let Some((start, end, trans)) = self.cur.take()",
          "norm": null,
          "value": "true",
          "line": 2469,
          "bound": null
        },
        {
          "cond": "trans.state_id() != DEAD",
          "norm": "DEAD != trans.state_id()",
          "value": "true",
          "line": 2470,
          "bound": null
        }
      ],
      "ret": "Some((start, end, trans))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        1,
        2,
        3,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        29
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "self.cur matches None",
          "norm": null,
          "value": "true",
          "line": 2453,
          "bound": null
        },
        {
          "cond": "let Some((b, &trans)) = self.it.next()",
          "norm": null,
          "value": "true",
          "line": 2449,
          "bound": null
        },
        {
          "cond": "let Some((start, end, trans)) = self.cur.take()",
          "norm": null,
          "value": "true",
          "line": 2469,
          "bound": null
        },
        {
          "cond": "trans.state_id() != DEAD",
          "norm": "DEAD != trans.state_id()",
          "value": "false",
          "line": 2470,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        1,
        2,
        3,
        19,
        20,
        21,
        22,
        23,
        24,
        26,
        28,
        29
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}