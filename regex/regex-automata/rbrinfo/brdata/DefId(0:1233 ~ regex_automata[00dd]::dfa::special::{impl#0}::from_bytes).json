{
  "name": "regex_automata::dfa::special::{impl#0}::from_bytes",
  "mod_info": {
    "name": "dfa::special",
    "loc": "regex-automata/src/dfa/mod.rs:358:1:358:13"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/special.rs:223:5:258:6",
  "doc": "/// Deserialize the given bytes into special state ranges. If the slice\n/// given is not big enough, then this returns an error. Similarly, if\n/// any of the expected invariants around special state ranges aren't\n/// upheld, an error is returned. Note that this does not guarantee that\n/// the information returned is correct.\n///\n/// Upon success, this returns the number of bytes read in addition to the\n/// special state IDs themselves.\n",
  "code": [
    "pub(crate) fn from_bytes(",
    "    mut slice: &[u8],",
    ") -> Result<(Special, usize), DeserializeError> {",
    "    wire::check_slice_len(slice, 8 * StateID::SIZE, \"special states\")?;",
    "",
    "    let mut nread = 0;",
    "    let mut read_id = |what| -> Result<StateID, DeserializeError> {",
    "        let (id, nr) = wire::try_read_state_id(slice, what)?;",
    "        nread += nr;",
    "        slice = &slice[StateID::SIZE..];",
    "        Ok(id)",
    "    };",
    "",
    "    let max = read_id(\"special max id\")?;",
    "    let quit_id = read_id(\"special quit id\")?;",
    "    let min_match = read_id(\"special min match id\")?;",
    "    let max_match = read_id(\"special max match id\")?;",
    "    let min_accel = read_id(\"special min accel id\")?;",
    "    let max_accel = read_id(\"special max accel id\")?;",
    "    let min_start = read_id(\"special min start id\")?;",
    "    let max_start = read_id(\"special max start id\")?;",
    "",
    "    let special = Special {",
    "        max,",
    "        quit_id,",
    "        min_match,",
    "        max_match,",
    "        min_accel,",
    "        max_accel,",
    "        min_start,",
    "        max_start,",
    "    };",
    "    special.validate()?;",
    "    assert_eq!(nread, special.write_to_len());",
    "    Ok((special, nread))",
    "}"
  ],
  "size": {
    "chain": 12,
    "contra": 0,
    "min_set": 12
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 8 * StateID::SIZE, \"special states\")?",
          "norm": null,
          "value": "Err/None",
          "line": 226,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        8,
        83
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 8 * StateID::SIZE, \"special states\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 226,
          "bound": null
        },
        {
          "cond": "read_id(\"special max id\")?",
          "norm": null,
          "value": "Err/None",
          "line": 236,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        12,
        14,
        15,
        82,
        83
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 8 * StateID::SIZE, \"special states\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 226,
          "bound": null
        },
        {
          "cond": "read_id(\"special max id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 236,
          "bound": null
        },
        {
          "cond": "read_id(\"special quit id\")?",
          "norm": null,
          "value": "Err/None",
          "line": 237,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        13,
        16,
        17,
        19,
        21,
        22,
        81,
        82,
        83
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 8 * StateID::SIZE, \"special states\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 226,
          "bound": null
        },
        {
          "cond": "read_id(\"special max id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 236,
          "bound": null
        },
        {
          "cond": "read_id(\"special quit id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 237,
          "bound": null
        },
        {
          "cond": "read_id(\"special min match id\")?",
          "norm": null,
          "value": "Err/None",
          "line": 238,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        13,
        16,
        17,
        20,
        23,
        24,
        26,
        28,
        29,
        80,
        81,
        82,
        83
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 8 * StateID::SIZE, \"special states\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 226,
          "bound": null
        },
        {
          "cond": "read_id(\"special max id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 236,
          "bound": null
        },
        {
          "cond": "read_id(\"special quit id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 237,
          "bound": null
        },
        {
          "cond": "read_id(\"special min match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 238,
          "bound": null
        },
        {
          "cond": "read_id(\"special max match id\")?",
          "norm": null,
          "value": "Err/None",
          "line": 239,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        13,
        16,
        17,
        20,
        23,
        24,
        27,
        30,
        31,
        33,
        35,
        36,
        79,
        80,
        81,
        82,
        83
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 8 * StateID::SIZE, \"special states\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 226,
          "bound": null
        },
        {
          "cond": "read_id(\"special max id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 236,
          "bound": null
        },
        {
          "cond": "read_id(\"special quit id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 237,
          "bound": null
        },
        {
          "cond": "read_id(\"special min match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 238,
          "bound": null
        },
        {
          "cond": "read_id(\"special max match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 239,
          "bound": null
        },
        {
          "cond": "read_id(\"special min accel id\")?",
          "norm": null,
          "value": "Err/None",
          "line": 240,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        13,
        16,
        17,
        20,
        23,
        24,
        27,
        30,
        31,
        34,
        37,
        38,
        40,
        42,
        43,
        78,
        79,
        80,
        81,
        82,
        83
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 8 * StateID::SIZE, \"special states\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 226,
          "bound": null
        },
        {
          "cond": "read_id(\"special max id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 236,
          "bound": null
        },
        {
          "cond": "read_id(\"special quit id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 237,
          "bound": null
        },
        {
          "cond": "read_id(\"special min match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 238,
          "bound": null
        },
        {
          "cond": "read_id(\"special max match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 239,
          "bound": null
        },
        {
          "cond": "read_id(\"special min accel id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 240,
          "bound": null
        },
        {
          "cond": "read_id(\"special max accel id\")?",
          "norm": null,
          "value": "Err/None",
          "line": 241,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        13,
        16,
        17,
        20,
        23,
        24,
        27,
        30,
        31,
        34,
        37,
        38,
        41,
        44,
        45,
        47,
        49,
        50,
        77,
        78,
        79,
        80,
        81,
        82,
        83
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 8 * StateID::SIZE, \"special states\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 226,
          "bound": null
        },
        {
          "cond": "read_id(\"special max id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 236,
          "bound": null
        },
        {
          "cond": "read_id(\"special quit id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 237,
          "bound": null
        },
        {
          "cond": "read_id(\"special min match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 238,
          "bound": null
        },
        {
          "cond": "read_id(\"special max match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 239,
          "bound": null
        },
        {
          "cond": "read_id(\"special min accel id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 240,
          "bound": null
        },
        {
          "cond": "read_id(\"special max accel id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 241,
          "bound": null
        },
        {
          "cond": "read_id(\"special min start id\")?",
          "norm": null,
          "value": "Err/None",
          "line": 242,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        13,
        16,
        17,
        20,
        23,
        24,
        27,
        30,
        31,
        34,
        37,
        38,
        41,
        44,
        45,
        48,
        51,
        52,
        54,
        56,
        57,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 8 * StateID::SIZE, \"special states\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 226,
          "bound": null
        },
        {
          "cond": "read_id(\"special max id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 236,
          "bound": null
        },
        {
          "cond": "read_id(\"special quit id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 237,
          "bound": null
        },
        {
          "cond": "read_id(\"special min match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 238,
          "bound": null
        },
        {
          "cond": "read_id(\"special max match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 239,
          "bound": null
        },
        {
          "cond": "read_id(\"special min accel id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 240,
          "bound": null
        },
        {
          "cond": "read_id(\"special max accel id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 241,
          "bound": null
        },
        {
          "cond": "read_id(\"special min start id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 242,
          "bound": null
        },
        {
          "cond": "read_id(\"special max start id\")?",
          "norm": null,
          "value": "Err/None",
          "line": 243,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        13,
        16,
        17,
        20,
        23,
        24,
        27,
        30,
        31,
        34,
        37,
        38,
        41,
        44,
        45,
        48,
        51,
        52,
        55,
        58,
        59,
        61,
        63,
        64,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 8 * StateID::SIZE, \"special states\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 226,
          "bound": null
        },
        {
          "cond": "read_id(\"special max id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 236,
          "bound": null
        },
        {
          "cond": "read_id(\"special quit id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 237,
          "bound": null
        },
        {
          "cond": "read_id(\"special min match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 238,
          "bound": null
        },
        {
          "cond": "read_id(\"special max match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 239,
          "bound": null
        },
        {
          "cond": "read_id(\"special min accel id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 240,
          "bound": null
        },
        {
          "cond": "read_id(\"special max accel id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 241,
          "bound": null
        },
        {
          "cond": "read_id(\"special min start id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 242,
          "bound": null
        },
        {
          "cond": "read_id(\"special max start id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 243,
          "bound": null
        },
        {
          "cond": "special.validate()?",
          "norm": null,
          "value": "Err/None",
          "line": 255,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        13,
        16,
        17,
        20,
        23,
        24,
        27,
        30,
        31,
        34,
        37,
        38,
        41,
        44,
        45,
        48,
        51,
        52,
        55,
        58,
        59,
        62,
        65,
        66,
        68,
        70,
        71,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 8 * StateID::SIZE, \"special states\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 226,
          "bound": null
        },
        {
          "cond": "read_id(\"special max id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 236,
          "bound": null
        },
        {
          "cond": "read_id(\"special quit id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 237,
          "bound": null
        },
        {
          "cond": "read_id(\"special min match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 238,
          "bound": null
        },
        {
          "cond": "read_id(\"special max match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 239,
          "bound": null
        },
        {
          "cond": "read_id(\"special min accel id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 240,
          "bound": null
        },
        {
          "cond": "read_id(\"special max accel id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 241,
          "bound": null
        },
        {
          "cond": "read_id(\"special min start id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 242,
          "bound": null
        },
        {
          "cond": "read_id(\"special max start id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 243,
          "bound": null
        },
        {
          "cond": "special.validate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 255,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        }
      ],
      "ret": "Ok((special, nread))",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        13,
        16,
        17,
        20,
        23,
        24,
        27,
        30,
        31,
        34,
        37,
        38,
        41,
        44,
        45,
        48,
        51,
        52,
        55,
        58,
        59,
        62,
        65,
        66,
        69,
        72,
        73,
        83
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "wire::check_slice_len(slice, 8 * StateID::SIZE, \"special states\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 226,
          "bound": null
        },
        {
          "cond": "read_id(\"special max id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 236,
          "bound": null
        },
        {
          "cond": "read_id(\"special quit id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 237,
          "bound": null
        },
        {
          "cond": "read_id(\"special min match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 238,
          "bound": null
        },
        {
          "cond": "read_id(\"special max match id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 239,
          "bound": null
        },
        {
          "cond": "read_id(\"special min accel id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 240,
          "bound": null
        },
        {
          "cond": "read_id(\"special max accel id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 241,
          "bound": null
        },
        {
          "cond": "read_id(\"special min start id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 242,
          "bound": null
        },
        {
          "cond": "read_id(\"special max start id\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 243,
          "bound": null
        },
        {
          "cond": "special.validate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 255,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        13,
        16,
        17,
        20,
        23,
        24,
        27,
        30,
        31,
        34,
        37,
        38,
        41,
        44,
        45,
        48,
        51,
        52,
        55,
        58,
        59,
        62,
        65,
        66,
        69,
        72,
        74,
        84
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}