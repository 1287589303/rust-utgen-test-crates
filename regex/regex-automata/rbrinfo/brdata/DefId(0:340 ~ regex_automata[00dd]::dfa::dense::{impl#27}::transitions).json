{
  "name": "regex_automata::dfa::dense::{impl#27}::transitions",
  "mod_info": {
    "name": "dfa::dense",
    "loc": "regex-automata/src/dfa/mod.rs:337:1:337:15"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/dense.rs:4791:5:4796:6",
  "doc": "/// Return an iterator over all transitions in this state. This yields\n/// a number of transitions equivalent to the alphabet length of the\n/// corresponding DFA.\n///\n/// Each transition is represented by a tuple. The first element is\n/// the input byte for that transition and the second element is the\n/// transitions itself.\n",
  "code": [
    "pub(crate) fn transitions(&self) -> StateTransitionIter<'_> {",
    "    StateTransitionIter {",
    "        len: self.transitions.len(),",
    "        it: self.transitions.iter().enumerate(),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "StateTransitionIter {\n            len: self.transitions.len(),\n            it: self.transitions.iter().enumerate(),\n        }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}