{
  "name": "regex_automata::dfa::accel::find_fwd",
  "mod_info": {
    "name": "dfa::accel",
    "loc": "regex-automata/src/dfa/mod.rs:346:1:346:22"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/accel.rs:94:1:108:2",
  "doc": "/// Search for between 1 and 3 needle bytes in the given haystack, starting the\n/// search at the given position. If `needles` has a length other than 1-3,\n/// then this panics.\n",
  "code": [
    "pub(crate) fn find_fwd(",
    "    needles: &[u8],",
    "    haystack: &[u8],",
    "    at: usize,",
    ") -> Option<usize> {",
    "    let bs = needles;",
    "    let i = match needles.len() {",
    "        1 => memchr::memchr(bs[0], &haystack[at..])?,",
    "        2 => memchr::memchr2(bs[0], bs[1], &haystack[at..])?,",
    "        3 => memchr::memchr3(bs[0], bs[1], bs[2], &haystack[at..])?,",
    "        0 => panic!(\"cannot find with empty needles\"),",
    "        n => panic!(\"invalid needles length: {}\", n),",
    "    };",
    "    Some(at + i)",
    "}"
  ],
  "size": {
    "chain": 8,
    "contra": 0,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "needles.len() matches 2",
          "norm": null,
          "value": "true",
          "line": 102,
          "bound": null
        },
        {
          "cond": "needles.len() matches 0",
          "norm": null,
          "value": "true",
          "line": 104,
          "bound": null
        },
        {
          "cond": "needles.len() matches 1",
          "norm": null,
          "value": "true",
          "line": 101,
          "bound": null
        },
        {
          "cond": "needles.len() matches 3",
          "norm": null,
          "value": "true",
          "line": 103,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        42,
        43,
        48
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "needles.len() matches 0",
          "norm": null,
          "value": "true",
          "line": 104,
          "bound": null
        },
        {
          "cond": "needles.len() matches 0",
          "norm": null,
          "value": "true",
          "line": 100,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        40,
        41,
        48
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "needles.len() matches 3",
          "norm": null,
          "value": "true",
          "line": 103,
          "bound": null
        },
        {
          "cond": "needles.len() matches 3",
          "norm": null,
          "value": "true",
          "line": 100,
          "bound": null
        },
        {
          "cond": "memchr::memchr3(bs[0], bs[1], bs[2], &haystack[at..])?",
          "norm": null,
          "value": "Err/None",
          "line": 103,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        36,
        38,
        39,
        46,
        47
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "needles.len() matches 3",
          "norm": null,
          "value": "true",
          "line": 103,
          "bound": null
        },
        {
          "cond": "needles.len() matches 3",
          "norm": null,
          "value": "true",
          "line": 100,
          "bound": null
        },
        {
          "cond": "memchr::memchr3(bs[0], bs[1], bs[2], &haystack[at..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 103,
          "bound": null
        }
      ],
      "ret": "Some(at + i)",
      "path": [
        0,
        1,
        5,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        37,
        44,
        45,
        47
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "needles.len() matches 2",
          "norm": null,
          "value": "true",
          "line": 102,
          "bound": null
        },
        {
          "cond": "needles.len() matches 2",
          "norm": null,
          "value": "true",
          "line": 100,
          "bound": null
        },
        {
          "cond": "memchr::memchr2(bs[0], bs[1], &haystack[at..])?",
          "norm": null,
          "value": "Err/None",
          "line": 102,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        17,
        18,
        19,
        20,
        21,
        22,
        24,
        26,
        27,
        46,
        47
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "needles.len() matches 2",
          "norm": null,
          "value": "true",
          "line": 102,
          "bound": null
        },
        {
          "cond": "needles.len() matches 2",
          "norm": null,
          "value": "true",
          "line": 100,
          "bound": null
        },
        {
          "cond": "memchr::memchr2(bs[0], bs[1], &haystack[at..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 102,
          "bound": null
        }
      ],
      "ret": "Some(at + i)",
      "path": [
        0,
        1,
        4,
        17,
        18,
        19,
        20,
        21,
        22,
        25,
        44,
        45,
        47
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "needles.len() matches 1",
          "norm": null,
          "value": "true",
          "line": 101,
          "bound": null
        },
        {
          "cond": "needles.len() matches 1",
          "norm": null,
          "value": "true",
          "line": 100,
          "bound": null
        },
        {
          "cond": "memchr::memchr(bs[0], &haystack[at..])?",
          "norm": null,
          "value": "Err/None",
          "line": 101,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        7,
        8,
        9,
        10,
        11,
        13,
        15,
        16,
        46,
        47
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "needles.len() matches 1",
          "norm": null,
          "value": "true",
          "line": 101,
          "bound": null
        },
        {
          "cond": "needles.len() matches 1",
          "norm": null,
          "value": "true",
          "line": 100,
          "bound": null
        },
        {
          "cond": "memchr::memchr(bs[0], &haystack[at..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 101,
          "bound": null
        }
      ],
      "ret": "Some(at + i)",
      "path": [
        0,
        1,
        3,
        7,
        8,
        9,
        10,
        11,
        14,
        44,
        45,
        47
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}