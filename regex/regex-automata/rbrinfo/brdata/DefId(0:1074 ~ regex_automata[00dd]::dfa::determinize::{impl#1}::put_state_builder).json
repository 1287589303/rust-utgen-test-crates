{
  "name": "regex_automata::dfa::determinize::{impl#1}::put_state_builder",
  "mod_info": {
    "name": "dfa::determinize",
    "loc": "regex-automata/src/dfa/mod.rs:350:1:350:17"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/determinize.rs:579:5:584:6",
  "doc": "/// Puts the given state builder back into this determinizer for reuse.\n///\n/// Note that building a 'State' from a builder always creates a new\n/// alloc, so callers should always put the builder back.\n",
  "code": [
    "fn put_state_builder(&mut self, builder: StateBuilderNFA) {",
    "    let _ = core::mem::replace(",
    "        &mut self.scratch_state_builder,",
    "        builder.clear(),",
    "    );",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}