{
  "name": "regex_automata::hybrid::regex::{impl#5}::memory_usage",
  "mod_info": {
    "name": "hybrid::regex",
    "loc": "regex-automata/src/hybrid/mod.rs:143:1:143:15"
  },
  "visible": true,
  "loc": "regex-automata/src/hybrid/regex.rs:706:5:708:6",
  "doc": "/// Returns the heap memory usage, in bytes, as a sum of the forward and\n/// reverse lazy DFA caches.\n///\n/// This does **not** include the stack size used up by this cache. To\n/// compute that, use `std::mem::size_of::<Cache>()`.\n",
  "code": [
    "pub fn memory_usage(&self) -> usize {",
    "    self.forward.memory_usage() + self.reverse.memory_usage()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.forward.memory_usage() + self.reverse.memory_usage()",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}