{
  "name": "regex_automata::nfa::thompson::range_trie::{impl#0}::new",
  "mod_info": {
    "name": "nfa::thompson::range_trie",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:70:1:70:16"
  },
  "visible": true,
  "loc": "regex-automata/src/nfa/thompson/range_trie.rs:222:5:233:6",
  "doc": "/// Create a new empty range trie.\n",
  "code": [
    "pub fn new() -> RangeTrie {",
    "    let mut trie = RangeTrie {",
    "        states: vec![],",
    "        free: vec![],",
    "        iter_stack: RefCell::new(vec![]),",
    "        iter_ranges: RefCell::new(vec![]),",
    "        dupe_stack: vec![],",
    "        insert_stack: vec![],",
    "    };",
    "    trie.clear();",
    "    trie",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "trie",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}