{
  "name": "regex_automata::dfa::onepass::{impl#16}::insert",
  "mod_info": {
    "name": "dfa::onepass",
    "loc": "regex-automata/src/dfa/mod.rs:339:1:339:17"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/onepass.rs:2890:5:2893:6",
  "doc": "/// Insert the slot at the given bit index.\n",
  "code": [
    "fn insert(self, slot: usize) -> Slots {",
    "    debug_assert!(slot < Slots::LIMIT);",
    "    Slots(self.0 | (1 << slot.as_u32()))",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "slot < Slots::LIMIT",
          "norm": "Slots::LIMIT > slot",
          "value": "true",
          "line": 2891,
          "bound": null
        }
      ],
      "ret": "Slots(self.0 | (1 << slot.as_u32()))",
      "path": [
        0,
        1,
        2,
        5,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "slot < Slots::LIMIT",
          "norm": "Slots::LIMIT > slot",
          "value": "false",
          "line": 2891,
          "bound": "slot == Slots::LIMIT"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}