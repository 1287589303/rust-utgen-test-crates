{
  "name": "regex_automata::dfa::dense::{impl#19}::write_to_len",
  "mod_info": {
    "name": "dfa::dense",
    "loc": "regex-automata/src/dfa/mod.rs:337:1:337:15"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/dense.rs:4124:5:4132:6",
  "doc": "/// Returns the number of bytes the serialized form of this start ID table\n/// will use.\n",
  "code": [
    "fn write_to_len(&self) -> usize {",
    "    self.kind.write_to_len()",
    "    + self.start_map.write_to_len()",
    "    + size_of::<u32>() // stride",
    "    + size_of::<u32>() // # patterns",
    "    + size_of::<u32>() // universal unanchored start",
    "    + size_of::<u32>() // universal anchored start",
    "    + (self.table().len() * StateID::SIZE)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.kind.write_to_len()\n        + self.start_map.write_to_len()\n        + size_of::<u32>() // stride\n        + size_of::<u32>() // # patterns\n        + size_of::<u32>() // universal unanchored start\n        + size_of::<u32>() // universal anchored start\n        + (self.table().len() * StateID::SIZE)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}