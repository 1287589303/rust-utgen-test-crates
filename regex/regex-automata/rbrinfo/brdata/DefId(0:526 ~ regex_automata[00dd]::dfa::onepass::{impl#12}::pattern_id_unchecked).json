{
  "name": "regex_automata::dfa::onepass::{impl#12}::pattern_id_unchecked",
  "mod_info": {
    "name": "dfa::onepass",
    "loc": "regex-automata/src/dfa/mod.rs:339:1:339:17"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/onepass.rs:2721:5:2724:6",
  "doc": "/// Returns the pattern ID without checking whether it's valid. If this is\n/// called and there is no pattern ID in this `PatternEpsilons`, then this\n/// will likely produce an incorrect result or possibly even a panic or\n/// an overflow. But safety will not be violated.\n///\n/// This is useful when you know a particular state is a match state. If\n/// it's a match state, then it must have a pattern ID.\n",
  "code": [
    "fn pattern_id_unchecked(self) -> PatternID {",
    "    let pid = self.0 >> PatternEpsilons::PATTERN_ID_SHIFT;",
    "    PatternID::new_unchecked(pid.as_usize())",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}