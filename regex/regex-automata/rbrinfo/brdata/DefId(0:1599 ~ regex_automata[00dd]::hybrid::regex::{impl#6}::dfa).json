{
  "name": "regex_automata::hybrid::regex::{impl#6}::dfa",
  "mod_info": {
    "name": "hybrid::regex",
    "loc": "regex-automata/src/hybrid/mod.rs:143:1:143:15"
  },
  "visible": true,
  "loc": "regex-automata/src/hybrid/regex.rs:885:5:888:6",
  "doc": "/// Set the lazy DFA compilation configuration for this builder using\n/// [`dfa::Config`].\n///\n/// This permits setting things like whether Unicode word boundaries should\n/// be heuristically supported or settings how the behavior of the cache.\n",
  "code": [
    "pub fn dfa(&mut self, config: dfa::Config) -> &mut Builder {",
    "    self.dfa.configure(config);",
    "    self",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self",
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}