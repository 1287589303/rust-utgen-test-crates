{
  "name": "regex_automata::util::captures::{impl#8}::small_slot_len",
  "mod_info": {
    "name": "util::captures",
    "loc": "regex-automata/src/util/mod.rs:32:1:32:18"
  },
  "visible": false,
  "loc": "regex-automata/src/util/captures.rs:2316:5:2324:6",
  "doc": "/// Return the total number of slots in this capture slot info as a\n/// \"small index.\"\n",
  "code": [
    "fn small_slot_len(&self) -> SmallIndex {",
    "    // Since slots are allocated in order of pattern (starting at 0) and",
    "    // then in order of capture group, it follows that the number of slots",
    "    // is the end of the range of slots for the last pattern. This is",
    "    // true even when the last pattern has no capturing groups, since",
    "    // 'slot_ranges' will still represent it explicitly with an empty",
    "    // range.",
    "    self.slot_ranges.last().map_or(SmallIndex::ZERO, |&(_, end)| end)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}