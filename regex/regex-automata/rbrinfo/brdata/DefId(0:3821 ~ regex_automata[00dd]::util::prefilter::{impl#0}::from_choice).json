{
  "name": "regex_automata::util::prefilter::{impl#0}::from_choice",
  "mod_info": {
    "name": "util::prefilter",
    "loc": "regex-automata/src/util/mod.rs:41:1:41:19"
  },
  "visible": false,
  "loc": "regex-automata/src/util/prefilter/mod.rs:216:5:238:6",
  "doc": "/// This turns a prefilter selection into a `Prefilter`. That is, in turns\n/// the enum given into a trait object.\n",
  "code": [
    "fn from_choice(",
    "    choice: Choice,",
    "    max_needle_len: usize,",
    ") -> Option<Prefilter> {",
    "    #[cfg(not(feature = \"alloc\"))]",
    "    {",
    "        None",
    "    }",
    "    #[cfg(feature = \"alloc\")]",
    "    {",
    "        let pre: Arc<dyn PrefilterI> = match choice {",
    "            Choice::Memchr(p) => Arc::new(p),",
    "            Choice::Memchr2(p) => Arc::new(p),",
    "            Choice::Memchr3(p) => Arc::new(p),",
    "            Choice::Memmem(p) => Arc::new(p),",
    "            Choice::Teddy(p) => Arc::new(p),",
    "            Choice::ByteSet(p) => Arc::new(p),",
    "            Choice::AhoCorasick(p) => Arc::new(p),",
    "        };",
    "        let is_fast = pre.is_fast();",
    "        Some(Prefilter { pre, is_fast, max_needle_len })",
    "    }",
    "}"
  ],
  "size": {
    "chain": 7,
    "contra": 0,
    "min_set": 7
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "choice matches Choice::AhoCorasick(p)",
          "norm": null,
          "value": "true",
          "line": 226,
          "bound": null
        }
      ],
      "ret": "Some(Prefilter { pre, is_fast, max_needle_len })",
      "path": [
        0,
        8,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "choice matches Choice::ByteSet(p)",
          "norm": null,
          "value": "true",
          "line": 226,
          "bound": null
        },
        {
          "cond": "choice matches Choice::ByteSet(p)",
          "norm": null,
          "value": "true",
          "line": 226,
          "bound": null
        }
      ],
      "ret": "Some(Prefilter { pre, is_fast, max_needle_len })",
      "path": [
        0,
        7,
        26,
        27,
        28,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "choice matches Choice::Teddy(p)",
          "norm": null,
          "value": "true",
          "line": 226,
          "bound": null
        },
        {
          "cond": "choice matches Choice::Teddy(p)",
          "norm": null,
          "value": "true",
          "line": 226,
          "bound": null
        }
      ],
      "ret": "Some(Prefilter { pre, is_fast, max_needle_len })",
      "path": [
        0,
        6,
        22,
        23,
        24,
        25,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "choice matches Choice::Memmem(p)",
          "norm": null,
          "value": "true",
          "line": 226,
          "bound": null
        },
        {
          "cond": "choice matches Choice::Memmem(p)",
          "norm": null,
          "value": "true",
          "line": 226,
          "bound": null
        }
      ],
      "ret": "Some(Prefilter { pre, is_fast, max_needle_len })",
      "path": [
        0,
        5,
        18,
        19,
        20,
        21,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "choice matches Choice::Memchr3(p)",
          "norm": null,
          "value": "true",
          "line": 226,
          "bound": null
        },
        {
          "cond": "choice matches Choice::Memchr3(p)",
          "norm": null,
          "value": "true",
          "line": 226,
          "bound": null
        }
      ],
      "ret": "Some(Prefilter { pre, is_fast, max_needle_len })",
      "path": [
        0,
        4,
        15,
        16,
        17,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "choice matches Choice::Memchr2(p)",
          "norm": null,
          "value": "true",
          "line": 226,
          "bound": null
        },
        {
          "cond": "choice matches Choice::Memchr2(p)",
          "norm": null,
          "value": "true",
          "line": 226,
          "bound": null
        }
      ],
      "ret": "Some(Prefilter { pre, is_fast, max_needle_len })",
      "path": [
        0,
        3,
        12,
        13,
        14,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "choice matches Choice::Memchr(p)",
          "norm": null,
          "value": "true",
          "line": 226,
          "bound": null
        },
        {
          "cond": "choice matches Choice::Memchr(p)",
          "norm": null,
          "value": "true",
          "line": 226,
          "bound": null
        }
      ],
      "ret": "Some(Prefilter { pre, is_fast, max_needle_len })",
      "path": [
        0,
        2,
        9,
        10,
        11,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}