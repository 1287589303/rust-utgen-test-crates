{
  "name": "regex_automata::util::search::{impl#3}::contains",
  "mod_info": {
    "name": "util::search",
    "loc": "regex-automata/src/util/mod.rs:53:1:53:23"
  },
  "visible": true,
  "loc": "regex-automata/src/util/search.rs:840:5:842:6",
  "doc": "/// Returns true when the given offset is contained within this span.\n///\n/// Note that an empty span contains no offsets and will always return\n/// false.\n",
  "code": [
    "pub fn contains(&self, offset: usize) -> bool {",
    "    !self.is_empty() && self.start <= offset && offset <= self.end",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "true",
          "line": 841,
          "bound": null
        }
      ],
      "ret": "!self.is_empty() && self.start <= offset && offset <= self.end",
      "path": [
        0,
        1,
        2,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 841,
          "bound": null
        },
        {
          "cond": "self.start <= offset",
          "norm": "offset >= self.start",
          "value": "true",
          "line": 841,
          "bound": "self.start == offset"
        }
      ],
      "ret": "offset <= self.end",
      "path": [
        0,
        1,
        3,
        4,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 841,
          "bound": null
        },
        {
          "cond": "self.start <= offset",
          "norm": "offset >= self.start",
          "value": "false",
          "line": 841,
          "bound": null
        }
      ],
      "ret": "!self.is_empty() && self.start <= offset && offset <= self.end",
      "path": [
        0,
        1,
        3,
        5,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}