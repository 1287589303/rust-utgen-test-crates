{
  "name": "regex_automata::util::search::{impl#12}::must",
  "mod_info": {
    "name": "util::search",
    "loc": "regex-automata/src/util/mod.rs:53:1:53:23"
  },
  "visible": true,
  "loc": "regex-automata/src/util/search.rs:947:5:949:6",
  "doc": "/// Create a new half match from a pattern ID and a byte offset.\n///\n/// This is like [`HalfMatch::new`], but accepts a `usize` instead of a\n/// [`PatternID`]. This panics if the given `usize` is not representable\n/// as a `PatternID`.\n",
  "code": [
    "pub fn must(pattern: usize, offset: usize) -> HalfMatch {",
    "    HalfMatch::new(PatternID::new(pattern).unwrap(), offset)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}