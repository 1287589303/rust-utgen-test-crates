{
  "name": "regex_automata::nfa::thompson::compiler::{impl#7}::set_last_transition",
  "mod_info": {
    "name": "nfa::thompson::compiler",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:60:1:60:14"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/compiler.rs:1868:5:1876:6",
  "doc": "",
  "code": [
    "fn set_last_transition(&mut self, next: StateID) {",
    "    if let Some(last) = self.last.take() {",
    "        self.trans.push(Transition {",
    "            start: last.start,",
    "            end: last.end,",
    "            next,",
    "        });",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(last) = self.last.take()",
          "norm": null,
          "value": "true",
          "line": 1869,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(last) = self.last.take()",
          "norm": null,
          "value": "true",
          "line": 1869,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}