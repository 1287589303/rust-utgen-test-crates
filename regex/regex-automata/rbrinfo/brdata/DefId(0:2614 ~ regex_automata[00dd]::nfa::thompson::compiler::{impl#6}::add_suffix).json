{
  "name": "regex_automata::nfa::thompson::compiler::{impl#6}::add_suffix",
  "mod_info": {
    "name": "nfa::thompson::compiler",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:60:1:60:14"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/compiler.rs:1819:5:1838:6",
  "doc": "",
  "code": [
    "fn add_suffix(&mut self, ranges: &[Utf8Range]) {",
    "    assert!(!ranges.is_empty());",
    "    let last = self",
    "        .state",
    "        .uncompiled",
    "        .len()",
    "        .checked_sub(1)",
    "        .expect(\"non-empty nodes\");",
    "    assert!(self.state.uncompiled[last].last.is_none());",
    "    self.state.uncompiled[last].last = Some(Utf8LastTransition {",
    "        start: ranges[0].start,",
    "        end: ranges[0].end,",
    "    });",
    "    for r in &ranges[1..] {",
    "        self.state.uncompiled.push(Utf8Node {",
    "            trans: vec![],",
    "            last: Some(Utf8LastTransition { start: r.start, end: r.end }),",
    "        });",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 1,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "ranges.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1820,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        27
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "ranges.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "self.state.uncompiled[last].last.is_none()",
          "norm": null,
          "value": "true",
          "line": 1827,
          "bound": null
        },
        {
          "cond": "r in &ranges[1..]",
          "norm": null,
          "value": "true",
          "line": 1832,
          "bound": null
        },
        {
          "cond": "r in &ranges[1..]",
          "norm": null,
          "value": "false",
          "line": 1832,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        21,
        23,
        24,
        25,
        16,
        17,
        18,
        20,
        22
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "ranges.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "self.state.uncompiled[last].last.is_none()",
          "norm": null,
          "value": "true",
          "line": 1827,
          "bound": null
        },
        {
          "cond": "r in &ranges[1..]",
          "norm": null,
          "value": "false",
          "line": 1832,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        20,
        22
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "ranges.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "self.state.uncompiled[last].last.is_none()",
          "norm": null,
          "value": "false",
          "line": 1827,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        8,
        10,
        27
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}