{
  "name": "regex_automata::util::alphabet::{impl#2}::is_singleton",
  "mod_info": {
    "name": "util::alphabet",
    "loc": "regex-automata/src/util/mod.rs:30:1:30:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/alphabet.rs:347:5:349:6",
  "doc": "/// Returns true if and only if every byte in this class maps to its own\n/// equivalence class. Equivalently, there are 257 equivalence classes\n/// and each class contains either exactly one byte or corresponds to the\n/// singleton class containing the \"end of input\" sentinel.\n",
  "code": [
    "pub fn is_singleton(&self) -> bool {",
    "    self.alphabet_len() == 257",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.alphabet_len() == 257",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}