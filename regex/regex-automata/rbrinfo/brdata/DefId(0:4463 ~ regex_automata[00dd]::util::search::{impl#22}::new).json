{
  "name": "regex_automata::util::search::{impl#22}::new",
  "mod_info": {
    "name": "util::search",
    "loc": "regex-automata/src/util/mod.rs:53:1:53:23"
  },
  "visible": true,
  "loc": "regex-automata/src/util/search.rs:1793:5:1802:6",
  "doc": "/// Create a new error value with the given kind.\n///\n/// This is a more verbose version of the kind-specific constructors,\n/// e.g., `MatchError::quit`.\n",
  "code": [
    "pub fn new(kind: MatchErrorKind) -> MatchError {",
    "    #[cfg(feature = \"alloc\")]",
    "    {",
    "        MatchError(alloc::boxed::Box::new(kind))",
    "    }",
    "    #[cfg(not(feature = \"alloc\"))]",
    "    {",
    "        MatchError(kind)",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "MatchError(alloc::boxed::Box::new(kind))",
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}