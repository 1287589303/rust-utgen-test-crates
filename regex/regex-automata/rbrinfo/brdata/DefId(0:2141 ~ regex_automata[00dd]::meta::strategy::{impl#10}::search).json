{
  "name": "regex_automata::meta::strategy::{impl#10}::search",
  "mod_info": {
    "name": "meta::strategy",
    "loc": "regex-automata/src/meta/mod.rs:61:1:61:14"
  },
  "visible": false,
  "loc": "regex-automata/src/meta/strategy.rs:1783:5:1798:6",
  "doc": "",
  "code": [
    "fn search(&self, cache: &mut Cache, input: &Input<'_>) -> Option<Match> {",
    "    if input.get_anchored().is_anchored() {",
    "        return self.core.search(cache, input);",
    "    }",
    "    match self.try_search_full(cache, input) {",
    "        Err(RetryError::Quadratic(_err)) => {",
    "            trace!(\"reverse inner optimization failed: {}\", _err);",
    "            self.core.search(cache, input)",
    "        }",
    "        Err(RetryError::Fail(_err)) => {",
    "            trace!(\"reverse inner fast search failed: {}\", _err);",
    "            self.core.search_nofail(cache, input)",
    "        }",
    "        Ok(matornot) => matornot,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "input.get_anchored().is_anchored()",
          "norm": null,
          "value": "true",
          "line": 1784,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "input.get_anchored().is_anchored()",
          "norm": null,
          "value": "false",
          "line": 1784,
          "bound": null
        },
        {
          "cond": "self.try_search_full(cache, input) matches Err(RetryError::Quadratic(_err)) or Err(RetryError::Fail(_err))",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        },
        {
          "cond": "self.try_search_full(cache, input) matches Err(RetryError::Quadratic(_err)) or Err(RetryError::Fail(_err))",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        },
        {
          "cond": "self.try_search_full(cache, input) matches Err(RetryError::Fail(_err))",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        6,
        8,
        10,
        14,
        15,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "input.get_anchored().is_anchored()",
          "norm": null,
          "value": "false",
          "line": 1784,
          "bound": null
        },
        {
          "cond": "self.try_search_full(cache, input) matches Err(RetryError::Quadratic(_err)) or Err(RetryError::Fail(_err))",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        },
        {
          "cond": "self.try_search_full(cache, input) matches Ok(matornot)",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        },
        {
          "cond": "self.try_search_full(cache, input) matches Err(RetryError::Quadratic(_err))",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        6,
        8,
        9,
        12,
        13,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "input.get_anchored().is_anchored()",
          "norm": null,
          "value": "false",
          "line": 1784,
          "bound": null
        },
        {
          "cond": "self.try_search_full(cache, input) matches Ok(matornot)",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        }
      ],
      "ret": "matornot",
      "path": [
        0,
        1,
        2,
        5,
        6,
        11,
        16,
        17
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}