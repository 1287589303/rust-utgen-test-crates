{
  "name": "regex_automata::util::pool::inner::{impl#4}::guard_stack",
  "mod_info": {
    "name": "util::pool::inner",
    "loc": "regex-automata/src/util/pool.rs:235:1:793:2"
  },
  "visible": false,
  "loc": "regex-automata/src/util/pool.rs:636:9:638:10",
  "doc": "/// Create a guard that contains a value from the pool's stack.\n",
  "code": [
    "fn guard_stack(&self, value: Box<T>) -> PoolGuard<'_, T, F> {",
    "    PoolGuard { pool: self, value: Ok(value), discard: false }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "PoolGuard { pool: self, value: Ok(value), discard: false }",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}