{
  "name": "regex_automata::hybrid::dfa::{impl#0}::create_cache",
  "mod_info": {
    "name": "hybrid::dfa",
    "loc": "regex-automata/src/hybrid/mod.rs:140:1:140:13"
  },
  "visible": true,
  "loc": "regex-automata/src/hybrid/dfa.rs:298:5:300:6",
  "doc": "/// Create a new cache for this lazy DFA.\n///\n/// The cache returned should only be used for searches for this\n/// lazy DFA. If you want to reuse the cache for another DFA, then\n/// you must call [`Cache::reset`] with that DFA (or, equivalently,\n/// [`DFA::reset_cache`]).\n",
  "code": [
    "pub fn create_cache(&self) -> Cache {",
    "    Cache::new(self)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}