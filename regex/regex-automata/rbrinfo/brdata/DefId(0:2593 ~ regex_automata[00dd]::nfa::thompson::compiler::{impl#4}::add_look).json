{
  "name": "regex_automata::nfa::thompson::compiler::{impl#4}::add_look",
  "mod_info": {
    "name": "nfa::thompson::compiler",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:60:1:60:14"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/compiler.rs:1648:5:1653:6",
  "doc": "",
  "code": [
    "fn add_look(&self, mut look: Look) -> Result<StateID, BuildError> {",
    "    if self.is_reverse() {",
    "        look = look.reversed();",
    "    }",
    "    self.builder.borrow_mut().add_look(StateID::ZERO, look)",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.is_reverse()",
          "norm": null,
          "value": "true",
          "line": 1649,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        6,
        7,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.is_reverse()",
          "norm": null,
          "value": "false",
          "line": 1649,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}