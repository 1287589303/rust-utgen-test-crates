{
  "name": "regex_automata::dfa::dense::{impl#27}::accelerate",
  "mod_info": {
    "name": "dfa::dense",
    "loc": "regex-automata/src/dfa/mod.rs:337:1:337:15"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/dense.rs:4822:5:4843:6",
  "doc": "/// Analyzes this state to determine whether it can be accelerated. If so,\n/// it returns an accelerator that contains at least one byte.\n",
  "code": [
    "fn accelerate(&self, classes: &ByteClasses) -> Option<Accel> {",
    "    // We just try to add bytes to our accelerator. Once adding fails",
    "    // (because we've added too many bytes), then give up.",
    "    let mut accel = Accel::new();",
    "    for (class, id) in self.transitions() {",
    "        if id == self.id() {",
    "            continue;",
    "        }",
    "        for unit in classes.elements(class) {",
    "            if let Some(byte) = unit.as_u8() {",
    "                if !accel.add(byte) {",
    "                    return None;",
    "                }",
    "            }",
    "        }",
    "    }",
    "    if accel.is_empty() {",
    "        None",
    "    } else {",
    "        Some(accel)",
    "    }",
    "}"
  ],
  "size": {
    "chain": 11,
    "contra": 8,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "true",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "id == self.id()",
          "norm": null,
          "value": "true",
          "line": 4827,
          "bound": null
        },
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "false",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "accel.is_empty()",
          "norm": null,
          "value": "true",
          "line": 4838,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        4,
        5,
        6,
        8,
        10,
        32,
        33,
        35,
        36
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "true",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "id == self.id()",
          "norm": null,
          "value": "true",
          "line": 4827,
          "bound": null
        },
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "false",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "accel.is_empty()",
          "norm": null,
          "value": "false",
          "line": 4838,
          "bound": null
        }
      ],
      "ret": "Some(accel)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        4,
        5,
        6,
        8,
        10,
        32,
        34,
        35,
        36
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "true",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "id == self.id()",
          "norm": null,
          "value": "false",
          "line": 4827,
          "bound": null
        },
        {
          "cond": "unit in classes.elements(class)",
          "norm": null,
          "value": "true",
          "line": 4830,
          "bound": null
        },
        {
          "cond": "let Some(byte) = unit.as_u8()",
          "norm": null,
          "value": "true",
          "line": 4831,
          "bound": null
        },
        {
          "cond": "unit in classes.elements(class)",
          "norm": null,
          "value": "false",
          "line": 4830,
          "bound": null
        },
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "false",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "accel.is_empty()",
          "norm": null,
          "value": "true",
          "line": 4838,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        30,
        31,
        17,
        18,
        19,
        21,
        23,
        4,
        5,
        6,
        8,
        10,
        32,
        33,
        35,
        36
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "true",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "id == self.id()",
          "norm": null,
          "value": "false",
          "line": 4827,
          "bound": null
        },
        {
          "cond": "unit in classes.elements(class)",
          "norm": null,
          "value": "true",
          "line": 4830,
          "bound": null
        },
        {
          "cond": "let Some(byte) = unit.as_u8()",
          "norm": null,
          "value": "true",
          "line": 4831,
          "bound": null
        },
        {
          "cond": "unit in classes.elements(class)",
          "norm": null,
          "value": "false",
          "line": 4830,
          "bound": null
        },
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "false",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "accel.is_empty()",
          "norm": null,
          "value": "false",
          "line": 4838,
          "bound": null
        }
      ],
      "ret": "Some(accel)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        30,
        31,
        17,
        18,
        19,
        21,
        23,
        4,
        5,
        6,
        8,
        10,
        32,
        34,
        35,
        36
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "true",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "id == self.id()",
          "norm": null,
          "value": "false",
          "line": 4827,
          "bound": null
        },
        {
          "cond": "unit in classes.elements(class)",
          "norm": null,
          "value": "true",
          "line": 4830,
          "bound": null
        },
        {
          "cond": "let Some(byte) = unit.as_u8()",
          "norm": null,
          "value": "true",
          "line": 4831,
          "bound": null
        },
        {
          "cond": "accel.add(byte)",
          "norm": null,
          "value": "true",
          "line": 4832,
          "bound": null
        },
        {
          "cond": "unit in classes.elements(class)",
          "norm": null,
          "value": "false",
          "line": 4830,
          "bound": null
        },
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "false",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "accel.is_empty()",
          "norm": null,
          "value": "true",
          "line": 4838,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        25,
        26,
        27,
        28,
        31,
        17,
        18,
        19,
        21,
        23,
        4,
        5,
        6,
        8,
        10,
        32,
        33,
        35,
        36
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "true",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "id == self.id()",
          "norm": null,
          "value": "false",
          "line": 4827,
          "bound": null
        },
        {
          "cond": "unit in classes.elements(class)",
          "norm": null,
          "value": "true",
          "line": 4830,
          "bound": null
        },
        {
          "cond": "let Some(byte) = unit.as_u8()",
          "norm": null,
          "value": "true",
          "line": 4831,
          "bound": null
        },
        {
          "cond": "accel.add(byte)",
          "norm": null,
          "value": "true",
          "line": 4832,
          "bound": null
        },
        {
          "cond": "unit in classes.elements(class)",
          "norm": null,
          "value": "false",
          "line": 4830,
          "bound": null
        },
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "false",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "accel.is_empty()",
          "norm": null,
          "value": "false",
          "line": 4838,
          "bound": null
        }
      ],
      "ret": "Some(accel)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        25,
        26,
        27,
        28,
        31,
        17,
        18,
        19,
        21,
        23,
        4,
        5,
        6,
        8,
        10,
        32,
        34,
        35,
        36
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "true",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "id == self.id()",
          "norm": null,
          "value": "false",
          "line": 4827,
          "bound": null
        },
        {
          "cond": "unit in classes.elements(class)",
          "norm": null,
          "value": "true",
          "line": 4830,
          "bound": null
        },
        {
          "cond": "let Some(byte) = unit.as_u8()",
          "norm": null,
          "value": "true",
          "line": 4831,
          "bound": null
        },
        {
          "cond": "accel.add(byte)",
          "norm": null,
          "value": "false",
          "line": 4832,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        14,
        15,
        16,
        17,
        18,
        19,
        22,
        24,
        25,
        26,
        27,
        29,
        36
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "true",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "id == self.id()",
          "norm": null,
          "value": "false",
          "line": 4827,
          "bound": null
        },
        {
          "cond": "unit in classes.elements(class)",
          "norm": null,
          "value": "false",
          "line": 4830,
          "bound": null
        },
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "false",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "accel.is_empty()",
          "norm": null,
          "value": "true",
          "line": 4838,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        14,
        15,
        16,
        17,
        18,
        19,
        21,
        23,
        4,
        5,
        6,
        8,
        10,
        32,
        33,
        35,
        36
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "true",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "id == self.id()",
          "norm": null,
          "value": "false",
          "line": 4827,
          "bound": null
        },
        {
          "cond": "unit in classes.elements(class)",
          "norm": null,
          "value": "false",
          "line": 4830,
          "bound": null
        },
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "false",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "accel.is_empty()",
          "norm": null,
          "value": "false",
          "line": 4838,
          "bound": null
        }
      ],
      "ret": "Some(accel)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        14,
        15,
        16,
        17,
        18,
        19,
        21,
        23,
        4,
        5,
        6,
        8,
        10,
        32,
        34,
        35,
        36
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "false",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "accel.is_empty()",
          "norm": null,
          "value": "true",
          "line": 4838,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        32,
        33,
        35,
        36
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "(class, id) in self.transitions()",
          "norm": null,
          "value": "false",
          "line": 4826,
          "bound": null
        },
        {
          "cond": "accel.is_empty()",
          "norm": null,
          "value": "false",
          "line": 4838,
          "bound": null
        }
      ],
      "ret": "Some(accel)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        32,
        34,
        35,
        36
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}