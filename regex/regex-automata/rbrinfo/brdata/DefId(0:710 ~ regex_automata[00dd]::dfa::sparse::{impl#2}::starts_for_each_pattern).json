{
  "name": "regex_automata::dfa::sparse::{impl#2}::starts_for_each_pattern",
  "mod_info": {
    "name": "dfa::sparse",
    "loc": "regex-automata/src/dfa/mod.rs:343:1:343:16"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/sparse.rs:457:5:459:6",
  "doc": "/// Returns true only if this DFA has starting states for each pattern.\n///\n/// When a DFA has starting states for each pattern, then a search with the\n/// DFA can be configured to only look for anchored matches of a specific\n/// pattern. Specifically, APIs like [`Automaton::try_search_fwd`] can\n/// accept a [`Anchored::Pattern`] if and only if this method returns true.\n/// Otherwise, an error will be returned.\n///\n/// Note that if the DFA is empty, this always returns false.\n",
  "code": [
    "pub fn starts_for_each_pattern(&self) -> bool {",
    "    self.st.pattern_len.is_some()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}