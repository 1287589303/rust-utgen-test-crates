{
  "name": "regex_automata::nfa::thompson::backtrack::{impl#1}::build_many",
  "mod_info": {
    "name": "nfa::thompson::backtrack",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:57:1:57:19"
  },
  "visible": true,
  "loc": "regex-automata/src/nfa/thompson/backtrack.rs:286:5:292:6",
  "doc": "/// Build a `BoundedBacktracker` from the given patterns.\n",
  "code": [
    "pub fn build_many<P: AsRef<str>>(",
    "    &self,",
    "    patterns: &[P],",
    ") -> Result<BoundedBacktracker, BuildError> {",
    "    let nfa = self.thompson.build_many(patterns)?;",
    "    self.build_from_nfa(nfa)",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.thompson.build_many(patterns)?",
          "norm": null,
          "value": "Err/None",
          "line": 290,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        12,
        13,
        14
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.thompson.build_many(patterns)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 290,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        14
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}