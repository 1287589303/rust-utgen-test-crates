{
  "name": "regex_automata::nfa::thompson::nfa::{impl#2}::set_starts",
  "mod_info": {
    "name": "nfa::thompson::nfa",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:66:1:66:9"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/nfa.rs:1392:5:1401:6",
  "doc": "/// Set the starting state identifiers for this NFA.\n///\n/// `start_anchored` and `start_unanchored` may be equivalent. When they\n/// are, then the NFA can only execute anchored searches. This might\n/// occur, for example, for patterns that are unconditionally anchored.\n/// e.g., `^foo`.\n",
  "code": [
    "pub(super) fn set_starts(",
    "    &mut self,",
    "    start_anchored: StateID,",
    "    start_unanchored: StateID,",
    "    start_pattern: &[StateID],",
    ") {",
    "    self.start_anchored = start_anchored;",
    "    self.start_unanchored = start_unanchored;",
    "    self.start_pattern = start_pattern.to_vec();",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}