{
  "name": "regex_automata::util::search::{impl#14}::insert",
  "mod_info": {
    "name": "util::search",
    "loc": "regex-automata/src/util/mod.rs:53:1:53:23"
  },
  "visible": true,
  "loc": "regex-automata/src/util/search.rs:1225:5:1228:6",
  "doc": "/// Insert the given pattern identifier into this set and return `true` if\n/// the given pattern ID was not previously in this set.\n///\n/// If the pattern identifier is already in this set, then this is a no-op.\n///\n/// Use [`PatternSet::try_insert`] for a fallible version of this routine.\n///\n/// # Panics\n///\n/// This panics if this pattern set has insufficient capacity to\n/// store the given pattern ID.\n",
  "code": [
    "pub fn insert(&mut self, pid: PatternID) -> bool {",
    "    self.try_insert(pid)",
    "        .expect(\"PatternSet should have sufficient capacity\")",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}