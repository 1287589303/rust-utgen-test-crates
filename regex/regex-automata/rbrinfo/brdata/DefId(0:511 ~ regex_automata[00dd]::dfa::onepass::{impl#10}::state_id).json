{
  "name": "regex_automata::dfa::onepass::{impl#10}::state_id",
  "mod_info": {
    "name": "dfa::onepass",
    "loc": "regex-automata/src/dfa/mod.rs:339:1:339:17"
  },
  "visible": false,
  "loc": "regex-automata/src/dfa/onepass.rs:2625:5:2633:6",
  "doc": "/// Return the \"next\" state ID that this transition points to.\n",
  "code": [
    "fn state_id(&self) -> StateID {",
    "    // OK because a Transition has a valid StateID in its upper bits by",
    "    // construction. The cast to usize is also correct, even on 16-bit",
    "    // targets because, again, we know the upper bits is a valid StateID,",
    "    // which can never overflow usize on any supported target.",
    "    StateID::new_unchecked(",
    "        (self.0 >> Transition::STATE_ID_SHIFT).as_usize(),",
    "    )",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}