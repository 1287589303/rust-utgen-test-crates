{
  "name": "regex_automata::util::pool::{impl#3}::put",
  "mod_info": {
    "name": "util::pool",
    "loc": "regex-automata/src/util/mod.rs:40:1:40:14"
  },
  "visible": true,
  "loc": "regex-automata/src/util/pool.rs:205:5:207:6",
  "doc": "/// Consumes this guard and puts it back into the pool.\n///\n/// This circumvents the guard's `Drop` implementation. This can be useful\n/// in circumstances where the automatic `Drop` results in poorer codegen,\n/// such as calling non-inlined functions.\n",
  "code": [
    "pub fn put(this: PoolGuard<'_, T, F>) {",
    "    inner::PoolGuard::put(this.0);",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}