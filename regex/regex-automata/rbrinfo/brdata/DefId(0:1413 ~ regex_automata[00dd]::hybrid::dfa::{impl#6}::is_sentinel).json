{
  "name": "regex_automata::hybrid::dfa::{impl#6}::is_sentinel",
  "mod_info": {
    "name": "hybrid::dfa",
    "loc": "regex-automata/src/hybrid/mod.rs:140:1:140:13"
  },
  "visible": false,
  "loc": "regex-automata/src/hybrid/dfa.rs:2722:5:2724:6",
  "doc": "/// Returns true if and only if the given ID corresponds to a \"sentinel\"\n/// state.\n///\n/// A sentinel state is a state that signifies a special condition of\n/// search, and where every transition maps back to itself. See LazyStateID\n/// for more details. Note that start and match states are _not_ sentinels\n/// since they may otherwise be real states with non-trivial transitions.\n/// The purposes of sentinel states is purely to indicate something. Their\n/// transitions are not meant to be followed.\n",
  "code": [
    "fn is_sentinel(&self, id: LazyStateID) -> bool {",
    "    id == self.unknown_id() || id == self.dead_id() || id == self.quit_id()",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "id == self.unknown_id()",
          "norm": null,
          "value": "true",
          "line": 2723,
          "bound": null
        }
      ],
      "ret": "id == self.unknown_id() || id == self.dead_id() || id == self.quit_id()",
      "path": [
        0,
        1,
        2,
        3,
        8,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "id == self.unknown_id()",
          "norm": null,
          "value": "false",
          "line": 2723,
          "bound": null
        },
        {
          "cond": "id == self.dead_id()",
          "norm": null,
          "value": "true",
          "line": 2723,
          "bound": null
        }
      ],
      "ret": "id == self.unknown_id() || id == self.dead_id() || id == self.quit_id()",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "id == self.unknown_id()",
          "norm": null,
          "value": "false",
          "line": 2723,
          "bound": null
        },
        {
          "cond": "id == self.dead_id()",
          "norm": null,
          "value": "false",
          "line": 2723,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}