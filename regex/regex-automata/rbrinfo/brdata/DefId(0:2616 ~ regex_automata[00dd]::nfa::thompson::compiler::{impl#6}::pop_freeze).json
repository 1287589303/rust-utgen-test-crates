{
  "name": "regex_automata::nfa::thompson::compiler::{impl#6}::pop_freeze",
  "mod_info": {
    "name": "nfa::thompson::compiler",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:60:1:60:14"
  },
  "visible": false,
  "loc": "regex-automata/src/nfa/thompson/compiler.rs:1844:5:1848:6",
  "doc": "",
  "code": [
    "fn pop_freeze(&mut self, next: StateID) -> Vec<Transition> {",
    "    let mut uncompiled = self.state.uncompiled.pop().unwrap();",
    "    uncompiled.set_last_transition(next);",
    "    uncompiled.trans",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "uncompiled.trans",
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}