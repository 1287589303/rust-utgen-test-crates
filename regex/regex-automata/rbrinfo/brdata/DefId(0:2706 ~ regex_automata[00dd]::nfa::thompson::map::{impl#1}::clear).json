{
  "name": "regex_automata::nfa::thompson::map::{impl#1}::clear",
  "mod_info": {
    "name": "nfa::thompson::map",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:65:1:65:9"
  },
  "visible": true,
  "loc": "regex-automata/src/nfa/thompson/map.rs:242:5:251:6",
  "doc": "/// Clear this map of all entries, but permit the reuse of allocation\n/// if possible.\n///\n/// This must be called before the map can be used.\n",
  "code": [
    "pub fn clear(&mut self) {",
    "    if self.map.is_empty() {",
    "        self.map = vec![Utf8SuffixEntry::default(); self.capacity];",
    "    } else {",
    "        self.version = self.version.wrapping_add(1);",
    "        if self.version == 0 {",
    "            self.map = vec![Utf8SuffixEntry::default(); self.capacity];",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.map.is_empty()",
          "norm": null,
          "value": "true",
          "line": 243,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        18
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.map.is_empty()",
          "norm": null,
          "value": "false",
          "line": 243,
          "bound": null
        },
        {
          "cond": "self.version == 0",
          "norm": "0 == self.version",
          "value": "false",
          "line": 247,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.map.is_empty()",
          "norm": null,
          "value": "false",
          "line": 243,
          "bound": null
        },
        {
          "cond": "self.version == 0",
          "norm": "0 == self.version",
          "value": "true",
          "line": 247,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        8,
        9,
        16,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}