{
  "name": "regex_automata::nfa::thompson::nfa::{impl#3}::fmt",
  "mod_info": {
    "name": "nfa::thompson::nfa",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:66:1:66:9"
  },
  "visible": true,
  "loc": "regex-automata/src/nfa/thompson/nfa.rs:1460:5:1488:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {",
    "    writeln!(f, \"thompson::NFA(\")?;",
    "    for (sid, state) in self.states.iter().with_state_ids() {",
    "        let status = if sid == self.start_anchored {",
    "            '^'",
    "        } else if sid == self.start_unanchored {",
    "            '>'",
    "        } else {",
    "            ' '",
    "        };",
    "        writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?;",
    "    }",
    "    let pattern_len = self.start_pattern.len();",
    "    if pattern_len > 1 {",
    "        writeln!(f, \"\")?;",
    "        for pid in 0..pattern_len {",
    "            let sid = self.start_pattern[pid];",
    "            writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?;",
    "        }",
    "    }",
    "    writeln!(f, \"\")?;",
    "    writeln!(",
    "        f,",
    "        \"transition equivalence classes: {:?}\",",
    "        self.byte_classes,",
    "    )?;",
    "    writeln!(f, \")\")?;",
    "    Ok(())",
    "}"
  ],
  "size": {
    "chain": 60,
    "contra": 46,
    "min_set": 11
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1461,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        8,
        106
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Err/None",
          "line": 1470,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        40,
        42,
        43,
        106
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1474,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        50,
        52,
        53,
        104,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Err/None",
          "line": 1477,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        73,
        75,
        76,
        104,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1480,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        83,
        85,
        86,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Err/None",
          "line": 1481,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        92,
        94,
        95,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        100,
        102,
        103,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        101,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1480,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        83,
        85,
        86,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Err/None",
          "line": 1481,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        92,
        94,
        95,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        100,
        102,
        103,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        101,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1480,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        83,
        85,
        86,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Err/None",
          "line": 1481,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        92,
        94,
        95,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        100,
        102,
        103,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "true",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        21,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        101,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Err/None",
          "line": 1470,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        40,
        42,
        43,
        106
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1474,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        50,
        52,
        53,
        104,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Err/None",
          "line": 1477,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        73,
        75,
        76,
        104,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1480,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        83,
        85,
        86,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Err/None",
          "line": 1481,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        92,
        94,
        95,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        100,
        102,
        103,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        101,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1480,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        83,
        85,
        86,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Err/None",
          "line": 1481,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        92,
        94,
        95,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        100,
        102,
        103,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        101,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1480,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        83,
        85,
        86,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Err/None",
          "line": 1481,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        92,
        94,
        95,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 30,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        100,
        102,
        103,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 31,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "true",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        101,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 32,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Err/None",
          "line": 1470,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        40,
        42,
        43,
        106
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 33,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1474,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        50,
        52,
        53,
        104,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 34,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Err/None",
          "line": 1477,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        73,
        75,
        76,
        104,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 35,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1480,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        83,
        85,
        86,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 36,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Err/None",
          "line": 1481,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        92,
        94,
        95,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 37,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        100,
        102,
        103,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 38,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        101,
        106
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 39,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1480,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        83,
        85,
        86,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 40,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Err/None",
          "line": 1481,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        92,
        94,
        95,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 41,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        100,
        102,
        103,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 42,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        101,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 43,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1480,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        83,
        85,
        86,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 44,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Err/None",
          "line": 1481,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        92,
        94,
        95,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 45,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        100,
        102,
        103,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 46,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "true",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "sid == self.start_anchored",
          "norm": "self.start_anchored == sid",
          "value": "false",
          "line": 1463,
          "bound": null
        },
        {
          "cond": "sid == self.start_unanchored",
          "norm": "self.start_unanchored == sid",
          "value": "false",
          "line": 1465,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"{}{:06?}: {:?}\", status, sid.as_usize(), state)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1470,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        41,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        101,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 47,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1474,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        50,
        52,
        53,
        104,
        105,
        106
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 48,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Err/None",
          "line": 1477,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        73,
        75,
        76,
        104,
        105,
        106
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 49,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1480,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        83,
        85,
        86,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 50,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Err/None",
          "line": 1481,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        92,
        94,
        95,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 51,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        100,
        102,
        103,
        105,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 52,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "true",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"START({:06?}): {:?}\", pid, sid.as_usize())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1477,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        74,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        101,
        106
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 53,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1480,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        83,
        85,
        86,
        105,
        106
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 54,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Err/None",
          "line": 1481,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        92,
        94,
        95,
        105,
        106
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 55,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        100,
        102,
        103,
        105,
        106
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 56,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "true",
          "line": 1473,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1474,
          "bound": null
        },
        {
          "cond": "pid in 0..pattern_len",
          "norm": null,
          "value": "false",
          "line": 1475,
          "bound": null
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        44,
        45,
        46,
        47,
        48,
        51,
        54,
        55,
        56,
        57,
        59,
        61,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        101,
        106
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 57,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1480,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        83,
        85,
        86,
        105,
        106
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 58,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Err/None",
          "line": 1481,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        92,
        94,
        95,
        105,
        106
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 59,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        100,
        102,
        103,
        105,
        106
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 60,
      "conds": [
        {
          "cond": "writeln!(f, \"thompson::NFA(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1461,
          "bound": null
        },
        {
          "cond": "(sid, state) in self.states.iter().with_state_ids()",
          "norm": null,
          "value": "false",
          "line": 1462,
          "bound": null
        },
        {
          "cond": "pattern_len > 1",
          "norm": "1 < pattern_len",
          "value": "false",
          "line": 1473,
          "bound": "pattern_len == 1"
        },
        {
          "cond": "writeln!(f, \"\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1480,
          "bound": null
        },
        {
          "cond": "writeln!(\n            f,\n            \"transition equivalence classes: {:?}\",\n            self.byte_classes,\n        )?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1481,
          "bound": null
        },
        {
          "cond": "writeln!(f, \")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1486,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        44,
        77,
        78,
        79,
        80,
        81,
        84,
        87,
        88,
        89,
        90,
        93,
        96,
        97,
        98,
        101,
        106
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}