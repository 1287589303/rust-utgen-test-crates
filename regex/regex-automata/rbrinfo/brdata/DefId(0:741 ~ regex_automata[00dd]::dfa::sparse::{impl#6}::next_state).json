{
  "name": "regex_automata::dfa::sparse::{impl#6}::next_state",
  "mod_info": {
    "name": "dfa::sparse",
    "loc": "regex-automata/src/dfa/mod.rs:343:1:343:16"
  },
  "visible": true,
  "loc": "regex-automata/src/dfa/sparse.rs:1139:5:1142:6",
  "doc": "",
  "code": [
    "fn next_state(&self, current: StateID, input: u8) -> StateID {",
    "    let input = self.tt.classes.get(input);",
    "    self.tt.state(current).next(input)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}