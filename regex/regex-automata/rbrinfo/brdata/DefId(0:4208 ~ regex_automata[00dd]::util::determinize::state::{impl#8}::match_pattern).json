{
  "name": "regex_automata::util::determinize::state::{impl#8}::match_pattern",
  "mod_info": {
    "name": "util::determinize::state",
    "loc": "regex-automata/src/util/determinize/mod.rs:57:1:57:11"
  },
  "visible": false,
  "loc": "regex-automata/src/util/determinize/state.rs:476:5:485:6",
  "doc": "/// Returns the pattern ID for this match state at the given index.\n///\n/// If the given index is greater than or equal to `match_len()` for this\n/// state, then this could panic or return incorrect results.\n",
  "code": [
    "fn match_pattern(&self, index: usize) -> PatternID {",
    "    if !self.has_pattern_ids() {",
    "        PatternID::ZERO",
    "    } else {",
    "        let offset = 13 + index * PatternID::SIZE;",
    "        // This is OK since we only ever serialize valid PatternIDs to",
    "        // states.",
    "        wire::read_pattern_id_unchecked(&self.0[offset..]).0",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.has_pattern_ids()",
          "norm": null,
          "value": "true",
          "line": 477,
          "bound": null
        }
      ],
      "ret": "wire::read_pattern_id_unchecked(&self.0[offset..]).0",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.has_pattern_ids()",
          "norm": null,
          "value": "false",
          "line": 477,
          "bound": null
        }
      ],
      "ret": "PatternID::ZERO",
      "path": [
        0,
        1,
        3,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}