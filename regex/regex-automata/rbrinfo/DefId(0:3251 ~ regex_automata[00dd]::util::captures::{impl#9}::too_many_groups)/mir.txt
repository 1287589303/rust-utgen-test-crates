bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/captures.rs:2393:19-2393:73)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/captures.rs:2393:55-2393:62)
  2: _4 = _1
    SourceInfo(regex-automata/src/util/captures.rs:2393:55-2393:62)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/captures.rs:2393:64-2393:71)
  4: _5 = _2
    SourceInfo(regex-automata/src/util/captures.rs:2393:64-2393:71)
  5: _3 = util::captures::GroupInfoErrorKind::TooManyGroups { pattern: move _4, minimum: move _5 }
    SourceInfo(regex-automata/src/util/captures.rs:2393:19-2393:73)
  6: StorageDead(_5)
    SourceInfo(regex-automata/src/util/captures.rs:2393:72-2393:73)
  7: StorageDead(_4)
    SourceInfo(regex-automata/src/util/captures.rs:2393:72-2393:73)
  8: _0 = util::captures::GroupInfoError { kind: move _3 }
    SourceInfo(regex-automata/src/util/captures.rs:2392:9-2394:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2394:9-2394:10)
      kind: drop(_3) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/captures.rs:2394:9-2394:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2395:6-2395:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/captures.rs:2391:5-2395:6)
      kind: resume
  }
  preds [bb0]
  succs []

