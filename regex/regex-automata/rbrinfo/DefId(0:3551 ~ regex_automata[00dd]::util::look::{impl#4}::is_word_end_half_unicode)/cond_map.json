{
  "regex-automata/src/util/look.rs:1257:32:1257:64": [
    {
      "Try": "is_word_char::fwd(haystack, at)?"
    }
  ],
  "regex-automata/src/util/look.rs:1255:22:1255:51": [
    {
      "Match": {
        "match_source": "regex-automata/src/util/look.rs:1255:22:1255:51",
        "match_str": "utf8::decode(&haystack[at..])",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/util/look.rs:1256:17:1256:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1256:40:1256:56"
          },
          "regex-automata/src/util/look.rs:1256:24:1256:36": {
            "pat": {
              "pat_str": "Some(Err(_))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1256:40:1256:56"
          },
          "regex-automata/src/util/look.rs:1257:17:1257:28": {
            "pat": {
              "pat_str": "Some(Ok(_))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1257:32:1257:64"
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "regex-automata/src/util/look.rs:1255:22:1255:51",
        "match_str": "utf8::decode(&haystack[at..])",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-automata/src/util/look.rs:1257:17:1257:28": {
            "pat": {
              "pat_str": "Some(Ok(_))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1257:32:1257:64"
          },
          "regex-automata/src/util/look.rs:1256:17:1256:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1256:40:1256:56"
          },
          "regex-automata/src/util/look.rs:1256:24:1256:36": {
            "pat": {
              "pat_str": "Some(Err(_))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/util/look.rs:1256:40:1256:56"
          }
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:1254:26:1254:45": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "at < haystack.len()",
          "lhs": "at",
          "rhs": "haystack.len()",
          "cmp_with_int": false
        }
      }
    }
  ]
}