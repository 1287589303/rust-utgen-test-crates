bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:693:9-693:26)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:693:9-693:17)
  2: _3 = &((*_1).1: core::option::Option<util::prefilter::Prefilter>)
    SourceInfo(regex-automata/src/meta/strategy.rs:693:9-693:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:693:9-693:26)
      kind: _2 = core::option::Option::<util::prefilter::Prefilter>::as_ref(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:693:25-693:26)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:693:41-693:60)
  2: _4 = {closure@regex-automata/src/meta/strategy.rs:693:41: 693:46}
    SourceInfo(regex-automata/src/meta/strategy.rs:693:41-693:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:693:9-693:61)
      kind: _0 = core::option::Option::<&util::prefilter::Prefilter>::map_or::<bool, {closure@regex-automata/src/meta/strategy.rs:693:41: 693:46}>(move _2, const false, move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:693:60-693:61)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:693:60-693:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:694:6-694:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:692:5-694:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

