bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:753:17-753:20)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:753:23-753:29)
  2: _6 = &((*_1).0: hybrid::regex::Regex)
    SourceInfo(regex-automata/src/meta/wrappers.rs:753:23-753:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:753:23-753:39)
      kind: _5 = hybrid::regex::Regex::forward(move _6) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:753:38-753:39)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:753:17-753:20)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:17-754:29)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:32-754:72)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:32-754:57)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:32-754:57)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:32-754:48)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:32-754:39)
  8: _12 = &mut ((*_2).0: core::option::Option<hybrid::regex::Cache>)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:32-754:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:754:32-754:48)
      kind: _11 = core::option::Option::<hybrid::regex::Cache>::as_mut(move _12) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:47-754:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:754:32-754:57)
      kind: _10 = core::option::Option::<&mut hybrid::regex::Cache>::unwrap(move _11) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: _9 = &mut (*_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:32-754:57)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:56-754:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:754:32-754:72)
      kind: _8 = hybrid::regex::Cache::as_parts_mut(move _9) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:71-754:72)
  1: _7 = move (_8.0: &mut hybrid::dfa::Cache)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:32-754:74)
  2: FakeRead(ForLet(None), _7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:17-754:29)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:74-754:75)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:754:74-754:75)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:13-755:76)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:13-755:16)
  7: _14 = &(*_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:13-755:16)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:47-755:60)
  9: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:47-755:60)
  10: _16 = &mut _7
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:47-755:60)
  11: _15 = &mut (*(*_16))
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:47-755:60)
  12: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:62-755:67)
  13: _17 = &(*_3)
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:62-755:67)
  14: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:69-755:75)
  15: _18 = &mut (*_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:69-755:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:755:13-755:76)
      kind: _13 = hybrid::dfa::DFA::try_which_overlapping_matches(move _14, move _15, move _17, move _18) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:75-755:76)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:75-755:76)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:75-755:76)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/wrappers.rs:755:75-755:76)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/wrappers.rs:756:26-756:38)
  5: _19 = {closure@regex-automata/src/meta/wrappers.rs:756:26: 756:29}
    SourceInfo(regex-automata/src/meta/wrappers.rs:756:26-756:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:755:13-756:39)
      kind: _0 = core::result::Result::<(), util::search::MatchError>::map_err::<meta::error::RetryFailError, {closure@regex-automata/src/meta/wrappers.rs:756:26: 756:29}>(move _13, move _19) -> [return: bb6, unwind: bb7]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/wrappers.rs:756:38-756:39)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/wrappers.rs:756:38-756:39)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:757:9-757:10)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:757:9-757:10)
  4: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/wrappers.rs:764:5-764:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:764:6-764:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:756:38-756:39)
      kind: drop(_13) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:745:5-764:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb7]
  succs []

