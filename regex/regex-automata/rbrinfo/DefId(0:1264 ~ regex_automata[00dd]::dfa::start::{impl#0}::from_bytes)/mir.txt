bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/start.rs:34:9-34:76)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/start.rs:34:9-34:76)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/start.rs:34:9-34:75)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/start.rs:34:31-34:36)
  4: _5 = &(*_1)
    SourceInfo(regex-automata/src/dfa/start.rs:34:31-34:36)
  5: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/start.rs:34:38-34:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:34:38-34:54)
      kind: _6 = core::mem::size_of::<u32>() -> [return: bb1, unwind: bb26]
  }
  preds []
  succs [bb1, bb26]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:34:9-34:75)
      kind: _4 = util::wire::check_slice_len::<u8>(move _5, move _6, const "start kind bytes") -> [return: bb2, unwind: bb26]
  }
  preds [bb0]
  succs [bb2, bb26]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/start.rs:34:74-34:75)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/start.rs:34:74-34:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:34:9-34:76)
      kind: _3 = <core::result::Result<(), util::wire::DeserializeError> as core::ops::Try>::branch(move _4) -> [return: bb3, unwind: bb26]
  }
  preds [bb1]
  succs [bb3, bb26]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/start.rs:34:75-34:76)
  1: PlaceMention(_3)
    SourceInfo(regex-automata/src/dfa/start.rs:34:9-34:76)
  2: _7 = discriminant(_3)
    SourceInfo(regex-automata/src/dfa/start.rs:34:9-34:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:34:9-34:76)
      kind: switchInt(move _7) -> [0: bb6, 1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(regex-automata/src/dfa/start.rs:34:9-34:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:34:9-34:76)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:34:75-34:76)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/start.rs:34:9-34:76)
  1: _11 = ((_3 as Continue).0: ())
    SourceInfo(regex-automata/src/dfa/start.rs:34:9-34:76)
  2: _2 = _11
    SourceInfo(regex-automata/src/dfa/start.rs:34:9-34:76)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/start.rs:34:75-34:76)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/start.rs:34:76-34:77)
  5: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/start.rs:34:76-34:77)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:71)
  7: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:71)
  8: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:70)
  9: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/start.rs:35:42-35:47)
  10: _17 = &(*_1)
    SourceInfo(regex-automata/src/dfa/start.rs:35:42-35:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:70)
      kind: _16 = util::wire::try_read_u32(move _17, const "start kind integer") -> [return: bb9, unwind: bb26]
  }
  preds [bb3, bb5]
  succs [bb9, bb26]

bb7
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/start.rs:34:75-34:76)
  1: _8 = move ((_3 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/start.rs:34:75-34:76)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/start.rs:34:75-34:76)
  3: _10 = move _8
    SourceInfo(regex-automata/src/dfa/start.rs:34:75-34:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:34:9-34:76)
      kind: _0 = <core::result::Result<(dfa::start::StartKind, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _10) -> [return: bb8, unwind: bb26]
  }
  preds [bb5]
  succs [bb8, bb26]

bb8
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/start.rs:34:75-34:76)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/start.rs:34:75-34:76)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/start.rs:34:76-34:77)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/start.rs:34:76-34:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb25
  }
  preds [bb7]
  succs [bb25]

bb9
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/start.rs:35:69-35:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:71)
      kind: _15 = <core::result::Result<(u32, usize), util::wire::DeserializeError> as core::ops::Try>::branch(move _16) -> [return: bb10, unwind: bb26]
  }
  preds [bb6]
  succs [bb10, bb26]

bb10
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/start.rs:35:70-35:71)
  1: PlaceMention(_15)
    SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:71)
  2: _18 = discriminant(_15)
    SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:71)
      kind: switchInt(move _18) -> [0: bb13, 1: bb12, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13]

bb11
  0: FakeRead(ForMatchedPlace(None), _15)
    SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:71)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:35:70-35:71)
      kind: falseEdge -> [real: bb14, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:71)
  1: _22 = ((_15 as Continue).0: (u32, usize))
    SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:71)
  2: _14 = _22
    SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:71)
  3: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/start.rs:35:70-35:71)
  4: PlaceMention(_14)
    SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:71)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/start.rs:35:14-35:15)
  6: _12 = (_14.0: u32)
    SourceInfo(regex-automata/src/dfa/start.rs:35:14-35:15)
  7: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/start.rs:35:17-35:19)
  8: _13 = (_14.1: usize)
    SourceInfo(regex-automata/src/dfa/start.rs:35:17-35:19)
  9: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/start.rs:35:71-35:72)
  10: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/start.rs:35:71-35:72)
  11: PlaceMention(_12)
    SourceInfo(regex-automata/src/dfa/start.rs:36:15-36:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:36:9-36:16)
      kind: switchInt(_12) -> [0: bb17, 1: bb18, 2: bb19, otherwise: bb16]
  }
  preds [bb10, bb12]
  succs [bb16, bb17, bb18, bb19]

bb14
  0: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/start.rs:35:70-35:71)
  1: _19 = move ((_15 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/start.rs:35:70-35:71)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/start.rs:35:70-35:71)
  3: _21 = move _19
    SourceInfo(regex-automata/src/dfa/start.rs:35:70-35:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:35:23-35:71)
      kind: _0 = <core::result::Result<(dfa::start::StartKind, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _21) -> [return: bb15, unwind: bb26]
  }
  preds [bb12]
  succs [bb15, bb26]

bb15
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/start.rs:35:70-35:71)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/start.rs:35:70-35:71)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/start.rs:35:71-35:72)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/start.rs:35:71-35:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb25
  }
  preds [bb14]
  succs [bb25]

bb16
  0: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/start.rs:40:22-40:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:40:22-40:74)
      kind: _32 = util::wire::DeserializeError::generic(const "unrecognized start kind") -> [return: bb23, unwind: bb26]
  }
  preds [bb13, bb19]
  succs [bb23, bb26]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:37:13-37:14)
      kind: falseEdge -> [real: bb20, imaginary: bb18]
  }
  preds [bb13]
  succs [bb18, bb20]

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:38:13-38:14)
      kind: falseEdge -> [real: bb21, imaginary: bb19]
  }
  preds [bb13, bb17]
  succs [bb19, bb21]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:39:13-39:14)
      kind: falseEdge -> [real: bb22, imaginary: bb16]
  }
  preds [bb13, bb18]
  succs [bb16, bb22]

bb20
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/start.rs:37:21-37:42)
  1: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/start.rs:37:22-37:37)
  2: _24 = dfa::start::StartKind::Both
    SourceInfo(regex-automata/src/dfa/start.rs:37:22-37:37)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/start.rs:37:39-37:41)
  4: _25 = _13
    SourceInfo(regex-automata/src/dfa/start.rs:37:39-37:41)
  5: _23 = (move _24, move _25)
    SourceInfo(regex-automata/src/dfa/start.rs:37:21-37:42)
  6: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/start.rs:37:41-37:42)
  7: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/start.rs:37:41-37:42)
  8: _0 = core::result::Result::<(dfa::start::StartKind, usize), util::wire::DeserializeError>::Ok(move _23)
    SourceInfo(regex-automata/src/dfa/start.rs:37:18-37:43)
  9: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/start.rs:37:42-37:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:37:42-37:43)
      kind: goto -> bb24
  }
  preds [bb17]
  succs [bb24]

bb21
  0: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/start.rs:38:21-38:48)
  1: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/start.rs:38:22-38:43)
  2: _27 = dfa::start::StartKind::Unanchored
    SourceInfo(regex-automata/src/dfa/start.rs:38:22-38:43)
  3: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/start.rs:38:45-38:47)
  4: _28 = _13
    SourceInfo(regex-automata/src/dfa/start.rs:38:45-38:47)
  5: _26 = (move _27, move _28)
    SourceInfo(regex-automata/src/dfa/start.rs:38:21-38:48)
  6: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/start.rs:38:47-38:48)
  7: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/start.rs:38:47-38:48)
  8: _0 = core::result::Result::<(dfa::start::StartKind, usize), util::wire::DeserializeError>::Ok(move _26)
    SourceInfo(regex-automata/src/dfa/start.rs:38:18-38:49)
  9: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/start.rs:38:48-38:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:38:48-38:49)
      kind: goto -> bb24
  }
  preds [bb18]
  succs [bb24]

bb22
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/start.rs:39:21-39:46)
  1: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/start.rs:39:22-39:41)
  2: _30 = dfa::start::StartKind::Anchored
    SourceInfo(regex-automata/src/dfa/start.rs:39:22-39:41)
  3: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/start.rs:39:43-39:45)
  4: _31 = _13
    SourceInfo(regex-automata/src/dfa/start.rs:39:43-39:45)
  5: _29 = (move _30, move _31)
    SourceInfo(regex-automata/src/dfa/start.rs:39:21-39:46)
  6: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/start.rs:39:45-39:46)
  7: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/start.rs:39:45-39:46)
  8: _0 = core::result::Result::<(dfa::start::StartKind, usize), util::wire::DeserializeError>::Ok(move _29)
    SourceInfo(regex-automata/src/dfa/start.rs:39:18-39:47)
  9: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/start.rs:39:46-39:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:39:46-39:47)
      kind: goto -> bb24
  }
  preds [bb19]
  succs [bb24]

bb23
  0: _0 = core::result::Result::<(dfa::start::StartKind, usize), util::wire::DeserializeError>::Err(move _32)
    SourceInfo(regex-automata/src/dfa/start.rs:40:18-40:75)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/start.rs:40:74-40:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:40:74-40:75)
      kind: goto -> bb24
  }
  preds [bb16]
  succs [bb24]

bb24
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/start.rs:42:5-42:6)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/start.rs:42:5-42:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:42:6-42:6)
      kind: goto -> bb25
  }
  preds [bb20, bb21, bb22, bb23]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:42:6-42:6)
      kind: return
  }
  preds [bb8, bb15, bb24]
  succs []

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/start.rs:31:5-42:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb6, bb7, bb9, bb14, bb16]
  succs []

