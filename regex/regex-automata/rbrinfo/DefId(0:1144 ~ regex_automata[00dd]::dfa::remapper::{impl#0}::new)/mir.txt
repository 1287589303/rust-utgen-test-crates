bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/remapper.rs:92:13-92:19)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/remapper.rs:92:45-92:56)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/remapper.rs:92:45-92:46)
  3: _4 = &(*_1)
    SourceInfo(regex-automata/src/dfa/remapper.rs:92:45-92:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:92:45-92:56)
      kind: _3 = <impl Remappable as dfa::remapper::Remappable>::stride2(move _4) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/remapper.rs:92:55-92:56)
  1: _2 = dfa::remapper::IndexMapper { stride2: move _3 }
    SourceInfo(regex-automata/src/dfa/remapper.rs:92:22-92:58)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/remapper.rs:92:57-92:58)
  3: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/dfa/remapper.rs:92:13-92:19)
  4: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:13-93:16)
  5: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:19-93:68)
  6: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:19-93:37)
  7: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:23-93:36)
  8: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:23-93:24)
  9: _9 = &(*_1)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:23-93:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:93:23-93:36)
      kind: _8 = <impl Remappable as dfa::remapper::Remappable>::state_len(move _9) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:35-93:36)
  1: _7 = core::ops::Range::<usize> { start: const 0_usize, end: move _8 }
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:19-93:37)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:36-93:37)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:42-93:67)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:42-93:67)
  5: _11 = &_2
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:42-93:67)
  6: _10 = {closure@regex-automata/src/dfa/remapper.rs:93:42: 93:45} { idxmap: move _11 }
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:42-93:67)
  7: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:44-93:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:93:19-93:68)
      kind: _6 = <core::ops::Range<usize> as core::iter::Iterator>::map::<util::primitives::StateID, {closure@regex-automata/src/dfa/remapper.rs:93:42: 93:45}>(move _7, move _10) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:67-93:68)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:67-93:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:93:19-93:78)
      kind: _5 = <core::iter::Map<core::ops::Range<usize>, {closure@regex-automata/src/dfa/remapper.rs:93:42: 93:45}> as core::iter::Iterator>::collect::<std::vec::Vec<util::primitives::StateID>>(move _6) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:77-93:78)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/dfa/remapper.rs:93:13-93:16)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/remapper.rs:94:20-94:23)
  3: _12 = move _5
    SourceInfo(regex-automata/src/dfa/remapper.rs:94:20-94:23)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/remapper.rs:94:25-94:31)
  5: _13 = move _2
    SourceInfo(regex-automata/src/dfa/remapper.rs:94:25-94:31)
  6: _0 = dfa::remapper::Remapper { map: move _12, idxmap: move _13 }
    SourceInfo(regex-automata/src/dfa/remapper.rs:94:9-94:33)
  7: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/remapper.rs:94:32-94:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:94:32-94:33)
      kind: drop(_12) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/remapper.rs:94:32-94:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:95:5-95:6)
      kind: drop(_5) -> [return: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/remapper.rs:95:5-95:6)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/remapper.rs:95:5-95:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:95:6-95:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:95:5-95:6)
      kind: drop(_5) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/remapper.rs:91:5-95:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb5, bb7]
  succs []

