bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1668:13-1668:17)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1668:20-1668:24)
  2: _5 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1668:20-1668:24)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1668:29-1668:45)
  4: _6 = {closure@regex-automata/src/nfa/thompson/compiler.rs:1668:29: 1668:32}
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1668:29-1668:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1668:20-1668:46)
      kind: _4 = core::option::Option::<&str>::map::<std::sync::Arc<str>, {closure@regex-automata/src/nfa/thompson/compiler.rs:1668:29: 1668:32}>(move _5, move _6) -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1668:45-1668:46)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1668:45-1668:46)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1668:13-1668:17)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1669:9-1669:34)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1669:9-1673:10)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1669:9-1669:34)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1669:9-1669:34)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1669:9-1669:21)
  8: _11 = &((*_1).2: core::cell::RefCell<nfa::thompson::builder::Builder>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1669:9-1669:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1669:9-1669:34)
      kind: _10 = core::cell::RefCell::<nfa::thompson::builder::Builder>::borrow_mut(move _11) -> [return: bb2, unwind: bb10]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: _9 = &mut _10
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1669:9-1669:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1669:9-1673:10)
      kind: _8 = <core::cell::RefMut<'_, nfa::thompson::builder::Builder> as core::ops::DerefMut>::deref_mut(move _9) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: _7 = &mut (*_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1669:9-1669:34)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1669:33-1669:34)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1669:33-1669:34)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1671:13-1671:26)
  4: _12 = _2
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1671:13-1671:26)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1672:13-1672:17)
  6: _13 = move _4
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1672:13-1672:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1669:9-1673:10)
      kind: _0 = nfa::thompson::builder::Builder::add_capture_start(move _7, const util::primitives::StateID::ZERO, move _12, move _13) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1673:9-1673:10)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1673:9-1673:10)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1673:9-1673:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1674:5-1674:6)
      kind: drop(_4) -> [return: bb5, unwind: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1674:5-1674:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1674:5-1674:6)
      kind: drop(_10) -> [return: bb6, unwind: bb11]
  }
  preds [bb4]
  succs [bb6, bb11]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1674:5-1674:6)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1674:5-1674:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1674:6-1674:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1673:9-1673:10)
      kind: drop(_13) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1674:5-1674:6)
      kind: drop(_4) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb2, bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1674:5-1674:6)
      kind: drop(_10) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb4, bb8]
  succs [bb11]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1674:5-1674:6)
      kind: drop(_4) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1663:5-1674:6)
      kind: resume
  }
  preds [bb0, bb5, bb9, bb10]
  succs []

