bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1050:13-1050:26)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1050:29-1054:15)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1050:29-1051:20)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1050:29-1050:34)
  4: _6 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1050:29-1050:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1050:29-1051:20)
      kind: _5 = core::slice::<impl [regex_syntax::hir::Hir]>::iter(move _6) -> [return: bb1, unwind: bb55]
  }
  preds []
  succs [bb1, bb55]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1051:19-1051:20)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1052:21-1054:14)
  2: _7 = {closure@regex-automata/src/nfa/thompson/compiler.rs:1052:21: 1052:24}
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1052:21-1054:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1050:29-1054:15)
      kind: _4 = <core::slice::Iter<'_, regex_syntax::hir::Hir> as core::iter::Iterator>::filter::<{closure@regex-automata/src/nfa/thompson/compiler.rs:1052:21: 1052:24}>(move _5, move _7) -> [return: bb2, unwind: bb55]
  }
  preds [bb0]
  succs [bb2, bb55]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1054:14-1054:15)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1054:14-1054:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1050:29-1055:21)
      kind: _3 = <core::iter::Filter<core::slice::Iter<'_, regex_syntax::hir::Hir>, {closure@regex-automata/src/nfa/thompson/compiler.rs:1052:21: 1052:24}> as core::iter::Iterator>::count(move _4) -> [return: bb3, unwind: bb55]
  }
  preds [bb1]
  succs [bb3, bb55]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1055:20-1055:21)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1050:13-1050:26)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:9-1058:10)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:12-1056:30)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:12-1056:25)
  5: _10 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:12-1056:25)
  6: _9 = Le(move _10, const 1_usize)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:12-1056:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:12-1056:30)
      kind: switchInt(move _9) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:29-1056:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:62-1058:10)
      kind: goto -> bb8
  }
  preds [bb3]
  succs [bb8]

bb5
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:29-1056:30)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:34-1056:61)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:34-1056:47)
  3: _12 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:34-1056:47)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:50-1056:61)
  5: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:50-1056:55)
  6: _14 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:50-1056:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:50-1056:61)
      kind: _13 = core::slice::<impl [regex_syntax::hir::Hir]>::len(move _14) -> [return: bb6, unwind: bb55]
  }
  preds [bb3]
  succs [bb6, bb55]

bb6
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:60-1056:61)
  1: _11 = Lt(move _12, move _13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:34-1056:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:34-1056:61)
      kind: switchInt(move _11) -> [0: bb12, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb12]

bb7
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:60-1056:61)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:60-1056:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:62-1058:10)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  0: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:20-1057:24)
  1: _16 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:20-1057:24)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:36-1057:67)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:36-1057:48)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:36-1057:41)
  5: _19 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:36-1057:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:36-1057:48)
      kind: _18 = core::slice::<impl [regex_syntax::hir::Hir]>::iter(move _19) -> [return: bb9, unwind: bb55]
  }
  preds [bb4, bb7]
  succs [bb9, bb55]

bb9
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:47-1057:48)
  1: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:53-1057:66)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:53-1057:66)
  3: _21 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:53-1057:66)
  4: _20 = {closure@regex-automata/src/nfa/thompson/compiler.rs:1057:53: 1057:56} { self: move _21 }
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:53-1057:66)
  5: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:55-1057:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:36-1057:67)
      kind: _17 = <core::slice::Iter<'_, regex_syntax::hir::Hir> as core::iter::Iterator>::map::<core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError>, {closure@regex-automata/src/nfa/thompson/compiler.rs:1057:53: 1057:56}>(move _18, move _20) -> [return: bb10, unwind: bb55]
  }
  preds [bb8]
  succs [bb10, bb55]

bb10
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:66-1057:67)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:66-1057:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:20-1057:68)
      kind: _0 = nfa::thompson::compiler::Compiler::c_alt_iter::<core::iter::Map<core::slice::Iter<'_, regex_syntax::hir::Hir>, {closure@regex-automata/src/nfa/thompson/compiler.rs:1057:53: 1057:56}>>(move _16, move _17) -> [return: bb11, unwind: bb55]
  }
  preds [bb9]
  succs [bb11, bb55]

bb11
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:67-1057:68)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1057:67-1057:68)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1058:9-1058:10)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1058:9-1058:10)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1058:9-1058:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb10]
  succs [bb46]

bb12
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:60-1056:61)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1056:60-1056:61)
  2: _8 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1058:10-1058:10)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1058:9-1058:10)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1058:9-1058:10)
  5: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1058:9-1058:10)
  6: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1060:13-1060:21)
  7: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1060:27-1060:44)
  8: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1060:27-1060:31)
  9: _24 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1060:27-1060:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1060:27-1060:44)
      kind: _23 = nfa::thompson::compiler::Compiler::is_reverse(move _24) -> [return: bb13, unwind: bb55]
  }
  preds [bb6]
  succs [bb13, bb55]

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1060:27-1060:44)
      kind: switchInt(move _23) -> [0: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15]

bb14
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1060:43-1060:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1061:13-1061:35)
      kind: _22 = nfa::thompson::literal_trie::LiteralTrie::reverse() -> [return: bb16, unwind: bb55]
  }
  preds [bb13]
  succs [bb16, bb55]

bb15
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1060:43-1060:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1063:13-1063:35)
      kind: _22 = nfa::thompson::literal_trie::LiteralTrie::forward() -> [return: bb16, unwind: bb55]
  }
  preds [bb13]
  succs [bb16, bb55]

bb16
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1064:9-1064:10)
  1: FakeRead(ForLet(None), _22)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1060:13-1060:21)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:9-1071:10)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
  4: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
  5: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:26)
  6: _28 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
      kind: _27 = core::slice::<impl [regex_syntax::hir::Hir]>::iter(move _28) -> [return: bb17, unwind: bb54]
  }
  preds [bb14, bb15]
  succs [bb17, bb54]

bb17
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:32-1065:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
      kind: _26 = <core::slice::Iter<'_, regex_syntax::hir::Hir> as core::iter::IntoIterator>::into_iter(move _27) -> [return: bb18, unwind: bb54]
  }
  preds [bb16]
  succs [bb18, bb54]

bb18
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:32-1065:33)
  1: PlaceMention(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
  3: _29 = move _26
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:9-1071:10)
      kind: goto -> bb19
  }
  preds [bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:9-1071:10)
      kind: falseUnwind -> [real: bb20, unwind: bb54]
  }
  preds [bb18, bb37]
  succs [bb20, bb54]

bb20
  0: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
  1: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
  3: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
  4: _34 = &mut _29
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
  5: _33 = &mut (*_34)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
      kind: _32 = <core::slice::Iter<'_, regex_syntax::hir::Hir> as core::iter::Iterator>::next(move _33) -> [return: bb21, unwind: bb54]
  }
  preds [bb19]
  succs [bb21, bb54]

bb21
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:32-1065:33)
  1: PlaceMention(_32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
  2: _35 = discriminant(_32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
      kind: switchInt(move _35) -> [0: bb23, 1: bb24, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb23, bb24]

bb22
  0: FakeRead(ForMatchedPlace(None), _32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:21-1065:33)
      kind: unreachable
  }
  preds [bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:9-1071:10)
      kind: falseEdge -> [real: bb25, imaginary: bb24]
  }
  preds [bb21]
  succs [bb24, bb25]

bb24
  0: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:13-1065:17)
  1: _37 = ((_32 as Some).0: &regex_syntax::hir::Hir)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:13-1065:17)
  2: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1066:17-1066:24)
  3: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1066:34-1066:45)
  4: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1066:34-1066:38)
  5: _40 = &(*_37)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1066:34-1066:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1066:34-1066:45)
      kind: _39 = regex_syntax::hir::Hir::kind(move _40) -> [return: bb26, unwind: bb54]
  }
  preds [bb21, bb23]
  succs [bb26, bb54]

bb25
  0: _25 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:9-1071:10)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  2: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  3: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  4: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  5: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  6: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  7: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:9-1072:13)
  8: _54 = &_22
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:9-1072:13)
  9: StorageLive(_55)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:22-1072:52)
  10: StorageLive(_56)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:22-1072:52)
  11: StorageLive(_57)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:22-1072:52)
  12: StorageLive(_58)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:22-1072:52)
  13: StorageLive(_59)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:27-1072:52)
  14: StorageLive(_60)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:27-1072:39)
  15: _60 = &((*_1).2: core::cell::RefCell<nfa::thompson::builder::Builder>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:27-1072:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:27-1072:52)
      kind: _59 = core::cell::RefCell::<nfa::thompson::builder::Builder>::borrow_mut(move _60) -> [return: bb38, unwind: bb54]
  }
  preds [bb23]
  succs [bb38, bb54]

bb26
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1066:44-1066:45)
  1: PlaceMention((*_39))
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1066:33-1066:45)
  2: _41 = discriminant((*_39))
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1066:33-1066:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1066:27-1066:45)
      kind: switchInt(move _41) -> [1: bb28, otherwise: bb27]
  }
  preds [bb24]
  succs [bb27, bb28]

bb27
  0: StorageLive(_43)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:137:9-137:77)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:137:9-137:77)
      kind: _43 = core::panicking::panic(const "internal error: entered unreachable code") -> bb54
  }
  preds [bb26, bb28]
  succs [bb54]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1067:17-1067:63)
      kind: falseEdge -> [real: bb29, imaginary: bb27]
  }
  preds [bb26]
  succs [bb27, bb29]

bb29
  0: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1067:52-1067:61)
  1: _42 = &((((*_39) as Literal).0: regex_syntax::hir::Literal).0: std::boxed::Box<[u8]>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1067:52-1067:61)
  2: _38 = _42
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1067:67-1067:72)
  3: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1067:71-1067:72)
  4: FakeRead(ForLet(None), _38)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1066:17-1066:24)
  5: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1069:14-1069:15)
  6: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:31)
  7: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:31)
  8: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:30)
  9: StorageLive(_47)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:17)
  10: _47 = &mut _22
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:17)
  11: StorageLive(_48)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:22-1070:29)
  12: _48 = &(*(*_38))
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:22-1070:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:30)
      kind: _46 = nfa::thompson::literal_trie::LiteralTrie::add(move _47, move _48) -> [return: bb30, unwind: bb54]
  }
  preds [bb28]
  succs [bb30, bb54]

bb30
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:29-1070:30)
  1: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:29-1070:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:31)
      kind: _45 = <core::result::Result<(), nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _46) -> [return: bb31, unwind: bb53]
  }
  preds [bb29]
  succs [bb31, bb53]

bb31
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:30-1070:31)
  1: PlaceMention(_45)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:31)
  2: _49 = discriminant(_45)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:31)
      kind: switchInt(move _49) -> [0: bb34, 1: bb33, otherwise: bb32]
  }
  preds [bb30]
  succs [bb32, bb33, bb34]

bb32
  0: FakeRead(ForMatchedPlace(None), _45)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:31)
      kind: unreachable
  }
  preds [bb31]
  succs []

bb33
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:30-1070:31)
      kind: falseEdge -> [real: bb35, imaginary: bb34]
  }
  preds [bb31]
  succs [bb34, bb35]

bb34
  0: StorageLive(_53)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:31)
  1: _53 = ((_45 as Continue).0: ())
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:31)
  2: _44 = _53
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:31)
  3: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:30-1070:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:31-1070:32)
      kind: drop(_45) -> [return: bb37, unwind: bb54]
  }
  preds [bb31, bb33]
  succs [bb37, bb54]

bb35
  0: StorageLive(_50)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:30-1070:31)
  1: _50 = move ((_45 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:30-1070:31)
  2: StorageLive(_52)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:30-1070:31)
  3: _52 = move _50
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:30-1070:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:13-1070:31)
      kind: _0 = <core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _52) -> [return: bb36, unwind: bb50]
  }
  preds [bb33]
  succs [bb36, bb50]

bb36
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:30-1070:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:30-1070:31)
      kind: drop(_50) -> [return: bb43, unwind: bb52]
  }
  preds [bb35]
  succs [bb43, bb52]

bb37
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:31-1070:32)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:31-1070:32)
  2: _31 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:34-1071:10)
  3: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  4: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  5: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  6: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  7: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  8: _30 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:9-1071:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1065:9-1071:10)
      kind: goto -> bb19
  }
  preds [bb34]
  succs [bb19]

bb38
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:51-1072:52)
  1: _58 = &mut _59
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:22-1072:52)
  2: _57 = &mut (*_58)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:22-1072:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:22-1072:52)
      kind: _56 = <core::cell::RefMut<'_, nfa::thompson::builder::Builder> as core::ops::DerefMut>::deref_mut(move _57) -> [return: bb39, unwind: bb48]
  }
  preds [bb25]
  succs [bb39, bb48]

bb39
  0: _55 = &mut (*_56)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:22-1072:52)
  1: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:51-1072:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:9-1072:53)
      kind: _0 = nfa::thompson::literal_trie::LiteralTrie::compile(move _54, move _55) -> [return: bb40, unwind: bb48]
  }
  preds [bb38]
  succs [bb40, bb48]

bb40
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:52-1072:53)
  1: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1072:52-1072:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:5-1073:6)
      kind: drop(_22) -> [return: bb41, unwind: bb49]
  }
  preds [bb39]
  succs [bb41, bb49]

bb41
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:5-1073:6)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:5-1073:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:5-1073:6)
      kind: drop(_59) -> [return: bb42, unwind: bb55]
  }
  preds [bb40]
  succs [bb42, bb55]

bb42
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:5-1073:6)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:5-1073:6)
  2: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:5-1073:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:6-1073:6)
      kind: goto -> bb47
  }
  preds [bb41]
  succs [bb47]

bb43
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:30-1070:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:31-1070:32)
      kind: drop(_45) -> [return: bb44, unwind: bb54]
  }
  preds [bb36]
  succs [bb44, bb54]

bb44
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:31-1070:32)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:31-1070:32)
  2: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  3: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  4: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  5: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  6: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  7: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  8: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  9: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1071:9-1071:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:5-1073:6)
      kind: drop(_22) -> [return: bb45, unwind: bb55]
  }
  preds [bb43]
  succs [bb45, bb55]

bb45
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:5-1073:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb44]
  succs [bb46]

bb46
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:5-1073:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:6-1073:6)
      kind: goto -> bb47
  }
  preds [bb11, bb45]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:6-1073:6)
      kind: return
  }
  preds [bb42, bb46]
  succs []

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:5-1073:6)
      kind: drop(_22) -> [return: bb49, unwind terminate(cleanup)]
  }
  preds [bb38, bb39]
  succs [bb49]

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:5-1073:6)
      kind: drop(_59) -> [return: bb55, unwind terminate(cleanup)]
  }
  preds [bb40, bb48]
  succs [bb55]

bb50
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:30-1070:31)
      kind: drop(_52) -> [return: bb51, unwind terminate(cleanup)]
  }
  preds [bb35]
  succs [bb51]

bb51
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:30-1070:31)
      kind: drop(_50) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb50]
  succs [bb52]

bb52
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:31-1070:32)
      kind: drop(_45) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb36, bb51]
  succs [bb54]

bb53
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1070:30-1070:31)
      kind: drop(_46) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb30]
  succs [bb54]

bb54
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1073:5-1073:6)
      kind: drop(_22) -> [return: bb55, unwind terminate(cleanup)]
  }
  preds [bb16, bb17, bb19, bb20, bb24, bb25, bb27, bb29, bb34, bb43, bb52, bb53]
  succs [bb55]

bb55
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1048:5-1073:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb5, bb8, bb9, bb10, bb12, bb14, bb15, bb41, bb44, bb49, bb54]
  succs []

