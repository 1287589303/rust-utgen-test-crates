bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/accel.rs:450:9-452:10)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/accel.rs:450:12-450:27)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/accel.rs:450:12-450:22)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/accel.rs:450:12-450:16)
  4: _6 = &(*_1)
    SourceInfo(regex-automata/src/dfa/accel.rs:450:12-450:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:450:12-450:22)
      kind: _5 = dfa::accel::Accel::len(move _6) -> [return: bb1, unwind: bb17]
  }
  preds []
  succs [bb1, bb17]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/accel.rs:450:21-450:22)
  1: _4 = Ge(move _5, const 3_usize)
    SourceInfo(regex-automata/src/dfa/accel.rs:450:12-450:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:450:12-450:27)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/accel.rs:450:26-450:27)
  1: _0 = const false
    SourceInfo(regex-automata/src/dfa/accel.rs:451:20-451:25)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/accel.rs:452:9-452:10)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/accel.rs:452:9-452:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb16
  }
  preds [bb1]
  succs [bb16]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/accel.rs:450:26-450:27)
  1: _3 = const ()
    SourceInfo(regex-automata/src/dfa/accel.rs:452:10-452:10)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/accel.rs:452:9-452:10)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/accel.rs:452:9-452:10)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/accel.rs:456:9-458:10)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/accel.rs:456:12-456:24)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/accel.rs:456:12-456:16)
  7: _10 = _2
    SourceInfo(regex-automata/src/dfa/accel.rs:456:12-456:16)
  8: _9 = Eq(move _10, const 32_u8)
    SourceInfo(regex-automata/src/dfa/accel.rs:456:12-456:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:456:12-456:24)
      kind: switchInt(move _9) -> [0: bb5, otherwise: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/accel.rs:456:23-456:24)
  1: _0 = const false
    SourceInfo(regex-automata/src/dfa/accel.rs:457:20-457:25)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/accel.rs:458:9-458:10)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/accel.rs:458:9-458:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb16
  }
  preds [bb3]
  succs [bb16]

bb5
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/accel.rs:456:23-456:24)
  1: _8 = const ()
    SourceInfo(regex-automata/src/dfa/accel.rs:458:10-458:10)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/accel.rs:458:9-458:10)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/accel.rs:458:9-458:10)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/accel.rs:459:9-463:10)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/accel.rs:460:14-460:33)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/accel.rs:460:14-460:18)
  7: _14 = &(*_1)
    SourceInfo(regex-automata/src/dfa/accel.rs:460:14-460:18)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/accel.rs:460:28-460:32)
  9: _15 = _2
    SourceInfo(regex-automata/src/dfa/accel.rs:460:28-460:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:460:14-460:33)
      kind: _13 = dfa::accel::Accel::contains(move _14, move _15) -> [return: bb6, unwind: bb17]
  }
  preds [bb3]
  succs [bb6, bb17]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:460:14-460:33)
      kind: switchInt(move _13) -> [0: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/accel.rs:460:32-460:33)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/accel.rs:460:32-460:33)
  2: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/accel.rs:461:13-461:48)
  5: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/accel.rs:461:13-461:48)
  6: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/accel.rs:461:13-461:48)
  7: _21 = [const "accelerator already contains "]
    SourceInfo(regex-automata/src/dfa/accel.rs:461:13-461:48)
  8: _20 = &_21
    SourceInfo(regex-automata/src/dfa/accel.rs:461:13-461:48)
  9: _19 = &(*_20)
    SourceInfo(regex-automata/src/dfa/accel.rs:461:13-461:48)
  10: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  12: StorageLive(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  13: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/accel.rs:461:43-461:47)
  14: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/accel.rs:462:13-462:49)
  15: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/accel.rs:462:13-462:49)
  16: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/accel.rs:462:13-462:49)
  17: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/accel.rs:462:44-462:48)
  18: _29 = _2
    SourceInfo(regex-automata/src/dfa/accel.rs:462:44-462:48)
  19: _28 = util::escape::DebugByte(move _29)
    SourceInfo(regex-automata/src/dfa/accel.rs:462:13-462:49)
  20: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/accel.rs:462:48-462:49)
  21: _27 = &_28
    SourceInfo(regex-automata/src/dfa/accel.rs:462:13-462:49)
  22: _26 = &(*_27)
    SourceInfo(regex-automata/src/dfa/accel.rs:462:13-462:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:461:43-461:47)
      kind: _25 = core::fmt::rt::Argument::<'_>::new_debug::<util::escape::DebugByte>(move _26) -> [return: bb9, unwind: bb17]
  }
  preds [bb6]
  succs [bb9, bb17]

bb8
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/accel.rs:460:32-460:33)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/accel.rs:460:32-460:33)
  2: _12 = const ()
    SourceInfo(regex-automata/src/dfa/accel.rs:463:10-463:10)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/accel.rs:463:9-463:10)
  4: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/accel.rs:463:9-463:10)
  5: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/accel.rs:464:38-464:42)
  6: _30 = _2
    SourceInfo(regex-automata/src/dfa/accel.rs:464:38-464:42)
  7: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/accel.rs:464:20-464:34)
  8: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/accel.rs:464:20-464:30)
  9: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/accel.rs:464:20-464:24)
  10: _33 = &(*_1)
    SourceInfo(regex-automata/src/dfa/accel.rs:464:20-464:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:464:20-464:30)
      kind: _32 = dfa::accel::Accel::len(move _33) -> [return: bb11, unwind: bb17]
  }
  preds [bb6]
  succs [bb11, bb17]

bb9
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/accel.rs:461:46-461:47)
  1: _24 = [move _25]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_25)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: _23 = &_24
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: _22 = &(*_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _18 = core::fmt::Arguments::<'_>::new_v1::<1, 1>(move _19, move _22) -> [return: bb10, unwind: bb17]
  }
  preds [bb7]
  succs [bb10, bb17]

bb10
  0: StorageDead(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _17 = core::panicking::panic_fmt(move _18) -> bb17
  }
  preds [bb9]
  succs [bb17]

bb11
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/accel.rs:464:29-464:30)
  1: _34 = AddWithOverflow(_32, const 1_usize)
    SourceInfo(regex-automata/src/dfa/accel.rs:464:20-464:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:464:20-464:34)
      kind: assert(!move (_34.1: bool), "attempt to compute `{} + {}`, which would overflow", move _32, const 1_usize) -> [success: bb12, unwind: bb17]
  }
  preds [bb8]
  succs [bb12, bb17]

bb12
  0: _31 = move (_34.0: usize)
    SourceInfo(regex-automata/src/dfa/accel.rs:464:20-464:34)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/accel.rs:464:33-464:34)
  2: _35 = Len(((*_1).0: [u8; 8]))
    SourceInfo(regex-automata/src/dfa/accel.rs:464:9-464:35)
  3: _36 = Lt(_31, _35)
    SourceInfo(regex-automata/src/dfa/accel.rs:464:9-464:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:464:9-464:35)
      kind: assert(move _36, "index out of bounds: the length is {} but the index is {}", move _35, _31) -> [success: bb13, unwind: bb17]
  }
  preds [bb11]
  succs [bb13, bb17]

bb13
  0: ((*_1).0: [u8; 8])[_31] = move _30
    SourceInfo(regex-automata/src/dfa/accel.rs:464:9-464:42)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/accel.rs:464:41-464:42)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/accel.rs:464:42-464:43)
  3: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/accel.rs:465:20-465:21)
  4: _37 = const 0_usize
    SourceInfo(regex-automata/src/dfa/accel.rs:465:20-465:21)
  5: _38 = Len(((*_1).0: [u8; 8]))
    SourceInfo(regex-automata/src/dfa/accel.rs:465:9-465:22)
  6: _39 = Lt(_37, _38)
    SourceInfo(regex-automata/src/dfa/accel.rs:465:9-465:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:465:9-465:22)
      kind: assert(move _39, "index out of bounds: the length is {} but the index is {}", move _38, _37) -> [success: bb14, unwind: bb17]
  }
  preds [bb12]
  succs [bb14, bb17]

bb14
  0: _40 = AddWithOverflow(((*_1).0: [u8; 8])[_37], const 1_u8)
    SourceInfo(regex-automata/src/dfa/accel.rs:465:9-465:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:465:9-465:27)
      kind: assert(!move (_40.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).0: [u8; 8])[_37], const 1_u8) -> [success: bb15, unwind: bb17]
  }
  preds [bb13]
  succs [bb15, bb17]

bb15
  0: ((*_1).0: [u8; 8])[_37] = move (_40.0: u8)
    SourceInfo(regex-automata/src/dfa/accel.rs:465:9-465:27)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/accel.rs:465:27-465:28)
  2: _0 = const true
    SourceInfo(regex-automata/src/dfa/accel.rs:466:9-466:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:467:6-467:6)
      kind: goto -> bb16
  }
  preds [bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:467:6-467:6)
      kind: return
  }
  preds [bb2, bb4, bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:449:5-467:6)
      kind: resume
  }
  preds [bb0, bb5, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14]
  succs []

