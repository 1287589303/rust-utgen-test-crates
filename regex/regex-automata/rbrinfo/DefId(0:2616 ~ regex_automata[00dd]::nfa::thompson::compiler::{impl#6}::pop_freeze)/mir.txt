bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1845:13-1845:27)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1845:30-1845:57)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1845:30-1845:51)
  3: _5 = &mut ((*((*_1).1: &mut nfa::thompson::compiler::Utf8State)).1: std::vec::Vec<nfa::thompson::compiler::Utf8Node>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1845:30-1845:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1845:30-1845:57)
      kind: _4 = std::vec::Vec::<nfa::thompson::compiler::Utf8Node>::pop(move _5) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1845:56-1845:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1845:30-1845:66)
      kind: _3 = core::option::Option::<nfa::thompson::compiler::Utf8Node>::unwrap(move _4) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1845:65-1845:66)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1845:13-1845:27)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1846:9-1846:45)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1846:9-1846:19)
  4: _7 = &mut _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1846:9-1846:19)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1846:40-1846:44)
  6: _8 = _2
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1846:40-1846:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1846:9-1846:45)
      kind: _6 = nfa::thompson::compiler::Utf8Node::set_last_transition(move _7, move _8) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1846:44-1846:45)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1846:44-1846:45)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1846:45-1846:46)
  3: _0 = move (_3.0: std::vec::Vec<nfa::thompson::nfa::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1847:9-1847:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1848:5-1848:6)
      kind: drop(_3) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1848:5-1848:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1848:6-1848:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1848:5-1848:6)
      kind: drop(_3) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb7]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1845:65-1845:66)
      kind: drop(_4) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1844:5-1848:6)
      kind: resume
  }
  preds [bb0, bb3, bb5, bb6]
  succs []

