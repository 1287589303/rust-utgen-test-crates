bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:4622:9-4622:43)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:4622:9-4622:13)
  2: _5 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:4622:9-4622:13)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:4622:31-4622:42)
  4: _6 = _2
    SourceInfo(regex-automata/src/dfa/dense.rs:4622:31-4622:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4622:9-4622:43)
      kind: _4 = dfa::dense::MatchStates::<T>::pattern_id_slice(move _5, move _6) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:4622:42-4622:43)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:4622:42-4622:43)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:4622:44-4622:55)
  3: _7 = _3
    SourceInfo(regex-automata/src/dfa/dense.rs:4622:44-4622:55)
  4: _8 = Len((*_4))
    SourceInfo(regex-automata/src/dfa/dense.rs:4622:9-4622:56)
  5: _9 = Lt(_7, _8)
    SourceInfo(regex-automata/src/dfa/dense.rs:4622:9-4622:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4622:9-4622:56)
      kind: assert(move _9, "index out of bounds: the length is {} but the index is {}", move _8, _7) -> [success: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: _0 = (*_4)[_7]
    SourceInfo(regex-automata/src/dfa/dense.rs:4622:9-4622:56)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/dense.rs:4623:5-4623:6)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:4623:5-4623:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4623:6-4623:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:4621:5-4623:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

