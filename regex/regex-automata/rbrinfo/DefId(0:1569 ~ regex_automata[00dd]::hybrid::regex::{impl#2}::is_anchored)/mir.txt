bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:510:15-510:35)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:510:15-510:20)
  2: _4 = &(*_2)
    SourceInfo(regex-automata/src/hybrid/regex.rs:510:15-510:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:510:15-510:35)
      kind: _3 = util::search::Input::<'_>::get_anchored(move _4) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:510:34-510:35)
  1: PlaceMention(_3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:510:15-510:35)
  2: _5 = discriminant(_3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:510:15-510:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:510:9-510:35)
      kind: switchInt(move _5) -> [0: bb3, 1: bb4, 2: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:510:15-510:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:510:15-510:35)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:511:13-511:25)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: _0 = const true
    SourceInfo(regex-automata/src/hybrid/regex.rs:514:53-514:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:514:53-514:57)
      kind: goto -> bb9
  }
  preds [bb1, bb1, bb3]
  succs [bb9]

bb5
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:512:17-512:41)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:512:17-512:41)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:512:17-512:31)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:512:17-512:31)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/regex.rs:512:17-512:21)
  5: _10 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/regex.rs:512:17-512:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:512:17-512:31)
      kind: _9 = hybrid::regex::Regex::forward(move _10) -> [return: bb6, unwind: bb10]
  }
  preds [bb3]
  succs [bb6, bb10]

bb6
  0: _8 = &(*_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:512:17-512:31)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/regex.rs:512:30-512:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:512:17-512:41)
      kind: _7 = hybrid::dfa::DFA::get_nfa(move _8) -> [return: bb7, unwind: bb10]
  }
  preds [bb5]
  succs [bb7, bb10]

bb7
  0: _6 = &(*_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:512:17-512:41)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:512:40-512:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:512:17-512:68)
      kind: _0 = nfa::thompson::nfa::NFA::is_always_start_anchored(move _6) -> [return: bb8, unwind: bb10]
  }
  preds [bb6]
  succs [bb8, bb10]

bb8
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:512:67-512:68)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:513:13-513:14)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:513:13-513:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:513:13-513:14)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:516:5-516:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:516:6-516:6)
      kind: return
  }
  preds [bb4, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:509:5-516:6)
      kind: resume
  }
  preds [bb0, bb5, bb6, bb7]
  succs []

