{
  "regex-automata/src/meta/wrappers.rs:179:12:179:32": [
    {
      "Bool": {
        "Other": "input.get_earliest()"
      }
    }
  ],
  "regex-automata/src/meta/wrappers.rs:166:22:166:38": [
    {
      "Try": "self.0.as_ref()?"
    }
  ],
  "regex-automata/src/meta/wrappers.rs:184:12:184:62": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "input.get_span().len() > engine.max_haystack_len()",
          "lhs": "input.get_span().len()",
          "rhs": "engine.max_haystack_len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/meta/wrappers.rs:179:36:179:64": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "input.haystack().len() > 128",
          "lhs": "input.haystack().len()",
          "rhs": "128",
          "cmp_with_int": true
        }
      }
    }
  ]
}