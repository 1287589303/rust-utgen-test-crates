bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:28-990:72)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:37-990:70)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:37-990:69)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:63-990:68)
  4: _7 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:63-990:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:990:37-990:69)
      kind: _6 = dfa::sparse::DFA::<&[u8]>::from_bytes_unchecked(move _7) -> [return: bb1, unwind: bb44]
  }
  preds []
  succs [bb1, bb44]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:68-990:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:990:37-990:70)
      kind: _5 = <core::result::Result<(dfa::sparse::DFA<&[u8]>, usize), util::wire::DeserializeError> as core::ops::Try>::branch(move _6) -> [return: bb2, unwind: bb43]
  }
  preds [bb0]
  succs [bb2, bb43]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:69-990:70)
  1: PlaceMention(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:37-990:70)
  2: _8 = discriminant(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:37-990:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:990:37-990:70)
      kind: switchInt(move _8) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:37-990:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:990:37-990:70)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:990:69-990:70)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:37-990:70)
  1: _12 = move ((_5 as Continue).0: (dfa::sparse::DFA<&[u8]>, usize))
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:37-990:70)
  2: _4 = move _12
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:37-990:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:990:69-990:70)
      kind: drop(_12) -> [return: bb8, unwind: bb42]
  }
  preds [bb2, bb4]
  succs [bb8, bb42]

bb6
  0: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:69-990:70)
  1: _9 = move ((_5 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:69-990:70)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:69-990:70)
  3: _11 = move _9
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:69-990:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:990:37-990:70)
      kind: _0 = <core::result::Result<(dfa::sparse::DFA<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _11) -> [return: bb7, unwind: bb42]
  }
  preds [bb4]
  succs [bb7, bb42]

bb7
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:69-990:70)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:69-990:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:990:72-990:73)
      kind: drop(_5) -> [return: bb34, unwind: bb44]
  }
  preds [bb6]
  succs [bb34, bb44]

bb8
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:69-990:70)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:28-990:72)
  2: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:14-990:17)
  3: _2 = move (_4.0: dfa::sparse::DFA<&[u8]>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:14-990:17)
  4: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:19-990:24)
  5: _3 = (_4.1: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:19-990:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:990:72-990:73)
      kind: drop(_4) -> [return: bb9, unwind: bb40]
  }
  preds [bb5]
  succs [bb9, bb40]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:990:72-990:73)
      kind: drop(_5) -> [return: bb10, unwind: bb41]
  }
  preds [bb8]
  succs [bb10, bb41]

bb10
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:72-990:73)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:72-990:73)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:13-991:17)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:50)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:49)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:26)
  6: _16 = &(_2.0: dfa::sparse::Transitions<&[u8]>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:26)
  7: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:36-991:48)
  8: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:36-991:48)
  9: _18 = &(_2.2: dfa::special::Special)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:36-991:48)
  10: _17 = &(*_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:36-991:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:49)
      kind: _15 = dfa::sparse::Transitions::<&[u8]>::validate(move _16, move _17) -> [return: bb11, unwind: bb41]
  }
  preds [bb9]
  succs [bb11, bb41]

bb11
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:48-991:49)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:48-991:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:50)
      kind: _14 = <core::result::Result<dfa::sparse::Seen, util::wire::DeserializeError> as core::ops::Try>::branch(move _15) -> [return: bb12, unwind: bb39]
  }
  preds [bb10]
  succs [bb12, bb39]

bb12
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:49-991:50)
  1: PlaceMention(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:50)
  2: _19 = discriminant(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:50)
      kind: switchInt(move _19) -> [0: bb15, 1: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:50)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:991:49-991:50)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:50)
  1: _23 = move ((_14 as Continue).0: dfa::sparse::Seen)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:50)
  2: _13 = move _23
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:991:49-991:50)
      kind: drop(_23) -> [return: bb18, unwind: bb38]
  }
  preds [bb12, bb14]
  succs [bb18, bb38]

bb16
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:49-991:50)
  1: _20 = move ((_14 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:49-991:50)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:49-991:50)
  3: _22 = move _20
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:49-991:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:991:20-991:50)
      kind: _0 = <core::result::Result<(dfa::sparse::DFA<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _22) -> [return: bb17, unwind: bb38]
  }
  preds [bb14]
  succs [bb17, bb38]

bb17
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:49-991:50)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:49-991:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:991:50-991:51)
      kind: drop(_14) -> [return: bb31, unwind: bb41]
  }
  preds [bb16]
  succs [bb31, bb41]

bb18
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:49-991:50)
  1: FakeRead(ForLet(None), _13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:13-991:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:991:50-991:51)
      kind: drop(_14) -> [return: bb19, unwind: bb37]
  }
  preds [bb15]
  succs [bb19, bb37]

bb19
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:50-991:51)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:50-991:51)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:46)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:46)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:45)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:15)
  6: _27 = &(_2.1: dfa::sparse::StartTable<&[u8]>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:15)
  7: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:25-992:37)
  8: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:25-992:37)
  9: _29 = &(_2.2: dfa::special::Special)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:25-992:37)
  10: _28 = &(*_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:25-992:37)
  11: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:39-992:44)
  12: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:39-992:44)
  13: _31 = &_13
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:39-992:44)
  14: _30 = &(*_31)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:39-992:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:45)
      kind: _26 = dfa::sparse::StartTable::<&[u8]>::validate(move _27, move _28, move _30) -> [return: bb20, unwind: bb37]
  }
  preds [bb18]
  succs [bb20, bb37]

bb20
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:44-992:45)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:44-992:45)
  2: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:44-992:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:46)
      kind: _25 = <core::result::Result<(), util::wire::DeserializeError> as core::ops::Try>::branch(move _26) -> [return: bb21, unwind: bb37]
  }
  preds [bb19]
  succs [bb21, bb37]

bb21
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:45-992:46)
  1: PlaceMention(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:46)
  2: _32 = discriminant(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:46)
      kind: switchInt(move _32) -> [0: bb24, 1: bb23, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb23, bb24]

bb22
  0: FakeRead(ForMatchedPlace(None), _25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:46)
      kind: unreachable
  }
  preds [bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:992:45-992:46)
      kind: falseEdge -> [real: bb25, imaginary: bb24]
  }
  preds [bb21]
  succs [bb24, bb25]

bb24
  0: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:46)
  1: _36 = ((_25 as Continue).0: ())
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:46)
  2: _24 = _36
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:46)
  3: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:45-992:46)
  4: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:46-992:47)
  5: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:46-992:47)
  6: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:46-992:47)
  7: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:46-992:47)
  8: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/sparse.rs:995:12-995:24)
  9: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/sparse.rs:995:13-995:16)
  10: _38 = move _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:995:13-995:16)
  11: StorageLive(_39)
    SourceInfo(regex-automata/src/dfa/sparse.rs:995:18-995:23)
  12: _39 = _3
    SourceInfo(regex-automata/src/dfa/sparse.rs:995:18-995:23)
  13: _37 = (move _38, move _39)
    SourceInfo(regex-automata/src/dfa/sparse.rs:995:12-995:24)
  14: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/sparse.rs:995:23-995:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:995:23-995:24)
      kind: drop(_38) -> [return: bb27, unwind: bb36]
  }
  preds [bb21, bb23]
  succs [bb27, bb36]

bb25
  0: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:45-992:46)
  1: _33 = move ((_25 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:45-992:46)
  2: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:45-992:46)
  3: _35 = move _33
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:45-992:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:992:9-992:46)
      kind: _0 = <core::result::Result<(dfa::sparse::DFA<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _35) -> [return: bb26, unwind: bb37]
  }
  preds [bb23]
  succs [bb26, bb37]

bb26
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:45-992:46)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:45-992:46)
  2: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:46-992:47)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:46-992:47)
  4: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:46-992:47)
  5: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:992:46-992:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:996:5-996:6)
      kind: drop(_13) -> [return: bb32, unwind: bb41]
  }
  preds [bb25]
  succs [bb32, bb41]

bb27
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/sparse.rs:995:23-995:24)
  1: _0 = core::result::Result::<(dfa::sparse::DFA<&[u8]>, usize), util::wire::DeserializeError>::Ok(move _37)
    SourceInfo(regex-automata/src/dfa/sparse.rs:995:9-995:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:995:24-995:25)
      kind: drop(_37) -> [return: bb28, unwind: bb37]
  }
  preds [bb24]
  succs [bb28, bb37]

bb28
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/sparse.rs:995:24-995:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:996:5-996:6)
      kind: drop(_13) -> [return: bb29, unwind: bb41]
  }
  preds [bb27]
  succs [bb29, bb41]

bb29
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:996:5-996:6)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:996:5-996:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:996:5-996:6)
      kind: drop(_2) -> [return: bb30, unwind: bb44]
  }
  preds [bb28]
  succs [bb30, bb44]

bb30
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:996:5-996:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:996:6-996:6)
      kind: goto -> bb35
  }
  preds [bb29]
  succs [bb35]

bb31
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:50-991:51)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:991:50-991:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb17]
  succs [bb32]

bb32
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:996:5-996:6)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:996:5-996:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:996:5-996:6)
      kind: drop(_2) -> [return: bb33, unwind: bb44]
  }
  preds [bb26, bb31]
  succs [bb33, bb44]

bb33
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:996:5-996:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb35
  }
  preds [bb32]
  succs [bb35]

bb34
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:72-990:73)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:990:72-990:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb35
  }
  preds [bb7]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:996:6-996:6)
      kind: return
  }
  preds [bb30, bb33, bb34]
  succs []

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:995:24-995:25)
      kind: drop(_37) -> [return: bb37, unwind terminate(cleanup)]
  }
  preds [bb24]
  succs [bb37]

bb37
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:996:5-996:6)
      kind: drop(_13) -> [return: bb41, unwind terminate(cleanup)]
  }
  preds [bb18, bb19, bb20, bb25, bb27, bb36]
  succs [bb41]

bb38
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:991:50-991:51)
      kind: drop(_14) -> [return: bb41, unwind terminate(cleanup)]
  }
  preds [bb15, bb16]
  succs [bb41]

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:991:49-991:50)
      kind: drop(_15) -> [return: bb41, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb41]

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:990:72-990:73)
      kind: drop(_5) -> [return: bb41, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb41]

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:996:5-996:6)
      kind: drop(_2) -> [return: bb44, unwind terminate(cleanup)]
  }
  preds [bb9, bb10, bb17, bb26, bb28, bb37, bb38, bb39, bb40]
  succs [bb44]

bb42
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:990:72-990:73)
      kind: drop(_5) -> [return: bb44, unwind terminate(cleanup)]
  }
  preds [bb5, bb6]
  succs [bb44]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:990:69-990:70)
      kind: drop(_6) -> [return: bb44, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb44]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:984:5-996:6)
      kind: resume
  }
  preds [bb0, bb7, bb29, bb32, bb41, bb42, bb43]
  succs []

