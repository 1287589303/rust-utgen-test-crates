bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3820:13-3820:36)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3820:13-3820:17)
  2: _5 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3820:13-3820:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3820:13-3820:36)
      kind: _4 = hybrid::dfa::Config::get_byte_classes(move _5) -> [return: bb1, unwind: bb13]
  }
  preds []
  succs [bb1, bb13]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3820:13-3820:36)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3820:35-3820:36)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3828:17-3828:24)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3828:27-3828:47)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3828:27-3828:47)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3828:27-3828:30)
  5: _9 = &(*_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3828:27-3828:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3828:27-3828:47)
      kind: _8 = nfa::thompson::nfa::NFA::byte_class_set(move _9) -> [return: bb4, unwind: bb13]
  }
  preds [bb1]
  succs [bb4, bb13]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3820:35-3820:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3826:13-3826:38)
      kind: _0 = util::alphabet::ByteClasses::singletons() -> [return: bb12, unwind: bb13]
  }
  preds [bb1]
  succs [bb12, bb13]

bb4
  0: _7 = &(*_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3828:27-3828:47)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3828:46-3828:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3828:27-3828:55)
      kind: _6 = <util::alphabet::ByteClassSet as core::clone::Clone>::clone(move _7) -> [return: bb5, unwind: bb13]
  }
  preds [bb2]
  succs [bb5, bb13]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3828:54-3828:55)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3828:17-3828:24)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3828:55-3828:56)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3837:13-3839:14)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3837:17-3837:32)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3837:17-3837:21)
  6: _12 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3837:17-3837:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3837:17-3837:32)
      kind: _11 = util::alphabet::ByteSet::is_empty(move _12) -> [return: bb6, unwind: bb13]
  }
  preds [bb4]
  succs [bb6, bb13]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3837:17-3837:32)
      kind: switchInt(move _11) -> [0: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3837:31-3837:32)
  1: _10 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3839:14-3839:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3837:13-3839:14)
      kind: goto -> bb10
  }
  preds [bb6]
  succs [bb10]

bb8
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3837:31-3837:32)
  1: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3838:17-3838:35)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3838:17-3838:20)
  3: _14 = &mut _6
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3838:17-3838:20)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3838:29-3838:34)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3838:29-3838:34)
  6: _16 = &_3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3838:29-3838:34)
  7: _15 = &(*(*_16))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3838:29-3838:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3838:17-3838:35)
      kind: _13 = util::alphabet::ByteClassSet::add_set(move _14, move _15) -> [return: bb9, unwind: bb13]
  }
  preds [bb6]
  succs [bb9, bb13]

bb9
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3838:34-3838:35)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3838:34-3838:35)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3838:35-3838:36)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3838:35-3838:36)
  4: _10 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3837:33-3839:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3837:13-3839:14)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3839:13-3839:14)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3839:13-3839:14)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3840:13-3840:16)
  3: _17 = &_6
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3840:13-3840:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3840:13-3840:31)
      kind: _0 = util::alphabet::ByteClassSet::byte_classes(move _17) -> [return: bb11, unwind: bb13]
  }
  preds [bb7, bb9]
  succs [bb11, bb13]

bb11
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3840:30-3840:31)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3841:9-3841:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3820:9-3841:10)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:3841:9-3841:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3842:6-3842:6)
      kind: return
  }
  preds [bb3, bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:3815:5-3842:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb5, bb8, bb10]
  succs []

