bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/sparse_set.rs:173:9-175:10)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/sparse_set.rs:173:12-173:29)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/sparse_set.rs:173:12-173:16)
  3: _5 = &(*_1)
    SourceInfo(regex-automata/src/util/sparse_set.rs:173:12-173:16)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/util/sparse_set.rs:173:26-173:28)
  5: _6 = _2
    SourceInfo(regex-automata/src/util/sparse_set.rs:173:26-173:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:173:12-173:29)
      kind: _4 = util::sparse_set::SparseSet::contains(move _5, move _6) -> [return: bb1, unwind: bb18]
  }
  preds []
  succs [bb1, bb18]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:173:12-173:29)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/sparse_set.rs:173:28-173:29)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/sparse_set.rs:173:28-173:29)
  2: _0 = const false
    SourceInfo(regex-automata/src/util/sparse_set.rs:174:20-174:25)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/util/sparse_set.rs:175:9-175:10)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/util/sparse_set.rs:175:9-175:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:192:6-192:6)
      kind: goto -> bb17
  }
  preds [bb1]
  succs [bb17]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/sparse_set.rs:173:28-173:29)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/util/sparse_set.rs:173:28-173:29)
  2: _3 = const ()
    SourceInfo(regex-automata/src/util/sparse_set.rs:175:10-175:10)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/util/sparse_set.rs:175:9-175:10)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/util/sparse_set.rs:175:9-175:10)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/util/sparse_set.rs:177:13-177:14)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/util/sparse_set.rs:177:17-177:21)
  7: _9 = &(*_1)
    SourceInfo(regex-automata/src/util/sparse_set.rs:177:17-177:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:177:17-177:27)
      kind: _8 = util::sparse_set::SparseSet::len(move _9) -> [return: bb4, unwind: bb18]
  }
  preds [bb1]
  succs [bb4, bb18]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/sparse_set.rs:177:26-177:27)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(regex-automata/src/util/sparse_set.rs:177:13-177:14)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/util/sparse_set.rs:178:9-184:10)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/util/sparse_set.rs:179:13-179:32)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/util/sparse_set.rs:179:13-179:14)
  5: _12 = _8
    SourceInfo(regex-automata/src/util/sparse_set.rs:179:13-179:14)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/util/sparse_set.rs:179:17-179:32)
  7: StorageLive(_14)
    SourceInfo(regex-automata/src/util/sparse_set.rs:179:17-179:21)
  8: _14 = &(*_1)
    SourceInfo(regex-automata/src/util/sparse_set.rs:179:17-179:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:179:17-179:32)
      kind: _13 = util::sparse_set::SparseSet::capacity(move _14) -> [return: bb5, unwind: bb18]
  }
  preds [bb3]
  succs [bb5, bb18]

bb5
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/util/sparse_set.rs:179:31-179:32)
  1: _11 = Lt(move _12, move _13)
    SourceInfo(regex-automata/src/util/sparse_set.rs:179:13-179:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:179:13-179:32)
      kind: switchInt(move _11) -> [0: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/sparse_set.rs:179:31-179:32)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/util/sparse_set.rs:179:31-179:32)
  2: _10 = const ()
    SourceInfo(regex-automata/src/util/sparse_set.rs:184:10-184:10)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/util/sparse_set.rs:184:9-184:10)
  4: StorageDead(_10)
    SourceInfo(regex-automata/src/util/sparse_set.rs:184:9-184:10)
  5: StorageLive(_35)
    SourceInfo(regex-automata/src/util/sparse_set.rs:187:13-187:18)
  6: StorageLive(_36)
    SourceInfo(regex-automata/src/util/sparse_set.rs:187:44-187:45)
  7: _36 = _8
    SourceInfo(regex-automata/src/util/sparse_set.rs:187:44-187:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:187:21-187:46)
      kind: _35 = util::primitives::StateID::new_unchecked(move _36) -> [return: bb13, unwind: bb18]
  }
  preds [bb5]
  succs [bb13, bb18]

bb7
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/sparse_set.rs:179:31-179:32)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/util/sparse_set.rs:179:31-179:32)
  2: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_18)
    SourceInfo(regex-automata/src/util/sparse_set.rs:180:13-180:64)
  5: StorageLive(_19)
    SourceInfo(regex-automata/src/util/sparse_set.rs:180:13-180:64)
  6: StorageLive(_20)
    SourceInfo(regex-automata/src/util/sparse_set.rs:180:13-180:64)
  7: _20 = [const "", const " exceeds capacity of ", const " when inserting "]
    SourceInfo(regex-automata/src/util/sparse_set.rs:180:13-180:64)
  8: _19 = &_20
    SourceInfo(regex-automata/src/util/sparse_set.rs:180:13-180:64)
  9: _18 = &(*_19)
    SourceInfo(regex-automata/src/util/sparse_set.rs:180:13-180:64)
  10: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  12: StorageLive(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  13: StorageLive(_24)
    SourceInfo(regex-automata/src/util/sparse_set.rs:180:14-180:18)
  14: StorageLive(_25)
    SourceInfo(regex-automata/src/util/sparse_set.rs:181:13-181:14)
  15: StorageLive(_26)
    SourceInfo(regex-automata/src/util/sparse_set.rs:181:13-181:14)
  16: _26 = &_8
    SourceInfo(regex-automata/src/util/sparse_set.rs:181:13-181:14)
  17: _25 = &(*_26)
    SourceInfo(regex-automata/src/util/sparse_set.rs:181:13-181:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:180:14-180:18)
      kind: _24 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(move _25) -> [return: bb8, unwind: bb18]
  }
  preds [bb5]
  succs [bb8, bb18]

bb8
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/util/sparse_set.rs:180:17-180:18)
  1: StorageLive(_27)
    SourceInfo(regex-automata/src/util/sparse_set.rs:180:39-180:43)
  2: StorageLive(_28)
    SourceInfo(regex-automata/src/util/sparse_set.rs:182:13-182:28)
  3: StorageLive(_29)
    SourceInfo(regex-automata/src/util/sparse_set.rs:182:13-182:28)
  4: StorageLive(_30)
    SourceInfo(regex-automata/src/util/sparse_set.rs:182:13-182:28)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/util/sparse_set.rs:182:13-182:17)
  6: _31 = &(*_1)
    SourceInfo(regex-automata/src/util/sparse_set.rs:182:13-182:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:182:13-182:28)
      kind: _30 = util::sparse_set::SparseSet::capacity(move _31) -> [return: bb9, unwind: bb18]
  }
  preds [bb7]
  succs [bb9, bb18]

bb9
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/util/sparse_set.rs:182:27-182:28)
  1: _29 = &_30
    SourceInfo(regex-automata/src/util/sparse_set.rs:182:13-182:28)
  2: _28 = &(*_29)
    SourceInfo(regex-automata/src/util/sparse_set.rs:182:13-182:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:180:39-180:43)
      kind: _27 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(move _28) -> [return: bb10, unwind: bb18]
  }
  preds [bb8]
  succs [bb10, bb18]

bb10
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/util/sparse_set.rs:180:42-180:43)
  1: StorageLive(_32)
    SourceInfo(regex-automata/src/util/sparse_set.rs:180:59-180:63)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/util/sparse_set.rs:183:13-183:15)
  3: StorageLive(_34)
    SourceInfo(regex-automata/src/util/sparse_set.rs:183:13-183:15)
  4: _34 = &_2
    SourceInfo(regex-automata/src/util/sparse_set.rs:183:13-183:15)
  5: _33 = &(*_34)
    SourceInfo(regex-automata/src/util/sparse_set.rs:183:13-183:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:180:59-180:63)
      kind: _32 = core::fmt::rt::Argument::<'_>::new_debug::<util::primitives::StateID>(move _33) -> [return: bb11, unwind: bb18]
  }
  preds [bb9]
  succs [bb11, bb18]

bb11
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/util/sparse_set.rs:180:62-180:63)
  1: _23 = [move _24, move _27, move _32]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_32)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: StorageDead(_27)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  4: StorageDead(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  5: _22 = &_23
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  6: _21 = &(*_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _17 = core::fmt::Arguments::<'_>::new_v1::<3, 3>(move _18, move _21) -> [return: bb12, unwind: bb18]
  }
  preds [bb10]
  succs [bb12, bb18]

bb12
  0: StorageDead(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _16 = core::panicking::panic_fmt(move _17) -> bb18
  }
  preds [bb11]
  succs [bb18]

bb13
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/util/sparse_set.rs:187:45-187:46)
  1: FakeRead(ForLet(None), _35)
    SourceInfo(regex-automata/src/util/sparse_set.rs:187:13-187:18)
  2: StorageLive(_37)
    SourceInfo(regex-automata/src/util/sparse_set.rs:188:29-188:31)
  3: _37 = _2
    SourceInfo(regex-automata/src/util/sparse_set.rs:188:29-188:31)
  4: StorageLive(_38)
    SourceInfo(regex-automata/src/util/sparse_set.rs:188:19-188:26)
  5: StorageLive(_39)
    SourceInfo(regex-automata/src/util/sparse_set.rs:188:9-188:19)
  6: _39 = &mut ((*_1).1: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/util/sparse_set.rs:188:9-188:19)
  7: StorageLive(_40)
    SourceInfo(regex-automata/src/util/sparse_set.rs:188:20-188:25)
  8: _40 = _35
    SourceInfo(regex-automata/src/util/sparse_set.rs:188:20-188:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:188:19-188:26)
      kind: _38 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _39, move _40) -> [return: bb14, unwind: bb18]
  }
  preds [bb6]
  succs [bb14, bb18]

bb14
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/util/sparse_set.rs:188:25-188:26)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/util/sparse_set.rs:188:25-188:26)
  2: (*_38) = move _37
    SourceInfo(regex-automata/src/util/sparse_set.rs:188:9-188:31)
  3: StorageDead(_37)
    SourceInfo(regex-automata/src/util/sparse_set.rs:188:30-188:31)
  4: StorageDead(_38)
    SourceInfo(regex-automata/src/util/sparse_set.rs:188:31-188:32)
  5: StorageLive(_41)
    SourceInfo(regex-automata/src/util/sparse_set.rs:189:27-189:32)
  6: _41 = _35
    SourceInfo(regex-automata/src/util/sparse_set.rs:189:27-189:32)
  7: StorageLive(_42)
    SourceInfo(regex-automata/src/util/sparse_set.rs:189:20-189:24)
  8: StorageLive(_43)
    SourceInfo(regex-automata/src/util/sparse_set.rs:189:9-189:20)
  9: _43 = &mut ((*_1).2: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/util/sparse_set.rs:189:9-189:20)
  10: StorageLive(_44)
    SourceInfo(regex-automata/src/util/sparse_set.rs:189:21-189:23)
  11: _44 = _2
    SourceInfo(regex-automata/src/util/sparse_set.rs:189:21-189:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:189:20-189:24)
      kind: _42 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _43, move _44) -> [return: bb15, unwind: bb18]
  }
  preds [bb13]
  succs [bb15, bb18]

bb15
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/util/sparse_set.rs:189:23-189:24)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/util/sparse_set.rs:189:23-189:24)
  2: (*_42) = move _41
    SourceInfo(regex-automata/src/util/sparse_set.rs:189:9-189:32)
  3: StorageDead(_41)
    SourceInfo(regex-automata/src/util/sparse_set.rs:189:31-189:32)
  4: StorageDead(_42)
    SourceInfo(regex-automata/src/util/sparse_set.rs:189:32-189:33)
  5: _45 = AddWithOverflow(((*_1).0: usize), const 1_usize)
    SourceInfo(regex-automata/src/util/sparse_set.rs:190:9-190:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:190:9-190:22)
      kind: assert(!move (_45.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).0: usize), const 1_usize) -> [success: bb16, unwind: bb18]
  }
  preds [bb14]
  succs [bb16, bb18]

bb16
  0: ((*_1).0: usize) = move (_45.0: usize)
    SourceInfo(regex-automata/src/util/sparse_set.rs:190:9-190:22)
  1: _0 = const true
    SourceInfo(regex-automata/src/util/sparse_set.rs:191:9-191:13)
  2: StorageDead(_35)
    SourceInfo(regex-automata/src/util/sparse_set.rs:192:5-192:6)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/util/sparse_set.rs:192:5-192:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:192:6-192:6)
      kind: goto -> bb17
  }
  preds [bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:192:6-192:6)
      kind: return
  }
  preds [bb2, bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/sparse_set.rs:172:5-192:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb15]
  succs []

