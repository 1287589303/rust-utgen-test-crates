{
  "regex-automata/src/dfa/onepass.rs:2083:12:2083:27": [
    {
      "Bool": {
        "Other": "input.is_done()"
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2140:24:2140:44": [
    {
      "Bool": {
        "Other": "input.get_earliest()"
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2111:16:2111:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "i >= slots.len()",
          "lhs": "i",
          "rhs": "slots.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2099:21:2099:43": [
    {
      "For": {
        "iter_var": "slot",
        "iter_range": "cache.explicit_slots()"
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2109:20:2109:39": [
    {
      "For": {
        "iter_var": "pid",
        "iter_range": "self.nfa.patterns()"
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2138:16:2138:40": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "sid >= self.min_match_id",
          "lhs": "sid",
          "rhs": "self.min_match_id",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2110:21:2110:39": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "pid.as_usize() * 2",
          "lhs": "pid.as_usize()",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2132:22:2132:50": [
    {
      "Match": {
        "match_source": "regex-automata/src/dfa/onepass.rs:2132:22:2132:50",
        "match_str": "self.config.get_match_kind()",
        "match_kind": {
          "Enum": [
            "All",
            "LeftmostFirst"
          ]
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "regex-automata/src/dfa/onepass.rs:2132:52:2132:76": {
            "pat": {
              "pat_str": "MatchKind::LeftmostFirst",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2147:16:2147:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "sid == DEAD",
          "lhs": "sid",
          "rhs": "DEAD",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2149:25:2153:22": [
    {
      "Bool": {
        "Other": "self.nfa.look_matcher().matches_set_inline(\n                        epsilons.looks(),\n                        input.haystack(),\n                        at,\n                    )"
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2141:47:2141:65": [
    {
      "Bool": {
        "Other": "trans.match_wins()"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:457:9:460:10": [
    {
      "Match": {
        "match_source": "regex-automata/src/dfa/onepass.rs:2132:22:2132:50",
        "match_str": "self.config.get_match_kind()",
        "match_kind": {
          "Enum": [
            "All",
            "LeftmostFirst"
          ]
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "regex-automata/src/dfa/onepass.rs:2132:52:2132:76": {
            "pat": {
              "pat_str": "MatchKind::LeftmostFirst",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2139:20:2139:75": [
    {
      "Bool": {
        "Other": "self.find_match(cache, input, at, sid, slots, &mut pid)"
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2119:39:2119:63": [
    {
      "Try": "self.start_pattern(pid)?"
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2123:21:2123:56": [
    {
      "Bool": {
        "Other": "self.nfa.is_always_start_anchored()"
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2141:29:2141:43": [
    {
      "Bool": {
        "Other": "leftmost_first"
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2159:12:2159:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "next_sid >= self.min_match_id",
          "lhs": "next_sid",
          "rhs": "self.min_match_id",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2148:22:2148:49": [
    {
      "Bool": {
        "Other": "epsilons.looks().is_empty()"
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2133:19:2133:45": [
    {
      "For": {
        "iter_var": "at",
        "iter_range": "input.start()..input.end()"
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2117:34:2117:54": [
    {
      "Match": {
        "match_source": "regex-automata/src/dfa/onepass.rs:2117:34:2117:54",
        "match_str": "input.get_anchored()",
        "match_kind": {
          "Enum": [
            "No",
            "Yes",
            "Pattern"
          ]
        },
        "arms": {
          "regex-automata/src/dfa/onepass.rs:2119:13:2119:35": {
            "pat": {
              "pat_str": "Anchored::Pattern(pid)",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/onepass.rs:2119:39:2119:63"
          },
          "regex-automata/src/dfa/onepass.rs:2120:13:2120:25": {
            "pat": {
              "pat_str": "Anchored::No",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/onepass.rs:2120:29:2129:14"
          },
          "regex-automata/src/dfa/onepass.rs:2118:13:2118:26": {
            "pat": {
              "pat_str": "Anchored::Yes",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/dfa/onepass.rs:2118:30:2118:42"
          }
        }
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:2102:21:2102:37": [
    {
      "For": {
        "iter_var": "slot",
        "iter_range": "slots.iter_mut()"
      }
    }
  ]
}