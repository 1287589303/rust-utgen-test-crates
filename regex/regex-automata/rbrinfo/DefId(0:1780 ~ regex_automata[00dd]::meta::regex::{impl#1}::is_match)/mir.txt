bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:531:13-531:18)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:531:21-531:33)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:531:21-531:26)
  3: _5 = move _2
    SourceInfo(regex-automata/src/meta/regex.rs:531:21-531:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:531:21-531:33)
      kind: _4 = <I as core::convert::Into<util::search::Input<'_>>>::into(move _5) -> [return: bb1, unwind: bb17]
  }
  preds []
  succs [bb1, bb17]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:531:32-531:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:531:21-531:48)
      kind: _3 = util::search::Input::<'_>::earliest(move _4, const true) -> [return: bb2, unwind: bb18]
  }
  preds [bb0]
  succs [bb2, bb18]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:531:47-531:48)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/meta/regex.rs:531:13-531:18)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:532:9-534:10)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:532:12-532:47)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:532:12-532:25)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:532:12-532:25)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:532:12-532:20)
  7: _10 = &((*_1).0: std::sync::Arc<meta::regex::RegexI>)
    SourceInfo(regex-automata/src/meta/regex.rs:532:12-532:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:532:12-532:25)
      kind: _9 = <std::sync::Arc<meta::regex::RegexI> as core::ops::Deref>::deref(move _10) -> [return: bb3, unwind: bb18]
  }
  preds [bb1]
  succs [bb3, bb18]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:532:19-532:20)
  1: _8 = &((*_9).1: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/regex.rs:532:12-532:25)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:532:40-532:46)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:532:40-532:46)
  4: _12 = &_3
    SourceInfo(regex-automata/src/meta/regex.rs:532:40-532:46)
  5: _11 = &(*_12)
    SourceInfo(regex-automata/src/meta/regex.rs:532:40-532:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:532:12-532:47)
      kind: _7 = meta::regex::RegexInfo::is_impossible(move _8, move _11) -> [return: bb4, unwind: bb18]
  }
  preds [bb2]
  succs [bb4, bb18]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:532:12-532:47)
      kind: switchInt(move _7) -> [0: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:532:46-532:47)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:532:46-532:47)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:532:46-532:47)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:532:46-532:47)
  4: _0 = const false
    SourceInfo(regex-automata/src/meta/regex.rs:533:20-533:25)
  5: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:534:9-534:10)
  6: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:534:9-534:10)
  7: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:540:5-540:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:540:5-540:6)
      kind: drop(_2) -> [return: bb14, unwind: bb19]
  }
  preds [bb4]
  succs [bb14, bb19]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:532:46-532:47)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:532:46-532:47)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:532:46-532:47)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:532:46-532:47)
  4: _6 = const ()
    SourceInfo(regex-automata/src/meta/regex.rs:534:10-534:10)
  5: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:534:9-534:10)
  6: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:534:9-534:10)
  7: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:535:13-535:22)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:535:25-535:34)
  9: _15 = &((*_1).1: util::pool::Pool<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>)
    SourceInfo(regex-automata/src/meta/regex.rs:535:25-535:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:535:25-535:40)
      kind: _14 = util::pool::Pool::<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>::get(move _15) -> [return: bb7, unwind: bb18]
  }
  preds [bb4]
  succs [bb7, bb18]

bb7
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:535:39-535:40)
  1: FakeRead(ForLet(None), _14)
    SourceInfo(regex-automata/src/meta/regex.rs:535:13-535:22)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:536:13-536:19)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:536:22-536:36)
  4: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/regex.rs:536:22-536:65)
  5: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/regex.rs:536:22-536:36)
  6: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/regex.rs:536:22-536:36)
  7: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/regex.rs:536:22-536:30)
  8: _21 = &((*_1).0: std::sync::Arc<meta::regex::RegexI>)
    SourceInfo(regex-automata/src/meta/regex.rs:536:22-536:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:536:22-536:36)
      kind: _20 = <std::sync::Arc<meta::regex::RegexI> as core::ops::Deref>::deref(move _21) -> [return: bb8, unwind: bb16]
  }
  preds [bb6]
  succs [bb8, bb16]

bb8
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/regex.rs:536:29-536:30)
  1: _19 = &((*_20).0: std::sync::Arc<dyn meta::strategy::Strategy>)
    SourceInfo(regex-automata/src/meta/regex.rs:536:22-536:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:536:22-536:65)
      kind: _18 = <std::sync::Arc<dyn meta::strategy::Strategy> as core::ops::Deref>::deref(move _19) -> [return: bb9, unwind: bb16]
  }
  preds [bb7]
  succs [bb9, bb16]

bb9
  0: _17 = &(*_18)
    SourceInfo(regex-automata/src/meta/regex.rs:536:22-536:36)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/regex.rs:536:35-536:36)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/regex.rs:536:46-536:56)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/regex.rs:536:46-536:56)
  4: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/regex.rs:536:46-536:56)
  5: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/regex.rs:536:46-536:56)
  6: _25 = &mut _14
    SourceInfo(regex-automata/src/meta/regex.rs:536:46-536:56)
  7: _24 = &mut (*_25)
    SourceInfo(regex-automata/src/meta/regex.rs:536:46-536:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:536:46-536:56)
      kind: _23 = <util::pool::PoolGuard<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>> as core::ops::DerefMut>::deref_mut(move _24) -> [return: bb10, unwind: bb16]
  }
  preds [bb8]
  succs [bb10, bb16]

bb10
  0: _22 = &mut (*_23)
    SourceInfo(regex-automata/src/meta/regex.rs:536:46-536:56)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/regex.rs:536:55-536:56)
  2: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/regex.rs:536:58-536:64)
  3: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/regex.rs:536:58-536:64)
  4: _27 = &_3
    SourceInfo(regex-automata/src/meta/regex.rs:536:58-536:64)
  5: _26 = &(*_27)
    SourceInfo(regex-automata/src/meta/regex.rs:536:58-536:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:536:22-536:65)
      kind: _16 = <dyn meta::strategy::Strategy as meta::strategy::Strategy>::is_match(move _17, move _22, move _26) -> [return: bb11, unwind: bb16]
  }
  preds [bb9]
  succs [bb11, bb16]

bb11
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/regex.rs:536:64-536:65)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/regex.rs:536:64-536:65)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:536:64-536:65)
  3: FakeRead(ForLet(None), _16)
    SourceInfo(regex-automata/src/meta/regex.rs:536:13-536:19)
  4: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/regex.rs:536:65-536:66)
  5: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/regex.rs:536:65-536:66)
  6: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/regex.rs:536:65-536:66)
  7: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/regex.rs:536:65-536:66)
  8: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/regex.rs:536:65-536:66)
  9: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/regex.rs:538:9-538:30)
  10: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/regex.rs:538:24-538:29)
  11: _29 = move _14
    SourceInfo(regex-automata/src/meta/regex.rs:538:24-538:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:538:9-538:30)
      kind: _28 = util::pool::PoolGuard::<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>::put(move _29) -> [return: bb12, unwind: bb15]
  }
  preds [bb10]
  succs [bb12, bb15]

bb12
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/regex.rs:538:29-538:30)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/regex.rs:538:30-538:31)
  2: _0 = _16
    SourceInfo(regex-automata/src/meta/regex.rs:539:9-539:15)
  3: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:540:5-540:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:540:5-540:6)
      kind: drop(_14) -> [return: bb13, unwind: bb18]
  }
  preds [bb11]
  succs [bb13, bb18]

bb13
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:540:5-540:6)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:540:5-540:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:540:5-540:6)
      kind: drop(_2) -> [return: bb14, unwind: bb19]
  }
  preds [bb12]
  succs [bb14, bb19]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:540:6-540:6)
      kind: return
  }
  preds [bb5, bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:538:29-538:30)
      kind: drop(_29) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:540:5-540:6)
      kind: drop(_14) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb7, bb8, bb9, bb10, bb15]
  succs [bb18]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:531:32-531:33)
      kind: drop(_5) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:540:5-540:6)
      kind: drop(_2) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb3, bb6, bb12, bb16, bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:530:5-540:6)
      kind: resume
  }
  preds [bb5, bb13, bb18]
  succs []

