{
  "regex-automata/src/util/utf8.rs:104:15:104:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "byte & 0b1100_0000",
          "lhs": "byte",
          "rhs": "0b1100_0000",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/utf8.rs:104:15:104:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "byte & 0b1100_0000 == 0b1000_0000",
          "lhs": "byte & 0b1100_0000",
          "rhs": "0b1000_0000",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/utf8.rs:102:8:102:20": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "byte <= 0x7F",
          "lhs": "byte",
          "rhs": "0x7F",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/utf8.rs:106:15:106:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "byte <= 0b1101_1111",
          "lhs": "byte",
          "rhs": "0b1101_1111",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/utf8.rs:110:15:110:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "byte <= 0b1111_0111",
          "lhs": "byte",
          "rhs": "0b1111_0111",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/utf8.rs:108:15:108:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "byte <= 0b1110_1111",
          "lhs": "byte",
          "rhs": "0b1110_1111",
          "cmp_with_int": true
        }
      }
    }
  ]
}