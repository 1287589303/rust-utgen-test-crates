bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:238:13-239:72)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:238:13-238:19)
  2: _5 = &((*_1).0: nfa::thompson::backtrack::BoundedBacktracker)
    SourceInfo(regex-automata/src/meta/wrappers.rs:238:13-238:19)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:31-239:56)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:31-239:56)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:31-239:47)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:31-239:38)
  7: _9 = &mut ((*_2).0: core::option::Option<nfa::thompson::backtrack::Cache>)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:31-239:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:239:31-239:47)
      kind: _8 = core::option::Option::<nfa::thompson::backtrack::Cache>::as_mut(move _9) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:46-239:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:239:31-239:56)
      kind: _7 = core::option::Option::<&mut nfa::thompson::backtrack::Cache>::unwrap(move _8) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: _6 = &mut (*_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:31-239:56)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:55-239:56)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:58-239:71)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:58-239:63)
  4: _11 = &(*_3)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:58-239:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:239:58-239:71)
      kind: _10 = <util::search::Input<'_> as core::clone::Clone>::clone(move _11) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:70-239:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:238:13-239:72)
      kind: _4 = nfa::thompson::backtrack::BoundedBacktracker::try_is_match::<'_, util::search::Input<'_>>(move _5, move _6, move _10) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:71-239:72)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:71-239:72)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/wrappers.rs:239:71-239:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:238:13-240:26)
      kind: _0 = core::result::Result::<bool, util::search::MatchError>::unwrap(move _4) -> [return: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/wrappers.rs:240:25-240:26)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/wrappers.rs:248:5-248:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:248:6-248:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:240:25-240:26)
      kind: drop(_4) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/wrappers.rs:228:5-248:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb6]
  succs []

