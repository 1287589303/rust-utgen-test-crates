bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:3031:29-3031:38)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:3031:34-3031:37)
  2: _4 = _2
    SourceInfo(regex-automata/src/meta/regex.rs:3031:34-3031:37)
  3: _3 = core::option::Option::<bool>::Some(move _4)
    SourceInfo(regex-automata/src/meta/regex.rs:3031:29-3031:38)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:3031:37-3031:38)
  5: _0 = meta::regex::Config { match_kind: (_1.0: core::option::Option<util::search::MatchKind>), utf8_empty: (_1.1: core::option::Option<bool>), autopre: (_1.2: core::option::Option<bool>), pre: move (_1.3: core::option::Option<core::option::Option<util::prefilter::Prefilter>>), which_captures: (_1.4: core::option::Option<nfa::thompson::compiler::WhichCaptures>), nfa_size_limit: (_1.5: core::option::Option<core::option::Option<usize>>), onepass_size_limit: (_1.6: core::option::Option<core::option::Option<usize>>), hybrid_cache_capacity: (_1.7: core::option::Option<usize>), hybrid: (_1.8: core::option::Option<bool>), dfa: (_1.9: core::option::Option<bool>), dfa_size_limit: (_1.10: core::option::Option<core::option::Option<usize>>), dfa_state_limit: (_1.11: core::option::Option<core::option::Option<usize>>), onepass: (_1.12: core::option::Option<bool>), backtrack: move _3, byte_classes: (_1.14: core::option::Option<bool>), line_terminator: (_1.15: core::option::Option<u8>) }
    SourceInfo(regex-automata/src/meta/regex.rs:3031:9-3031:48)
  6: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:3031:47-3031:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3032:5-3032:6)
      kind: drop(_1) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3032:6-3032:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:3030:5-3032:6)
      kind: resume
  }
  preds [bb0]
  succs []

