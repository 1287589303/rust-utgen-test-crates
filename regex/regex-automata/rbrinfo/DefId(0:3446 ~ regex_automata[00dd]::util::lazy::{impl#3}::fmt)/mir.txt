bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/lazy.rs:93:9-93:15)
  1: _3 = &((*_1).0: util::lazy::lazy::Lazy<T, F>)
    SourceInfo(regex-automata/src/util/lazy.rs:93:9-93:15)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/lazy.rs:93:20-93:21)
  3: _4 = &mut (*_2)
    SourceInfo(regex-automata/src/util/lazy.rs:93:20-93:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/lazy.rs:93:9-93:22)
      kind: _0 = <util::lazy::lazy::Lazy<T, F> as core::fmt::Debug>::fmt(move _3, move _4) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/lazy.rs:93:21-93:22)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/util/lazy.rs:93:21-93:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/lazy.rs:94:6-94:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/lazy.rs:92:5-94:6)
      kind: resume
  }
  preds [bb0]
  succs []

