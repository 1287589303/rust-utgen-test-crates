bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2266:13-2266:19)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2266:22-2266:36)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2266:22-2266:25)
  3: _7 = &_2
    SourceInfo(regex-automata/src/dfa/onepass.rs:2266:22-2266:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2266:22-2266:36)
      kind: _6 = util::primitives::StateID::as_usize(move _7) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2266:35-2266:36)
  1: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2266:40-2266:54)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2266:40-2266:44)
  3: _9 = &(*_1)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2266:40-2266:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2266:40-2266:54)
      kind: _8 = dfa::onepass::DFA::stride2(move _9) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2266:53-2266:54)
  1: _10 = Lt(_8, const 64_usize)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2266:22-2266:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2266:22-2266:54)
      kind: assert(move _10, "attempt to shift left by `{}`, which would overflow", _8) -> [success: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: _5 = Shl(move _6, move _8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2266:22-2266:54)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2266:53-2266:54)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2266:53-2266:54)
  3: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2266:13-2266:19)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2267:13-2267:18)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2267:21-2267:43)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2267:21-2267:33)
  7: _13 = &((*_1).5: util::alphabet::ByteClasses)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2267:21-2267:33)
  8: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2267:38-2267:42)
  9: _14 = _3
    SourceInfo(regex-automata/src/dfa/onepass.rs:2267:38-2267:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2267:21-2267:43)
      kind: _12 = util::alphabet::ByteClasses::get(move _13, move _14) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2267:42-2267:43)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2267:42-2267:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2267:21-2267:54)
      kind: _11 = <u8 as util::int::U8>::as_usize(move _12) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2267:53-2267:54)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2267:13-2267:18)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:38-2268:40)
  3: _15 = _4
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:38-2268:40)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:19-2268:35)
  5: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:9-2268:19)
  6: _17 = &mut ((*_1).2: std::vec::Vec<dfa::onepass::Transition>)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:9-2268:19)
  7: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:20-2268:34)
  8: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:20-2268:26)
  9: _19 = _5
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:20-2268:26)
  10: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:29-2268:34)
  11: _20 = _11
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:29-2268:34)
  12: _21 = AddWithOverflow(_19, _20)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:20-2268:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2268:20-2268:34)
      kind: assert(!move (_21.1: bool), "attempt to compute `{} + {}`, which would overflow", move _19, move _20) -> [success: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: _18 = move (_21.0: usize)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:20-2268:34)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:33-2268:34)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:33-2268:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2268:19-2268:35)
      kind: _16 = <std::vec::Vec<dfa::onepass::Transition> as core::ops::IndexMut<usize>>::index_mut(move _17, move _18) -> [return: bb7, unwind: bb8]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:34-2268:35)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:34-2268:35)
  2: (*_16) = move _15
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:9-2268:40)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:39-2268:40)
  4: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2268:40-2268:41)
  5: _0 = const ()
    SourceInfo(regex-automata/src/dfa/onepass.rs:2265:74-2269:6)
  6: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2269:5-2269:6)
  7: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2269:5-2269:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2269:6-2269:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2265:5-2269:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6]
  succs []

