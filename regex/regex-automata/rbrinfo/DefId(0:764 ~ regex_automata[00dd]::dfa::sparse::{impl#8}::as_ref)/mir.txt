bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1471:21-1471:34)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1471:21-1471:34)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1471:21-1471:25)
  3: _4 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1471:21-1471:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1471:21-1471:34)
      kind: _3 = dfa::sparse::Transitions::<T>::sparse(move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _2 = &(*_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1471:21-1471:34)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1471:33-1471:34)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1472:22-1472:42)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1472:22-1472:34)
  4: _6 = &((*_1).1: util::alphabet::ByteClasses)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1472:22-1472:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1472:22-1472:42)
      kind: _5 = <util::alphabet::ByteClasses as core::clone::Clone>::clone(move _6) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1472:41-1472:42)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1473:24-1473:38)
  2: _7 = ((*_1).2: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1473:24-1473:38)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1474:26-1474:42)
  4: _8 = ((*_1).3: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1474:26-1474:42)
  5: _0 = dfa::sparse::Transitions::<&[u8]> { sparse: move _2, classes: move _5, state_len: move _7, pattern_len: move _8 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1470:9-1475:10)
  6: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1475:9-1475:10)
  7: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1475:9-1475:10)
  8: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1475:9-1475:10)
  9: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1475:9-1475:10)
  10: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1476:5-1476:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1476:6-1476:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1469:5-1476:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

