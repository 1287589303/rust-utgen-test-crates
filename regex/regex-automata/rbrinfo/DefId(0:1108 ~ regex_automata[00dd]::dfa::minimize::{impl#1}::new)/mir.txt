bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/minimize.rs:81:13-81:27)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/minimize.rs:81:62-81:65)
  2: _3 = &(*_1)
    SourceInfo(regex-automata/src/dfa/minimize.rs:81:62-81:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:81:30-81:66)
      kind: _2 = dfa::minimize::Minimizer::<'_>::incoming_transitions(move _3) -> [return: bb1, unwind: bb15]
  }
  preds []
  succs [bb1, bb15]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/minimize.rs:81:65-81:66)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/dfa/minimize.rs:81:13-81:27)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/minimize.rs:82:13-82:23)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/minimize.rs:82:56-82:59)
  4: _5 = &(*_1)
    SourceInfo(regex-automata/src/dfa/minimize.rs:82:56-82:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:82:26-82:60)
      kind: _4 = dfa::minimize::Minimizer::<'_>::initial_partitions(move _5) -> [return: bb2, unwind: bb14]
  }
  preds [bb0]
  succs [bb2, bb14]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/minimize.rs:82:59-82:60)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/dfa/minimize.rs:82:13-82:23)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/minimize.rs:83:13-83:20)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/minimize.rs:83:23-83:33)
  4: _7 = &_4
    SourceInfo(regex-automata/src/dfa/minimize.rs:83:23-83:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:83:23-83:41)
      kind: _6 = <std::vec::Vec<dfa::minimize::StateSet> as core::clone::Clone>::clone(move _7) -> [return: bb3, unwind: bb13]
  }
  preds [bb1]
  succs [bb3, bb13]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/minimize.rs:83:40-83:41)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/dfa/minimize.rs:83:13-83:20)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/minimize.rs:84:21-84:24)
  3: _8 = &mut (*_1)
    SourceInfo(regex-automata/src/dfa/minimize.rs:84:21-84:24)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/minimize.rs:84:26-84:40)
  5: _9 = move _2
    SourceInfo(regex-automata/src/dfa/minimize.rs:84:26-84:40)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/minimize.rs:84:42-84:52)
  7: _10 = move _4
    SourceInfo(regex-automata/src/dfa/minimize.rs:84:42-84:52)
  8: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/minimize.rs:84:54-84:61)
  9: _11 = move _6
    SourceInfo(regex-automata/src/dfa/minimize.rs:84:54-84:61)
  10: _0 = dfa::minimize::Minimizer::<'_> { dfa: move _8, in_transitions: move _9, partitions: move _10, waiting: move _11 }
    SourceInfo(regex-automata/src/dfa/minimize.rs:84:9-84:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:84:62-84:63)
      kind: drop(_11) -> [return: bb4, unwind: bb10]
  }
  preds [bb2]
  succs [bb4, bb10]

bb4
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/minimize.rs:84:62-84:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:84:62-84:63)
      kind: drop(_10) -> [return: bb5, unwind: bb11]
  }
  preds [bb3]
  succs [bb5, bb11]

bb5
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/minimize.rs:84:62-84:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:84:62-84:63)
      kind: drop(_9) -> [return: bb6, unwind: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/minimize.rs:84:62-84:63)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/minimize.rs:84:62-84:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:85:5-85:6)
      kind: drop(_6) -> [return: bb7, unwind: bb13]
  }
  preds [bb5]
  succs [bb7, bb13]

bb7
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/minimize.rs:85:5-85:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:85:5-85:6)
      kind: drop(_4) -> [return: bb8, unwind: bb14]
  }
  preds [bb6]
  succs [bb8, bb14]

bb8
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/minimize.rs:85:5-85:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:85:5-85:6)
      kind: drop(_2) -> [return: bb9, unwind: bb15]
  }
  preds [bb7]
  succs [bb9, bb15]

bb9
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/minimize.rs:85:5-85:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:85:6-85:6)
      kind: return
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:84:62-84:63)
      kind: drop(_10) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:84:62-84:63)
      kind: drop(_9) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb4, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:85:5-85:6)
      kind: drop(_6) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb5, bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:85:5-85:6)
      kind: drop(_4) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb2, bb6, bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:85:5-85:6)
      kind: drop(_2) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb1, bb7, bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:80:5-85:6)
      kind: resume
  }
  preds [bb0, bb8, bb14]
  succs []

