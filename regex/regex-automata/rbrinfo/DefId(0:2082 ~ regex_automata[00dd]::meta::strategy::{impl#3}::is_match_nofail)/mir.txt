bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:639:30-639:53)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:639:30-639:42)
  2: _5 = &((*_1).6: meta::wrappers::OnePass)
    SourceInfo(regex-automata/src/meta/strategy.rs:639:30-639:42)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:639:47-639:52)
  4: _6 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:639:47-639:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:639:30-639:53)
      kind: _4 = meta::wrappers::OnePass::get(move _5, move _6) -> [return: bb1, unwind: bb16]
  }
  preds []
  succs [bb1, bb16]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:639:52-639:53)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:639:52-639:53)
  2: PlaceMention(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:639:30-639:53)
  3: _7 = discriminant(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:639:30-639:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:639:16-639:27)
      kind: switchInt(move _7) -> [1: bb2, otherwise: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:639:16-639:27)
      kind: falseEdge -> [real: bb3, imaginary: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:639:21-639:26)
  1: _8 = &((_4 as Some).0: &meta::wrappers::OnePassEngine)
    SourceInfo(regex-automata/src/meta/strategy.rs:639:21-639:26)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:13-644:63)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:13-644:63)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:13-644:14)
  5: _11 = &(*(*_8))
    SourceInfo(regex-automata/src/meta/strategy.rs:644:13-644:14)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:28-644:46)
  7: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:28-644:46)
  8: _13 = &mut ((*_2).3: meta::wrappers::OnePassCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:28-644:46)
  9: _12 = &mut (*_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:28-644:46)
  10: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:48-644:53)
  11: _14 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:48-644:53)
  12: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:55-644:62)
  13: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:55-644:62)
  14: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:55-644:62)
  15: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:60-644:62)
  16: _18 = []
    SourceInfo(regex-automata/src/meta/strategy.rs:644:60-644:62)
  17: _17 = &mut _18
    SourceInfo(regex-automata/src/meta/strategy.rs:644:55-644:62)
  18: _16 = &mut (*_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:55-644:62)
  19: _15 = move _16 as &mut [core::option::Option<util::primitives::NonMaxUsize>] (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/meta/strategy.rs:644:55-644:62)
  20: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:61-644:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:644:13-644:63)
      kind: _10 = meta::wrappers::OnePassEngine::search_slots(move _11, move _12, move _14, move _15) -> [return: bb4, unwind: bb16]
  }
  preds [bb2]
  succs [bb4, bb16]

bb4
  0: _9 = &_10
    SourceInfo(regex-automata/src/meta/strategy.rs:644:13-644:63)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:62-644:63)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:62-644:63)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:62-644:63)
  4: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:62-644:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:644:13-644:73)
      kind: _0 = core::option::Option::<util::primitives::PatternID>::is_some(move _9) -> [return: bb5, unwind: bb16]
  }
  preds [bb3]
  succs [bb5, bb16]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:644:72-644:73)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:9-645:10)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:9-645:10)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:9-645:10)
  4: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:9-645:10)
  5: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:9-645:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:639:9-658:10)
      kind: goto -> bb15
  }
  preds [bb4]
  succs [bb15]

bb6
  0: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:37-645:62)
  1: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:37-645:51)
  2: _20 = &((*_1).5: meta::wrappers::BoundedBacktracker)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:37-645:51)
  3: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:56-645:61)
  4: _21 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:56-645:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:645:37-645:62)
      kind: _19 = meta::wrappers::BoundedBacktracker::get(move _20, move _21) -> [return: bb7, unwind: bb16]
  }
  preds [bb1, bb2]
  succs [bb7, bb16]

bb7
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:61-645:62)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:61-645:62)
  2: PlaceMention(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:37-645:62)
  3: _22 = discriminant(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:37-645:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:645:23-645:34)
      kind: switchInt(move _22) -> [1: bb8, otherwise: bb11]
  }
  preds [bb6]
  succs [bb8, bb11]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:645:23-645:34)
      kind: falseEdge -> [real: bb9, imaginary: bb11]
  }
  preds [bb7]
  succs [bb9, bb11]

bb9
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:28-645:33)
  1: _23 = &((_19 as Some).0: &meta::wrappers::BoundedBacktrackerEngine)
    SourceInfo(regex-automata/src/meta/strategy.rs:645:28-645:33)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:650:13-650:14)
  3: _24 = &(*(*_23))
    SourceInfo(regex-automata/src/meta/strategy.rs:650:13-650:14)
  4: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:650:24-650:44)
  5: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:650:24-650:44)
  6: _26 = &mut ((*_2).2: meta::wrappers::BoundedBacktrackerCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:650:24-650:44)
  7: _25 = &mut (*_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:650:24-650:44)
  8: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:650:46-650:51)
  9: _27 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:650:46-650:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:650:13-650:52)
      kind: _0 = meta::wrappers::BoundedBacktrackerEngine::is_match(move _24, move _25, move _27) -> [return: bb10, unwind: bb16]
  }
  preds [bb8]
  succs [bb10, bb16]

bb10
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:650:51-650:52)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:650:51-650:52)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:650:51-650:52)
  3: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:651:9-651:10)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:651:9-651:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:645:16-658:10)
      kind: goto -> bb14
  }
  preds [bb9]
  succs [bb14]

bb11
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:656:17-656:18)
  1: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:656:21-656:32)
  2: _29 = &((*_1).4: meta::wrappers::PikeVM)
    SourceInfo(regex-automata/src/meta/strategy.rs:656:21-656:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:656:21-656:38)
      kind: _28 = meta::wrappers::PikeVM::get(move _29) -> [return: bb12, unwind: bb16]
  }
  preds [bb7, bb8]
  succs [bb12, bb16]

bb12
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:656:37-656:38)
  1: FakeRead(ForLet(None), _28)
    SourceInfo(regex-automata/src/meta/strategy.rs:656:17-656:18)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:657:13-657:14)
  3: _30 = &(*_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:657:13-657:14)
  4: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:657:24-657:41)
  5: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:657:24-657:41)
  6: _32 = &mut ((*_2).1: meta::wrappers::PikeVMCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:657:24-657:41)
  7: _31 = &mut (*_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:657:24-657:41)
  8: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:657:43-657:48)
  9: _33 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:657:43-657:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:657:13-657:49)
      kind: _0 = meta::wrappers::PikeVMEngine::is_match(move _30, move _31, move _33) -> [return: bb13, unwind: bb16]
  }
  preds [bb11]
  succs [bb13, bb16]

bb13
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:657:48-657:49)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:657:48-657:49)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:657:48-657:49)
  3: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:658:9-658:10)
  4: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:658:9-658:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:645:16-658:10)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:658:9-658:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:639:9-658:10)
      kind: goto -> bb15
  }
  preds [bb10, bb13]
  succs [bb15]

bb15
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:659:5-659:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:659:6-659:6)
      kind: return
  }
  preds [bb5, bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:638:5-659:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb6, bb9, bb11, bb12]
  succs []

