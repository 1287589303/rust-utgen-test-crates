{
  "regex-automata/src/nfa/thompson/nfa.rs:1681:36:1681:67": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "256 * mem::size_of::<StateID>()",
          "lhs": "256",
          "rhs": "mem::size_of::<StateID>()",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/nfa.rs:1671:15:1671:20": [
    {
      "Match": {
        "match_source": "regex-automata/src/nfa/thompson/nfa.rs:1671:15:1671:20",
        "match_str": "*self",
        "match_kind": {
          "Enum": [
            "ByteRange",
            "Sparse",
            "Dense",
            "Look",
            "Union",
            "BinaryUnion",
            "Capture",
            "Fail",
            "Match"
          ]
        },
        "arms": {
          "regex-automata/src/nfa/thompson/nfa.rs:1674:15:1674:40": {
            "pat": {
              "pat_str": "State::BinaryUnion { .. }",
              "kind": {
                "Enum": 5
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1677:30:1677:31"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1676:15:1676:34": {
            "pat": {
              "pat_str": "State::Match { .. }",
              "kind": {
                "Enum": 8
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1677:30:1677:31"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1682:13:1682:44": {
            "pat": {
              "pat_str": "State::Union { ref alternates }",
              "kind": {
                "Enum": 4
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1682:48:1684:14"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1678:13:1678:65": {
            "pat": {
              "pat_str": "State::Sparse(SparseTransitions { ref transitions })",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1678:69:1680:14"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1681:13:1681:32": {
            "pat": {
              "pat_str": "State::Dense { .. }",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1681:36:1681:67"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1675:15:1675:36": {
            "pat": {
              "pat_str": "State::Capture { .. }",
              "kind": {
                "Enum": 6
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1677:30:1677:31"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1673:15:1673:33": {
            "pat": {
              "pat_str": "State::Look { .. }",
              "kind": {
                "Enum": 3
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1677:30:1677:31"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1672:13:1672:36": {
            "pat": {
              "pat_str": "State::ByteRange { .. }",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1677:30:1677:31"
          },
          "regex-automata/src/nfa/thompson/nfa.rs:1677:15:1677:26": {
            "pat": {
              "pat_str": "State::Fail",
              "kind": {
                "Enum": 7
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/nfa.rs:1677:30:1677:31"
          }
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/nfa.rs:1679:17:1679:65": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "transitions.len() * mem::size_of::<Transition>()",
          "lhs": "transitions.len()",
          "rhs": "mem::size_of::<Transition>()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/nfa.rs:1683:17:1683:61": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "alternates.len() * mem::size_of::<StateID>()",
          "lhs": "alternates.len()",
          "rhs": "mem::size_of::<StateID>()",
          "cmp_with_int": false
        }
      }
    }
  ]
}