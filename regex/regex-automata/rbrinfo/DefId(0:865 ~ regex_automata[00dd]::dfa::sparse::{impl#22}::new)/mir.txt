bb0
  0: StorageLive(_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2522:21-2522:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2522:21-2522:56)
      kind: _1 = std::collections::BTreeSet::<util::primitives::StateID>::new() -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _0 = dfa::sparse::Seen { set: move _1 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:2522:9-2522:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2522:57-2522:58)
      kind: drop(_1) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2522:57-2522:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2523:6-2523:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2521:5-2523:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

