bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:686:9-686:41)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:686:9-686:21)
  2: _4 = &mut ((*_2).1: meta::wrappers::PikeVMCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:686:9-686:21)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:686:28-686:40)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:686:28-686:40)
  5: _6 = &((*_1).4: meta::wrappers::PikeVM)
    SourceInfo(regex-automata/src/meta/strategy.rs:686:28-686:40)
  6: _5 = &(*_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:686:28-686:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:686:9-686:41)
      kind: _3 = meta::wrappers::PikeVMCache::reset(move _4, move _5) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:686:40-686:41)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:686:40-686:41)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:686:41-686:42)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:686:41-686:42)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:687:9-687:47)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:687:9-687:24)
  6: _8 = &mut ((*_2).2: meta::wrappers::BoundedBacktrackerCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:687:9-687:24)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:687:31-687:46)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:687:31-687:46)
  9: _10 = &((*_1).5: meta::wrappers::BoundedBacktracker)
    SourceInfo(regex-automata/src/meta/strategy.rs:687:31-687:46)
  10: _9 = &(*_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:687:31-687:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:687:9-687:47)
      kind: _7 = meta::wrappers::BoundedBacktrackerCache::reset(move _8, move _9) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:687:46-687:47)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:687:46-687:47)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:687:47-687:48)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:687:47-687:48)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:688:9-688:43)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:688:9-688:22)
  6: _12 = &mut ((*_2).3: meta::wrappers::OnePassCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:688:9-688:22)
  7: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:688:29-688:42)
  8: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:688:29-688:42)
  9: _14 = &((*_1).6: meta::wrappers::OnePass)
    SourceInfo(regex-automata/src/meta/strategy.rs:688:29-688:42)
  10: _13 = &(*_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:688:29-688:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:688:9-688:43)
      kind: _11 = meta::wrappers::OnePassCache::reset(move _12, move _13) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:688:42-688:43)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:688:42-688:43)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:688:43-688:44)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:688:43-688:44)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:689:9-689:41)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:689:9-689:21)
  6: _16 = &mut ((*_2).4: meta::wrappers::HybridCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:689:9-689:21)
  7: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:689:28-689:40)
  8: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:689:28-689:40)
  9: _18 = &((*_1).7: meta::wrappers::Hybrid)
    SourceInfo(regex-automata/src/meta/strategy.rs:689:28-689:40)
  10: _17 = &(*_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:689:28-689:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:689:9-689:41)
      kind: _15 = meta::wrappers::HybridCache::reset(move _16, move _17) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:689:40-689:41)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:689:40-689:41)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:689:41-689:42)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:689:41-689:42)
  4: _0 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:685:46-690:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:690:6-690:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:685:5-690:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

