bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1511:9-1517:10)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1511:13-1511:52)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1511:13-1511:31)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1511:13-1511:31)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1511:13-1511:22)
  5: _7 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:1511:13-1511:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1511:13-1511:31)
      kind: _6 = meta::regex::RegexInfo::config(move _7) -> [return: bb1, unwind: bb117]
  }
  preds []
  succs [bb1, bb117]

bb1
  0: _5 = &(*_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1511:13-1511:31)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1511:30-1511:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1511:13-1511:52)
      kind: _4 = meta::regex::Config::get_auto_prefilter(move _5) -> [return: bb2, unwind: bb117]
  }
  preds [bb0]
  succs [bb2, bb117]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1511:13-1511:52)
      kind: switchInt(move _4) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1511:51-1511:52)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1511:51-1511:52)
  2: _3 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1517:10-1517:10)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1517:9-1517:10)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1517:9-1517:10)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:9-1529:10)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:12-1522:75)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:12-1522:47)
  8: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:12-1522:47)
  9: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:12-1522:30)
  10: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:12-1522:30)
  11: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:12-1522:21)
  12: _16 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:12-1522:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1522:12-1522:30)
      kind: _15 = meta::regex::RegexInfo::config(move _16) -> [return: bb6, unwind: bb117]
  }
  preds [bb2]
  succs [bb6, bb117]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1511:51-1511:52)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1511:51-1511:52)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:1516:24-1516:28)
  3: _9 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1516:24-1516:28)
  4: _0 = core::result::Result::<meta::strategy::ReverseInner, meta::strategy::Core>::Err(move _9)
    SourceInfo(regex-automata/src/meta/strategy.rs:1516:20-1516:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1516:28-1516:29)
      kind: drop(_9) -> [return: bb5, unwind: bb117]
  }
  preds [bb2]
  succs [bb5, bb117]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:1516:28-1516:29)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1517:9-1517:10)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1517:9-1517:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb100
  }
  preds [bb4]
  succs [bb100]

bb6
  0: _14 = &(*_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:12-1522:30)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:29-1522:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1522:12-1522:47)
      kind: _13 = meta::regex::Config::get_match_kind(move _14) -> [return: bb7, unwind: bb117]
  }
  preds [bb3]
  succs [bb7, bb117]

bb7
  0: _12 = &_13
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:12-1522:47)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:46-1522:47)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:51-1522:75)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:51-1522:75)
  4: _18 = util::search::MatchKind::LeftmostFirst
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:51-1522:75)
  5: _17 = &_18
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:51-1522:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1522:12-1522:75)
      kind: _11 = <util::search::MatchKind as core::cmp::PartialEq>::ne(move _12, move _17) -> [return: bb8, unwind: bb117]
  }
  preds [bb6]
  succs [bb8, bb117]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1522:12-1522:75)
      kind: switchInt(move _11) -> [0: bb11, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb11]

bb9
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:74-1522:75)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:74-1522:75)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:74-1522:75)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:74-1522:75)
  4: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:74-1522:75)
  5: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1528:24-1528:28)
  6: _20 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1528:24-1528:28)
  7: _0 = core::result::Result::<meta::strategy::ReverseInner, meta::strategy::Core>::Err(move _20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1528:20-1528:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1528:28-1528:29)
      kind: drop(_20) -> [return: bb10, unwind: bb117]
  }
  preds [bb8]
  succs [bb10, bb117]

bb10
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1528:28-1528:29)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1529:9-1529:10)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1529:9-1529:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb100
  }
  preds [bb9]
  succs [bb100]

bb11
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:74-1522:75)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:74-1522:75)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:74-1522:75)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:74-1522:75)
  4: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1522:74-1522:75)
  5: _10 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1529:10-1529:10)
  6: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1529:9-1529:10)
  7: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1529:9-1529:10)
  8: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1545:9-1551:10)
  9: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1545:12-1545:48)
  10: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1545:12-1545:21)
  11: _23 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:1545:12-1545:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1545:12-1545:48)
      kind: _22 = meta::regex::RegexInfo::is_always_anchored_start(move _23) -> [return: bb12, unwind: bb117]
  }
  preds [bb8]
  succs [bb12, bb117]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1545:12-1545:48)
      kind: switchInt(move _22) -> [0: bb15, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb15]

bb13
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1545:47-1545:48)
  1: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1550:24-1550:28)
  2: _25 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1550:24-1550:28)
  3: _0 = core::result::Result::<meta::strategy::ReverseInner, meta::strategy::Core>::Err(move _25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1550:20-1550:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1550:28-1550:29)
      kind: drop(_25) -> [return: bb14, unwind: bb117]
  }
  preds [bb12]
  succs [bb14, bb117]

bb14
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1550:28-1550:29)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1551:9-1551:10)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1551:9-1551:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb100
  }
  preds [bb13]
  succs [bb100]

bb15
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1545:47-1545:48)
  1: _21 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1551:10-1551:10)
  2: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1551:9-1551:10)
  3: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1551:9-1551:10)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1555:9-1561:10)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1555:13-1555:34)
  6: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1555:13-1555:24)
  7: _28 = &(_1.7: meta::wrappers::Hybrid)
    SourceInfo(regex-automata/src/meta/strategy.rs:1555:13-1555:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1555:13-1555:34)
      kind: _27 = meta::wrappers::Hybrid::is_some(move _28) -> [return: bb16, unwind: bb117]
  }
  preds [bb12]
  succs [bb16, bb117]

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1555:13-1555:34)
      kind: switchInt(move _27) -> [0: bb18, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18]

bb17
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1555:33-1555:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1555:58-1561:10)
      kind: goto -> bb23
  }
  preds [bb16]
  succs [bb23]

bb18
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1555:33-1555:34)
  1: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1555:39-1555:57)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1555:39-1555:47)
  3: _30 = &(_1.8: meta::wrappers::DFA)
    SourceInfo(regex-automata/src/meta/strategy.rs:1555:39-1555:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1555:39-1555:57)
      kind: _29 = meta::wrappers::DFA::is_some(move _30) -> [return: bb19, unwind: bb117]
  }
  preds [bb16]
  succs [bb19, bb117]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1555:39-1555:57)
      kind: switchInt(move _29) -> [0: bb21, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb21]

bb20
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1555:56-1555:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1555:58-1561:10)
      kind: goto -> bb23
  }
  preds [bb19]
  succs [bb23]

bb21
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1555:56-1555:57)
  1: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1560:24-1560:28)
  2: _32 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1560:24-1560:28)
  3: _0 = core::result::Result::<meta::strategy::ReverseInner, meta::strategy::Core>::Err(move _32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1560:20-1560:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1560:28-1560:29)
      kind: drop(_32) -> [return: bb22, unwind: bb117]
  }
  preds [bb19]
  succs [bb22, bb117]

bb22
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1560:28-1560:29)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1561:9-1561:10)
  2: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1561:9-1561:10)
  3: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1561:9-1561:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb100
  }
  preds [bb21]
  succs [bb100]

bb23
  0: _26 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1561:10-1561:10)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1561:9-1561:10)
  2: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1561:9-1561:10)
  3: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1561:9-1561:10)
  4: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1562:9-1574:10)
  5: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1562:12-1562:60)
  6: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1562:12-1562:29)
  7: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1562:12-1562:20)
  8: _36 = &(_1.1: core::option::Option<util::prefilter::Prefilter>)
    SourceInfo(regex-automata/src/meta/strategy.rs:1562:12-1562:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1562:12-1562:29)
      kind: _35 = core::option::Option::<util::prefilter::Prefilter>::as_ref(move _36) -> [return: bb24, unwind: bb117]
  }
  preds [bb17, bb20]
  succs [bb24, bb117]

bb24
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1562:28-1562:29)
  1: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1562:44-1562:59)
  2: _37 = {closure@regex-automata/src/meta/strategy.rs:1562:44: 1562:47}
    SourceInfo(regex-automata/src/meta/strategy.rs:1562:44-1562:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1562:12-1562:60)
      kind: _34 = core::option::Option::<&util::prefilter::Prefilter>::map_or::<bool, {closure@regex-automata/src/meta/strategy.rs:1562:44: 1562:47}>(move _35, const false, move _37) -> [return: bb25, unwind: bb117]
  }
  preds [bb23]
  succs [bb25, bb117]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1562:12-1562:60)
      kind: switchInt(move _34) -> [0: bb28, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb28]

bb26
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1562:59-1562:60)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1562:59-1562:60)
  2: StorageLive(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1567:24-1567:28)
  3: _39 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1567:24-1567:28)
  4: _0 = core::result::Result::<meta::strategy::ReverseInner, meta::strategy::Core>::Err(move _39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1567:20-1567:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1567:28-1567:29)
      kind: drop(_39) -> [return: bb27, unwind: bb117]
  }
  preds [bb25]
  succs [bb27, bb117]

bb27
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1567:28-1567:29)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1574:9-1574:10)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1574:9-1574:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb100
  }
  preds [bb26]
  succs [bb100]

bb28
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1562:59-1562:60)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1562:59-1562:60)
  2: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:1568:19-1568:37)
  3: StorageLive(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1568:19-1568:27)
  4: _41 = &(_1.1: core::option::Option<util::prefilter::Prefilter>)
    SourceInfo(regex-automata/src/meta/strategy.rs:1568:19-1568:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1568:19-1568:37)
      kind: _40 = core::option::Option::<util::prefilter::Prefilter>::is_some(move _41) -> [return: bb29, unwind: bb117]
  }
  preds [bb25]
  succs [bb29, bb117]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1568:19-1568:37)
      kind: switchInt(move _40) -> [0: bb31, otherwise: bb30]
  }
  preds [bb28]
  succs [bb30, bb31]

bb30
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1568:36-1568:37)
  1: _33 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1568:38-1574:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1568:16-1574:10)
      kind: goto -> bb32
  }
  preds [bb29]
  succs [bb32]

bb31
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1568:36-1568:37)
  1: _33 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1574:10-1574:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1568:16-1574:10)
      kind: goto -> bb32
  }
  preds [bb29]
  succs [bb32]

bb32
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/strategy.rs:1574:9-1574:10)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1574:9-1574:10)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1574:9-1574:10)
  3: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1575:41-1580:10)
  4: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1575:47-1575:75)
  5: StorageLive(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:1575:70-1575:74)
  6: _46 = &(*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1575:70-1575:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1575:47-1575:75)
      kind: _45 = meta::reverse_inner::extract(move _46) -> [return: bb33, unwind: bb117]
  }
  preds [bb30, bb31]
  succs [bb33, bb117]

bb33
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:1575:74-1575:75)
  1: PlaceMention(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1575:47-1575:75)
  2: _47 = discriminant(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1575:47-1575:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1575:41-1575:75)
      kind: switchInt(move _47) -> [0: bb36, 1: bb35, otherwise: bb34]
  }
  preds [bb32]
  succs [bb34, bb35, bb36]

bb34
  0: FakeRead(ForMatchedPlace(None), _45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1575:47-1575:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1575:47-1575:75)
      kind: unreachable
  }
  preds [bb33]
  succs []

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1576:13-1576:20)
      kind: falseEdge -> [real: bb37, imaginary: bb36]
  }
  preds [bb33]
  succs [bb36, bb37]

bb36
  0: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1579:32-1579:36)
  1: _50 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1579:32-1579:36)
  2: _0 = core::result::Result::<meta::strategy::ReverseInner, meta::strategy::Core>::Err(move _50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1579:28-1579:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1579:36-1579:37)
      kind: drop(_50) -> [return: bb39, unwind: bb116]
  }
  preds [bb33, bb35]
  succs [bb39, bb116]

bb37
  0: StorageLive(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:1576:18-1576:19)
  1: _48 = move ((_45 as Some).0: (regex_syntax::hir::Hir, util::prefilter::Prefilter))
    SourceInfo(regex-automata/src/meta/strategy.rs:1576:18-1576:19)
  2: _44 = move _48
    SourceInfo(regex-automata/src/meta/strategy.rs:1576:24-1576:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1576:24-1576:25)
      kind: drop(_48) -> [return: bb38, unwind: bb116]
  }
  preds [bb35]
  succs [bb38, bb116]

bb38
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/meta/strategy.rs:1576:24-1576:25)
  1: PlaceMention(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1575:41-1580:10)
  2: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1575:14-1575:27)
  3: _42 = move (_44.0: regex_syntax::hir::Hir)
    SourceInfo(regex-automata/src/meta/strategy.rs:1575:14-1575:27)
  4: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:1575:29-1575:37)
  5: _43 = move (_44.1: util::prefilter::Prefilter)
    SourceInfo(regex-automata/src/meta/strategy.rs:1575:29-1575:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1580:10-1580:11)
      kind: drop(_44) -> [return: bb40, unwind: bb113]
  }
  preds [bb37]
  succs [bb40, bb113]

bb39
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1579:36-1579:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1580:10-1580:11)
      kind: drop(_45) -> [return: bb99, unwind: bb117]
  }
  preds [bb36]
  succs [bb99, bb117]

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1580:10-1580:11)
      kind: drop(_45) -> [return: bb41, unwind: bb114]
  }
  preds [bb38]
  succs [bb41, bb114]

bb41
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1580:10-1580:11)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1580:10-1580:11)
  2: StorageLive(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1582:13-1582:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1582:25-1582:43)
      kind: _51 = util::look::LookMatcher::new() -> [return: bb42, unwind: bb114]
  }
  preds [bb40]
  succs [bb42, bb114]

bb42
  0: FakeRead(ForLet(None), _51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1582:13-1582:22)
  1: StorageLive(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:9-1583:76)
  2: StorageLive(_53)
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:9-1583:14)
  3: _53 = &mut _51
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:9-1583:14)
  4: StorageLive(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:35-1583:75)
  5: StorageLive(_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:35-1583:53)
  6: StorageLive(_56)
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:35-1583:53)
  7: StorageLive(_57)
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:35-1583:44)
  8: _57 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:35-1583:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1583:35-1583:53)
      kind: _56 = meta::regex::RegexInfo::config(move _57) -> [return: bb43, unwind: bb114]
  }
  preds [bb41]
  succs [bb43, bb114]

bb43
  0: _55 = &(*_56)
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:35-1583:53)
  1: StorageDead(_57)
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:52-1583:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1583:35-1583:75)
      kind: _54 = meta::regex::Config::get_line_terminator(move _55) -> [return: bb44, unwind: bb114]
  }
  preds [bb42]
  succs [bb44, bb114]

bb44
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:74-1583:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1583:9-1583:76)
      kind: _52 = util::look::LookMatcher::set_line_terminator(move _53, move _54) -> [return: bb45, unwind: bb114]
  }
  preds [bb43]
  succs [bb45, bb114]

bb45
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:75-1583:76)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:75-1583:76)
  2: StorageDead(_56)
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:76-1583:77)
  3: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:1583:76-1583:77)
  4: StorageLive(_58)
    SourceInfo(regex-automata/src/meta/strategy.rs:1584:13-1584:28)
  5: StorageLive(_59)
    SourceInfo(regex-automata/src/meta/strategy.rs:1584:31-1589:49)
  6: StorageLive(_60)
    SourceInfo(regex-automata/src/meta/strategy.rs:1584:31-1588:27)
  7: StorageLive(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1584:31-1587:69)
  8: StorageLive(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1584:31-1586:55)
  9: StorageLive(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:1584:31-1585:27)
  10: StorageLive(_64)
    SourceInfo(regex-automata/src/meta/strategy.rs:1584:31-1584:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1584:31-1584:54)
      kind: _64 = nfa::thompson::compiler::Config::new() -> [return: bb46, unwind: bb114]
  }
  preds [bb44]
  succs [bb46, bb114]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1584:31-1585:27)
      kind: _63 = nfa::thompson::compiler::Config::reverse(move _64, const true) -> [return: bb47, unwind: bb114]
  }
  preds [bb45]
  succs [bb47, bb114]

bb47
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/meta/strategy.rs:1585:26-1585:27)
  1: StorageLive(_65)
    SourceInfo(regex-automata/src/meta/strategy.rs:1586:19-1586:54)
  2: StorageLive(_66)
    SourceInfo(regex-automata/src/meta/strategy.rs:1586:19-1586:37)
  3: StorageLive(_67)
    SourceInfo(regex-automata/src/meta/strategy.rs:1586:19-1586:37)
  4: StorageLive(_68)
    SourceInfo(regex-automata/src/meta/strategy.rs:1586:19-1586:28)
  5: _68 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:1586:19-1586:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1586:19-1586:37)
      kind: _67 = meta::regex::RegexInfo::config(move _68) -> [return: bb48, unwind: bb114]
  }
  preds [bb46]
  succs [bb48, bb114]

bb48
  0: _66 = &(*_67)
    SourceInfo(regex-automata/src/meta/strategy.rs:1586:19-1586:37)
  1: StorageDead(_68)
    SourceInfo(regex-automata/src/meta/strategy.rs:1586:36-1586:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1586:19-1586:54)
      kind: _65 = meta::regex::Config::get_utf8_empty(move _66) -> [return: bb49, unwind: bb114]
  }
  preds [bb47]
  succs [bb49, bb114]

bb49
  0: StorageDead(_66)
    SourceInfo(regex-automata/src/meta/strategy.rs:1586:53-1586:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1584:31-1586:55)
      kind: _62 = nfa::thompson::compiler::Config::utf8(move _63, move _65) -> [return: bb50, unwind: bb114]
  }
  preds [bb48]
  succs [bb50, bb114]

bb50
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/meta/strategy.rs:1586:54-1586:55)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/meta/strategy.rs:1586:54-1586:55)
  2: StorageLive(_69)
    SourceInfo(regex-automata/src/meta/strategy.rs:1587:29-1587:68)
  3: StorageLive(_70)
    SourceInfo(regex-automata/src/meta/strategy.rs:1587:29-1587:47)
  4: StorageLive(_71)
    SourceInfo(regex-automata/src/meta/strategy.rs:1587:29-1587:47)
  5: StorageLive(_72)
    SourceInfo(regex-automata/src/meta/strategy.rs:1587:29-1587:38)
  6: _72 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:1587:29-1587:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1587:29-1587:47)
      kind: _71 = meta::regex::RegexInfo::config(move _72) -> [return: bb51, unwind: bb114]
  }
  preds [bb49]
  succs [bb51, bb114]

bb51
  0: _70 = &(*_71)
    SourceInfo(regex-automata/src/meta/strategy.rs:1587:29-1587:47)
  1: StorageDead(_72)
    SourceInfo(regex-automata/src/meta/strategy.rs:1587:46-1587:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1587:29-1587:68)
      kind: _69 = meta::regex::Config::get_nfa_size_limit(move _70) -> [return: bb52, unwind: bb114]
  }
  preds [bb50]
  succs [bb52, bb114]

bb52
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/meta/strategy.rs:1587:67-1587:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1584:31-1587:69)
      kind: _61 = nfa::thompson::compiler::Config::nfa_size_limit(move _62, move _69) -> [return: bb53, unwind: bb114]
  }
  preds [bb51]
  succs [bb53, bb114]

bb53
  0: StorageDead(_69)
    SourceInfo(regex-automata/src/meta/strategy.rs:1587:68-1587:69)
  1: StorageDead(_62)
    SourceInfo(regex-automata/src/meta/strategy.rs:1587:68-1587:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1584:31-1588:27)
      kind: _60 = nfa::thompson::compiler::Config::shrink(move _61, const false) -> [return: bb54, unwind: bb114]
  }
  preds [bb52]
  succs [bb54, bb114]

bb54
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/strategy.rs:1588:26-1588:27)
  1: StorageLive(_73)
    SourceInfo(regex-automata/src/meta/strategy.rs:1589:29-1589:48)
  2: _73 = nfa::thompson::compiler::WhichCaptures::None
    SourceInfo(regex-automata/src/meta/strategy.rs:1589:29-1589:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1584:31-1589:49)
      kind: _59 = nfa::thompson::compiler::Config::which_captures(move _60, move _73) -> [return: bb55, unwind: bb114]
  }
  preds [bb53]
  succs [bb55, bb114]

bb55
  0: StorageDead(_73)
    SourceInfo(regex-automata/src/meta/strategy.rs:1589:48-1589:49)
  1: StorageDead(_60)
    SourceInfo(regex-automata/src/meta/strategy.rs:1589:48-1589:49)
  2: StorageLive(_74)
    SourceInfo(regex-automata/src/meta/strategy.rs:1590:27-1590:32)
  3: _74 = move _51
    SourceInfo(regex-automata/src/meta/strategy.rs:1590:27-1590:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1584:31-1590:33)
      kind: _58 = nfa::thompson::compiler::Config::look_matcher(move _59, move _74) -> [return: bb56, unwind: bb114]
  }
  preds [bb54]
  succs [bb56, bb114]

bb56
  0: StorageDead(_74)
    SourceInfo(regex-automata/src/meta/strategy.rs:1590:32-1590:33)
  1: StorageDead(_59)
    SourceInfo(regex-automata/src/meta/strategy.rs:1590:32-1590:33)
  2: FakeRead(ForLet(None), _58)
    SourceInfo(regex-automata/src/meta/strategy.rs:1584:13-1584:28)
  3: StorageDead(_71)
    SourceInfo(regex-automata/src/meta/strategy.rs:1590:33-1590:34)
  4: StorageDead(_67)
    SourceInfo(regex-automata/src/meta/strategy.rs:1590:33-1590:34)
  5: StorageLive(_75)
    SourceInfo(regex-automata/src/meta/strategy.rs:1591:13-1591:19)
  6: StorageLive(_76)
    SourceInfo(regex-automata/src/meta/strategy.rs:1591:22-1592:40)
  7: StorageLive(_77)
    SourceInfo(regex-automata/src/meta/strategy.rs:1591:22-1592:40)
  8: StorageLive(_78)
    SourceInfo(regex-automata/src/meta/strategy.rs:1591:22-1591:47)
  9: StorageLive(_79)
    SourceInfo(regex-automata/src/meta/strategy.rs:1591:22-1591:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1591:22-1591:47)
      kind: _79 = nfa::thompson::compiler::Compiler::new() -> [return: bb57, unwind: bb114]
  }
  preds [bb55]
  succs [bb57, bb114]

bb57
  0: _78 = &mut _79
    SourceInfo(regex-automata/src/meta/strategy.rs:1591:22-1591:47)
  1: StorageLive(_80)
    SourceInfo(regex-automata/src/meta/strategy.rs:1592:24-1592:39)
  2: _80 = move _58
    SourceInfo(regex-automata/src/meta/strategy.rs:1592:24-1592:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1591:22-1592:40)
      kind: _77 = nfa::thompson::compiler::Compiler::configure(move _78, move _80) -> [return: bb58, unwind: bb112]
  }
  preds [bb56]
  succs [bb58, bb112]

bb58
  0: _76 = &(*_77)
    SourceInfo(regex-automata/src/meta/strategy.rs:1591:22-1592:40)
  1: StorageDead(_80)
    SourceInfo(regex-automata/src/meta/strategy.rs:1592:39-1592:40)
  2: StorageDead(_78)
    SourceInfo(regex-automata/src/meta/strategy.rs:1592:39-1592:40)
  3: StorageLive(_81)
    SourceInfo(regex-automata/src/meta/strategy.rs:1593:29-1593:43)
  4: StorageLive(_82)
    SourceInfo(regex-automata/src/meta/strategy.rs:1593:29-1593:43)
  5: _82 = &_42
    SourceInfo(regex-automata/src/meta/strategy.rs:1593:29-1593:43)
  6: _81 = &(*_82)
    SourceInfo(regex-automata/src/meta/strategy.rs:1593:29-1593:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1591:22-1593:44)
      kind: _75 = nfa::thompson::compiler::Compiler::build_from_hir(move _76, move _81) -> [return: bb59, unwind: bb112]
  }
  preds [bb57]
  succs [bb59, bb112]

bb59
  0: StorageDead(_81)
    SourceInfo(regex-automata/src/meta/strategy.rs:1593:43-1593:44)
  1: StorageDead(_76)
    SourceInfo(regex-automata/src/meta/strategy.rs:1593:43-1593:44)
  2: FakeRead(ForLet(None), _75)
    SourceInfo(regex-automata/src/meta/strategy.rs:1591:13-1591:19)
  3: StorageDead(_82)
    SourceInfo(regex-automata/src/meta/strategy.rs:1593:44-1593:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1593:44-1593:45)
      kind: drop(_79) -> [return: bb60, unwind: bb111]
  }
  preds [bb58]
  succs [bb60, bb111]

bb60
  0: StorageDead(_79)
    SourceInfo(regex-automata/src/meta/strategy.rs:1593:44-1593:45)
  1: StorageDead(_77)
    SourceInfo(regex-automata/src/meta/strategy.rs:1593:44-1593:45)
  2: StorageLive(_83)
    SourceInfo(regex-automata/src/meta/strategy.rs:1594:13-1594:19)
  3: PlaceMention(_75)
    SourceInfo(regex-automata/src/meta/strategy.rs:1594:28-1594:34)
  4: _84 = discriminant(_75)
    SourceInfo(regex-automata/src/meta/strategy.rs:1594:28-1594:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1594:22-1594:34)
      kind: switchInt(move _84) -> [0: bb62, 1: bb63, otherwise: bb61]
  }
  preds [bb59]
  succs [bb61, bb62, bb63]

bb61
  0: FakeRead(ForMatchedPlace(None), _75)
    SourceInfo(regex-automata/src/meta/strategy.rs:1594:28-1594:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1594:28-1594:34)
      kind: unreachable
  }
  preds [bb60]
  succs []

bb62
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1595:13-1595:23)
      kind: falseEdge -> [real: bb64, imaginary: bb63]
  }
  preds [bb60]
  succs [bb63, bb64]

bb63
  0: StorageLive(_86)
    SourceInfo(regex-automata/src/meta/strategy.rs:1596:17-1596:21)
  1: _86 = move ((_75 as Err).0: nfa::thompson::error::BuildError)
    SourceInfo(regex-automata/src/meta/strategy.rs:1596:17-1596:21)
  2: StorageLive(_88)
    SourceInfo(regex-automata/src/meta/strategy.rs:1602:28-1602:32)
  3: _88 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1602:28-1602:32)
  4: _0 = core::result::Result::<meta::strategy::ReverseInner, meta::strategy::Core>::Err(move _88)
    SourceInfo(regex-automata/src/meta/strategy.rs:1602:24-1602:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1602:32-1602:33)
      kind: drop(_88) -> [return: bb66, unwind: bb110]
  }
  preds [bb60, bb62]
  succs [bb66, bb110]

bb64
  0: StorageLive(_85)
    SourceInfo(regex-automata/src/meta/strategy.rs:1595:16-1595:22)
  1: _85 = move ((_75 as Ok).0: nfa::thompson::nfa::NFA)
    SourceInfo(regex-automata/src/meta/strategy.rs:1595:16-1595:22)
  2: _83 = move _85
    SourceInfo(regex-automata/src/meta/strategy.rs:1595:27-1595:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1595:32-1595:33)
      kind: drop(_85) -> [return: bb65, unwind: bb111]
  }
  preds [bb62]
  succs [bb65, bb111]

bb65
  0: StorageDead(_85)
    SourceInfo(regex-automata/src/meta/strategy.rs:1595:32-1595:33)
  1: FakeRead(ForLet(None), _83)
    SourceInfo(regex-automata/src/meta/strategy.rs:1594:13-1594:19)
  2: StorageLive(_89)
    SourceInfo(regex-automata/src/meta/strategy.rs:1606:13-1606:16)
  3: StorageLive(_90)
    SourceInfo(regex-automata/src/meta/strategy.rs:1606:23-1606:51)
  4: StorageLive(_91)
    SourceInfo(regex-automata/src/meta/strategy.rs:1606:23-1606:41)
  5: StorageLive(_92)
    SourceInfo(regex-automata/src/meta/strategy.rs:1606:23-1606:41)
  6: StorageLive(_93)
    SourceInfo(regex-automata/src/meta/strategy.rs:1606:23-1606:32)
  7: _93 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:1606:23-1606:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1606:23-1606:41)
      kind: _92 = meta::regex::RegexInfo::config(move _93) -> [return: bb67, unwind: bb109]
  }
  preds [bb64]
  succs [bb67, bb109]

bb66
  0: StorageDead(_88)
    SourceInfo(regex-automata/src/meta/strategy.rs:1602:32-1602:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1603:13-1603:14)
      kind: drop(_86) -> [return: bb95, unwind: bb111]
  }
  preds [bb63]
  succs [bb95, bb111]

bb67
  0: _91 = &(*_92)
    SourceInfo(regex-automata/src/meta/strategy.rs:1606:23-1606:41)
  1: StorageDead(_93)
    SourceInfo(regex-automata/src/meta/strategy.rs:1606:40-1606:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1606:23-1606:51)
      kind: _90 = meta::regex::Config::get_dfa(move _91) -> [return: bb68, unwind: bb109]
  }
  preds [bb65]
  succs [bb68, bb109]

bb68
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1606:23-1606:51)
      kind: switchInt(move _90) -> [0: bb70, otherwise: bb69]
  }
  preds [bb67]
  succs [bb69, bb70]

bb69
  0: StorageDead(_91)
    SourceInfo(regex-automata/src/meta/strategy.rs:1606:50-1606:51)
  1: StorageDead(_92)
    SourceInfo(regex-automata/src/meta/strategy.rs:1606:50-1606:51)
  2: StorageLive(_94)
    SourceInfo(regex-automata/src/meta/strategy.rs:1609:39-1609:49)
  3: StorageLive(_95)
    SourceInfo(regex-automata/src/meta/strategy.rs:1609:39-1609:49)
  4: _95 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:1609:39-1609:49)
  5: _94 = &(*_95)
    SourceInfo(regex-automata/src/meta/strategy.rs:1609:39-1609:49)
  6: StorageLive(_96)
    SourceInfo(regex-automata/src/meta/strategy.rs:1609:51-1609:58)
  7: StorageLive(_97)
    SourceInfo(regex-automata/src/meta/strategy.rs:1609:51-1609:58)
  8: _97 = &_83
    SourceInfo(regex-automata/src/meta/strategy.rs:1609:51-1609:58)
  9: _96 = &(*_97)
    SourceInfo(regex-automata/src/meta/strategy.rs:1609:51-1609:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1609:13-1609:59)
      kind: _89 = meta::wrappers::ReverseDFA::new(move _94, move _96) -> [return: bb71, unwind: bb109]
  }
  preds [bb68]
  succs [bb71, bb109]

bb70
  0: StorageDead(_91)
    SourceInfo(regex-automata/src/meta/strategy.rs:1606:50-1606:51)
  1: StorageDead(_92)
    SourceInfo(regex-automata/src/meta/strategy.rs:1606:50-1606:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1607:13-1607:41)
      kind: _89 = meta::wrappers::ReverseDFA::none() -> [return: bb72, unwind: bb109]
  }
  preds [bb68]
  succs [bb72, bb109]

bb71
  0: StorageDead(_96)
    SourceInfo(regex-automata/src/meta/strategy.rs:1609:58-1609:59)
  1: StorageDead(_94)
    SourceInfo(regex-automata/src/meta/strategy.rs:1609:58-1609:59)
  2: StorageDead(_97)
    SourceInfo(regex-automata/src/meta/strategy.rs:1610:9-1610:10)
  3: StorageDead(_95)
    SourceInfo(regex-automata/src/meta/strategy.rs:1610:9-1610:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1606:19-1610:10)
      kind: goto -> bb72
  }
  preds [bb69]
  succs [bb72]

bb72
  0: StorageDead(_90)
    SourceInfo(regex-automata/src/meta/strategy.rs:1610:9-1610:10)
  1: FakeRead(ForLet(None), _89)
    SourceInfo(regex-automata/src/meta/strategy.rs:1606:13-1606:16)
  2: StorageLive(_98)
    SourceInfo(regex-automata/src/meta/strategy.rs:1611:13-1611:19)
  3: StorageLive(_99)
    SourceInfo(regex-automata/src/meta/strategy.rs:1611:26-1611:57)
  4: StorageLive(_100)
    SourceInfo(regex-automata/src/meta/strategy.rs:1611:26-1611:44)
  5: StorageLive(_101)
    SourceInfo(regex-automata/src/meta/strategy.rs:1611:26-1611:44)
  6: StorageLive(_102)
    SourceInfo(regex-automata/src/meta/strategy.rs:1611:26-1611:35)
  7: _102 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:1611:26-1611:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1611:26-1611:44)
      kind: _101 = meta::regex::RegexInfo::config(move _102) -> [return: bb73, unwind: bb108]
  }
  preds [bb70, bb71]
  succs [bb73, bb108]

bb73
  0: _100 = &(*_101)
    SourceInfo(regex-automata/src/meta/strategy.rs:1611:26-1611:44)
  1: StorageDead(_102)
    SourceInfo(regex-automata/src/meta/strategy.rs:1611:43-1611:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1611:26-1611:57)
      kind: _99 = meta::regex::Config::get_hybrid(move _100) -> [return: bb74, unwind: bb108]
  }
  preds [bb72]
  succs [bb74, bb108]

bb74
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1611:26-1611:57)
      kind: switchInt(move _99) -> [0: bb76, otherwise: bb75]
  }
  preds [bb73]
  succs [bb75, bb76]

bb75
  0: StorageDead(_100)
    SourceInfo(regex-automata/src/meta/strategy.rs:1611:56-1611:57)
  1: StorageDead(_101)
    SourceInfo(regex-automata/src/meta/strategy.rs:1611:56-1611:57)
  2: StorageLive(_103)
    SourceInfo(regex-automata/src/meta/strategy.rs:1613:19-1613:32)
  3: StorageLive(_104)
    SourceInfo(regex-automata/src/meta/strategy.rs:1613:19-1613:22)
  4: _104 = &_89
    SourceInfo(regex-automata/src/meta/strategy.rs:1613:19-1613:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1613:19-1613:32)
      kind: _103 = meta::wrappers::ReverseDFA::is_some(move _104) -> [return: bb77, unwind: bb108]
  }
  preds [bb74]
  succs [bb77, bb108]

bb76
  0: StorageDead(_100)
    SourceInfo(regex-automata/src/meta/strategy.rs:1611:56-1611:57)
  1: StorageDead(_101)
    SourceInfo(regex-automata/src/meta/strategy.rs:1611:56-1611:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1612:13-1612:44)
      kind: _98 = meta::wrappers::ReverseHybrid::none() -> [return: bb82, unwind: bb108]
  }
  preds [bb74]
  succs [bb82, bb108]

bb77
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1613:19-1613:32)
      kind: switchInt(move _103) -> [0: bb79, otherwise: bb78]
  }
  preds [bb75]
  succs [bb78, bb79]

bb78
  0: StorageDead(_104)
    SourceInfo(regex-automata/src/meta/strategy.rs:1613:31-1613:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1618:13-1618:44)
      kind: _98 = meta::wrappers::ReverseHybrid::none() -> [return: bb81, unwind: bb108]
  }
  preds [bb77]
  succs [bb81, bb108]

bb79
  0: StorageDead(_104)
    SourceInfo(regex-automata/src/meta/strategy.rs:1613:31-1613:32)
  1: StorageLive(_105)
    SourceInfo(regex-automata/src/meta/strategy.rs:1620:42-1620:52)
  2: StorageLive(_106)
    SourceInfo(regex-automata/src/meta/strategy.rs:1620:42-1620:52)
  3: _106 = &(_1.0: meta::regex::RegexInfo)
    SourceInfo(regex-automata/src/meta/strategy.rs:1620:42-1620:52)
  4: _105 = &(*_106)
    SourceInfo(regex-automata/src/meta/strategy.rs:1620:42-1620:52)
  5: StorageLive(_107)
    SourceInfo(regex-automata/src/meta/strategy.rs:1620:54-1620:61)
  6: StorageLive(_108)
    SourceInfo(regex-automata/src/meta/strategy.rs:1620:54-1620:61)
  7: _108 = &_83
    SourceInfo(regex-automata/src/meta/strategy.rs:1620:54-1620:61)
  8: _107 = &(*_108)
    SourceInfo(regex-automata/src/meta/strategy.rs:1620:54-1620:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1620:13-1620:62)
      kind: _98 = meta::wrappers::ReverseHybrid::new(move _105, move _107) -> [return: bb80, unwind: bb108]
  }
  preds [bb77]
  succs [bb80, bb108]

bb80
  0: StorageDead(_107)
    SourceInfo(regex-automata/src/meta/strategy.rs:1620:61-1620:62)
  1: StorageDead(_105)
    SourceInfo(regex-automata/src/meta/strategy.rs:1620:61-1620:62)
  2: StorageDead(_108)
    SourceInfo(regex-automata/src/meta/strategy.rs:1621:9-1621:10)
  3: StorageDead(_106)
    SourceInfo(regex-automata/src/meta/strategy.rs:1621:9-1621:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1613:16-1621:10)
      kind: goto -> bb81
  }
  preds [bb79]
  succs [bb81]

bb81
  0: StorageDead(_103)
    SourceInfo(regex-automata/src/meta/strategy.rs:1621:9-1621:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1611:22-1621:10)
      kind: goto -> bb82
  }
  preds [bb78, bb80]
  succs [bb82]

bb82
  0: StorageDead(_99)
    SourceInfo(regex-automata/src/meta/strategy.rs:1621:9-1621:10)
  1: FakeRead(ForLet(None), _98)
    SourceInfo(regex-automata/src/meta/strategy.rs:1611:13-1611:19)
  2: StorageLive(_109)
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:12-1622:64)
  3: StorageLive(_110)
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:27-1622:31)
  4: _110 = move _1
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:27-1622:31)
  5: StorageLive(_111)
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:33-1622:41)
  6: _111 = move _43
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:33-1622:41)
  7: StorageLive(_112)
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:43-1622:49)
  8: _112 = move _83
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:43-1622:49)
  9: StorageLive(_113)
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:51-1622:57)
  10: _113 = move _98
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:51-1622:57)
  11: StorageLive(_114)
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:59-1622:62)
  12: _114 = move _89
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:59-1622:62)
  13: _109 = meta::strategy::ReverseInner { core: move _110, preinner: move _111, nfarev: move _112, hybrid: move _113, dfa: move _114 }
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:12-1622:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1622:63-1622:64)
      kind: drop(_114) -> [return: bb83, unwind: bb102]
  }
  preds [bb76, bb81]
  succs [bb83, bb102]

bb83
  0: StorageDead(_114)
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:63-1622:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1622:63-1622:64)
      kind: drop(_113) -> [return: bb84, unwind: bb103]
  }
  preds [bb82]
  succs [bb84, bb103]

bb84
  0: StorageDead(_113)
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:63-1622:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1622:63-1622:64)
      kind: drop(_112) -> [return: bb85, unwind: bb104]
  }
  preds [bb83]
  succs [bb85, bb104]

bb85
  0: StorageDead(_112)
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:63-1622:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1622:63-1622:64)
      kind: drop(_111) -> [return: bb86, unwind: bb105]
  }
  preds [bb84]
  succs [bb86, bb105]

bb86
  0: StorageDead(_111)
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:63-1622:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1622:63-1622:64)
      kind: drop(_110) -> [return: bb87, unwind: bb106]
  }
  preds [bb85]
  succs [bb87, bb106]

bb87
  0: StorageDead(_110)
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:63-1622:64)
  1: _0 = core::result::Result::<meta::strategy::ReverseInner, meta::strategy::Core>::Ok(move _109)
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:9-1622:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1622:64-1622:65)
      kind: drop(_109) -> [return: bb88, unwind: bb107]
  }
  preds [bb86]
  succs [bb88, bb107]

bb88
  0: StorageDead(_109)
    SourceInfo(regex-automata/src/meta/strategy.rs:1622:64-1622:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_98) -> [return: bb89, unwind: bb108]
  }
  preds [bb87]
  succs [bb89, bb108]

bb89
  0: StorageDead(_98)
    SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_89) -> [return: bb90, unwind: bb109]
  }
  preds [bb88]
  succs [bb90, bb109]

bb90
  0: StorageDead(_89)
    SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_83) -> [return: bb91, unwind: bb111]
  }
  preds [bb89]
  succs [bb91, bb111]

bb91
  0: StorageDead(_83)
    SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_75) -> [return: bb92, unwind: bb114]
  }
  preds [bb90]
  succs [bb92, bb114]

bb92
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
  2: StorageDead(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_43) -> [return: bb93, unwind: bb115]
  }
  preds [bb91]
  succs [bb93, bb115]

bb93
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_42) -> [return: bb94, unwind: bb117]
  }
  preds [bb92]
  succs [bb94, bb117]

bb94
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_1) -> [return: bb101, unwind: bb118]
  }
  preds [bb93]
  succs [bb101, bb118]

bb95
  0: StorageDead(_86)
    SourceInfo(regex-automata/src/meta/strategy.rs:1603:13-1603:14)
  1: StorageDead(_83)
    SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_75) -> [return: bb96, unwind: bb114]
  }
  preds [bb66]
  succs [bb96, bb114]

bb96
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
  2: StorageDead(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_43) -> [return: bb97, unwind: bb115]
  }
  preds [bb95]
  succs [bb97, bb115]

bb97
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_42) -> [return: bb98, unwind: bb117]
  }
  preds [bb96]
  succs [bb98, bb117]

bb98
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb100
  }
  preds [bb97]
  succs [bb100]

bb99
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1580:10-1580:11)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1580:10-1580:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb100
  }
  preds [bb39]
  succs [bb100]

bb100
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_1) -> [return: bb101, unwind: bb118]
  }
  preds [bb5, bb10, bb14, bb22, bb27, bb98, bb99]
  succs [bb101, bb118]

bb101
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:6-1623:6)
      kind: return
  }
  preds [bb94, bb100]
  succs []

bb102
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1622:63-1622:64)
      kind: drop(_113) -> [return: bb103, unwind terminate(cleanup)]
  }
  preds [bb82]
  succs [bb103]

bb103
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1622:63-1622:64)
      kind: drop(_112) -> [return: bb104, unwind terminate(cleanup)]
  }
  preds [bb83, bb102]
  succs [bb104]

bb104
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1622:63-1622:64)
      kind: drop(_111) -> [return: bb105, unwind terminate(cleanup)]
  }
  preds [bb84, bb103]
  succs [bb105]

bb105
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1622:63-1622:64)
      kind: drop(_110) -> [return: bb106, unwind terminate(cleanup)]
  }
  preds [bb85, bb104]
  succs [bb106]

bb106
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1622:64-1622:65)
      kind: drop(_109) -> [return: bb107, unwind terminate(cleanup)]
  }
  preds [bb86, bb105]
  succs [bb107]

bb107
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_98) -> [return: bb108, unwind terminate(cleanup)]
  }
  preds [bb87, bb106]
  succs [bb108]

bb108
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_89) -> [return: bb109, unwind terminate(cleanup)]
  }
  preds [bb72, bb73, bb75, bb76, bb78, bb79, bb88, bb107]
  succs [bb109]

bb109
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_83) -> [return: bb111, unwind terminate(cleanup)]
  }
  preds [bb65, bb67, bb69, bb70, bb89, bb108]
  succs [bb111]

bb110
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1603:13-1603:14)
      kind: drop(_86) -> [return: bb111, unwind terminate(cleanup)]
  }
  preds [bb63]
  succs [bb111]

bb111
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_75) -> [return: bb114, unwind terminate(cleanup)]
  }
  preds [bb59, bb64, bb66, bb90, bb109, bb110]
  succs [bb114]

bb112
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1593:44-1593:45)
      kind: drop(_79) -> [return: bb114, unwind terminate(cleanup)]
  }
  preds [bb57, bb58]
  succs [bb114]

bb113
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1580:10-1580:11)
      kind: drop(_45) -> [return: bb114, unwind terminate(cleanup)]
  }
  preds [bb38]
  succs [bb114]

bb114
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_43) -> [return: bb115, unwind terminate(cleanup)]
  }
  preds [bb40, bb41, bb42, bb43, bb44, bb45, bb46, bb47, bb48, bb49, bb50, bb51, bb52, bb53, bb54, bb55, bb56, bb91, bb95, bb111, bb112, bb113]
  succs [bb115]

bb115
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_42) -> [return: bb117, unwind terminate(cleanup)]
  }
  preds [bb92, bb96, bb114]
  succs [bb117]

bb116
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1580:10-1580:11)
      kind: drop(_45) -> [return: bb117, unwind terminate(cleanup)]
  }
  preds [bb36, bb37]
  succs [bb117]

bb117
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1623:5-1623:6)
      kind: drop(_1) -> [return: bb118, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb3, bb4, bb6, bb7, bb9, bb11, bb13, bb15, bb18, bb21, bb23, bb24, bb26, bb28, bb32, bb39, bb93, bb97, bb115, bb116]
  succs [bb118]

bb118
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1510:5-1623:6)
      kind: resume
  }
  preds [bb94, bb100, bb117]
  succs []

