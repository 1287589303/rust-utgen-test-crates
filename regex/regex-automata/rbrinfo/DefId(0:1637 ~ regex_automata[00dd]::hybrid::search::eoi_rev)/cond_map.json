{
  "regex-automata/src/hybrid/search.rs:737:8:737:20": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "sp.start > 0",
          "lhs": "sp.start",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/hybrid/search.rs:757:24:757:37": [
    {
      "Bool": {
        "Other": "sid.is_quit()"
      }
    }
  ],
  "regex-automata/src/hybrid/search.rs:746:47:746:59": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "sp.start - 1",
          "lhs": "sp.start",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/hybrid/search.rs:751:12:751:26": [
    {
      "Bool": {
        "Other": "sid.is_match()"
      }
    }
  ],
  "regex-automata/src/hybrid/search.rs:738:37:738:49": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "sp.start - 1",
          "lhs": "sp.start",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/hybrid/search.rs:742:12:742:26": [
    {
      "Bool": {
        "Other": "sid.is_match()"
      }
    }
  ],
  "regex-automata/src/hybrid/search.rs:745:19:745:32": [
    {
      "Bool": {
        "Other": "sid.is_quit()"
      }
    }
  ],
  "regex-automata/src/hybrid/search.rs:750:13:750:76": [
    {
      "Try": "dfa.next_eoi_state(cache, *sid).map_err(|_| gave_up(sp.start))?"
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "regex-automata/src/hybrid/search.rs:739:16:741:45": [
    {
      "Try": "dfa\n            .next_state(cache, *sid, byte)\n            .map_err(|_| gave_up(sp.start))?"
    }
  ]
}