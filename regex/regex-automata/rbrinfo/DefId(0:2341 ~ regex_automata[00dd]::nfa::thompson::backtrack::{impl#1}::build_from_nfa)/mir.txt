bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:66)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:66)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:65)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:39)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:27)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:12)
  6: _8 = &_2
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:12)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:27)
      kind: _7 = nfa::thompson::nfa::NFA::look_set_any(move _8) -> [return: bb1, unwind: bb24]
  }
  preds []
  succs [bb1, bb24]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:26-303:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:39)
      kind: _6 = util::look::LookSet::available(move _7) -> [return: bb2, unwind: bb24]
  }
  preds [bb0]
  succs [bb2, bb24]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:38-303:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:65)
      kind: _5 = core::result::Result::<(), util::look::UnicodeWordBoundaryError>::map_err::<nfa::thompson::error::BuildError, fn(util::look::UnicodeWordBoundaryError) -> nfa::thompson::error::BuildError {nfa::thompson::error::BuildError::word}>(move _6, nfa::thompson::error::BuildError::word) -> [return: bb3, unwind: bb24]
  }
  preds [bb1]
  succs [bb3, bb24]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:64-303:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:66)
      kind: _4 = <core::result::Result<(), nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _5) -> [return: bb4, unwind: bb23]
  }
  preds [bb2]
  succs [bb4, bb23]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:65-303:66)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:66)
  2: _9 = discriminant(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:66)
      kind: switchInt(move _9) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:66)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:65-303:66)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:66)
  1: _13 = ((_4 as Continue).0: ())
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:66)
  2: _3 = _13
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:66)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:65-303:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:66-303:67)
      kind: drop(_4) -> [return: bb10, unwind: bb24]
  }
  preds [bb4, bb6]
  succs [bb10, bb24]

bb8
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:65-303:66)
  1: _10 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:65-303:66)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:65-303:66)
  3: _12 = move _10
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:65-303:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:9-303:66)
      kind: _0 = <core::result::Result<nfa::thompson::backtrack::BoundedBacktracker, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _12) -> [return: bb9, unwind: bb20]
  }
  preds [bb6]
  succs [bb9, bb20]

bb9
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:65-303:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:65-303:66)
      kind: drop(_10) -> [return: bb15, unwind: bb22]
  }
  preds [bb8]
  succs [bb15, bb22]

bb10
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:66-303:67)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:66-303:67)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:12-304:67)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:41-304:60)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:41-304:52)
  5: _16 = &((*_1).0: nfa::thompson::backtrack::Config)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:41-304:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:41-304:60)
      kind: _15 = <nfa::thompson::backtrack::Config as core::clone::Clone>::clone(move _16) -> [return: bb11, unwind: bb24]
  }
  preds [bb7]
  succs [bb11, bb24]

bb11
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:59-304:60)
  1: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:62-304:65)
  2: _17 = move _2
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:62-304:65)
  3: _14 = nfa::thompson::backtrack::BoundedBacktracker { config: move _15, nfa: move _17 }
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:12-304:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:66-304:67)
      kind: drop(_17) -> [return: bb12, unwind: bb18]
  }
  preds [bb10]
  succs [bb12, bb18]

bb12
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:66-304:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:66-304:67)
      kind: drop(_15) -> [return: bb13, unwind: bb19]
  }
  preds [bb11]
  succs [bb13, bb19]

bb13
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:66-304:67)
  1: _0 = core::result::Result::<nfa::thompson::backtrack::BoundedBacktracker, nfa::thompson::error::BuildError>::Ok(move _14)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:9-304:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:67-304:68)
      kind: drop(_14) -> [return: bb14, unwind: bb24]
  }
  preds [bb12]
  succs [bb14, bb24]

bb14
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:67-304:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:305:5-305:6)
      kind: drop(_2) -> [return: bb17, unwind: bb25]
  }
  preds [bb13]
  succs [bb17, bb25]

bb15
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:65-303:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:66-303:67)
      kind: drop(_4) -> [return: bb16, unwind: bb24]
  }
  preds [bb9]
  succs [bb16, bb24]

bb16
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:66-303:67)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:66-303:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:305:5-305:6)
      kind: drop(_2) -> [return: bb17, unwind: bb25]
  }
  preds [bb15]
  succs [bb17, bb25]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:305:6-305:6)
      kind: return
  }
  preds [bb14, bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:66-304:67)
      kind: drop(_15) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:304:67-304:68)
      kind: drop(_14) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb12, bb18]
  succs [bb24]

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:65-303:66)
      kind: drop(_12) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:65-303:66)
      kind: drop(_10) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:66-303:67)
      kind: drop(_4) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb9, bb21]
  succs [bb24]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:303:65-303:66)
      kind: drop(_5) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:305:5-305:6)
      kind: drop(_2) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb7, bb10, bb13, bb15, bb19, bb22, bb23]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/backtrack.rs:299:5-305:6)
      kind: resume
  }
  preds [bb14, bb16, bb24]
  succs []

