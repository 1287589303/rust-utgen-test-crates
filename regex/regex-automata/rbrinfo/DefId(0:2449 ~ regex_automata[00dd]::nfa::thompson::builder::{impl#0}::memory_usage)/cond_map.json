{
  "regex-automata/src/nfa/thompson/builder.rs:150:15:150:20": [
    {
      "Match": {
        "match_source": "regex-automata/src/nfa/thompson/builder.rs:150:15:150:20",
        "match_str": "*self",
        "match_kind": {
          "Enum": [
            "Empty",
            "ByteRange",
            "Sparse",
            "Look",
            "CaptureStart",
            "CaptureEnd",
            "Union",
            "UnionReverse",
            "Fail",
            "Match"
          ]
        },
        "arms": {
          "regex-automata/src/nfa/thompson/builder.rs:152:15:152:38": {
            "pat": {
              "pat_str": "State::ByteRange { .. }",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/builder.rs:157:38:157:39"
          },
          "regex-automata/src/nfa/thompson/builder.rs:151:13:151:32": {
            "pat": {
              "pat_str": "State::Empty { .. }",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/builder.rs:157:38:157:39"
          },
          "regex-automata/src/nfa/thompson/builder.rs:153:15:153:33": {
            "pat": {
              "pat_str": "State::Look { .. }",
              "kind": {
                "Enum": 3
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/builder.rs:157:38:157:39"
          },
          "regex-automata/src/nfa/thompson/builder.rs:155:15:155:39": {
            "pat": {
              "pat_str": "State::CaptureEnd { .. }",
              "kind": {
                "Enum": 5
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/builder.rs:157:38:157:39"
          },
          "regex-automata/src/nfa/thompson/builder.rs:157:15:157:34": {
            "pat": {
              "pat_str": "State::Match { .. }",
              "kind": {
                "Enum": 9
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/builder.rs:157:38:157:39"
          },
          "regex-automata/src/nfa/thompson/builder.rs:158:13:158:46": {
            "pat": {
              "pat_str": "State::Sparse { ref transitions }",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/builder.rs:158:50:160:14"
          },
          "regex-automata/src/nfa/thompson/builder.rs:156:15:156:26": {
            "pat": {
              "pat_str": "State::Fail",
              "kind": {
                "Enum": 8
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/builder.rs:157:38:157:39"
          },
          "regex-automata/src/nfa/thompson/builder.rs:154:15:154:41": {
            "pat": {
              "pat_str": "State::CaptureStart { .. }",
              "kind": {
                "Enum": 4
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/builder.rs:157:38:157:39"
          },
          "regex-automata/src/nfa/thompson/builder.rs:164:13:164:51": {
            "pat": {
              "pat_str": "State::UnionReverse { ref alternates }",
              "kind": {
                "Enum": 7
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/builder.rs:164:55:166:14"
          },
          "regex-automata/src/nfa/thompson/builder.rs:161:13:161:44": {
            "pat": {
              "pat_str": "State::Union { ref alternates }",
              "kind": {
                "Enum": 6
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/nfa/thompson/builder.rs:161:48:163:14"
          }
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/builder.rs:162:17:162:61": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "alternates.len() * mem::size_of::<StateID>()",
          "lhs": "alternates.len()",
          "rhs": "mem::size_of::<StateID>()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/builder.rs:159:17:159:65": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "transitions.len() * mem::size_of::<Transition>()",
          "lhs": "transitions.len()",
          "rhs": "mem::size_of::<Transition>()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/builder.rs:165:17:165:61": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "alternates.len() * mem::size_of::<StateID>()",
          "lhs": "alternates.len()",
          "rhs": "mem::size_of::<StateID>()",
          "cmp_with_int": false
        }
      }
    }
  ]
}