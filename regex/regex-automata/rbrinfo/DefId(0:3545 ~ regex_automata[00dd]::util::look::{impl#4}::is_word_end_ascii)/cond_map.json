{
  "regex-automata/src/util/look.rs:1117:13:1117:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "at < haystack.len()",
          "lhs": "at",
          "rhs": "haystack.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:1118:25:1118:35": [
    {
      "Bool": {
        "Other": "word_after"
      }
    }
  ],
  "regex-automata/src/util/look.rs:1115:37:1115:73": [
    {
      "Bool": {
        "Other": "utf8::is_word_byte(haystack[at - 1])"
      }
    }
  ],
  "regex-automata/src/util/look.rs:1115:27:1115:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "at > 0",
          "lhs": "at",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:1117:36:1117:68": [
    {
      "Bool": {
        "Other": "utf8::is_word_byte(haystack[at])"
      }
    }
  ],
  "regex-automata/src/util/look.rs:1115:65:1115:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "at - 1",
          "lhs": "at",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:1118:9:1118:20": [
    {
      "Bool": {
        "Other": "word_before"
      }
    }
  ]
}