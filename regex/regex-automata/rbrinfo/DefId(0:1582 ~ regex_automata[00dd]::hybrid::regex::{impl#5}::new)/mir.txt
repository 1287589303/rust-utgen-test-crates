bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/hybrid/regex.rs:613:13-613:20)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:613:39-613:51)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:613:39-613:51)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:613:39-613:41)
  4: _5 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/regex.rs:613:39-613:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:613:39-613:51)
      kind: _4 = hybrid::regex::Regex::forward(move _5) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: _3 = &(*_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:613:39-613:51)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:613:50-613:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:613:23-613:52)
      kind: _2 = hybrid::dfa::Cache::new(move _3) -> [return: bb2, unwind: bb12]
  }
  preds [bb0]
  succs [bb2, bb12]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:613:51-613:52)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/hybrid/regex.rs:613:13-613:20)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:613:52-613:53)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:614:13-614:20)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:614:39-614:51)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:614:39-614:51)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:614:39-614:41)
  7: _9 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/regex.rs:614:39-614:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:614:39-614:51)
      kind: _8 = hybrid::regex::Regex::reverse(move _9) -> [return: bb3, unwind: bb11]
  }
  preds [bb1]
  succs [bb3, bb11]

bb3
  0: _7 = &(*_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:614:39-614:51)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:614:50-614:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:614:23-614:52)
      kind: _6 = hybrid::dfa::Cache::new(move _7) -> [return: bb4, unwind: bb11]
  }
  preds [bb2]
  succs [bb4, bb11]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:614:51-614:52)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:614:13-614:20)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:614:52-614:53)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/regex.rs:615:17-615:24)
  4: _10 = move _2
    SourceInfo(regex-automata/src/hybrid/regex.rs:615:17-615:24)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/regex.rs:615:26-615:33)
  6: _11 = move _6
    SourceInfo(regex-automata/src/hybrid/regex.rs:615:26-615:33)
  7: _0 = hybrid::regex::Cache { forward: move _10, reverse: move _11 }
    SourceInfo(regex-automata/src/hybrid/regex.rs:615:9-615:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:615:34-615:35)
      kind: drop(_11) -> [return: bb5, unwind: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/regex.rs:615:34-615:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:615:34-615:35)
      kind: drop(_10) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/regex.rs:615:34-615:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:616:5-616:6)
      kind: drop(_6) -> [return: bb7, unwind: bb11]
  }
  preds [bb5]
  succs [bb7, bb11]

bb7
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:616:5-616:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:616:5-616:6)
      kind: drop(_2) -> [return: bb8, unwind: bb12]
  }
  preds [bb6]
  succs [bb8, bb12]

bb8
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/hybrid/regex.rs:616:5-616:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:616:6-616:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:615:34-615:35)
      kind: drop(_10) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:616:5-616:6)
      kind: drop(_6) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb5, bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:616:5-616:6)
      kind: drop(_2) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb2, bb3, bb6, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:612:5-616:6)
      kind: resume
  }
  preds [bb0, bb1, bb7, bb11]
  succs []

