bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/search.rs:1018:13-1018:17)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/search.rs:1018:26-1018:30)
  2: _4 = move _2
    SourceInfo(regex-automata/src/util/search.rs:1018:26-1018:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1018:26-1018:37)
      kind: _3 = <S as core::convert::Into<util::search::Span>>::into(move _4) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/search.rs:1018:36-1018:37)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/search.rs:1018:13-1018:17)
  2: AscribeUserType(_3, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(regex-automata/src/util/search.rs:1018:19-1018:23)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/search.rs:1019:9-1019:62)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/util/search.rs:1019:17-1019:39)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/util/search.rs:1019:17-1019:27)
  6: _7 = (_3.0: usize)
    SourceInfo(regex-automata/src/util/search.rs:1019:17-1019:27)
  7: StorageLive(_8)
    SourceInfo(regex-automata/src/util/search.rs:1019:31-1019:39)
  8: _8 = (_3.1: usize)
    SourceInfo(regex-automata/src/util/search.rs:1019:31-1019:39)
  9: _6 = Le(move _7, move _8)
    SourceInfo(regex-automata/src/util/search.rs:1019:17-1019:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1019:17-1019:39)
      kind: switchInt(move _6) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/search.rs:1019:38-1019:39)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/search.rs:1019:38-1019:39)
  2: _5 = const ()
    SourceInfo(regex-automata/src/util/search.rs:1019:62-1019:62)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/util/search.rs:1019:61-1019:62)
  4: StorageDead(_5)
    SourceInfo(regex-automata/src/util/search.rs:1019:61-1019:62)
  5: StorageLive(_15)
    SourceInfo(regex-automata/src/util/search.rs:1020:17-1020:24)
  6: _15 = _1
    SourceInfo(regex-automata/src/util/search.rs:1020:17-1020:24)
  7: StorageLive(_16)
    SourceInfo(regex-automata/src/util/search.rs:1020:26-1020:30)
  8: _16 = _3
    SourceInfo(regex-automata/src/util/search.rs:1020:26-1020:30)
  9: _0 = util::search::Match { pattern: move _15, span: move _16 }
    SourceInfo(regex-automata/src/util/search.rs:1020:9-1020:32)
  10: StorageDead(_16)
    SourceInfo(regex-automata/src/util/search.rs:1020:31-1020:32)
  11: StorageDead(_15)
    SourceInfo(regex-automata/src/util/search.rs:1020:31-1020:32)
  12: StorageDead(_3)
    SourceInfo(regex-automata/src/util/search.rs:1021:5-1021:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1021:5-1021:6)
      kind: drop(_2) -> [return: bb5, unwind: bb8]
  }
  preds [bb1]
  succs [bb5, bb8]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/search.rs:1019:38-1019:39)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/search.rs:1019:38-1019:39)
  2: StorageLive(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/util/search.rs:1019:41-1019:61)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/util/search.rs:1019:41-1019:61)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/util/search.rs:1019:41-1019:61)
  7: _14 = [const "invalid match span"]
    SourceInfo(regex-automata/src/util/search.rs:1019:41-1019:61)
  8: _13 = &_14
    SourceInfo(regex-automata/src/util/search.rs:1019:41-1019:61)
  9: _12 = &(*_13)
    SourceInfo(regex-automata/src/util/search.rs:1019:41-1019:61)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _11 = core::fmt::Arguments::<'_>::new_const::<1>(move _12) -> [return: bb4, unwind: bb7]
  }
  preds [bb1]
  succs [bb4, bb7]

bb4
  0: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _10 = core::panicking::panic_fmt(move _11) -> bb7
  }
  preds [bb3]
  succs [bb7]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1021:6-1021:6)
      kind: return
  }
  preds [bb2]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1018:36-1018:37)
      kind: drop(_4) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1021:5-1021:6)
      kind: drop(_2) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb3, bb4, bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/search.rs:1017:5-1021:6)
      kind: resume
  }
  preds [bb2, bb7]
  succs []

