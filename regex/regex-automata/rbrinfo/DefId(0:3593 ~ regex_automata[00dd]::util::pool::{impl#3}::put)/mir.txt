bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/pool.rs:206:9-206:38)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/pool.rs:206:31-206:37)
  2: _3 = move (_1.0: util::pool::inner::PoolGuard<'_, T, F>)
    SourceInfo(regex-automata/src/util/pool.rs:206:31-206:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:206:9-206:38)
      kind: _2 = util::pool::inner::PoolGuard::<'_, T, F>::put(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/pool.rs:206:37-206:38)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/util/pool.rs:206:38-206:39)
  2: _0 = const ()
    SourceInfo(regex-automata/src/util/pool.rs:205:43-207:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:207:5-207:6)
      kind: drop(_1) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:207:6-207:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:206:37-206:38)
      kind: drop(_3) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:207:5-207:6)
      kind: drop(_1) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:205:5-207:6)
      kind: resume
  }
  preds [bb1, bb4]
  succs []

