bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:9-337:10)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:54)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:37-335:54)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:37)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:37)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:26)
  8: _9 = &(*_1)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:37)
      kind: _8 = dfa::accel::Accels::<A>::as_bytes(move _9) -> [return: bb1, unwind: bb20]
  }
  preds []
  succs [bb1, bb20]

bb1
  0: _7 = &(*_8)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:37)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:36-335:37)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:38-335:53)
  3: _10 = core::ops::RangeFrom::<usize> { start: const dfa::accel::ACCEL_TY_SIZE }
    SourceInfo(regex-automata/src/dfa/accel.rs:335:38-335:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:335:37-335:54)
      kind: _6 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _7, move _10) -> [return: bb2, unwind: bb20]
  }
  preds [bb0]
  succs [bb2, bb20]

bb2
  0: _5 = &(*_6)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:54)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:53-335:54)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:53-335:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
      kind: _4 = core::slice::<impl [u8]>::chunks(move _5, const dfa::accel::ACCEL_CAP) -> [return: bb3, unwind: bb20]
  }
  preds [bb1]
  succs [bb3, bb20]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:71-335:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
      kind: _3 = <core::slice::Chunks<'_, u8> as core::iter::IntoIterator>::into_iter(move _4) -> [return: bb4, unwind: bb20]
  }
  preds [bb2]
  succs [bb4, bb20]

bb4
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:71-335:72)
  1: PlaceMention(_3)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
  3: _11 = move _3
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:335:9-337:10)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:335:9-337:10)
      kind: falseUnwind -> [real: bb6, unwind: bb20]
  }
  preds [bb4, bb16]
  succs [bb6, bb20]

bb6
  0: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
  1: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
  3: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
  4: _16 = &mut _11
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
  5: _15 = &mut (*_16)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
      kind: _14 = <core::slice::Chunks<'_, u8> as core::iter::Iterator>::next(move _15) -> [return: bb7, unwind: bb20]
  }
  preds [bb5]
  succs [bb7, bb20]

bb7
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:71-335:72)
  1: PlaceMention(_14)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
  2: _17 = discriminant(_14)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
      kind: switchInt(move _17) -> [0: bb9, 1: bb10, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9, bb10]

bb8
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:335:22-335:72)
      kind: unreachable
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:335:9-337:10)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/accel.rs:335:13-335:18)
  1: _19 = ((_14 as Some).0: &[u8])
    SourceInfo(regex-automata/src/dfa/accel.rs:335:13-335:18)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:46)
  3: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:46)
  4: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:45)
  5: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:39-336:44)
  6: _23 = &(*_19)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:39-336:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:45)
      kind: _22 = dfa::accel::Accel::from_slice(move _23) -> [return: bb12, unwind: bb20]
  }
  preds [bb7, bb9]
  succs [bb12, bb20]

bb11
  0: _2 = const ()
    SourceInfo(regex-automata/src/dfa/accel.rs:335:9-337:10)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  4: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  5: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  6: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  7: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  8: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  9: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/accel.rs:338:12-338:14)
  10: _29 = ()
    SourceInfo(regex-automata/src/dfa/accel.rs:338:12-338:14)
  11: _0 = core::result::Result::<(), util::wire::DeserializeError>::Ok(move _29)
    SourceInfo(regex-automata/src/dfa/accel.rs:338:9-338:15)
  12: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/accel.rs:338:14-338:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:339:6-339:6)
      kind: goto -> bb19
  }
  preds [bb9]
  succs [bb19]

bb12
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:44-336:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:46)
      kind: _21 = <core::result::Result<dfa::accel::Accel, util::wire::DeserializeError> as core::ops::Try>::branch(move _22) -> [return: bb13, unwind: bb20]
  }
  preds [bb10]
  succs [bb13, bb20]

bb13
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:45-336:46)
  1: PlaceMention(_21)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:46)
  2: _24 = discriminant(_21)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:46)
      kind: switchInt(move _24) -> [0: bb16, 1: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15, bb16]

bb14
  0: FakeRead(ForMatchedPlace(None), _21)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:46)
      kind: unreachable
  }
  preds [bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:336:45-336:46)
      kind: falseEdge -> [real: bb17, imaginary: bb16]
  }
  preds [bb13]
  succs [bb16, bb17]

bb16
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:46)
  1: _28 = move ((_21 as Continue).0: dfa::accel::Accel)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:46)
  2: _20 = move _28
    SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:46)
  3: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:45-336:46)
  4: PlaceMention(_20)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:46)
  5: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:46-336:47)
  6: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:46-336:47)
  7: _13 = const ()
    SourceInfo(regex-automata/src/dfa/accel.rs:335:73-337:10)
  8: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  9: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  10: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  11: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  12: _12 = const ()
    SourceInfo(regex-automata/src/dfa/accel.rs:335:9-337:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:335:9-337:10)
      kind: goto -> bb5
  }
  preds [bb13, bb15]
  succs [bb5]

bb17
  0: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:45-336:46)
  1: _25 = move ((_21 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:45-336:46)
  2: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:45-336:46)
  3: _27 = move _25
    SourceInfo(regex-automata/src/dfa/accel.rs:336:45-336:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:336:21-336:46)
      kind: _0 = <core::result::Result<(), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _27) -> [return: bb18, unwind: bb20]
  }
  preds [bb15]
  succs [bb18, bb20]

bb18
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:45-336:46)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:45-336:46)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:46-336:47)
  3: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/accel.rs:336:46-336:47)
  4: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  5: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  6: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  7: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  8: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  9: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  10: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  11: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  12: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/accel.rs:337:9-337:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:339:6-339:6)
      kind: goto -> bb19
  }
  preds [bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:339:6-339:6)
      kind: return
  }
  preds [bb11, bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:334:5-339:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb5, bb6, bb10, bb12, bb17]
  succs []

