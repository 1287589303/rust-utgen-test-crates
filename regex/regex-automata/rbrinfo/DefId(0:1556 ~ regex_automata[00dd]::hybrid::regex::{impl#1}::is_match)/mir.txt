bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:292:9-294:22)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:292:9-294:22)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:292:9-293:78)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:292:9-292:23)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:292:9-292:23)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:292:9-292:13)
  6: _9 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/regex.rs:292:9-292:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:292:9-292:23)
      kind: _8 = hybrid::regex::Regex::forward(move _9) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: _7 = &(*_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:292:9-292:23)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:292:22-292:23)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:29-293:47)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:29-293:47)
  4: _11 = &mut ((*_2).0: hybrid::dfa::Cache)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:29-293:47)
  5: _10 = &mut (*_11)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:29-293:47)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:49-293:77)
  7: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:49-293:77)
  8: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:50-293:77)
  9: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:50-293:62)
  10: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:50-293:55)
  11: _16 = move _3
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:50-293:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:293:50-293:62)
      kind: _15 = <I as core::convert::Into<util::search::Input<'_>>>::into(move _16) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:61-293:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:293:50-293:77)
      kind: _14 = util::search::Input::<'_>::earliest(move _15, const true) -> [return: bb3, unwind: bb10]
  }
  preds [bb1]
  succs [bb3, bb10]

bb3
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:76-293:77)
  1: _13 = &_14
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:49-293:77)
  2: _12 = &(*_13)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:49-293:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:292:9-293:78)
      kind: _6 = hybrid::dfa::DFA::try_search_fwd(move _7, move _10, move _12) -> [return: bb4, unwind: bb10]
  }
  preds [bb2]
  succs [bb4, bb10]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:77-293:78)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:77-293:78)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:293:77-293:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:292:9-294:22)
      kind: _5 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::unwrap(move _6) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: _4 = &_5
    SourceInfo(regex-automata/src/hybrid/regex.rs:292:9-294:22)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:294:21-294:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:292:9-295:23)
      kind: _0 = core::option::Option::<util::search::HalfMatch>::is_some(move _4) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:295:22-295:23)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/regex.rs:296:5-296:6)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/regex.rs:296:5-296:6)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/regex.rs:296:5-296:6)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/regex.rs:296:5-296:6)
  5: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:296:5-296:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:296:5-296:6)
      kind: drop(_3) -> [return: bb7, unwind: bb11]
  }
  preds [bb5]
  succs [bb7, bb11]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:296:6-296:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:294:21-294:22)
      kind: drop(_6) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb10]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:293:61-293:62)
      kind: drop(_16) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:296:5-296:6)
      kind: drop(_3) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb0, bb2, bb3, bb5, bb8, bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:285:5-296:6)
      kind: resume
  }
  preds [bb6, bb10]
  succs []

