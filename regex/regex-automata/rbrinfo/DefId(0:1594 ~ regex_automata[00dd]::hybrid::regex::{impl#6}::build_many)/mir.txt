bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:13-792:20)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:53)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:52)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:31)
  4: _6 = &((*_1).0: hybrid::dfa::Builder)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:31)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:43-792:51)
  6: _7 = &(*_2)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:43-792:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:52)
      kind: _5 = hybrid::dfa::Builder::build_many::<P>(move _6, move _7) -> [return: bb1, unwind: bb59]
  }
  preds []
  succs [bb1, bb59]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:51-792:52)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:51-792:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:53)
      kind: _4 = <core::result::Result<hybrid::dfa::DFA, hybrid::error::BuildError> as core::ops::Try>::branch(move _5) -> [return: bb2, unwind: bb58]
  }
  preds [bb0]
  succs [bb2, bb58]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:52-792:53)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:53)
  2: _8 = discriminant(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:53)
      kind: switchInt(move _8) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:53)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:792:52-792:53)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:53)
  1: _12 = move ((_4 as Continue).0: hybrid::dfa::DFA)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:53)
  2: _3 = move _12
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:792:52-792:53)
      kind: drop(_12) -> [return: bb8, unwind: bb57]
  }
  preds [bb2, bb4]
  succs [bb8, bb57]

bb6
  0: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:52-792:53)
  1: _9 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, hybrid::error::BuildError>)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:52-792:53)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:52-792:53)
  3: _11 = move _9
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:52-792:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:792:23-792:53)
      kind: _0 = <core::result::Result<hybrid::regex::Regex, hybrid::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hybrid::error::BuildError>>>::from_residual(move _11) -> [return: bb7, unwind: bb55]
  }
  preds [bb4]
  succs [bb7, bb55]

bb7
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:52-792:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:792:52-792:53)
      kind: drop(_9) -> [return: bb36, unwind: bb57]
  }
  preds [bb6]
  succs [bb36, bb57]

bb8
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:52-792:53)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:13-792:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:792:53-792:54)
      kind: drop(_4) -> [return: bb9, unwind: bb54]
  }
  preds [bb5]
  succs [bb9, bb54]

bb9
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:53-792:54)
  1: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:13-793:20)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-803:35)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-803:34)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-802:61)
  5: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-802:61)
  6: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-801:14)
  7: StorageLive(_19)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-801:14)
  8: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-795:21)
  9: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-795:21)
  10: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-794:17)
  11: _22 = &((*_1).0: hybrid::dfa::Builder)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-794:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-795:21)
      kind: _21 = <hybrid::dfa::Builder as core::clone::Clone>::clone(move _22) -> [return: bb10, unwind: bb54]
  }
  preds [bb8]
  succs [bb10, bb54]

bb10
  0: _20 = &mut _21
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-795:21)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/regex.rs:795:20-795:21)
  2: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/regex.rs:797:17-800:48)
  3: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/regex.rs:797:17-799:52)
  4: StorageLive(_25)
    SourceInfo(regex-automata/src/hybrid/regex.rs:797:17-798:37)
  5: StorageLive(_26)
    SourceInfo(regex-automata/src/hybrid/regex.rs:797:17-797:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:797:17-797:30)
      kind: _26 = hybrid::dfa::DFA::config() -> [return: bb11, unwind: bb53]
  }
  preds [bb9]
  succs [bb11, bb53]

bb11
  0: StorageLive(_27)
    SourceInfo(regex-automata/src/hybrid/regex.rs:798:32-798:36)
  1: _27 = core::option::Option::<util::prefilter::Prefilter>::None
    SourceInfo(regex-automata/src/hybrid/regex.rs:798:32-798:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:797:17-798:37)
      kind: _25 = hybrid::dfa::Config::prefilter(move _26, move _27) -> [return: bb12, unwind: bb51]
  }
  preds [bb10]
  succs [bb12, bb51]

bb12
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/regex.rs:798:36-798:37)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/hybrid/regex.rs:798:36-798:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:797:17-799:52)
      kind: _24 = hybrid::dfa::Config::specialize_start_states(move _25, const false) -> [return: bb13, unwind: bb50]
  }
  preds [bb11]
  succs [bb13, bb50]

bb13
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/hybrid/regex.rs:799:51-799:52)
  1: StorageLive(_28)
    SourceInfo(regex-automata/src/hybrid/regex.rs:800:33-800:47)
  2: _28 = util::search::MatchKind::All
    SourceInfo(regex-automata/src/hybrid/regex.rs:800:33-800:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:797:17-800:48)
      kind: _23 = hybrid::dfa::Config::match_kind(move _24, move _28) -> [return: bb14, unwind: bb49]
  }
  preds [bb12]
  succs [bb14, bb49]

bb14
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/hybrid/regex.rs:800:47-800:48)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/regex.rs:800:47-800:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-801:14)
      kind: _19 = hybrid::dfa::Builder::configure(move _20, move _23) -> [return: bb15, unwind: bb48]
  }
  preds [bb13]
  succs [bb15, bb48]

bb15
  0: _18 = &mut (*_19)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-801:14)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/regex.rs:801:13-801:14)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/regex.rs:801:13-801:14)
  3: StorageLive(_29)
    SourceInfo(regex-automata/src/hybrid/regex.rs:802:23-802:60)
  4: StorageLive(_30)
    SourceInfo(regex-automata/src/hybrid/regex.rs:802:23-802:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:802:23-802:46)
      kind: _30 = nfa::thompson::compiler::Config::new() -> [return: bb16, unwind: bb53]
  }
  preds [bb14]
  succs [bb16, bb53]

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:802:23-802:60)
      kind: _29 = nfa::thompson::compiler::Config::reverse(move _30, const true) -> [return: bb17, unwind: bb53]
  }
  preds [bb15]
  succs [bb17, bb53]

bb17
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/regex.rs:802:59-802:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-802:61)
      kind: _17 = hybrid::dfa::Builder::thompson(move _18, move _29) -> [return: bb18, unwind: bb53]
  }
  preds [bb16]
  succs [bb18, bb53]

bb18
  0: _16 = &(*_17)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-802:61)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/regex.rs:802:60-802:61)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/regex.rs:802:60-802:61)
  3: StorageLive(_31)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:25-803:33)
  4: _31 = &(*_2)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:25-803:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-803:34)
      kind: _15 = hybrid::dfa::Builder::build_many::<P>(move _16, move _31) -> [return: bb19, unwind: bb53]
  }
  preds [bb17]
  succs [bb19, bb53]

bb19
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:33-803:34)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:33-803:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-803:35)
      kind: _14 = <core::result::Result<hybrid::dfa::DFA, hybrid::error::BuildError> as core::ops::Try>::branch(move _15) -> [return: bb20, unwind: bb47]
  }
  preds [bb18]
  succs [bb20, bb47]

bb20
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:34-803:35)
  1: PlaceMention(_14)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-803:35)
  2: _32 = discriminant(_14)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-803:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-803:35)
      kind: switchInt(move _32) -> [0: bb23, 1: bb22, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb22, bb23]

bb21
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-803:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-803:35)
      kind: unreachable
  }
  preds [bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:803:34-803:35)
      kind: falseEdge -> [real: bb24, imaginary: bb23]
  }
  preds [bb20]
  succs [bb23, bb24]

bb23
  0: StorageLive(_36)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-803:35)
  1: _36 = move ((_14 as Continue).0: hybrid::dfa::DFA)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-803:35)
  2: _13 = move _36
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-803:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:803:34-803:35)
      kind: drop(_36) -> [return: bb26, unwind: bb46]
  }
  preds [bb20, bb22]
  succs [bb26, bb46]

bb24
  0: StorageLive(_33)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:34-803:35)
  1: _33 = move ((_14 as Break).0: core::result::Result<core::convert::Infallible, hybrid::error::BuildError>)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:34-803:35)
  2: StorageLive(_35)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:34-803:35)
  3: _35 = move _33
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:34-803:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:793:23-803:35)
      kind: _0 = <core::result::Result<hybrid::regex::Regex, hybrid::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hybrid::error::BuildError>>>::from_residual(move _35) -> [return: bb25, unwind: bb44]
  }
  preds [bb22]
  succs [bb25, bb44]

bb25
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:34-803:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:803:34-803:35)
      kind: drop(_33) -> [return: bb33, unwind: bb46]
  }
  preds [bb24]
  succs [bb33, bb46]

bb26
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:34-803:35)
  1: FakeRead(ForLet(None), _13)
    SourceInfo(regex-automata/src/hybrid/regex.rs:793:13-793:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
      kind: drop(_14) -> [return: bb27, unwind: bb42]
  }
  preds [bb23]
  succs [bb27, bb42]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
      kind: drop(_21) -> [return: bb28, unwind: bb43]
  }
  preds [bb26]
  succs [bb28, bb43]

bb28
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
  4: StorageLive(_37)
    SourceInfo(regex-automata/src/hybrid/regex.rs:804:12-804:50)
  5: StorageLive(_38)
    SourceInfo(regex-automata/src/hybrid/regex.rs:804:12-804:16)
  6: _38 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/regex.rs:804:12-804:16)
  7: StorageLive(_39)
    SourceInfo(regex-automata/src/hybrid/regex.rs:804:33-804:40)
  8: _39 = move _3
    SourceInfo(regex-automata/src/hybrid/regex.rs:804:33-804:40)
  9: StorageLive(_40)
    SourceInfo(regex-automata/src/hybrid/regex.rs:804:42-804:49)
  10: _40 = move _13
    SourceInfo(regex-automata/src/hybrid/regex.rs:804:42-804:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:804:12-804:50)
      kind: _37 = hybrid::regex::Builder::build_from_dfas(move _38, move _39, move _40) -> [return: bb29, unwind: bb40]
  }
  preds [bb27]
  succs [bb29, bb40]

bb29
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/hybrid/regex.rs:804:49-804:50)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/hybrid/regex.rs:804:49-804:50)
  2: StorageDead(_38)
    SourceInfo(regex-automata/src/hybrid/regex.rs:804:49-804:50)
  3: _0 = core::result::Result::<hybrid::regex::Regex, hybrid::error::BuildError>::Ok(move _37)
    SourceInfo(regex-automata/src/hybrid/regex.rs:804:9-804:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:804:50-804:51)
      kind: drop(_37) -> [return: bb30, unwind: bb43]
  }
  preds [bb28]
  succs [bb30, bb43]

bb30
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/hybrid/regex.rs:804:50-804:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:805:5-805:6)
      kind: drop(_13) -> [return: bb31, unwind: bb54]
  }
  preds [bb29]
  succs [bb31, bb54]

bb31
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/regex.rs:805:5-805:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:805:5-805:6)
      kind: drop(_3) -> [return: bb32, unwind: bb59]
  }
  preds [bb30]
  succs [bb32, bb59]

bb32
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:805:5-805:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:805:6-805:6)
      kind: goto -> bb39
  }
  preds [bb31]
  succs [bb39]

bb33
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:34-803:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
      kind: drop(_14) -> [return: bb34, unwind: bb53]
  }
  preds [bb25]
  succs [bb34, bb53]

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
      kind: drop(_21) -> [return: bb35, unwind: bb54]
  }
  preds [bb33]
  succs [bb35, bb54]

bb35
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
  4: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/regex.rs:805:5-805:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:805:5-805:6)
      kind: drop(_3) -> [return: bb38, unwind: bb59]
  }
  preds [bb34]
  succs [bb38, bb59]

bb36
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:52-792:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:792:53-792:54)
      kind: drop(_4) -> [return: bb37, unwind: bb59]
  }
  preds [bb7]
  succs [bb37, bb59]

bb37
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/regex.rs:792:53-792:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb36]
  succs [bb38]

bb38
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/regex.rs:805:5-805:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:805:6-805:6)
      kind: goto -> bb39
  }
  preds [bb35, bb37]
  succs [bb39]

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:805:6-805:6)
      kind: return
  }
  preds [bb32, bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:804:49-804:50)
      kind: drop(_40) -> [return: bb41, unwind terminate(cleanup)]
  }
  preds [bb28]
  succs [bb41]

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:804:49-804:50)
      kind: drop(_39) -> [return: bb43, unwind terminate(cleanup)]
  }
  preds [bb40]
  succs [bb43]

bb42
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
      kind: drop(_21) -> [return: bb43, unwind terminate(cleanup)]
  }
  preds [bb26]
  succs [bb43]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:805:5-805:6)
      kind: drop(_13) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb27, bb29, bb41, bb42]
  succs [bb54]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:803:34-803:35)
      kind: drop(_35) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb24]
  succs [bb45]

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:803:34-803:35)
      kind: drop(_33) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb44]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
      kind: drop(_14) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb23, bb25, bb45]
  succs [bb53]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:803:34-803:35)
      kind: drop(_15) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb53]

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:801:13-801:14)
      kind: drop(_23) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb53]

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:800:47-800:48)
      kind: drop(_24) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb53]

bb50
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:799:51-799:52)
      kind: drop(_25) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb53]

bb51
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:798:36-798:37)
      kind: drop(_27) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb52]

bb52
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:798:36-798:37)
      kind: drop(_26) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb51]
  succs [bb53]

bb53
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:803:35-803:36)
      kind: drop(_21) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb10, bb15, bb16, bb17, bb18, bb33, bb46, bb47, bb48, bb49, bb50, bb52]
  succs [bb54]

bb54
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:805:5-805:6)
      kind: drop(_3) -> [return: bb59, unwind terminate(cleanup)]
  }
  preds [bb8, bb9, bb30, bb34, bb43, bb53]
  succs [bb59]

bb55
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:792:52-792:53)
      kind: drop(_11) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:792:52-792:53)
      kind: drop(_9) -> [return: bb57, unwind terminate(cleanup)]
  }
  preds [bb55]
  succs [bb57]

bb57
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:792:53-792:54)
      kind: drop(_4) -> [return: bb59, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb56]
  succs [bb59]

bb58
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:792:52-792:53)
      kind: drop(_5) -> [return: bb59, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb59]

bb59
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/regex.rs:788:5-805:6)
      kind: resume
  }
  preds [bb0, bb31, bb35, bb36, bb54, bb57, bb58]
  succs []

