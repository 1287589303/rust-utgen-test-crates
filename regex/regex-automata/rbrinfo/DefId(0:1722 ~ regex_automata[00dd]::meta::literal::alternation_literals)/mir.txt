bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/literal.rs:23:5-25:6)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/literal.rs:23:9-23:54)
  2: _4 = const true
    SourceInfo(regex-automata/src/meta/literal.rs:23:9-23:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:23:9-23:54)
      kind: switchInt(move _4) -> [0: bb1, otherwise: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _0 = core::option::Option::<std::vec::Vec<std::vec::Vec<u8>>>::None
    SourceInfo(regex-automata/src/meta/literal.rs:24:16-24:20)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/literal.rs:25:5-25:6)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/literal.rs:25:5-25:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb0]
  succs [bb77]

bb2
  0: _3 = const ()
    SourceInfo(regex-automata/src/meta/literal.rs:25:6-25:6)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/literal.rs:25:5-25:6)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/literal.rs:25:5-25:6)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/literal.rs:29:5-36:6)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/literal.rs:29:8-29:23)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/literal.rs:29:8-29:18)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/literal.rs:29:8-29:12)
  7: _9 = &(*_2)
    SourceInfo(regex-automata/src/meta/literal.rs:29:8-29:12)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:29:8-29:18)
      kind: _8 = core::slice::<impl [&regex_syntax::hir::Hir]>::len(move _9) -> [return: bb3, unwind: bb81]
  }
  preds [bb0]
  succs [bb3, bb81]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/literal.rs:29:17-29:18)
  1: _7 = Ne(move _8, const 1_usize)
    SourceInfo(regex-automata/src/meta/literal.rs:29:8-29:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:29:8-29:23)
      kind: switchInt(move _7) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/literal.rs:29:22-29:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:34:5-36:6)
      kind: goto -> bb26
  }
  preds [bb3]
  succs [bb26]

bb5
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/literal.rs:29:22-29:23)
  1: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/literal.rs:30:13-30:50)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/literal.rs:30:13-30:39)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/literal.rs:30:13-30:28)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/literal.rs:30:13-30:25)
  5: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/literal.rs:30:13-30:17)
  6: _14 = &(*_1)
    SourceInfo(regex-automata/src/meta/literal.rs:30:13-30:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:30:13-30:25)
      kind: _13 = meta::regex::RegexInfo::props(move _14) -> [return: bb6, unwind: bb81]
  }
  preds [bb3]
  succs [bb6, bb81]

bb6
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/literal.rs:30:24-30:25)
  1: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/literal.rs:30:26-30:27)
  2: _15 = const 0_usize
    SourceInfo(regex-automata/src/meta/literal.rs:30:26-30:27)
  3: _16 = Len((*_13))
    SourceInfo(regex-automata/src/meta/literal.rs:30:13-30:28)
  4: _17 = Lt(_15, _16)
    SourceInfo(regex-automata/src/meta/literal.rs:30:13-30:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:30:13-30:28)
      kind: assert(move _17, "index out of bounds: the length is {} but the index is {}", move _16, _15) -> [success: bb7, unwind: bb81]
  }
  preds [bb5]
  succs [bb7, bb81]

bb7
  0: _12 = &(*_13)[_15]
    SourceInfo(regex-automata/src/meta/literal.rs:30:13-30:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:30:13-30:39)
      kind: _11 = regex_syntax::hir::Properties::look_set(move _12) -> [return: bb8, unwind: bb81]
  }
  preds [bb6]
  succs [bb8, bb81]

bb8
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/literal.rs:30:38-30:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:30:13-30:50)
      kind: _10 = regex_syntax::hir::LookSet::is_empty(move _11) -> [return: bb9, unwind: bb81]
  }
  preds [bb7]
  succs [bb9, bb81]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:30:13-30:50)
      kind: switchInt(move _10) -> [0: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11]

bb10
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/literal.rs:30:49-30:50)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/literal.rs:30:49-30:50)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/literal.rs:30:49-30:50)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/literal.rs:31:12-31:55)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/literal.rs:31:12-31:51)
  5: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/literal.rs:31:12-31:27)
  6: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/literal.rs:31:12-31:24)
  7: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/literal.rs:31:12-31:16)
  8: _22 = &(*_1)
    SourceInfo(regex-automata/src/meta/literal.rs:31:12-31:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:31:12-31:24)
      kind: _21 = meta::regex::RegexInfo::props(move _22) -> [return: bb12, unwind: bb81]
  }
  preds [bb9]
  succs [bb12, bb81]

bb11
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/literal.rs:30:49-30:50)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/literal.rs:30:49-30:50)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/literal.rs:30:49-30:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:34:5-36:6)
      kind: goto -> bb26
  }
  preds [bb9]
  succs [bb26]

bb12
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/literal.rs:31:23-31:24)
  1: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/literal.rs:31:25-31:26)
  2: _23 = const 0_usize
    SourceInfo(regex-automata/src/meta/literal.rs:31:25-31:26)
  3: _24 = Len((*_21))
    SourceInfo(regex-automata/src/meta/literal.rs:31:12-31:27)
  4: _25 = Lt(_23, _24)
    SourceInfo(regex-automata/src/meta/literal.rs:31:12-31:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:31:12-31:27)
      kind: assert(move _25, "index out of bounds: the length is {} but the index is {}", move _24, _23) -> [success: bb13, unwind: bb81]
  }
  preds [bb10]
  succs [bb13, bb81]

bb13
  0: _20 = &(*_21)[_23]
    SourceInfo(regex-automata/src/meta/literal.rs:31:12-31:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:31:12-31:51)
      kind: _19 = regex_syntax::hir::Properties::explicit_captures_len(move _20) -> [return: bb14, unwind: bb81]
  }
  preds [bb12]
  succs [bb14, bb81]

bb14
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/literal.rs:31:50-31:51)
  1: _18 = Gt(move _19, const 0_usize)
    SourceInfo(regex-automata/src/meta/literal.rs:31:12-31:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:31:12-31:55)
      kind: switchInt(move _18) -> [0: bb16, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16]

bb15
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/literal.rs:31:54-31:55)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/literal.rs:31:54-31:55)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/literal.rs:31:54-31:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:34:5-36:6)
      kind: goto -> bb26
  }
  preds [bb14]
  succs [bb26]

bb16
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/literal.rs:31:54-31:55)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/literal.rs:31:54-31:55)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/literal.rs:31:54-31:55)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/literal.rs:32:13-32:53)
  4: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/literal.rs:32:13-32:28)
  5: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/literal.rs:32:13-32:25)
  6: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/literal.rs:32:13-32:17)
  7: _29 = &(*_1)
    SourceInfo(regex-automata/src/meta/literal.rs:32:13-32:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:32:13-32:25)
      kind: _28 = meta::regex::RegexInfo::props(move _29) -> [return: bb17, unwind: bb81]
  }
  preds [bb14]
  succs [bb17, bb81]

bb17
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/literal.rs:32:24-32:25)
  1: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/literal.rs:32:26-32:27)
  2: _30 = const 0_usize
    SourceInfo(regex-automata/src/meta/literal.rs:32:26-32:27)
  3: _31 = Len((*_28))
    SourceInfo(regex-automata/src/meta/literal.rs:32:13-32:28)
  4: _32 = Lt(_30, _31)
    SourceInfo(regex-automata/src/meta/literal.rs:32:13-32:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:32:13-32:28)
      kind: assert(move _32, "index out of bounds: the length is {} but the index is {}", move _31, _30) -> [success: bb18, unwind: bb81]
  }
  preds [bb16]
  succs [bb18, bb81]

bb18
  0: _27 = &(*_28)[_30]
    SourceInfo(regex-automata/src/meta/literal.rs:32:13-32:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:32:13-32:53)
      kind: _26 = regex_syntax::hir::Properties::is_alternation_literal(move _27) -> [return: bb19, unwind: bb81]
  }
  preds [bb17]
  succs [bb19, bb81]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:32:13-32:53)
      kind: switchInt(move _26) -> [0: bb21, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb21]

bb20
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/literal.rs:32:52-32:53)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/literal.rs:32:52-32:53)
  2: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/literal.rs:32:52-32:53)
  3: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/literal.rs:33:12-33:70)
  4: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/literal.rs:33:12-33:42)
  5: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/literal.rs:33:12-33:42)
  6: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/literal.rs:33:12-33:25)
  7: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/literal.rs:33:12-33:25)
  8: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/literal.rs:33:12-33:16)
  9: _38 = &(*_1)
    SourceInfo(regex-automata/src/meta/literal.rs:33:12-33:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:33:12-33:25)
      kind: _37 = meta::regex::RegexInfo::config(move _38) -> [return: bb22, unwind: bb81]
  }
  preds [bb19]
  succs [bb22, bb81]

bb21
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/literal.rs:32:52-32:53)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/literal.rs:32:52-32:53)
  2: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/literal.rs:32:52-32:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:34:5-36:6)
      kind: goto -> bb26
  }
  preds [bb19]
  succs [bb26]

bb22
  0: _36 = &(*_37)
    SourceInfo(regex-automata/src/meta/literal.rs:33:12-33:25)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/literal.rs:33:24-33:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:33:12-33:42)
      kind: _35 = meta::regex::Config::get_match_kind(move _36) -> [return: bb23, unwind: bb81]
  }
  preds [bb20]
  succs [bb23, bb81]

bb23
  0: _34 = &_35
    SourceInfo(regex-automata/src/meta/literal.rs:33:12-33:42)
  1: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/literal.rs:33:41-33:42)
  2: StorageLive(_39)
    SourceInfo(regex-automata/src/meta/literal.rs:33:46-33:70)
  3: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/literal.rs:33:46-33:70)
  4: _40 = util::search::MatchKind::LeftmostFirst
    SourceInfo(regex-automata/src/meta/literal.rs:33:46-33:70)
  5: _39 = &_40
    SourceInfo(regex-automata/src/meta/literal.rs:33:46-33:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:33:12-33:70)
      kind: _33 = <util::search::MatchKind as core::cmp::PartialEq>::ne(move _34, move _39) -> [return: bb24, unwind: bb81]
  }
  preds [bb22]
  succs [bb24, bb81]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:33:12-33:70)
      kind: switchInt(move _33) -> [0: bb27, otherwise: bb25]
  }
  preds [bb23]
  succs [bb25, bb27]

bb25
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/literal.rs:33:69-33:70)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/literal.rs:33:69-33:70)
  2: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/literal.rs:33:69-33:70)
  3: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/literal.rs:33:69-33:70)
  4: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/literal.rs:33:69-33:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:34:5-36:6)
      kind: goto -> bb26
  }
  preds [bb24]
  succs [bb26]

bb26
  0: _0 = core::option::Option::<std::vec::Vec<std::vec::Vec<u8>>>::None
    SourceInfo(regex-automata/src/meta/literal.rs:35:16-35:20)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/literal.rs:36:5-36:6)
  2: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/literal.rs:36:5-36:6)
  3: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/literal.rs:36:5-36:6)
  4: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/literal.rs:36:5-36:6)
  5: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/literal.rs:36:5-36:6)
  6: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/literal.rs:36:5-36:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb4, bb11, bb15, bb21, bb25]
  succs [bb77]

bb27
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/literal.rs:33:69-33:70)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/literal.rs:33:69-33:70)
  2: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/literal.rs:33:69-33:70)
  3: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/literal.rs:33:69-33:70)
  4: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/literal.rs:33:69-33:70)
  5: _6 = const ()
    SourceInfo(regex-automata/src/meta/literal.rs:36:6-36:6)
  6: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/literal.rs:36:5-36:6)
  7: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/literal.rs:36:5-36:6)
  8: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/literal.rs:36:5-36:6)
  9: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/literal.rs:36:5-36:6)
  10: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/literal.rs:36:5-36:6)
  11: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/literal.rs:36:5-36:6)
  12: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/literal.rs:37:9-37:12)
  13: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/literal.rs:37:21-37:22)
  14: _43 = const 0_usize
    SourceInfo(regex-automata/src/meta/literal.rs:37:21-37:22)
  15: _44 = Len((*_2))
    SourceInfo(regex-automata/src/meta/literal.rs:37:16-37:23)
  16: _45 = Lt(_43, _44)
    SourceInfo(regex-automata/src/meta/literal.rs:37:16-37:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:37:16-37:23)
      kind: assert(move _45, "index out of bounds: the length is {} but the index is {}", move _44, _43) -> [success: bb28, unwind: bb81]
  }
  preds [bb24]
  succs [bb28, bb81]

bb28
  0: _42 = &(*_2)[_43]
    SourceInfo(regex-automata/src/meta/literal.rs:37:15-37:23)
  1: FakeRead(ForLet(None), _42)
    SourceInfo(regex-automata/src/meta/literal.rs:37:9-37:12)
  2: StorageLive(_46)
    SourceInfo(regex-automata/src/meta/literal.rs:38:9-38:13)
  3: StorageLive(_47)
    SourceInfo(regex-automata/src/meta/literal.rs:38:23-38:33)
  4: StorageLive(_48)
    SourceInfo(regex-automata/src/meta/literal.rs:38:23-38:26)
  5: _48 = &(*(*_42))
    SourceInfo(regex-automata/src/meta/literal.rs:38:23-38:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:38:23-38:33)
      kind: _47 = regex_syntax::hir::Hir::kind(move _48) -> [return: bb29, unwind: bb81]
  }
  preds [bb27]
  succs [bb29, bb81]

bb29
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/meta/literal.rs:38:32-38:33)
  1: PlaceMention((*_47))
    SourceInfo(regex-automata/src/meta/literal.rs:38:22-38:33)
  2: _49 = discriminant((*_47))
    SourceInfo(regex-automata/src/meta/literal.rs:38:22-38:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:38:16-38:33)
      kind: switchInt(move _49) -> [7: bb31, otherwise: bb30]
  }
  preds [bb28]
  succs [bb30, bb31]

bb30
  0: _0 = core::option::Option::<std::vec::Vec<std::vec::Vec<u8>>>::None
    SourceInfo(regex-automata/src/meta/literal.rs:40:21-40:25)
  1: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/literal.rs:41:6-41:7)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb29, bb31]
  succs [bb76]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:39:9-39:39)
      kind: falseEdge -> [real: bb32, imaginary: bb30]
  }
  preds [bb29]
  succs [bb30, bb32]

bb32
  0: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/literal.rs:39:30-39:38)
  1: _50 = &(((*_47) as Alternation).0: std::vec::Vec<regex_syntax::hir::Hir>)
    SourceInfo(regex-automata/src/meta/literal.rs:39:30-39:38)
  2: _46 = _50
    SourceInfo(regex-automata/src/meta/literal.rs:39:43-39:47)
  3: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/literal.rs:39:46-39:47)
  4: FakeRead(ForLet(None), _46)
    SourceInfo(regex-automata/src/meta/literal.rs:38:9-38:13)
  5: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/literal.rs:41:6-41:7)
  6: StorageLive(_52)
    SourceInfo(regex-automata/src/meta/literal.rs:43:9-43:17)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _52 = std::vec::Vec::<std::vec::Vec<u8>>::new() -> [return: bb33, unwind: bb81]
  }
  preds [bb31]
  succs [bb33, bb81]

bb33
  0: FakeRead(ForLet(None), _52)
    SourceInfo(regex-automata/src/meta/literal.rs:43:9-43:17)
  1: StorageLive(_53)
    SourceInfo(regex-automata/src/meta/literal.rs:44:5-63:6)
  2: StorageLive(_54)
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  3: StorageLive(_55)
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  4: _55 = _46
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
      kind: _54 = <&std::vec::Vec<regex_syntax::hir::Hir> as core::iter::IntoIterator>::into_iter(move _55) -> [return: bb34, unwind: bb80]
  }
  preds [bb32]
  succs [bb34, bb80]

bb34
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/meta/literal.rs:44:19-44:20)
  1: PlaceMention(_54)
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  2: StorageLive(_56)
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  3: _56 = move _54
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:44:5-63:6)
      kind: goto -> bb35
  }
  preds [bb33]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:44:5-63:6)
      kind: falseUnwind -> [real: bb36, unwind: bb80]
  }
  preds [bb34, bb69]
  succs [bb36, bb80]

bb36
  0: StorageLive(_58)
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  1: StorageLive(_59)
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  2: StorageLive(_60)
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  3: StorageLive(_61)
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  4: _61 = &mut _56
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  5: _60 = &mut (*_61)
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
      kind: _59 = <core::slice::Iter<'_, regex_syntax::hir::Hir> as core::iter::Iterator>::next(move _60) -> [return: bb37, unwind: bb80]
  }
  preds [bb35]
  succs [bb37, bb80]

bb37
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/meta/literal.rs:44:19-44:20)
  1: PlaceMention(_59)
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  2: _62 = discriminant(_59)
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
      kind: switchInt(move _62) -> [0: bb39, 1: bb40, otherwise: bb38]
  }
  preds [bb36]
  succs [bb38, bb39, bb40]

bb38
  0: FakeRead(ForMatchedPlace(None), _59)
    SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:44:16-44:20)
      kind: unreachable
  }
  preds [bb37]
  succs []

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:44:5-63:6)
      kind: falseEdge -> [real: bb41, imaginary: bb40]
  }
  preds [bb37]
  succs [bb40, bb41]

bb40
  0: StorageLive(_64)
    SourceInfo(regex-automata/src/meta/literal.rs:44:9-44:12)
  1: _64 = ((_59 as Some).0: &regex_syntax::hir::Hir)
    SourceInfo(regex-automata/src/meta/literal.rs:44:9-44:12)
  2: StorageLive(_65)
    SourceInfo(regex-automata/src/meta/literal.rs:45:13-45:20)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _65 = std::vec::Vec::<u8>::new() -> [return: bb42, unwind: bb80]
  }
  preds [bb37, bb39]
  succs [bb42, bb80]

bb41
  0: _53 = const ()
    SourceInfo(regex-automata/src/meta/literal.rs:44:5-63:6)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/literal.rs:63:5-63:6)
  2: StorageDead(_59)
    SourceInfo(regex-automata/src/meta/literal.rs:63:5-63:6)
  3: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/literal.rs:63:5-63:6)
  4: StorageDead(_56)
    SourceInfo(regex-automata/src/meta/literal.rs:63:5-63:6)
  5: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/literal.rs:63:5-63:6)
  6: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/literal.rs:63:5-63:6)
  7: StorageLive(_118)
    SourceInfo(regex-automata/src/meta/literal.rs:76:5-79:6)
  8: StorageLive(_119)
    SourceInfo(regex-automata/src/meta/literal.rs:76:8-76:25)
  9: StorageLive(_120)
    SourceInfo(regex-automata/src/meta/literal.rs:76:8-76:18)
  10: StorageLive(_121)
    SourceInfo(regex-automata/src/meta/literal.rs:76:8-76:12)
  11: _121 = &_52
    SourceInfo(regex-automata/src/meta/literal.rs:76:8-76:12)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:76:8-76:18)
      kind: _120 = std::vec::Vec::<std::vec::Vec<u8>>::len(move _121) -> [return: bb70, unwind: bb80]
  }
  preds [bb39]
  succs [bb70, bb80]

bb42
  0: FakeRead(ForLet(None), _65)
    SourceInfo(regex-automata/src/meta/literal.rs:45:13-45:20)
  1: StorageLive(_66)
    SourceInfo(regex-automata/src/meta/literal.rs:46:9-61:10)
  2: StorageLive(_67)
    SourceInfo(regex-automata/src/meta/literal.rs:46:16-46:26)
  3: StorageLive(_68)
    SourceInfo(regex-automata/src/meta/literal.rs:46:16-46:19)
  4: _68 = &(*_64)
    SourceInfo(regex-automata/src/meta/literal.rs:46:16-46:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:46:16-46:26)
      kind: _67 = regex_syntax::hir::Hir::kind(move _68) -> [return: bb43, unwind: bb79]
  }
  preds [bb40]
  succs [bb43, bb79]

bb43
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/meta/literal.rs:46:25-46:26)
  1: PlaceMention((*_67))
    SourceInfo(regex-automata/src/meta/literal.rs:46:15-46:26)
  2: _69 = discriminant((*_67))
    SourceInfo(regex-automata/src/meta/literal.rs:46:15-46:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:46:9-46:26)
      kind: switchInt(move _69) -> [1: bb45, 6: bb46, otherwise: bb44]
  }
  preds [bb42]
  succs [bb44, bb45, bb46]

bb44
  0: StorageLive(_104)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  1: StorageLive(_105)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageLive(_106)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  3: StorageLive(_107)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  4: StorageLive(_108)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  5: _108 = [const "internal error: entered unreachable code: expected literal or concat, got "]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  6: _107 = &_108
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  7: _106 = &(*_107)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  8: StorageLive(_109)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  9: StorageLive(_110)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  10: StorageLive(_111)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_112)
    SourceInfo(regex-automata/src/meta/literal.rs:60:64-60:68)
  12: StorageLive(_113)
    SourceInfo(regex-automata/src/meta/literal.rs:60:71-60:74)
  13: StorageLive(_114)
    SourceInfo(regex-automata/src/meta/literal.rs:60:71-60:74)
  14: _114 = &_64
    SourceInfo(regex-automata/src/meta/literal.rs:60:71-60:74)
  15: _113 = &(*_114)
    SourceInfo(regex-automata/src/meta/literal.rs:60:71-60:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:60:64-60:68)
      kind: _112 = core::fmt::rt::Argument::<'_>::new_debug::<&regex_syntax::hir::Hir>(move _113) -> [return: bb65, unwind: bb79]
  }
  preds [bb43, bb46]
  succs [bb65, bb79]

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:47:13-47:49)
      kind: falseEdge -> [real: bb47, imaginary: bb46]
  }
  preds [bb43]
  succs [bb46, bb47]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:50:13-50:39)
      kind: falseEdge -> [real: bb49, imaginary: bb44]
  }
  preds [bb43, bb45]
  succs [bb44, bb49]

bb47
  0: StorageLive(_70)
    SourceInfo(regex-automata/src/meta/literal.rs:47:38-47:47)
  1: _70 = &((((*_67) as Literal).0: regex_syntax::hir::Literal).0: std::boxed::Box<[u8]>)
    SourceInfo(regex-automata/src/meta/literal.rs:47:38-47:47)
  2: StorageLive(_71)
    SourceInfo(regex-automata/src/meta/literal.rs:48:17-48:20)
  3: _71 = &mut _65
    SourceInfo(regex-automata/src/meta/literal.rs:48:17-48:20)
  4: StorageLive(_72)
    SourceInfo(regex-automata/src/meta/literal.rs:48:39-48:44)
  5: _72 = &(*(*_70))
    SourceInfo(regex-automata/src/meta/literal.rs:48:39-48:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:48:17-48:45)
      kind: _66 = std::vec::Vec::<u8>::extend_from_slice(move _71, move _72) -> [return: bb48, unwind: bb79]
  }
  preds [bb45]
  succs [bb48, bb79]

bb48
  0: StorageDead(_72)
    SourceInfo(regex-automata/src/meta/literal.rs:48:44-48:45)
  1: StorageDead(_71)
    SourceInfo(regex-automata/src/meta/literal.rs:48:44-48:45)
  2: StorageDead(_70)
    SourceInfo(regex-automata/src/meta/literal.rs:49:13-49:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:49:13-49:14)
      kind: goto -> bb67
  }
  preds [bb47]
  succs [bb67]

bb49
  0: StorageLive(_73)
    SourceInfo(regex-automata/src/meta/literal.rs:50:29-50:38)
  1: _73 = &(((*_67) as Concat).0: std::vec::Vec<regex_syntax::hir::Hir>)
    SourceInfo(regex-automata/src/meta/literal.rs:50:29-50:38)
  2: StorageLive(_74)
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  3: StorageLive(_75)
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  4: _75 = _73
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
      kind: _74 = <&std::vec::Vec<regex_syntax::hir::Hir> as core::iter::IntoIterator>::into_iter(move _75) -> [return: bb50, unwind: bb79]
  }
  preds [bb46]
  succs [bb50, bb79]

bb50
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/meta/literal.rs:51:30-51:31)
  1: PlaceMention(_74)
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  2: StorageLive(_76)
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  3: _76 = move _74
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:51:17-58:18)
      kind: goto -> bb51
  }
  preds [bb49]
  succs [bb51]

bb51
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:51:17-58:18)
      kind: falseUnwind -> [real: bb52, unwind: bb79]
  }
  preds [bb50, bb62]
  succs [bb52, bb79]

bb52
  0: StorageLive(_77)
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  1: StorageLive(_78)
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  2: StorageLive(_79)
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  3: StorageLive(_80)
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  4: _80 = &mut _76
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  5: _79 = &mut (*_80)
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
      kind: _78 = <core::slice::Iter<'_, regex_syntax::hir::Hir> as core::iter::Iterator>::next(move _79) -> [return: bb53, unwind: bb79]
  }
  preds [bb51]
  succs [bb53, bb79]

bb53
  0: StorageDead(_79)
    SourceInfo(regex-automata/src/meta/literal.rs:51:30-51:31)
  1: PlaceMention(_78)
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  2: _81 = discriminant(_78)
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
      kind: switchInt(move _81) -> [0: bb55, 1: bb56, otherwise: bb54]
  }
  preds [bb52]
  succs [bb54, bb55, bb56]

bb54
  0: FakeRead(ForMatchedPlace(None), _78)
    SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:51:26-51:31)
      kind: unreachable
  }
  preds [bb53]
  succs []

bb55
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:51:17-58:18)
      kind: falseEdge -> [real: bb57, imaginary: bb56]
  }
  preds [bb53]
  succs [bb56, bb57]

bb56
  0: StorageLive(_83)
    SourceInfo(regex-automata/src/meta/literal.rs:51:21-51:22)
  1: _83 = ((_78 as Some).0: &regex_syntax::hir::Hir)
    SourceInfo(regex-automata/src/meta/literal.rs:51:21-51:22)
  2: StorageLive(_84)
    SourceInfo(regex-automata/src/meta/literal.rs:52:28-52:36)
  3: StorageLive(_85)
    SourceInfo(regex-automata/src/meta/literal.rs:52:28-52:29)
  4: _85 = &(*_83)
    SourceInfo(regex-automata/src/meta/literal.rs:52:28-52:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:52:28-52:36)
      kind: _84 = regex_syntax::hir::Hir::kind(move _85) -> [return: bb58, unwind: bb79]
  }
  preds [bb53, bb55]
  succs [bb58, bb79]

bb57
  0: _66 = const ()
    SourceInfo(regex-automata/src/meta/literal.rs:51:17-58:18)
  1: StorageDead(_80)
    SourceInfo(regex-automata/src/meta/literal.rs:58:17-58:18)
  2: StorageDead(_78)
    SourceInfo(regex-automata/src/meta/literal.rs:58:17-58:18)
  3: StorageDead(_77)
    SourceInfo(regex-automata/src/meta/literal.rs:58:17-58:18)
  4: StorageDead(_76)
    SourceInfo(regex-automata/src/meta/literal.rs:58:17-58:18)
  5: StorageDead(_74)
    SourceInfo(regex-automata/src/meta/literal.rs:58:17-58:18)
  6: StorageDead(_73)
    SourceInfo(regex-automata/src/meta/literal.rs:59:13-59:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:59:13-59:14)
      kind: goto -> bb67
  }
  preds [bb55]
  succs [bb67]

bb58
  0: StorageDead(_85)
    SourceInfo(regex-automata/src/meta/literal.rs:52:35-52:36)
  1: PlaceMention((*_84))
    SourceInfo(regex-automata/src/meta/literal.rs:52:27-52:36)
  2: _86 = discriminant((*_84))
    SourceInfo(regex-automata/src/meta/literal.rs:52:27-52:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:52:21-52:36)
      kind: switchInt(move _86) -> [1: bb60, otherwise: bb59]
  }
  preds [bb56]
  succs [bb59, bb60]

bb59
  0: StorageLive(_92)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  1: StorageLive(_93)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageLive(_94)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  3: StorageLive(_95)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  4: StorageLive(_96)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  5: _96 = [const "internal error: entered unreachable code: expected literal, got "]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  6: _95 = &_96
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  7: _94 = &(*_95)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  8: StorageLive(_97)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  9: StorageLive(_98)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  10: StorageLive(_99)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_100)
    SourceInfo(regex-automata/src/meta/literal.rs:56:66-56:70)
  12: StorageLive(_101)
    SourceInfo(regex-automata/src/meta/literal.rs:56:73-56:74)
  13: StorageLive(_102)
    SourceInfo(regex-automata/src/meta/literal.rs:56:73-56:74)
  14: _102 = &_83
    SourceInfo(regex-automata/src/meta/literal.rs:56:73-56:74)
  15: _101 = &(*_102)
    SourceInfo(regex-automata/src/meta/literal.rs:56:73-56:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:56:66-56:70)
      kind: _100 = core::fmt::rt::Argument::<'_>::new_debug::<&regex_syntax::hir::Hir>(move _101) -> [return: bb63, unwind: bb79]
  }
  preds [bb58, bb60]
  succs [bb63, bb79]

bb60
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:53:25-53:61)
      kind: falseEdge -> [real: bb61, imaginary: bb59]
  }
  preds [bb58]
  succs [bb59, bb61]

bb61
  0: StorageLive(_87)
    SourceInfo(regex-automata/src/meta/literal.rs:53:50-53:59)
  1: _87 = &((((*_84) as Literal).0: regex_syntax::hir::Literal).0: std::boxed::Box<[u8]>)
    SourceInfo(regex-automata/src/meta/literal.rs:53:50-53:59)
  2: StorageLive(_88)
    SourceInfo(regex-automata/src/meta/literal.rs:54:29-54:57)
  3: StorageLive(_89)
    SourceInfo(regex-automata/src/meta/literal.rs:54:29-54:32)
  4: _89 = &mut _65
    SourceInfo(regex-automata/src/meta/literal.rs:54:29-54:32)
  5: StorageLive(_90)
    SourceInfo(regex-automata/src/meta/literal.rs:54:51-54:56)
  6: _90 = &(*(*_87))
    SourceInfo(regex-automata/src/meta/literal.rs:54:51-54:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:54:29-54:57)
      kind: _88 = std::vec::Vec::<u8>::extend_from_slice(move _89, move _90) -> [return: bb62, unwind: bb79]
  }
  preds [bb60]
  succs [bb62, bb79]

bb62
  0: StorageDead(_90)
    SourceInfo(regex-automata/src/meta/literal.rs:54:56-54:57)
  1: StorageDead(_89)
    SourceInfo(regex-automata/src/meta/literal.rs:54:56-54:57)
  2: StorageDead(_88)
    SourceInfo(regex-automata/src/meta/literal.rs:54:57-54:58)
  3: _77 = const ()
    SourceInfo(regex-automata/src/meta/literal.rs:53:65-55:26)
  4: StorageDead(_87)
    SourceInfo(regex-automata/src/meta/literal.rs:55:25-55:26)
  5: StorageDead(_84)
    SourceInfo(regex-automata/src/meta/literal.rs:58:17-58:18)
  6: StorageDead(_83)
    SourceInfo(regex-automata/src/meta/literal.rs:58:17-58:18)
  7: StorageDead(_80)
    SourceInfo(regex-automata/src/meta/literal.rs:58:17-58:18)
  8: StorageDead(_78)
    SourceInfo(regex-automata/src/meta/literal.rs:58:17-58:18)
  9: StorageDead(_77)
    SourceInfo(regex-automata/src/meta/literal.rs:58:17-58:18)
  10: _57 = const ()
    SourceInfo(regex-automata/src/meta/literal.rs:51:17-58:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:51:17-58:18)
      kind: goto -> bb51
  }
  preds [bb61]
  succs [bb51]

bb63
  0: StorageDead(_101)
    SourceInfo(regex-automata/src/meta/literal.rs:56:69-56:70)
  1: _99 = [move _100]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_100)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: _98 = &_99
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: _97 = &(*_98)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _93 = core::fmt::Arguments::<'_>::new_v1::<1, 1>(move _94, move _97) -> [return: bb64, unwind: bb79]
  }
  preds [bb59]
  succs [bb64, bb79]

bb64
  0: StorageDead(_97)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_94)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _92 = core::panicking::panic_fmt(move _93) -> bb79
  }
  preds [bb63]
  succs [bb79]

bb65
  0: StorageDead(_113)
    SourceInfo(regex-automata/src/meta/literal.rs:60:67-60:68)
  1: _111 = [move _112]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_112)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: _110 = &_111
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: _109 = &(*_110)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _105 = core::fmt::Arguments::<'_>::new_v1::<1, 1>(move _106, move _109) -> [return: bb66, unwind: bb79]
  }
  preds [bb44]
  succs [bb66, bb79]

bb66
  0: StorageDead(_109)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_106)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _104 = core::panicking::panic_fmt(move _105) -> bb79
  }
  preds [bb65]
  succs [bb79]

bb67
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/meta/literal.rs:61:9-61:10)
  1: StorageDead(_66)
    SourceInfo(regex-automata/src/meta/literal.rs:61:9-61:10)
  2: StorageLive(_115)
    SourceInfo(regex-automata/src/meta/literal.rs:62:9-62:23)
  3: StorageLive(_116)
    SourceInfo(regex-automata/src/meta/literal.rs:62:9-62:13)
  4: _116 = &mut _52
    SourceInfo(regex-automata/src/meta/literal.rs:62:9-62:13)
  5: StorageLive(_117)
    SourceInfo(regex-automata/src/meta/literal.rs:62:19-62:22)
  6: _117 = move _65
    SourceInfo(regex-automata/src/meta/literal.rs:62:19-62:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:62:9-62:23)
      kind: _115 = std::vec::Vec::<std::vec::Vec<u8>>::push(move _116, move _117) -> [return: bb68, unwind: bb78]
  }
  preds [bb48, bb57]
  succs [bb68, bb78]

bb68
  0: StorageDead(_117)
    SourceInfo(regex-automata/src/meta/literal.rs:62:22-62:23)
  1: StorageDead(_116)
    SourceInfo(regex-automata/src/meta/literal.rs:62:22-62:23)
  2: StorageDead(_115)
    SourceInfo(regex-automata/src/meta/literal.rs:62:23-62:24)
  3: _58 = const ()
    SourceInfo(regex-automata/src/meta/literal.rs:44:21-63:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:63:5-63:6)
      kind: drop(_65) -> [return: bb69, unwind: bb80]
  }
  preds [bb67]
  succs [bb69, bb80]

bb69
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/meta/literal.rs:63:5-63:6)
  1: StorageDead(_64)
    SourceInfo(regex-automata/src/meta/literal.rs:63:5-63:6)
  2: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/literal.rs:63:5-63:6)
  3: StorageDead(_59)
    SourceInfo(regex-automata/src/meta/literal.rs:63:5-63:6)
  4: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/literal.rs:63:5-63:6)
  5: _57 = const ()
    SourceInfo(regex-automata/src/meta/literal.rs:44:5-63:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:44:5-63:6)
      kind: goto -> bb35
  }
  preds [bb68]
  succs [bb35]

bb70
  0: StorageDead(_121)
    SourceInfo(regex-automata/src/meta/literal.rs:76:17-76:18)
  1: _119 = Lt(move _120, const 3000_usize)
    SourceInfo(regex-automata/src/meta/literal.rs:76:8-76:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:76:8-76:25)
      kind: switchInt(move _119) -> [0: bb72, otherwise: bb71]
  }
  preds [bb41]
  succs [bb71, bb72]

bb71
  0: StorageDead(_120)
    SourceInfo(regex-automata/src/meta/literal.rs:76:24-76:25)
  1: _0 = core::option::Option::<std::vec::Vec<std::vec::Vec<u8>>>::None
    SourceInfo(regex-automata/src/meta/literal.rs:78:16-78:20)
  2: StorageDead(_119)
    SourceInfo(regex-automata/src/meta/literal.rs:79:5-79:6)
  3: StorageDead(_118)
    SourceInfo(regex-automata/src/meta/literal.rs:79:5-79:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:81:1-81:2)
      kind: drop(_52) -> [return: bb75, unwind: bb81]
  }
  preds [bb70]
  succs [bb75, bb81]

bb72
  0: StorageDead(_120)
    SourceInfo(regex-automata/src/meta/literal.rs:76:24-76:25)
  1: _118 = const ()
    SourceInfo(regex-automata/src/meta/literal.rs:79:6-79:6)
  2: StorageDead(_119)
    SourceInfo(regex-automata/src/meta/literal.rs:79:5-79:6)
  3: StorageDead(_118)
    SourceInfo(regex-automata/src/meta/literal.rs:79:5-79:6)
  4: StorageLive(_123)
    SourceInfo(regex-automata/src/meta/literal.rs:80:10-80:14)
  5: _123 = move _52
    SourceInfo(regex-automata/src/meta/literal.rs:80:10-80:14)
  6: _0 = core::option::Option::<std::vec::Vec<std::vec::Vec<u8>>>::Some(move _123)
    SourceInfo(regex-automata/src/meta/literal.rs:80:5-80:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:80:14-80:15)
      kind: drop(_123) -> [return: bb73, unwind: bb80]
  }
  preds [bb70]
  succs [bb73, bb80]

bb73
  0: StorageDead(_123)
    SourceInfo(regex-automata/src/meta/literal.rs:80:14-80:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:81:1-81:2)
      kind: drop(_52) -> [return: bb74, unwind: bb81]
  }
  preds [bb72]
  succs [bb74, bb81]

bb74
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/literal.rs:81:1-81:2)
  1: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/literal.rs:81:1-81:2)
  2: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/literal.rs:81:1-81:2)
  3: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/literal.rs:81:1-81:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:81:2-81:2)
      kind: goto -> bb77
  }
  preds [bb73]
  succs [bb77]

bb75
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/literal.rs:81:1-81:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb71]
  succs [bb76]

bb76
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/literal.rs:81:1-81:2)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/literal.rs:81:1-81:2)
  2: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/literal.rs:81:1-81:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb30, bb75]
  succs [bb77]

bb77
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:81:2-81:2)
      kind: return
  }
  preds [bb1, bb26, bb74, bb76]
  succs []

bb78
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:62:22-62:23)
      kind: drop(_117) -> [return: bb79, unwind terminate(cleanup)]
  }
  preds [bb67]
  succs [bb79]

bb79
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:63:5-63:6)
      kind: drop(_65) -> [return: bb80, unwind terminate(cleanup)]
  }
  preds [bb42, bb44, bb47, bb49, bb51, bb52, bb56, bb59, bb61, bb63, bb64, bb65, bb66, bb78]
  succs [bb80]

bb80
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:81:1-81:2)
      kind: drop(_52) -> [return: bb81, unwind terminate(cleanup)]
  }
  preds [bb33, bb35, bb36, bb40, bb41, bb68, bb72, bb79]
  succs [bb81]

bb81
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/literal.rs:15:1-81:2)
      kind: resume
  }
  preds [bb2, bb5, bb6, bb7, bb8, bb10, bb12, bb13, bb16, bb17, bb18, bb20, bb22, bb23, bb27, bb28, bb32, bb71, bb73, bb80]
  succs []

