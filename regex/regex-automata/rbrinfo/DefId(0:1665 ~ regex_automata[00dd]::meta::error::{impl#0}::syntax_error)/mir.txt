bb0
  0: PlaceMention(((*_1).0: meta::error::BuildErrorKind))
    SourceInfo(regex-automata/src/meta/error.rs:75:15-75:24)
  1: _2 = discriminant(((*_1).0: meta::error::BuildErrorKind))
    SourceInfo(regex-automata/src/meta/error.rs:75:15-75:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:75:9-75:24)
      kind: switchInt(move _2) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _0 = core::option::Option::<&regex_syntax::Error>::None
    SourceInfo(regex-automata/src/meta/error.rs:77:18-77:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:77:18-77:22)
      kind: goto -> bb4
  }
  preds [bb0, bb2]
  succs [bb4]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:76:13-76:51)
      kind: falseEdge -> [real: bb3, imaginary: bb1]
  }
  preds [bb0]
  succs [bb1, bb3]

bb3
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/error.rs:76:38-76:45)
  1: _3 = &((((*_1).0: meta::error::BuildErrorKind) as Syntax).1: regex_syntax::Error)
    SourceInfo(regex-automata/src/meta/error.rs:76:38-76:45)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/error.rs:76:60-76:63)
  3: _4 = &(*_3)
    SourceInfo(regex-automata/src/meta/error.rs:76:60-76:63)
  4: _0 = core::option::Option::<&regex_syntax::Error>::Some(move _4)
    SourceInfo(regex-automata/src/meta/error.rs:76:55-76:64)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/error.rs:76:63-76:64)
  6: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/error.rs:76:63-76:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:76:63-76:64)
      kind: goto -> bb4
  }
  preds [bb2]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:79:6-79:6)
      kind: return
  }
  preds [bb1, bb3]
  succs []

