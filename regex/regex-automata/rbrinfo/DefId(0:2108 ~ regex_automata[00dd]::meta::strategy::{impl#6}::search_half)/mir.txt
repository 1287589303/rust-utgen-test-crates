bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1031:9-1033:10)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1031:12-1031:46)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1031:12-1031:32)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1031:12-1031:32)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1031:12-1031:17)
  5: _8 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1031:12-1031:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1031:12-1031:32)
      kind: _7 = util::search::Input::<'_>::get_anchored(move _8) -> [return: bb1, unwind: bb20]
  }
  preds []
  succs [bb1, bb20]

bb1
  0: _6 = &_7
    SourceInfo(regex-automata/src/meta/strategy.rs:1031:12-1031:32)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:1031:31-1031:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1031:12-1031:46)
      kind: _5 = util::search::Anchored::is_anchored(move _6) -> [return: bb2, unwind: bb20]
  }
  preds [bb0]
  succs [bb2, bb20]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1031:12-1031:46)
      kind: switchInt(move _5) -> [0: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1031:45-1031:46)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1031:45-1031:46)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1032:20-1032:29)
  3: _10 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1032:20-1032:29)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1032:42-1032:47)
  5: _11 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1032:42-1032:47)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1032:49-1032:54)
  7: _12 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1032:49-1032:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1032:20-1032:55)
      kind: _0 = <meta::strategy::Core as meta::strategy::Strategy>::search_half(move _10, move _11, move _12) -> [return: bb4, unwind: bb20]
  }
  preds [bb2]
  succs [bb4, bb20]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1032:54-1032:55)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1032:54-1032:55)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1032:54-1032:55)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1033:9-1033:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1033:9-1033:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1050:6-1050:6)
      kind: goto -> bb19
  }
  preds [bb3]
  succs [bb19]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1031:45-1031:46)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1031:45-1031:46)
  2: _4 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1033:10-1033:10)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1033:9-1033:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1033:9-1033:10)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1034:15-1034:62)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1034:15-1034:19)
  7: _14 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:1034:15-1034:19)
  8: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1034:49-1034:54)
  9: _15 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1034:49-1034:54)
  10: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1034:56-1034:61)
  11: _16 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1034:56-1034:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1034:15-1034:62)
      kind: _13 = meta::strategy::ReverseAnchored::try_search_half_anchored_rev(move _14, move _15, move _16) -> [return: bb6, unwind: bb20]
  }
  preds [bb2]
  succs [bb6, bb20]

bb6
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:1034:61-1034:62)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1034:61-1034:62)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1034:61-1034:62)
  3: PlaceMention(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1034:15-1034:62)
  4: _18 = discriminant(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1034:15-1034:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1034:9-1034:62)
      kind: switchInt(move _18) -> [0: bb9, 1: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1034:15-1034:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1034:15-1034:62)
      kind: unreachable
  }
  preds [bb6, bb9]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1035:13-1035:22)
      kind: falseEdge -> [real: bb12, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb12]

bb9
  0: _17 = discriminant(((_13 as Ok).0: core::option::Option<util::search::HalfMatch>))
    SourceInfo(regex-automata/src/meta/strategy.rs:1034:15-1034:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1034:9-1034:62)
      kind: switchInt(move _17) -> [0: bb10, 1: bb11, otherwise: bb7]
  }
  preds [bb6, bb8]
  succs [bb7, bb10, bb11]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1039:13-1039:21)
      kind: falseEdge -> [real: bb14, imaginary: bb11]
  }
  preds [bb9]
  succs [bb11, bb14]

bb11
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1040:21-1040:23)
  1: _23 = ((((_13 as Ok).0: core::option::Option<util::search::HalfMatch>) as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/meta/strategy.rs:1040:21-1040:23)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1047:22-1047:63)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1047:37-1047:49)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1047:37-1047:39)
  5: _26 = &_23
    SourceInfo(regex-automata/src/meta/strategy.rs:1047:37-1047:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1047:37-1047:49)
      kind: _25 = util::search::HalfMatch::pattern(move _26) -> [return: bb15, unwind: bb20]
  }
  preds [bb9, bb10]
  succs [bb15, bb20]

bb12
  0: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:1035:17-1035:21)
  1: _19 = move ((_13 as Err).0: meta::error::RetryFailError)
    SourceInfo(regex-automata/src/meta/strategy.rs:1035:17-1035:21)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1037:17-1037:26)
  3: _20 = &((*_1).0: meta::strategy::Core)
    SourceInfo(regex-automata/src/meta/strategy.rs:1037:17-1037:26)
  4: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1037:46-1037:51)
  5: _21 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1037:46-1037:51)
  6: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1037:53-1037:58)
  7: _22 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1037:53-1037:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1037:17-1037:59)
      kind: _0 = meta::strategy::Core::search_half_nofail(move _20, move _21, move _22) -> [return: bb13, unwind: bb20]
  }
  preds [bb8]
  succs [bb13, bb20]

bb13
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1037:58-1037:59)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1037:58-1037:59)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1037:58-1037:59)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:1038:13-1038:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1038:13-1038:14)
      kind: goto -> bb18
  }
  preds [bb12]
  succs [bb18]

bb14
  0: _0 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/meta/strategy.rs:1039:25-1039:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1039:25-1039:29)
      kind: goto -> bb18
  }
  preds [bb10]
  succs [bb18]

bb15
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1047:48-1047:49)
  1: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1047:51-1047:62)
  2: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1047:51-1047:56)
  3: _28 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1047:51-1047:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1047:51-1047:62)
      kind: _27 = util::search::Input::<'_>::end(move _28) -> [return: bb16, unwind: bb20]
  }
  preds [bb11]
  succs [bb16, bb20]

bb16
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1047:61-1047:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1047:22-1047:63)
      kind: _24 = util::search::HalfMatch::new(move _25, move _27) -> [return: bb17, unwind: bb20]
  }
  preds [bb15]
  succs [bb17, bb20]

bb17
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1047:62-1047:63)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1047:62-1047:63)
  2: _0 = core::option::Option::<util::search::HalfMatch>::Some(move _24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1047:17-1047:64)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1047:63-1047:64)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1048:13-1048:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1048:13-1048:14)
      kind: goto -> bb18
  }
  preds [bb16]
  succs [bb18]

bb18
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1050:5-1050:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1050:6-1050:6)
      kind: goto -> bb19
  }
  preds [bb13, bb14, bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1050:6-1050:6)
      kind: return
  }
  preds [bb4, bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1026:5-1050:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb11, bb12, bb15, bb16]
  succs []

