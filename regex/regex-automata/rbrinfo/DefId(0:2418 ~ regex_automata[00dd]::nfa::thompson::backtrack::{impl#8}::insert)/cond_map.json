{
  "regex-automata/src/nfa/thompson/backtrack.rs:1823:19:1823:52": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "table_index % Visited::BLOCK_SIZE",
          "lhs": "table_index",
          "rhs": "Visited::BLOCK_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1824:30:1824:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "1 << bit",
          "lhs": "1",
          "rhs": "bit",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1825:12:1825:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.bitset[block_index] & block_with_bit",
          "lhs": "self.bitset[block_index]",
          "rhs": "block_with_bit",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1821:27:1821:60": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "sid.as_usize() * self.stride + at",
          "lhs": "sid.as_usize() * self.stride",
          "rhs": "at",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1822:27:1822:60": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "table_index / Visited::BLOCK_SIZE",
          "lhs": "table_index",
          "rhs": "Visited::BLOCK_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1825:12:1825:58": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "self.bitset[block_index] & block_with_bit != 0",
          "lhs": "self.bitset[block_index] & block_with_bit",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/backtrack.rs:1821:27:1821:55": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "sid.as_usize() * self.stride",
          "lhs": "sid.as_usize()",
          "rhs": "self.stride",
          "cmp_with_int": false
        }
      }
    }
  ]
}