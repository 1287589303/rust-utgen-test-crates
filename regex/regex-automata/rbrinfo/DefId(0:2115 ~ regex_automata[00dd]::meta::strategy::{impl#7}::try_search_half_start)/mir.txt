bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1216:13-1216:21)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1216:24-1216:29)
  2: _5 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1216:24-1216:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1216:24-1216:40)
      kind: _4 = util::search::Input::<'_>::get_span(move _5) -> [return: bb1, unwind: bb32]
  }
  preds []
  succs [bb1, bb32]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:1216:39-1216:40)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1216:13-1216:21)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1217:13-1217:26)
  3: _6 = const 0_usize
    SourceInfo(regex-automata/src/meta/strategy.rs:1217:29-1217:30)
  4: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1217:13-1217:26)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1218:9-1240:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1218:9-1240:10)
      kind: goto -> bb2
  }
  preds [bb0]
  succs [bb2]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1218:9-1240:10)
      kind: falseUnwind -> [real: bb3, unwind: bb32]
  }
  preds [bb1, bb28]
  succs [bb3, bb32]

bb3
  0: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:17-1219:25)
  1: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:34-1219:71)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:34-1219:42)
  3: _11 = &((*_1).1: util::prefilter::Prefilter)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:34-1219:42)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:48-1219:64)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:48-1219:64)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:48-1219:53)
  7: _14 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:48-1219:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1219:48-1219:64)
      kind: _13 = util::search::Input::<'_>::haystack(move _14) -> [return: bb4, unwind: bb32]
  }
  preds [bb2]
  succs [bb4, bb32]

bb4
  0: _12 = &(*_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:48-1219:64)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:63-1219:64)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:66-1219:70)
  3: _15 = _4
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:66-1219:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1219:34-1219:71)
      kind: _10 = util::prefilter::Prefilter::find(move _11, move _12, move _15) -> [return: bb5, unwind: bb32]
  }
  preds [bb3]
  succs [bb5, bb32]

bb5
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:70-1219:71)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:70-1219:71)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:70-1219:71)
  3: PlaceMention(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:34-1219:71)
  4: _16 = discriminant(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:34-1219:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1219:28-1219:71)
      kind: switchInt(move _16) -> [0: bb7, 1: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:34-1219:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1219:34-1219:71)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1220:17-1220:21)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:1221:22-1221:26)
  1: _19 = ((_10 as Some).0: util::search::Span)
    SourceInfo(regex-automata/src/meta/strategy.rs:1221:22-1221:26)
  2: _9 = _19
    SourceInfo(regex-automata/src/meta/strategy.rs:1221:31-1221:35)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:1221:34-1221:35)
  4: FakeRead(ForLet(None), _9)
    SourceInfo(regex-automata/src/meta/strategy.rs:1219:17-1219:25)
  5: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1222:14-1222:15)
  6: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1222:14-1222:15)
  7: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1224:17-1224:25)
  8: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1224:28-1226:41)
  9: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1224:28-1225:25)
  10: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1224:28-1224:33)
  11: _23 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1224:28-1224:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1224:28-1225:25)
      kind: _22 = <util::search::Input<'_> as core::clone::Clone>::clone(move _23) -> [return: bb10, unwind: bb32]
  }
  preds [bb5, bb7]
  succs [bb10, bb32]

bb9
  0: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:1220:35-1220:39)
  1: _18 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/meta/strategy.rs:1220:35-1220:39)
  2: _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, meta::error::RetryError>::Ok(move _18)
    SourceInfo(regex-automata/src/meta/strategy.rs:1220:32-1220:40)
  3: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:1220:39-1220:40)
  4: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:1222:14-1222:15)
  5: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:1222:14-1222:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb30
  }
  preds [bb7]
  succs [bb30]

bb10
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:1225:24-1225:25)
  1: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1226:27-1226:40)
  2: _24 = util::search::Anchored::Yes
    SourceInfo(regex-automata/src/meta/strategy.rs:1226:27-1226:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1224:28-1226:41)
      kind: _21 = util::search::Input::<'_>::anchored(move _22, move _24) -> [return: bb11, unwind: bb32]
  }
  preds [bb8]
  succs [bb11, bb32]

bb11
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:1226:40-1226:41)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:1226:40-1226:41)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1227:23-1227:50)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1227:23-1227:36)
  4: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1227:23-1227:28)
  5: _27 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:1227:23-1227:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1227:23-1227:36)
      kind: _26 = util::search::Input::<'_>::start(move _27) -> [return: bb12, unwind: bb32]
  }
  preds [bb10]
  succs [bb12, bb32]

bb12
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:1227:35-1227:36)
  1: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1227:38-1227:50)
  2: _28 = (_9.1: usize)
    SourceInfo(regex-automata/src/meta/strategy.rs:1227:38-1227:50)
  3: _25 = core::ops::Range::<usize> { start: move _26, end: move _28 }
    SourceInfo(regex-automata/src/meta/strategy.rs:1227:23-1227:50)
  4: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:1227:49-1227:50)
  5: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:1227:49-1227:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1224:28-1227:51)
      kind: _20 = util::search::Input::<'_>::span::<core::ops::Range<usize>>(move _21, move _25) -> [return: bb13, unwind: bb32]
  }
  preds [bb11]
  succs [bb13, bb32]

bb13
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:1227:50-1227:51)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:1227:50-1227:51)
  2: FakeRead(ForLet(None), _20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1224:17-1224:25)
  3: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:13-1238:14)
  4: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
  6: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:74)
  7: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1228:23)
  8: _33 = &(*_1)
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1228:23)
  9: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:46-1229:51)
  10: _34 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:46-1229:51)
  11: StorageLive(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:53-1229:62)
  12: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:53-1229:62)
  13: _36 = &_20
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:53-1229:62)
  14: _35 = &(*_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:53-1229:62)
  15: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:64-1229:73)
  16: _37 = _6
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:64-1229:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:74)
      kind: _32 = meta::strategy::ReverseSuffix::try_search_half_rev_limited(move _33, move _34, move _35, move _37) -> [return: bb14, unwind: bb32]
  }
  preds [bb12]
  succs [bb14, bb32]

bb14
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:73-1229:74)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:73-1229:74)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:73-1229:74)
  3: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:73-1229:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
      kind: _31 = <core::result::Result<core::option::Option<util::search::HalfMatch>, meta::error::RetryError> as core::ops::Try>::branch(move _32) -> [return: bb15, unwind: bb32]
  }
  preds [bb13]
  succs [bb15, bb32]

bb15
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:74-1229:75)
  1: PlaceMention(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
  2: _38 = discriminant(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
      kind: switchInt(move _38) -> [0: bb18, 1: bb17, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb17, bb18]

bb16
  0: FakeRead(ForMatchedPlace(None), _31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
      kind: unreachable
  }
  preds [bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1229:74-1229:75)
      kind: falseEdge -> [real: bb19, imaginary: bb18]
  }
  preds [bb15]
  succs [bb18, bb19]

bb18
  0: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
  1: _42 = ((_31 as Continue).0: core::option::Option<util::search::HalfMatch>)
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
  2: _30 = _42
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
  3: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:74-1229:75)
  4: PlaceMention(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
  5: _43 = discriminant(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1228:13-1229:75)
      kind: switchInt(move _43) -> [0: bb22, 1: bb23, otherwise: bb21]
  }
  preds [bb15, bb17]
  succs [bb21, bb22, bb23]

bb19
  0: StorageLive(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:74-1229:75)
  1: _39 = move ((_31 as Break).0: core::result::Result<core::convert::Infallible, meta::error::RetryError>)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:74-1229:75)
  2: StorageLive(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:74-1229:75)
  3: _41 = move _39
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:74-1229:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
      kind: _0 = <core::result::Result<core::option::Option<util::search::HalfMatch>, meta::error::RetryError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, meta::error::RetryError>>>::from_residual(move _41) -> [return: bb20, unwind: bb32]
  }
  preds [bb17]
  succs [bb20, bb32]

bb20
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:74-1229:75)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/strategy.rs:1229:74-1229:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb29
  }
  preds [bb19]
  succs [bb29]

bb21
  0: FakeRead(ForMatchedPlace(None), _30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1228:19-1229:75)
      kind: unreachable
  }
  preds [bb18]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1231:17-1231:21)
      kind: falseEdge -> [real: bb24, imaginary: bb23]
  }
  preds [bb18]
  succs [bb23, bb24]

bb23
  0: StorageLive(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:1237:22-1237:24)
  1: _52 = ((_30 as Some).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/meta/strategy.rs:1237:22-1237:24)
  2: StorageLive(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:1237:39-1237:47)
  3: StorageLive(_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1237:44-1237:46)
  4: _55 = _52
    SourceInfo(regex-automata/src/meta/strategy.rs:1237:44-1237:46)
  5: _54 = core::option::Option::<util::search::HalfMatch>::Some(move _55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1237:39-1237:47)
  6: StorageDead(_55)
    SourceInfo(regex-automata/src/meta/strategy.rs:1237:46-1237:47)
  7: _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, meta::error::RetryError>::Ok(move _54)
    SourceInfo(regex-automata/src/meta/strategy.rs:1237:36-1237:48)
  8: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/strategy.rs:1237:47-1237:48)
  9: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/strategy.rs:1237:47-1237:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb29
  }
  preds [bb18, bb22]
  succs [bb29]

bb24
  0: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1232:21-1234:22)
  1: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1232:24-1232:46)
  2: StorageLive(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:1232:24-1232:34)
  3: _46 = (_4.0: usize)
    SourceInfo(regex-automata/src/meta/strategy.rs:1232:24-1232:34)
  4: StorageLive(_47)
    SourceInfo(regex-automata/src/meta/strategy.rs:1232:38-1232:46)
  5: _47 = (_4.1: usize)
    SourceInfo(regex-automata/src/meta/strategy.rs:1232:38-1232:46)
  6: _45 = Ge(move _46, move _47)
    SourceInfo(regex-automata/src/meta/strategy.rs:1232:24-1232:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1232:24-1232:46)
      kind: switchInt(move _45) -> [0: bb26, otherwise: bb25]
  }
  preds [bb22]
  succs [bb25, bb26]

bb25
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/strategy.rs:1232:45-1232:46)
  1: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:1232:45-1232:46)
  2: _7 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1233:25-1233:30)
  3: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1234:21-1234:22)
  4: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1234:21-1234:22)
  5: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1238:13-1238:14)
  6: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1238:13-1238:14)
  7: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1238:13-1238:14)
  8: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1238:13-1238:14)
  9: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1240:9-1240:10)
  10: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:1240:9-1240:10)
  11: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1240:9-1240:10)
  12: StorageLive(_57)
    SourceInfo(regex-automata/src/meta/strategy.rs:1241:12-1241:16)
  13: _57 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/meta/strategy.rs:1241:12-1241:16)
  14: _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, meta::error::RetryError>::Ok(move _57)
    SourceInfo(regex-automata/src/meta/strategy.rs:1241:9-1241:17)
  15: StorageDead(_57)
    SourceInfo(regex-automata/src/meta/strategy.rs:1241:16-1241:17)
  16: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1242:5-1242:6)
  17: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1242:5-1242:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1242:6-1242:6)
      kind: goto -> bb31
  }
  preds [bb24]
  succs [bb31]

bb26
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/strategy.rs:1232:45-1232:46)
  1: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/strategy.rs:1232:45-1232:46)
  2: _44 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1234:22-1234:22)
  3: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/strategy.rs:1234:21-1234:22)
  4: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/strategy.rs:1234:21-1234:22)
  5: StorageLive(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:1235:34-1235:72)
  6: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1235:34-1235:63)
  7: StorageLive(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1235:34-1235:48)
  8: _51 = (_9.0: usize)
    SourceInfo(regex-automata/src/meta/strategy.rs:1235:34-1235:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1235:34-1235:63)
      kind: _50 = core::num::<impl usize>::checked_add(move _51, const 1_usize) -> [return: bb27, unwind: bb32]
  }
  preds [bb24]
  succs [bb27, bb32]

bb27
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/meta/strategy.rs:1235:62-1235:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1235:34-1235:72)
      kind: _49 = core::option::Option::<usize>::unwrap(move _50) -> [return: bb28, unwind: bb32]
  }
  preds [bb26]
  succs [bb28, bb32]

bb28
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/strategy.rs:1235:71-1235:72)
  1: (_4.0: usize) = move _49
    SourceInfo(regex-automata/src/meta/strategy.rs:1235:21-1235:72)
  2: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/strategy.rs:1235:71-1235:72)
  3: _29 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1231:25-1236:18)
  4: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1238:13-1238:14)
  5: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1238:13-1238:14)
  6: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1238:13-1238:14)
  7: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1238:13-1238:14)
  8: StorageLive(_56)
    SourceInfo(regex-automata/src/meta/strategy.rs:1239:25-1239:37)
  9: _56 = (_9.1: usize)
    SourceInfo(regex-automata/src/meta/strategy.rs:1239:25-1239:37)
  10: _6 = move _56
    SourceInfo(regex-automata/src/meta/strategy.rs:1239:13-1239:37)
  11: StorageDead(_56)
    SourceInfo(regex-automata/src/meta/strategy.rs:1239:36-1239:37)
  12: _8 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:1218:14-1240:10)
  13: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1240:9-1240:10)
  14: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:1240:9-1240:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1218:9-1240:10)
      kind: goto -> bb2
  }
  preds [bb27]
  succs [bb2]

bb29
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/strategy.rs:1238:13-1238:14)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/strategy.rs:1238:13-1238:14)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/strategy.rs:1238:13-1238:14)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:1238:13-1238:14)
  4: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:1240:9-1240:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb30
  }
  preds [bb20, bb23]
  succs [bb30]

bb30
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:1240:9-1240:10)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:1240:9-1240:10)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:1242:5-1242:6)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:1242:5-1242:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1242:6-1242:6)
      kind: goto -> bb31
  }
  preds [bb9, bb29]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1242:6-1242:6)
      kind: return
  }
  preds [bb25, bb30]
  succs []

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:1211:5-1242:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb8, bb10, bb11, bb12, bb13, bb14, bb19, bb26, bb27]
  succs []

