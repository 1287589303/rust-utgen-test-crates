bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/wire.rs:625:5-627:6)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/wire.rs:625:8-625:35)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/wire.rs:625:8-625:19)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/wire.rs:625:8-625:13)
  4: _6 = &(*_1)
    SourceInfo(regex-automata/src/util/wire.rs:625:8-625:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:625:8-625:19)
      kind: _5 = core::slice::<impl [u8]>::len(move _6) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/wire.rs:625:18-625:19)
  1: _4 = Lt(move _5, const util::primitives::StateID::SIZE)
    SourceInfo(regex-automata/src/util/wire.rs:625:8-625:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:625:8-625:35)
      kind: switchInt(move _4) -> [0: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/wire.rs:625:34-625:35)
  1: StorageLive(_8)
    SourceInfo(regex-automata/src/util/wire.rs:626:20-626:60)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/util/wire.rs:626:55-626:59)
  3: _9 = _2
    SourceInfo(regex-automata/src/util/wire.rs:626:55-626:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:626:20-626:60)
      kind: _8 = util::wire::DeserializeError::buffer_too_small(move _9) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/wire.rs:626:59-626:60)
  1: _0 = core::result::Result::<(util::primitives::StateID, usize), util::wire::DeserializeError>::Err(move _8)
    SourceInfo(regex-automata/src/util/wire.rs:626:16-626:61)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/util/wire.rs:626:60-626:61)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/util/wire.rs:627:5-627:6)
  4: StorageDead(_3)
    SourceInfo(regex-automata/src/util/wire.rs:627:5-627:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:629:2-629:2)
      kind: goto -> bb6
  }
  preds [bb2]
  succs [bb6]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/wire.rs:625:34-625:35)
  1: _3 = const ()
    SourceInfo(regex-automata/src/util/wire.rs:627:6-627:6)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/wire.rs:627:5-627:6)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/util/wire.rs:627:5-627:6)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/util/wire.rs:628:19-628:24)
  5: _10 = &(*_1)
    SourceInfo(regex-automata/src/util/wire.rs:628:19-628:24)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/util/wire.rs:628:26-628:30)
  7: _11 = _2
    SourceInfo(regex-automata/src/util/wire.rs:628:26-628:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:628:5-628:31)
      kind: _0 = util::wire::read_state_id(move _10, move _11) -> [return: bb5, unwind: bb7]
  }
  preds [bb1]
  succs [bb5, bb7]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/util/wire.rs:628:30-628:31)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/util/wire.rs:628:30-628:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:629:2-629:2)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:629:2-629:2)
      kind: return
  }
  preds [bb3, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/wire.rs:621:1-629:2)
      kind: resume
  }
  preds [bb0, bb2, bb4]
  succs []

