bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1356:9-1378:10)
  1: PlaceMention(_2)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1356:15-1356:20)
  2: _4 = discriminant(_2)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1356:15-1356:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1356:9-1356:20)
      kind: switchInt(move _4) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb7, 5: bb7, 6: bb6, 7: bb7, 8: bb7, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb7, bb7, bb7]

bb1
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1356:15-1356:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1356:15-1356:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1357:13-1357:43)
      kind: falseEdge -> [real: bb8, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb8]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1360:13-1360:38)
      kind: falseEdge -> [real: bb10, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb10]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1365:13-1365:32)
      kind: falseEdge -> [real: bb21, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb21]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1366:13-1366:37)
      kind: falseEdge -> [real: bb22, imaginary: bb6]
  }
  preds [bb0, bb4]
  succs [bb6, bb22]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1371:13-1371:34)
      kind: falseEdge -> [real: bb25, imaginary: bb7]
  }
  preds [bb0, bb5]
  succs [bb7, bb25]

bb7
  0: _3 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1377:38-1377:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1377:38-1377:40)
      kind: goto -> bb26
  }
  preds [bb0, bb0, bb0, bb0, bb6]
  succs [bb26]

bb8
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1357:32-1357:41)
  1: _5 = &((_2 as ByteRange).0: nfa::thompson::nfa::Transition)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1357:32-1357:41)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1358:17-1358:70)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1358:17-1358:36)
  4: _7 = &mut ((*_1).5: util::alphabet::ByteClassSet)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1358:17-1358:36)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1358:47-1358:58)
  6: _8 = ((*_5).0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1358:47-1358:58)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1358:60-1358:69)
  8: _9 = ((*_5).1: u8)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1358:60-1358:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1358:17-1358:70)
      kind: _6 = util::alphabet::ByteClassSet::set_range(move _7, move _8, move _9) -> [return: bb9, unwind: bb35]
  }
  preds [bb2]
  succs [bb9, bb35]

bb9
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1358:69-1358:70)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1358:69-1358:70)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1358:69-1358:70)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1358:70-1358:71)
  4: _3 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1357:47-1359:14)
  5: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1359:13-1359:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1359:13-1359:14)
      kind: goto -> bb26
  }
  preds [bb8]
  succs [bb26]

bb10
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1360:27-1360:37)
  1: _10 = &((_2 as Sparse).0: nfa::thompson::nfa::SparseTransitions)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1360:27-1360:37)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:48)
  5: _13 = &(*((*_10).0: std::boxed::Box<[nfa::thompson::nfa::Transition]>))
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
      kind: _12 = core::slice::<impl [nfa::thompson::nfa::Transition]>::iter(move _13) -> [return: bb11, unwind: bb35]
  }
  preds [bb3]
  succs [bb11, bb35]

bb11
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:54-1361:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
      kind: _11 = <core::slice::Iter<'_, nfa::thompson::nfa::Transition> as core::iter::IntoIterator>::into_iter(move _12) -> [return: bb12, unwind: bb35]
  }
  preds [bb10]
  succs [bb12, bb35]

bb12
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:54-1361:55)
  1: PlaceMention(_11)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
  3: _14 = move _11
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:17-1363:18)
      kind: goto -> bb13
  }
  preds [bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:17-1363:18)
      kind: falseUnwind -> [real: bb14, unwind: bb35]
  }
  preds [bb12, bb20]
  succs [bb14, bb35]

bb14
  0: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
  1: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
  3: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
  4: _19 = &mut _14
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
  5: _18 = &mut (*_19)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
      kind: _17 = <core::slice::Iter<'_, nfa::thompson::nfa::Transition> as core::iter::Iterator>::next(move _18) -> [return: bb15, unwind: bb35]
  }
  preds [bb13]
  succs [bb15, bb35]

bb15
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:54-1361:55)
  1: PlaceMention(_17)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
  2: _20 = discriminant(_17)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
      kind: switchInt(move _20) -> [0: bb17, 1: bb18, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb17, bb18]

bb16
  0: FakeRead(ForMatchedPlace(None), _17)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:30-1361:55)
      kind: unreachable
  }
  preds [bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:17-1363:18)
      kind: falseEdge -> [real: bb19, imaginary: bb18]
  }
  preds [bb15]
  succs [bb18, bb19]

bb18
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:21-1361:26)
  1: _22 = ((_17 as Some).0: &nfa::thompson::nfa::Transition)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:21-1361:26)
  2: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1362:21-1362:74)
  3: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1362:21-1362:40)
  4: _24 = &mut ((*_1).5: util::alphabet::ByteClassSet)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1362:21-1362:40)
  5: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1362:51-1362:62)
  6: _25 = ((*_22).0: u8)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1362:51-1362:62)
  7: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1362:64-1362:73)
  8: _26 = ((*_22).1: u8)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1362:64-1362:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1362:21-1362:74)
      kind: _23 = util::alphabet::ByteClassSet::set_range(move _24, move _25, move _26) -> [return: bb20, unwind: bb35]
  }
  preds [bb15, bb17]
  succs [bb20, bb35]

bb19
  0: _3 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:17-1363:18)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1363:17-1363:18)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1363:17-1363:18)
  3: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1363:17-1363:18)
  4: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1363:17-1363:18)
  5: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1363:17-1363:18)
  6: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1364:13-1364:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1364:13-1364:14)
      kind: goto -> bb26
  }
  preds [bb17]
  succs [bb26]

bb20
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1362:73-1362:74)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1362:73-1362:74)
  2: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1362:73-1362:74)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1362:74-1362:75)
  4: _16 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:56-1363:18)
  5: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1363:17-1363:18)
  6: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1363:17-1363:18)
  7: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1363:17-1363:18)
  8: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1363:17-1363:18)
  9: _15 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:17-1363:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1361:17-1363:18)
      kind: goto -> bb13
  }
  preds [bb18]
  succs [bb13]

bb21
  0: StorageLive(_27)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:137:9-137:77)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:137:9-137:77)
      kind: _27 = core::panicking::panic(const "internal error: entered unreachable code") -> bb35
  }
  preds [bb4]
  succs [bb35]

bb22
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1366:27-1366:31)
  1: _28 = ((_2 as Look).0: util::look::Look)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1366:27-1366:31)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1367:17-1368:68)
  3: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1367:17-1367:34)
  4: _30 = &((*_1).11: util::look::LookMatcher)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1367:17-1367:34)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1368:37-1368:41)
  6: _31 = _28
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1368:37-1368:41)
  7: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1368:43-1368:67)
  8: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1368:43-1368:67)
  9: _33 = &mut ((*_1).5: util::alphabet::ByteClassSet)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1368:43-1368:67)
  10: _32 = &mut (*_33)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1368:43-1368:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1367:17-1368:68)
      kind: _29 = util::look::LookMatcher::add_to_byteset(move _30, move _31, move _32) -> [return: bb23, unwind: bb35]
  }
  preds [bb5]
  succs [bb23, bb35]

bb23
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1368:67-1368:68)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1368:67-1368:68)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1368:67-1368:68)
  3: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1368:68-1368:69)
  4: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1368:68-1368:69)
  5: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1369:37-1369:67)
  6: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1369:37-1369:54)
  7: _35 = ((*_1).12: util::look::LookSet)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1369:37-1369:54)
  8: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1369:62-1369:66)
  9: _36 = _28
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1369:62-1369:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1369:37-1369:67)
      kind: _34 = util::look::LookSet::insert(move _35, move _36) -> [return: bb24, unwind: bb35]
  }
  preds [bb22]
  succs [bb24, bb35]

bb24
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1369:66-1369:67)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1369:66-1369:67)
  2: ((*_1).12: util::look::LookSet) = move _34
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1369:17-1369:67)
  3: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1369:66-1369:67)
  4: _3 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1366:41-1370:14)
  5: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1370:13-1370:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1370:13-1370:14)
      kind: goto -> bb26
  }
  preds [bb23]
  succs [bb26]

bb25
  0: ((*_1).7: bool) = const true
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1372:17-1372:40)
  1: _3 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1371:38-1373:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1371:38-1373:14)
      kind: goto -> bb26
  }
  preds [bb6]
  succs [bb26]

bb26
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1378:9-1378:10)
  1: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1380:13-1380:15)
  2: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1380:18-1380:49)
  3: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1380:31-1380:48)
  4: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1380:31-1380:42)
  5: _40 = &((*_1).0: std::vec::Vec<nfa::thompson::nfa::State>)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1380:31-1380:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1380:31-1380:48)
      kind: _39 = std::vec::Vec::<nfa::thompson::nfa::State>::len(move _40) -> [return: bb27, unwind: bb35]
  }
  preds [bb7, bb9, bb19, bb24, bb25]
  succs [bb27, bb35]

bb27
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1380:47-1380:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1380:18-1380:49)
      kind: _38 = util::primitives::StateID::new(move _39) -> [return: bb28, unwind: bb35]
  }
  preds [bb26]
  succs [bb28, bb35]

bb28
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1380:48-1380:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1380:18-1380:58)
      kind: _37 = core::result::Result::<util::primitives::StateID, util::primitives::StateIDError>::unwrap(move _38) -> [return: bb29, unwind: bb35]
  }
  preds [bb27]
  succs [bb29, bb35]

bb29
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1380:57-1380:58)
  1: FakeRead(ForLet(None), _37)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1380:13-1380:15)
  2: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1381:30-1381:50)
  3: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1381:30-1381:35)
  4: _42 = &_2
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1381:30-1381:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1381:30-1381:50)
      kind: _41 = nfa::thompson::nfa::State::memory_usage(move _42) -> [return: bb30, unwind: bb35]
  }
  preds [bb28]
  succs [bb30, bb35]

bb30
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1381:49-1381:50)
  1: _43 = AddWithOverflow(((*_1).14: usize), _41)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1381:9-1381:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1381:9-1381:50)
      kind: assert(!move (_43.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).14: usize), move _41) -> [success: bb31, unwind: bb35]
  }
  preds [bb29]
  succs [bb31, bb35]

bb31
  0: ((*_1).14: usize) = move (_43.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1381:9-1381:50)
  1: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1381:49-1381:50)
  2: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1382:9-1382:32)
  3: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1382:9-1382:20)
  4: _45 = &mut ((*_1).0: std::vec::Vec<nfa::thompson::nfa::State>)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1382:9-1382:20)
  5: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1382:26-1382:31)
  6: _46 = move _2
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1382:26-1382:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1382:9-1382:32)
      kind: _44 = std::vec::Vec::<nfa::thompson::nfa::State>::push(move _45, move _46) -> [return: bb32, unwind: bb34]
  }
  preds [bb30]
  succs [bb32, bb34]

bb32
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1382:31-1382:32)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1382:31-1382:32)
  2: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1382:32-1382:33)
  3: _0 = _37
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1383:9-1383:11)
  4: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1384:5-1384:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1384:5-1384:6)
      kind: drop(_2) -> [return: bb33, unwind: bb36]
  }
  preds [bb31]
  succs [bb33, bb36]

bb33
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1384:6-1384:6)
      kind: return
  }
  preds [bb32]
  succs []

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1382:31-1382:32)
      kind: drop(_46) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb31]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1384:5-1384:6)
      kind: drop(_2) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb8, bb10, bb11, bb13, bb14, bb18, bb21, bb22, bb23, bb26, bb27, bb28, bb29, bb30, bb34]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/nfa.rs:1355:5-1384:6)
      kind: resume
  }
  preds [bb32, bb35]
  succs []

