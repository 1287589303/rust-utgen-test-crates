bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1797:13-1797:21)
  1: _3 = ((*_1).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1797:24-1797:35)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1797:13-1797:21)
  3: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:9-1801:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:9-1801:10)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:9-1801:10)
      kind: falseUnwind -> [real: bb2, unwind: bb28]
  }
  preds [bb0, bb15]
  succs [bb2, bb28]

bb2
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:15-1798:53)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:15-1798:23)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:15-1798:19)
  3: _8 = _2
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:15-1798:19)
  4: _9 = AddWithOverflow(_8, const 1_usize)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:15-1798:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:15-1798:23)
      kind: assert(!move (_9.1: bool), "attempt to compute `{} + {}`, which would overflow", move _8, const 1_usize) -> [success: bb3, unwind: bb28]
  }
  preds [bb1]
  succs [bb3, bb28]

bb3
  0: _7 = move (_9.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:15-1798:23)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:22-1798:23)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:26-1798:53)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:26-1798:47)
  4: _11 = &((*((*_1).1: &mut nfa::thompson::compiler::Utf8State)).1: std::vec::Vec<nfa::thompson::compiler::Utf8Node>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:26-1798:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:26-1798:53)
      kind: _10 = std::vec::Vec::<nfa::thompson::compiler::Utf8Node>::len(move _11) -> [return: bb4, unwind: bb28]
  }
  preds [bb2]
  succs [bb4, bb28]

bb4
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:52-1798:53)
  1: _6 = Lt(move _7, move _10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:15-1798:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:15-1798:53)
      kind: switchInt(move _6) -> [0: bb16, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb16]

bb5
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:52-1798:53)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:52-1798:53)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1799:17-1799:21)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1799:24-1799:28)
  4: _13 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1799:24-1799:28)
  5: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1799:40-1799:44)
  6: _14 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1799:40-1799:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1799:24-1799:45)
      kind: _12 = nfa::thompson::compiler::Utf8Compiler::<'_>::pop_freeze(move _13, move _14) -> [return: bb6, unwind: bb28]
  }
  preds [bb4]
  succs [bb6, bb28]

bb6
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1799:44-1799:45)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1799:44-1799:45)
  2: FakeRead(ForLet(None), _12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1799:17-1799:21)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:39)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:39)
  5: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:38)
  6: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:24)
  7: _18 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:24)
  8: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:33-1800:37)
  9: _19 = move _12
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:33-1800:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:38)
      kind: _17 = nfa::thompson::compiler::Utf8Compiler::<'_>::compile(move _18, move _19) -> [return: bb7, unwind: bb26]
  }
  preds [bb5]
  succs [bb7, bb26]

bb7
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:37-1800:38)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:37-1800:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:39)
      kind: _16 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _17) -> [return: bb8, unwind: bb25]
  }
  preds [bb6]
  succs [bb8, bb25]

bb8
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
  1: PlaceMention(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:39)
  2: _20 = discriminant(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:39)
      kind: switchInt(move _20) -> [0: bb11, 1: bb10, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10, bb11]

bb9
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:39)
      kind: unreachable
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
      kind: falseEdge -> [real: bb12, imaginary: bb11]
  }
  preds [bb8]
  succs [bb11, bb12]

bb11
  0: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:39)
  1: _24 = ((_16 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:39)
  2: _15 = _24
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:39)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
  4: _3 = move _15
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:13-1800:39)
  5: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:39-1800:40)
      kind: drop(_16) -> [return: bb14, unwind: bb27]
  }
  preds [bb8, bb10]
  succs [bb14, bb27]

bb12
  0: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
  1: _21 = move ((_16 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
  2: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
  3: _23 = move _21
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:20-1800:39)
      kind: _0 = <core::result::Result<(), nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _23) -> [return: bb13, unwind: bb22]
  }
  preds [bb10]
  succs [bb13, bb22]

bb13
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
      kind: drop(_21) -> [return: bb18, unwind: bb24]
  }
  preds [bb12]
  succs [bb18, bb24]

bb14
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:39-1800:40)
  1: _5 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:54-1801:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1801:9-1801:10)
      kind: drop(_12) -> [return: bb15, unwind: bb28]
  }
  preds [bb11]
  succs [bb15, bb28]

bb15
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1801:9-1801:10)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1801:9-1801:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:9-1801:10)
      kind: goto -> bb1
  }
  preds [bb14]
  succs [bb1]

bb16
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:52-1798:53)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:52-1798:53)
  2: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:9-1801:10)
  3: _4 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1798:9-1801:10)
  4: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1801:9-1801:10)
  5: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1801:9-1801:10)
  6: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1801:9-1801:10)
  7: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1802:9-1802:35)
  8: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1802:9-1802:13)
  9: _29 = &mut (*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1802:9-1802:13)
  10: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1802:30-1802:34)
  11: _30 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1802:30-1802:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1802:9-1802:35)
      kind: _28 = nfa::thompson::compiler::Utf8Compiler::<'_>::top_last_freeze(move _29, move _30) -> [return: bb17, unwind: bb28]
  }
  preds [bb4]
  succs [bb17, bb28]

bb17
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1802:34-1802:35)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1802:34-1802:35)
  2: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1802:35-1802:36)
  3: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1803:12-1803:14)
  4: _31 = ()
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1803:12-1803:14)
  5: _0 = core::result::Result::<(), nfa::thompson::error::BuildError>::Ok(move _31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1803:9-1803:15)
  6: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1803:14-1803:15)
  7: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1804:5-1804:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1804:6-1804:6)
      kind: goto -> bb21
  }
  preds [bb16]
  succs [bb21]

bb18
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:39-1800:40)
      kind: drop(_16) -> [return: bb19, unwind: bb27]
  }
  preds [bb13]
  succs [bb19, bb27]

bb19
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:39-1800:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1801:9-1801:10)
      kind: drop(_12) -> [return: bb20, unwind: bb28]
  }
  preds [bb18]
  succs [bb20, bb28]

bb20
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1801:9-1801:10)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1801:9-1801:10)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1801:9-1801:10)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1804:5-1804:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1804:6-1804:6)
      kind: goto -> bb21
  }
  preds [bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1804:6-1804:6)
      kind: return
  }
  preds [bb17, bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
      kind: drop(_23) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
      kind: drop(_21) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb22]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:39-1800:40)
      kind: drop(_16) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb13, bb23]
  succs [bb27]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:38-1800:39)
      kind: drop(_17) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb27]

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1800:37-1800:38)
      kind: drop(_19) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1801:9-1801:10)
      kind: drop(_12) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb11, bb18, bb24, bb25, bb26]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1796:5-1804:6)
      kind: resume
  }
  preds [bb1, bb2, bb3, bb5, bb14, bb16, bb19, bb27]
  succs []

