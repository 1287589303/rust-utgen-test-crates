{
  "regex-automata/src/nfa/thompson/compiler.rs:1798:15:1798:23": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "from + 1",
          "lhs": "from",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/nfa/thompson/compiler.rs:1800:20:1800:39": [
    {
      "Try": "self.compile(node)?"
    }
  ],
  "regex-automata/src/nfa/thompson/compiler.rs:1798:15:1798:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "from + 1 < self.state.uncompiled.len()",
          "lhs": "from + 1",
          "rhs": "self.state.uncompiled.len()",
          "cmp_with_int": false
        }
      }
    }
  ]
}