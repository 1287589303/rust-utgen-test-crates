bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/hybrid/id.rs:191:9-194:10)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/id.rs:191:12-191:33)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/id.rs:191:12-191:14)
  3: _4 = _1
    SourceInfo(regex-automata/src/hybrid/id.rs:191:12-191:14)
  4: _3 = Gt(move _4, const hybrid::id::LazyStateID::MAX)
    SourceInfo(regex-automata/src/hybrid/id.rs:191:12-191:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/id.rs:191:12-191:33)
      kind: switchInt(move _3) -> [0: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/id.rs:191:32-191:33)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/id.rs:192:17-192:26)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/id.rs:192:29-192:46)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/id.rs:192:43-192:45)
  4: _8 = _1
    SourceInfo(regex-automata/src/hybrid/id.rs:192:43-192:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/id.rs:192:29-192:46)
      kind: _7 = <u64 as core::convert::TryFrom<usize>>::try_from(move _8) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/id.rs:192:45-192:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/id.rs:192:29-192:55)
      kind: _6 = core::result::Result::<u64, core::num::TryFromIntError>::unwrap(move _7) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/id.rs:192:54-192:55)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/hybrid/id.rs:192:17-192:26)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/id.rs:193:24-193:54)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/id.rs:193:43-193:52)
  4: _10 = _6
    SourceInfo(regex-automata/src/hybrid/id.rs:193:43-193:52)
  5: _9 = hybrid::id::LazyStateIDError { attempted: move _10 }
    SourceInfo(regex-automata/src/hybrid/id.rs:193:24-193:54)
  6: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/id.rs:193:53-193:54)
  7: _0 = core::result::Result::<hybrid::id::LazyStateID, hybrid::id::LazyStateIDError>::Err(move _9)
    SourceInfo(regex-automata/src/hybrid/id.rs:193:20-193:55)
  8: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/id.rs:193:54-193:55)
  9: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/id.rs:194:9-194:10)
  10: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/id.rs:194:9-194:10)
  11: StorageDead(_2)
    SourceInfo(regex-automata/src/hybrid/id.rs:194:9-194:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/id.rs:196:6-196:6)
      kind: goto -> bb6
  }
  preds [bb2]
  succs [bb6]

bb4
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/id.rs:191:32-191:33)
  1: _2 = const ()
    SourceInfo(regex-automata/src/hybrid/id.rs:194:10-194:10)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/id.rs:194:9-194:10)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/hybrid/id.rs:194:9-194:10)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/id.rs:195:12-195:42)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/id.rs:195:39-195:41)
  6: _12 = _1
    SourceInfo(regex-automata/src/hybrid/id.rs:195:39-195:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/id.rs:195:12-195:42)
      kind: _11 = hybrid::id::LazyStateID::new_unchecked(move _12) -> [return: bb5, unwind: bb7]
  }
  preds [bb0]
  succs [bb5, bb7]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/id.rs:195:41-195:42)
  1: _0 = core::result::Result::<hybrid::id::LazyStateID, hybrid::id::LazyStateIDError>::Ok(move _11)
    SourceInfo(regex-automata/src/hybrid/id.rs:195:9-195:43)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/id.rs:195:42-195:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/id.rs:196:6-196:6)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/id.rs:196:6-196:6)
      kind: return
  }
  preds [bb3, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/id.rs:190:5-196:6)
      kind: resume
  }
  preds [bb1, bb2, bb4]
  succs []

