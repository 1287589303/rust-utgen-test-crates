{
  "regex-automata/src/hybrid/error.rs:78:15:78:24": [
    {
      "Match": {
        "match_source": "regex-automata/src/hybrid/error.rs:78:15:78:24",
        "match_str": "self.kind",
        "match_kind": {
          "Enum": [
            "NFA",
            "InsufficientCacheCapacity",
            "InsufficientStateIDCapacity",
            "Unsupported"
          ]
        },
        "arms": {
          "regex-automata/src/hybrid/error.rs:80:13:80:73": {
            "pat": {
              "pat_str": "BuildErrorKind::InsufficientCacheCapacity { minimum, given }",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/hybrid/error.rs:80:77:87:14"
          },
          "regex-automata/src/hybrid/error.rs:88:13:88:68": {
            "pat": {
              "pat_str": "BuildErrorKind::InsufficientStateIDCapacity { ref err }",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/hybrid/error.rs:88:72:90:14"
          },
          "regex-automata/src/hybrid/error.rs:91:13:91:49": {
            "pat": {
              "pat_str": "BuildErrorKind::Unsupported(ref msg)",
              "kind": {
                "Enum": 3
              }
            },
            "guard": null,
            "body_source": "regex-automata/src/hybrid/error.rs:91:53:93:14"
          },
          "regex-automata/src/hybrid/error.rs:79:13:79:35": {
            "pat": {
              "pat_str": "BuildErrorKind::NFA(_)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ]
}