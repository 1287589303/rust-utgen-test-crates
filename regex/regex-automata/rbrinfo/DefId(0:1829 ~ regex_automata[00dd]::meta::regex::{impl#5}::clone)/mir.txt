bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:1901:13-1901:16)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1901:30-1901:39)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1901:30-1901:39)
  3: _4 = &((*_1).0: std::sync::Arc<meta::regex::RegexI>)
    SourceInfo(regex-automata/src/meta/regex.rs:1901:30-1901:39)
  4: _3 = &(*_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1901:30-1901:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1901:19-1901:40)
      kind: _2 = <std::sync::Arc<meta::regex::RegexI> as core::clone::Clone>::clone(move _3) -> [return: bb1, unwind: bb20]
  }
  preds []
  succs [bb1, bb20]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1901:39-1901:40)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/meta/regex.rs:1901:13-1901:16)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1901:40-1901:41)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1902:13-1902:17)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1903:17-1903:22)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1903:36-1903:46)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:1903:36-1903:46)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:1903:37-1903:46)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:1903:37-1903:40)
  9: _10 = &_2
    SourceInfo(regex-automata/src/meta/regex.rs:1903:37-1903:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1903:37-1903:46)
      kind: _9 = <std::sync::Arc<meta::regex::RegexI> as core::ops::Deref>::deref(move _10) -> [return: bb2, unwind: bb19]
  }
  preds [bb0]
  succs [bb2, bb19]

bb2
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/regex.rs:1903:39-1903:40)
  1: _8 = &((*_9).0: std::sync::Arc<dyn meta::strategy::Strategy>)
    SourceInfo(regex-automata/src/meta/regex.rs:1903:36-1903:46)
  2: _7 = &(*_8)
    SourceInfo(regex-automata/src/meta/regex.rs:1903:36-1903:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1903:25-1903:47)
      kind: _6 = <std::sync::Arc<dyn meta::strategy::Strategy> as core::clone::Clone>::clone(move _7) -> [return: bb3, unwind: bb19]
  }
  preds [bb1]
  succs [bb3, bb19]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1903:46-1903:47)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/meta/regex.rs:1903:17-1903:22)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:1903:47-1903:48)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:1903:47-1903:48)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:1904:17-1904:23)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:1904:39-1904:77)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:1904:48-1904:76)
  7: _13 = {closure@regex-automata/src/meta/regex.rs:1904:48: 1904:55} { strat: move _6 }
    SourceInfo(regex-automata/src/meta/regex.rs:1904:48-1904:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1904:39-1904:77)
      kind: _12 = std::boxed::Box::<{closure@regex-automata/src/meta/regex.rs:1904:48: 1904:55}>::new(move _13) -> [return: bb4, unwind: bb17]
  }
  preds [bb2]
  succs [bb4, bb17]

bb4
  0: _11 = move _12 as std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/meta/regex.rs:1904:39-1904:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1904:76-1904:77)
      kind: drop(_12) -> [return: bb5, unwind: bb17]
  }
  preds [bb3]
  succs [bb5, bb17]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:1904:76-1904:77)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:1904:76-1904:77)
  2: FakeRead(ForLet(None), _11)
    SourceInfo(regex-automata/src/meta/regex.rs:1904:17-1904:23)
  3: AscribeUserType(_11, o, UserTypeProjection { base: UserType(4), projs: [] })
    SourceInfo(regex-automata/src/meta/regex.rs:1904:25-1904:36)
  4: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:1905:23-1905:29)
  5: _14 = move _11
    SourceInfo(regex-automata/src/meta/regex.rs:1905:23-1905:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1905:13-1905:30)
      kind: _5 = util::pool::Pool::<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>::new(move _14) -> [return: bb6, unwind: bb15]
  }
  preds [bb4]
  succs [bb6, bb15]

bb6
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:1905:29-1905:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1906:9-1906:10)
      kind: drop(_11) -> [return: bb7, unwind: bb18]
  }
  preds [bb5]
  succs [bb7, bb18]

bb7
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:1906:9-1906:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1906:9-1906:10)
      kind: drop(_6) -> [return: bb8, unwind: bb19]
  }
  preds [bb6]
  succs [bb8, bb19]

bb8
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1906:9-1906:10)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/meta/regex.rs:1902:13-1902:17)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:1907:17-1907:20)
  3: _15 = move _2
    SourceInfo(regex-automata/src/meta/regex.rs:1907:17-1907:20)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:1907:22-1907:26)
  5: _16 = move _5
    SourceInfo(regex-automata/src/meta/regex.rs:1907:22-1907:26)
  6: _0 = meta::regex::Regex { imp: move _15, pool: move _16 }
    SourceInfo(regex-automata/src/meta/regex.rs:1907:9-1907:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1907:27-1907:28)
      kind: drop(_16) -> [return: bb9, unwind: bb13]
  }
  preds [bb7]
  succs [bb9, bb13]

bb9
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:1907:27-1907:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1907:27-1907:28)
      kind: drop(_15) -> [return: bb10, unwind: bb14]
  }
  preds [bb8]
  succs [bb10, bb14]

bb10
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:1907:27-1907:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1908:5-1908:6)
      kind: drop(_5) -> [return: bb11, unwind: bb19]
  }
  preds [bb9]
  succs [bb11, bb19]

bb11
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1908:5-1908:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1908:5-1908:6)
      kind: drop(_2) -> [return: bb12, unwind: bb20]
  }
  preds [bb10]
  succs [bb12, bb20]

bb12
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:1908:5-1908:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1908:6-1908:6)
      kind: return
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1907:27-1907:28)
      kind: drop(_15) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1908:5-1908:6)
      kind: drop(_5) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb9, bb13]
  succs [bb19]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1905:29-1905:30)
      kind: drop(_14) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1906:9-1906:10)
      kind: drop(_11) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb18]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1904:76-1904:77)
      kind: drop(_13) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb3, bb4]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1906:9-1906:10)
      kind: drop(_6) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb6, bb16, bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1908:5-1908:6)
      kind: drop(_2) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb7, bb10, bb14, bb18]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1900:5-1908:6)
      kind: resume
  }
  preds [bb0, bb11, bb19]
  succs []

