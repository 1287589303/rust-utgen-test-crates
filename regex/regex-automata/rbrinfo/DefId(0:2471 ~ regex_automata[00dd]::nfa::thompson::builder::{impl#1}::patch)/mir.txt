bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1148:13-1148:30)
  1: _4 = ((*_1).4: usize)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1148:33-1148:51)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1148:13-1148:30)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1149:9-1178:10)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1149:26-1149:32)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1149:15-1149:26)
  6: _7 = &mut ((*_1).1: std::vec::Vec<nfa::thompson::builder::State>)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1149:15-1149:26)
  7: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1149:27-1149:31)
  8: _8 = _2
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1149:27-1149:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1149:26-1149:32)
      kind: _6 = <std::vec::Vec<nfa::thompson::builder::State> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _7, move _8) -> [return: bb1, unwind: bb48]
  }
  preds []
  succs [bb1, bb48]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1149:31-1149:32)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1149:31-1149:32)
  2: PlaceMention((*_6))
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1149:15-1149:32)
  3: _9 = discriminant((*_6))
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1149:15-1149:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1149:9-1149:32)
      kind: switchInt(move _9) -> [0: bb3, 1: bb4, 2: bb5, 3: bb6, 4: bb9, 5: bb10, 6: bb7, 7: bb8, 8: bb11, 9: bb12, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10, bb11, bb12]

bb2
  0: FakeRead(ForMatchedPlace(None), (*_6))
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1149:15-1149:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1149:15-1149:32)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1150:13-1150:42)
      kind: falseEdge -> [real: bb13, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb13]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1153:13-1153:47)
      kind: falseEdge -> [real: bb14, imaginary: bb5]
  }
  preds [bb1, bb3]
  succs [bb5, bb14]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1156:13-1156:33)
      kind: falseEdge -> [real: bb15, imaginary: bb6]
  }
  preds [bb1, bb4]
  succs [bb6, bb15]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1159:13-1159:45)
      kind: falseEdge -> [real: bb17, imaginary: bb7]
  }
  preds [bb1, bb5]
  succs [bb7, bb17]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1162:13-1162:48)
      kind: falseEdge -> [real: bb18, imaginary: bb8]
  }
  preds [bb1, bb6]
  succs [bb8, bb18]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1166:13-1166:55)
      kind: falseEdge -> [real: bb22, imaginary: bb9]
  }
  preds [bb1, bb7]
  succs [bb9, bb22]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1170:13-1170:53)
      kind: falseEdge -> [real: bb26, imaginary: bb10]
  }
  preds [bb1, bb8]
  succs [bb10, bb26]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1173:13-1173:51)
      kind: falseEdge -> [real: bb27, imaginary: bb11]
  }
  preds [bb1, bb9]
  succs [bb11, bb27]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1176:13-1176:24)
      kind: falseEdge -> [real: bb28, imaginary: bb12]
  }
  preds [bb1, bb10]
  succs [bb12, bb28]

bb12
  0: _5 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1177:36-1177:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1177:36-1177:38)
      kind: goto -> bb29
  }
  preds [bb1, bb11]
  succs [bb29]

bb13
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1150:28-1150:40)
  1: _10 = &mut (((*_6) as Empty).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1150:28-1150:40)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1151:25-1151:27)
  3: _11 = _3
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1151:25-1151:27)
  4: (*_10) = move _11
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1151:17-1151:27)
  5: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1151:26-1151:27)
  6: _5 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1150:46-1152:14)
  7: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1152:13-1152:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1152:13-1152:14)
      kind: goto -> bb29
  }
  preds [bb3]
  succs [bb29]

bb14
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1153:32-1153:45)
  1: _12 = &mut (((*_6) as ByteRange).0: nfa::thompson::nfa::Transition)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1153:32-1153:45)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1154:30-1154:32)
  3: _13 = _3
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1154:30-1154:32)
  4: ((*_12).2: util::primitives::StateID) = move _13
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1154:17-1154:32)
  5: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1154:31-1154:32)
  6: _5 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1153:51-1155:14)
  7: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1155:13-1155:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1155:13-1155:14)
      kind: goto -> bb29
  }
  preds [bb4]
  succs [bb29]

bb15
  0: StorageLive(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  1: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1157:24-1157:62)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1157:24-1157:62)
  4: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1157:24-1157:62)
  5: _19 = [const "cannot patch from a sparse NFA state"]
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1157:24-1157:62)
  6: _18 = &_19
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1157:24-1157:62)
  7: _17 = &(*_18)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1157:24-1157:62)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _16 = core::fmt::Arguments::<'_>::new_const::<1>(move _17) -> [return: bb16, unwind: bb48]
  }
  preds [bb5]
  succs [bb16, bb48]

bb16
  0: StorageDead(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _15 = core::panicking::panic_fmt(move _16) -> bb48
  }
  preds [bb15]
  succs [bb48]

bb17
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1159:27-1159:39)
  1: _20 = &mut (((*_6) as Look).1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1159:27-1159:39)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1160:25-1160:27)
  3: _21 = _3
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1160:25-1160:27)
  4: (*_20) = move _21
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1160:17-1160:27)
  5: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1160:26-1160:27)
  6: _5 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1159:49-1161:14)
  7: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1161:13-1161:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1161:13-1161:14)
      kind: goto -> bb29
  }
  preds [bb6]
  succs [bb29]

bb18
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1162:28-1162:46)
  1: _22 = &mut (((*_6) as Union).0: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1162:28-1162:46)
  2: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1163:17-1163:36)
  3: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1163:17-1163:27)
  4: _24 = &mut (*_22)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1163:17-1163:27)
  5: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1163:33-1163:35)
  6: _25 = _3
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1163:33-1163:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1163:17-1163:36)
      kind: _23 = std::vec::Vec::<util::primitives::StateID>::push(move _24, move _25) -> [return: bb19, unwind: bb48]
  }
  preds [bb7]
  succs [bb19, bb48]

bb19
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1163:35-1163:36)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1163:35-1163:36)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1163:36-1163:37)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1164:39-1164:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1164:39-1164:64)
      kind: _26 = core::mem::size_of::<util::primitives::StateID>() -> [return: bb20, unwind: bb48]
  }
  preds [bb18]
  succs [bb20, bb48]

bb20
  0: _27 = AddWithOverflow(((*_1).4: usize), _26)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1164:17-1164:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1164:17-1164:64)
      kind: assert(!move (_27.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).4: usize), move _26) -> [success: bb21, unwind: bb48]
  }
  preds [bb19]
  succs [bb21, bb48]

bb21
  0: ((*_1).4: usize) = move (_27.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1164:17-1164:64)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1164:63-1164:64)
  2: _5 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1162:52-1165:14)
  3: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1165:13-1165:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1165:13-1165:14)
      kind: goto -> bb29
  }
  preds [bb20]
  succs [bb29]

bb22
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1166:35-1166:53)
  1: _28 = &mut (((*_6) as UnionReverse).0: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1166:35-1166:53)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1167:17-1167:36)
  3: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1167:17-1167:27)
  4: _30 = &mut (*_28)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1167:17-1167:27)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1167:33-1167:35)
  6: _31 = _3
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1167:33-1167:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1167:17-1167:36)
      kind: _29 = std::vec::Vec::<util::primitives::StateID>::push(move _30, move _31) -> [return: bb23, unwind: bb48]
  }
  preds [bb8]
  succs [bb23, bb48]

bb23
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1167:35-1167:36)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1167:35-1167:36)
  2: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1167:36-1167:37)
  3: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1168:39-1168:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1168:39-1168:64)
      kind: _32 = core::mem::size_of::<util::primitives::StateID>() -> [return: bb24, unwind: bb48]
  }
  preds [bb22]
  succs [bb24, bb48]

bb24
  0: _33 = AddWithOverflow(((*_1).4: usize), _32)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1168:17-1168:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1168:17-1168:64)
      kind: assert(!move (_33.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).4: usize), move _32) -> [success: bb25, unwind: bb48]
  }
  preds [bb23]
  succs [bb25, bb48]

bb25
  0: ((*_1).4: usize) = move (_33.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1168:17-1168:64)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1168:63-1168:64)
  2: _5 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1166:59-1169:14)
  3: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1169:13-1169:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1169:13-1169:14)
      kind: goto -> bb29
  }
  preds [bb24]
  succs [bb29]

bb26
  0: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1170:35-1170:47)
  1: _34 = &mut (((*_6) as CaptureStart).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1170:35-1170:47)
  2: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1171:25-1171:27)
  3: _35 = _3
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1171:25-1171:27)
  4: (*_34) = move _35
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1171:17-1171:27)
  5: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1171:26-1171:27)
  6: _5 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1170:57-1172:14)
  7: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1172:13-1172:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1172:13-1172:14)
      kind: goto -> bb29
  }
  preds [bb9]
  succs [bb29]

bb27
  0: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1173:33-1173:45)
  1: _36 = &mut (((*_6) as CaptureEnd).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1173:33-1173:45)
  2: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1174:25-1174:27)
  3: _37 = _3
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1174:25-1174:27)
  4: (*_36) = move _37
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1174:17-1174:27)
  5: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1174:26-1174:27)
  6: _5 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1173:55-1175:14)
  7: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1175:13-1175:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1175:13-1175:14)
      kind: goto -> bb29
  }
  preds [bb10]
  succs [bb29]

bb28
  0: _5 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1176:28-1176:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1176:28-1176:30)
      kind: goto -> bb29
  }
  preds [bb11]
  succs [bb29]

bb29
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1178:9-1178:10)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1178:9-1178:10)
  2: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:9-1181:10)
  3: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:12-1179:51)
  4: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:12-1179:29)
  5: _40 = _4
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:12-1179:29)
  6: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:33-1179:51)
  7: _41 = ((*_1).4: usize)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:33-1179:51)
  8: _39 = Ne(move _40, move _41)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:12-1179:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:12-1179:51)
      kind: switchInt(move _39) -> [0: bb39, otherwise: bb30]
  }
  preds [bb12, bb13, bb14, bb17, bb21, bb25, bb26, bb27, bb28]
  succs [bb30, bb39]

bb30
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:50-1179:51)
  1: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:50-1179:51)
  2: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:37)
  3: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:37)
  4: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:36)
  5: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:17)
  6: _45 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:36)
      kind: _44 = nfa::thompson::builder::Builder::check_size_limit(move _45) -> [return: bb31, unwind: bb48]
  }
  preds [bb29]
  succs [bb31, bb48]

bb31
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:35-1180:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:37)
      kind: _43 = <core::result::Result<(), nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _44) -> [return: bb32, unwind: bb47]
  }
  preds [bb30]
  succs [bb32, bb47]

bb32
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:36-1180:37)
  1: PlaceMention(_43)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:37)
  2: _46 = discriminant(_43)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:37)
      kind: switchInt(move _46) -> [0: bb35, 1: bb34, otherwise: bb33]
  }
  preds [bb31]
  succs [bb33, bb34, bb35]

bb33
  0: FakeRead(ForMatchedPlace(None), _43)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:37)
      kind: unreachable
  }
  preds [bb32]
  succs []

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:36-1180:37)
      kind: falseEdge -> [real: bb36, imaginary: bb35]
  }
  preds [bb32]
  succs [bb35, bb36]

bb35
  0: StorageLive(_50)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:37)
  1: _50 = ((_43 as Continue).0: ())
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:37)
  2: _42 = _50
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:37)
  3: StorageDead(_50)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:36-1180:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:37-1180:38)
      kind: drop(_43) -> [return: bb38, unwind: bb48]
  }
  preds [bb32, bb34]
  succs [bb38, bb48]

bb36
  0: StorageLive(_47)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:36-1180:37)
  1: _47 = move ((_43 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:36-1180:37)
  2: StorageLive(_49)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:36-1180:37)
  3: _49 = move _47
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:36-1180:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:13-1180:37)
      kind: _0 = <core::result::Result<(), nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _49) -> [return: bb37, unwind: bb44]
  }
  preds [bb34]
  succs [bb37, bb44]

bb37
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:36-1180:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:36-1180:37)
      kind: drop(_47) -> [return: bb41, unwind: bb46]
  }
  preds [bb36]
  succs [bb41, bb46]

bb38
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:37-1180:38)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:37-1180:38)
  2: _38 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:52-1181:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:9-1181:10)
      kind: goto -> bb40
  }
  preds [bb35]
  succs [bb40]

bb39
  0: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:50-1179:51)
  1: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:50-1179:51)
  2: _38 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1181:10-1181:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1179:9-1181:10)
      kind: goto -> bb40
  }
  preds [bb29]
  succs [bb40]

bb40
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1181:9-1181:10)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1181:9-1181:10)
  2: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1182:12-1182:14)
  3: _51 = ()
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1182:12-1182:14)
  4: _0 = core::result::Result::<(), nfa::thompson::error::BuildError>::Ok(move _51)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1182:9-1182:15)
  5: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1182:14-1182:15)
  6: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1183:5-1183:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1183:6-1183:6)
      kind: goto -> bb43
  }
  preds [bb38, bb39]
  succs [bb43]

bb41
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:36-1180:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:37-1180:38)
      kind: drop(_43) -> [return: bb42, unwind: bb48]
  }
  preds [bb37]
  succs [bb42, bb48]

bb42
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:37-1180:38)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:37-1180:38)
  2: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1181:9-1181:10)
  3: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1181:9-1181:10)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1183:5-1183:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1183:6-1183:6)
      kind: goto -> bb43
  }
  preds [bb41]
  succs [bb43]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1183:6-1183:6)
      kind: return
  }
  preds [bb40, bb42]
  succs []

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:36-1180:37)
      kind: drop(_49) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb36]
  succs [bb45]

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:36-1180:37)
      kind: drop(_47) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb44]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:37-1180:38)
      kind: drop(_43) -> [return: bb48, unwind terminate(cleanup)]
  }
  preds [bb37, bb45]
  succs [bb48]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1180:36-1180:37)
      kind: drop(_44) -> [return: bb48, unwind terminate(cleanup)]
  }
  preds [bb31]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1143:5-1183:6)
      kind: resume
  }
  preds [bb0, bb15, bb16, bb18, bb19, bb20, bb22, bb23, bb24, bb30, bb35, bb41, bb46, bb47]
  succs []

