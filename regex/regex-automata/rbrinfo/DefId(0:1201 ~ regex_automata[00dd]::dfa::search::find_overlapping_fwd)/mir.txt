bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/search.rs:317:17-317:21)
  1: _4 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/dfa/search.rs:317:17-317:21)
  2: ((*_3).0: core::option::Option<util::search::HalfMatch>) = move _4
    SourceInfo(regex-automata/src/dfa/search.rs:317:5-317:21)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/search.rs:317:20-317:21)
  4: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/search.rs:318:5-320:6)
  5: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/search.rs:318:8-318:23)
  6: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/search.rs:318:8-318:13)
  7: _7 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:318:8-318:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:318:8-318:23)
      kind: _6 = util::search::Input::<'_>::is_done(move _7) -> [return: bb1, unwind: bb17]
  }
  preds []
  succs [bb1, bb17]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:318:8-318:23)
      kind: switchInt(move _6) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/search.rs:318:22-318:23)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/search.rs:319:19-319:21)
  2: _9 = ()
    SourceInfo(regex-automata/src/dfa/search.rs:319:19-319:21)
  3: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _9)
    SourceInfo(regex-automata/src/dfa/search.rs:319:16-319:22)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/search.rs:319:21-319:22)
  5: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/search.rs:320:5-320:6)
  6: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/search.rs:320:5-320:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:331:2-331:2)
      kind: goto -> bb16
  }
  preds [bb1]
  succs [bb16]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/search.rs:318:22-318:23)
  1: _5 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:320:6-320:6)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/search.rs:320:5-320:6)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/search.rs:320:5-320:6)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/search.rs:321:9-321:12)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/search.rs:321:18-321:52)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/search.rs:321:18-321:38)
  7: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/search.rs:321:18-321:38)
  8: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/search.rs:321:18-321:23)
  9: _14 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:321:18-321:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:321:18-321:38)
      kind: _13 = util::search::Input::<'_>::get_anchored(move _14) -> [return: bb4, unwind: bb17]
  }
  preds [bb1]
  succs [bb4, bb17]

bb4
  0: _12 = &_13
    SourceInfo(regex-automata/src/dfa/search.rs:321:18-321:38)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/search.rs:321:37-321:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:321:18-321:52)
      kind: _11 = util::search::Anchored::is_anchored(move _12) -> [return: bb5, unwind: bb17]
  }
  preds [bb3]
  succs [bb5, bb17]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:321:18-321:52)
      kind: switchInt(move _11) -> [0: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/search.rs:321:51-321:52)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/search.rs:321:51-321:52)
  2: _10 = core::option::Option::<&util::prefilter::Prefilter>::None
    SourceInfo(regex-automata/src/dfa/search.rs:322:9-322:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:321:15-325:6)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb7
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/search.rs:321:51-321:52)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/search.rs:321:51-321:52)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/search.rs:324:9-324:12)
  3: _15 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:324:9-324:12)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:324:9-324:28)
      kind: _10 = <A as dfa::automaton::Automaton>::get_prefilter(move _15) -> [return: bb8, unwind: bb17]
  }
  preds [bb5]
  succs [bb8, bb17]

bb8
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/search.rs:324:27-324:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:321:15-325:6)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/search.rs:325:5-325:6)
  1: FakeRead(ForLet(None), _10)
    SourceInfo(regex-automata/src/dfa/search.rs:321:9-321:12)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/search.rs:326:8-326:21)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/search.rs:326:8-326:11)
  4: _17 = &_10
    SourceInfo(regex-automata/src/dfa/search.rs:326:8-326:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:326:8-326:21)
      kind: _16 = core::option::Option::<&util::prefilter::Prefilter>::is_some(move _17) -> [return: bb10, unwind: bb17]
  }
  preds [bb6, bb8]
  succs [bb10, bb17]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:326:8-326:21)
      kind: switchInt(move _16) -> [0: bb13, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb13]

bb11
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/search.rs:326:20-326:21)
  1: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/search.rs:327:34-327:37)
  2: _18 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:327:34-327:37)
  3: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/search.rs:327:39-327:44)
  4: _19 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:327:39-327:44)
  5: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/search.rs:327:46-327:49)
  6: _20 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:327:46-327:49)
  7: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/search.rs:327:51-327:56)
  8: _21 = &mut (*_3)
    SourceInfo(regex-automata/src/dfa/search.rs:327:51-327:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:327:9-327:57)
      kind: _0 = dfa::search::find_overlapping_fwd_imp::<A>(move _18, move _19, move _20, move _21) -> [return: bb12, unwind: bb17]
  }
  preds [bb10]
  succs [bb12, bb17]

bb12
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/search.rs:327:56-327:57)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/search.rs:327:56-327:57)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/search.rs:327:56-327:57)
  3: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/search.rs:327:56-327:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:326:5-330:6)
      kind: goto -> bb15
  }
  preds [bb11]
  succs [bb15]

bb13
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/search.rs:326:20-326:21)
  1: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/search.rs:329:34-329:37)
  2: _22 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:329:34-329:37)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/search.rs:329:39-329:44)
  4: _23 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:329:39-329:44)
  5: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/search.rs:329:46-329:50)
  6: _24 = core::option::Option::<&util::prefilter::Prefilter>::None
    SourceInfo(regex-automata/src/dfa/search.rs:329:46-329:50)
  7: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/search.rs:329:52-329:57)
  8: _25 = &mut (*_3)
    SourceInfo(regex-automata/src/dfa/search.rs:329:52-329:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:329:9-329:58)
      kind: _0 = dfa::search::find_overlapping_fwd_imp::<A>(move _22, move _23, move _24, move _25) -> [return: bb14, unwind: bb17]
  }
  preds [bb10]
  succs [bb14, bb17]

bb14
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/search.rs:329:57-329:58)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/search.rs:329:57-329:58)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/search.rs:329:57-329:58)
  3: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/search.rs:329:57-329:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:326:5-330:6)
      kind: goto -> bb15
  }
  preds [bb13]
  succs [bb15]

bb15
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/search.rs:330:5-330:6)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/search.rs:331:1-331:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:331:2-331:2)
      kind: goto -> bb16
  }
  preds [bb12, bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:331:2-331:2)
      kind: return
  }
  preds [bb2, bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:312:1-331:2)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb7, bb9, bb11, bb13]
  succs []

