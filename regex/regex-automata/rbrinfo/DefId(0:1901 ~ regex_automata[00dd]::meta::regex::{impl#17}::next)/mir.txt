bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:2255:9-2257:10)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:2255:12-2255:27)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:2255:12-2255:22)
  3: _4 = ((*_1).1: usize)
    SourceInfo(regex-automata/src/meta/regex.rs:2255:12-2255:22)
  4: _3 = Eq(move _4, const 0_usize)
    SourceInfo(regex-automata/src/meta/regex.rs:2255:12-2255:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2255:12-2255:27)
      kind: switchInt(move _3) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:2255:26-2255:27)
  1: _0 = core::option::Option::<util::search::Span>::None
    SourceInfo(regex-automata/src/meta/regex.rs:2256:20-2256:24)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:2257:9-2257:10)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:2257:9-2257:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb14
  }
  preds [bb0]
  succs [bb14]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:2255:26-2255:27)
  1: _2 = const ()
    SourceInfo(regex-automata/src/meta/regex.rs:2257:10-2257:10)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:2257:9-2257:10)
  3: StorageDead(_2)
    SourceInfo(regex-automata/src/meta/regex.rs:2257:9-2257:10)
  4: _6 = SubWithOverflow(((*_1).1: usize), const 1_usize)
    SourceInfo(regex-automata/src/meta/regex.rs:2259:9-2259:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2259:9-2259:24)
      kind: assert(!move (_6.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_1).1: usize), const 1_usize) -> [success: bb3, unwind: bb15]
  }
  preds [bb0]
  succs [bb3, bb15]

bb3
  0: ((*_1).1: usize) = move (_6.0: usize)
    SourceInfo(regex-automata/src/meta/regex.rs:2259:9-2259:24)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:2260:9-2262:10)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:2260:12-2260:26)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:2260:12-2260:22)
  4: _9 = ((*_1).1: usize)
    SourceInfo(regex-automata/src/meta/regex.rs:2260:12-2260:22)
  5: _8 = Gt(move _9, const 0_usize)
    SourceInfo(regex-automata/src/meta/regex.rs:2260:12-2260:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2260:12-2260:26)
      kind: switchInt(move _8) -> [0: bb6, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:2260:25-2260:26)
  1: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:2261:20-2261:31)
  2: _11 = &mut ((*_1).0: meta::regex::Split<'_, '_>)
    SourceInfo(regex-automata/src/meta/regex.rs:2261:20-2261:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2261:20-2261:38)
      kind: _0 = <meta::regex::Split<'_, '_> as core::iter::Iterator>::next(move _11) -> [return: bb5, unwind: bb15]
  }
  preds [bb3]
  succs [bb5, bb15]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/regex.rs:2261:37-2261:38)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:2262:9-2262:10)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:2262:9-2262:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb14
  }
  preds [bb4]
  succs [bb14]

bb6
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/regex.rs:2260:25-2260:26)
  1: _7 = const ()
    SourceInfo(regex-automata/src/meta/regex.rs:2262:10-2262:10)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/regex.rs:2262:9-2262:10)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:2262:9-2262:10)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:13-2264:16)
  5: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:19-2264:59)
  6: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:19-2264:59)
  7: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:19-2264:48)
  8: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:19-2264:48)
  9: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:19-2264:40)
  10: _17 = &((((*_1).0: meta::regex::Split<'_, '_>).0: meta::regex::FindMatches<'_, '_>).2: util::iter::Searcher<'_>)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:19-2264:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2264:19-2264:48)
      kind: _16 = util::iter::Searcher::<'_>::input(move _17) -> [return: bb7, unwind: bb15]
  }
  preds [bb3]
  succs [bb7, bb15]

bb7
  0: _15 = &(*_16)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:19-2264:48)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:47-2264:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2264:19-2264:59)
      kind: _14 = util::search::Input::<'_>::haystack(move _15) -> [return: bb8, unwind: bb15]
  }
  preds [bb6]
  succs [bb8, bb15]

bb8
  0: _13 = &(*_14)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:19-2264:59)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:58-2264:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2264:19-2264:65)
      kind: _12 = core::slice::<impl [u8]>::len(move _13) -> [return: bb9, unwind: bb15]
  }
  preds [bb7]
  succs [bb9, bb15]

bb9
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:64-2264:65)
  1: FakeRead(ForLet(None), _12)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:13-2264:16)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:65-2264:66)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/regex.rs:2264:65-2264:66)
  4: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/regex.rs:2265:12-2265:34)
  5: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/regex.rs:2265:12-2265:28)
  6: _19 = (((*_1).0: meta::regex::Split<'_, '_>).1: usize)
    SourceInfo(regex-automata/src/meta/regex.rs:2265:12-2265:28)
  7: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/regex.rs:2265:31-2265:34)
  8: _20 = _12
    SourceInfo(regex-automata/src/meta/regex.rs:2265:31-2265:34)
  9: _18 = Gt(move _19, move _20)
    SourceInfo(regex-automata/src/meta/regex.rs:2265:12-2265:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2265:12-2265:34)
      kind: switchInt(move _18) -> [0: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11]

bb10
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/regex.rs:2265:33-2265:34)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/regex.rs:2265:33-2265:34)
  2: _0 = core::option::Option::<util::search::Span>::None
    SourceInfo(regex-automata/src/meta/regex.rs:2267:13-2267:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2265:9-2271:10)
      kind: goto -> bb13
  }
  preds [bb9]
  succs [bb13]

bb11
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/regex.rs:2265:33-2265:34)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/regex.rs:2265:33-2265:34)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/regex.rs:2270:18-2270:51)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/regex.rs:2270:29-2270:50)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/regex.rs:2270:29-2270:45)
  5: _23 = (((*_1).0: meta::regex::Split<'_, '_>).1: usize)
    SourceInfo(regex-automata/src/meta/regex.rs:2270:29-2270:45)
  6: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/regex.rs:2270:47-2270:50)
  7: _24 = _12
    SourceInfo(regex-automata/src/meta/regex.rs:2270:47-2270:50)
  8: _22 = core::ops::Range::<usize> { start: move _23, end: move _24 }
    SourceInfo(regex-automata/src/meta/regex.rs:2270:29-2270:50)
  9: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/regex.rs:2270:49-2270:50)
  10: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/regex.rs:2270:49-2270:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2270:18-2270:51)
      kind: _21 = <util::search::Span as core::convert::From<core::ops::Range<usize>>>::from(move _22) -> [return: bb12, unwind: bb15]
  }
  preds [bb9]
  succs [bb12, bb15]

bb12
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/regex.rs:2270:50-2270:51)
  1: _0 = core::option::Option::<util::search::Span>::Some(move _21)
    SourceInfo(regex-automata/src/meta/regex.rs:2270:13-2270:52)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/regex.rs:2270:51-2270:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2265:9-2271:10)
      kind: goto -> bb13
  }
  preds [bb11]
  succs [bb13]

bb13
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/regex.rs:2271:9-2271:10)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/regex.rs:2272:5-2272:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2272:6-2272:6)
      kind: goto -> bb14
  }
  preds [bb10, bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2272:6-2272:6)
      kind: return
  }
  preds [bb1, bb5, bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:2254:5-2272:6)
      kind: resume
  }
  preds [bb2, bb4, bb6, bb7, bb8, bb11]
  succs []

