bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2124:13-2124:20)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2124:23-2124:31)
  2: _5 = &(*((*_1).0: &hybrid::dfa::DFA))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2124:23-2124:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2124:23-2124:41)
      kind: _4 = hybrid::dfa::DFA::stride2(move _5) -> [return: bb1, unwind: bb37]
  }
  preds []
  succs [bb1, bb37]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2124:40-2124:41)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2124:13-2124:20)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2125:13-2125:26)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2125:29-2125:33)
  4: _7 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2125:29-2125:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2125:29-2125:53)
      kind: _6 = hybrid::dfa::Lazy::<'_, '_>::get_state_builder(move _7) -> [return: bb2, unwind: bb37]
  }
  preds [bb0]
  succs [bb2, bb37]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2125:52-2125:53)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2125:13-2125:26)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2126:13-2126:20)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2127:13-2127:31)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2127:13-2127:31)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2127:13-2127:21)
  6: _11 = &(*((*_1).0: &hybrid::dfa::DFA))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2127:13-2127:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2127:13-2127:31)
      kind: _10 = hybrid::dfa::DFA::get_nfa(move _11) -> [return: bb3, unwind: bb36]
  }
  preds [bb1]
  succs [bb3, bb36]

bb3
  0: _9 = &(*_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2127:13-2127:31)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2127:30-2127:31)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2128:13-2128:51)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2128:13-2128:34)
  4: StorageLive(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2128:13-2128:34)
  5: StorageLive(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2128:13-2128:21)
  6: _15 = &(*((*_1).0: &hybrid::dfa::DFA))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2128:13-2128:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2128:13-2128:34)
      kind: _14 = hybrid::dfa::DFA::get_config(move _15) -> [return: bb4, unwind: bb36]
  }
  preds [bb2]
  succs [bb4, bb36]

bb4
  0: _13 = &(*_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2128:13-2128:34)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2128:33-2128:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2128:13-2128:51)
      kind: _12 = hybrid::dfa::Config::get_match_kind(move _13) -> [return: bb5, unwind: bb36]
  }
  preds [bb3]
  succs [bb5, bb36]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2128:50-2128:51)
  1: StorageLive(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2129:13-2129:36)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2129:13-2129:36)
  3: _17 = &mut ((*((*_1).1: &mut hybrid::dfa::Cache)).4: util::sparse_set::SparseSets)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2129:13-2129:36)
  4: _16 = &mut (*_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2129:13-2129:36)
  5: StorageLive(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2130:13-2130:34)
  6: StorageLive(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2130:13-2130:34)
  7: _19 = &mut ((*((*_1).1: &mut hybrid::dfa::Cache)).5: std::vec::Vec<util::primitives::StateID>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2130:13-2130:34)
  8: _18 = &mut (*_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2130:13-2130:34)
  9: StorageLive(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:13-2131:71)
  10: StorageLive(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:13-2131:71)
  11: StorageLive(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:31-2131:71)
  12: StorageLive(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:14-2131:31)
  13: _23 = &((*((*_1).1: &mut hybrid::dfa::Cache)).2: std::vec::Vec<util::determinize::state::State>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:14-2131:31)
  14: StorageLive(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:32-2131:70)
  15: StorageLive(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:32-2131:59)
  16: StorageLive(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:32-2131:39)
  17: _26 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:32-2131:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:32-2131:59)
      kind: _25 = hybrid::id::LazyStateID::as_usize_untagged(move _26) -> [return: bb6, unwind: bb36]
  }
  preds [bb4]
  succs [bb6, bb36]

bb6
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:58-2131:59)
  1: StorageLive(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:63-2131:70)
  2: _27 = _4
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:63-2131:70)
  3: _28 = Lt(_27, const 64_usize)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:32-2131:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:32-2131:70)
      kind: assert(move _28, "attempt to shift right by `{}`, which would overflow", _27) -> [success: bb7, unwind: bb36]
  }
  preds [bb5]
  succs [bb7, bb36]

bb7
  0: _24 = Shr(move _25, move _27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:32-2131:70)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:69-2131:70)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:69-2131:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:31-2131:71)
      kind: _22 = <std::vec::Vec<util::determinize::state::State> as core::ops::Index<usize>>::index(move _23, move _24) -> [return: bb8, unwind: bb36]
  }
  preds [bb6]
  succs [bb8, bb36]

bb8
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:70-2131:71)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:70-2131:71)
  2: _21 = &(*_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:13-2131:71)
  3: _20 = &(*_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2131:13-2131:71)
  4: StorageLive(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2132:13-2132:17)
  5: _29 = _3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2132:13-2132:17)
  6: StorageLive(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2133:13-2133:26)
  7: _30 = move _6
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2133:13-2133:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2126:23-2134:10)
      kind: _8 = util::determinize::next(move _9, move _12, move _16, move _18, move _20, move _29, move _30) -> [return: bb9, unwind: bb35]
  }
  preds [bb7]
  succs [bb9, bb35]

bb9
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2134:9-2134:10)
  1: StorageDead(_29)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2134:9-2134:10)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2134:9-2134:10)
  3: StorageDead(_18)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2134:9-2134:10)
  4: StorageDead(_16)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2134:9-2134:10)
  5: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2134:9-2134:10)
  6: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2134:9-2134:10)
  7: FakeRead(ForLet(None), _8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2126:13-2126:20)
  8: StorageDead(_22)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2134:10-2134:11)
  9: StorageDead(_21)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2134:10-2134:11)
  10: StorageDead(_19)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2134:10-2134:11)
  11: StorageDead(_17)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2134:10-2134:11)
  12: StorageDead(_14)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2134:10-2134:11)
  13: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2134:10-2134:11)
  14: StorageLive(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:13-2135:23)
  15: StorageLive(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:27-2135:78)
  16: StorageLive(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:27-2135:40)
  17: StorageLive(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:27-2135:40)
  18: StorageLive(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:27-2135:31)
  19: _35 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:27-2135:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:27-2135:40)
      kind: _34 = hybrid::dfa::Lazy::<'_, '_>::as_ref(move _35) -> [return: bb10, unwind: bb34]
  }
  preds [bb8]
  succs [bb10, bb34]

bb10
  0: _33 = &_34
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:27-2135:40)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:39-2135:40)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:69-2135:77)
  3: StorageLive(_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:69-2135:77)
  4: _37 = &_8
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:69-2135:77)
  5: _36 = &(*_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:69-2135:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:27-2135:78)
      kind: _32 = hybrid::dfa::LazyRef::<'_, '_>::state_builder_fits_in_cache(move _33, move _36) -> [return: bb11, unwind: bb34]
  }
  preds [bb9]
  succs [bb11, bb34]

bb11
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:77-2135:78)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:77-2135:78)
  2: _31 = Not(move _32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:26-2135:78)
  3: StorageDead(_32)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:77-2135:78)
  4: FakeRead(ForLet(None), _31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:13-2135:23)
  5: StorageDead(_37)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:78-2135:79)
  6: StorageDead(_34)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2135:78-2135:79)
  7: StorageLive(_38)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2136:9-2138:10)
  8: StorageLive(_39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2136:12-2136:22)
  9: _39 = _31
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2136:12-2136:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2136:12-2136:22)
      kind: switchInt(move _39) -> [0: bb14, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb14]

bb12
  0: StorageLive(_40)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2137:13-2137:37)
  1: StorageLive(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2137:13-2137:17)
  2: _41 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2137:13-2137:17)
  3: StorageLive(_42)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2137:29-2137:36)
  4: _42 = _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2137:29-2137:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2137:13-2137:37)
      kind: _40 = hybrid::dfa::Lazy::<'_, '_>::save_state(move _41, move _42) -> [return: bb13, unwind: bb34]
  }
  preds [bb11]
  succs [bb13, bb34]

bb13
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2137:36-2137:37)
  1: StorageDead(_41)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2137:36-2137:37)
  2: StorageDead(_40)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2137:37-2137:38)
  3: _38 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2136:23-2138:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2136:9-2138:10)
      kind: goto -> bb15
  }
  preds [bb12]
  succs [bb15]

bb14
  0: _38 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2138:10-2138:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2136:9-2138:10)
      kind: goto -> bb15
  }
  preds [bb11]
  succs [bb15]

bb15
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2138:9-2138:10)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2138:9-2138:10)
  2: StorageLive(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:13-2139:17)
  3: StorageLive(_44)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:63)
  4: StorageLive(_45)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:62)
  5: StorageLive(_46)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:24)
  6: _46 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:24)
  7: StorageLive(_47)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:43-2139:50)
  8: _47 = move _8
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:43-2139:50)
  9: StorageLive(_48)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:52-2139:61)
  10: _48 = {closure@regex-automata/src/hybrid/dfa.rs:2139:52: 2139:57}
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:52-2139:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:62)
      kind: _45 = hybrid::dfa::Lazy::<'_, '_>::add_builder_state::<{closure@regex-automata/src/hybrid/dfa.rs:2139:52: 2139:57}>(move _46, move _47, move _48) -> [return: bb16, unwind: bb33]
  }
  preds [bb13, bb14]
  succs [bb16, bb33]

bb16
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:61-2139:62)
  1: StorageDead(_47)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:61-2139:62)
  2: StorageDead(_46)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:61-2139:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:63)
      kind: _44 = <core::result::Result<hybrid::id::LazyStateID, hybrid::error::CacheError> as core::ops::Try>::branch(move _45) -> [return: bb17, unwind: bb34]
  }
  preds [bb15]
  succs [bb17, bb34]

bb17
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:62-2139:63)
  1: PlaceMention(_44)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:63)
  2: _49 = discriminant(_44)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:63)
      kind: switchInt(move _49) -> [0: bb20, 1: bb19, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19, bb20]

bb18
  0: FakeRead(ForMatchedPlace(None), _44)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:63)
      kind: unreachable
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:62-2139:63)
      kind: falseEdge -> [real: bb21, imaginary: bb20]
  }
  preds [bb17]
  succs [bb20, bb21]

bb20
  0: StorageLive(_53)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:63)
  1: _53 = ((_44 as Continue).0: hybrid::id::LazyStateID)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:63)
  2: _43 = _53
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:63)
  3: StorageDead(_53)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:62-2139:63)
  4: FakeRead(ForLet(None), _43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:13-2139:17)
  5: StorageDead(_44)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:63-2139:64)
  6: StorageLive(_54)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2140:9-2142:10)
  7: StorageLive(_55)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2140:12-2140:22)
  8: _55 = _31
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2140:12-2140:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2140:12-2140:22)
      kind: switchInt(move _55) -> [0: bb24, otherwise: bb23]
  }
  preds [bb17, bb19]
  succs [bb23, bb24]

bb21
  0: StorageLive(_50)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:62-2139:63)
  1: _50 = move ((_44 as Break).0: core::result::Result<core::convert::Infallible, hybrid::error::CacheError>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:62-2139:63)
  2: StorageLive(_52)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:62-2139:63)
  3: _52 = move _50
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:62-2139:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:20-2139:63)
      kind: _0 = <core::result::Result<hybrid::id::LazyStateID, hybrid::error::CacheError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hybrid::error::CacheError>>>::from_residual(move _52) -> [return: bb22, unwind: bb34]
  }
  preds [bb19]
  succs [bb22, bb34]

bb22
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:62-2139:63)
  1: StorageDead(_50)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:62-2139:63)
  2: StorageDead(_44)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:63-2139:64)
  3: StorageDead(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
  4: StorageDead(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
      kind: drop(_8) -> [return: bb30, unwind: bb36]
  }
  preds [bb21]
  succs [bb30, bb36]

bb23
  0: StorageLive(_56)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2141:23-2141:44)
  1: StorageLive(_57)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2141:23-2141:27)
  2: _57 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2141:23-2141:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2141:23-2141:44)
      kind: _56 = hybrid::dfa::Lazy::<'_, '_>::saved_state_id(move _57) -> [return: bb25, unwind: bb34]
  }
  preds [bb20]
  succs [bb25, bb34]

bb24
  0: _54 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2142:10-2142:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2140:9-2142:10)
      kind: goto -> bb26
  }
  preds [bb20]
  succs [bb26]

bb25
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2141:43-2141:44)
  1: _2 = move _56
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2141:13-2141:44)
  2: StorageDead(_56)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2141:43-2141:44)
  3: _54 = const ()
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2140:23-2142:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2140:9-2142:10)
      kind: goto -> bb26
  }
  preds [bb23]
  succs [bb26]

bb26
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2142:9-2142:10)
  1: StorageDead(_54)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2142:9-2142:10)
  2: StorageLive(_58)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:9-2146:49)
  3: StorageLive(_59)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:9-2146:13)
  4: _59 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:9-2146:13)
  5: StorageLive(_60)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:29-2146:36)
  6: _60 = _2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:29-2146:36)
  7: StorageLive(_61)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:38-2146:42)
  8: _61 = _3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:38-2146:42)
  9: StorageLive(_62)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:44-2146:48)
  10: _62 = _43
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:44-2146:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:9-2146:49)
      kind: _58 = hybrid::dfa::Lazy::<'_, '_>::set_transition(move _59, move _60, move _61, move _62) -> [return: bb27, unwind: bb34]
  }
  preds [bb24, bb25]
  succs [bb27, bb34]

bb27
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:48-2146:49)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:48-2146:49)
  2: StorageDead(_60)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:48-2146:49)
  3: StorageDead(_59)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:48-2146:49)
  4: StorageDead(_58)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2146:49-2146:50)
  5: StorageLive(_63)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2147:12-2147:16)
  6: _63 = _43
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2147:12-2147:16)
  7: _0 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::CacheError>::Ok(move _63)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2147:9-2147:17)
  8: StorageDead(_63)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2147:16-2147:17)
  9: StorageDead(_43)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
  10: StorageDead(_31)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
      kind: drop(_8) -> [return: bb28, unwind: bb36]
  }
  preds [bb26]
  succs [bb28, bb36]

bb28
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
      kind: drop(_6) -> [return: bb29, unwind: bb37]
  }
  preds [bb27]
  succs [bb29, bb37]

bb29
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:6-2148:6)
      kind: goto -> bb32
  }
  preds [bb28]
  succs [bb32]

bb30
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
      kind: drop(_6) -> [return: bb31, unwind: bb37]
  }
  preds [bb22]
  succs [bb31, bb37]

bb31
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:6-2148:6)
      kind: goto -> bb32
  }
  preds [bb30]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:6-2148:6)
      kind: return
  }
  preds [bb29, bb31]
  succs []

bb33
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2139:61-2139:62)
      kind: drop(_47) -> [return: bb34, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb34]

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
      kind: drop(_8) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb9, bb10, bb12, bb16, bb21, bb23, bb26, bb33]
  succs [bb36]

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2134:9-2134:10)
      kind: drop(_30) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2148:5-2148:6)
      kind: drop(_6) -> [return: bb37, unwind terminate(cleanup)]
  }
  preds [bb2, bb3, bb4, bb5, bb6, bb7, bb22, bb27, bb34, bb35]
  succs [bb37]

bb37
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2119:5-2148:6)
      kind: resume
  }
  preds [bb0, bb1, bb28, bb30, bb36]
  succs []

