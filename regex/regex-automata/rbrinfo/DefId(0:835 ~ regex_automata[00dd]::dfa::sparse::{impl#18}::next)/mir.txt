bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:9-2291:10)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:21-2281:38)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:22-2281:33)
  5: _7 = ((*_1).2: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:22-2281:33)
  6: _8 = SubWithOverflow(_7, const 1_usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:21-2281:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2281:21-2281:38)
      kind: assert(!move (_8.1: bool), "attempt to compute `{} - {}`, which would overflow", move _7, const 1_usize) -> [success: bb1, unwind: bb18]
  }
  preds []
  succs [bb1, bb18]

bb1
  0: _6 = move (_8.0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:21-2281:38)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:37-2281:38)
  2: _5 = core::ops::Range::<usize> { start: const 0_usize, end: move _6 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:37-2281:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
      kind: _4 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _5) -> [return: bb2, unwind: bb18]
  }
  preds [bb0]
  succs [bb2, bb18]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:37-2281:38)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  3: _9 = move _4
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2281:9-2291:10)
      kind: goto -> bb3
  }
  preds [bb1]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2281:9-2291:10)
      kind: falseUnwind -> [real: bb4, unwind: bb18]
  }
  preds [bb2, bb16]
  succs [bb4, bb18]

bb4
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  1: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  4: _14 = &mut _9
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  5: _13 = &mut (*_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
      kind: _12 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _13) -> [return: bb5, unwind: bb18]
  }
  preds [bb3]
  succs [bb5, bb18]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:37-2281:38)
  1: PlaceMention(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  2: _15 = discriminant(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
      kind: switchInt(move _15) -> [0: bb7, 1: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2281:18-2281:38)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2281:9-2291:10)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:13-2281:14)
  1: _17 = ((_12 as Some).0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:13-2281:14)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2282:32-2282:45)
  3: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2282:32-2282:36)
  4: _21 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2282:32-2282:36)
  5: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2282:43-2282:44)
  6: _22 = _17
    SourceInfo(regex-automata/src/dfa/sparse.rs:2282:43-2282:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2282:32-2282:45)
      kind: _20 = dfa::sparse::State::<'_>::range(move _21, move _22) -> [return: bb10, unwind: bb18]
  }
  preds [bb5, bb7]
  succs [bb10, bb18]

bb9
  0: _3 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:9-2291:10)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  5: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  6: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  7: _0 = const dfa::DEAD
    SourceInfo(regex-automata/src/dfa/sparse.rs:2292:9-2292:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2293:6-2293:6)
      kind: goto -> bb17
  }
  preds [bb7]
  succs [bb17]

bb10
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2282:44-2282:45)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2282:44-2282:45)
  2: PlaceMention(_20)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2282:32-2282:45)
  3: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2282:18-2282:23)
  4: _18 = (_20.0: u8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2282:18-2282:23)
  5: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2282:25-2282:28)
  6: _19 = (_20.1: u8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2282:25-2282:28)
  7: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2282:45-2282:46)
  8: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:16-2283:30)
  9: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:16-2283:21)
  10: _24 = _18
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:16-2283:21)
  11: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:25-2283:30)
  12: _25 = _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:25-2283:30)
  13: _23 = Le(move _24, move _25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:16-2283:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2283:16-2283:30)
      kind: switchInt(move _23) -> [0: bb15, otherwise: bb11]
  }
  preds [bb8]
  succs [bb11, bb15]

bb11
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:29-2283:30)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:29-2283:30)
  2: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:34-2283:46)
  3: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:34-2283:39)
  4: _27 = _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:34-2283:39)
  5: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:43-2283:46)
  6: _28 = _19
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:43-2283:46)
  7: _26 = Le(move _27, move _28)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:34-2283:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2283:34-2283:46)
      kind: switchInt(move _26) -> [0: bb14, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb14]

bb12
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:45-2283:46)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:45-2283:46)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2284:24-2284:28)
  3: _30 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2284:24-2284:28)
  4: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2284:37-2284:38)
  5: _31 = _17
    SourceInfo(regex-automata/src/dfa/sparse.rs:2284:37-2284:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2284:24-2284:39)
      kind: _0 = dfa::sparse::State::<'_>::next_at(move _30, move _31) -> [return: bb13, unwind: bb18]
  }
  preds [bb11]
  succs [bb13, bb18]

bb13
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2284:38-2284:39)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2284:38-2284:39)
  2: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2285:13-2285:14)
  3: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2285:13-2285:14)
  4: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  5: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  6: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  7: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  8: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  9: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  10: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  11: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  12: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2293:6-2293:6)
      kind: goto -> bb17
  }
  preds [bb12]
  succs [bb17]

bb14
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:45-2283:46)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:45-2283:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb16
  }
  preds [bb11]
  succs [bb16]

bb15
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:29-2283:30)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2283:29-2283:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb16
  }
  preds [bb10]
  succs [bb16]

bb16
  0: _11 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:2285:14-2285:14)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2285:13-2285:14)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2285:13-2285:14)
  3: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  4: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  5: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  6: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  7: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  8: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:2291:9-2291:10)
  9: _10 = const ()
    SourceInfo(regex-automata/src/dfa/sparse.rs:2281:9-2291:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2281:9-2291:10)
      kind: goto -> bb3
  }
  preds [bb14, bb15]
  succs [bb3]

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2293:6-2293:6)
      kind: return
  }
  preds [bb9, bb13]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:2275:5-2293:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb4, bb8, bb12]
  succs []

