bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:13-1115:15)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1116:74)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1116:73)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1115:49)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:31-1115:48)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:31-1115:42)
  6: _8 = &((*_1).1: std::vec::Vec<nfa::thompson::builder::State>)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:31-1115:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:31-1115:48)
      kind: _7 = std::vec::Vec::<nfa::thompson::builder::State>::len(move _8) -> [return: bb1, unwind: bb37]
  }
  preds []
  succs [bb1, bb37]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:47-1115:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1115:49)
      kind: _6 = util::primitives::StateID::new(move _7) -> [return: bb2, unwind: bb37]
  }
  preds [bb0]
  succs [bb2, bb37]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:48-1115:49)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:22-1116:72)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:22-1116:72)
  3: _10 = &((*_1).1: std::vec::Vec<nfa::thompson::builder::State>)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:22-1116:72)
  4: _9 = {closure@regex-automata/src/nfa/thompson/builder.rs:1116:22: 1116:25} { self: move _10 }
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:22-1116:72)
  5: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:24-1116:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1116:73)
      kind: _5 = core::result::Result::<util::primitives::StateID, util::primitives::StateIDError>::map_err::<nfa::thompson::error::BuildError, {closure@regex-automata/src/nfa/thompson/builder.rs:1116:22: 1116:25}>(move _6, move _9) -> [return: bb3, unwind: bb37]
  }
  preds [bb1]
  succs [bb3, bb37]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:72-1116:73)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:72-1116:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1116:74)
      kind: _4 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _5) -> [return: bb4, unwind: bb36]
  }
  preds [bb2]
  succs [bb4, bb36]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:73-1116:74)
  1: PlaceMention(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1116:74)
  2: _11 = discriminant(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1116:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1116:74)
      kind: switchInt(move _11) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1116:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1116:74)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:73-1116:74)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1116:74)
  1: _15 = ((_4 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1116:74)
  2: _3 = _15
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1116:74)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:73-1116:74)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:13-1115:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:74-1116:75)
      kind: drop(_4) -> [return: bb10, unwind: bb37]
  }
  preds [bb4, bb6]
  succs [bb10, bb37]

bb8
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:73-1116:74)
  1: _12 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:73-1116:74)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:73-1116:74)
  3: _14 = move _12
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:73-1116:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1115:18-1116:74)
      kind: _0 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _14) -> [return: bb9, unwind: bb33]
  }
  preds [bb6]
  succs [bb9, bb33]

bb9
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:73-1116:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:73-1116:74)
      kind: drop(_12) -> [return: bb24, unwind: bb35]
  }
  preds [bb8]
  succs [bb24, bb35]

bb10
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:74-1116:75)
  1: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1117:31-1117:51)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1117:31-1117:36)
  3: _17 = &_2
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1117:31-1117:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1117:31-1117:51)
      kind: _16 = nfa::thompson::builder::State::memory_usage(move _17) -> [return: bb11, unwind: bb37]
  }
  preds [bb7]
  succs [bb11, bb37]

bb11
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1117:50-1117:51)
  1: _18 = AddWithOverflow(((*_1).4: usize), _16)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1117:9-1117:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1117:9-1117:51)
      kind: assert(!move (_18.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).4: usize), move _16) -> [success: bb12, unwind: bb37]
  }
  preds [bb10]
  succs [bb12, bb37]

bb12
  0: ((*_1).4: usize) = move (_18.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1117:9-1117:51)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1117:50-1117:51)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1118:9-1118:32)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1118:9-1118:20)
  4: _20 = &mut ((*_1).1: std::vec::Vec<nfa::thompson::builder::State>)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1118:9-1118:20)
  5: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1118:26-1118:31)
  6: _21 = move _2
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1118:26-1118:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1118:9-1118:32)
      kind: _19 = std::vec::Vec::<nfa::thompson::builder::State>::push(move _20, move _21) -> [return: bb13, unwind: bb32]
  }
  preds [bb11]
  succs [bb13, bb32]

bb13
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1118:31-1118:32)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1118:31-1118:32)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1118:32-1118:33)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:33)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:33)
  5: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:32)
  6: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:13)
  7: _25 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:32)
      kind: _24 = nfa::thompson::builder::Builder::check_size_limit(move _25) -> [return: bb14, unwind: bb37]
  }
  preds [bb12]
  succs [bb14, bb37]

bb14
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:31-1119:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:33)
      kind: _23 = <core::result::Result<(), nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _24) -> [return: bb15, unwind: bb31]
  }
  preds [bb13]
  succs [bb15, bb31]

bb15
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:32-1119:33)
  1: PlaceMention(_23)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:33)
  2: _26 = discriminant(_23)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:33)
      kind: switchInt(move _26) -> [0: bb18, 1: bb17, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb17, bb18]

bb16
  0: FakeRead(ForMatchedPlace(None), _23)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:33)
      kind: unreachable
  }
  preds [bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:32-1119:33)
      kind: falseEdge -> [real: bb19, imaginary: bb18]
  }
  preds [bb15]
  succs [bb18, bb19]

bb18
  0: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:33)
  1: _30 = ((_23 as Continue).0: ())
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:33)
  2: _22 = _30
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:33)
  3: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:32-1119:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:33-1119:34)
      kind: drop(_23) -> [return: bb21, unwind: bb37]
  }
  preds [bb15, bb17]
  succs [bb21, bb37]

bb19
  0: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:32-1119:33)
  1: _27 = move ((_23 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:32-1119:33)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:32-1119:33)
  3: _29 = move _27
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:32-1119:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:9-1119:33)
      kind: _0 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _29) -> [return: bb20, unwind: bb28]
  }
  preds [bb17]
  succs [bb20, bb28]

bb20
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:32-1119:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:32-1119:33)
      kind: drop(_27) -> [return: bb22, unwind: bb30]
  }
  preds [bb19]
  succs [bb22, bb30]

bb21
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:33-1119:34)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:33-1119:34)
  2: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1120:12-1120:14)
  3: _31 = _3
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1120:12-1120:14)
  4: _0 = core::result::Result::<util::primitives::StateID, nfa::thompson::error::BuildError>::Ok(move _31)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1120:9-1120:15)
  5: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1120:14-1120:15)
  6: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1121:5-1121:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1121:5-1121:6)
      kind: drop(_2) -> [return: bb27, unwind: bb38]
  }
  preds [bb18]
  succs [bb27, bb38]

bb22
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:32-1119:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:33-1119:34)
      kind: drop(_23) -> [return: bb23, unwind: bb37]
  }
  preds [bb20]
  succs [bb23, bb37]

bb23
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:33-1119:34)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:33-1119:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb26
  }
  preds [bb22]
  succs [bb26]

bb24
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:73-1116:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:74-1116:75)
      kind: drop(_4) -> [return: bb25, unwind: bb37]
  }
  preds [bb9]
  succs [bb25, bb37]

bb25
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:74-1116:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb26
  }
  preds [bb24]
  succs [bb26]

bb26
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1121:5-1121:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1121:5-1121:6)
      kind: drop(_2) -> [return: bb27, unwind: bb38]
  }
  preds [bb23, bb25]
  succs [bb27, bb38]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1121:6-1121:6)
      kind: return
  }
  preds [bb21, bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:32-1119:33)
      kind: drop(_29) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:32-1119:33)
      kind: drop(_27) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb28]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:33-1119:34)
      kind: drop(_23) -> [return: bb37, unwind terminate(cleanup)]
  }
  preds [bb20, bb29]
  succs [bb37]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1119:32-1119:33)
      kind: drop(_24) -> [return: bb37, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb37]

bb32
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1118:31-1118:32)
      kind: drop(_21) -> [return: bb37, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb37]

bb33
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:73-1116:74)
      kind: drop(_14) -> [return: bb34, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb34]

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:73-1116:74)
      kind: drop(_12) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb33]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:74-1116:75)
      kind: drop(_4) -> [return: bb37, unwind terminate(cleanup)]
  }
  preds [bb9, bb34]
  succs [bb37]

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1116:73-1116:74)
      kind: drop(_5) -> [return: bb37, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb37]

bb37
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1121:5-1121:6)
      kind: drop(_2) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb7, bb10, bb11, bb13, bb18, bb22, bb24, bb30, bb31, bb32, bb35, bb36]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/builder.rs:1114:5-1121:6)
      kind: resume
  }
  preds [bb21, bb26, bb37]
  succs []

