bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:384:9-386:10)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:384:12-384:27)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:384:12-384:17)
  3: _6 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:384:12-384:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:384:12-384:27)
      kind: _5 = util::search::Input::<'_>::is_done(move _6) -> [return: bb1, unwind: bb17]
  }
  preds []
  succs [bb1, bb17]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:384:12-384:27)
      kind: switchInt(move _5) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:384:26-384:27)
  1: _0 = core::option::Option::<util::search::Match>::None
    SourceInfo(regex-automata/src/meta/strategy.rs:385:20-385:24)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:386:9-386:10)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:386:9-386:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb16
  }
  preds [bb1]
  succs [bb16]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:384:26-384:27)
  1: _4 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:386:10-386:10)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:386:9-386:10)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:386:9-386:10)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:387:9-392:10)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:387:12-387:46)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:387:12-387:32)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:387:12-387:32)
  8: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:387:12-387:17)
  9: _12 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:387:12-387:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:387:12-387:32)
      kind: _11 = util::search::Input::<'_>::get_anchored(move _12) -> [return: bb4, unwind: bb17]
  }
  preds [bb1]
  succs [bb4, bb17]

bb4
  0: _10 = &_11
    SourceInfo(regex-automata/src/meta/strategy.rs:387:12-387:32)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/strategy.rs:387:31-387:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:387:12-387:46)
      kind: _9 = util::search::Anchored::is_anchored(move _10) -> [return: bb5, unwind: bb17]
  }
  preds [bb3]
  succs [bb5, bb17]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:387:12-387:46)
      kind: switchInt(move _9) -> [0: bb11, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb11]

bb6
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:387:45-387:46)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:387:45-387:46)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:388:20-390:60)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:388:20-389:21)
  4: _15 = &((*_1).0: P)
    SourceInfo(regex-automata/src/meta/strategy.rs:388:20-389:21)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:390:25-390:41)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:390:25-390:41)
  7: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:390:25-390:30)
  8: _18 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:390:25-390:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:390:25-390:41)
      kind: _17 = util::search::Input::<'_>::haystack(move _18) -> [return: bb7, unwind: bb17]
  }
  preds [bb5]
  succs [bb7, bb17]

bb7
  0: _16 = &(*_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:390:25-390:41)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:390:40-390:41)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:390:43-390:59)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:390:43-390:48)
  4: _20 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:390:43-390:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:390:43-390:59)
      kind: _19 = util::search::Input::<'_>::get_span(move _20) -> [return: bb8, unwind: bb17]
  }
  preds [bb6]
  succs [bb8, bb17]

bb8
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:390:58-390:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:388:20-390:60)
      kind: _14 = <P as util::prefilter::PrefilterI>::prefix(move _15, move _16, move _19) -> [return: bb9, unwind: bb17]
  }
  preds [bb7]
  succs [bb9, bb17]

bb9
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:390:59-390:60)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:390:59-390:60)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:390:59-390:60)
  3: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:391:22-391:58)
  4: _21 = {closure@regex-automata/src/meta/strategy.rs:391:22: 391:26}
    SourceInfo(regex-automata/src/meta/strategy.rs:391:22-391:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:388:20-391:59)
      kind: _0 = core::option::Option::<util::search::Span>::map::<util::search::Match, {closure@regex-automata/src/meta/strategy.rs:391:22: 391:26}>(move _14, move _21) -> [return: bb10, unwind: bb17]
  }
  preds [bb8]
  succs [bb10, bb17]

bb10
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/strategy.rs:391:58-391:59)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:391:58-391:59)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:391:59-391:60)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:392:9-392:10)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:392:9-392:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb16
  }
  preds [bb9]
  succs [bb16]

bb11
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:387:45-387:46)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:387:45-387:46)
  2: _8 = const ()
    SourceInfo(regex-automata/src/meta/strategy.rs:392:10-392:10)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:392:9-392:10)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:392:9-392:10)
  5: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:393:9-394:54)
  6: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:393:9-393:17)
  7: _23 = &((*_1).0: P)
    SourceInfo(regex-automata/src/meta/strategy.rs:393:9-393:17)
  8: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:394:19-394:35)
  9: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:394:19-394:35)
  10: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:394:19-394:24)
  11: _26 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:394:19-394:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:394:19-394:35)
      kind: _25 = util::search::Input::<'_>::haystack(move _26) -> [return: bb12, unwind: bb17]
  }
  preds [bb5]
  succs [bb12, bb17]

bb12
  0: _24 = &(*_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:394:19-394:35)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:394:34-394:35)
  2: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:394:37-394:53)
  3: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:394:37-394:42)
  4: _28 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:394:37-394:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:394:37-394:53)
      kind: _27 = util::search::Input::<'_>::get_span(move _28) -> [return: bb13, unwind: bb17]
  }
  preds [bb11]
  succs [bb13, bb17]

bb13
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/strategy.rs:394:52-394:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:393:9-394:54)
      kind: _22 = <P as util::prefilter::PrefilterI>::find(move _23, move _24, move _27) -> [return: bb14, unwind: bb17]
  }
  preds [bb12]
  succs [bb14, bb17]

bb14
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:394:53-394:54)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:394:53-394:54)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:394:53-394:54)
  3: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:395:18-395:54)
  4: _29 = {closure@regex-automata/src/meta/strategy.rs:395:18: 395:22}
    SourceInfo(regex-automata/src/meta/strategy.rs:395:18-395:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:393:9-395:55)
      kind: _0 = core::option::Option::<util::search::Span>::map::<util::search::Match, {closure@regex-automata/src/meta/strategy.rs:395:18: 395:22}>(move _22, move _29) -> [return: bb15, unwind: bb17]
  }
  preds [bb13]
  succs [bb15, bb17]

bb15
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/strategy.rs:395:54-395:55)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:395:54-395:55)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:396:5-396:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:396:6-396:6)
      kind: goto -> bb16
  }
  preds [bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:396:6-396:6)
      kind: return
  }
  preds [bb2, bb10, bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:383:5-396:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb6, bb7, bb8, bb9, bb11, bb12, bb13, bb14]
  succs []

