{
  "regex-automata/src/dfa/accel.rs:269:12:269:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "i >= self.len()",
          "lhs": "i",
          "rhs": "self.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/accel.rs:275:28:275:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "offset + 1",
          "lhs": "offset",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/dfa/accel.rs:273:22:273:51": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "ACCEL_TY_SIZE + i * ACCEL_CAP",
          "lhs": "ACCEL_TY_SIZE",
          "rhs": "i * ACCEL_CAP",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/accel.rs:273:38:273:51": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "i * ACCEL_CAP",
          "lhs": "i",
          "rhs": "ACCEL_CAP",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/accel.rs:275:28:275:44": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "offset + 1 + len",
          "lhs": "offset + 1",
          "rhs": "len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/accel.rs:275:16:275:26": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "offset + 1",
          "lhs": "offset",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ]
}