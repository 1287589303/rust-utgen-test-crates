bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/pool.rs:524:17-524:23)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/pool.rs:524:26-524:35)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/pool.rs:524:26-524:35)
  3: _4 = const util::pool::inner::THREAD_ID
    SourceInfo(regex-automata/src/util/pool.rs:524:26-524:35)
  4: _3 = &_4
    SourceInfo(regex-automata/src/util/pool.rs:524:26-524:35)
  5: StorageLive(_5)
    SourceInfo(regex-automata/src/util/pool.rs:524:41-524:49)
  6: _5 = {closure@regex-automata/src/util/pool.rs:524:41: 524:45}
    SourceInfo(regex-automata/src/util/pool.rs:524:41-524:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:524:26-524:50)
      kind: _2 = std::thread::LocalKey::<usize>::with::<{closure@regex-automata/src/util/pool.rs:524:41: 524:45}, usize>(move _3, move _5) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/pool.rs:524:49-524:50)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/util/pool.rs:524:49-524:50)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/util/pool.rs:524:17-524:23)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/util/pool.rs:524:50-524:51)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/util/pool.rs:525:17-525:22)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/util/pool.rs:525:25-525:35)
  6: _7 = &((*_1).2: core::sync::atomic::AtomicUsize)
    SourceInfo(regex-automata/src/util/pool.rs:525:25-525:35)
  7: StorageLive(_8)
    SourceInfo(regex-automata/src/util/pool.rs:525:41-525:58)
  8: _8 = core::sync::atomic::Ordering::Acquire
    SourceInfo(regex-automata/src/util/pool.rs:525:41-525:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:525:25-525:59)
      kind: _6 = core::sync::atomic::AtomicUsize::load(move _7, move _8) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/pool.rs:525:58-525:59)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/pool.rs:525:58-525:59)
  2: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/util/pool.rs:525:17-525:22)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/util/pool.rs:526:13-532:14)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/util/pool.rs:526:16-526:31)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/util/pool.rs:526:16-526:22)
  6: _11 = _2
    SourceInfo(regex-automata/src/util/pool.rs:526:16-526:22)
  7: StorageLive(_12)
    SourceInfo(regex-automata/src/util/pool.rs:526:26-526:31)
  8: _12 = _6
    SourceInfo(regex-automata/src/util/pool.rs:526:26-526:31)
  9: _10 = Eq(move _11, move _12)
    SourceInfo(regex-automata/src/util/pool.rs:526:16-526:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:526:16-526:31)
      kind: switchInt(move _10) -> [0: bb6, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/pool.rs:526:30-526:31)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/util/pool.rs:526:30-526:31)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/util/pool.rs:530:17-530:69)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/util/pool.rs:530:17-530:27)
  4: _15 = &((*_1).2: core::sync::atomic::AtomicUsize)
    SourceInfo(regex-automata/src/util/pool.rs:530:17-530:27)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/util/pool.rs:530:34-530:49)
  6: StorageLive(_17)
    SourceInfo(regex-automata/src/util/pool.rs:530:34-530:49)
  7: _17 = const {alloc49: &usize}
    SourceInfo(regex-automata/src/util/pool.rs:530:34-530:49)
  8: _16 = (*_17)
    SourceInfo(regex-automata/src/util/pool.rs:530:34-530:49)
  9: StorageLive(_18)
    SourceInfo(regex-automata/src/util/pool.rs:530:51-530:68)
  10: _18 = core::sync::atomic::Ordering::Release
    SourceInfo(regex-automata/src/util/pool.rs:530:51-530:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:530:17-530:69)
      kind: _14 = core::sync::atomic::AtomicUsize::store(move _15, move _16, move _18) -> [return: bb4, unwind: bb9]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/util/pool.rs:530:68-530:69)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/util/pool.rs:530:68-530:69)
  2: StorageDead(_15)
    SourceInfo(regex-automata/src/util/pool.rs:530:68-530:69)
  3: StorageDead(_17)
    SourceInfo(regex-automata/src/util/pool.rs:530:69-530:70)
  4: StorageDead(_14)
    SourceInfo(regex-automata/src/util/pool.rs:530:69-530:70)
  5: StorageLive(_19)
    SourceInfo(regex-automata/src/util/pool.rs:531:24-531:28)
  6: _19 = &(*_1)
    SourceInfo(regex-automata/src/util/pool.rs:531:24-531:28)
  7: StorageLive(_20)
    SourceInfo(regex-automata/src/util/pool.rs:531:41-531:47)
  8: _20 = _2
    SourceInfo(regex-automata/src/util/pool.rs:531:41-531:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:531:24-531:48)
      kind: _0 = util::pool::inner::Pool::<T, F>::guard_owned(move _19, move _20) -> [return: bb5, unwind: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/util/pool.rs:531:47-531:48)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/util/pool.rs:531:47-531:48)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/util/pool.rs:532:13-532:14)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/util/pool.rs:532:13-532:14)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/util/pool.rs:534:9-534:10)
  5: StorageDead(_2)
    SourceInfo(regex-automata/src/util/pool.rs:534:9-534:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:534:10-534:10)
      kind: goto -> bb8
  }
  preds [bb4]
  succs [bb8]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/util/pool.rs:526:30-526:31)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/util/pool.rs:526:30-526:31)
  2: _9 = const ()
    SourceInfo(regex-automata/src/util/pool.rs:532:14-532:14)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/util/pool.rs:532:13-532:14)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/util/pool.rs:532:13-532:14)
  5: StorageLive(_21)
    SourceInfo(regex-automata/src/util/pool.rs:533:13-533:17)
  6: _21 = &(*_1)
    SourceInfo(regex-automata/src/util/pool.rs:533:13-533:17)
  7: StorageLive(_22)
    SourceInfo(regex-automata/src/util/pool.rs:533:27-533:33)
  8: _22 = _2
    SourceInfo(regex-automata/src/util/pool.rs:533:27-533:33)
  9: StorageLive(_23)
    SourceInfo(regex-automata/src/util/pool.rs:533:35-533:40)
  10: _23 = _6
    SourceInfo(regex-automata/src/util/pool.rs:533:35-533:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:533:13-533:41)
      kind: _0 = util::pool::inner::Pool::<T, F>::get_slow(move _21, move _22, move _23) -> [return: bb7, unwind: bb9]
  }
  preds [bb2]
  succs [bb7, bb9]

bb7
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/util/pool.rs:533:40-533:41)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/util/pool.rs:533:40-533:41)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/util/pool.rs:533:40-533:41)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/util/pool.rs:534:9-534:10)
  4: StorageDead(_2)
    SourceInfo(regex-automata/src/util/pool.rs:534:9-534:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:534:10-534:10)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:534:10-534:10)
      kind: return
  }
  preds [bb5, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/pool.rs:510:9-534:10)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb4, bb6]
  succs []

