bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:13-894:17)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:38-894:73)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:38-894:65)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:38-894:65)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:38-894:52)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:38-894:52)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:38-894:42)
  7: _10 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:38-894:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:38-894:52)
      kind: _9 = nfa::thompson::pikevm::PikeVM::get_nfa(move _10) -> [return: bb1, unwind: bb13]
  }
  preds []
  succs [bb1, bb13]

bb1
  0: _8 = &(*_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:38-894:52)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:51-894:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:38-894:65)
      kind: _7 = nfa::thompson::nfa::NFA::group_info(move _8) -> [return: bb2, unwind: bb13]
  }
  preds [bb0]
  succs [bb2, bb13]

bb2
  0: _6 = &(*_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:38-894:65)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:64-894:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:38-894:73)
      kind: _5 = <util::captures::GroupInfo as core::clone::Clone>::clone(move _6) -> [return: bb3, unwind: bb13]
  }
  preds [bb1]
  succs [bb3, bb13]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:72-894:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:20-894:74)
      kind: _4 = util::captures::Captures::matches(move _5) -> [return: bb4, unwind: bb12]
  }
  preds [bb2]
  succs [bb4, bb12]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:73-894:74)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:13-894:17)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:74-894:75)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:74-894:75)
  4: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:895:13-895:15)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:895:38-895:50)
  6: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:895:38-895:43)
  7: _13 = move _3
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:895:38-895:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:895:38-895:50)
      kind: _12 = <I as core::convert::Into<util::search::Input<'_>>>::into(move _13) -> [return: bb5, unwind: bb10]
  }
  preds [bb3]
  succs [bb5, bb10]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:895:49-895:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:895:18-895:51)
      kind: _11 = util::iter::Searcher::<'_>::new(move _12) -> [return: bb6, unwind: bb11]
  }
  preds [bb4]
  succs [bb6, bb11]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:895:50-895:51)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:895:13-895:15)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:896:27-896:31)
  3: _14 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:896:27-896:31)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:896:33-896:38)
  5: _15 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:896:33-896:38)
  6: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:896:40-896:44)
  7: _16 = move _4
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:896:40-896:44)
  8: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:896:46-896:48)
  9: _17 = move _11
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:896:46-896:48)
  10: _0 = nfa::thompson::pikevm::FindMatches::<'_, '_, '_> { re: move _14, cache: move _15, caps: move _16, it: move _17 }
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:896:9-896:50)
  11: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:896:49-896:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:896:49-896:50)
      kind: drop(_16) -> [return: bb7, unwind: bb11]
  }
  preds [bb5]
  succs [bb7, bb11]

bb7
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:896:49-896:50)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:896:49-896:50)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:896:49-896:50)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:897:5-897:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:897:5-897:6)
      kind: drop(_4) -> [return: bb8, unwind: bb13]
  }
  preds [bb6]
  succs [bb8, bb13]

bb8
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:897:5-897:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:897:5-897:6)
      kind: drop(_3) -> [return: bb9, unwind: bb14]
  }
  preds [bb7]
  succs [bb9, bb14]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:897:6-897:6)
      kind: return
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:895:49-895:50)
      kind: drop(_13) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:897:5-897:6)
      kind: drop(_4) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb5, bb6, bb10]
  succs [bb13]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:894:73-894:74)
      kind: drop(_5) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:897:5-897:6)
      kind: drop(_3) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb7, bb11, bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:889:5-897:6)
      kind: resume
  }
  preds [bb8, bb13]
  succs []

