bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/accel.rs:282:9-282:49)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/accel.rs:282:25-282:48)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/accel.rs:282:25-282:45)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/accel.rs:282:25-282:36)
  4: _5 = &((*_1).0: A)
    SourceInfo(regex-automata/src/dfa/accel.rs:282:25-282:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:282:25-282:45)
      kind: _4 = <A as core::convert::AsRef<[u32]>>::as_ref(move _5) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/accel.rs:282:44-282:45)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/accel.rs:282:46-282:47)
  2: _6 = const 0_usize
    SourceInfo(regex-automata/src/dfa/accel.rs:282:46-282:47)
  3: _7 = Len((*_4))
    SourceInfo(regex-automata/src/dfa/accel.rs:282:25-282:48)
  4: _8 = Lt(_6, _7)
    SourceInfo(regex-automata/src/dfa/accel.rs:282:25-282:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:282:25-282:48)
      kind: assert(move _8, "index out of bounds: the length is {} but the index is {}", move _7, _6) -> [success: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: _3 = (*_4)[_6]
    SourceInfo(regex-automata/src/dfa/accel.rs:282:25-282:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:282:9-282:49)
      kind: _2 = <usize as core::convert::TryFrom<u32>>::try_from(move _3) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/accel.rs:282:48-282:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:282:9-282:58)
      kind: _0 = core::result::Result::<usize, core::num::TryFromIntError>::unwrap(move _2) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/accel.rs:282:57-282:58)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/accel.rs:283:5-283:6)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/accel.rs:283:5-283:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:283:6-283:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:279:5-283:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

