bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:15-2842:57)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:34-2842:38)
  2: _3 = &mut (*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:34-2842:38)
  3: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:40-2842:56)
  4: _4 = hybrid::dfa::StateSaver::None
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:40-2842:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:15-2842:57)
      kind: _2 = core::mem::replace::<hybrid::dfa::StateSaver>(move _3, move _4) -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:56-2842:57)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:56-2842:57)
  2: PlaceMention(_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:15-2842:57)
  3: _5 = discriminant(_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:15-2842:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:9-2842:57)
      kind: switchInt(move _5) -> [0: bb3, 1: bb5, 2: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb5]

bb2
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:15-2842:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:15-2842:57)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2843:13-2843:29)
      kind: falseEdge -> [real: bb6, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb6]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2844:13-2844:34)
      kind: falseEdge -> [real: bb8, imaginary: bb5]
  }
  preds [bb1, bb3]
  succs [bb5, bb8]

bb5
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2844:58-2844:60)
  1: _6 = ((_2 as ToSave).0: hybrid::id::LazyStateID)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2844:58-2844:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:9-2845:10)
      kind: goto -> bb7
  }
  preds [bb1, bb4]
  succs [bb7]

bb6
  0: _0 = core::option::Option::<hybrid::id::LazyStateID>::None
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2843:33-2843:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2843:33-2843:37)
      kind: goto -> bb9
  }
  preds [bb3]
  succs [bb9]

bb7
  0: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2844:75-2844:77)
  1: _7 = _6
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2844:75-2844:77)
  2: _0 = core::option::Option::<hybrid::id::LazyStateID>::Some(move _7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2844:70-2844:78)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2844:77-2844:78)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2844:77-2844:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2844:77-2844:78)
      kind: goto -> bb9
  }
  preds [bb5, bb8]
  succs [bb9]

bb8
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2844:31-2844:33)
  1: _6 = ((_2 as Saved).0: hybrid::id::LazyStateID)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2844:31-2844:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:9-2845:10)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2846:5-2846:6)
      kind: drop(_2) -> [return: bb10, unwind: bb12]
  }
  preds [bb6, bb7]
  succs [bb10, bb12]

bb10
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2846:5-2846:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2846:6-2846:6)
      kind: return
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2842:56-2842:57)
      kind: drop(_4) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2841:5-2846:6)
      kind: resume
  }
  preds [bb9, bb11]
  succs []

