Body {
    params: [],
    value: Expr {
        hir_id: HirId(DefId(0:536 ~ regex_automata[00dd]::dfa::onepass::{impl#14}::empty).6),
        kind: Block(
            Block {
                stmts: [],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:536 ~ regex_automata[00dd]::dfa::onepass::{impl#14}::empty).1),
                        kind: Call(
                            Expr {
                                hir_id: HirId(DefId(0:536 ~ regex_automata[00dd]::dfa::onepass::{impl#14}::empty).2),
                                kind: Path(
                                    Resolved(
                                        None,
                                        Path {
                                            span: regex-automata/src/dfa/onepass.rs:2795:9: 2795:17 (#0),
                                            res: Def(
                                                Ctor(
                                                    Struct,
                                                    Fn,
                                                ),
                                                DefId(0:4712 ~ regex_automata[00dd]::dfa::onepass::Epsilons::{constructor#0}),
                                            ),
                                            segments: [
                                                PathSegment {
                                                    ident: Epsilons#0,
                                                    hir_id: HirId(DefId(0:536 ~ regex_automata[00dd]::dfa::onepass::{impl#14}::empty).3),
                                                    res: Def(
                                                        Ctor(
                                                            Struct,
                                                            Fn,
                                                        ),
                                                        DefId(0:4712 ~ regex_automata[00dd]::dfa::onepass::Epsilons::{constructor#0}),
                                                    ),
                                                    args: None,
                                                    infer_args: true,
                                                },
                                            ],
                                        },
                                    ),
                                ),
                                span: regex-automata/src/dfa/onepass.rs:2795:9: 2795:17 (#0),
                            },
                            [
                                Expr {
                                    hir_id: HirId(DefId(0:536 ~ regex_automata[00dd]::dfa::onepass::{impl#14}::empty).4),
                                    kind: Lit(
                                        Spanned {
                                            node: Int(
                                                Pu128(
                                                    0,
                                                ),
                                                Unsuffixed,
                                            ),
                                            span: regex-automata/src/dfa/onepass.rs:2795:18: 2795:19 (#0),
                                        },
                                    ),
                                    span: regex-automata/src/dfa/onepass.rs:2795:18: 2795:19 (#0),
                                },
                            ],
                        ),
                        span: regex-automata/src/dfa/onepass.rs:2795:9: 2795:20 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:536 ~ regex_automata[00dd]::dfa::onepass::{impl#14}::empty).5),
                rules: DefaultBlock,
                span: regex-automata/src/dfa/onepass.rs:2794:28: 2796:6 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: regex-automata/src/dfa/onepass.rs:2794:28: 2796:6 (#0),
    },
}