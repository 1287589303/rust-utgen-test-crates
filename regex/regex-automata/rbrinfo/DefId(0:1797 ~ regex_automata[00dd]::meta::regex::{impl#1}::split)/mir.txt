bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:819:25-819:46)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:819:25-819:29)
  2: _4 = &(*_1)
    SourceInfo(regex-automata/src/meta/regex.rs:819:25-819:29)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:819:40-819:45)
  4: _5 = move _2
    SourceInfo(regex-automata/src/meta/regex.rs:819:40-819:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:819:25-819:46)
      kind: _3 = meta::regex::Regex::find_iter::<'_, I>(move _4, move _5) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:819:45-819:46)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:819:45-819:46)
  2: _0 = meta::regex::Split::<'_, '_> { finder: move _3, last: const 0_usize }
    SourceInfo(regex-automata/src/meta/regex.rs:819:9-819:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:819:56-819:57)
      kind: drop(_3) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:819:56-819:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:820:5-820:6)
      kind: drop(_2) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:820:6-820:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:819:45-819:46)
      kind: drop(_5) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:820:5-820:6)
      kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:815:5-820:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

