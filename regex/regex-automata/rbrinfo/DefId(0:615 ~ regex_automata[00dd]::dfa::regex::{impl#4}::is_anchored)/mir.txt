bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/regex.rs:540:15-540:35)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/regex.rs:540:15-540:20)
  2: _4 = &(*_2)
    SourceInfo(regex-automata/src/dfa/regex.rs:540:15-540:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:540:15-540:35)
      kind: _3 = util::search::Input::<'_>::get_anchored(move _4) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/regex.rs:540:34-540:35)
  1: PlaceMention(_3)
    SourceInfo(regex-automata/src/dfa/regex.rs:540:15-540:35)
  2: _5 = discriminant(_3)
    SourceInfo(regex-automata/src/dfa/regex.rs:540:15-540:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:540:9-540:35)
      kind: switchInt(move _5) -> [0: bb3, 1: bb4, 2: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(regex-automata/src/dfa/regex.rs:540:15-540:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:540:15-540:35)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:541:13-541:25)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: _0 = const true
    SourceInfo(regex-automata/src/dfa/regex.rs:542:53-542:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:542:53-542:57)
      kind: goto -> bb8
  }
  preds [bb1, bb1, bb3]
  succs [bb8]

bb5
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/regex.rs:541:29-541:43)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/regex.rs:541:29-541:43)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/regex.rs:541:29-541:33)
  3: _8 = &(*_1)
    SourceInfo(regex-automata/src/dfa/regex.rs:541:29-541:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:541:29-541:43)
      kind: _7 = dfa::regex::Regex::<A>::forward(move _8) -> [return: bb6, unwind: bb9]
  }
  preds [bb3]
  succs [bb6, bb9]

bb6
  0: _6 = &(*_7)
    SourceInfo(regex-automata/src/dfa/regex.rs:541:29-541:43)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/regex.rs:541:42-541:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:541:29-541:70)
      kind: _0 = <A as dfa::automaton::Automaton>::is_always_start_anchored(move _6) -> [return: bb7, unwind: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/regex.rs:541:69-541:70)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/regex.rs:541:69-541:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:541:69-541:70)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/regex.rs:544:5-544:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:544:6-544:6)
      kind: return
  }
  preds [bb4, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:539:5-544:6)
      kind: resume
  }
  preds [bb0, bb5, bb6]
  succs []

