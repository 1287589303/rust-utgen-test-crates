bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:13-2325:73)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:13-2325:64)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:13-2325:49)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:14-2325:30)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:14-2325:24)
  5: _6 = &((*_1).2: std::vec::Vec<dfa::onepass::Transition>)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:14-2325:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2325:14-2325:30)
      kind: _5 = std::vec::Vec::<dfa::onepass::Transition>::len(move _6) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:29-2325:30)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:34-2325:48)
  2: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:34-2325:38)
  3: _8 = &(*_1)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:34-2325:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2325:34-2325:48)
      kind: _7 = dfa::onepass::DFA::stride2(move _8) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:47-2325:48)
  1: _9 = Lt(_7, const 64_usize)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:13-2325:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2325:13-2325:49)
      kind: assert(move _9, "attempt to shift right by `{}`, which would overflow", _7) -> [success: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: _4 = Shr(move _5, move _7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:13-2325:49)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:48-2325:49)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:48-2325:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2325:13-2325:64)
      kind: _3 = core::num::<impl usize>::checked_sub(move _4, const 1_usize) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:63-2325:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2325:13-2325:73)
      kind: _2 = core::option::Option::<usize>::unwrap(move _3) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2325:72-2325:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2324:9-2326:10)
      kind: _0 = util::primitives::StateID::new_unchecked(move _2) -> [return: bb6, unwind: bb7]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/onepass.rs:2326:9-2326:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2327:6-2327:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/onepass.rs:2319:5-2327:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5]
  succs []

