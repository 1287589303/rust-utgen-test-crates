bb0
  0: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1551:16-1551:35)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1551:16-1551:24)
  2: _9 = &((*_1).1: nfa::thompson::nfa::NFA)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1551:16-1551:24)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1551:31-1551:34)
  4: _10 = _7
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1551:31-1551:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1551:16-1551:35)
      kind: _8 = nfa::thompson::nfa::NFA::state(move _9, move _10) -> [return: bb1, unwind: bb39]
  }
  preds []
  succs [bb1, bb39]

bb1
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1551:34-1551:35)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1551:34-1551:35)
  2: PlaceMention((*_8))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1551:15-1551:35)
  3: _11 = discriminant((*_8))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1551:15-1551:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1551:9-1551:35)
      kind: switchInt(move _11) -> [0: bb3, 1: bb4, 2: bb5, 3: bb7, 4: bb7, 5: bb7, 6: bb7, 7: bb7, 8: bb6, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb5, bb6, bb7, bb7, bb7, bb7, bb7]

bb2
  0: FakeRead(ForMatchedPlace(None), (*_8))
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1551:15-1551:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1551:15-1551:35)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1557:13-1557:43)
      kind: falseEdge -> [real: bb9, imaginary: bb4]
  }
  preds [bb1, bb7]
  succs [bb4, bb9]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1569:13-1569:38)
      kind: falseEdge -> [real: bb18, imaginary: bb5]
  }
  preds [bb1, bb3]
  succs [bb5, bb18]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1581:13-1581:36)
      kind: falseEdge -> [real: bb28, imaginary: bb6]
  }
  preds [bb1, bb4]
  succs [bb6, bb28]

bb6
  0: StorageLive(_79)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1593:28-1593:38)
  1: _79 = (((*_8) as Match).0: util::primitives::PatternID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1593:28-1593:38)
  2: StorageLive(_80)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1593:49-1593:59)
  3: _80 = _79
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1593:49-1593:59)
  4: _0 = core::option::Option::<util::primitives::PatternID>::Some(move _80)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1593:44-1593:60)
  5: StorageDead(_80)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1593:59-1593:60)
  6: StorageDead(_79)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1593:59-1593:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1593:59-1593:60)
      kind: goto -> bb38
  }
  preds [bb1, bb5]
  succs [bb38]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1552:13-1556:36)
      kind: falseEdge -> [real: bb8, imaginary: bb3]
  }
  preds [bb1, bb1, bb1, bb1, bb1]
  succs [bb3, bb8]

bb8
  0: _0 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1556:40-1556:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1556:40-1556:44)
      kind: goto -> bb38
  }
  preds [bb7]
  succs [bb38]

bb9
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1557:32-1557:41)
  1: _12 = &(((*_8) as ByteRange).0: nfa::thompson::nfa::Transition)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1557:32-1557:41)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:17-1566:18)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:20-1558:55)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:20-1558:25)
  5: _15 = &(*_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:20-1558:25)
  6: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:34-1558:50)
  7: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:34-1558:50)
  8: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:34-1558:39)
  9: _18 = &(*_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:34-1558:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:34-1558:50)
      kind: _17 = util::search::Input::<'_>::haystack(move _18) -> [return: bb10, unwind: bb39]
  }
  preds [bb3]
  succs [bb10, bb39]

bb10
  0: _16 = &(*_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:34-1558:50)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:49-1558:50)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:52-1558:54)
  3: _19 = _6
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:52-1558:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:20-1558:55)
      kind: _14 = nfa::thompson::nfa::Transition::matches(move _15, move _16, move _19) -> [return: bb11, unwind: bb39]
  }
  preds [bb9]
  succs [bb11, bb39]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:20-1558:55)
      kind: switchInt(move _14) -> [0: bb16, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb16]

bb12
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:54-1558:55)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:54-1558:55)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:54-1558:55)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:54-1558:55)
  4: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1559:25-1559:30)
  5: StorageLive(_21)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1559:33-1559:48)
  6: _21 = &mut (*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1559:33-1559:48)
  7: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1559:59-1559:62)
  8: _22 = _7
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1559:59-1559:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1559:33-1559:63)
      kind: _20 = nfa::thompson::pikevm::SlotTable::for_state(move _21, move _22) -> [return: bb13, unwind: bb39]
  }
  preds [bb11]
  succs [bb13, bb39]

bb13
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1559:62-1559:63)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1559:62-1559:63)
  2: FakeRead(ForLet(None), _20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1559:25-1559:30)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1562:25-1562:27)
  4: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1562:30-1562:32)
  5: _24 = _6
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1562:30-1562:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1562:30-1562:48)
      kind: _23 = core::num::<impl usize>::wrapping_add(move _24, const 1_usize) -> [return: bb14, unwind: bb39]
  }
  preds [bb12]
  succs [bb14, bb39]

bb14
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1562:47-1562:48)
  1: FakeRead(ForLet(None), _23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1562:25-1562:27)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1563:21-1565:22)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1563:21-1563:25)
  4: _26 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1563:21-1563:25)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1564:25-1564:30)
  6: _27 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1564:25-1564:30)
  7: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1564:32-1564:37)
  8: _28 = &mut (*_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1564:32-1564:37)
  9: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1564:39-1564:43)
  10: _29 = &mut (*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1564:39-1564:43)
  11: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1564:45-1564:50)
  12: _30 = &(*_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1564:45-1564:50)
  13: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1564:52-1564:54)
  14: _31 = _23
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1564:52-1564:54)
  15: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1564:56-1564:66)
  16: _32 = ((*_12).2: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1564:56-1564:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1563:21-1565:22)
      kind: _25 = nfa::thompson::pikevm::PikeVM::epsilon_closure(move _26, move _27, move _28, move _29, move _30, move _31, move _32) -> [return: bb15, unwind: bb39]
  }
  preds [bb13]
  succs [bb15, bb39]

bb15
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1565:21-1565:22)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1565:21-1565:22)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1565:21-1565:22)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1565:21-1565:22)
  4: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1565:21-1565:22)
  5: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1565:21-1565:22)
  6: StorageDead(_26)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1565:21-1565:22)
  7: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1565:22-1565:23)
  8: _13 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:56-1566:18)
  9: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1566:17-1566:18)
  10: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1566:17-1566:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:17-1566:18)
      kind: goto -> bb17
  }
  preds [bb14]
  succs [bb17]

bb16
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:54-1558:55)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:54-1558:55)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:54-1558:55)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:54-1558:55)
  4: _13 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1566:18-1566:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1558:17-1566:18)
      kind: goto -> bb17
  }
  preds [bb11]
  succs [bb17]

bb17
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1566:17-1566:18)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1566:17-1566:18)
  2: _0 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1567:17-1567:21)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1568:13-1568:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1568:13-1568:14)
      kind: goto -> bb38
  }
  preds [bb15, bb16]
  succs [bb38]

bb18
  0: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1569:27-1569:37)
  1: _33 = &(((*_8) as Sparse).0: nfa::thompson::nfa::SparseTransitions)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1569:27-1569:37)
  2: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:17-1578:18)
  3: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:41-1570:77)
  4: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:41-1570:47)
  5: _36 = &(*_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:41-1570:47)
  6: StorageLive(_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:56-1570:72)
  7: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:56-1570:72)
  8: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:56-1570:61)
  9: _39 = &(*_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:56-1570:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:56-1570:72)
      kind: _38 = util::search::Input::<'_>::haystack(move _39) -> [return: bb19, unwind: bb39]
  }
  preds [bb4]
  succs [bb19, bb39]

bb19
  0: _37 = &(*_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:56-1570:72)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:71-1570:72)
  2: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:74-1570:76)
  3: _40 = _6
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:74-1570:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:41-1570:77)
      kind: _35 = nfa::thompson::nfa::SparseTransitions::matches(move _36, move _37, move _40) -> [return: bb20, unwind: bb39]
  }
  preds [bb18]
  succs [bb20, bb39]

bb20
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:76-1570:77)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:76-1570:77)
  2: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:76-1570:77)
  3: PlaceMention(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:41-1570:77)
  4: _41 = discriminant(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:41-1570:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:24-1570:38)
      kind: switchInt(move _41) -> [1: bb21, otherwise: bb26]
  }
  preds [bb19]
  succs [bb21, bb26]

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:24-1570:38)
      kind: falseEdge -> [real: bb22, imaginary: bb26]
  }
  preds [bb20]
  succs [bb22, bb26]

bb22
  0: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:29-1570:37)
  1: _42 = ((_35 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:29-1570:37)
  2: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1571:25-1571:30)
  3: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1571:33-1571:48)
  4: _44 = &mut (*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1571:33-1571:48)
  5: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1571:59-1571:62)
  6: _45 = _7
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1571:59-1571:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1571:33-1571:63)
      kind: _43 = nfa::thompson::pikevm::SlotTable::for_state(move _44, move _45) -> [return: bb23, unwind: bb39]
  }
  preds [bb21]
  succs [bb23, bb39]

bb23
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1571:62-1571:63)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1571:62-1571:63)
  2: FakeRead(ForLet(None), _43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1571:25-1571:30)
  3: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1574:25-1574:27)
  4: StorageLive(_47)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1574:30-1574:32)
  5: _47 = _6
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1574:30-1574:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1574:30-1574:48)
      kind: _46 = core::num::<impl usize>::wrapping_add(move _47, const 1_usize) -> [return: bb24, unwind: bb39]
  }
  preds [bb22]
  succs [bb24, bb39]

bb24
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1574:47-1574:48)
  1: FakeRead(ForLet(None), _46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1574:25-1574:27)
  2: StorageLive(_48)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1575:21-1577:22)
  3: StorageLive(_49)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1575:21-1575:25)
  4: _49 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1575:21-1575:25)
  5: StorageLive(_50)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1576:25-1576:30)
  6: _50 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1576:25-1576:30)
  7: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1576:32-1576:37)
  8: _51 = &mut (*_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1576:32-1576:37)
  9: StorageLive(_52)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1576:39-1576:43)
  10: _52 = &mut (*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1576:39-1576:43)
  11: StorageLive(_53)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1576:45-1576:50)
  12: _53 = &(*_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1576:45-1576:50)
  13: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1576:52-1576:54)
  14: _54 = _46
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1576:52-1576:54)
  15: StorageLive(_55)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1576:56-1576:64)
  16: _55 = _42
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1576:56-1576:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1575:21-1577:22)
      kind: _48 = nfa::thompson::pikevm::PikeVM::epsilon_closure(move _49, move _50, move _51, move _52, move _53, move _54, move _55) -> [return: bb25, unwind: bb39]
  }
  preds [bb23]
  succs [bb25, bb39]

bb25
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1577:21-1577:22)
  1: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1577:21-1577:22)
  2: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1577:21-1577:22)
  3: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1577:21-1577:22)
  4: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1577:21-1577:22)
  5: StorageDead(_50)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1577:21-1577:22)
  6: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1577:21-1577:22)
  7: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1577:22-1577:23)
  8: _34 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:78-1578:18)
  9: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1578:17-1578:18)
  10: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1578:17-1578:18)
  11: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1578:17-1578:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:17-1578:18)
      kind: goto -> bb27
  }
  preds [bb24]
  succs [bb27]

bb26
  0: _34 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1578:18-1578:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1570:17-1578:18)
      kind: goto -> bb27
  }
  preds [bb20, bb21]
  succs [bb27]

bb27
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1578:17-1578:18)
  1: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1578:17-1578:18)
  2: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1578:17-1578:18)
  3: _0 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1579:17-1579:21)
  4: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1580:13-1580:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1580:13-1580:14)
      kind: goto -> bb38
  }
  preds [bb25, bb26]
  succs [bb38]

bb28
  0: StorageLive(_56)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1581:26-1581:35)
  1: _56 = &(((*_8) as Dense).0: nfa::thompson::nfa::DenseTransitions)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1581:26-1581:35)
  2: StorageLive(_57)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:17-1590:18)
  3: StorageLive(_58)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:41-1582:76)
  4: StorageLive(_59)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:41-1582:46)
  5: _59 = &(*_56)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:41-1582:46)
  6: StorageLive(_60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:55-1582:71)
  7: StorageLive(_61)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:55-1582:71)
  8: StorageLive(_62)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:55-1582:60)
  9: _62 = &(*_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:55-1582:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:55-1582:71)
      kind: _61 = util::search::Input::<'_>::haystack(move _62) -> [return: bb29, unwind: bb39]
  }
  preds [bb5]
  succs [bb29, bb39]

bb29
  0: _60 = &(*_61)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:55-1582:71)
  1: StorageDead(_62)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:70-1582:71)
  2: StorageLive(_63)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:73-1582:75)
  3: _63 = _6
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:73-1582:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:41-1582:76)
      kind: _58 = nfa::thompson::nfa::DenseTransitions::matches(move _59, move _60, move _63) -> [return: bb30, unwind: bb39]
  }
  preds [bb28]
  succs [bb30, bb39]

bb30
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:75-1582:76)
  1: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:75-1582:76)
  2: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:75-1582:76)
  3: PlaceMention(_58)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:41-1582:76)
  4: _64 = discriminant(_58)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:41-1582:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:24-1582:38)
      kind: switchInt(move _64) -> [1: bb31, otherwise: bb36]
  }
  preds [bb29]
  succs [bb31, bb36]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:24-1582:38)
      kind: falseEdge -> [real: bb32, imaginary: bb36]
  }
  preds [bb30]
  succs [bb32, bb36]

bb32
  0: StorageLive(_65)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:29-1582:37)
  1: _65 = ((_58 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:29-1582:37)
  2: StorageLive(_66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1583:25-1583:30)
  3: StorageLive(_67)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1583:33-1583:48)
  4: _67 = &mut (*_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1583:33-1583:48)
  5: StorageLive(_68)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1583:59-1583:62)
  6: _68 = _7
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1583:59-1583:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1583:33-1583:63)
      kind: _66 = nfa::thompson::pikevm::SlotTable::for_state(move _67, move _68) -> [return: bb33, unwind: bb39]
  }
  preds [bb31]
  succs [bb33, bb39]

bb33
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1583:62-1583:63)
  1: StorageDead(_67)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1583:62-1583:63)
  2: FakeRead(ForLet(None), _66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1583:25-1583:30)
  3: StorageLive(_69)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1586:25-1586:27)
  4: StorageLive(_70)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1586:30-1586:32)
  5: _70 = _6
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1586:30-1586:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1586:30-1586:48)
      kind: _69 = core::num::<impl usize>::wrapping_add(move _70, const 1_usize) -> [return: bb34, unwind: bb39]
  }
  preds [bb32]
  succs [bb34, bb39]

bb34
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1586:47-1586:48)
  1: FakeRead(ForLet(None), _69)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1586:25-1586:27)
  2: StorageLive(_71)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1587:21-1589:22)
  3: StorageLive(_72)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1587:21-1587:25)
  4: _72 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1587:21-1587:25)
  5: StorageLive(_73)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1588:25-1588:30)
  6: _73 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1588:25-1588:30)
  7: StorageLive(_74)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1588:32-1588:37)
  8: _74 = &mut (*_66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1588:32-1588:37)
  9: StorageLive(_75)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1588:39-1588:43)
  10: _75 = &mut (*_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1588:39-1588:43)
  11: StorageLive(_76)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1588:45-1588:50)
  12: _76 = &(*_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1588:45-1588:50)
  13: StorageLive(_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1588:52-1588:54)
  14: _77 = _69
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1588:52-1588:54)
  15: StorageLive(_78)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1588:56-1588:64)
  16: _78 = _65
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1588:56-1588:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1587:21-1589:22)
      kind: _71 = nfa::thompson::pikevm::PikeVM::epsilon_closure(move _72, move _73, move _74, move _75, move _76, move _77, move _78) -> [return: bb35, unwind: bb39]
  }
  preds [bb33]
  succs [bb35, bb39]

bb35
  0: StorageDead(_78)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1589:21-1589:22)
  1: StorageDead(_77)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1589:21-1589:22)
  2: StorageDead(_76)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1589:21-1589:22)
  3: StorageDead(_75)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1589:21-1589:22)
  4: StorageDead(_74)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1589:21-1589:22)
  5: StorageDead(_73)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1589:21-1589:22)
  6: StorageDead(_72)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1589:21-1589:22)
  7: StorageDead(_71)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1589:22-1589:23)
  8: _57 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:77-1590:18)
  9: StorageDead(_69)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1590:17-1590:18)
  10: StorageDead(_66)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1590:17-1590:18)
  11: StorageDead(_65)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1590:17-1590:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:17-1590:18)
      kind: goto -> bb37
  }
  preds [bb34]
  succs [bb37]

bb36
  0: _57 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1590:18-1590:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1582:17-1590:18)
      kind: goto -> bb37
  }
  preds [bb30, bb31]
  succs [bb37]

bb37
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1590:17-1590:18)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1590:17-1590:18)
  2: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1590:17-1590:18)
  3: _0 = core::option::Option::<util::primitives::PatternID>::None
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1591:17-1591:21)
  4: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1592:13-1592:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1592:13-1592:14)
      kind: goto -> bb38
  }
  preds [bb35, bb36]
  succs [bb38]

bb38
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1595:5-1595:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1595:6-1595:6)
      kind: return
  }
  preds [bb6, bb8, bb17, bb27, bb37]
  succs []

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1541:5-1595:6)
      kind: resume
  }
  preds [bb0, bb9, bb10, bb12, bb13, bb14, bb18, bb19, bb22, bb23, bb24, bb28, bb29, bb32, bb33, bb34]
  succs []

