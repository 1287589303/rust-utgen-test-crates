bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1972:9-1972:27)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1972:9-1972:19)
  2: _4 = &mut ((*_1).0: std::vec::Vec<nfa::thompson::pikevm::FollowEpsilon>)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1972:9-1972:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1972:9-1972:27)
      kind: _3 = std::vec::Vec::<nfa::thompson::pikevm::FollowEpsilon>::clear(move _4) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1972:26-1972:27)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1972:27-1972:28)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1973:9-1973:50)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1973:9-1973:18)
  4: _6 = &mut ((*_1).1: nfa::thompson::pikevm::ActiveStates)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1973:9-1973:18)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1973:32-1973:49)
  6: _7 = _2
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1973:32-1973:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1973:9-1973:50)
      kind: _5 = nfa::thompson::pikevm::ActiveStates::setup_search(move _6, move _7) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1973:49-1973:50)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1973:49-1973:50)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1973:50-1973:51)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1974:9-1974:50)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1974:9-1974:18)
  5: _9 = &mut ((*_1).2: nfa::thompson::pikevm::ActiveStates)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1974:9-1974:18)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1974:32-1974:49)
  7: _10 = _2
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1974:32-1974:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1974:9-1974:50)
      kind: _8 = nfa::thompson::pikevm::ActiveStates::setup_search(move _9, move _10) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1974:49-1974:50)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1974:49-1974:50)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1974:50-1974:51)
  3: _0 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1971:58-1975:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1975:6-1975:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:1971:5-1975:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

