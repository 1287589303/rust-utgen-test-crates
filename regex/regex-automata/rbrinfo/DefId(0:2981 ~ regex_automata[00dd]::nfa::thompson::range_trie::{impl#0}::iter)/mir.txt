bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:250:13-250:22)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:250:25-250:40)
  2: _4 = &((*_1).2: core::cell::RefCell<std::vec::Vec<nfa::thompson::range_trie::NextIter>>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:250:25-250:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:250:25-250:53)
      kind: _3 = core::cell::RefCell::<std::vec::Vec<nfa::thompson::range_trie::NextIter>>::borrow_mut(move _4) -> [return: bb1, unwind: bb60]
  }
  preds []
  succs [bb1, bb60]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:250:52-250:53)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:250:13-250:22)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:251:9-251:22)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:251:9-251:14)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:251:9-251:22)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:251:9-251:14)
  6: _8 = &mut _3
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:251:9-251:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:251:9-251:22)
      kind: _7 = <core::cell::RefMut<'_, std::vec::Vec<nfa::thompson::range_trie::NextIter>> as core::ops::DerefMut>::deref_mut(move _8) -> [return: bb2, unwind: bb59]
  }
  preds [bb0]
  succs [bb2, bb59]

bb2
  0: _6 = &mut (*_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:251:9-251:14)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:251:13-251:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:251:9-251:22)
      kind: _5 = std::vec::Vec::<nfa::thompson::range_trie::NextIter>::clear(move _6) -> [return: bb3, unwind: bb59]
  }
  preds [bb1]
  succs [bb3, bb59]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:251:21-251:22)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:251:22-251:23)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:251:22-251:23)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:252:13-252:23)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:252:26-252:42)
  5: _10 = &((*_1).3: core::cell::RefCell<std::vec::Vec<regex_syntax::utf8::Utf8Range>>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:252:26-252:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:252:26-252:55)
      kind: _9 = core::cell::RefCell::<std::vec::Vec<regex_syntax::utf8::Utf8Range>>::borrow_mut(move _10) -> [return: bb4, unwind: bb59]
  }
  preds [bb2]
  succs [bb4, bb59]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:252:54-252:55)
  1: FakeRead(ForLet(None), _9)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:252:13-252:23)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:253:9-253:23)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:253:9-253:15)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:253:9-253:23)
  5: StorageLive(_14)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:253:9-253:15)
  6: _14 = &mut _9
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:253:9-253:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:253:9-253:23)
      kind: _13 = <core::cell::RefMut<'_, std::vec::Vec<regex_syntax::utf8::Utf8Range>> as core::ops::DerefMut>::deref_mut(move _14) -> [return: bb5, unwind: bb58]
  }
  preds [bb3]
  succs [bb5, bb58]

bb5
  0: _12 = &mut (*_13)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:253:9-253:15)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:253:14-253:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:253:9-253:23)
      kind: _11 = std::vec::Vec::<regex_syntax::utf8::Utf8Range>::clear(move _12) -> [return: bb6, unwind: bb58]
  }
  preds [bb4]
  succs [bb6, bb58]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:253:22-253:23)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:253:23-253:24)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:253:23-253:24)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:9-258:57)
  4: StorageLive(_16)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:9-258:14)
  5: StorageLive(_17)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:9-258:57)
  6: StorageLive(_18)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:9-258:14)
  7: _18 = &mut _3
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:9-258:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:9-258:57)
      kind: _17 = <core::cell::RefMut<'_, std::vec::Vec<nfa::thompson::range_trie::NextIter>> as core::ops::DerefMut>::deref_mut(move _18) -> [return: bb7, unwind: bb58]
  }
  preds [bb5]
  succs [bb7, bb58]

bb7
  0: _16 = &mut (*_17)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:9-258:14)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:13-258:14)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:20-258:56)
  3: _19 = nfa::thompson::range_trie::NextIter { state_id: const nfa::thompson::range_trie::ROOT, tidx: const 0_usize }
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:20-258:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:9-258:57)
      kind: _15 = std::vec::Vec::<nfa::thompson::range_trie::NextIter>::push(move _16, move _19) -> [return: bb8, unwind: bb58]
  }
  preds [bb6]
  succs [bb8, bb58]

bb8
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:56-258:57)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:56-258:57)
  2: StorageDead(_17)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:57-258:58)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:258:57-258:58)
  4: StorageLive(_20)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:9-287:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:9-287:10)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:9-287:10)
      kind: falseUnwind -> [real: bb10, unwind: bb58]
  }
  preds [bb8, bb21]
  succs [bb10, bb58]

bb10
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:63-259:74)
  1: StorageLive(_23)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:63-259:68)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:63-259:74)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:63-259:68)
  4: _25 = &mut _3
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:63-259:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:63-259:74)
      kind: _24 = <core::cell::RefMut<'_, std::vec::Vec<nfa::thompson::range_trie::NextIter>> as core::ops::DerefMut>::deref_mut(move _25) -> [return: bb11, unwind: bb58]
  }
  preds [bb9]
  succs [bb11, bb58]

bb11
  0: _23 = &mut (*_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:63-259:68)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:67-259:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:63-259:74)
      kind: _22 = std::vec::Vec::<nfa::thompson::range_trie::NextIter>::pop(move _23) -> [return: bb12, unwind: bb58]
  }
  preds [bb10]
  succs [bb12, bb58]

bb12
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:73-259:74)
  1: PlaceMention(_22)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:63-259:74)
  2: _26 = discriminant(_22)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:63-259:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:19-259:60)
      kind: switchInt(move _26) -> [1: bb13, otherwise: bb46]
  }
  preds [bb11]
  succs [bb13, bb46]

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:19-259:60)
      kind: falseEdge -> [real: bb14, imaginary: bb46]
  }
  preds [bb12]
  succs [bb14, bb46]

bb14
  0: StorageLive(_27)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:35-259:47)
  1: _27 = (((_22 as Some).0: nfa::thompson::range_trie::NextIter).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:35-259:47)
  2: StorageLive(_28)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:49-259:57)
  3: _28 = (((_22 as Some).0: nfa::thompson::range_trie::NextIter).1: usize)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:49-259:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:262:13-286:14)
      kind: goto -> bb15
  }
  preds [bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:262:13-286:14)
      kind: falseUnwind -> [real: bb16, unwind: bb58]
  }
  preds [bb14, bb45]
  succs [bb16, bb58]

bb16
  0: StorageLive(_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:263:21-263:26)
  1: StorageLive(_30)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:263:29-263:33)
  2: _30 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:263:29-263:33)
  3: StorageLive(_31)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:263:40-263:48)
  4: _31 = _27
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:263:40-263:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:263:29-263:49)
      kind: _29 = nfa::thompson::range_trie::RangeTrie::state(move _30, move _31) -> [return: bb17, unwind: bb58]
  }
  preds [bb15]
  succs [bb17, bb58]

bb17
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:263:48-263:49)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:263:48-263:49)
  2: FakeRead(ForLet(None), _29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:263:21-263:26)
  3: StorageLive(_32)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:17-269:18)
  4: StorageLive(_33)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:20-266:51)
  5: StorageLive(_34)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:20-266:24)
  6: _34 = _28
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:20-266:24)
  7: StorageLive(_35)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:28-266:51)
  8: StorageLive(_36)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:28-266:45)
  9: _36 = &((*_29).0: std::vec::Vec<nfa::thompson::range_trie::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:28-266:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:28-266:51)
      kind: _35 = std::vec::Vec::<nfa::thompson::range_trie::Transition>::len(move _36) -> [return: bb18, unwind: bb58]
  }
  preds [bb16]
  succs [bb18, bb58]

bb18
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:50-266:51)
  1: _33 = Ge(move _34, move _35)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:20-266:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:20-266:51)
      kind: switchInt(move _33) -> [0: bb22, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb22]

bb19
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:50-266:51)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:50-266:51)
  2: StorageLive(_38)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:267:21-267:33)
  3: StorageLive(_39)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:267:21-267:27)
  4: StorageLive(_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:267:21-267:33)
  5: StorageLive(_41)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:267:21-267:27)
  6: _41 = &mut _9
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:267:21-267:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:267:21-267:33)
      kind: _40 = <core::cell::RefMut<'_, std::vec::Vec<regex_syntax::utf8::Utf8Range>> as core::ops::DerefMut>::deref_mut(move _41) -> [return: bb20, unwind: bb58]
  }
  preds [bb18]
  succs [bb20, bb58]

bb20
  0: _39 = &mut (*_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:267:21-267:27)
  1: StorageDead(_41)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:267:26-267:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:267:21-267:33)
      kind: _38 = std::vec::Vec::<regex_syntax::utf8::Utf8Range>::pop(move _39) -> [return: bb21, unwind: bb58]
  }
  preds [bb19]
  succs [bb21, bb58]

bb21
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:267:32-267:33)
  1: StorageDead(_40)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:267:33-267:34)
  2: StorageDead(_38)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:267:33-267:34)
  3: _21 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:268:21-268:26)
  4: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:269:17-269:18)
  5: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:269:17-269:18)
  6: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:286:13-286:14)
  7: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:287:9-287:10)
  8: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:287:9-287:10)
  9: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:287:9-287:10)
  10: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:287:9-287:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:9-287:10)
      kind: goto -> bb9
  }
  preds [bb20]
  succs [bb9]

bb22
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:50-266:51)
  1: StorageDead(_34)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:266:50-266:51)
  2: _32 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:269:18-269:18)
  3: StorageDead(_33)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:269:17-269:18)
  4: StorageDead(_32)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:269:17-269:18)
  5: StorageLive(_42)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:271:21-271:22)
  6: StorageLive(_43)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:271:43-271:49)
  7: StorageLive(_44)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:271:26-271:43)
  8: _44 = &((*_29).0: std::vec::Vec<nfa::thompson::range_trie::Transition>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:271:26-271:43)
  9: StorageLive(_45)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:271:44-271:48)
  10: _45 = _28
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:271:44-271:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:271:43-271:49)
      kind: _43 = <std::vec::Vec<nfa::thompson::range_trie::Transition> as core::ops::Index<usize>>::index(move _44, move _45) -> [return: bb23, unwind: bb58]
  }
  preds [bb18]
  succs [bb23, bb58]

bb23
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:271:48-271:49)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:271:48-271:49)
  2: _42 = &(*_43)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:271:25-271:49)
  3: FakeRead(ForLet(None), _42)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:271:21-271:22)
  4: StorageLive(_46)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:17-272:37)
  5: StorageLive(_47)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:17-272:23)
  6: StorageLive(_48)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:17-272:37)
  7: StorageLive(_49)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:17-272:23)
  8: _49 = &mut _9
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:17-272:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:17-272:37)
      kind: _48 = <core::cell::RefMut<'_, std::vec::Vec<regex_syntax::utf8::Utf8Range>> as core::ops::DerefMut>::deref_mut(move _49) -> [return: bb24, unwind: bb58]
  }
  preds [bb22]
  succs [bb24, bb58]

bb24
  0: _47 = &mut (*_48)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:17-272:23)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:22-272:23)
  2: StorageLive(_50)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:29-272:36)
  3: _50 = ((*_42).0: regex_syntax::utf8::Utf8Range)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:29-272:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:17-272:37)
      kind: _46 = std::vec::Vec::<regex_syntax::utf8::Utf8Range>::push(move _47, move _50) -> [return: bb25, unwind: bb58]
  }
  preds [bb23]
  succs [bb25, bb58]

bb25
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:36-272:37)
  1: StorageDead(_47)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:36-272:37)
  2: StorageDead(_48)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:37-272:38)
  3: StorageDead(_46)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:272:37-272:38)
  4: StorageLive(_51)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:20-273:38)
  5: StorageLive(_52)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:20-273:29)
  6: _52 = &((*_42).1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:20-273:29)
  7: StorageLive(_53)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:33-273:38)
  8: StorageLive(_54)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:33-273:38)
  9: _54 = const nfa::thompson::range_trie::FINAL
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:33-273:38)
  10: _53 = &_54
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:33-273:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:20-273:38)
      kind: _51 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _52, move _53) -> [return: bb26, unwind: bb58]
  }
  preds [bb24]
  succs [bb26, bb58]

bb26
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:20-273:38)
      kind: switchInt(move _51) -> [0: bb41, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb41]

bb27
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:37-273:38)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:37-273:38)
  2: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:37-273:38)
  3: StorageLive(_55)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:32)
  4: StorageLive(_56)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:32)
  5: StorageLive(_57)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:31)
  6: StorageLive(_58)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:22)
  7: _58 = &mut _2
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:22)
  8: StorageLive(_59)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:31)
  9: StorageLive(_60)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:23-274:30)
  10: StorageLive(_61)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:23-274:30)
  11: StorageLive(_62)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:23-274:30)
  12: StorageLive(_63)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:23-274:30)
  13: StorageLive(_64)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:23-274:30)
  14: StorageLive(_65)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:23-274:30)
  15: _65 = &_9
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:23-274:30)
  16: _64 = &(*_65)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:23-274:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:23-274:30)
      kind: _63 = <core::cell::RefMut<'_, std::vec::Vec<regex_syntax::utf8::Utf8Range>> as core::ops::Deref>::deref(move _64) -> [return: bb28, unwind: bb58]
  }
  preds [bb26]
  succs [bb28, bb58]

bb28
  0: _62 = &(*_63)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:23-274:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:23-274:30)
      kind: _61 = <std::vec::Vec<regex_syntax::utf8::Utf8Range> as core::ops::Deref>::deref(move _62) -> [return: bb29, unwind: bb58]
  }
  preds [bb27]
  succs [bb29, bb58]

bb29
  0: _60 = &(*_61)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:23-274:30)
  1: StorageDead(_64)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:29-274:30)
  2: StorageDead(_62)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:29-274:30)
  3: _59 = (move _60,)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:31)
      kind: _57 = <F as core::ops::FnMut<(&[regex_syntax::utf8::Utf8Range],)>>::call_mut(move _58, move _59) -> [return: bb30, unwind: bb58]
  }
  preds [bb28]
  succs [bb30, bb58]

bb30
  0: StorageDead(_60)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:30-274:31)
  1: StorageDead(_59)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:30-274:31)
  2: StorageDead(_58)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:30-274:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:32)
      kind: _56 = <core::result::Result<(), E> as core::ops::Try>::branch(move _57) -> [return: bb31, unwind: bb57]
  }
  preds [bb29]
  succs [bb31, bb57]

bb31
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:31-274:32)
  1: PlaceMention(_56)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:32)
  2: _66 = discriminant(_56)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:32)
      kind: switchInt(move _66) -> [0: bb34, 1: bb33, otherwise: bb32]
  }
  preds [bb30]
  succs [bb32, bb33, bb34]

bb32
  0: FakeRead(ForMatchedPlace(None), _56)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:32)
      kind: unreachable
  }
  preds [bb31]
  succs []

bb33
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:31-274:32)
      kind: falseEdge -> [real: bb35, imaginary: bb34]
  }
  preds [bb31]
  succs [bb34, bb35]

bb34
  0: StorageLive(_70)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:32)
  1: _70 = ((_56 as Continue).0: ())
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:32)
  2: _55 = _70
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:32)
  3: StorageDead(_70)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:31-274:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:32-274:33)
      kind: drop(_56) -> [return: bb37, unwind: bb58]
  }
  preds [bb31, bb33]
  succs [bb37, bb58]

bb35
  0: StorageLive(_67)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:31-274:32)
  1: _67 = move ((_56 as Break).0: core::result::Result<core::convert::Infallible, E>)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:31-274:32)
  2: StorageLive(_69)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:31-274:32)
  3: _69 = move _67
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:31-274:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:21-274:32)
      kind: _0 = <core::result::Result<(), E> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, E>>>::from_residual(move _69) -> [return: bb36, unwind: bb54]
  }
  preds [bb33]
  succs [bb36, bb54]

bb36
  0: StorageDead(_69)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:31-274:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:31-274:32)
      kind: drop(_67) -> [return: bb49, unwind: bb56]
  }
  preds [bb35]
  succs [bb49, bb56]

bb37
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:32-274:33)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:32-274:33)
  2: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:32-274:33)
  3: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:32-274:33)
  4: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:32-274:33)
  5: StorageLive(_71)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:275:21-275:33)
  6: StorageLive(_72)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:275:21-275:27)
  7: StorageLive(_73)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:275:21-275:33)
  8: StorageLive(_74)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:275:21-275:27)
  9: _74 = &mut _9
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:275:21-275:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:275:21-275:33)
      kind: _73 = <core::cell::RefMut<'_, std::vec::Vec<regex_syntax::utf8::Utf8Range>> as core::ops::DerefMut>::deref_mut(move _74) -> [return: bb38, unwind: bb58]
  }
  preds [bb34]
  succs [bb38, bb58]

bb38
  0: _72 = &mut (*_73)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:275:21-275:27)
  1: StorageDead(_74)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:275:26-275:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:275:21-275:33)
      kind: _71 = std::vec::Vec::<regex_syntax::utf8::Utf8Range>::pop(move _72) -> [return: bb39, unwind: bb58]
  }
  preds [bb37]
  succs [bb39, bb58]

bb39
  0: StorageDead(_72)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:275:32-275:33)
  1: StorageDead(_73)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:275:33-275:34)
  2: StorageDead(_71)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:275:33-275:34)
  3: _75 = AddWithOverflow(_28, const 1_usize)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:276:21-276:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:276:21-276:30)
      kind: assert(!move (_75.1: bool), "attempt to compute `{} + {}`, which would overflow", _28, const 1_usize) -> [success: bb40, unwind: bb58]
  }
  preds [bb38]
  succs [bb40, bb58]

bb40
  0: _28 = move (_75.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:276:21-276:30)
  1: _21 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:39-277:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:17-285:18)
      kind: goto -> bb45
  }
  preds [bb39]
  succs [bb45]

bb41
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:37-273:38)
  1: StorageDead(_53)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:37-273:38)
  2: StorageDead(_52)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:37-273:38)
  3: StorageLive(_76)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:21-280:70)
  4: StorageLive(_77)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:21-280:26)
  5: StorageLive(_78)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:21-280:70)
  6: StorageLive(_79)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:21-280:26)
  7: _79 = &mut _3
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:21-280:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:21-280:70)
      kind: _78 = <core::cell::RefMut<'_, std::vec::Vec<nfa::thompson::range_trie::NextIter>> as core::ops::DerefMut>::deref_mut(move _79) -> [return: bb42, unwind: bb58]
  }
  preds [bb26]
  succs [bb42, bb58]

bb42
  0: _77 = &mut (*_78)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:21-280:26)
  1: StorageDead(_79)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:25-280:26)
  2: StorageLive(_80)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:32-280:69)
  3: StorageLive(_81)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:43-280:51)
  4: _81 = _27
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:43-280:51)
  5: StorageLive(_82)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:59-280:67)
  6: StorageLive(_83)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:59-280:63)
  7: _83 = _28
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:59-280:63)
  8: _84 = AddWithOverflow(_83, const 1_usize)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:59-280:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:59-280:67)
      kind: assert(!move (_84.1: bool), "attempt to compute `{} + {}`, which would overflow", move _83, const 1_usize) -> [success: bb43, unwind: bb58]
  }
  preds [bb41]
  succs [bb43, bb58]

bb43
  0: _82 = move (_84.0: usize)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:59-280:67)
  1: StorageDead(_83)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:66-280:67)
  2: _80 = nfa::thompson::range_trie::NextIter { state_id: move _81, tidx: move _82 }
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:32-280:69)
  3: StorageDead(_82)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:68-280:69)
  4: StorageDead(_81)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:68-280:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:21-280:70)
      kind: _76 = std::vec::Vec::<nfa::thompson::range_trie::NextIter>::push(move _77, move _80) -> [return: bb44, unwind: bb58]
  }
  preds [bb42]
  succs [bb44, bb58]

bb44
  0: StorageDead(_80)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:69-280:70)
  1: StorageDead(_77)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:69-280:70)
  2: StorageDead(_78)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:70-280:71)
  3: StorageDead(_76)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:280:70-280:71)
  4: StorageLive(_85)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:283:32-283:41)
  5: _85 = ((*_42).1: util::primitives::StateID)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:283:32-283:41)
  6: _27 = move _85
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:283:21-283:41)
  7: StorageDead(_85)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:283:40-283:41)
  8: _28 = const 0_usize
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:284:21-284:29)
  9: _21 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:277:24-285:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:273:17-285:18)
      kind: goto -> bb45
  }
  preds [bb43]
  succs [bb45]

bb45
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:285:17-285:18)
  1: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:286:13-286:14)
  2: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:286:13-286:14)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:286:13-286:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:262:13-286:14)
      kind: goto -> bb15
  }
  preds [bb40, bb44]
  succs [bb15]

bb46
  0: StorageLive(_87)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:9-287:10)
  1: _20 = const ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:259:9-287:10)
  2: StorageDead(_87)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:287:9-287:10)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:287:9-287:10)
  4: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:287:9-287:10)
  5: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:287:9-287:10)
  6: StorageLive(_89)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:288:12-288:14)
  7: _89 = ()
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:288:12-288:14)
  8: _0 = core::result::Result::<(), E>::Ok(move _89)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:288:9-288:15)
  9: StorageDead(_89)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:288:14-288:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:289:5-289:6)
      kind: drop(_9) -> [return: bb47, unwind: bb59]
  }
  preds [bb12, bb13]
  succs [bb47, bb59]

bb47
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:289:5-289:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:289:5-289:6)
      kind: drop(_3) -> [return: bb48, unwind: bb60]
  }
  preds [bb46]
  succs [bb48, bb60]

bb48
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:289:5-289:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:289:5-289:6)
      kind: drop(_2) -> [return: bb53, unwind: bb61]
  }
  preds [bb47]
  succs [bb53, bb61]

bb49
  0: StorageDead(_67)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:31-274:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:32-274:33)
      kind: drop(_56) -> [return: bb50, unwind: bb58]
  }
  preds [bb36]
  succs [bb50, bb58]

bb50
  0: StorageDead(_65)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:32-274:33)
  1: StorageDead(_63)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:32-274:33)
  2: StorageDead(_61)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:32-274:33)
  3: StorageDead(_56)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:32-274:33)
  4: StorageDead(_55)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:32-274:33)
  5: StorageDead(_51)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:285:17-285:18)
  6: StorageDead(_43)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:286:13-286:14)
  7: StorageDead(_42)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:286:13-286:14)
  8: StorageDead(_29)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:286:13-286:14)
  9: StorageDead(_28)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:287:9-287:10)
  10: StorageDead(_27)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:287:9-287:10)
  11: StorageDead(_24)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:287:9-287:10)
  12: StorageDead(_22)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:287:9-287:10)
  13: StorageDead(_20)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:287:9-287:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:289:5-289:6)
      kind: drop(_9) -> [return: bb51, unwind: bb59]
  }
  preds [bb49]
  succs [bb51, bb59]

bb51
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:289:5-289:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:289:5-289:6)
      kind: drop(_3) -> [return: bb52, unwind: bb60]
  }
  preds [bb50]
  succs [bb52, bb60]

bb52
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:289:5-289:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:289:5-289:6)
      kind: drop(_2) -> [return: bb53, unwind: bb61]
  }
  preds [bb51]
  succs [bb53, bb61]

bb53
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:289:6-289:6)
      kind: return
  }
  preds [bb48, bb52]
  succs []

bb54
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:31-274:32)
      kind: drop(_69) -> [return: bb55, unwind terminate(cleanup)]
  }
  preds [bb35]
  succs [bb55]

bb55
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:31-274:32)
      kind: drop(_67) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb54]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:32-274:33)
      kind: drop(_56) -> [return: bb58, unwind terminate(cleanup)]
  }
  preds [bb36, bb55]
  succs [bb58]

bb57
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:274:31-274:32)
      kind: drop(_57) -> [return: bb58, unwind terminate(cleanup)]
  }
  preds [bb30]
  succs [bb58]

bb58
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:289:5-289:6)
      kind: drop(_9) -> [return: bb59, unwind terminate(cleanup)]
  }
  preds [bb4, bb5, bb6, bb7, bb9, bb10, bb11, bb15, bb16, bb17, bb19, bb20, bb22, bb23, bb24, bb25, bb27, bb28, bb29, bb34, bb37, bb38, bb39, bb41, bb42, bb43, bb49, bb56, bb57]
  succs [bb59]

bb59
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:289:5-289:6)
      kind: drop(_3) -> [return: bb60, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb3, bb46, bb50, bb58]
  succs [bb60]

bb60
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:289:5-289:6)
      kind: drop(_2) -> [return: bb61, unwind terminate(cleanup)]
  }
  preds [bb0, bb47, bb51, bb59]
  succs [bb61]

bb61
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/range_trie.rs:246:5-289:6)
      kind: resume
  }
  preds [bb48, bb52, bb60]
  succs []

