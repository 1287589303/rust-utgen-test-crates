bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/error.rs:82:13-82:16)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/error.rs:82:45-82:48)
  2: _4 = move _2
    SourceInfo(regex-automata/src/meta/error.rs:82:45-82:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:82:19-82:49)
      kind: _3 = <regex_syntax::Error as core::convert::From<regex_syntax::ast::Error>>::from(move _4) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/error.rs:82:48-82:49)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/meta/error.rs:82:13-82:16)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/error.rs:83:28-83:63)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/error.rs:83:53-83:56)
  4: _6 = _1
    SourceInfo(regex-automata/src/meta/error.rs:83:53-83:56)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/error.rs:83:58-83:61)
  6: _7 = move _3
    SourceInfo(regex-automata/src/meta/error.rs:83:58-83:61)
  7: _5 = meta::error::BuildErrorKind::Syntax { pid: move _6, err: move _7 }
    SourceInfo(regex-automata/src/meta/error.rs:83:28-83:63)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:83:62-83:63)
      kind: drop(_7) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/error.rs:83:62-83:63)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/error.rs:83:62-83:63)
  2: _0 = meta::error::BuildError { kind: move _5 }
    SourceInfo(regex-automata/src/meta/error.rs:83:9-83:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:83:64-83:65)
      kind: drop(_5) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/error.rs:83:64-83:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:84:5-84:6)
      kind: drop(_3) -> [return: bb4, unwind: bb9]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/error.rs:84:5-84:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:84:5-84:6)
      kind: drop(_2) -> [return: bb5, unwind: bb10]
  }
  preds [bb3]
  succs [bb5, bb10]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:84:6-84:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:83:64-83:65)
      kind: drop(_5) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:84:5-84:6)
      kind: drop(_3) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb2, bb6]
  succs [bb9]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:82:48-82:49)
      kind: drop(_4) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:84:5-84:6)
      kind: drop(_2) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb3, bb7, bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/error.rs:81:5-84:6)
      kind: resume
  }
  preds [bb4, bb9]
  succs []

