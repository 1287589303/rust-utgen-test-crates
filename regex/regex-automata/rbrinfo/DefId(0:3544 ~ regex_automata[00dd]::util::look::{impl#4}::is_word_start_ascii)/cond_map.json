{
  "regex-automata/src/util/look.rs:1102:13:1102:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "at < haystack.len()",
          "lhs": "at",
          "rhs": "haystack.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:1100:37:1100:73": [
    {
      "Bool": {
        "Other": "utf8::is_word_byte(haystack[at - 1])"
      }
    }
  ],
  "regex-automata/src/util/look.rs:1100:65:1100:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "at - 1",
          "lhs": "at",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:1100:27:1100:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "at > 0",
          "lhs": "at",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-automata/src/util/look.rs:1103:25:1103:35": [
    {
      "Bool": {
        "Other": "word_after"
      }
    }
  ],
  "regex-automata/src/util/look.rs:1102:36:1102:68": [
    {
      "Bool": {
        "Other": "utf8::is_word_byte(haystack[at])"
      }
    }
  ],
  "regex-automata/src/util/look.rs:1103:10:1103:21": [
    {
      "Bool": {
        "Other": "word_before"
      }
    }
  ]
}