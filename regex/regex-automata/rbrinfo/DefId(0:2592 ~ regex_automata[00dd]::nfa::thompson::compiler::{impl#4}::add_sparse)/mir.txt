bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:9-1645:34)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:9-1645:53)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:9-1645:34)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:9-1645:34)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:9-1645:21)
  5: _7 = &((*_1).2: core::cell::RefCell<nfa::thompson::builder::Builder>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:9-1645:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:9-1645:34)
      kind: _6 = core::cell::RefCell::<nfa::thompson::builder::Builder>::borrow_mut(move _7) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: _5 = &mut _6
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:9-1645:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:9-1645:53)
      kind: _4 = <core::cell::RefMut<'_, nfa::thompson::builder::Builder> as core::ops::DerefMut>::deref_mut(move _5) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: _3 = &mut (*_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:9-1645:34)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:33-1645:34)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:33-1645:34)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:46-1645:52)
  4: _8 = move _2
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:46-1645:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:9-1645:53)
      kind: _0 = nfa::thompson::builder::Builder::add_sparse(move _3, move _8) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:52-1645:53)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:52-1645:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1646:5-1646:6)
      kind: drop(_6) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1646:5-1646:6)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1646:5-1646:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1646:5-1646:6)
      kind: drop(_2) -> [return: bb5, unwind: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1646:6-1646:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1645:52-1645:53)
      kind: drop(_8) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1646:5-1646:6)
      kind: drop(_6) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb1, bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1646:5-1646:6)
      kind: drop(_2) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb0, bb3, bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1641:5-1646:6)
      kind: resume
  }
  preds [bb4, bb8]
  succs []

