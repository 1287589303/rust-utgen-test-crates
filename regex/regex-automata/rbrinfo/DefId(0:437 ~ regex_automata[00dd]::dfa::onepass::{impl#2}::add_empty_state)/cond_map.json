{
  "regex-automata/src/dfa/onepass.rs:873:18:874:68": [
    {
      "Try": "StateID::new(next_id)\n            .map_err(|_| BuildError::too_many_states(state_limit))?"
    }
  ],
  "regex-automata/src/dfa/onepass.rs:886:12:886:63": [
    {
      "Bool": {
        "Other": "let Some(size_limit) = self.config.get_size_limit()"
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:872:23:872:65": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.dfa.table.len() >> self.dfa.stride2()",
          "lhs": "self.dfa.table.len()",
          "rhs": "self.dfa.stride2()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:887:16:887:52": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "self.dfa.memory_usage() > size_limit",
          "lhs": "self.dfa.memory_usage()",
          "rhs": "size_limit",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/onepass.rs:875:12:875:52": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "id.as_u64() > Transition::STATE_ID_LIMIT",
          "lhs": "id.as_u64()",
          "rhs": "Transition::STATE_ID_LIMIT",
          "cmp_with_int": false
        }
      }
    }
  ]
}