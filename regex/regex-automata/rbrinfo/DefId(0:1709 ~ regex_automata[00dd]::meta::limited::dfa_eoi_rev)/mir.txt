bb0
  0: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/limited.rs:198:9-198:11)
  1: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/limited.rs:198:14-198:19)
  2: _6 = &(*_2)
    SourceInfo(regex-automata/src/meta/limited.rs:198:14-198:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:198:14-198:30)
      kind: _5 = util::search::Input::<'_>::get_span(move _6) -> [return: bb1, unwind: bb35]
  }
  preds []
  succs [bb1, bb35]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/limited.rs:198:29-198:30)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/meta/limited.rs:198:9-198:11)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/limited.rs:199:5-217:6)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/limited.rs:199:8-199:20)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/limited.rs:199:8-199:16)
  5: _9 = (_5.0: usize)
    SourceInfo(regex-automata/src/meta/limited.rs:199:8-199:16)
  6: _8 = Gt(move _9, const 0_usize)
    SourceInfo(regex-automata/src/meta/limited.rs:199:8-199:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:199:8-199:20)
      kind: switchInt(move _8) -> [0: bb19, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb19]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/limited.rs:199:19-199:20)
  1: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/limited.rs:200:13-200:17)
  2: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/limited.rs:200:20-200:36)
  3: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/limited.rs:200:20-200:25)
  4: _12 = &(*_2)
    SourceInfo(regex-automata/src/meta/limited.rs:200:20-200:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:200:20-200:36)
      kind: _11 = util::search::Input::<'_>::haystack(move _12) -> [return: bb3, unwind: bb35]
  }
  preds [bb1]
  succs [bb3, bb35]

bb3
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/limited.rs:200:35-200:36)
  1: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/limited.rs:200:37-200:49)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/limited.rs:200:37-200:45)
  3: _14 = (_5.0: usize)
    SourceInfo(regex-automata/src/meta/limited.rs:200:37-200:45)
  4: _15 = SubWithOverflow(_14, const 1_usize)
    SourceInfo(regex-automata/src/meta/limited.rs:200:37-200:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:200:37-200:49)
      kind: assert(!move (_15.1: bool), "attempt to compute `{} - {}`, which would overflow", move _14, const 1_usize) -> [success: bb4, unwind: bb35]
  }
  preds [bb2]
  succs [bb4, bb35]

bb4
  0: _13 = move (_15.0: usize)
    SourceInfo(regex-automata/src/meta/limited.rs:200:37-200:49)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/limited.rs:200:48-200:49)
  2: _16 = Len((*_11))
    SourceInfo(regex-automata/src/meta/limited.rs:200:20-200:50)
  3: _17 = Lt(_13, _16)
    SourceInfo(regex-automata/src/meta/limited.rs:200:20-200:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:200:20-200:50)
      kind: assert(move _17, "index out of bounds: the length is {} but the index is {}", move _16, _13) -> [success: bb5, unwind: bb35]
  }
  preds [bb3]
  succs [bb5, bb35]

bb5
  0: _10 = (*_11)[_13]
    SourceInfo(regex-automata/src/meta/limited.rs:200:20-200:50)
  1: FakeRead(ForLet(None), _10)
    SourceInfo(regex-automata/src/meta/limited.rs:200:13-200:17)
  2: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/limited.rs:200:50-200:51)
  3: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/limited.rs:200:50-200:51)
  4: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/limited.rs:201:16-201:42)
  5: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/limited.rs:201:16-201:19)
  6: _19 = &(*_1)
    SourceInfo(regex-automata/src/meta/limited.rs:201:16-201:19)
  7: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/limited.rs:201:31-201:35)
  8: _20 = (*_3)
    SourceInfo(regex-automata/src/meta/limited.rs:201:31-201:35)
  9: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/limited.rs:201:37-201:41)
  10: _21 = _10
    SourceInfo(regex-automata/src/meta/limited.rs:201:37-201:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:201:16-201:42)
      kind: _18 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::next_state(move _19, move _20, move _21) -> [return: bb6, unwind: bb35]
  }
  preds [bb4]
  succs [bb6, bb35]

bb6
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/limited.rs:201:41-201:42)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/limited.rs:201:41-201:42)
  2: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/limited.rs:201:41-201:42)
  3: (*_3) = move _18
    SourceInfo(regex-automata/src/meta/limited.rs:201:9-201:42)
  4: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/limited.rs:201:41-201:42)
  5: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/limited.rs:202:12-202:36)
  6: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/limited.rs:202:12-202:15)
  7: _23 = &(*_1)
    SourceInfo(regex-automata/src/meta/limited.rs:202:12-202:15)
  8: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/limited.rs:202:31-202:35)
  9: _24 = (*_3)
    SourceInfo(regex-automata/src/meta/limited.rs:202:31-202:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:202:12-202:36)
      kind: _22 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::is_match_state(move _23, move _24) -> [return: bb7, unwind: bb35]
  }
  preds [bb5]
  succs [bb7, bb35]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:202:12-202:36)
      kind: switchInt(move _22) -> [0: bb11, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb11]

bb8
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/limited.rs:202:35-202:36)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/limited.rs:202:35-202:36)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/limited.rs:203:17-203:24)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/limited.rs:203:27-203:30)
  4: _26 = &(*_1)
    SourceInfo(regex-automata/src/meta/limited.rs:203:27-203:30)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/limited.rs:203:45-203:49)
  6: _27 = (*_3)
    SourceInfo(regex-automata/src/meta/limited.rs:203:45-203:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:203:27-203:53)
      kind: _25 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::match_pattern(move _26, move _27, const 0_usize) -> [return: bb9, unwind: bb35]
  }
  preds [bb7]
  succs [bb9, bb35]

bb9
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/limited.rs:203:52-203:53)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/limited.rs:203:52-203:53)
  2: FakeRead(ForLet(None), _25)
    SourceInfo(regex-automata/src/meta/limited.rs:203:17-203:24)
  3: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/limited.rs:204:20-204:59)
  4: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/limited.rs:204:25-204:58)
  5: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/limited.rs:204:40-204:47)
  6: _30 = _25
    SourceInfo(regex-automata/src/meta/limited.rs:204:40-204:47)
  7: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/limited.rs:204:49-204:57)
  8: _31 = (_5.0: usize)
    SourceInfo(regex-automata/src/meta/limited.rs:204:49-204:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:204:25-204:58)
      kind: _29 = util::search::HalfMatch::new(move _30, move _31) -> [return: bb10, unwind: bb35]
  }
  preds [bb8]
  succs [bb10, bb35]

bb10
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/limited.rs:204:57-204:58)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/limited.rs:204:57-204:58)
  2: _28 = core::option::Option::<util::search::HalfMatch>::Some(move _29)
    SourceInfo(regex-automata/src/meta/limited.rs:204:20-204:59)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/limited.rs:204:58-204:59)
  4: (*_4) = move _28
    SourceInfo(regex-automata/src/meta/limited.rs:204:13-204:59)
  5: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/limited.rs:204:58-204:59)
  6: _7 = const ()
    SourceInfo(regex-automata/src/meta/limited.rs:202:37-205:10)
  7: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/limited.rs:205:9-205:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:202:9-207:10)
      kind: goto -> bb18
  }
  preds [bb9]
  succs [bb18]

bb11
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/limited.rs:202:35-202:36)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/limited.rs:202:35-202:36)
  2: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/limited.rs:205:19-205:42)
  3: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/limited.rs:205:19-205:22)
  4: _33 = &(*_1)
    SourceInfo(regex-automata/src/meta/limited.rs:205:19-205:22)
  5: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/limited.rs:205:37-205:41)
  6: _34 = (*_3)
    SourceInfo(regex-automata/src/meta/limited.rs:205:37-205:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:205:19-205:42)
      kind: _32 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::is_quit_state(move _33, move _34) -> [return: bb12, unwind: bb35]
  }
  preds [bb7]
  succs [bb12, bb35]

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:205:19-205:42)
      kind: switchInt(move _32) -> [0: bb17, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb17]

bb13
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/limited.rs:205:41-205:42)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/limited.rs:205:41-205:42)
  2: StorageLive(_36)
    SourceInfo(regex-automata/src/meta/limited.rs:206:24-206:60)
  3: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/limited.rs:206:41-206:45)
  4: _37 = _10
    SourceInfo(regex-automata/src/meta/limited.rs:206:41-206:45)
  5: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/limited.rs:206:47-206:59)
  6: StorageLive(_39)
    SourceInfo(regex-automata/src/meta/limited.rs:206:47-206:55)
  7: _39 = (_5.0: usize)
    SourceInfo(regex-automata/src/meta/limited.rs:206:47-206:55)
  8: _40 = SubWithOverflow(_39, const 1_usize)
    SourceInfo(regex-automata/src/meta/limited.rs:206:47-206:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:206:47-206:59)
      kind: assert(!move (_40.1: bool), "attempt to compute `{} - {}`, which would overflow", move _39, const 1_usize) -> [success: bb14, unwind: bb35]
  }
  preds [bb12]
  succs [bb14, bb35]

bb14
  0: _38 = move (_40.0: usize)
    SourceInfo(regex-automata/src/meta/limited.rs:206:47-206:59)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/meta/limited.rs:206:58-206:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:206:24-206:60)
      kind: _36 = util::search::MatchError::quit(move _37, move _38) -> [return: bb15, unwind: bb35]
  }
  preds [bb13]
  succs [bb15, bb35]

bb15
  0: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/limited.rs:206:59-206:60)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/limited.rs:206:59-206:60)
  2: _0 = core::result::Result::<(), util::search::MatchError>::Err(move _36)
    SourceInfo(regex-automata/src/meta/limited.rs:206:20-206:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:206:60-206:61)
      kind: drop(_36) -> [return: bb16, unwind: bb35]
  }
  preds [bb14]
  succs [bb16, bb35]

bb16
  0: StorageDead(_36)
    SourceInfo(regex-automata/src/meta/limited.rs:206:60-206:61)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/limited.rs:207:9-207:10)
  2: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/limited.rs:207:9-207:10)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/limited.rs:208:5-208:6)
  4: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/limited.rs:217:5-217:6)
  5: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/limited.rs:217:5-217:6)
  6: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/limited.rs:219:1-219:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:219:2-219:2)
      kind: goto -> bb34
  }
  preds [bb15]
  succs [bb34]

bb17
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/limited.rs:205:41-205:42)
  1: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/limited.rs:205:41-205:42)
  2: _7 = const ()
    SourceInfo(regex-automata/src/meta/limited.rs:207:10-207:10)
  3: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/limited.rs:207:9-207:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:202:9-207:10)
      kind: goto -> bb18
  }
  preds [bb12]
  succs [bb18]

bb18
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/limited.rs:207:9-207:10)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/limited.rs:208:5-208:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:199:5-217:6)
      kind: goto -> bb33
  }
  preds [bb10, bb17]
  succs [bb33]

bb19
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/limited.rs:199:19-199:20)
  1: StorageLive(_41)
    SourceInfo(regex-automata/src/meta/limited.rs:209:16-209:40)
  2: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/limited.rs:209:16-209:19)
  3: _42 = &(*_1)
    SourceInfo(regex-automata/src/meta/limited.rs:209:16-209:19)
  4: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/limited.rs:209:35-209:39)
  5: _43 = (*_3)
    SourceInfo(regex-automata/src/meta/limited.rs:209:35-209:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:209:16-209:40)
      kind: _41 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::next_eoi_state(move _42, move _43) -> [return: bb20, unwind: bb35]
  }
  preds [bb1]
  succs [bb20, bb35]

bb20
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/limited.rs:209:39-209:40)
  1: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/limited.rs:209:39-209:40)
  2: (*_3) = move _41
    SourceInfo(regex-automata/src/meta/limited.rs:209:9-209:40)
  3: StorageDead(_41)
    SourceInfo(regex-automata/src/meta/limited.rs:209:39-209:40)
  4: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/limited.rs:210:9-213:10)
  5: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/limited.rs:210:12-210:36)
  6: StorageLive(_46)
    SourceInfo(regex-automata/src/meta/limited.rs:210:12-210:15)
  7: _46 = &(*_1)
    SourceInfo(regex-automata/src/meta/limited.rs:210:12-210:15)
  8: StorageLive(_47)
    SourceInfo(regex-automata/src/meta/limited.rs:210:31-210:35)
  9: _47 = (*_3)
    SourceInfo(regex-automata/src/meta/limited.rs:210:31-210:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:210:12-210:36)
      kind: _45 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::is_match_state(move _46, move _47) -> [return: bb21, unwind: bb35]
  }
  preds [bb19]
  succs [bb21, bb35]

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:210:12-210:36)
      kind: switchInt(move _45) -> [0: bb25, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb25]

bb22
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/limited.rs:210:35-210:36)
  1: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/limited.rs:210:35-210:36)
  2: StorageLive(_48)
    SourceInfo(regex-automata/src/meta/limited.rs:211:17-211:24)
  3: StorageLive(_49)
    SourceInfo(regex-automata/src/meta/limited.rs:211:27-211:30)
  4: _49 = &(*_1)
    SourceInfo(regex-automata/src/meta/limited.rs:211:27-211:30)
  5: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/limited.rs:211:45-211:49)
  6: _50 = (*_3)
    SourceInfo(regex-automata/src/meta/limited.rs:211:45-211:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:211:27-211:53)
      kind: _48 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::match_pattern(move _49, move _50, const 0_usize) -> [return: bb23, unwind: bb35]
  }
  preds [bb21]
  succs [bb23, bb35]

bb23
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/limited.rs:211:52-211:53)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/limited.rs:211:52-211:53)
  2: FakeRead(ForLet(None), _48)
    SourceInfo(regex-automata/src/meta/limited.rs:211:17-211:24)
  3: StorageLive(_51)
    SourceInfo(regex-automata/src/meta/limited.rs:212:20-212:52)
  4: StorageLive(_52)
    SourceInfo(regex-automata/src/meta/limited.rs:212:25-212:51)
  5: StorageLive(_53)
    SourceInfo(regex-automata/src/meta/limited.rs:212:40-212:47)
  6: _53 = _48
    SourceInfo(regex-automata/src/meta/limited.rs:212:40-212:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:212:25-212:51)
      kind: _52 = util::search::HalfMatch::new(move _53, const 0_usize) -> [return: bb24, unwind: bb35]
  }
  preds [bb22]
  succs [bb24, bb35]

bb24
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/limited.rs:212:50-212:51)
  1: _51 = core::option::Option::<util::search::HalfMatch>::Some(move _52)
    SourceInfo(regex-automata/src/meta/limited.rs:212:20-212:52)
  2: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/limited.rs:212:51-212:52)
  3: (*_4) = move _51
    SourceInfo(regex-automata/src/meta/limited.rs:212:13-212:52)
  4: StorageDead(_51)
    SourceInfo(regex-automata/src/meta/limited.rs:212:51-212:52)
  5: _44 = const ()
    SourceInfo(regex-automata/src/meta/limited.rs:210:37-213:10)
  6: StorageDead(_48)
    SourceInfo(regex-automata/src/meta/limited.rs:213:9-213:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:210:9-213:10)
      kind: goto -> bb26
  }
  preds [bb23]
  succs [bb26]

bb25
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/limited.rs:210:35-210:36)
  1: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/limited.rs:210:35-210:36)
  2: _44 = const ()
    SourceInfo(regex-automata/src/meta/limited.rs:213:10-213:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:210:9-213:10)
      kind: goto -> bb26
  }
  preds [bb21]
  succs [bb26]

bb26
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/limited.rs:213:9-213:10)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/limited.rs:213:9-213:10)
  2: StorageLive(_54)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  3: StorageLive(_55)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  4: _55 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _55) -> [0: bb31, otherwise: bb27]
  }
  preds [bb24, bb25]
  succs [bb27, bb31]

bb27
  0: StorageLive(_56)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_57)
    SourceInfo(regex-automata/src/meta/limited.rs:216:24-216:47)
  2: StorageLive(_58)
    SourceInfo(regex-automata/src/meta/limited.rs:216:24-216:27)
  3: _58 = &(*_1)
    SourceInfo(regex-automata/src/meta/limited.rs:216:24-216:27)
  4: StorageLive(_59)
    SourceInfo(regex-automata/src/meta/limited.rs:216:42-216:46)
  5: _59 = (*_3)
    SourceInfo(regex-automata/src/meta/limited.rs:216:42-216:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:216:24-216:47)
      kind: _57 = <dfa::dense::DFA<std::vec::Vec<u32>> as dfa::automaton::Automaton>::is_quit_state(move _58, move _59) -> [return: bb28, unwind: bb35]
  }
  preds [bb26]
  succs [bb28, bb35]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:216:24-216:47)
      kind: switchInt(move _57) -> [0: bb30, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb30]

bb29
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/meta/limited.rs:216:46-216:47)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/limited.rs:216:46-216:47)
  2: StorageLive(_60)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _60 = core::panicking::panic(const "assertion failed: !dfa.is_quit_state(*sid)") -> bb35
  }
  preds [bb28]
  succs [bb35]

bb30
  0: StorageDead(_59)
    SourceInfo(regex-automata/src/meta/limited.rs:216:46-216:47)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/limited.rs:216:46-216:47)
  2: _56 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  3: StorageDead(_57)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: StorageDead(_56)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  5: _54 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb32
  }
  preds [bb28]
  succs [bb32]

bb31
  0: _54 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb32
  }
  preds [bb26]
  succs [bb32]

bb32
  0: StorageDead(_55)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_54)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: _7 = const ()
    SourceInfo(regex-automata/src/meta/limited.rs:208:12-217:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:199:5-217:6)
      kind: goto -> bb33
  }
  preds [bb30, bb31]
  succs [bb33]

bb33
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/limited.rs:217:5-217:6)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/limited.rs:217:5-217:6)
  2: StorageLive(_61)
    SourceInfo(regex-automata/src/meta/limited.rs:218:8-218:10)
  3: _61 = ()
    SourceInfo(regex-automata/src/meta/limited.rs:218:8-218:10)
  4: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _61)
    SourceInfo(regex-automata/src/meta/limited.rs:218:5-218:11)
  5: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/limited.rs:218:10-218:11)
  6: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/limited.rs:219:1-219:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:219:2-219:2)
      kind: goto -> bb34
  }
  preds [bb18, bb32]
  succs [bb34]

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:219:2-219:2)
      kind: return
  }
  preds [bb16, bb33]
  succs []

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/limited.rs:190:1-219:2)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb5, bb6, bb8, bb9, bb11, bb13, bb14, bb15, bb19, bb20, bb22, bb23, bb27, bb29]
  succs []

