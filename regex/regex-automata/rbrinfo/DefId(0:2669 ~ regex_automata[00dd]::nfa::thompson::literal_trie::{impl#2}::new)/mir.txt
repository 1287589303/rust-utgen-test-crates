bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:327:13-327:23)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:327:26-327:31)
  2: _3 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:327:26-327:31)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:327:26-327:40)
      kind: _2 = nfa::thompson::literal_trie::State::chunks(move _3) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:327:39-327:40)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:327:13-327:23)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:329:13-329:18)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:329:21-329:34)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:329:21-329:27)
  5: _6 = &mut _2
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:329:21-329:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:329:21-329:34)
      kind: _5 = <nfa::thompson::literal_trie::StateChunksIter<'_> as core::iter::Iterator>::next(move _6) -> [return: bb2, unwind: bb10]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:329:33-329:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:329:21-329:43)
      kind: _4 = core::option::Option::<&[nfa::thompson::literal_trie::Transition]>::unwrap(move _5) -> [return: bb3, unwind: bb10]
  }
  preds [bb1]
  succs [bb3, bb10]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:329:42-329:43)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:329:13-329:18)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:330:13-330:24)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:330:27-330:32)
  4: _8 = &(*_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:330:27-330:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:330:27-330:39)
      kind: _7 = core::slice::<impl [nfa::thompson::literal_trie::Transition]>::iter(move _8) -> [return: bb4, unwind: bb10]
  }
  preds [bb2]
  succs [bb4, bb10]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:330:38-330:39)
  1: FakeRead(ForLet(None), _7)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:330:13-330:24)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:331:17-331:23)
  3: _9 = move _2
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:331:17-331:23)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:331:25-331:36)
  5: _10 = move _7
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:331:25-331:36)
  6: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _11 = std::vec::Vec::<util::primitives::StateID>::new() -> [return: bb5, unwind: bb10]
  }
  preds [bb3]
  succs [bb5, bb10]

bb5
  0: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _12 = std::vec::Vec::<nfa::thompson::nfa::Transition>::new() -> [return: bb6, unwind: bb9]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: _0 = nfa::thompson::literal_trie::Frame::<'_> { chunks: move _9, transitions: move _10, union: move _11, sparse: move _12 }
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:331:9-331:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:331:68-331:69)
      kind: drop(_12) -> [return: bb7, unwind: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:331:68-331:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:331:68-331:69)
      kind: drop(_11) -> [return: bb8, unwind: bb10]
  }
  preds [bb6]
  succs [bb8, bb10]

bb8
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:331:68-331:69)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:331:68-331:69)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:331:68-331:69)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:332:5-332:6)
  4: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:332:5-332:6)
  5: StorageDead(_2)
    SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:332:5-332:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:332:6-332:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:331:68-331:69)
      kind: drop(_11) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb5, bb6]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/literal_trie.rs:326:5-332:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb7, bb9]
  succs []

