bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:226:17-226:20)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:226:44-234:14)
  2: PlaceMention(_1)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:226:50-226:56)
  3: _5 = discriminant(_1)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:226:50-226:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:226:44-226:56)
      kind: switchInt(move _5) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb6, 5: bb7, 6: bb8, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:226:50-226:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:226:50-226:56)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:227:17-227:34)
      kind: falseEdge -> [real: bb9, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb9]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:228:17-228:35)
      kind: falseEdge -> [real: bb12, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb12]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:229:17-229:35)
      kind: falseEdge -> [real: bb15, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb15]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:17-230:34)
      kind: falseEdge -> [real: bb18, imaginary: bb6]
  }
  preds [bb0, bb4]
  succs [bb6, bb18]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:17-231:33)
      kind: falseEdge -> [real: bb22, imaginary: bb7]
  }
  preds [bb0, bb5]
  succs [bb7, bb22]

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:232:17-232:35)
      kind: falseEdge -> [real: bb26, imaginary: bb8]
  }
  preds [bb0, bb6]
  succs [bb8, bb26]

bb8
  0: StorageLive(_24)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:37-233:38)
  1: _24 = move ((_1 as AhoCorasick).0: util::prefilter::aho_corasick::AhoCorasick)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:37-233:38)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:43-233:54)
  3: StorageLive(_26)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:52-233:53)
  4: _26 = move _24
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:52-233:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:43-233:54)
      kind: _25 = std::sync::Arc::<util::prefilter::aho_corasick::AhoCorasick>::new(move _26) -> [return: bb29, unwind: bb43]
  }
  preds [bb0, bb7]
  succs [bb29, bb43]

bb9
  0: StorageLive(_6)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:227:32-227:33)
  1: _6 = move ((_1 as Memchr).0: util::prefilter::memchr::Memchr)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:227:32-227:33)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:227:38-227:49)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:227:47-227:48)
  4: _8 = move _6
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:227:47-227:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:227:38-227:49)
      kind: _7 = std::sync::Arc::<util::prefilter::memchr::Memchr>::new(move _8) -> [return: bb10, unwind: bb49]
  }
  preds [bb2]
  succs [bb10, bb49]

bb10
  0: _4 = move _7 as std::sync::Arc<dyn util::prefilter::PrefilterI> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:227:38-227:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:227:48-227:49)
      kind: drop(_7) -> [return: bb11, unwind: bb49]
  }
  preds [bb9]
  succs [bb11, bb49]

bb11
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:227:48-227:49)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:227:48-227:49)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:227:48-227:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:227:48-227:49)
      kind: goto -> bb32
  }
  preds [bb10]
  succs [bb32]

bb12
  0: StorageLive(_9)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:228:33-228:34)
  1: _9 = move ((_1 as Memchr2).0: util::prefilter::memchr::Memchr2)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:228:33-228:34)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:228:39-228:50)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:228:48-228:49)
  4: _11 = move _9
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:228:48-228:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:228:39-228:50)
      kind: _10 = std::sync::Arc::<util::prefilter::memchr::Memchr2>::new(move _11) -> [return: bb13, unwind: bb49]
  }
  preds [bb3]
  succs [bb13, bb49]

bb13
  0: _4 = move _10 as std::sync::Arc<dyn util::prefilter::PrefilterI> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:228:39-228:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:228:49-228:50)
      kind: drop(_10) -> [return: bb14, unwind: bb49]
  }
  preds [bb12]
  succs [bb14, bb49]

bb14
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:228:49-228:50)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:228:49-228:50)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:228:49-228:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:228:49-228:50)
      kind: goto -> bb32
  }
  preds [bb13]
  succs [bb32]

bb15
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:229:33-229:34)
  1: _12 = move ((_1 as Memchr3).0: util::prefilter::memchr::Memchr3)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:229:33-229:34)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:229:39-229:50)
  3: StorageLive(_14)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:229:48-229:49)
  4: _14 = move _12
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:229:48-229:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:229:39-229:50)
      kind: _13 = std::sync::Arc::<util::prefilter::memchr::Memchr3>::new(move _14) -> [return: bb16, unwind: bb49]
  }
  preds [bb4]
  succs [bb16, bb49]

bb16
  0: _4 = move _13 as std::sync::Arc<dyn util::prefilter::PrefilterI> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:229:39-229:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:229:49-229:50)
      kind: drop(_13) -> [return: bb17, unwind: bb49]
  }
  preds [bb15]
  succs [bb17, bb49]

bb17
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:229:49-229:50)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:229:49-229:50)
  2: StorageDead(_12)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:229:49-229:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:229:49-229:50)
      kind: goto -> bb32
  }
  preds [bb16]
  succs [bb32]

bb18
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:32-230:33)
  1: _15 = move ((_1 as Memmem).0: util::prefilter::memmem::Memmem)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:32-230:33)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:38-230:49)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:47-230:48)
  4: _17 = move _15
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:47-230:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:38-230:49)
      kind: _16 = std::sync::Arc::<util::prefilter::memmem::Memmem>::new(move _17) -> [return: bb19, unwind: bb47]
  }
  preds [bb5]
  succs [bb19, bb47]

bb19
  0: _4 = move _16 as std::sync::Arc<dyn util::prefilter::PrefilterI> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:38-230:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:48-230:49)
      kind: drop(_16) -> [return: bb20, unwind: bb47]
  }
  preds [bb18]
  succs [bb20, bb47]

bb20
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:48-230:49)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:48-230:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:48-230:49)
      kind: drop(_15) -> [return: bb21, unwind: bb49]
  }
  preds [bb19]
  succs [bb21, bb49]

bb21
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:48-230:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:48-230:49)
      kind: goto -> bb32
  }
  preds [bb20]
  succs [bb32]

bb22
  0: StorageLive(_18)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:31-231:32)
  1: _18 = move ((_1 as Teddy).0: util::prefilter::teddy::Teddy)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:31-231:32)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:37-231:48)
  3: StorageLive(_20)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:46-231:47)
  4: _20 = move _18
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:46-231:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:37-231:48)
      kind: _19 = std::sync::Arc::<util::prefilter::teddy::Teddy>::new(move _20) -> [return: bb23, unwind: bb45]
  }
  preds [bb6]
  succs [bb23, bb45]

bb23
  0: _4 = move _19 as std::sync::Arc<dyn util::prefilter::PrefilterI> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:37-231:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:47-231:48)
      kind: drop(_19) -> [return: bb24, unwind: bb45]
  }
  preds [bb22]
  succs [bb24, bb45]

bb24
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:47-231:48)
  1: StorageDead(_19)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:47-231:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:47-231:48)
      kind: drop(_18) -> [return: bb25, unwind: bb49]
  }
  preds [bb23]
  succs [bb25, bb49]

bb25
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:47-231:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:47-231:48)
      kind: goto -> bb32
  }
  preds [bb24]
  succs [bb32]

bb26
  0: StorageLive(_21)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:232:33-232:34)
  1: _21 = move ((_1 as ByteSet).0: util::prefilter::byteset::ByteSet)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:232:33-232:34)
  2: StorageLive(_22)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:232:39-232:50)
  3: StorageLive(_23)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:232:48-232:49)
  4: _23 = move _21
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:232:48-232:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:232:39-232:50)
      kind: _22 = std::sync::Arc::<util::prefilter::byteset::ByteSet>::new(move _23) -> [return: bb27, unwind: bb49]
  }
  preds [bb7]
  succs [bb27, bb49]

bb27
  0: _4 = move _22 as std::sync::Arc<dyn util::prefilter::PrefilterI> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:232:39-232:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:232:49-232:50)
      kind: drop(_22) -> [return: bb28, unwind: bb49]
  }
  preds [bb26]
  succs [bb28, bb49]

bb28
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:232:49-232:50)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:232:49-232:50)
  2: StorageDead(_21)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:232:49-232:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:232:49-232:50)
      kind: goto -> bb32
  }
  preds [bb27]
  succs [bb32]

bb29
  0: _4 = move _25 as std::sync::Arc<dyn util::prefilter::PrefilterI> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:43-233:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:53-233:54)
      kind: drop(_25) -> [return: bb30, unwind: bb43]
  }
  preds [bb8]
  succs [bb30, bb43]

bb30
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:53-233:54)
  1: StorageDead(_25)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:53-233:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:53-233:54)
      kind: drop(_24) -> [return: bb31, unwind: bb49]
  }
  preds [bb29]
  succs [bb31, bb49]

bb31
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:53-233:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:53-233:54)
      kind: goto -> bb32
  }
  preds [bb30]
  succs [bb32]

bb32
  0: _3 = move _4 as std::sync::Arc<dyn util::prefilter::PrefilterI> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:226:44-234:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:234:13-234:14)
      kind: drop(_4) -> [return: bb33, unwind: bb49]
  }
  preds [bb11, bb14, bb17, bb21, bb25, bb28, bb31]
  succs [bb33, bb49]

bb33
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:234:13-234:14)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:226:17-226:20)
  2: AscribeUserType(_3, o, UserTypeProjection { base: UserType(8), projs: [] })
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:226:22-226:41)
  3: StorageLive(_27)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:235:17-235:24)
  4: StorageLive(_28)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:235:27-235:30)
  5: _28 = &_3
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:235:27-235:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:235:27-235:40)
      kind: _27 = <std::sync::Arc<dyn util::prefilter::PrefilterI> as util::prefilter::PrefilterI>::is_fast(move _28) -> [return: bb34, unwind: bb42]
  }
  preds [bb32]
  succs [bb34, bb42]

bb34
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:235:39-235:40)
  1: FakeRead(ForLet(None), _27)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:235:17-235:24)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:18-236:60)
  3: StorageLive(_30)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:30-236:33)
  4: StorageLive(_31)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:30-236:33)
  5: _31 = move _3
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:30-236:33)
  6: _30 = move _31 as std::sync::Arc<dyn util::prefilter::PrefilterI> (PointerCoercion(Unsize))
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:30-236:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:32-236:33)
      kind: drop(_31) -> [return: bb35, unwind: bb41]
  }
  preds [bb33]
  succs [bb35, bb41]

bb35
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:32-236:33)
  1: StorageLive(_32)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:35-236:42)
  2: _32 = _27
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:35-236:42)
  3: StorageLive(_33)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:44-236:58)
  4: _33 = _2
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:44-236:58)
  5: _29 = util::prefilter::Prefilter { pre: move _30, is_fast: move _32, max_needle_len: move _33 }
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:18-236:60)
  6: StorageDead(_33)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:59-236:60)
  7: StorageDead(_32)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:59-236:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:59-236:60)
      kind: drop(_30) -> [return: bb36, unwind: bb40]
  }
  preds [bb34]
  succs [bb36, bb40]

bb36
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:59-236:60)
  1: _0 = core::option::Option::<util::prefilter::Prefilter>::Some(move _29)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:13-236:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:60-236:61)
      kind: drop(_29) -> [return: bb37, unwind: bb42]
  }
  preds [bb35]
  succs [bb37, bb42]

bb37
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:60-236:61)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:237:9-237:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:237:9-237:10)
      kind: drop(_3) -> [return: bb38, unwind: bb49]
  }
  preds [bb36]
  succs [bb38, bb49]

bb38
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/prefilter/mod.rs:237:9-237:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:238:5-238:6)
      kind: drop(_1) -> [return: bb39, unwind: bb50]
  }
  preds [bb37]
  succs [bb39, bb50]

bb39
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:238:6-238:6)
      kind: return
  }
  preds [bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:60-236:61)
      kind: drop(_29) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb35]
  succs [bb42]

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:236:59-236:60)
      kind: drop(_30) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb34]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:237:9-237:10)
      kind: drop(_3) -> [return: bb49, unwind terminate(cleanup)]
  }
  preds [bb33, bb36, bb40, bb41]
  succs [bb49]

bb43
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:53-233:54)
      kind: drop(_26) -> [return: bb44, unwind terminate(cleanup)]
  }
  preds [bb8, bb29]
  succs [bb44]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:233:53-233:54)
      kind: drop(_24) -> [return: bb49, unwind terminate(cleanup)]
  }
  preds [bb43]
  succs [bb49]

bb45
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:47-231:48)
      kind: drop(_20) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb22, bb23]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:231:47-231:48)
      kind: drop(_18) -> [return: bb49, unwind terminate(cleanup)]
  }
  preds [bb45]
  succs [bb49]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:48-230:49)
      kind: drop(_17) -> [return: bb48, unwind terminate(cleanup)]
  }
  preds [bb18, bb19]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:230:48-230:49)
      kind: drop(_15) -> [return: bb49, unwind terminate(cleanup)]
  }
  preds [bb47]
  succs [bb49]

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:238:5-238:6)
      kind: drop(_1) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb9, bb10, bb12, bb13, bb15, bb16, bb20, bb24, bb26, bb27, bb30, bb32, bb37, bb42, bb44, bb46, bb48]
  succs [bb50]

bb50
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/mod.rs:216:5-238:6)
      kind: resume
  }
  preds [bb38, bb49]
  succs []

