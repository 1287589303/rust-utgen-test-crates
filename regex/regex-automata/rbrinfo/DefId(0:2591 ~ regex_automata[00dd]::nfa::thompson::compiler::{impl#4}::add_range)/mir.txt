bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:9-1634:34)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:9-1638:11)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:9-1634:34)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:9-1634:34)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:9-1634:21)
  5: _8 = &((*_1).2: core::cell::RefCell<nfa::thompson::builder::Builder>)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:9-1634:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:9-1634:34)
      kind: _7 = core::cell::RefCell::<nfa::thompson::builder::Builder>::borrow_mut(move _8) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: _6 = &mut _7
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:9-1634:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:9-1638:11)
      kind: _5 = <core::cell::RefMut<'_, nfa::thompson::builder::Builder> as core::ops::DerefMut>::deref_mut(move _6) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: _4 = &mut (*_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:9-1634:34)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:33-1634:34)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:33-1634:34)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:45-1638:10)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1635:13-1635:18)
  5: _10 = _2
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1635:13-1635:18)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1636:13-1636:16)
  7: _11 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1636:13-1636:16)
  8: _9 = nfa::thompson::nfa::Transition { start: move _10, end: move _11, next: const util::primitives::StateID::ZERO }
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:45-1638:10)
  9: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1638:9-1638:10)
  10: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1638:9-1638:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1634:9-1638:11)
      kind: _0 = nfa::thompson::builder::Builder::add_range(move _4, move _9) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1638:10-1638:11)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1638:10-1638:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1639:5-1639:6)
      kind: drop(_7) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1639:5-1639:6)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1639:5-1639:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1639:6-1639:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1639:5-1639:6)
      kind: drop(_7) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb2]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1633:5-1639:6)
      kind: resume
  }
  preds [bb0, bb3, bb5]
  succs []

