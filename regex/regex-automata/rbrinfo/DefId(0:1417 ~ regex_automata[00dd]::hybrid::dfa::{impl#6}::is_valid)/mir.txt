bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2755:13-2755:15)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2755:18-2755:20)
  2: _4 = &_2
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2755:18-2755:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2755:18-2755:40)
      kind: _3 = hybrid::id::LazyStateID::as_usize_untagged(move _4) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2755:39-2755:40)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2755:13-2755:15)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:9-2756:36)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:9-2756:11)
  4: _6 = _3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:9-2756:11)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:14-2756:36)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:14-2756:30)
  7: _8 = &((*((*_1).1: &hybrid::dfa::Cache)).0: std::vec::Vec<hybrid::id::LazyStateID>)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:14-2756:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:14-2756:36)
      kind: _7 = std::vec::Vec::<hybrid::id::LazyStateID>::len(move _8) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:35-2756:36)
  1: _5 = Lt(move _6, move _7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:9-2756:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:9-2756:36)
      kind: switchInt(move _5) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:35-2756:36)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:35-2756:36)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:40-2756:62)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:40-2756:42)
  4: _10 = _3
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:40-2756:42)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:45-2756:62)
  6: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:45-2756:53)
  7: _12 = &(*((*_1).0: &hybrid::dfa::DFA))
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:45-2756:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:45-2756:62)
      kind: _11 = hybrid::dfa::DFA::stride(move _12) -> [return: bb5, unwind: bb8]
  }
  preds [bb2]
  succs [bb5, bb8]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:35-2756:36)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:35-2756:36)
  2: _0 = const false
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:9-2756:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:9-2756:67)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:61-2756:62)
  1: _13 = Eq(_11, const 0_usize)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:40-2756:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:40-2756:62)
      kind: assert(!move _13, "attempt to calculate the remainder of `{}` with a divisor of zero", _10) -> [success: bb6, unwind: bb8]
  }
  preds [bb3]
  succs [bb6, bb8]

bb6
  0: _9 = Rem(move _10, move _11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:40-2756:62)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:61-2756:62)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:61-2756:62)
  3: _0 = Eq(move _9, const 0_usize)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:40-2756:67)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:66-2756:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:9-2756:67)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2756:66-2756:67)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:2757:5-2757:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2757:6-2757:6)
      kind: return
  }
  preds [bb4, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:2754:5-2757:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5]
  succs []

