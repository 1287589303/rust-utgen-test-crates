bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1635:13-1635:19)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1635:56-1635:61)
  2: _5 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1635:56-1635:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1635:22-1635:62)
      kind: _4 = util::start::Config::from_input_reverse(move _5) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1635:61-1635:62)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1635:13-1635:19)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:9-1636:41)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:9-1636:13)
  4: _7 = &(*_1)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:9-1636:13)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:26-1636:31)
  6: _8 = &mut (*_2)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:26-1636:31)
  7: StorageLive(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:33-1636:40)
  8: StorageLive(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:33-1636:40)
  9: _10 = &_4
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:33-1636:40)
  10: _9 = &(*_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:33-1636:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:9-1636:41)
      kind: _6 = hybrid::dfa::DFA::start_state(move _7, move _8, move _9) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:40-1636:41)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:40-1636:41)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:40-1636:41)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:50-1645:10)
  4: StorageLive(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:50-1645:10)
  5: _12 = &(*_3)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:50-1645:10)
  6: _11 = {closure@regex-automata/src/hybrid/dfa.rs:1636:50: 1636:55} { input: move _12 }
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:50-1645:10)
  7: StorageDead(_12)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:54-1636:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1636:9-1645:11)
      kind: _0 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::StartError>::map_err::<util::search::MatchError, {closure@regex-automata/src/hybrid/dfa.rs:1636:50: 1636:55}>(move _6, move _11) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1645:10-1645:11)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1645:10-1645:11)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1646:5-1646:6)
  3: StorageDead(_10)
    SourceInfo(regex-automata/src/hybrid/dfa.rs:1646:5-1646:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1646:6-1646:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/hybrid/dfa.rs:1630:5-1646:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

