bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:955:13-955:18)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:955:21-955:34)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:955:21-955:26)
  3: _6 = &(*_3)
    SourceInfo(regex-automata/src/meta/strategy.rs:955:21-955:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:955:21-955:34)
      kind: _5 = <util::search::Input<'_> as core::clone::Clone>::clone(move _6) -> [return: bb1, unwind: bb16]
  }
  preds []
  succs [bb1, bb16]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/strategy.rs:955:33-955:34)
  1: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:955:44-955:57)
  2: _7 = util::search::Anchored::Yes
    SourceInfo(regex-automata/src/meta/strategy.rs:955:44-955:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:955:21-955:58)
      kind: _4 = util::search::Input::<'_>::anchored(move _5, move _7) -> [return: bb2, unwind: bb16]
  }
  preds [bb0]
  succs [bb2, bb16]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/strategy.rs:955:57-955:58)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/strategy.rs:955:57-955:58)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/meta/strategy.rs:955:13-955:18)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:956:26-956:51)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:956:26-956:39)
  5: _9 = &(((*_1).0: meta::strategy::Core).8: meta::wrappers::DFA)
    SourceInfo(regex-automata/src/meta/strategy.rs:956:26-956:39)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:956:44-956:50)
  7: StorageLive(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:956:44-956:50)
  8: _11 = &_4
    SourceInfo(regex-automata/src/meta/strategy.rs:956:44-956:50)
  9: _10 = &(*_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:956:44-956:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:956:26-956:51)
      kind: _8 = meta::wrappers::DFA::get(move _9, move _10) -> [return: bb3, unwind: bb16]
  }
  preds [bb1]
  succs [bb3, bb16]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/strategy.rs:956:50-956:51)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/strategy.rs:956:50-956:51)
  2: PlaceMention(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:956:26-956:51)
  3: _12 = discriminant(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:956:26-956:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:956:16-956:23)
      kind: switchInt(move _12) -> [1: bb4, otherwise: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:956:16-956:23)
      kind: falseEdge -> [real: bb5, imaginary: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageLive(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:956:21-956:22)
  1: _13 = ((_8 as Some).0: &meta::wrappers::DFAEngine)
    SourceInfo(regex-automata/src/meta/strategy.rs:956:21-956:22)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:961:13-961:14)
  3: _14 = &(*_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:961:13-961:14)
  4: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:961:35-961:41)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:961:35-961:41)
  6: _16 = &_4
    SourceInfo(regex-automata/src/meta/strategy.rs:961:35-961:41)
  7: _15 = &(*_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:961:35-961:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:961:13-961:42)
      kind: _0 = meta::wrappers::DFAEngine::try_search_half_rev(move _14, move _15) -> [return: bb6, unwind: bb16]
  }
  preds [bb4]
  succs [bb6, bb16]

bb6
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/strategy.rs:961:41-961:42)
  1: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/strategy.rs:961:41-961:42)
  2: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/strategy.rs:962:9-962:10)
  3: StorageDead(_13)
    SourceInfo(regex-automata/src/meta/strategy.rs:962:9-962:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:956:9-970:10)
      kind: goto -> bb15
  }
  preds [bb5]
  succs [bb15]

bb7
  0: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:962:33-962:61)
  1: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:962:33-962:49)
  2: _18 = &(((*_1).0: meta::strategy::Core).7: meta::wrappers::Hybrid)
    SourceInfo(regex-automata/src/meta/strategy.rs:962:33-962:49)
  3: StorageLive(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:962:54-962:60)
  4: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:962:54-962:60)
  5: _20 = &_4
    SourceInfo(regex-automata/src/meta/strategy.rs:962:54-962:60)
  6: _19 = &(*_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:962:54-962:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:962:33-962:61)
      kind: _17 = meta::wrappers::Hybrid::get(move _18, move _19) -> [return: bb8, unwind: bb16]
  }
  preds [bb3, bb4]
  succs [bb8, bb16]

bb8
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/meta/strategy.rs:962:60-962:61)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/strategy.rs:962:60-962:61)
  2: PlaceMention(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:962:33-962:61)
  3: _21 = discriminant(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:962:33-962:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:962:23-962:30)
      kind: switchInt(move _21) -> [1: bb9, otherwise: bb12]
  }
  preds [bb7]
  succs [bb9, bb12]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:962:23-962:30)
      kind: falseEdge -> [real: bb10, imaginary: bb12]
  }
  preds [bb8]
  succs [bb10, bb12]

bb10
  0: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:962:28-962:29)
  1: _22 = ((_17 as Some).0: &meta::wrappers::HybridEngine)
    SourceInfo(regex-automata/src/meta/strategy.rs:962:28-962:29)
  2: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:967:13-967:14)
  3: _23 = &(*_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:967:13-967:14)
  4: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:967:35-967:52)
  5: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:967:35-967:52)
  6: _25 = &mut ((*_2).4: meta::wrappers::HybridCache)
    SourceInfo(regex-automata/src/meta/strategy.rs:967:35-967:52)
  7: _24 = &mut (*_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:967:35-967:52)
  8: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:967:54-967:60)
  9: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:967:54-967:60)
  10: _27 = &_4
    SourceInfo(regex-automata/src/meta/strategy.rs:967:54-967:60)
  11: _26 = &(*_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:967:54-967:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:967:13-967:61)
      kind: _0 = meta::wrappers::HybridEngine::try_search_half_rev(move _23, move _24, move _26) -> [return: bb11, unwind: bb16]
  }
  preds [bb9]
  succs [bb11, bb16]

bb11
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/strategy.rs:967:60-967:61)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/strategy.rs:967:60-967:61)
  2: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/strategy.rs:967:60-967:61)
  3: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/strategy.rs:968:9-968:10)
  4: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/strategy.rs:968:9-968:10)
  5: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/strategy.rs:968:9-968:10)
  6: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/strategy.rs:970:9-970:10)
  7: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/strategy.rs:970:9-970:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:956:9-970:10)
      kind: goto -> bb15
  }
  preds [bb10]
  succs [bb15]

bb12
  0: StorageLive(_29)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  1: StorageLive(_30)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageLive(_31)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  3: StorageLive(_32)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  4: StorageLive(_33)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  5: _33 = [const "internal error: entered unreachable code: ReverseAnchored always has a DFA"]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  6: _32 = &_33
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  7: _31 = &(*_32)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  8: StorageLive(_34)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  9: StorageLive(_35)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  10: StorageLive(_36)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _36 = core::fmt::rt::Argument::<'_>::none() -> [return: bb13, unwind: bb16]
  }
  preds [bb8, bb9]
  succs [bb13, bb16]

bb13
  0: _35 = &_36
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  1: _34 = &(*_35)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _30 = core::fmt::Arguments::<'_>::new_v1::<1, 0>(move _31, move _34) -> [return: bb14, unwind: bb16]
  }
  preds [bb12]
  succs [bb14, bb16]

bb14
  0: StorageDead(_34)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_31)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _29 = core::panicking::panic_fmt(move _30) -> bb16
  }
  preds [bb13]
  succs [bb16]

bb15
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/strategy.rs:971:5-971:6)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/meta/strategy.rs:971:5-971:6)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/strategy.rs:971:5-971:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:971:6-971:6)
      kind: return
  }
  preds [bb6, bb11]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/strategy.rs:946:5-971:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb5, bb7, bb10, bb12, bb13, bb14]
  succs []

