bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/stopat.rs:105:9-105:16)
  1: _4 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/meta/stopat.rs:105:19-105:23)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/meta/stopat.rs:105:9-105:16)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:9-106:16)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:57)
  5: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:56)
  6: StorageLive(_8)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:22)
  7: _8 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:22)
  8: StorageLive(_9)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:43-106:48)
  9: _9 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:43-106:48)
  10: StorageLive(_10)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:50-106:55)
  11: _10 = &(*_3)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:50-106:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:56)
      kind: _7 = hybrid::dfa::DFA::start_state_forward(move _8, move _9, move _10) -> [return: bb1, unwind: bb98]
  }
  preds []
  succs [bb1, bb98]

bb1
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:55-106:56)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:55-106:56)
  2: StorageDead(_8)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:55-106:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:57)
      kind: _6 = <core::result::Result<hybrid::id::LazyStateID, util::search::MatchError> as core::ops::Try>::branch(move _7) -> [return: bb2, unwind: bb97]
  }
  preds [bb0]
  succs [bb2, bb97]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:56-106:57)
  1: PlaceMention(_6)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:57)
  2: _11 = discriminant(_6)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:57)
      kind: switchInt(move _11) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _6)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:57)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:106:56-106:57)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_15)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:57)
  1: _15 = ((_6 as Continue).0: hybrid::id::LazyStateID)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:57)
  2: _5 = _15
    SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:57)
  3: StorageDead(_15)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:56-106:57)
  4: FakeRead(ForLet(None), _5)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:9-106:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:106:57-106:58)
      kind: drop(_6) -> [return: bb8, unwind: bb98]
  }
  preds [bb2, bb4]
  succs [bb8, bb98]

bb6
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:56-106:57)
  1: _12 = move ((_6 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:56-106:57)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:56-106:57)
  3: _14 = move _12
    SourceInfo(regex-automata/src/meta/stopat.rs:106:56-106:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:106:19-106:57)
      kind: _0 = <core::result::Result<core::result::Result<util::search::HalfMatch, usize>, meta::error::RetryFailError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _14) -> [return: bb7, unwind: bb94]
  }
  preds [bb4]
  succs [bb7, bb94]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:56-106:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:106:56-106:57)
      kind: drop(_12) -> [return: bb81, unwind: bb96]
  }
  preds [bb6]
  succs [bb81, bb96]

bb8
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:57-106:58)
  1: StorageLive(_16)
    SourceInfo(regex-automata/src/meta/stopat.rs:107:9-107:15)
  2: StorageLive(_17)
    SourceInfo(regex-automata/src/meta/stopat.rs:107:18-107:23)
  3: _17 = &(*_3)
    SourceInfo(regex-automata/src/meta/stopat.rs:107:18-107:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:107:18-107:31)
      kind: _16 = util::search::Input::<'_>::start(move _17) -> [return: bb9, unwind: bb98]
  }
  preds [bb5]
  succs [bb9, bb98]

bb9
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/meta/stopat.rs:107:30-107:31)
  1: FakeRead(ForLet(None), _16)
    SourceInfo(regex-automata/src/meta/stopat.rs:107:9-107:15)
  2: StorageLive(_18)
    SourceInfo(regex-automata/src/meta/stopat.rs:108:5-136:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:108:5-136:6)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:108:5-136:6)
      kind: falseUnwind -> [real: bb11, unwind: bb98]
  }
  preds [bb9, bb62]
  succs [bb11, bb98]

bb11
  0: StorageLive(_20)
    SourceInfo(regex-automata/src/meta/stopat.rs:108:11-108:27)
  1: StorageLive(_21)
    SourceInfo(regex-automata/src/meta/stopat.rs:108:11-108:13)
  2: _21 = _16
    SourceInfo(regex-automata/src/meta/stopat.rs:108:11-108:13)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/meta/stopat.rs:108:16-108:27)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/meta/stopat.rs:108:16-108:21)
  5: _23 = &(*_3)
    SourceInfo(regex-automata/src/meta/stopat.rs:108:16-108:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:108:16-108:27)
      kind: _22 = util::search::Input::<'_>::end(move _23) -> [return: bb12, unwind: bb98]
  }
  preds [bb10]
  succs [bb12, bb98]

bb12
  0: StorageDead(_23)
    SourceInfo(regex-automata/src/meta/stopat.rs:108:26-108:27)
  1: _20 = Lt(move _21, move _22)
    SourceInfo(regex-automata/src/meta/stopat.rs:108:11-108:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:108:11-108:27)
      kind: switchInt(move _20) -> [0: bb63, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb63]

bb13
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/stopat.rs:108:26-108:27)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/stopat.rs:108:26-108:27)
  2: StorageLive(_24)
    SourceInfo(regex-automata/src/meta/stopat.rs:109:15-111:51)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/meta/stopat.rs:109:15-111:51)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/meta/stopat.rs:109:15-111:50)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/meta/stopat.rs:109:15-110:58)
  6: StorageLive(_28)
    SourceInfo(regex-automata/src/meta/stopat.rs:109:15-109:18)
  7: _28 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:109:15-109:18)
  8: StorageLive(_29)
    SourceInfo(regex-automata/src/meta/stopat.rs:110:25-110:30)
  9: _29 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:110:25-110:30)
  10: StorageLive(_30)
    SourceInfo(regex-automata/src/meta/stopat.rs:110:32-110:35)
  11: _30 = _5
    SourceInfo(regex-automata/src/meta/stopat.rs:110:32-110:35)
  12: StorageLive(_31)
    SourceInfo(regex-automata/src/meta/stopat.rs:110:37-110:57)
  13: StorageLive(_32)
    SourceInfo(regex-automata/src/meta/stopat.rs:110:37-110:53)
  14: StorageLive(_33)
    SourceInfo(regex-automata/src/meta/stopat.rs:110:37-110:42)
  15: _33 = &(*_3)
    SourceInfo(regex-automata/src/meta/stopat.rs:110:37-110:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:110:37-110:53)
      kind: _32 = util::search::Input::<'_>::haystack(move _33) -> [return: bb14, unwind: bb98]
  }
  preds [bb12]
  succs [bb14, bb98]

bb14
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/meta/stopat.rs:110:52-110:53)
  1: StorageLive(_34)
    SourceInfo(regex-automata/src/meta/stopat.rs:110:54-110:56)
  2: _34 = _16
    SourceInfo(regex-automata/src/meta/stopat.rs:110:54-110:56)
  3: _35 = Len((*_32))
    SourceInfo(regex-automata/src/meta/stopat.rs:110:37-110:57)
  4: _36 = Lt(_34, _35)
    SourceInfo(regex-automata/src/meta/stopat.rs:110:37-110:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:110:37-110:57)
      kind: assert(move _36, "index out of bounds: the length is {} but the index is {}", move _35, _34) -> [success: bb15, unwind: bb98]
  }
  preds [bb13]
  succs [bb15, bb98]

bb15
  0: _31 = (*_32)[_34]
    SourceInfo(regex-automata/src/meta/stopat.rs:110:37-110:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:109:15-110:58)
      kind: _27 = hybrid::dfa::DFA::next_state(move _28, move _29, move _30, move _31) -> [return: bb16, unwind: bb98]
  }
  preds [bb14]
  succs [bb16, bb98]

bb16
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/meta/stopat.rs:110:57-110:58)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/meta/stopat.rs:110:57-110:58)
  2: StorageDead(_29)
    SourceInfo(regex-automata/src/meta/stopat.rs:110:57-110:58)
  3: StorageDead(_28)
    SourceInfo(regex-automata/src/meta/stopat.rs:110:57-110:58)
  4: StorageLive(_37)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:22-111:49)
  5: StorageLive(_38)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:22-111:49)
  6: _38 = &_16
    SourceInfo(regex-automata/src/meta/stopat.rs:111:22-111:49)
  7: _37 = {closure@regex-automata/src/meta/stopat.rs:111:22: 111:25} { at: move _38 }
    SourceInfo(regex-automata/src/meta/stopat.rs:111:22-111:49)
  8: StorageDead(_38)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:24-111:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:109:15-111:50)
      kind: _26 = core::result::Result::<hybrid::id::LazyStateID, hybrid::error::CacheError>::map_err::<util::search::MatchError, {closure@regex-automata/src/meta/stopat.rs:111:22: 111:25}>(move _27, move _37) -> [return: bb17, unwind: bb98]
  }
  preds [bb15]
  succs [bb17, bb98]

bb17
  0: StorageDead(_37)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:49-111:50)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:49-111:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:109:15-111:51)
      kind: _25 = <core::result::Result<hybrid::id::LazyStateID, util::search::MatchError> as core::ops::Try>::branch(move _26) -> [return: bb18, unwind: bb93]
  }
  preds [bb16]
  succs [bb18, bb93]

bb18
  0: StorageDead(_26)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
  1: PlaceMention(_25)
    SourceInfo(regex-automata/src/meta/stopat.rs:109:15-111:51)
  2: _39 = discriminant(_25)
    SourceInfo(regex-automata/src/meta/stopat.rs:109:15-111:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:109:15-111:51)
      kind: switchInt(move _39) -> [0: bb21, 1: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20, bb21]

bb19
  0: FakeRead(ForMatchedPlace(None), _25)
    SourceInfo(regex-automata/src/meta/stopat.rs:109:15-111:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:109:15-111:51)
      kind: unreachable
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
      kind: falseEdge -> [real: bb22, imaginary: bb21]
  }
  preds [bb18]
  succs [bb21, bb22]

bb21
  0: StorageLive(_43)
    SourceInfo(regex-automata/src/meta/stopat.rs:109:15-111:51)
  1: _43 = ((_25 as Continue).0: hybrid::id::LazyStateID)
    SourceInfo(regex-automata/src/meta/stopat.rs:109:15-111:51)
  2: _24 = _43
    SourceInfo(regex-automata/src/meta/stopat.rs:109:15-111:51)
  3: StorageDead(_43)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
  4: _5 = move _24
    SourceInfo(regex-automata/src/meta/stopat.rs:109:9-111:51)
  5: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:111:51-111:52)
      kind: drop(_25) -> [return: bb24, unwind: bb98]
  }
  preds [bb18, bb20]
  succs [bb24, bb98]

bb22
  0: StorageLive(_40)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
  1: _40 = move ((_25 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
  2: StorageLive(_42)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
  3: _42 = move _40
    SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:109:15-111:51)
      kind: _0 = <core::result::Result<core::result::Result<util::search::HalfMatch, usize>, meta::error::RetryFailError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _42) -> [return: bb23, unwind: bb90]
  }
  preds [bb20]
  succs [bb23, bb90]

bb23
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
      kind: drop(_40) -> [return: bb77, unwind: bb92]
  }
  preds [bb22]
  succs [bb77, bb92]

bb24
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:51-111:52)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:51-111:52)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:51-111:52)
  3: StorageLive(_44)
    SourceInfo(regex-automata/src/meta/stopat.rs:112:9-134:10)
  4: StorageLive(_45)
    SourceInfo(regex-automata/src/meta/stopat.rs:112:12-112:27)
  5: StorageLive(_46)
    SourceInfo(regex-automata/src/meta/stopat.rs:112:12-112:15)
  6: _46 = &_5
    SourceInfo(regex-automata/src/meta/stopat.rs:112:12-112:15)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:112:12-112:27)
      kind: _45 = hybrid::id::LazyStateID::is_tagged(move _46) -> [return: bb25, unwind: bb98]
  }
  preds [bb21]
  succs [bb25, bb98]

bb25
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:112:12-112:27)
      kind: switchInt(move _45) -> [0: bb60, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb60]

bb26
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/stopat.rs:112:26-112:27)
  1: StorageLive(_47)
    SourceInfo(regex-automata/src/meta/stopat.rs:113:16-113:30)
  2: StorageLive(_48)
    SourceInfo(regex-automata/src/meta/stopat.rs:113:16-113:19)
  3: _48 = &_5
    SourceInfo(regex-automata/src/meta/stopat.rs:113:16-113:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:113:16-113:30)
      kind: _47 = hybrid::id::LazyStateID::is_match(move _48) -> [return: bb27, unwind: bb98]
  }
  preds [bb25]
  succs [bb27, bb98]

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:113:16-113:30)
      kind: switchInt(move _47) -> [0: bb35, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb35]

bb28
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/meta/stopat.rs:113:29-113:30)
  1: StorageLive(_49)
    SourceInfo(regex-automata/src/meta/stopat.rs:114:21-114:28)
  2: StorageLive(_50)
    SourceInfo(regex-automata/src/meta/stopat.rs:114:31-114:34)
  3: _50 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:114:31-114:34)
  4: StorageLive(_51)
    SourceInfo(regex-automata/src/meta/stopat.rs:114:49-114:54)
  5: _51 = &(*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:114:49-114:54)
  6: StorageLive(_52)
    SourceInfo(regex-automata/src/meta/stopat.rs:114:56-114:59)
  7: _52 = _5
    SourceInfo(regex-automata/src/meta/stopat.rs:114:56-114:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:114:31-114:63)
      kind: _49 = hybrid::dfa::DFA::match_pattern(move _50, move _51, move _52, const 0_usize) -> [return: bb29, unwind: bb98]
  }
  preds [bb27]
  succs [bb29, bb98]

bb29
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/meta/stopat.rs:114:62-114:63)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/meta/stopat.rs:114:62-114:63)
  2: StorageDead(_50)
    SourceInfo(regex-automata/src/meta/stopat.rs:114:62-114:63)
  3: FakeRead(ForLet(None), _49)
    SourceInfo(regex-automata/src/meta/stopat.rs:114:21-114:28)
  4: StorageLive(_53)
    SourceInfo(regex-automata/src/meta/stopat.rs:115:23-115:56)
  5: StorageLive(_54)
    SourceInfo(regex-automata/src/meta/stopat.rs:115:28-115:55)
  6: StorageLive(_55)
    SourceInfo(regex-automata/src/meta/stopat.rs:115:43-115:50)
  7: _55 = _49
    SourceInfo(regex-automata/src/meta/stopat.rs:115:43-115:50)
  8: StorageLive(_56)
    SourceInfo(regex-automata/src/meta/stopat.rs:115:52-115:54)
  9: _56 = _16
    SourceInfo(regex-automata/src/meta/stopat.rs:115:52-115:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:115:28-115:55)
      kind: _54 = util::search::HalfMatch::new(move _55, move _56) -> [return: bb30, unwind: bb98]
  }
  preds [bb28]
  succs [bb30, bb98]

bb30
  0: StorageDead(_56)
    SourceInfo(regex-automata/src/meta/stopat.rs:115:54-115:55)
  1: StorageDead(_55)
    SourceInfo(regex-automata/src/meta/stopat.rs:115:54-115:55)
  2: _53 = core::option::Option::<util::search::HalfMatch>::Some(move _54)
    SourceInfo(regex-automata/src/meta/stopat.rs:115:23-115:56)
  3: StorageDead(_54)
    SourceInfo(regex-automata/src/meta/stopat.rs:115:55-115:56)
  4: _4 = move _53
    SourceInfo(regex-automata/src/meta/stopat.rs:115:17-115:56)
  5: StorageDead(_53)
    SourceInfo(regex-automata/src/meta/stopat.rs:115:55-115:56)
  6: StorageLive(_57)
    SourceInfo(regex-automata/src/meta/stopat.rs:116:20-116:40)
  7: StorageLive(_58)
    SourceInfo(regex-automata/src/meta/stopat.rs:116:20-116:25)
  8: _58 = &(*_3)
    SourceInfo(regex-automata/src/meta/stopat.rs:116:20-116:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:116:20-116:40)
      kind: _57 = util::search::Input::<'_>::get_earliest(move _58) -> [return: bb31, unwind: bb98]
  }
  preds [bb29]
  succs [bb31, bb98]

bb31
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:116:20-116:40)
      kind: switchInt(move _57) -> [0: bb34, otherwise: bb32]
  }
  preds [bb30]
  succs [bb32, bb34]

bb32
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/stopat.rs:116:39-116:40)
  1: StorageLive(_60)
    SourceInfo(regex-automata/src/meta/stopat.rs:117:31-117:44)
  2: StorageLive(_61)
    SourceInfo(regex-automata/src/meta/stopat.rs:117:31-117:34)
  3: _61 = _4
    SourceInfo(regex-automata/src/meta/stopat.rs:117:31-117:34)
  4: StorageLive(_62)
    SourceInfo(regex-automata/src/meta/stopat.rs:117:41-117:43)
  5: _62 = _16
    SourceInfo(regex-automata/src/meta/stopat.rs:117:41-117:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:117:31-117:44)
      kind: _60 = core::option::Option::<util::search::HalfMatch>::ok_or::<usize>(move _61, move _62) -> [return: bb33, unwind: bb98]
  }
  preds [bb31]
  succs [bb33, bb98]

bb33
  0: StorageDead(_62)
    SourceInfo(regex-automata/src/meta/stopat.rs:117:43-117:44)
  1: StorageDead(_61)
    SourceInfo(regex-automata/src/meta/stopat.rs:117:43-117:44)
  2: _0 = core::result::Result::<core::result::Result<util::search::HalfMatch, usize>, meta::error::RetryFailError>::Ok(move _60)
    SourceInfo(regex-automata/src/meta/stopat.rs:117:28-117:45)
  3: StorageDead(_60)
    SourceInfo(regex-automata/src/meta/stopat.rs:117:44-117:45)
  4: StorageDead(_57)
    SourceInfo(regex-automata/src/meta/stopat.rs:118:17-118:18)
  5: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/stopat.rs:119:13-119:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb32]
  succs [bb76]

bb34
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/meta/stopat.rs:116:39-116:40)
  1: _44 = const ()
    SourceInfo(regex-automata/src/meta/stopat.rs:118:18-118:18)
  2: StorageDead(_57)
    SourceInfo(regex-automata/src/meta/stopat.rs:118:17-118:18)
  3: StorageDead(_49)
    SourceInfo(regex-automata/src/meta/stopat.rs:119:13-119:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:113:13-133:14)
      kind: goto -> bb59
  }
  preds [bb31]
  succs [bb59]

bb35
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/meta/stopat.rs:113:29-113:30)
  1: StorageLive(_63)
    SourceInfo(regex-automata/src/meta/stopat.rs:119:23-119:36)
  2: StorageLive(_64)
    SourceInfo(regex-automata/src/meta/stopat.rs:119:23-119:26)
  3: _64 = &_5
    SourceInfo(regex-automata/src/meta/stopat.rs:119:23-119:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:119:23-119:36)
      kind: _63 = hybrid::id::LazyStateID::is_dead(move _64) -> [return: bb36, unwind: bb98]
  }
  preds [bb27]
  succs [bb36, bb98]

bb36
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:119:23-119:36)
      kind: switchInt(move _63) -> [0: bb39, otherwise: bb37]
  }
  preds [bb35]
  succs [bb37, bb39]

bb37
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/meta/stopat.rs:119:35-119:36)
  1: StorageLive(_66)
    SourceInfo(regex-automata/src/meta/stopat.rs:120:27-120:40)
  2: StorageLive(_67)
    SourceInfo(regex-automata/src/meta/stopat.rs:120:27-120:30)
  3: _67 = _4
    SourceInfo(regex-automata/src/meta/stopat.rs:120:27-120:30)
  4: StorageLive(_68)
    SourceInfo(regex-automata/src/meta/stopat.rs:120:37-120:39)
  5: _68 = _16
    SourceInfo(regex-automata/src/meta/stopat.rs:120:37-120:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:120:27-120:40)
      kind: _66 = core::option::Option::<util::search::HalfMatch>::ok_or::<usize>(move _67, move _68) -> [return: bb38, unwind: bb98]
  }
  preds [bb36]
  succs [bb38, bb98]

bb38
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/meta/stopat.rs:120:39-120:40)
  1: StorageDead(_67)
    SourceInfo(regex-automata/src/meta/stopat.rs:120:39-120:40)
  2: _0 = core::result::Result::<core::result::Result<util::search::HalfMatch, usize>, meta::error::RetryFailError>::Ok(move _66)
    SourceInfo(regex-automata/src/meta/stopat.rs:120:24-120:41)
  3: StorageDead(_66)
    SourceInfo(regex-automata/src/meta/stopat.rs:120:40-120:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:120:17-120:41)
      kind: goto -> bb75
  }
  preds [bb37]
  succs [bb75]

bb39
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/meta/stopat.rs:119:35-119:36)
  1: StorageLive(_69)
    SourceInfo(regex-automata/src/meta/stopat.rs:121:23-121:36)
  2: StorageLive(_70)
    SourceInfo(regex-automata/src/meta/stopat.rs:121:23-121:26)
  3: _70 = &_5
    SourceInfo(regex-automata/src/meta/stopat.rs:121:23-121:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:121:23-121:36)
      kind: _69 = hybrid::id::LazyStateID::is_quit(move _70) -> [return: bb40, unwind: bb98]
  }
  preds [bb36]
  succs [bb40, bb98]

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:121:23-121:36)
      kind: switchInt(move _69) -> [0: bb46, otherwise: bb41]
  }
  preds [bb39]
  succs [bb41, bb46]

bb41
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/meta/stopat.rs:121:35-121:36)
  1: StorageLive(_72)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:28-122:77)
  2: StorageLive(_73)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:28-122:70)
  3: StorageLive(_74)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:45-122:65)
  4: StorageLive(_75)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:45-122:61)
  5: StorageLive(_76)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:45-122:50)
  6: _76 = &(*_3)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:45-122:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:122:45-122:61)
      kind: _75 = util::search::Input::<'_>::haystack(move _76) -> [return: bb42, unwind: bb98]
  }
  preds [bb40]
  succs [bb42, bb98]

bb42
  0: StorageDead(_76)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:60-122:61)
  1: StorageLive(_77)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:62-122:64)
  2: _77 = _16
    SourceInfo(regex-automata/src/meta/stopat.rs:122:62-122:64)
  3: _78 = Len((*_75))
    SourceInfo(regex-automata/src/meta/stopat.rs:122:45-122:65)
  4: _79 = Lt(_77, _78)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:45-122:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:122:45-122:65)
      kind: assert(move _79, "index out of bounds: the length is {} but the index is {}", move _78, _77) -> [success: bb43, unwind: bb98]
  }
  preds [bb41]
  succs [bb43, bb98]

bb43
  0: _74 = (*_75)[_77]
    SourceInfo(regex-automata/src/meta/stopat.rs:122:45-122:65)
  1: StorageLive(_80)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:67-122:69)
  2: _80 = _16
    SourceInfo(regex-automata/src/meta/stopat.rs:122:67-122:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:122:28-122:70)
      kind: _73 = util::search::MatchError::quit(move _74, move _80) -> [return: bb44, unwind: bb98]
  }
  preds [bb42]
  succs [bb44, bb98]

bb44
  0: StorageDead(_80)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:69-122:70)
  1: StorageDead(_74)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:69-122:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:122:28-122:77)
      kind: _72 = <util::search::MatchError as core::convert::Into<meta::error::RetryFailError>>::into(move _73) -> [return: bb45, unwind: bb89]
  }
  preds [bb43]
  succs [bb45, bb89]

bb45
  0: StorageDead(_73)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:76-122:77)
  1: _0 = core::result::Result::<core::result::Result<util::search::HalfMatch, usize>, meta::error::RetryFailError>::Err(move _72)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:24-122:78)
  2: StorageDead(_72)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:77-122:78)
  3: StorageDead(_77)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:78-122:79)
  4: StorageDead(_75)
    SourceInfo(regex-automata/src/meta/stopat.rs:122:78-122:79)
  5: StorageDead(_69)
    SourceInfo(regex-automata/src/meta/stopat.rs:133:13-133:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb75
  }
  preds [bb44]
  succs [bb75]

bb46
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/meta/stopat.rs:121:35-121:36)
  1: StorageLive(_81)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  2: StorageLive(_82)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  3: _82 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _82) -> [0: bb51, otherwise: bb47]
  }
  preds [bb40]
  succs [bb47, bb51]

bb47
  0: StorageLive(_83)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_84)
    SourceInfo(regex-automata/src/meta/stopat.rs:126:32-126:48)
  2: StorageLive(_85)
    SourceInfo(regex-automata/src/meta/stopat.rs:126:32-126:35)
  3: _85 = &_5
    SourceInfo(regex-automata/src/meta/stopat.rs:126:32-126:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:126:32-126:48)
      kind: _84 = hybrid::id::LazyStateID::is_unknown(move _85) -> [return: bb48, unwind: bb98]
  }
  preds [bb46]
  succs [bb48, bb98]

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:126:32-126:48)
      kind: switchInt(move _84) -> [0: bb50, otherwise: bb49]
  }
  preds [bb47]
  succs [bb49, bb50]

bb49
  0: StorageDead(_85)
    SourceInfo(regex-automata/src/meta/stopat.rs:126:47-126:48)
  1: StorageLive(_86)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _86 = core::panicking::panic(const "assertion failed: !sid.is_unknown()") -> bb98
  }
  preds [bb48]
  succs [bb98]

bb50
  0: StorageDead(_85)
    SourceInfo(regex-automata/src/meta/stopat.rs:126:47-126:48)
  1: _83 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_84)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_83)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _81 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb52
  }
  preds [bb48]
  succs [bb52]

bb51
  0: _81 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb52
  }
  preds [bb46]
  succs [bb52]

bb52
  0: StorageDead(_82)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_81)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_87)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  3: StorageLive(_88)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  4: _88 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _88) -> [0: bb57, otherwise: bb53]
  }
  preds [bb50, bb51]
  succs [bb53, bb57]

bb53
  0: StorageLive(_89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_90)
    SourceInfo(regex-automata/src/meta/stopat.rs:132:31-132:45)
  2: StorageLive(_91)
    SourceInfo(regex-automata/src/meta/stopat.rs:132:31-132:34)
  3: _91 = &_5
    SourceInfo(regex-automata/src/meta/stopat.rs:132:31-132:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:132:31-132:45)
      kind: _90 = hybrid::id::LazyStateID::is_start(move _91) -> [return: bb54, unwind: bb98]
  }
  preds [bb52]
  succs [bb54, bb98]

bb54
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:132:31-132:45)
      kind: switchInt(move _90) -> [0: bb56, otherwise: bb55]
  }
  preds [bb53]
  succs [bb55, bb56]

bb55
  0: StorageDead(_91)
    SourceInfo(regex-automata/src/meta/stopat.rs:132:44-132:45)
  1: _89 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_90)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _87 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb58
  }
  preds [bb54]
  succs [bb58]

bb56
  0: StorageDead(_91)
    SourceInfo(regex-automata/src/meta/stopat.rs:132:44-132:45)
  1: StorageLive(_92)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _92 = core::panicking::panic(const "assertion failed: sid.is_start()") -> bb98
  }
  preds [bb54]
  succs [bb98]

bb57
  0: _87 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb58
  }
  preds [bb52]
  succs [bb58]

bb58
  0: StorageDead(_88)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_87)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: _44 = const ()
    SourceInfo(regex-automata/src/meta/stopat.rs:123:20-133:14)
  3: StorageDead(_69)
    SourceInfo(regex-automata/src/meta/stopat.rs:133:13-133:14)
  4: StorageDead(_63)
    SourceInfo(regex-automata/src/meta/stopat.rs:133:13-133:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:113:13-133:14)
      kind: goto -> bb59
  }
  preds [bb55, bb57]
  succs [bb59]

bb59
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/stopat.rs:133:13-133:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:112:9-134:10)
      kind: goto -> bb61
  }
  preds [bb34, bb58]
  succs [bb61]

bb60
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/meta/stopat.rs:112:26-112:27)
  1: _44 = const ()
    SourceInfo(regex-automata/src/meta/stopat.rs:134:10-134:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:112:9-134:10)
      kind: goto -> bb61
  }
  preds [bb25]
  succs [bb61]

bb61
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/stopat.rs:134:9-134:10)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/stopat.rs:134:9-134:10)
  2: _93 = AddWithOverflow(_16, const 1_usize)
    SourceInfo(regex-automata/src/meta/stopat.rs:135:9-135:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:135:9-135:16)
      kind: assert(!move (_93.1: bool), "attempt to compute `{} + {}`, which would overflow", _16, const 1_usize) -> [success: bb62, unwind: bb98]
  }
  preds [bb59, bb60]
  succs [bb62, bb98]

bb62
  0: _16 = move (_93.0: usize)
    SourceInfo(regex-automata/src/meta/stopat.rs:135:9-135:16)
  1: _19 = const ()
    SourceInfo(regex-automata/src/meta/stopat.rs:108:28-136:6)
  2: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/stopat.rs:136:5-136:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:108:5-136:6)
      kind: goto -> bb10
  }
  preds [bb61]
  succs [bb10]

bb63
  0: StorageDead(_22)
    SourceInfo(regex-automata/src/meta/stopat.rs:108:26-108:27)
  1: StorageDead(_21)
    SourceInfo(regex-automata/src/meta/stopat.rs:108:26-108:27)
  2: StorageLive(_95)
    SourceInfo(regex-automata/src/meta/stopat.rs:108:5-136:6)
  3: _18 = const ()
    SourceInfo(regex-automata/src/meta/stopat.rs:108:5-136:6)
  4: StorageDead(_95)
    SourceInfo(regex-automata/src/meta/stopat.rs:136:5-136:6)
  5: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/stopat.rs:136:5-136:6)
  6: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/stopat.rs:136:5-136:6)
  7: StorageLive(_97)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:5-137:59)
  8: StorageLive(_98)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:5-137:59)
  9: StorageLive(_99)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:5-137:58)
  10: StorageLive(_100)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:20-137:23)
  11: _100 = &(*_1)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:20-137:23)
  12: StorageLive(_101)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:25-137:30)
  13: _101 = &mut (*_2)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:25-137:30)
  14: StorageLive(_102)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:32-137:37)
  15: _102 = &(*_3)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:32-137:37)
  16: StorageLive(_103)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:39-137:47)
  17: StorageLive(_104)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:39-137:47)
  18: _104 = &mut _5
    SourceInfo(regex-automata/src/meta/stopat.rs:137:39-137:47)
  19: _103 = &mut (*_104)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:39-137:47)
  20: StorageLive(_105)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:49-137:57)
  21: StorageLive(_106)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:49-137:57)
  22: _106 = &mut _4
    SourceInfo(regex-automata/src/meta/stopat.rs:137:49-137:57)
  23: _105 = &mut (*_106)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:49-137:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:137:5-137:58)
      kind: _99 = meta::stopat::hybrid_eoi_fwd(move _100, move _101, move _102, move _103, move _105) -> [return: bb64, unwind: bb98]
  }
  preds [bb12]
  succs [bb64, bb98]

bb64
  0: StorageDead(_105)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:57-137:58)
  1: StorageDead(_103)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:57-137:58)
  2: StorageDead(_102)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:57-137:58)
  3: StorageDead(_101)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:57-137:58)
  4: StorageDead(_100)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:57-137:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:137:5-137:59)
      kind: _98 = <core::result::Result<(), util::search::MatchError> as core::ops::Try>::branch(move _99) -> [return: bb65, unwind: bb88]
  }
  preds [bb63]
  succs [bb65, bb88]

bb65
  0: StorageDead(_99)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:58-137:59)
  1: PlaceMention(_98)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:5-137:59)
  2: _107 = discriminant(_98)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:5-137:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:137:5-137:59)
      kind: switchInt(move _107) -> [0: bb68, 1: bb67, otherwise: bb66]
  }
  preds [bb64]
  succs [bb66, bb67, bb68]

bb66
  0: FakeRead(ForMatchedPlace(None), _98)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:5-137:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:137:5-137:59)
      kind: unreachable
  }
  preds [bb65]
  succs []

bb67
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:137:58-137:59)
      kind: falseEdge -> [real: bb69, imaginary: bb68]
  }
  preds [bb65]
  succs [bb68, bb69]

bb68
  0: StorageLive(_111)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:5-137:59)
  1: _111 = ((_98 as Continue).0: ())
    SourceInfo(regex-automata/src/meta/stopat.rs:137:5-137:59)
  2: _97 = _111
    SourceInfo(regex-automata/src/meta/stopat.rs:137:5-137:59)
  3: StorageDead(_111)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:58-137:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:137:59-137:60)
      kind: drop(_98) -> [return: bb71, unwind: bb98]
  }
  preds [bb65, bb67]
  succs [bb71, bb98]

bb69
  0: StorageLive(_108)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:58-137:59)
  1: _108 = move ((_98 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:58-137:59)
  2: StorageLive(_110)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:58-137:59)
  3: _110 = move _108
    SourceInfo(regex-automata/src/meta/stopat.rs:137:58-137:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:137:5-137:59)
      kind: _0 = <core::result::Result<core::result::Result<util::search::HalfMatch, usize>, meta::error::RetryFailError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _110) -> [return: bb70, unwind: bb85]
  }
  preds [bb67]
  succs [bb70, bb85]

bb70
  0: StorageDead(_110)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:58-137:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:137:58-137:59)
      kind: drop(_108) -> [return: bb73, unwind: bb87]
  }
  preds [bb69]
  succs [bb73, bb87]

bb71
  0: StorageDead(_106)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:59-137:60)
  1: StorageDead(_104)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:59-137:60)
  2: StorageDead(_98)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:59-137:60)
  3: StorageDead(_97)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:59-137:60)
  4: StorageLive(_112)
    SourceInfo(regex-automata/src/meta/stopat.rs:138:8-138:21)
  5: StorageLive(_113)
    SourceInfo(regex-automata/src/meta/stopat.rs:138:8-138:11)
  6: _113 = _4
    SourceInfo(regex-automata/src/meta/stopat.rs:138:8-138:11)
  7: StorageLive(_114)
    SourceInfo(regex-automata/src/meta/stopat.rs:138:18-138:20)
  8: _114 = _16
    SourceInfo(regex-automata/src/meta/stopat.rs:138:18-138:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:138:8-138:21)
      kind: _112 = core::option::Option::<util::search::HalfMatch>::ok_or::<usize>(move _113, move _114) -> [return: bb72, unwind: bb98]
  }
  preds [bb68]
  succs [bb72, bb98]

bb72
  0: StorageDead(_114)
    SourceInfo(regex-automata/src/meta/stopat.rs:138:20-138:21)
  1: StorageDead(_113)
    SourceInfo(regex-automata/src/meta/stopat.rs:138:20-138:21)
  2: _0 = core::result::Result::<core::result::Result<util::search::HalfMatch, usize>, meta::error::RetryFailError>::Ok(move _112)
    SourceInfo(regex-automata/src/meta/stopat.rs:138:5-138:22)
  3: StorageDead(_112)
    SourceInfo(regex-automata/src/meta/stopat.rs:138:21-138:22)
  4: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/stopat.rs:139:1-139:2)
  5: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/stopat.rs:139:1-139:2)
  6: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/stopat.rs:139:1-139:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:139:2-139:2)
      kind: goto -> bb84
  }
  preds [bb71]
  succs [bb84]

bb73
  0: StorageDead(_108)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:58-137:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:137:59-137:60)
      kind: drop(_98) -> [return: bb74, unwind: bb98]
  }
  preds [bb70]
  succs [bb74, bb98]

bb74
  0: StorageDead(_106)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:59-137:60)
  1: StorageDead(_104)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:59-137:60)
  2: StorageDead(_98)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:59-137:60)
  3: StorageDead(_97)
    SourceInfo(regex-automata/src/meta/stopat.rs:137:59-137:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb80
  }
  preds [bb73]
  succs [bb80]

bb75
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/meta/stopat.rs:133:13-133:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb38, bb45]
  succs [bb76]

bb76
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/meta/stopat.rs:133:13-133:14)
  1: StorageDead(_45)
    SourceInfo(regex-automata/src/meta/stopat.rs:134:9-134:10)
  2: StorageDead(_44)
    SourceInfo(regex-automata/src/meta/stopat.rs:134:9-134:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb33, bb75]
  succs [bb79]

bb77
  0: StorageDead(_40)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:111:51-111:52)
      kind: drop(_25) -> [return: bb78, unwind: bb98]
  }
  preds [bb23]
  succs [bb78, bb98]

bb78
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:51-111:52)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:51-111:52)
  2: StorageDead(_25)
    SourceInfo(regex-automata/src/meta/stopat.rs:111:51-111:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb77]
  succs [bb79]

bb79
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/meta/stopat.rs:136:5-136:6)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/meta/stopat.rs:136:5-136:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb80
  }
  preds [bb76, bb78]
  succs [bb80]

bb80
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/meta/stopat.rs:139:1-139:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb83
  }
  preds [bb74, bb79]
  succs [bb83]

bb81
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:56-106:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:106:57-106:58)
      kind: drop(_6) -> [return: bb82, unwind: bb98]
  }
  preds [bb7]
  succs [bb82, bb98]

bb82
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/stopat.rs:106:57-106:58)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb83
  }
  preds [bb81]
  succs [bb83]

bb83
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/stopat.rs:139:1-139:2)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/stopat.rs:139:1-139:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:139:2-139:2)
      kind: goto -> bb84
  }
  preds [bb80, bb82]
  succs [bb84]

bb84
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:139:2-139:2)
      kind: return
  }
  preds [bb72, bb83]
  succs []

bb85
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:137:58-137:59)
      kind: drop(_110) -> [return: bb86, unwind terminate(cleanup)]
  }
  preds [bb69]
  succs [bb86]

bb86
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:137:58-137:59)
      kind: drop(_108) -> [return: bb87, unwind terminate(cleanup)]
  }
  preds [bb85]
  succs [bb87]

bb87
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:137:59-137:60)
      kind: drop(_98) -> [return: bb98, unwind terminate(cleanup)]
  }
  preds [bb70, bb86]
  succs [bb98]

bb88
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:137:58-137:59)
      kind: drop(_99) -> [return: bb98, unwind terminate(cleanup)]
  }
  preds [bb64]
  succs [bb98]

bb89
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:122:76-122:77)
      kind: drop(_73) -> [return: bb98, unwind terminate(cleanup)]
  }
  preds [bb44]
  succs [bb98]

bb90
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
      kind: drop(_42) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb22]
  succs [bb91]

bb91
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
      kind: drop(_40) -> [return: bb92, unwind terminate(cleanup)]
  }
  preds [bb90]
  succs [bb92]

bb92
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:111:51-111:52)
      kind: drop(_25) -> [return: bb98, unwind terminate(cleanup)]
  }
  preds [bb23, bb91]
  succs [bb98]

bb93
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:111:50-111:51)
      kind: drop(_26) -> [return: bb98, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb98]

bb94
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:106:56-106:57)
      kind: drop(_14) -> [return: bb95, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb95]

bb95
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:106:56-106:57)
      kind: drop(_12) -> [return: bb96, unwind terminate(cleanup)]
  }
  preds [bb94]
  succs [bb96]

bb96
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:106:57-106:58)
      kind: drop(_6) -> [return: bb98, unwind terminate(cleanup)]
  }
  preds [bb7, bb95]
  succs [bb98]

bb97
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:106:56-106:57)
      kind: drop(_7) -> [return: bb98, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb98]

bb98
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/stopat.rs:100:1-139:2)
      kind: resume
  }
  preds [bb0, bb5, bb8, bb10, bb11, bb13, bb14, bb15, bb16, bb21, bb24, bb26, bb28, bb29, bb30, bb32, bb35, bb37, bb39, bb41, bb42, bb43, bb47, bb49, bb53, bb56, bb61, bb63, bb68, bb71, bb73, bb77, bb81, bb87, bb88, bb89, bb92, bb93, bb96, bb97]
  succs []

