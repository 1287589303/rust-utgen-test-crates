bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1809:13-1809:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1809:22-1809:34)
      kind: _3 = util::start::Start::len() -> [return: bb1, unwind: bb19]
  }
  preds []
  succs [bb1, bb19]

bb1
  0: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1809:13-1809:19)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1812:13-1812:16)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1812:19-1817:40)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1812:19-1816:22)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1812:19-1815:57)
  5: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1812:19-1814:22)
  6: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1812:19-1813:51)
  7: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1812:19-1812:25)
  8: _10 = _3
    SourceInfo(regex-automata/src/dfa/sparse.rs:1812:19-1812:25)
  9: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1813:26-1813:50)
  10: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1813:26-1813:37)
  11: _12 = _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:1813:26-1813:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1813:26-1813:50)
      kind: _11 = core::option::Option::<usize>::unwrap_or(move _12, const 0_usize) -> [return: bb2, unwind: bb19]
  }
  preds [bb0]
  succs [bb2, bb19]

bb2
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1813:49-1813:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1812:19-1813:51)
      kind: _9 = core::num::<impl usize>::checked_mul(move _10, move _11) -> [return: bb3, unwind: bb19]
  }
  preds [bb1]
  succs [bb3, bb19]

bb3
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1813:50-1813:51)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1813:50-1813:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1812:19-1814:22)
      kind: _8 = core::option::Option::<usize>::unwrap(move _9) -> [return: bb4, unwind: bb19]
  }
  preds [bb2]
  succs [bb4, bb19]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1814:21-1814:22)
  1: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1815:26-1815:56)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1815:26-1815:47)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1815:26-1815:32)
  4: _15 = _3
    SourceInfo(regex-automata/src/dfa/sparse.rs:1815:26-1815:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1815:26-1815:47)
      kind: _14 = core::num::<impl usize>::checked_mul(move _15, const 2_usize) -> [return: bb5, unwind: bb19]
  }
  preds [bb3]
  succs [bb5, bb19]

bb5
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1815:46-1815:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1815:26-1815:56)
      kind: _13 = core::option::Option::<usize>::unwrap(move _14) -> [return: bb6, unwind: bb19]
  }
  preds [bb4]
  succs [bb6, bb19]

bb6
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1815:55-1815:56)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1812:19-1815:57)
      kind: _7 = core::num::<impl usize>::checked_add(move _8, move _13) -> [return: bb7, unwind: bb19]
  }
  preds [bb5]
  succs [bb7, bb19]

bb7
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1815:56-1815:57)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1815:56-1815:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1812:19-1816:22)
      kind: _6 = core::option::Option::<usize>::unwrap(move _7) -> [return: bb8, unwind: bb19]
  }
  preds [bb6]
  succs [bb8, bb19]

bb8
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1816:21-1816:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1812:19-1817:40)
      kind: _5 = core::num::<impl usize>::checked_mul(move _6, const util::primitives::StateID::SIZE) -> [return: bb9, unwind: bb19]
  }
  preds [bb7]
  succs [bb9, bb19]

bb9
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1817:39-1817:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1812:19-1818:22)
      kind: _4 = core::option::Option::<usize>::unwrap(move _5) -> [return: bb10, unwind: bb19]
  }
  preds [bb8]
  succs [bb10, bb19]

bb10
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1818:21-1818:22)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1812:13-1812:16)
  2: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1820:28-1820:31)
  4: _17 = _4
    SourceInfo(regex-automata/src/dfa/sparse.rs:1820:28-1820:31)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
      kind: _16 = std::vec::from_elem::<u8>(const 0_u8, move _17) -> [return: bb11, unwind: bb19]
  }
  preds [bb9]
  succs [bb11, bb19]

bb11
  0: StorageDead(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  1: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1821:19-1821:35)
  2: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1821:19-1821:22)
  3: _19 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1821:19-1821:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1821:19-1821:35)
      kind: _18 = dfa::dense::DFA::<T>::start_kind(move _19) -> [return: bb12, unwind: bb18]
  }
  preds [bb10]
  succs [bb12, bb18]

bb12
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1821:34-1821:35)
  1: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1822:24-1822:47)
  2: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1822:24-1822:39)
  3: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1822:24-1822:39)
  4: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1822:24-1822:27)
  5: _23 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1822:24-1822:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1822:24-1822:39)
      kind: _22 = dfa::dense::DFA::<T>::start_map(move _23) -> [return: bb13, unwind: bb18]
  }
  preds [bb11]
  succs [bb13, bb18]

bb13
  0: _21 = &(*_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1822:24-1822:39)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1822:38-1822:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1822:24-1822:47)
      kind: _20 = <util::start::StartByteMap as core::clone::Clone>::clone(move _21) -> [return: bb14, unwind: bb18]
  }
  preds [bb12]
  succs [bb14, bb18]

bb14
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1822:46-1822:47)
  1: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1823:13-1823:19)
  2: _24 = _3
    SourceInfo(regex-automata/src/dfa/sparse.rs:1823:13-1823:19)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1824:13-1824:24)
  4: _25 = _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:1824:13-1824:24)
  5: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1825:41-1826:53)
  6: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1825:41-1825:44)
  7: _27 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1825:41-1825:44)
  8: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1826:40-1826:52)
  9: _28 = util::search::Anchored::No
    SourceInfo(regex-automata/src/dfa/sparse.rs:1826:40-1826:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1825:41-1826:53)
      kind: _26 = <dfa::dense::DFA<T> as dfa::automaton::Automaton>::universal_start_state(move _27, move _28) -> [return: bb15, unwind: bb18]
  }
  preds [bb13]
  succs [bb15, bb18]

bb15
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1826:52-1826:53)
  1: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1826:52-1826:53)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1827:39-1827:79)
  3: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1827:39-1827:42)
  4: _30 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1827:39-1827:42)
  5: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1827:65-1827:78)
  6: _31 = util::search::Anchored::Yes
    SourceInfo(regex-automata/src/dfa/sparse.rs:1827:65-1827:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1827:39-1827:79)
      kind: _29 = <dfa::dense::DFA<T> as dfa::automaton::Automaton>::universal_start_state(move _30, move _31) -> [return: bb16, unwind: bb18]
  }
  preds [bb14]
  succs [bb16, bb18]

bb16
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1827:78-1827:79)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1827:78-1827:79)
  2: _0 = dfa::sparse::StartTable::<std::vec::Vec<u8>> { table: move _16, kind: move _18, start_map: move _20, stride: move _24, pattern_len: move _25, universal_start_unanchored: move _26, universal_start_anchored: move _29 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1819:9-1828:10)
  3: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1828:9-1828:10)
  4: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1828:9-1828:10)
  5: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1828:9-1828:10)
  6: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1828:9-1828:10)
  7: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1828:9-1828:10)
  8: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1828:9-1828:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1828:9-1828:10)
      kind: drop(_16) -> [return: bb17, unwind: bb19]
  }
  preds [bb15]
  succs [bb17, bb19]

bb17
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1828:9-1828:10)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1829:5-1829:6)
  2: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1829:5-1829:6)
  3: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1829:5-1829:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1829:6-1829:6)
      kind: return
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1828:9-1828:10)
      kind: drop(_16) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb11, bb12, bb13, bb14, bb15]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1805:5-1829:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10, bb16, bb18]
  succs []

