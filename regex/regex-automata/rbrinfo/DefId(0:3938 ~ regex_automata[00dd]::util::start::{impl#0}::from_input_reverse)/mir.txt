bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/start.rs:156:13-156:24)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/start.rs:156:27-156:60)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/start.rs:156:27-156:43)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/start.rs:156:27-156:43)
  4: StorageLive(_6)
    SourceInfo(regex-automata/src/util/start.rs:156:27-156:32)
  5: _6 = &(*_1)
    SourceInfo(regex-automata/src/util/start.rs:156:27-156:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:156:27-156:43)
      kind: _5 = util::search::Input::<'_>::haystack(move _6) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: _4 = &(*_5)
    SourceInfo(regex-automata/src/util/start.rs:156:27-156:43)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/util/start.rs:156:42-156:43)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/util/start.rs:156:48-156:59)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/util/start.rs:156:48-156:53)
  4: _8 = &(*_1)
    SourceInfo(regex-automata/src/util/start.rs:156:48-156:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:156:48-156:59)
      kind: _7 = util::search::Input::<'_>::end(move _8) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/util/start.rs:156:58-156:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:156:27-156:60)
      kind: _3 = core::slice::<impl [u8]>::get::<usize>(move _4, move _7) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/util/start.rs:156:59-156:60)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/start.rs:156:59-156:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:156:27-156:69)
      kind: _2 = core::option::Option::<&u8>::copied(move _3) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/start.rs:156:68-156:69)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/util/start.rs:156:13-156:24)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/util/start.rs:156:69-156:70)
  3: StorageLive(_9)
    SourceInfo(regex-automata/src/util/start.rs:157:18-157:29)
  4: _9 = _2
    SourceInfo(regex-automata/src/util/start.rs:157:18-157:29)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/util/start.rs:157:41-157:61)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/util/start.rs:157:41-157:46)
  7: _11 = &(*_1)
    SourceInfo(regex-automata/src/util/start.rs:157:41-157:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:157:41-157:61)
      kind: _10 = util::search::Input::<'_>::get_anchored(move _11) -> [return: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/util/start.rs:157:60-157:61)
  1: _0 = util::start::Config { look_behind: move _9, anchored: move _10 }
    SourceInfo(regex-automata/src/util/start.rs:157:9-157:63)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/util/start.rs:157:62-157:63)
  3: StorageDead(_9)
    SourceInfo(regex-automata/src/util/start.rs:157:62-157:63)
  4: StorageDead(_2)
    SourceInfo(regex-automata/src/util/start.rs:158:5-158:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:158:6-158:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/start.rs:155:5-158:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

