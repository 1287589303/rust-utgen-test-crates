bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/search.rs:450:17-450:21)
  1: _4 = core::option::Option::<util::search::HalfMatch>::None
    SourceInfo(regex-automata/src/dfa/search.rs:450:17-450:21)
  2: ((*_3).0: core::option::Option<util::search::HalfMatch>) = move _4
    SourceInfo(regex-automata/src/dfa/search.rs:450:5-450:21)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/search.rs:450:20-450:21)
  4: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/search.rs:451:5-453:6)
  5: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/search.rs:451:8-451:23)
  6: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/search.rs:451:8-451:13)
  7: _7 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:451:8-451:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:451:8-451:23)
      kind: _6 = util::search::Input::<'_>::is_done(move _7) -> [return: bb1, unwind: bb111]
  }
  preds []
  succs [bb1, bb111]

bb1
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:451:8-451:23)
      kind: switchInt(move _6) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/search.rs:451:22-451:23)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/search.rs:452:19-452:21)
  2: _9 = ()
    SourceInfo(regex-automata/src/dfa/search.rs:452:19-452:21)
  3: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _9)
    SourceInfo(regex-automata/src/dfa/search.rs:452:16-452:22)
  4: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/search.rs:452:21-452:22)
  5: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/search.rs:453:5-453:6)
  6: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/search.rs:453:5-453:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb105
  }
  preds [bb1]
  succs [bb105]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/search.rs:451:22-451:23)
  1: _5 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:453:6-453:6)
  2: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/search.rs:453:5-453:6)
  3: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/search.rs:453:5-453:6)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/search.rs:454:9-454:16)
  5: PlaceMention(((*_3).1: core::option::Option<util::primitives::StateID>))
    SourceInfo(regex-automata/src/dfa/search.rs:454:25-454:33)
  6: _11 = discriminant(((*_3).1: core::option::Option<util::primitives::StateID>))
    SourceInfo(regex-automata/src/dfa/search.rs:454:25-454:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:454:19-454:33)
      kind: switchInt(move _11) -> [0: bb5, 1: bb6, otherwise: bb4]
  }
  preds [bb1]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), ((*_3).1: core::option::Option<util::primitives::StateID>))
    SourceInfo(regex-automata/src/dfa/search.rs:454:25-454:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:454:25-454:33)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:455:9-455:13)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/search.rs:465:14-465:17)
  1: _33 = ((((*_3).1: core::option::Option<util::primitives::StateID>) as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/search.rs:465:14-465:17)
  2: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/search.rs:466:13-474:14)
  3: PlaceMention(((*_3).3: core::option::Option<usize>))
    SourceInfo(regex-automata/src/dfa/search.rs:466:40-466:62)
  4: _35 = discriminant(((*_3).3: core::option::Option<usize>))
    SourceInfo(regex-automata/src/dfa/search.rs:466:40-466:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:466:20-466:37)
      kind: switchInt(move _35) -> [1: bb23, otherwise: bb31]
  }
  preds [bb3, bb5]
  succs [bb23, bb31]

bb7
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/search.rs:456:17-456:20)
  1: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/search.rs:456:23-456:44)
  2: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/search.rs:456:23-456:43)
  3: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/search.rs:456:32-456:35)
  4: _15 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:456:32-456:35)
  5: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/search.rs:456:37-456:42)
  6: _16 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:456:37-456:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:456:23-456:43)
      kind: _14 = dfa::search::init_rev::<A>(move _15, move _16) -> [return: bb8, unwind: bb111]
  }
  preds [bb5]
  succs [bb8, bb111]

bb8
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/search.rs:456:42-456:43)
  1: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/search.rs:456:42-456:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:456:23-456:44)
      kind: _13 = <core::result::Result<util::primitives::StateID, util::search::MatchError> as core::ops::Try>::branch(move _14) -> [return: bb9, unwind: bb110]
  }
  preds [bb7]
  succs [bb9, bb110]

bb9
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/search.rs:456:43-456:44)
  1: PlaceMention(_13)
    SourceInfo(regex-automata/src/dfa/search.rs:456:23-456:44)
  2: _17 = discriminant(_13)
    SourceInfo(regex-automata/src/dfa/search.rs:456:23-456:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:456:23-456:44)
      kind: switchInt(move _17) -> [0: bb12, 1: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(regex-automata/src/dfa/search.rs:456:23-456:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:456:23-456:44)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:456:43-456:44)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/search.rs:456:23-456:44)
  1: _21 = ((_13 as Continue).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/search.rs:456:23-456:44)
  2: _12 = _21
    SourceInfo(regex-automata/src/dfa/search.rs:456:23-456:44)
  3: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/search.rs:456:43-456:44)
  4: FakeRead(ForLet(None), _12)
    SourceInfo(regex-automata/src/dfa/search.rs:456:17-456:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:456:44-456:45)
      kind: drop(_13) -> [return: bb15, unwind: bb111]
  }
  preds [bb9, bb11]
  succs [bb15, bb111]

bb13
  0: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/search.rs:456:43-456:44)
  1: _18 = move ((_13 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>)
    SourceInfo(regex-automata/src/dfa/search.rs:456:43-456:44)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/search.rs:456:43-456:44)
  3: _20 = move _18
    SourceInfo(regex-automata/src/dfa/search.rs:456:43-456:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:456:23-456:44)
      kind: _0 = <core::result::Result<(), util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _20) -> [return: bb14, unwind: bb107]
  }
  preds [bb11]
  succs [bb14, bb107]

bb14
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/search.rs:456:43-456:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:456:43-456:44)
      kind: drop(_18) -> [return: bb102, unwind: bb109]
  }
  preds [bb13]
  succs [bb102, bb109]

bb15
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/search.rs:456:44-456:45)
  1: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/search.rs:457:24-457:33)
  2: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/search.rs:457:29-457:32)
  3: _23 = _12
    SourceInfo(regex-automata/src/dfa/search.rs:457:29-457:32)
  4: _22 = core::option::Option::<util::primitives::StateID>::Some(move _23)
    SourceInfo(regex-automata/src/dfa/search.rs:457:24-457:33)
  5: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/search.rs:457:32-457:33)
  6: ((*_3).1: core::option::Option<util::primitives::StateID>) = move _22
    SourceInfo(regex-automata/src/dfa/search.rs:457:13-457:33)
  7: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/search.rs:457:32-457:33)
  8: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/search.rs:458:13-462:14)
  9: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/search.rs:458:16-458:44)
  10: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/search.rs:458:16-458:29)
  11: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/search.rs:458:16-458:21)
  12: _27 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:458:16-458:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:458:16-458:29)
      kind: _26 = util::search::Input::<'_>::start(move _27) -> [return: bb16, unwind: bb111]
  }
  preds [bb12]
  succs [bb16, bb111]

bb16
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/search.rs:458:28-458:29)
  1: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/search.rs:458:33-458:44)
  2: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/search.rs:458:33-458:38)
  3: _29 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:458:33-458:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:458:33-458:44)
      kind: _28 = util::search::Input::<'_>::end(move _29) -> [return: bb17, unwind: bb111]
  }
  preds [bb15]
  succs [bb17, bb111]

bb17
  0: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/search.rs:458:43-458:44)
  1: _25 = Eq(move _26, move _28)
    SourceInfo(regex-automata/src/dfa/search.rs:458:16-458:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:458:16-458:44)
      kind: switchInt(move _25) -> [0: bb19, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19]

bb18
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/search.rs:458:43-458:44)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/search.rs:458:43-458:44)
  2: ((*_3).4: bool) = const true
    SourceInfo(regex-automata/src/dfa/search.rs:459:17-459:37)
  3: _24 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:458:45-460:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:458:13-462:14)
      kind: goto -> bb22
  }
  preds [bb17]
  succs [bb22]

bb19
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/search.rs:458:43-458:44)
  1: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/search.rs:458:43-458:44)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/search.rs:461:28-461:39)
  3: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/search.rs:461:28-461:33)
  4: _31 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:461:28-461:33)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:461:28-461:39)
      kind: _30 = util::search::Input::<'_>::end(move _31) -> [return: bb20, unwind: bb111]
  }
  preds [bb17]
  succs [bb20, bb111]

bb20
  0: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/search.rs:461:38-461:39)
  1: _32 = SubWithOverflow(_30, const 1_usize)
    SourceInfo(regex-automata/src/dfa/search.rs:461:28-461:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:461:28-461:43)
      kind: assert(!move (_32.1: bool), "attempt to compute `{} - {}`, which would overflow", move _30, const 1_usize) -> [success: bb21, unwind: bb111]
  }
  preds [bb19]
  succs [bb21, bb111]

bb21
  0: ((*_3).2: usize) = move (_32.0: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:461:17-461:43)
  1: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/search.rs:461:42-461:43)
  2: _24 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:460:20-462:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:458:13-462:14)
      kind: goto -> bb22
  }
  preds [bb20]
  succs [bb22]

bb22
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/search.rs:462:13-462:14)
  1: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/search.rs:462:13-462:14)
  2: _10 = _12
    SourceInfo(regex-automata/src/dfa/search.rs:463:13-463:16)
  3: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/search.rs:464:9-464:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:464:9-464:10)
      kind: goto -> bb40
  }
  preds [bb18, bb21]
  succs [bb40]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:466:20-466:37)
      kind: falseEdge -> [real: bb24, imaginary: bb31]
  }
  preds [bb6]
  succs [bb24, bb31]

bb24
  0: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/search.rs:466:25-466:36)
  1: _36 = ((((*_3).3: core::option::Option<usize>) as Some).0: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:466:25-466:36)
  2: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/search.rs:467:21-467:30)
  3: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/search.rs:467:33-467:36)
  4: _38 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:467:33-467:36)
  5: StorageLive(_39)
    SourceInfo(regex-automata/src/dfa/search.rs:467:47-467:50)
  6: _39 = _33
    SourceInfo(regex-automata/src/dfa/search.rs:467:47-467:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:467:33-467:51)
      kind: _37 = <A as dfa::automaton::Automaton>::match_len(move _38, move _39) -> [return: bb25, unwind: bb111]
  }
  preds [bb23]
  succs [bb25, bb111]

bb25
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/search.rs:467:50-467:51)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/search.rs:467:50-467:51)
  2: FakeRead(ForLet(None), _37)
    SourceInfo(regex-automata/src/dfa/search.rs:467:21-467:30)
  3: StorageLive(_40)
    SourceInfo(regex-automata/src/dfa/search.rs:468:20-468:43)
  4: StorageLive(_41)
    SourceInfo(regex-automata/src/dfa/search.rs:468:20-468:31)
  5: _41 = _36
    SourceInfo(regex-automata/src/dfa/search.rs:468:20-468:31)
  6: StorageLive(_42)
    SourceInfo(regex-automata/src/dfa/search.rs:468:34-468:43)
  7: _42 = _37
    SourceInfo(regex-automata/src/dfa/search.rs:468:34-468:43)
  8: _40 = Lt(move _41, move _42)
    SourceInfo(regex-automata/src/dfa/search.rs:468:20-468:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:468:20-468:43)
      kind: switchInt(move _40) -> [0: bb30, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb30]

bb26
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/search.rs:468:42-468:43)
  1: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/search.rs:468:42-468:43)
  2: StorageLive(_44)
    SourceInfo(regex-automata/src/dfa/search.rs:469:46-469:67)
  3: StorageLive(_45)
    SourceInfo(regex-automata/src/dfa/search.rs:469:51-469:66)
  4: StorageLive(_46)
    SourceInfo(regex-automata/src/dfa/search.rs:469:51-469:62)
  5: _46 = _36
    SourceInfo(regex-automata/src/dfa/search.rs:469:51-469:62)
  6: _47 = AddWithOverflow(_46, const 1_usize)
    SourceInfo(regex-automata/src/dfa/search.rs:469:51-469:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:469:51-469:66)
      kind: assert(!move (_47.1: bool), "attempt to compute `{} + {}`, which would overflow", move _46, const 1_usize) -> [success: bb27, unwind: bb111]
  }
  preds [bb25]
  succs [bb27, bb111]

bb27
  0: _45 = move (_47.0: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:469:51-469:66)
  1: StorageDead(_46)
    SourceInfo(regex-automata/src/dfa/search.rs:469:65-469:66)
  2: _44 = core::option::Option::<usize>::Some(move _45)
    SourceInfo(regex-automata/src/dfa/search.rs:469:46-469:67)
  3: StorageDead(_45)
    SourceInfo(regex-automata/src/dfa/search.rs:469:66-469:67)
  4: ((*_3).3: core::option::Option<usize>) = move _44
    SourceInfo(regex-automata/src/dfa/search.rs:469:21-469:67)
  5: StorageDead(_44)
    SourceInfo(regex-automata/src/dfa/search.rs:469:66-469:67)
  6: StorageLive(_48)
    SourceInfo(regex-automata/src/dfa/search.rs:470:25-470:32)
  7: StorageLive(_49)
    SourceInfo(regex-automata/src/dfa/search.rs:470:35-470:38)
  8: _49 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:470:35-470:38)
  9: StorageLive(_50)
    SourceInfo(regex-automata/src/dfa/search.rs:470:53-470:56)
  10: _50 = _33
    SourceInfo(regex-automata/src/dfa/search.rs:470:53-470:56)
  11: StorageLive(_51)
    SourceInfo(regex-automata/src/dfa/search.rs:470:58-470:69)
  12: _51 = _36
    SourceInfo(regex-automata/src/dfa/search.rs:470:58-470:69)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:470:35-470:70)
      kind: _48 = <A as dfa::automaton::Automaton>::match_pattern(move _49, move _50, move _51) -> [return: bb28, unwind: bb111]
  }
  preds [bb26]
  succs [bb28, bb111]

bb28
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/search.rs:470:69-470:70)
  1: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/search.rs:470:69-470:70)
  2: StorageDead(_49)
    SourceInfo(regex-automata/src/dfa/search.rs:470:69-470:70)
  3: FakeRead(ForLet(None), _48)
    SourceInfo(regex-automata/src/dfa/search.rs:470:25-470:32)
  4: StorageLive(_52)
    SourceInfo(regex-automata/src/dfa/search.rs:471:33-471:72)
  5: StorageLive(_53)
    SourceInfo(regex-automata/src/dfa/search.rs:471:38-471:71)
  6: StorageLive(_54)
    SourceInfo(regex-automata/src/dfa/search.rs:471:53-471:60)
  7: _54 = _48
    SourceInfo(regex-automata/src/dfa/search.rs:471:53-471:60)
  8: StorageLive(_55)
    SourceInfo(regex-automata/src/dfa/search.rs:471:62-471:70)
  9: _55 = ((*_3).2: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:471:62-471:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:471:38-471:71)
      kind: _53 = util::search::HalfMatch::new(move _54, move _55) -> [return: bb29, unwind: bb111]
  }
  preds [bb27]
  succs [bb29, bb111]

bb29
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/dfa/search.rs:471:70-471:71)
  1: StorageDead(_54)
    SourceInfo(regex-automata/src/dfa/search.rs:471:70-471:71)
  2: _52 = core::option::Option::<util::search::HalfMatch>::Some(move _53)
    SourceInfo(regex-automata/src/dfa/search.rs:471:33-471:72)
  3: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/search.rs:471:71-471:72)
  4: ((*_3).0: core::option::Option<util::search::HalfMatch>) = move _52
    SourceInfo(regex-automata/src/dfa/search.rs:471:21-471:72)
  5: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/search.rs:471:71-471:72)
  6: StorageLive(_56)
    SourceInfo(regex-automata/src/dfa/search.rs:472:31-472:33)
  7: _56 = ()
    SourceInfo(regex-automata/src/dfa/search.rs:472:31-472:33)
  8: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _56)
    SourceInfo(regex-automata/src/dfa/search.rs:472:28-472:34)
  9: StorageDead(_56)
    SourceInfo(regex-automata/src/dfa/search.rs:472:33-472:34)
  10: StorageDead(_48)
    SourceInfo(regex-automata/src/dfa/search.rs:473:17-473:18)
  11: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/search.rs:473:17-473:18)
  12: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/search.rs:474:13-474:14)
  13: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/search.rs:474:13-474:14)
  14: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/search.rs:474:13-474:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb101
  }
  preds [bb28]
  succs [bb101]

bb30
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/search.rs:468:42-468:43)
  1: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/search.rs:468:42-468:43)
  2: _34 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:473:18-473:18)
  3: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/search.rs:473:17-473:18)
  4: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/search.rs:474:13-474:14)
  5: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/search.rs:474:13-474:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:466:13-474:14)
      kind: goto -> bb32
  }
  preds [bb25]
  succs [bb32]

bb31
  0: _34 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:474:14-474:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:466:13-474:14)
      kind: goto -> bb32
  }
  preds [bb6, bb23]
  succs [bb32]

bb32
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/search.rs:474:13-474:14)
  1: StorageLive(_57)
    SourceInfo(regex-automata/src/dfa/search.rs:479:13-489:14)
  2: StorageLive(_58)
    SourceInfo(regex-automata/src/dfa/search.rs:479:16-479:29)
  3: _58 = ((*_3).4: bool)
    SourceInfo(regex-automata/src/dfa/search.rs:479:16-479:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:479:16-479:29)
      kind: switchInt(move _58) -> [0: bb34, otherwise: bb33]
  }
  preds [bb30, bb31]
  succs [bb33, bb34]

bb33
  0: StorageLive(_60)
    SourceInfo(regex-automata/src/dfa/search.rs:480:27-480:29)
  1: _60 = ()
    SourceInfo(regex-automata/src/dfa/search.rs:480:27-480:29)
  2: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _60)
    SourceInfo(regex-automata/src/dfa/search.rs:480:24-480:30)
  3: StorageDead(_60)
    SourceInfo(regex-automata/src/dfa/search.rs:480:29-480:30)
  4: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/search.rs:489:13-489:14)
  5: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/search.rs:489:13-489:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb101
  }
  preds [bb32]
  succs [bb101]

bb34
  0: StorageLive(_61)
    SourceInfo(regex-automata/src/dfa/search.rs:481:23-481:48)
  1: StorageLive(_62)
    SourceInfo(regex-automata/src/dfa/search.rs:481:23-481:31)
  2: _62 = ((*_3).2: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:481:23-481:31)
  3: StorageLive(_63)
    SourceInfo(regex-automata/src/dfa/search.rs:481:35-481:48)
  4: StorageLive(_64)
    SourceInfo(regex-automata/src/dfa/search.rs:481:35-481:40)
  5: _64 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:481:35-481:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:481:35-481:48)
      kind: _63 = util::search::Input::<'_>::start(move _64) -> [return: bb35, unwind: bb111]
  }
  preds [bb32]
  succs [bb35, bb111]

bb35
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/dfa/search.rs:481:47-481:48)
  1: _61 = Eq(move _62, move _63)
    SourceInfo(regex-automata/src/dfa/search.rs:481:23-481:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:481:23-481:48)
      kind: switchInt(move _61) -> [0: bb37, otherwise: bb36]
  }
  preds [bb34]
  succs [bb36, bb37]

bb36
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/search.rs:481:47-481:48)
  1: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/search.rs:481:47-481:48)
  2: ((*_3).4: bool) = const true
    SourceInfo(regex-automata/src/dfa/search.rs:485:17-485:37)
  3: _57 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:481:49-486:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:481:20-489:14)
      kind: goto -> bb39
  }
  preds [bb35]
  succs [bb39]

bb37
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/search.rs:481:47-481:48)
  1: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/search.rs:481:47-481:48)
  2: _65 = SubWithOverflow(((*_3).2: usize), const 1_usize)
    SourceInfo(regex-automata/src/dfa/search.rs:488:17-488:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:488:17-488:30)
      kind: assert(!move (_65.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_3).2: usize), const 1_usize) -> [success: bb38, unwind: bb111]
  }
  preds [bb35]
  succs [bb38, bb111]

bb38
  0: ((*_3).2: usize) = move (_65.0: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:488:17-488:30)
  1: _57 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:486:20-489:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:481:20-489:14)
      kind: goto -> bb39
  }
  preds [bb37]
  succs [bb39]

bb39
  0: StorageDead(_61)
    SourceInfo(regex-automata/src/dfa/search.rs:489:13-489:14)
  1: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/search.rs:489:13-489:14)
  2: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/search.rs:489:13-489:14)
  3: _10 = _33
    SourceInfo(regex-automata/src/dfa/search.rs:490:13-490:16)
  4: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/search.rs:491:9-491:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:491:9-491:10)
      kind: goto -> bb40
  }
  preds [bb36, bb38]
  succs [bb40]

bb40
  0: FakeRead(ForLet(None), _10)
    SourceInfo(regex-automata/src/dfa/search.rs:454:9-454:16)
  1: StorageLive(_66)
    SourceInfo(regex-automata/src/dfa/search.rs:493:5-536:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:493:5-536:6)
      kind: goto -> bb41
  }
  preds [bb22, bb39]
  succs [bb41]

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:493:5-536:6)
      kind: falseUnwind -> [real: bb42, unwind: bb111]
  }
  preds [bb40, bb90]
  succs [bb42, bb111]

bb42
  0: StorageLive(_68)
    SourceInfo(regex-automata/src/dfa/search.rs:493:12-493:25)
  1: _68 = ((*_3).4: bool)
    SourceInfo(regex-automata/src/dfa/search.rs:493:12-493:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:493:12-493:25)
      kind: switchInt(move _68) -> [0: bb43, otherwise: bb91]
  }
  preds [bb41]
  succs [bb43, bb91]

bb43
  0: StorageLive(_69)
    SourceInfo(regex-automata/src/dfa/search.rs:494:15-494:62)
  1: StorageLive(_70)
    SourceInfo(regex-automata/src/dfa/search.rs:494:15-494:18)
  2: _70 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:494:15-494:18)
  3: StorageLive(_71)
    SourceInfo(regex-automata/src/dfa/search.rs:494:30-494:33)
  4: _71 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:494:30-494:33)
  5: StorageLive(_72)
    SourceInfo(regex-automata/src/dfa/search.rs:494:35-494:61)
  6: StorageLive(_73)
    SourceInfo(regex-automata/src/dfa/search.rs:494:35-494:51)
  7: StorageLive(_74)
    SourceInfo(regex-automata/src/dfa/search.rs:494:35-494:40)
  8: _74 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:494:35-494:40)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:494:35-494:51)
      kind: _73 = util::search::Input::<'_>::haystack(move _74) -> [return: bb44, unwind: bb111]
  }
  preds [bb42]
  succs [bb44, bb111]

bb44
  0: StorageDead(_74)
    SourceInfo(regex-automata/src/dfa/search.rs:494:50-494:51)
  1: StorageLive(_75)
    SourceInfo(regex-automata/src/dfa/search.rs:494:52-494:60)
  2: _75 = ((*_3).2: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:494:52-494:60)
  3: _76 = Len((*_73))
    SourceInfo(regex-automata/src/dfa/search.rs:494:35-494:61)
  4: _77 = Lt(_75, _76)
    SourceInfo(regex-automata/src/dfa/search.rs:494:35-494:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:494:35-494:61)
      kind: assert(move _77, "index out of bounds: the length is {} but the index is {}", move _76, _75) -> [success: bb45, unwind: bb111]
  }
  preds [bb43]
  succs [bb45, bb111]

bb45
  0: _72 = (*_73)[_75]
    SourceInfo(regex-automata/src/dfa/search.rs:494:35-494:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:494:15-494:62)
      kind: _69 = <A as dfa::automaton::Automaton>::next_state(move _70, move _71, move _72) -> [return: bb46, unwind: bb111]
  }
  preds [bb44]
  succs [bb46, bb111]

bb46
  0: StorageDead(_72)
    SourceInfo(regex-automata/src/dfa/search.rs:494:61-494:62)
  1: StorageDead(_71)
    SourceInfo(regex-automata/src/dfa/search.rs:494:61-494:62)
  2: StorageDead(_70)
    SourceInfo(regex-automata/src/dfa/search.rs:494:61-494:62)
  3: _10 = move _69
    SourceInfo(regex-automata/src/dfa/search.rs:494:9-494:62)
  4: StorageDead(_69)
    SourceInfo(regex-automata/src/dfa/search.rs:494:61-494:62)
  5: StorageDead(_75)
    SourceInfo(regex-automata/src/dfa/search.rs:494:62-494:63)
  6: StorageDead(_73)
    SourceInfo(regex-automata/src/dfa/search.rs:494:62-494:63)
  7: StorageLive(_78)
    SourceInfo(regex-automata/src/dfa/search.rs:495:9-531:10)
  8: StorageLive(_79)
    SourceInfo(regex-automata/src/dfa/search.rs:495:12-495:37)
  9: StorageLive(_80)
    SourceInfo(regex-automata/src/dfa/search.rs:495:12-495:15)
  10: _80 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:495:12-495:15)
  11: StorageLive(_81)
    SourceInfo(regex-automata/src/dfa/search.rs:495:33-495:36)
  12: _81 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:495:33-495:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:495:12-495:37)
      kind: _79 = <A as dfa::automaton::Automaton>::is_special_state(move _80, move _81) -> [return: bb47, unwind: bb111]
  }
  preds [bb45]
  succs [bb47, bb111]

bb47
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:495:12-495:37)
      kind: switchInt(move _79) -> [0: bb85, otherwise: bb48]
  }
  preds [bb46]
  succs [bb48, bb85]

bb48
  0: StorageDead(_81)
    SourceInfo(regex-automata/src/dfa/search.rs:495:36-495:37)
  1: StorageDead(_80)
    SourceInfo(regex-automata/src/dfa/search.rs:495:36-495:37)
  2: StorageLive(_82)
    SourceInfo(regex-automata/src/dfa/search.rs:496:24-496:33)
  3: StorageLive(_83)
    SourceInfo(regex-automata/src/dfa/search.rs:496:29-496:32)
  4: _83 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:496:29-496:32)
  5: _82 = core::option::Option::<util::primitives::StateID>::Some(move _83)
    SourceInfo(regex-automata/src/dfa/search.rs:496:24-496:33)
  6: StorageDead(_83)
    SourceInfo(regex-automata/src/dfa/search.rs:496:32-496:33)
  7: ((*_3).1: core::option::Option<util::primitives::StateID>) = move _82
    SourceInfo(regex-automata/src/dfa/search.rs:496:13-496:33)
  8: StorageDead(_82)
    SourceInfo(regex-automata/src/dfa/search.rs:496:32-496:33)
  9: StorageLive(_84)
    SourceInfo(regex-automata/src/dfa/search.rs:497:16-497:39)
  10: StorageLive(_85)
    SourceInfo(regex-automata/src/dfa/search.rs:497:16-497:19)
  11: _85 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:497:16-497:19)
  12: StorageLive(_86)
    SourceInfo(regex-automata/src/dfa/search.rs:497:35-497:38)
  13: _86 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:497:35-497:38)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:497:16-497:39)
      kind: _84 = <A as dfa::automaton::Automaton>::is_start_state(move _85, move _86) -> [return: bb49, unwind: bb111]
  }
  preds [bb47]
  succs [bb49, bb111]

bb49
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:497:16-497:39)
      kind: switchInt(move _84) -> [0: bb61, otherwise: bb50]
  }
  preds [bb48]
  succs [bb50, bb61]

bb50
  0: StorageDead(_86)
    SourceInfo(regex-automata/src/dfa/search.rs:497:38-497:39)
  1: StorageDead(_85)
    SourceInfo(regex-automata/src/dfa/search.rs:497:38-497:39)
  2: StorageLive(_87)
    SourceInfo(regex-automata/src/dfa/search.rs:498:20-498:43)
  3: StorageLive(_88)
    SourceInfo(regex-automata/src/dfa/search.rs:498:20-498:23)
  4: _88 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:498:20-498:23)
  5: StorageLive(_89)
    SourceInfo(regex-automata/src/dfa/search.rs:498:39-498:42)
  6: _89 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:498:39-498:42)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:498:20-498:43)
      kind: _87 = <A as dfa::automaton::Automaton>::is_accel_state(move _88, move _89) -> [return: bb51, unwind: bb111]
  }
  preds [bb49]
  succs [bb51, bb111]

bb51
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:498:20-498:43)
      kind: switchInt(move _87) -> [0: bb59, otherwise: bb52]
  }
  preds [bb50]
  succs [bb52, bb59]

bb52
  0: StorageDead(_89)
    SourceInfo(regex-automata/src/dfa/search.rs:498:42-498:43)
  1: StorageDead(_88)
    SourceInfo(regex-automata/src/dfa/search.rs:498:42-498:43)
  2: StorageLive(_90)
    SourceInfo(regex-automata/src/dfa/search.rs:499:25-499:32)
  3: StorageLive(_91)
    SourceInfo(regex-automata/src/dfa/search.rs:499:35-499:38)
  4: _91 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:499:35-499:38)
  5: StorageLive(_92)
    SourceInfo(regex-automata/src/dfa/search.rs:499:51-499:54)
  6: _92 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:499:51-499:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:499:35-499:55)
      kind: _90 = <A as dfa::automaton::Automaton>::accelerator(move _91, move _92) -> [return: bb53, unwind: bb111]
  }
  preds [bb51]
  succs [bb53, bb111]

bb53
  0: StorageDead(_92)
    SourceInfo(regex-automata/src/dfa/search.rs:499:54-499:55)
  1: StorageDead(_91)
    SourceInfo(regex-automata/src/dfa/search.rs:499:54-499:55)
  2: FakeRead(ForLet(None), _90)
    SourceInfo(regex-automata/src/dfa/search.rs:499:25-499:32)
  3: StorageLive(_93)
    SourceInfo(regex-automata/src/dfa/search.rs:501:25-503:54)
  4: StorageLive(_94)
    SourceInfo(regex-automata/src/dfa/search.rs:501:25-502:44)
  5: StorageLive(_95)
    SourceInfo(regex-automata/src/dfa/search.rs:501:25-501:77)
  6: StorageLive(_96)
    SourceInfo(regex-automata/src/dfa/search.rs:501:41-501:48)
  7: _96 = &(*_90)
    SourceInfo(regex-automata/src/dfa/search.rs:501:41-501:48)
  8: StorageLive(_97)
    SourceInfo(regex-automata/src/dfa/search.rs:501:50-501:66)
  9: StorageLive(_98)
    SourceInfo(regex-automata/src/dfa/search.rs:501:50-501:66)
  10: StorageLive(_99)
    SourceInfo(regex-automata/src/dfa/search.rs:501:50-501:55)
  11: _99 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:501:50-501:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:501:50-501:66)
      kind: _98 = util::search::Input::<'_>::haystack(move _99) -> [return: bb54, unwind: bb111]
  }
  preds [bb52]
  succs [bb54, bb111]

bb54
  0: _97 = &(*_98)
    SourceInfo(regex-automata/src/dfa/search.rs:501:50-501:66)
  1: StorageDead(_99)
    SourceInfo(regex-automata/src/dfa/search.rs:501:65-501:66)
  2: StorageLive(_100)
    SourceInfo(regex-automata/src/dfa/search.rs:501:68-501:76)
  3: _100 = ((*_3).2: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:501:68-501:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:501:25-501:77)
      kind: _95 = dfa::accel::find_rev(move _96, move _97, move _100) -> [return: bb55, unwind: bb111]
  }
  preds [bb53]
  succs [bb55, bb111]

bb55
  0: StorageDead(_100)
    SourceInfo(regex-automata/src/dfa/search.rs:501:76-501:77)
  1: StorageDead(_97)
    SourceInfo(regex-automata/src/dfa/search.rs:501:76-501:77)
  2: StorageDead(_96)
    SourceInfo(regex-automata/src/dfa/search.rs:501:76-501:77)
  3: StorageLive(_101)
    SourceInfo(regex-automata/src/dfa/search.rs:502:34-502:43)
  4: _101 = {closure@regex-automata/src/dfa/search.rs:502:34: 502:37}
    SourceInfo(regex-automata/src/dfa/search.rs:502:34-502:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:501:25-502:44)
      kind: _94 = core::option::Option::<usize>::map::<usize, {closure@regex-automata/src/dfa/search.rs:502:34: 502:37}>(move _95, move _101) -> [return: bb56, unwind: bb111]
  }
  preds [bb54]
  succs [bb56, bb111]

bb56
  0: StorageDead(_101)
    SourceInfo(regex-automata/src/dfa/search.rs:502:43-502:44)
  1: StorageDead(_95)
    SourceInfo(regex-automata/src/dfa/search.rs:502:43-502:44)
  2: StorageLive(_102)
    SourceInfo(regex-automata/src/dfa/search.rs:503:40-503:53)
  3: StorageLive(_103)
    SourceInfo(regex-automata/src/dfa/search.rs:503:40-503:45)
  4: _103 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:503:40-503:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:503:40-503:53)
      kind: _102 = util::search::Input::<'_>::start(move _103) -> [return: bb57, unwind: bb111]
  }
  preds [bb55]
  succs [bb57, bb111]

bb57
  0: StorageDead(_103)
    SourceInfo(regex-automata/src/dfa/search.rs:503:52-503:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:501:25-503:54)
      kind: _93 = core::option::Option::<usize>::unwrap_or(move _94, move _102) -> [return: bb58, unwind: bb111]
  }
  preds [bb56]
  succs [bb58, bb111]

bb58
  0: StorageDead(_102)
    SourceInfo(regex-automata/src/dfa/search.rs:503:53-503:54)
  1: StorageDead(_94)
    SourceInfo(regex-automata/src/dfa/search.rs:503:53-503:54)
  2: ((*_3).2: usize) = move _93
    SourceInfo(regex-automata/src/dfa/search.rs:500:21-503:54)
  3: StorageDead(_93)
    SourceInfo(regex-automata/src/dfa/search.rs:503:53-503:54)
  4: StorageDead(_98)
    SourceInfo(regex-automata/src/dfa/search.rs:503:54-503:55)
  5: _78 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:498:44-504:18)
  6: StorageDead(_90)
    SourceInfo(regex-automata/src/dfa/search.rs:504:17-504:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:498:17-504:18)
      kind: goto -> bb60
  }
  preds [bb57]
  succs [bb60]

bb59
  0: StorageDead(_89)
    SourceInfo(regex-automata/src/dfa/search.rs:498:42-498:43)
  1: StorageDead(_88)
    SourceInfo(regex-automata/src/dfa/search.rs:498:42-498:43)
  2: _78 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:504:18-504:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:498:17-504:18)
      kind: goto -> bb60
  }
  preds [bb51]
  succs [bb60]

bb60
  0: StorageDead(_87)
    SourceInfo(regex-automata/src/dfa/search.rs:504:17-504:18)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:497:13-530:14)
      kind: goto -> bb84
  }
  preds [bb58, bb59]
  succs [bb84]

bb61
  0: StorageDead(_86)
    SourceInfo(regex-automata/src/dfa/search.rs:497:38-497:39)
  1: StorageDead(_85)
    SourceInfo(regex-automata/src/dfa/search.rs:497:38-497:39)
  2: StorageLive(_104)
    SourceInfo(regex-automata/src/dfa/search.rs:505:23-505:46)
  3: StorageLive(_105)
    SourceInfo(regex-automata/src/dfa/search.rs:505:23-505:26)
  4: _105 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:505:23-505:26)
  5: StorageLive(_106)
    SourceInfo(regex-automata/src/dfa/search.rs:505:42-505:45)
  6: _106 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:505:42-505:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:505:23-505:46)
      kind: _104 = <A as dfa::automaton::Automaton>::is_match_state(move _105, move _106) -> [return: bb62, unwind: bb111]
  }
  preds [bb49]
  succs [bb62, bb111]

bb62
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:505:23-505:46)
      kind: switchInt(move _104) -> [0: bb67, otherwise: bb63]
  }
  preds [bb61]
  succs [bb63, bb67]

bb63
  0: StorageDead(_106)
    SourceInfo(regex-automata/src/dfa/search.rs:505:45-505:46)
  1: StorageDead(_105)
    SourceInfo(regex-automata/src/dfa/search.rs:505:45-505:46)
  2: StorageLive(_108)
    SourceInfo(regex-automata/src/dfa/search.rs:506:42-506:49)
  3: _108 = core::option::Option::<usize>::Some(const 1_usize)
    SourceInfo(regex-automata/src/dfa/search.rs:506:42-506:49)
  4: ((*_3).3: core::option::Option<usize>) = move _108
    SourceInfo(regex-automata/src/dfa/search.rs:506:17-506:49)
  5: StorageDead(_108)
    SourceInfo(regex-automata/src/dfa/search.rs:506:48-506:49)
  6: StorageLive(_109)
    SourceInfo(regex-automata/src/dfa/search.rs:507:21-507:28)
  7: StorageLive(_110)
    SourceInfo(regex-automata/src/dfa/search.rs:507:31-507:34)
  8: _110 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:507:31-507:34)
  9: StorageLive(_111)
    SourceInfo(regex-automata/src/dfa/search.rs:507:49-507:52)
  10: _111 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:507:49-507:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:507:31-507:56)
      kind: _109 = <A as dfa::automaton::Automaton>::match_pattern(move _110, move _111, const 0_usize) -> [return: bb64, unwind: bb111]
  }
  preds [bb62]
  succs [bb64, bb111]

bb64
  0: StorageDead(_111)
    SourceInfo(regex-automata/src/dfa/search.rs:507:55-507:56)
  1: StorageDead(_110)
    SourceInfo(regex-automata/src/dfa/search.rs:507:55-507:56)
  2: FakeRead(ForLet(None), _109)
    SourceInfo(regex-automata/src/dfa/search.rs:507:21-507:28)
  3: StorageLive(_112)
    SourceInfo(regex-automata/src/dfa/search.rs:508:29-508:72)
  4: StorageLive(_113)
    SourceInfo(regex-automata/src/dfa/search.rs:508:34-508:71)
  5: StorageLive(_114)
    SourceInfo(regex-automata/src/dfa/search.rs:508:49-508:56)
  6: _114 = _109
    SourceInfo(regex-automata/src/dfa/search.rs:508:49-508:56)
  7: StorageLive(_115)
    SourceInfo(regex-automata/src/dfa/search.rs:508:58-508:70)
  8: StorageLive(_116)
    SourceInfo(regex-automata/src/dfa/search.rs:508:58-508:66)
  9: _116 = ((*_3).2: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:508:58-508:66)
  10: _117 = AddWithOverflow(_116, const 1_usize)
    SourceInfo(regex-automata/src/dfa/search.rs:508:58-508:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:508:58-508:70)
      kind: assert(!move (_117.1: bool), "attempt to compute `{} + {}`, which would overflow", move _116, const 1_usize) -> [success: bb65, unwind: bb111]
  }
  preds [bb63]
  succs [bb65, bb111]

bb65
  0: _115 = move (_117.0: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:508:58-508:70)
  1: StorageDead(_116)
    SourceInfo(regex-automata/src/dfa/search.rs:508:69-508:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:508:34-508:71)
      kind: _113 = util::search::HalfMatch::new(move _114, move _115) -> [return: bb66, unwind: bb111]
  }
  preds [bb64]
  succs [bb66, bb111]

bb66
  0: StorageDead(_115)
    SourceInfo(regex-automata/src/dfa/search.rs:508:70-508:71)
  1: StorageDead(_114)
    SourceInfo(regex-automata/src/dfa/search.rs:508:70-508:71)
  2: _112 = core::option::Option::<util::search::HalfMatch>::Some(move _113)
    SourceInfo(regex-automata/src/dfa/search.rs:508:29-508:72)
  3: StorageDead(_113)
    SourceInfo(regex-automata/src/dfa/search.rs:508:71-508:72)
  4: ((*_3).0: core::option::Option<util::search::HalfMatch>) = move _112
    SourceInfo(regex-automata/src/dfa/search.rs:508:17-508:72)
  5: StorageDead(_112)
    SourceInfo(regex-automata/src/dfa/search.rs:508:71-508:72)
  6: StorageLive(_118)
    SourceInfo(regex-automata/src/dfa/search.rs:509:27-509:29)
  7: _118 = ()
    SourceInfo(regex-automata/src/dfa/search.rs:509:27-509:29)
  8: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _118)
    SourceInfo(regex-automata/src/dfa/search.rs:509:24-509:30)
  9: StorageDead(_118)
    SourceInfo(regex-automata/src/dfa/search.rs:509:29-509:30)
  10: StorageDead(_109)
    SourceInfo(regex-automata/src/dfa/search.rs:510:13-510:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb100
  }
  preds [bb65]
  succs [bb100]

bb67
  0: StorageDead(_106)
    SourceInfo(regex-automata/src/dfa/search.rs:505:45-505:46)
  1: StorageDead(_105)
    SourceInfo(regex-automata/src/dfa/search.rs:505:45-505:46)
  2: StorageLive(_119)
    SourceInfo(regex-automata/src/dfa/search.rs:510:23-510:46)
  3: StorageLive(_120)
    SourceInfo(regex-automata/src/dfa/search.rs:510:23-510:26)
  4: _120 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:510:23-510:26)
  5: StorageLive(_121)
    SourceInfo(regex-automata/src/dfa/search.rs:510:42-510:45)
  6: _121 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:510:42-510:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:510:23-510:46)
      kind: _119 = <A as dfa::automaton::Automaton>::is_accel_state(move _120, move _121) -> [return: bb68, unwind: bb111]
  }
  preds [bb62]
  succs [bb68, bb111]

bb68
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:510:23-510:46)
      kind: switchInt(move _119) -> [0: bb76, otherwise: bb69]
  }
  preds [bb67]
  succs [bb69, bb76]

bb69
  0: StorageDead(_121)
    SourceInfo(regex-automata/src/dfa/search.rs:510:45-510:46)
  1: StorageDead(_120)
    SourceInfo(regex-automata/src/dfa/search.rs:510:45-510:46)
  2: StorageLive(_122)
    SourceInfo(regex-automata/src/dfa/search.rs:511:21-511:28)
  3: StorageLive(_123)
    SourceInfo(regex-automata/src/dfa/search.rs:511:31-511:34)
  4: _123 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:511:31-511:34)
  5: StorageLive(_124)
    SourceInfo(regex-automata/src/dfa/search.rs:511:47-511:50)
  6: _124 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:511:47-511:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:511:31-511:51)
      kind: _122 = <A as dfa::automaton::Automaton>::accelerator(move _123, move _124) -> [return: bb70, unwind: bb111]
  }
  preds [bb68]
  succs [bb70, bb111]

bb70
  0: StorageDead(_124)
    SourceInfo(regex-automata/src/dfa/search.rs:511:50-511:51)
  1: StorageDead(_123)
    SourceInfo(regex-automata/src/dfa/search.rs:511:50-511:51)
  2: FakeRead(ForLet(None), _122)
    SourceInfo(regex-automata/src/dfa/search.rs:511:21-511:28)
  3: StorageLive(_125)
    SourceInfo(regex-automata/src/dfa/search.rs:520:21-522:50)
  4: StorageLive(_126)
    SourceInfo(regex-automata/src/dfa/search.rs:520:21-521:40)
  5: StorageLive(_127)
    SourceInfo(regex-automata/src/dfa/search.rs:520:21-520:73)
  6: StorageLive(_128)
    SourceInfo(regex-automata/src/dfa/search.rs:520:37-520:44)
  7: _128 = &(*_122)
    SourceInfo(regex-automata/src/dfa/search.rs:520:37-520:44)
  8: StorageLive(_129)
    SourceInfo(regex-automata/src/dfa/search.rs:520:46-520:62)
  9: StorageLive(_130)
    SourceInfo(regex-automata/src/dfa/search.rs:520:46-520:62)
  10: StorageLive(_131)
    SourceInfo(regex-automata/src/dfa/search.rs:520:46-520:51)
  11: _131 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:520:46-520:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:520:46-520:62)
      kind: _130 = util::search::Input::<'_>::haystack(move _131) -> [return: bb71, unwind: bb111]
  }
  preds [bb69]
  succs [bb71, bb111]

bb71
  0: _129 = &(*_130)
    SourceInfo(regex-automata/src/dfa/search.rs:520:46-520:62)
  1: StorageDead(_131)
    SourceInfo(regex-automata/src/dfa/search.rs:520:61-520:62)
  2: StorageLive(_132)
    SourceInfo(regex-automata/src/dfa/search.rs:520:64-520:72)
  3: _132 = ((*_3).2: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:520:64-520:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:520:21-520:73)
      kind: _127 = dfa::accel::find_rev(move _128, move _129, move _132) -> [return: bb72, unwind: bb111]
  }
  preds [bb70]
  succs [bb72, bb111]

bb72
  0: StorageDead(_132)
    SourceInfo(regex-automata/src/dfa/search.rs:520:72-520:73)
  1: StorageDead(_129)
    SourceInfo(regex-automata/src/dfa/search.rs:520:72-520:73)
  2: StorageDead(_128)
    SourceInfo(regex-automata/src/dfa/search.rs:520:72-520:73)
  3: StorageLive(_133)
    SourceInfo(regex-automata/src/dfa/search.rs:521:30-521:39)
  4: _133 = {closure@regex-automata/src/dfa/search.rs:521:30: 521:33}
    SourceInfo(regex-automata/src/dfa/search.rs:521:30-521:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:520:21-521:40)
      kind: _126 = core::option::Option::<usize>::map::<usize, {closure@regex-automata/src/dfa/search.rs:521:30: 521:33}>(move _127, move _133) -> [return: bb73, unwind: bb111]
  }
  preds [bb71]
  succs [bb73, bb111]

bb73
  0: StorageDead(_133)
    SourceInfo(regex-automata/src/dfa/search.rs:521:39-521:40)
  1: StorageDead(_127)
    SourceInfo(regex-automata/src/dfa/search.rs:521:39-521:40)
  2: StorageLive(_134)
    SourceInfo(regex-automata/src/dfa/search.rs:522:36-522:49)
  3: StorageLive(_135)
    SourceInfo(regex-automata/src/dfa/search.rs:522:36-522:41)
  4: _135 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:522:36-522:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:522:36-522:49)
      kind: _134 = util::search::Input::<'_>::start(move _135) -> [return: bb74, unwind: bb111]
  }
  preds [bb72]
  succs [bb74, bb111]

bb74
  0: StorageDead(_135)
    SourceInfo(regex-automata/src/dfa/search.rs:522:48-522:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:520:21-522:50)
      kind: _125 = core::option::Option::<usize>::unwrap_or(move _126, move _134) -> [return: bb75, unwind: bb111]
  }
  preds [bb73]
  succs [bb75, bb111]

bb75
  0: StorageDead(_134)
    SourceInfo(regex-automata/src/dfa/search.rs:522:49-522:50)
  1: StorageDead(_126)
    SourceInfo(regex-automata/src/dfa/search.rs:522:49-522:50)
  2: ((*_3).2: usize) = move _125
    SourceInfo(regex-automata/src/dfa/search.rs:519:17-522:50)
  3: StorageDead(_125)
    SourceInfo(regex-automata/src/dfa/search.rs:522:49-522:50)
  4: StorageDead(_130)
    SourceInfo(regex-automata/src/dfa/search.rs:522:50-522:51)
  5: _78 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:510:47-523:14)
  6: StorageDead(_122)
    SourceInfo(regex-automata/src/dfa/search.rs:523:13-523:14)
  7: StorageDead(_119)
    SourceInfo(regex-automata/src/dfa/search.rs:530:13-530:14)
  8: StorageDead(_104)
    SourceInfo(regex-automata/src/dfa/search.rs:530:13-530:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:497:13-530:14)
      kind: goto -> bb84
  }
  preds [bb74]
  succs [bb84]

bb76
  0: StorageDead(_121)
    SourceInfo(regex-automata/src/dfa/search.rs:510:45-510:46)
  1: StorageDead(_120)
    SourceInfo(regex-automata/src/dfa/search.rs:510:45-510:46)
  2: StorageLive(_136)
    SourceInfo(regex-automata/src/dfa/search.rs:523:23-523:45)
  3: StorageLive(_137)
    SourceInfo(regex-automata/src/dfa/search.rs:523:23-523:26)
  4: _137 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:523:23-523:26)
  5: StorageLive(_138)
    SourceInfo(regex-automata/src/dfa/search.rs:523:41-523:44)
  6: _138 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:523:41-523:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:523:23-523:45)
      kind: _136 = <A as dfa::automaton::Automaton>::is_dead_state(move _137, move _138) -> [return: bb77, unwind: bb111]
  }
  preds [bb68]
  succs [bb77, bb111]

bb77
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:523:23-523:45)
      kind: switchInt(move _136) -> [0: bb79, otherwise: bb78]
  }
  preds [bb76]
  succs [bb78, bb79]

bb78
  0: StorageDead(_138)
    SourceInfo(regex-automata/src/dfa/search.rs:523:44-523:45)
  1: StorageDead(_137)
    SourceInfo(regex-automata/src/dfa/search.rs:523:44-523:45)
  2: StorageLive(_140)
    SourceInfo(regex-automata/src/dfa/search.rs:524:27-524:29)
  3: _140 = ()
    SourceInfo(regex-automata/src/dfa/search.rs:524:27-524:29)
  4: _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _140)
    SourceInfo(regex-automata/src/dfa/search.rs:524:24-524:30)
  5: StorageDead(_140)
    SourceInfo(regex-automata/src/dfa/search.rs:524:29-524:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:524:17-524:30)
      kind: goto -> bb99
  }
  preds [bb77]
  succs [bb99]

bb79
  0: StorageDead(_138)
    SourceInfo(regex-automata/src/dfa/search.rs:523:44-523:45)
  1: StorageDead(_137)
    SourceInfo(regex-automata/src/dfa/search.rs:523:44-523:45)
  2: StorageLive(_142)
    SourceInfo(regex-automata/src/dfa/search.rs:526:28-529:18)
  3: StorageLive(_143)
    SourceInfo(regex-automata/src/dfa/search.rs:527:21-527:47)
  4: StorageLive(_144)
    SourceInfo(regex-automata/src/dfa/search.rs:527:21-527:37)
  5: StorageLive(_145)
    SourceInfo(regex-automata/src/dfa/search.rs:527:21-527:26)
  6: _145 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:527:21-527:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:527:21-527:37)
      kind: _144 = util::search::Input::<'_>::haystack(move _145) -> [return: bb80, unwind: bb111]
  }
  preds [bb77]
  succs [bb80, bb111]

bb80
  0: StorageDead(_145)
    SourceInfo(regex-automata/src/dfa/search.rs:527:36-527:37)
  1: StorageLive(_146)
    SourceInfo(regex-automata/src/dfa/search.rs:527:38-527:46)
  2: _146 = ((*_3).2: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:527:38-527:46)
  3: _147 = Len((*_144))
    SourceInfo(regex-automata/src/dfa/search.rs:527:21-527:47)
  4: _148 = Lt(_146, _147)
    SourceInfo(regex-automata/src/dfa/search.rs:527:21-527:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:527:21-527:47)
      kind: assert(move _148, "index out of bounds: the length is {} but the index is {}", move _147, _146) -> [success: bb81, unwind: bb111]
  }
  preds [bb79]
  succs [bb81, bb111]

bb81
  0: _143 = (*_144)[_146]
    SourceInfo(regex-automata/src/dfa/search.rs:527:21-527:47)
  1: StorageLive(_149)
    SourceInfo(regex-automata/src/dfa/search.rs:528:21-528:29)
  2: _149 = ((*_3).2: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:528:21-528:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:526:28-529:18)
      kind: _142 = util::search::MatchError::quit(move _143, move _149) -> [return: bb82, unwind: bb111]
  }
  preds [bb80]
  succs [bb82, bb111]

bb82
  0: StorageDead(_149)
    SourceInfo(regex-automata/src/dfa/search.rs:529:17-529:18)
  1: StorageDead(_143)
    SourceInfo(regex-automata/src/dfa/search.rs:529:17-529:18)
  2: _0 = core::result::Result::<(), util::search::MatchError>::Err(move _142)
    SourceInfo(regex-automata/src/dfa/search.rs:526:24-529:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:529:18-529:19)
      kind: drop(_142) -> [return: bb83, unwind: bb111]
  }
  preds [bb81]
  succs [bb83, bb111]

bb83
  0: StorageDead(_142)
    SourceInfo(regex-automata/src/dfa/search.rs:529:18-529:19)
  1: StorageDead(_146)
    SourceInfo(regex-automata/src/dfa/search.rs:529:19-529:20)
  2: StorageDead(_144)
    SourceInfo(regex-automata/src/dfa/search.rs:529:19-529:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb99
  }
  preds [bb82]
  succs [bb99]

bb84
  0: StorageDead(_84)
    SourceInfo(regex-automata/src/dfa/search.rs:530:13-530:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:495:9-531:10)
      kind: goto -> bb86
  }
  preds [bb60, bb75]
  succs [bb86]

bb85
  0: StorageDead(_81)
    SourceInfo(regex-automata/src/dfa/search.rs:495:36-495:37)
  1: StorageDead(_80)
    SourceInfo(regex-automata/src/dfa/search.rs:495:36-495:37)
  2: _78 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:531:10-531:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:495:9-531:10)
      kind: goto -> bb86
  }
  preds [bb47]
  succs [bb86]

bb86
  0: StorageDead(_79)
    SourceInfo(regex-automata/src/dfa/search.rs:531:9-531:10)
  1: StorageDead(_78)
    SourceInfo(regex-automata/src/dfa/search.rs:531:9-531:10)
  2: StorageLive(_150)
    SourceInfo(regex-automata/src/dfa/search.rs:532:9-534:10)
  3: StorageLive(_151)
    SourceInfo(regex-automata/src/dfa/search.rs:532:12-532:37)
  4: StorageLive(_152)
    SourceInfo(regex-automata/src/dfa/search.rs:532:12-532:20)
  5: _152 = ((*_3).2: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:532:12-532:20)
  6: StorageLive(_153)
    SourceInfo(regex-automata/src/dfa/search.rs:532:24-532:37)
  7: StorageLive(_154)
    SourceInfo(regex-automata/src/dfa/search.rs:532:24-532:29)
  8: _154 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:532:24-532:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:532:24-532:37)
      kind: _153 = util::search::Input::<'_>::start(move _154) -> [return: bb87, unwind: bb111]
  }
  preds [bb84, bb85]
  succs [bb87, bb111]

bb87
  0: StorageDead(_154)
    SourceInfo(regex-automata/src/dfa/search.rs:532:36-532:37)
  1: _151 = Eq(move _152, move _153)
    SourceInfo(regex-automata/src/dfa/search.rs:532:12-532:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:532:12-532:37)
      kind: switchInt(move _151) -> [0: bb89, otherwise: bb88]
  }
  preds [bb86]
  succs [bb88, bb89]

bb88
  0: StorageDead(_153)
    SourceInfo(regex-automata/src/dfa/search.rs:532:36-532:37)
  1: StorageDead(_152)
    SourceInfo(regex-automata/src/dfa/search.rs:532:36-532:37)
  2: _66 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:533:13-533:18)
  3: StorageDead(_151)
    SourceInfo(regex-automata/src/dfa/search.rs:534:9-534:10)
  4: StorageDead(_150)
    SourceInfo(regex-automata/src/dfa/search.rs:534:9-534:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb92
  }
  preds [bb87]
  succs [bb92]

bb89
  0: StorageDead(_153)
    SourceInfo(regex-automata/src/dfa/search.rs:532:36-532:37)
  1: StorageDead(_152)
    SourceInfo(regex-automata/src/dfa/search.rs:532:36-532:37)
  2: _150 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:534:10-534:10)
  3: StorageDead(_151)
    SourceInfo(regex-automata/src/dfa/search.rs:534:9-534:10)
  4: StorageDead(_150)
    SourceInfo(regex-automata/src/dfa/search.rs:534:9-534:10)
  5: _156 = SubWithOverflow(((*_3).2: usize), const 1_usize)
    SourceInfo(regex-automata/src/dfa/search.rs:535:9-535:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:535:9-535:22)
      kind: assert(!move (_156.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_3).2: usize), const 1_usize) -> [success: bb90, unwind: bb111]
  }
  preds [bb87]
  succs [bb90, bb111]

bb90
  0: ((*_3).2: usize) = move (_156.0: usize)
    SourceInfo(regex-automata/src/dfa/search.rs:535:9-535:22)
  1: _67 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:493:26-536:6)
  2: StorageDead(_68)
    SourceInfo(regex-automata/src/dfa/search.rs:536:5-536:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:493:5-536:6)
      kind: goto -> bb41
  }
  preds [bb89]
  succs [bb41]

bb91
  0: StorageLive(_158)
    SourceInfo(regex-automata/src/dfa/search.rs:493:5-536:6)
  1: _66 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:493:5-536:6)
  2: StorageDead(_158)
    SourceInfo(regex-automata/src/dfa/search.rs:536:5-536:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb92
  }
  preds [bb42]
  succs [bb92]

bb92
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/dfa/search.rs:536:5-536:6)
  1: StorageDead(_66)
    SourceInfo(regex-automata/src/dfa/search.rs:536:5-536:6)
  2: StorageLive(_160)
    SourceInfo(regex-automata/src/dfa/search.rs:538:9-538:15)
  3: StorageLive(_161)
    SourceInfo(regex-automata/src/dfa/search.rs:538:26-538:29)
  4: _161 = &(*_1)
    SourceInfo(regex-automata/src/dfa/search.rs:538:26-538:29)
  5: StorageLive(_162)
    SourceInfo(regex-automata/src/dfa/search.rs:538:31-538:36)
  6: _162 = &(*_2)
    SourceInfo(regex-automata/src/dfa/search.rs:538:31-538:36)
  7: StorageLive(_163)
    SourceInfo(regex-automata/src/dfa/search.rs:538:38-538:46)
  8: StorageLive(_164)
    SourceInfo(regex-automata/src/dfa/search.rs:538:38-538:46)
  9: _164 = &mut _10
    SourceInfo(regex-automata/src/dfa/search.rs:538:38-538:46)
  10: _163 = &mut (*_164)
    SourceInfo(regex-automata/src/dfa/search.rs:538:38-538:46)
  11: StorageLive(_165)
    SourceInfo(regex-automata/src/dfa/search.rs:538:48-538:62)
  12: StorageLive(_166)
    SourceInfo(regex-automata/src/dfa/search.rs:538:48-538:62)
  13: _166 = &mut ((*_3).0: core::option::Option<util::search::HalfMatch>)
    SourceInfo(regex-automata/src/dfa/search.rs:538:48-538:62)
  14: _165 = &mut (*_166)
    SourceInfo(regex-automata/src/dfa/search.rs:538:48-538:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:538:18-538:63)
      kind: _160 = dfa::search::eoi_rev::<A>(move _161, move _162, move _163, move _165) -> [return: bb93, unwind: bb111]
  }
  preds [bb88, bb91]
  succs [bb93, bb111]

bb93
  0: StorageDead(_165)
    SourceInfo(regex-automata/src/dfa/search.rs:538:62-538:63)
  1: StorageDead(_163)
    SourceInfo(regex-automata/src/dfa/search.rs:538:62-538:63)
  2: StorageDead(_162)
    SourceInfo(regex-automata/src/dfa/search.rs:538:62-538:63)
  3: StorageDead(_161)
    SourceInfo(regex-automata/src/dfa/search.rs:538:62-538:63)
  4: FakeRead(ForLet(None), _160)
    SourceInfo(regex-automata/src/dfa/search.rs:538:9-538:15)
  5: StorageDead(_166)
    SourceInfo(regex-automata/src/dfa/search.rs:538:63-538:64)
  6: StorageDead(_164)
    SourceInfo(regex-automata/src/dfa/search.rs:538:63-538:64)
  7: ((*_3).4: bool) = const true
    SourceInfo(regex-automata/src/dfa/search.rs:539:5-539:25)
  8: StorageLive(_167)
    SourceInfo(regex-automata/src/dfa/search.rs:540:16-540:25)
  9: StorageLive(_168)
    SourceInfo(regex-automata/src/dfa/search.rs:540:21-540:24)
  10: _168 = _10
    SourceInfo(regex-automata/src/dfa/search.rs:540:21-540:24)
  11: _167 = core::option::Option::<util::primitives::StateID>::Some(move _168)
    SourceInfo(regex-automata/src/dfa/search.rs:540:16-540:25)
  12: StorageDead(_168)
    SourceInfo(regex-automata/src/dfa/search.rs:540:24-540:25)
  13: ((*_3).1: core::option::Option<util::primitives::StateID>) = move _167
    SourceInfo(regex-automata/src/dfa/search.rs:540:5-540:25)
  14: StorageDead(_167)
    SourceInfo(regex-automata/src/dfa/search.rs:540:24-540:25)
  15: StorageLive(_169)
    SourceInfo(regex-automata/src/dfa/search.rs:541:5-547:6)
  16: StorageLive(_170)
    SourceInfo(regex-automata/src/dfa/search.rs:541:8-541:27)
  17: StorageLive(_171)
    SourceInfo(regex-automata/src/dfa/search.rs:541:8-541:17)
  18: _171 = &((*_3).0: core::option::Option<util::search::HalfMatch>)
    SourceInfo(regex-automata/src/dfa/search.rs:541:8-541:17)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:541:8-541:27)
      kind: _170 = core::option::Option::<util::search::HalfMatch>::is_some(move _171) -> [return: bb94, unwind: bb106]
  }
  preds [bb92]
  succs [bb94, bb106]

bb94
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:541:8-541:27)
      kind: switchInt(move _170) -> [0: bb96, otherwise: bb95]
  }
  preds [bb93]
  succs [bb95, bb96]

bb95
  0: StorageDead(_171)
    SourceInfo(regex-automata/src/dfa/search.rs:541:26-541:27)
  1: StorageLive(_172)
    SourceInfo(regex-automata/src/dfa/search.rs:546:34-546:41)
  2: _172 = core::option::Option::<usize>::Some(const 1_usize)
    SourceInfo(regex-automata/src/dfa/search.rs:546:34-546:41)
  3: ((*_3).3: core::option::Option<usize>) = move _172
    SourceInfo(regex-automata/src/dfa/search.rs:546:9-546:41)
  4: StorageDead(_172)
    SourceInfo(regex-automata/src/dfa/search.rs:546:40-546:41)
  5: _169 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:541:28-547:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:541:5-547:6)
      kind: goto -> bb97
  }
  preds [bb94]
  succs [bb97]

bb96
  0: StorageDead(_171)
    SourceInfo(regex-automata/src/dfa/search.rs:541:26-541:27)
  1: _169 = const ()
    SourceInfo(regex-automata/src/dfa/search.rs:547:6-547:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:541:5-547:6)
      kind: goto -> bb97
  }
  preds [bb94]
  succs [bb97]

bb97
  0: StorageDead(_170)
    SourceInfo(regex-automata/src/dfa/search.rs:547:5-547:6)
  1: StorageDead(_169)
    SourceInfo(regex-automata/src/dfa/search.rs:547:5-547:6)
  2: _0 = move _160
    SourceInfo(regex-automata/src/dfa/search.rs:548:5-548:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:549:1-549:2)
      kind: drop(_160) -> [return: bb98, unwind: bb111]
  }
  preds [bb95, bb96]
  succs [bb98, bb111]

bb98
  0: StorageDead(_160)
    SourceInfo(regex-automata/src/dfa/search.rs:549:1-549:2)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/search.rs:549:1-549:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:549:2-549:2)
      kind: goto -> bb105
  }
  preds [bb97]
  succs [bb105]

bb99
  0: StorageDead(_136)
    SourceInfo(regex-automata/src/dfa/search.rs:530:13-530:14)
  1: StorageDead(_119)
    SourceInfo(regex-automata/src/dfa/search.rs:530:13-530:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb100
  }
  preds [bb78, bb83]
  succs [bb100]

bb100
  0: StorageDead(_104)
    SourceInfo(regex-automata/src/dfa/search.rs:530:13-530:14)
  1: StorageDead(_84)
    SourceInfo(regex-automata/src/dfa/search.rs:530:13-530:14)
  2: StorageDead(_79)
    SourceInfo(regex-automata/src/dfa/search.rs:531:9-531:10)
  3: StorageDead(_78)
    SourceInfo(regex-automata/src/dfa/search.rs:531:9-531:10)
  4: StorageDead(_68)
    SourceInfo(regex-automata/src/dfa/search.rs:536:5-536:6)
  5: StorageDead(_66)
    SourceInfo(regex-automata/src/dfa/search.rs:536:5-536:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb104
  }
  preds [bb66, bb99]
  succs [bb104]

bb101
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/search.rs:491:9-491:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb104
  }
  preds [bb29, bb33]
  succs [bb104]

bb102
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/search.rs:456:43-456:44)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:456:44-456:45)
      kind: drop(_13) -> [return: bb103, unwind: bb111]
  }
  preds [bb14]
  succs [bb103, bb111]

bb103
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/search.rs:456:44-456:45)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/search.rs:464:9-464:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb104
  }
  preds [bb102]
  succs [bb104]

bb104
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/search.rs:549:1-549:2)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb105
  }
  preds [bb100, bb101, bb103]
  succs [bb105]

bb105
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:549:2-549:2)
      kind: return
  }
  preds [bb2, bb98, bb104]
  succs []

bb106
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:549:1-549:2)
      kind: drop(_160) -> [return: bb111, unwind terminate(cleanup)]
  }
  preds [bb93]
  succs [bb111]

bb107
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:456:43-456:44)
      kind: drop(_20) -> [return: bb108, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb108]

bb108
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:456:43-456:44)
      kind: drop(_18) -> [return: bb109, unwind terminate(cleanup)]
  }
  preds [bb107]
  succs [bb109]

bb109
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:456:44-456:45)
      kind: drop(_13) -> [return: bb111, unwind terminate(cleanup)]
  }
  preds [bb14, bb108]
  succs [bb111]

bb110
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:456:43-456:44)
      kind: drop(_14) -> [return: bb111, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb111]

bb111
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/search.rs:445:1-549:2)
      kind: resume
  }
  preds [bb0, bb7, bb12, bb15, bb16, bb19, bb20, bb24, bb26, bb27, bb28, bb34, bb37, bb41, bb43, bb44, bb45, bb46, bb48, bb50, bb52, bb53, bb54, bb55, bb56, bb57, bb61, bb63, bb64, bb65, bb67, bb69, bb70, bb71, bb72, bb73, bb74, bb76, bb79, bb80, bb81, bb82, bb86, bb89, bb92, bb97, bb102, bb106, bb109, bb110]
  succs []

