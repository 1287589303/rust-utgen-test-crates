bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:13-1330:15)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:18-1330:24)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:22-1330:23)
  3: _6 = _3
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:22-1330:23)
  4: _5 = core::ops::Range::<u32> { start: const 0_u32, end: move _6 }
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:18-1330:24)
  5: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:23-1330:24)
  6: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:29-1330:45)
  7: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:29-1330:45)
  8: _8 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:29-1330:45)
  9: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:29-1330:45)
  10: _9 = &(*_2)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:29-1330:45)
  11: _7 = {closure@regex-automata/src/nfa/thompson/compiler.rs:1330:29: 1330:32} { self: move _8, expr: move _9 }
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:29-1330:45)
  12: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:31-1330:32)
  13: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:31-1330:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:18-1330:46)
      kind: _4 = <core::ops::Range<u32> as core::iter::Iterator>::map::<core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError>, {closure@regex-automata/src/nfa/thompson/compiler.rs:1330:29: 1330:32}>(move _5, move _7) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:45-1330:46)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:45-1330:46)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1330:13-1330:15)
  3: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1331:9-1331:13)
  4: _10 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1331:9-1331:13)
  5: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1331:23-1331:25)
  6: _11 = move _4
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1331:23-1331:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1331:9-1331:26)
      kind: _0 = nfa::thompson::compiler::Compiler::c_concat::<core::iter::Map<core::ops::Range<u32>, {closure@regex-automata/src/nfa/thompson/compiler.rs:1330:29: 1330:32}>>(move _10, move _11) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1331:25-1331:26)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1331:25-1331:26)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1332:5-1332:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1332:6-1332:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/compiler.rs:1325:5-1332:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

