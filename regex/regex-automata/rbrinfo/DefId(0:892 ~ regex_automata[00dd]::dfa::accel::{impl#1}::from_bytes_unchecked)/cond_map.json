{
  "regex-automata/src/dfa/accel.rs:207:9:207:75": [
    {
      "Try": "wire::check_slice_len(slice, accel_tys_bytes_len, \"accelerators\")?"
    }
  ],
  "regex-automata/src/dfa/accel.rs:197:29:201:11": [
    {
      "Try": "wire::add(\n            wire::mul(accel_len, 2, \"total number of accelerator accel_tys\")?,\n            1,\n            \"total number of accel_tys\",\n        )?"
    }
  ],
  "regex-automata/src/dfa/accel.rs:202:35:206:11": [
    {
      "Try": "wire::mul(\n            ACCEL_TY_SIZE,\n            accel_tys_len,\n            \"total number of bytes in accelerators\",\n        )?"
    }
  ],
  "regex-automata/src/dfa/accel.rs:192:13:192:71": [
    {
      "Try": "wire::try_read_u32_as_usize(slice, \"accelerators length\")?"
    }
  ],
  "regex-automata/src/dfa/accel.rs:208:9:208:49": [
    {
      "Try": "wire::check_alignment::<AccelTy>(slice)?"
    }
  ],
  "regex-automata/src/dfa/accel.rs:220:32:220:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "slice.as_ptr().as_usize() - slice_start",
          "lhs": "slice.as_ptr().as_usize()",
          "rhs": "slice_start",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-automata/src/dfa/accel.rs:198:13:198:78": [
    {
      "Try": "wire::mul(accel_len, 2, \"total number of accelerator accel_tys\")?"
    }
  ]
}