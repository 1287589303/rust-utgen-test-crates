bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/accel.rs:189:13-189:24)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/accel.rs:189:27-189:41)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/accel.rs:189:27-189:32)
  3: _4 = &(*_1)
    SourceInfo(regex-automata/src/dfa/accel.rs:189:27-189:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:189:27-189:41)
      kind: _3 = core::slice::<impl [u8]>::as_ptr(move _4) -> [return: bb1, unwind: bb58]
  }
  preds []
  succs [bb1, bb58]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/accel.rs:189:40-189:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:189:27-189:52)
      kind: _2 = <*const u8 as util::int::Pointer>::as_usize(move _3) -> [return: bb2, unwind: bb58]
  }
  preds [bb0]
  succs [bb2, bb58]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/accel.rs:189:51-189:52)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/dfa/accel.rs:189:13-189:24)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:71)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:71)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:70)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:41-192:46)
  6: _9 = &(*_1)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:41-192:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:70)
      kind: _8 = util::wire::try_read_u32_as_usize(move _9, const "accelerators length") -> [return: bb3, unwind: bb58]
  }
  preds [bb1]
  succs [bb3, bb58]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:69-192:70)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:71)
      kind: _7 = <core::result::Result<(usize, usize), util::wire::DeserializeError> as core::ops::Try>::branch(move _8) -> [return: bb4, unwind: bb58]
  }
  preds [bb2]
  succs [bb4, bb58]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:70-192:71)
  1: PlaceMention(_7)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:71)
  2: _10 = discriminant(_7)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:71)
      kind: switchInt(move _10) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _7)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:71)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:192:70-192:71)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:71)
  1: _14 = ((_7 as Continue).0: (usize, usize))
    SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:71)
  2: _6 = _14
    SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:71)
  3: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:70-192:71)
  4: PlaceMention(_6)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:71)
  5: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/accel.rs:191:14-191:23)
  6: _5 = (_6.0: usize)
    SourceInfo(regex-automata/src/dfa/accel.rs:191:14-191:23)
  7: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:71-192:72)
  8: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:71-192:72)
  9: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/accel.rs:197:13-197:26)
  10: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/accel.rs:197:29-201:11)
  11: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/accel.rs:197:29-201:10)
  12: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:13-198:78)
  13: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:13-198:78)
  14: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:13-198:77)
  15: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:23-198:32)
  16: _21 = _5
    SourceInfo(regex-automata/src/dfa/accel.rs:198:23-198:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:198:13-198:77)
      kind: _20 = util::wire::mul(move _21, const 2_usize, const "total number of accelerator accel_tys") -> [return: bb10, unwind: bb58]
  }
  preds [bb4, bb6]
  succs [bb10, bb58]

bb8
  0: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:70-192:71)
  1: _11 = move ((_7 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:70-192:71)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:70-192:71)
  3: _13 = move _11
    SourceInfo(regex-automata/src/dfa/accel.rs:192:70-192:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:192:13-192:71)
      kind: _0 = <core::result::Result<(dfa::accel::Accels<&[u32]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _13) -> [return: bb9, unwind: bb58]
  }
  preds [bb6]
  succs [bb9, bb58]

bb9
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:70-192:71)
  1: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:70-192:71)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:71-192:72)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/accel.rs:192:71-192:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb56
  }
  preds [bb8]
  succs [bb56]

bb10
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:76-198:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:198:13-198:78)
      kind: _19 = <core::result::Result<usize, util::wire::DeserializeError> as core::ops::Try>::branch(move _20) -> [return: bb11, unwind: bb58]
  }
  preds [bb7]
  succs [bb11, bb58]

bb11
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:77-198:78)
  1: PlaceMention(_19)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:13-198:78)
  2: _22 = discriminant(_19)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:13-198:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:198:13-198:78)
      kind: switchInt(move _22) -> [0: bb14, 1: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _19)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:13-198:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:198:13-198:78)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:198:77-198:78)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:13-198:78)
  1: _26 = ((_19 as Continue).0: usize)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:13-198:78)
  2: _18 = _26
    SourceInfo(regex-automata/src/dfa/accel.rs:198:13-198:78)
  3: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:77-198:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:197:29-201:10)
      kind: _17 = util::wire::add(move _18, const 1_usize, const "total number of accel_tys") -> [return: bb17, unwind: bb58]
  }
  preds [bb11, bb13]
  succs [bb17, bb58]

bb15
  0: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:77-198:78)
  1: _23 = move ((_19 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:77-198:78)
  2: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:77-198:78)
  3: _25 = move _23
    SourceInfo(regex-automata/src/dfa/accel.rs:198:77-198:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:198:13-198:78)
      kind: _0 = <core::result::Result<(dfa::accel::Accels<&[u32]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _25) -> [return: bb16, unwind: bb58]
  }
  preds [bb13]
  succs [bb16, bb58]

bb16
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:77-198:78)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/accel.rs:198:77-198:78)
  2: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/accel.rs:201:9-201:10)
  3: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/accel.rs:201:10-201:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb54
  }
  preds [bb15]
  succs [bb54]

bb17
  0: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/accel.rs:201:9-201:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:197:29-201:11)
      kind: _16 = <core::result::Result<usize, util::wire::DeserializeError> as core::ops::Try>::branch(move _17) -> [return: bb18, unwind: bb58]
  }
  preds [bb14]
  succs [bb18, bb58]

bb18
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/accel.rs:201:10-201:11)
  1: PlaceMention(_16)
    SourceInfo(regex-automata/src/dfa/accel.rs:197:29-201:11)
  2: _27 = discriminant(_16)
    SourceInfo(regex-automata/src/dfa/accel.rs:197:29-201:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:197:29-201:11)
      kind: switchInt(move _27) -> [0: bb21, 1: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20, bb21]

bb19
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(regex-automata/src/dfa/accel.rs:197:29-201:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:197:29-201:11)
      kind: unreachable
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:201:10-201:11)
      kind: falseEdge -> [real: bb22, imaginary: bb21]
  }
  preds [bb18]
  succs [bb21, bb22]

bb21
  0: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/accel.rs:197:29-201:11)
  1: _31 = ((_16 as Continue).0: usize)
    SourceInfo(regex-automata/src/dfa/accel.rs:197:29-201:11)
  2: _15 = _31
    SourceInfo(regex-automata/src/dfa/accel.rs:197:29-201:11)
  3: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/accel.rs:201:10-201:11)
  4: FakeRead(ForLet(None), _15)
    SourceInfo(regex-automata/src/dfa/accel.rs:197:13-197:26)
  5: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/accel.rs:201:11-201:12)
  6: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/accel.rs:201:11-201:12)
  7: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/accel.rs:202:13-202:32)
  8: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/accel.rs:202:35-206:11)
  9: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/accel.rs:202:35-206:10)
  10: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/accel.rs:204:13-204:26)
  11: _35 = _15
    SourceInfo(regex-automata/src/dfa/accel.rs:204:13-204:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:202:35-206:10)
      kind: _34 = util::wire::mul(const dfa::accel::ACCEL_TY_SIZE, move _35, const "total number of bytes in accelerators") -> [return: bb24, unwind: bb58]
  }
  preds [bb18, bb20]
  succs [bb24, bb58]

bb22
  0: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/accel.rs:201:10-201:11)
  1: _28 = move ((_16 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/accel.rs:201:10-201:11)
  2: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/accel.rs:201:10-201:11)
  3: _30 = move _28
    SourceInfo(regex-automata/src/dfa/accel.rs:201:10-201:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:197:29-201:11)
      kind: _0 = <core::result::Result<(dfa::accel::Accels<&[u32]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _30) -> [return: bb23, unwind: bb58]
  }
  preds [bb20]
  succs [bb23, bb58]

bb23
  0: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/accel.rs:201:10-201:11)
  1: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/accel.rs:201:10-201:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb54
  }
  preds [bb22]
  succs [bb54]

bb24
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/accel.rs:206:9-206:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:202:35-206:11)
      kind: _33 = <core::result::Result<usize, util::wire::DeserializeError> as core::ops::Try>::branch(move _34) -> [return: bb25, unwind: bb58]
  }
  preds [bb21]
  succs [bb25, bb58]

bb25
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/accel.rs:206:10-206:11)
  1: PlaceMention(_33)
    SourceInfo(regex-automata/src/dfa/accel.rs:202:35-206:11)
  2: _36 = discriminant(_33)
    SourceInfo(regex-automata/src/dfa/accel.rs:202:35-206:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:202:35-206:11)
      kind: switchInt(move _36) -> [0: bb28, 1: bb27, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27, bb28]

bb26
  0: FakeRead(ForMatchedPlace(None), _33)
    SourceInfo(regex-automata/src/dfa/accel.rs:202:35-206:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:202:35-206:11)
      kind: unreachable
  }
  preds [bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:206:10-206:11)
      kind: falseEdge -> [real: bb29, imaginary: bb28]
  }
  preds [bb25]
  succs [bb28, bb29]

bb28
  0: StorageLive(_40)
    SourceInfo(regex-automata/src/dfa/accel.rs:202:35-206:11)
  1: _40 = ((_33 as Continue).0: usize)
    SourceInfo(regex-automata/src/dfa/accel.rs:202:35-206:11)
  2: _32 = _40
    SourceInfo(regex-automata/src/dfa/accel.rs:202:35-206:11)
  3: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/accel.rs:206:10-206:11)
  4: FakeRead(ForLet(None), _32)
    SourceInfo(regex-automata/src/dfa/accel.rs:202:13-202:32)
  5: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/accel.rs:206:11-206:12)
  6: StorageLive(_41)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:9-207:75)
  7: StorageLive(_42)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:9-207:75)
  8: StorageLive(_43)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:9-207:74)
  9: StorageLive(_44)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:31-207:36)
  10: _44 = &(*_1)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:31-207:36)
  11: StorageLive(_45)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:38-207:57)
  12: _45 = _32
    SourceInfo(regex-automata/src/dfa/accel.rs:207:38-207:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:207:9-207:74)
      kind: _43 = util::wire::check_slice_len::<u8>(move _44, move _45, const "accelerators") -> [return: bb31, unwind: bb58]
  }
  preds [bb25, bb27]
  succs [bb31, bb58]

bb29
  0: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/accel.rs:206:10-206:11)
  1: _37 = move ((_33 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/accel.rs:206:10-206:11)
  2: StorageLive(_39)
    SourceInfo(regex-automata/src/dfa/accel.rs:206:10-206:11)
  3: _39 = move _37
    SourceInfo(regex-automata/src/dfa/accel.rs:206:10-206:11)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:202:35-206:11)
      kind: _0 = <core::result::Result<(dfa::accel::Accels<&[u32]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _39) -> [return: bb30, unwind: bb58]
  }
  preds [bb27]
  succs [bb30, bb58]

bb30
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/accel.rs:206:10-206:11)
  1: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/accel.rs:206:10-206:11)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/accel.rs:206:11-206:12)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb53
  }
  preds [bb29]
  succs [bb53]

bb31
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:73-207:74)
  1: StorageDead(_44)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:73-207:74)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:207:9-207:75)
      kind: _42 = <core::result::Result<(), util::wire::DeserializeError> as core::ops::Try>::branch(move _43) -> [return: bb32, unwind: bb58]
  }
  preds [bb28]
  succs [bb32, bb58]

bb32
  0: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:74-207:75)
  1: PlaceMention(_42)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:9-207:75)
  2: _46 = discriminant(_42)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:9-207:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:207:9-207:75)
      kind: switchInt(move _46) -> [0: bb35, 1: bb34, otherwise: bb33]
  }
  preds [bb31]
  succs [bb33, bb34, bb35]

bb33
  0: FakeRead(ForMatchedPlace(None), _42)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:9-207:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:207:9-207:75)
      kind: unreachable
  }
  preds [bb32]
  succs []

bb34
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:207:74-207:75)
      kind: falseEdge -> [real: bb36, imaginary: bb35]
  }
  preds [bb32]
  succs [bb35, bb36]

bb35
  0: StorageLive(_50)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:9-207:75)
  1: _50 = ((_42 as Continue).0: ())
    SourceInfo(regex-automata/src/dfa/accel.rs:207:9-207:75)
  2: _41 = _50
    SourceInfo(regex-automata/src/dfa/accel.rs:207:9-207:75)
  3: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:74-207:75)
  4: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:75-207:76)
  5: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:75-207:76)
  6: StorageLive(_51)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:9-208:49)
  7: StorageLive(_52)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:9-208:49)
  8: StorageLive(_53)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:9-208:48)
  9: StorageLive(_54)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:42-208:47)
  10: _54 = &(*_1)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:42-208:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:208:9-208:48)
      kind: _53 = util::wire::check_alignment::<u32>(move _54) -> [return: bb38, unwind: bb58]
  }
  preds [bb32, bb34]
  succs [bb38, bb58]

bb36
  0: StorageLive(_47)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:74-207:75)
  1: _47 = move ((_42 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:74-207:75)
  2: StorageLive(_49)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:74-207:75)
  3: _49 = move _47
    SourceInfo(regex-automata/src/dfa/accel.rs:207:74-207:75)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:207:9-207:75)
      kind: _0 = <core::result::Result<(dfa::accel::Accels<&[u32]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _49) -> [return: bb37, unwind: bb58]
  }
  preds [bb34]
  succs [bb37, bb58]

bb37
  0: StorageDead(_49)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:74-207:75)
  1: StorageDead(_47)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:74-207:75)
  2: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:75-207:76)
  3: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/accel.rs:207:75-207:76)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb53
  }
  preds [bb36]
  succs [bb53]

bb38
  0: StorageDead(_54)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:47-208:48)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:208:9-208:49)
      kind: _52 = <core::result::Result<(), util::wire::DeserializeError> as core::ops::Try>::branch(move _53) -> [return: bb39, unwind: bb58]
  }
  preds [bb35]
  succs [bb39, bb58]

bb39
  0: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:48-208:49)
  1: PlaceMention(_52)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:9-208:49)
  2: _55 = discriminant(_52)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:9-208:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:208:9-208:49)
      kind: switchInt(move _55) -> [0: bb42, 1: bb41, otherwise: bb40]
  }
  preds [bb38]
  succs [bb40, bb41, bb42]

bb40
  0: FakeRead(ForMatchedPlace(None), _52)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:9-208:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:208:9-208:49)
      kind: unreachable
  }
  preds [bb39]
  succs []

bb41
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:208:48-208:49)
      kind: falseEdge -> [real: bb43, imaginary: bb42]
  }
  preds [bb39]
  succs [bb42, bb43]

bb42
  0: StorageLive(_59)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:9-208:49)
  1: _59 = ((_52 as Continue).0: ())
    SourceInfo(regex-automata/src/dfa/accel.rs:208:9-208:49)
  2: _51 = _59
    SourceInfo(regex-automata/src/dfa/accel.rs:208:9-208:49)
  3: StorageDead(_59)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:48-208:49)
  4: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:49-208:50)
  5: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:49-208:50)
  6: StorageLive(_60)
    SourceInfo(regex-automata/src/dfa/accel.rs:209:13-209:22)
  7: StorageLive(_61)
    SourceInfo(regex-automata/src/dfa/accel.rs:209:31-209:54)
  8: StorageLive(_62)
    SourceInfo(regex-automata/src/dfa/accel.rs:209:26-209:31)
  9: _62 = &(*_1)
    SourceInfo(regex-automata/src/dfa/accel.rs:209:26-209:31)
  10: StorageLive(_63)
    SourceInfo(regex-automata/src/dfa/accel.rs:209:32-209:53)
  11: StorageLive(_64)
    SourceInfo(regex-automata/src/dfa/accel.rs:209:34-209:53)
  12: _64 = _32
    SourceInfo(regex-automata/src/dfa/accel.rs:209:34-209:53)
  13: _63 = core::ops::RangeTo::<usize> { end: move _64 }
    SourceInfo(regex-automata/src/dfa/accel.rs:209:32-209:53)
  14: StorageDead(_64)
    SourceInfo(regex-automata/src/dfa/accel.rs:209:52-209:53)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:209:31-209:54)
      kind: _61 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _62, move _63) -> [return: bb45, unwind: bb58]
  }
  preds [bb39, bb41]
  succs [bb45, bb58]

bb43
  0: StorageLive(_56)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:48-208:49)
  1: _56 = move ((_52 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:48-208:49)
  2: StorageLive(_58)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:48-208:49)
  3: _58 = move _56
    SourceInfo(regex-automata/src/dfa/accel.rs:208:48-208:49)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:208:9-208:49)
      kind: _0 = <core::result::Result<(dfa::accel::Accels<&[u32]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _58) -> [return: bb44, unwind: bb58]
  }
  preds [bb41]
  succs [bb44, bb58]

bb44
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:48-208:49)
  1: StorageDead(_56)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:48-208:49)
  2: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:49-208:50)
  3: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/accel.rs:208:49-208:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb53
  }
  preds [bb43]
  succs [bb53]

bb45
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/accel.rs:209:53-209:54)
  1: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/accel.rs:209:53-209:54)
  2: _60 = &(*_61)
    SourceInfo(regex-automata/src/dfa/accel.rs:209:25-209:54)
  3: FakeRead(ForLet(None), _60)
    SourceInfo(regex-automata/src/dfa/accel.rs:209:13-209:22)
  4: StorageLive(_65)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:17-210:46)
  5: StorageLive(_66)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:17-210:46)
  6: StorageLive(_67)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:23-210:46)
  7: StorageLive(_68)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:18-210:23)
  8: _68 = &(*_1)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:18-210:23)
  9: StorageLive(_69)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:24-210:45)
  10: StorageLive(_70)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:24-210:43)
  11: _70 = _32
    SourceInfo(regex-automata/src/dfa/accel.rs:210:24-210:43)
  12: _69 = core::ops::RangeFrom::<usize> { start: move _70 }
    SourceInfo(regex-automata/src/dfa/accel.rs:210:24-210:45)
  13: StorageDead(_70)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:44-210:45)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:210:23-210:46)
      kind: _67 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _68, move _69) -> [return: bb46, unwind: bb58]
  }
  preds [bb42]
  succs [bb46, bb58]

bb46
  0: StorageDead(_69)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:45-210:46)
  1: StorageDead(_68)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:45-210:46)
  2: _66 = &(*_67)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:17-210:46)
  3: _65 = &(*_66)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:17-210:46)
  4: _1 = move _65
    SourceInfo(regex-automata/src/dfa/accel.rs:210:9-210:46)
  5: StorageDead(_65)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:45-210:46)
  6: StorageDead(_67)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:46-210:47)
  7: StorageDead(_66)
    SourceInfo(regex-automata/src/dfa/accel.rs:210:46-210:47)
  8: StorageLive(_71)
    SourceInfo(regex-automata/src/dfa/accel.rs:214:13-214:19)
  9: StorageLive(_72)
    SourceInfo(regex-automata/src/dfa/accel.rs:216:17-216:53)
  10: StorageLive(_73)
    SourceInfo(regex-automata/src/dfa/accel.rs:216:17-216:35)
  11: StorageLive(_74)
    SourceInfo(regex-automata/src/dfa/accel.rs:216:17-216:26)
  12: _74 = &(*_60)
    SourceInfo(regex-automata/src/dfa/accel.rs:216:17-216:26)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:216:17-216:35)
      kind: _73 = core::slice::<impl [u8]>::as_ptr(move _74) -> [return: bb47, unwind: bb58]
  }
  preds [bb45]
  succs [bb47, bb58]

bb47
  0: StorageDead(_74)
    SourceInfo(regex-automata/src/dfa/accel.rs:216:34-216:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:216:17-216:53)
      kind: _72 = core::ptr::const_ptr::<impl *const u8>::cast::<u32>(move _73) -> [return: bb48, unwind: bb58]
  }
  preds [bb46]
  succs [bb48, bb58]

bb48
  0: StorageDead(_73)
    SourceInfo(regex-automata/src/dfa/accel.rs:216:52-216:53)
  1: StorageLive(_75)
    SourceInfo(regex-automata/src/dfa/accel.rs:217:17-217:30)
  2: _75 = _15
    SourceInfo(regex-automata/src/dfa/accel.rs:217:17-217:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:215:13-218:14)
      kind: _71 = core::slice::from_raw_parts::<'_, u32>(move _72, move _75) -> [return: bb49, unwind: bb58]
  }
  preds [bb47]
  succs [bb49, bb58]

bb49
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/dfa/accel.rs:218:13-218:14)
  1: StorageDead(_72)
    SourceInfo(regex-automata/src/dfa/accel.rs:218:13-218:14)
  2: FakeRead(ForLet(None), _71)
    SourceInfo(regex-automata/src/dfa/accel.rs:214:13-214:19)
  3: StorageLive(_76)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:12-220:72)
  4: StorageLive(_77)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:13-220:30)
  5: StorageLive(_78)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:22-220:28)
  6: _78 = &(*_71)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:22-220:28)
  7: _77 = dfa::accel::Accels::<&[u32]> { accels: move _78 }
    SourceInfo(regex-automata/src/dfa/accel.rs:220:13-220:30)
  8: StorageDead(_78)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:29-220:30)
  9: StorageLive(_79)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:32-220:71)
  10: StorageLive(_80)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:32-220:57)
  11: StorageLive(_81)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:32-220:46)
  12: StorageLive(_82)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:32-220:37)
  13: _82 = &(*_1)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:32-220:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:220:32-220:46)
      kind: _81 = core::slice::<impl [u8]>::as_ptr(move _82) -> [return: bb50, unwind: bb58]
  }
  preds [bb48]
  succs [bb50, bb58]

bb50
  0: StorageDead(_82)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:45-220:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:220:32-220:57)
      kind: _80 = <*const u8 as util::int::Pointer>::as_usize(move _81) -> [return: bb51, unwind: bb58]
  }
  preds [bb49]
  succs [bb51, bb58]

bb51
  0: StorageDead(_81)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:56-220:57)
  1: StorageLive(_83)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:60-220:71)
  2: _83 = _2
    SourceInfo(regex-automata/src/dfa/accel.rs:220:60-220:71)
  3: _84 = SubWithOverflow(_80, _83)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:32-220:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:220:32-220:71)
      kind: assert(!move (_84.1: bool), "attempt to compute `{} - {}`, which would overflow", move _80, move _83) -> [success: bb52, unwind: bb58]
  }
  preds [bb50]
  succs [bb52, bb58]

bb52
  0: _79 = move (_84.0: usize)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:32-220:71)
  1: StorageDead(_83)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:70-220:71)
  2: StorageDead(_80)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:70-220:71)
  3: _76 = (move _77, move _79)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:12-220:72)
  4: StorageDead(_79)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:71-220:72)
  5: StorageDead(_77)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:71-220:72)
  6: _0 = core::result::Result::<(dfa::accel::Accels<&[u32]>, usize), util::wire::DeserializeError>::Ok(move _76)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:9-220:73)
  7: StorageDead(_76)
    SourceInfo(regex-automata/src/dfa/accel.rs:220:72-220:73)
  8: StorageDead(_71)
    SourceInfo(regex-automata/src/dfa/accel.rs:221:5-221:6)
  9: StorageDead(_61)
    SourceInfo(regex-automata/src/dfa/accel.rs:221:5-221:6)
  10: StorageDead(_60)
    SourceInfo(regex-automata/src/dfa/accel.rs:221:5-221:6)
  11: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/accel.rs:221:5-221:6)
  12: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/accel.rs:221:5-221:6)
  13: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/accel.rs:221:5-221:6)
  14: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/accel.rs:221:5-221:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:221:6-221:6)
      kind: goto -> bb57
  }
  preds [bb51]
  succs [bb57]

bb53
  0: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/accel.rs:221:5-221:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb30, bb37, bb44]
  succs [bb55]

bb54
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/accel.rs:201:11-201:12)
  1: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/accel.rs:201:11-201:12)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb16, bb23]
  succs [bb55]

bb55
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/accel.rs:221:5-221:6)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/accel.rs:221:5-221:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb56
  }
  preds [bb53, bb54]
  succs [bb56]

bb56
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/accel.rs:221:5-221:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:221:6-221:6)
      kind: goto -> bb57
  }
  preds [bb9, bb55]
  succs [bb57]

bb57
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:221:6-221:6)
      kind: return
  }
  preds [bb52, bb56]
  succs []

bb58
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/accel.rs:186:5-221:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb7, bb8, bb10, bb14, bb15, bb17, bb21, bb22, bb24, bb28, bb29, bb31, bb35, bb36, bb38, bb42, bb43, bb45, bb46, bb47, bb48, bb49, bb50, bb51]
  succs []

