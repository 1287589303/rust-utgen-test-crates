bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/alphabet.rs:164:9-164:22)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/alphabet.rs:164:9-164:22)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/alphabet.rs:164:9-164:13)
  3: _4 = _1
    SourceInfo(regex-automata/src/util/alphabet.rs:164:9-164:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:164:9-164:22)
      kind: _3 = util::alphabet::Unit::as_eoi(move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _2 = &_3
    SourceInfo(regex-automata/src/util/alphabet.rs:164:9-164:22)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/util/alphabet.rs:164:21-164:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:164:9-164:32)
      kind: _0 = core::option::Option::<u16>::is_some(move _2) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/util/alphabet.rs:164:31-164:32)
  1: StorageDead(_3)
    SourceInfo(regex-automata/src/util/alphabet.rs:165:5-165:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:165:6-165:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/alphabet.rs:163:5-165:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

