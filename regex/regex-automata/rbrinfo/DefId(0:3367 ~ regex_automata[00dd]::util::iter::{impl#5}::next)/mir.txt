bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/util/iter.rs:788:15-788:28)
  3: StorageLive(_5)
    SourceInfo(regex-automata/src/util/iter.rs:788:15-788:21)
  4: _5 = &mut ((*_1).0: util::iter::TryHalfMatchesIter<'_, F>)
    SourceInfo(regex-automata/src/util/iter.rs:788:15-788:21)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:788:15-788:28)
      kind: _4 = <util::iter::TryHalfMatchesIter<'_, F> as core::iter::Iterator>::next(move _5) -> [return: bb1, unwind: bb23]
  }
  preds []
  succs [bb1, bb23]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/iter.rs:788:27-788:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
      kind: _3 = <core::option::Option<core::result::Result<util::search::HalfMatch, util::search::MatchError>> as core::ops::Try>::branch(move _4) -> [return: bb2, unwind: bb22]
  }
  preds [bb0]
  succs [bb2, bb22]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/util/iter.rs:788:28-788:29)
  1: PlaceMention(_3)
    SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
  2: _6 = discriminant(_3)
    SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
      kind: switchInt(move _6) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:788:28-788:29)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_10)
    SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
  1: _10 = move ((_3 as Continue).0: core::result::Result<util::search::HalfMatch, util::search::MatchError>)
    SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
  2: _2 = move _10
    SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:788:28-788:29)
      kind: drop(_10) -> [return: bb8, unwind: bb21]
  }
  preds [bb2, bb4]
  succs [bb8, bb21]

bb6
  0: StorageLive(_7)
    SourceInfo(regex-automata/src/util/iter.rs:788:28-788:29)
  1: _7 = ((_3 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-automata/src/util/iter.rs:788:28-788:29)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/util/iter.rs:788:28-788:29)
  3: _9 = _7
    SourceInfo(regex-automata/src/util/iter.rs:788:28-788:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
      kind: _0 = <core::option::Option<util::search::HalfMatch> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _9) -> [return: bb7, unwind: bb21]
  }
  preds [bb4]
  succs [bb7, bb21]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/iter.rs:788:28-788:29)
  1: StorageDead(_7)
    SourceInfo(regex-automata/src/util/iter.rs:788:28-788:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:796:5-796:6)
      kind: drop(_3) -> [return: bb17, unwind: bb23]
  }
  preds [bb6]
  succs [bb17, bb23]

bb8
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/util/iter.rs:788:28-788:29)
  1: PlaceMention(_2)
    SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
  2: _11 = discriminant(_2)
    SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:788:9-788:29)
      kind: switchInt(move _11) -> [0: bb10, 1: bb11, otherwise: bb9]
  }
  preds [bb5]
  succs [bb9, bb10, bb11]

bb9
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:788:15-788:29)
      kind: unreachable
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:789:13-789:18)
      kind: falseEdge -> [real: bb12, imaginary: bb11]
  }
  preds [bb8]
  succs [bb11, bb12]

bb11
  0: StorageLive(_14)
    SourceInfo(regex-automata/src/util/iter.rs:790:17-790:20)
  1: _14 = move ((_2 as Err).0: util::search::MatchError)
    SourceInfo(regex-automata/src/util/iter.rs:790:17-790:20)
  2: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_18)
    SourceInfo(regex-automata/src/util/iter.rs:791:17-792:71)
  5: StorageLive(_19)
    SourceInfo(regex-automata/src/util/iter.rs:791:17-792:71)
  6: StorageLive(_20)
    SourceInfo(regex-automata/src/util/iter.rs:791:17-792:71)
  7: _20 = [const "unexpected regex half find error: ", const "\nto handle find errors, use 'try' or 'search' methods"]
    SourceInfo(regex-automata/src/util/iter.rs:791:17-792:71)
  8: _19 = &_20
    SourceInfo(regex-automata/src/util/iter.rs:791:17-792:71)
  9: _18 = &(*_19)
    SourceInfo(regex-automata/src/util/iter.rs:791:17-792:71)
  10: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  12: StorageLive(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  13: StorageLive(_24)
    SourceInfo(regex-automata/src/util/iter.rs:791:52-791:54)
  14: StorageLive(_25)
    SourceInfo(regex-automata/src/util/iter.rs:793:17-793:20)
  15: StorageLive(_26)
    SourceInfo(regex-automata/src/util/iter.rs:793:17-793:20)
  16: _26 = &_14
    SourceInfo(regex-automata/src/util/iter.rs:793:17-793:20)
  17: _25 = &(*_26)
    SourceInfo(regex-automata/src/util/iter.rs:793:17-793:20)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:791:52-791:54)
      kind: _24 = core::fmt::rt::Argument::<'_>::new_display::<util::search::MatchError>(move _25) -> [return: bb13, unwind: bb19]
  }
  preds [bb8, bb10]
  succs [bb13, bb19]

bb12
  0: StorageLive(_12)
    SourceInfo(regex-automata/src/util/iter.rs:789:16-789:17)
  1: _12 = ((_2 as Ok).0: util::search::HalfMatch)
    SourceInfo(regex-automata/src/util/iter.rs:789:16-789:17)
  2: StorageLive(_13)
    SourceInfo(regex-automata/src/util/iter.rs:789:27-789:28)
  3: _13 = _12
    SourceInfo(regex-automata/src/util/iter.rs:789:27-789:28)
  4: _0 = core::option::Option::<util::search::HalfMatch>::Some(move _13)
    SourceInfo(regex-automata/src/util/iter.rs:789:22-789:29)
  5: StorageDead(_13)
    SourceInfo(regex-automata/src/util/iter.rs:789:28-789:29)
  6: StorageDead(_12)
    SourceInfo(regex-automata/src/util/iter.rs:789:28-789:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:796:5-796:6)
      kind: drop(_2) -> [return: bb15, unwind: bb21]
  }
  preds [bb10]
  succs [bb15, bb21]

bb13
  0: StorageDead(_25)
    SourceInfo(regex-automata/src/util/iter.rs:791:53-791:54)
  1: _23 = [move _24]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: _22 = &_23
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: _21 = &(*_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _17 = core::fmt::Arguments::<'_>::new_v1::<2, 1>(move _18, move _21) -> [return: bb14, unwind: bb19]
  }
  preds [bb11]
  succs [bb14, bb19]

bb14
  0: StorageDead(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _16 = core::panicking::panic_fmt(move _17) -> bb19
  }
  preds [bb13]
  succs [bb19]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:796:5-796:6)
      kind: drop(_3) -> [return: bb16, unwind: bb23]
  }
  preds [bb12]
  succs [bb16, bb23]

bb16
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/iter.rs:796:5-796:6)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/util/iter.rs:796:5-796:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:796:6-796:6)
      kind: goto -> bb18
  }
  preds [bb15]
  succs [bb18]

bb17
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/util/iter.rs:796:5-796:6)
  1: StorageDead(_2)
    SourceInfo(regex-automata/src/util/iter.rs:796:5-796:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:796:6-796:6)
      kind: goto -> bb18
  }
  preds [bb7]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:796:6-796:6)
      kind: return
  }
  preds [bb16, bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:794:13-794:14)
      kind: drop(_14) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb11, bb13, bb14]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:796:5-796:6)
      kind: drop(_2) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:796:5-796:6)
      kind: drop(_3) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb5, bb6, bb12, bb20]
  succs [bb23]

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:788:28-788:29)
      kind: drop(_4) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/iter.rs:787:5-796:6)
      kind: resume
  }
  preds [bb0, bb7, bb15, bb21, bb22]
  succs []

