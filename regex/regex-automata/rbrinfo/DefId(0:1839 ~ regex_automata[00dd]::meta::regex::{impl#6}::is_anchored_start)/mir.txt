bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1964:9-1964:43)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1964:9-1964:29)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1964:9-1964:29)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1964:9-1964:14)
  4: _6 = &(*_2)
    SourceInfo(regex-automata/src/meta/regex.rs:1964:9-1964:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1964:9-1964:29)
      kind: _5 = util::search::Input::<'_>::get_anchored(move _6) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: _4 = &_5
    SourceInfo(regex-automata/src/meta/regex.rs:1964:9-1964:29)
  1: StorageDead(_6)
    SourceInfo(regex-automata/src/meta/regex.rs:1964:28-1964:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1964:9-1964:43)
      kind: _3 = util::search::Anchored::is_anchored(move _4) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1964:9-1964:43)
      kind: switchInt(move _3) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1964:42-1964:43)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1964:42-1964:43)
  2: _0 = const true
    SourceInfo(regex-automata/src/meta/regex.rs:1964:9-1964:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1964:9-1964:78)
      kind: goto -> bb6
  }
  preds [bb2]
  succs [bb6]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/meta/regex.rs:1964:42-1964:43)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/meta/regex.rs:1964:42-1964:43)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1964:47-1964:51)
  3: _7 = &(*_1)
    SourceInfo(regex-automata/src/meta/regex.rs:1964:47-1964:51)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1964:47-1964:78)
      kind: _0 = meta::regex::RegexInfo::is_always_anchored_start(move _7) -> [return: bb5, unwind: bb7]
  }
  preds [bb2]
  succs [bb5, bb7]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/meta/regex.rs:1964:77-1964:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1964:9-1964:78)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/meta/regex.rs:1964:77-1964:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1965:6-1965:6)
      kind: return
  }
  preds [bb3, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/meta/regex.rs:1963:5-1965:6)
      kind: resume
  }
  preds [bb0, bb1, bb4]
  succs []

