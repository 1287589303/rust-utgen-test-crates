bb0
  0: StorageLive(_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:5079:13-5079:16)
  1: _1 = const "cannot build DFAs for regexes with Unicode word boundaries; switch to ASCII word boundaries, or heuristically enable Unicode word boundaries or use a different regex engine"
    SourceInfo(regex-automata/src/dfa/dense.rs:5079:19-5082:43)
  2: FakeRead(ForLet(None), _1)
    SourceInfo(regex-automata/src/dfa/dense.rs:5079:13-5079:16)
  3: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/dense.rs:5083:28-5083:60)
  4: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:5083:56-5083:59)
  5: _3 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:5083:56-5083:59)
  6: _2 = dfa::dense::BuildErrorKind::Unsupported(move _3)
    SourceInfo(regex-automata/src/dfa/dense.rs:5083:28-5083:60)
  7: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/dense.rs:5083:59-5083:60)
  8: _0 = dfa::dense::BuildError { kind: move _2 }
    SourceInfo(regex-automata/src/dfa/dense.rs:5083:9-5083:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:5083:61-5083:62)
      kind: drop(_2) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/dense.rs:5083:61-5083:62)
  1: StorageDead(_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:5084:5-5084:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:5084:6-5084:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:5078:5-5084:6)
      kind: resume
  }
  preds [bb0]
  succs []

