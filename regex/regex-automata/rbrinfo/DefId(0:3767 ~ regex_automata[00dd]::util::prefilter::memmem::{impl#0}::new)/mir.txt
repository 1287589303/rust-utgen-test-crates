bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:25:13-27:14)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:25:16-25:34)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:25:16-25:29)
  3: StorageLive(_6)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:25:16-25:23)
  4: _6 = &(*_2)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:25:16-25:23)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:25:16-25:29)
      kind: _5 = core::slice::<impl [B]>::len(move _6) -> [return: bb1, unwind: bb15]
  }
  preds []
  succs [bb1, bb15]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:25:28-25:29)
  1: _4 = Ne(move _5, const 1_usize)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:25:16-25:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:25:16-25:34)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:25:33-25:34)
  1: _0 = core::option::Option::<util::prefilter::memmem::Memmem>::None
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:26:24-26:28)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:27:13-27:14)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:27:13-27:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:32:6-32:6)
      kind: goto -> bb11
  }
  preds [bb1]
  succs [bb11]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:25:33-25:34)
  1: _3 = const ()
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:27:14-27:14)
  2: StorageDead(_4)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:27:13-27:14)
  3: StorageDead(_3)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:27:13-27:14)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:28:17-28:23)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:28:26-28:36)
  6: StorageLive(_10)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:28:34-28:35)
  7: _10 = const 0_usize
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:28:34-28:35)
  8: _11 = Len((*_2))
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:28:26-28:36)
  9: _12 = Lt(_10, _11)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:28:26-28:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:28:26-28:36)
      kind: assert(move _12, "index out of bounds: the length is {} but the index is {}", move _11, _10) -> [success: bb4, unwind: bb15]
  }
  preds [bb1]
  succs [bb4, bb15]

bb4
  0: _9 = &(*_2)[_10]
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:28:26-28:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:28:26-28:45)
      kind: _8 = <B as core::convert::AsRef<[u8]>>::as_ref(move _9) -> [return: bb5, unwind: bb15]
  }
  preds [bb3]
  succs [bb5, bb15]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:28:44-28:45)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:28:17-28:23)
  2: StorageDead(_10)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:28:45-28:46)
  3: StorageLive(_13)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:29:17-29:23)
  4: StorageLive(_14)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:29:26-29:61)
  5: StorageLive(_15)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:29:54-29:60)
  6: _15 = &(*_8)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:29:54-29:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:29:26-29:61)
      kind: _14 = memchr::memmem::Finder::<'_>::new::<[u8]>(move _15) -> [return: bb6, unwind: bb15]
  }
  preds [bb4]
  succs [bb6, bb15]

bb6
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:29:60-29:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:29:26-29:74)
      kind: _13 = memchr::memmem::Finder::<'_>::into_owned(move _14) -> [return: bb7, unwind: bb14]
  }
  preds [bb5]
  succs [bb7, bb14]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:29:73-29:74)
  1: FakeRead(ForLet(None), _13)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:29:17-29:23)
  2: StorageLive(_16)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:30:18-30:35)
  3: StorageLive(_17)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:30:27-30:33)
  4: _17 = move _13
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:30:27-30:33)
  5: _16 = util::prefilter::memmem::Memmem { finder: move _17 }
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:30:18-30:35)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:30:34-30:35)
      kind: drop(_17) -> [return: bb8, unwind: bb12]
  }
  preds [bb6]
  succs [bb8, bb12]

bb8
  0: StorageDead(_17)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:30:34-30:35)
  1: _0 = core::option::Option::<util::prefilter::memmem::Memmem>::Some(move _16)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:30:13-30:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:30:35-30:36)
      kind: drop(_16) -> [return: bb9, unwind: bb13]
  }
  preds [bb7]
  succs [bb9, bb13]

bb9
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:30:35-30:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:31:9-31:10)
      kind: drop(_13) -> [return: bb10, unwind: bb15]
  }
  preds [bb8]
  succs [bb10, bb15]

bb10
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:31:9-31:10)
  1: StorageDead(_8)
    SourceInfo(regex-automata/src/util/prefilter/memmem.rs:31:9-31:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:32:6-32:6)
      kind: goto -> bb11
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:32:6-32:6)
      kind: return
  }
  preds [bb2, bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:30:35-30:36)
      kind: drop(_16) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:31:9-31:10)
      kind: drop(_13) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb8, bb12]
  succs [bb15]

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:29:73-29:74)
      kind: drop(_14) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-automata/src/util/prefilter/memmem.rs:15:5-32:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb5, bb9, bb13, bb14]
  succs []

