{
  "regex-automata/src/meta/regex.rs:3423:25:3423:59": [
    {
      "For": {
        "iter_var": "(pid, p)",
        "iter_range": "patterns.iter().with_pattern_ids()"
      }
    }
  ],
  "regex-automata/src/meta/regex.rs:3432:13:3432:64": [
    {
      "For": {
        "iter_var": "((pid, p), ast)",
        "iter_range": "patterns.iter().with_pattern_ids().zip(asts.iter())"
      }
    }
  ],
  "regex-automata/src/meta/regex.rs:3434:23:3438:59": [
    {
      "Try": "self\n                .hir\n                .build()\n                .translate(p.as_ref(), ast)\n                .map_err(|err| BuildError::hir(pid, err))?"
    }
  ],
  "regex-automata/src/meta/regex.rs:3424:23:3428:59": [
    {
      "Try": "self\n                .ast\n                .build()\n                .parse(p.as_ref())\n                .map_err(|err| BuildError::ast(pid, err))?"
    }
  ]
}