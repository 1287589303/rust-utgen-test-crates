bb0
  0: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/regex.rs:441:13-441:15)
  1: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/regex.rs:441:38-441:50)
  2: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/regex.rs:441:38-441:43)
  3: _5 = move _2
    SourceInfo(regex-automata/src/dfa/regex.rs:441:38-441:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:441:38-441:50)
      kind: _4 = <I as core::convert::Into<util::search::Input<'_>>>::into(move _5) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/regex.rs:441:49-441:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:441:18-441:51)
      kind: _3 = util::iter::Searcher::<'_>::new(move _4) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/regex.rs:441:50-441:51)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-automata/src/dfa/regex.rs:441:13-441:15)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/regex.rs:442:27-442:31)
  3: _6 = &(*_1)
    SourceInfo(regex-automata/src/dfa/regex.rs:442:27-442:31)
  4: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/regex.rs:442:33-442:35)
  5: _7 = move _3
    SourceInfo(regex-automata/src/dfa/regex.rs:442:33-442:35)
  6: _0 = dfa::regex::FindMatches::<'_, '_, A> { re: move _6, it: move _7 }
    SourceInfo(regex-automata/src/dfa/regex.rs:442:9-442:37)
  7: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/regex.rs:442:36-442:37)
  8: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/regex.rs:442:36-442:37)
  9: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/regex.rs:443:5-443:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:443:5-443:6)
      kind: drop(_2) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:443:6-443:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:441:49-441:50)
      kind: drop(_5) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:443:5-443:6)
      kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/regex.rs:437:5-443:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

