bb0
  0: StorageLive(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1303:13-1303:24)
  1: StorageLive(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1303:27-1303:41)
  2: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1303:27-1303:32)
  3: _4 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1303:27-1303:32)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1303:27-1303:41)
      kind: _3 = core::slice::<impl [u8]>::as_ptr(move _4) -> [return: bb1, unwind: bb52]
  }
  preds []
  succs [bb1, bb52]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1303:40-1303:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1303:27-1303:52)
      kind: _2 = <*const u8 as util::int::Pointer>::as_usize(move _3) -> [return: bb2, unwind: bb52]
  }
  preds [bb0]
  succs [bb2, bb52]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1303:51-1303:52)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1303:13-1303:24)
  2: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:65)
  3: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:65)
  4: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:64)
  5: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:41-1306:47)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:41-1306:47)
  7: _11 = &_1
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:41-1306:47)
  8: _10 = &(*(*_11))
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:41-1306:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:64)
      kind: _9 = util::wire::try_read_u32_as_usize(move _10, const "state length") -> [return: bb3, unwind: bb52]
  }
  preds [bb1]
  succs [bb3, bb52]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:63-1306:64)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:65)
      kind: _8 = <core::result::Result<(usize, usize), util::wire::DeserializeError> as core::ops::Try>::branch(move _9) -> [return: bb4, unwind: bb52]
  }
  preds [bb2]
  succs [bb4, bb52]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:64-1306:65)
  1: PlaceMention(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:65)
  2: _12 = discriminant(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:65)
      kind: switchInt(move _12) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:65)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1306:64-1306:65)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:65)
  1: _16 = ((_8 as Continue).0: (usize, usize))
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:65)
  2: _7 = _16
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:65)
  3: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:64-1306:65)
  4: PlaceMention(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:65)
  5: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1305:14-1305:23)
  6: _5 = (_7.0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1305:14-1305:23)
  7: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1305:25-1305:27)
  8: _6 = (_7.1: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1305:25-1305:27)
  9: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:65-1306:66)
  10: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:65-1306:66)
  11: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:65-1306:66)
  12: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:17-1307:29)
  13: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:17-1307:29)
  14: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:23-1307:29)
  15: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:18-1307:23)
  16: _20 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:18-1307:23)
  17: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:24-1307:28)
  18: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:24-1307:26)
  19: _22 = _6
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:24-1307:26)
  20: _21 = core::ops::RangeFrom::<usize> { start: move _22 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:24-1307:28)
  21: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:27-1307:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1307:23-1307:29)
      kind: _19 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _20, move _21) -> [return: bb10, unwind: bb52]
  }
  preds [bb4, bb6]
  succs [bb10, bb52]

bb8
  0: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:64-1306:65)
  1: _13 = move ((_8 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:64-1306:65)
  2: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:64-1306:65)
  3: _15 = move _13
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:64-1306:65)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1306:13-1306:65)
      kind: _0 = <core::result::Result<(dfa::sparse::Transitions<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _15) -> [return: bb9, unwind: bb52]
  }
  preds [bb6]
  succs [bb9, bb52]

bb9
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:64-1306:65)
  1: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:64-1306:65)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:65-1306:66)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:65-1306:66)
  4: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1306:65-1306:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb50
  }
  preds [bb8]
  succs [bb50]

bb10
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:28-1307:29)
  1: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:28-1307:29)
  2: _18 = &(*_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:17-1307:29)
  3: _17 = &(*_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:17-1307:29)
  4: _1 = move _17
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:9-1307:29)
  5: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:28-1307:29)
  6: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:29-1307:30)
  7: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1307:29-1307:30)
  8: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:67)
  9: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:67)
  10: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:66)
  11: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:41-1310:47)
  12: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:41-1310:47)
  13: _29 = &_1
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:41-1310:47)
  14: _28 = &(*(*_29))
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:41-1310:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:66)
      kind: _27 = util::wire::try_read_u32_as_usize(move _28, const "pattern length") -> [return: bb11, unwind: bb52]
  }
  preds [bb7]
  succs [bb11, bb52]

bb11
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:65-1310:66)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:67)
      kind: _26 = <core::result::Result<(usize, usize), util::wire::DeserializeError> as core::ops::Try>::branch(move _27) -> [return: bb12, unwind: bb52]
  }
  preds [bb10]
  succs [bb12, bb52]

bb12
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:66-1310:67)
  1: PlaceMention(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:67)
  2: _30 = discriminant(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:67)
      kind: switchInt(move _30) -> [0: bb15, 1: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:67)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1310:66-1310:67)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:67)
  1: _34 = ((_26 as Continue).0: (usize, usize))
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:67)
  2: _25 = _34
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:67)
  3: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:66-1310:67)
  4: PlaceMention(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:67)
  5: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1309:14-1309:25)
  6: _23 = (_25.0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1309:14-1309:25)
  7: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1309:27-1309:29)
  8: _24 = (_25.1: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1309:27-1309:29)
  9: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:67-1310:68)
  10: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:67-1310:68)
  11: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:67-1310:68)
  12: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:17-1311:29)
  13: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:17-1311:29)
  14: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:23-1311:29)
  15: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:18-1311:23)
  16: _38 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:18-1311:23)
  17: StorageLive(_39)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:24-1311:28)
  18: StorageLive(_40)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:24-1311:26)
  19: _40 = _24
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:24-1311:26)
  20: _39 = core::ops::RangeFrom::<usize> { start: move _40 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:24-1311:28)
  21: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:27-1311:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1311:23-1311:29)
      kind: _37 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _38, move _39) -> [return: bb18, unwind: bb52]
  }
  preds [bb12, bb14]
  succs [bb18, bb52]

bb16
  0: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:66-1310:67)
  1: _31 = move ((_26 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:66-1310:67)
  2: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:66-1310:67)
  3: _33 = move _31
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:66-1310:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1310:13-1310:67)
      kind: _0 = <core::result::Result<(dfa::sparse::Transitions<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _33) -> [return: bb17, unwind: bb52]
  }
  preds [bb14]
  succs [bb17, bb52]

bb17
  0: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:66-1310:67)
  1: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:66-1310:67)
  2: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:67-1310:68)
  3: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:67-1310:68)
  4: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1310:67-1310:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb49
  }
  preds [bb16]
  succs [bb49]

bb18
  0: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:28-1311:29)
  1: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:28-1311:29)
  2: _36 = &(*_37)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:17-1311:29)
  3: _35 = &(*_36)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:17-1311:29)
  4: _1 = move _35
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:9-1311:29)
  5: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:28-1311:29)
  6: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:29-1311:30)
  7: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1311:29-1311:30)
  8: StorageLive(_43)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:61)
  9: StorageLive(_44)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:61)
  10: StorageLive(_45)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:60)
  11: StorageLive(_46)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:53-1313:59)
  12: StorageLive(_47)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:53-1313:59)
  13: _47 = &_1
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:53-1313:59)
  14: _46 = &(*(*_47))
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:53-1313:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:60)
      kind: _45 = util::alphabet::ByteClasses::from_bytes(move _46) -> [return: bb19, unwind: bb52]
  }
  preds [bb15]
  succs [bb19, bb52]

bb19
  0: StorageDead(_46)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:59-1313:60)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:61)
      kind: _44 = <core::result::Result<(util::alphabet::ByteClasses, usize), util::wire::DeserializeError> as core::ops::Try>::branch(move _45) -> [return: bb20, unwind: bb52]
  }
  preds [bb18]
  succs [bb20, bb52]

bb20
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:60-1313:61)
  1: PlaceMention(_44)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:61)
  2: _48 = discriminant(_44)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:61)
      kind: switchInt(move _48) -> [0: bb23, 1: bb22, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb22, bb23]

bb21
  0: FakeRead(ForMatchedPlace(None), _44)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:61)
      kind: unreachable
  }
  preds [bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1313:60-1313:61)
      kind: falseEdge -> [real: bb24, imaginary: bb23]
  }
  preds [bb20]
  succs [bb23, bb24]

bb23
  0: StorageLive(_52)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:61)
  1: _52 = ((_44 as Continue).0: (util::alphabet::ByteClasses, usize))
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:61)
  2: _43 = _52
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:61)
  3: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:60-1313:61)
  4: PlaceMention(_43)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:61)
  5: StorageLive(_41)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:14-1313:21)
  6: _41 = (_43.0: util::alphabet::ByteClasses)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:14-1313:21)
  7: StorageLive(_42)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:23-1313:25)
  8: _42 = (_43.1: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:23-1313:25)
  9: StorageDead(_47)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:61-1313:62)
  10: StorageDead(_44)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:61-1313:62)
  11: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:61-1313:62)
  12: StorageLive(_53)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:17-1314:29)
  13: StorageLive(_54)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:17-1314:29)
  14: StorageLive(_55)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:23-1314:29)
  15: StorageLive(_56)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:18-1314:23)
  16: _56 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:18-1314:23)
  17: StorageLive(_57)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:24-1314:28)
  18: StorageLive(_58)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:24-1314:26)
  19: _58 = _42
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:24-1314:26)
  20: _57 = core::ops::RangeFrom::<usize> { start: move _58 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:24-1314:28)
  21: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:27-1314:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1314:23-1314:29)
      kind: _55 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _56, move _57) -> [return: bb26, unwind: bb52]
  }
  preds [bb20, bb22]
  succs [bb26, bb52]

bb24
  0: StorageLive(_49)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:60-1313:61)
  1: _49 = move ((_44 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:60-1313:61)
  2: StorageLive(_51)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:60-1313:61)
  3: _51 = move _49
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:60-1313:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1313:29-1313:61)
      kind: _0 = <core::result::Result<(dfa::sparse::Transitions<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _51) -> [return: bb25, unwind: bb52]
  }
  preds [bb22]
  succs [bb25, bb52]

bb25
  0: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:60-1313:61)
  1: StorageDead(_49)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:60-1313:61)
  2: StorageDead(_47)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:61-1313:62)
  3: StorageDead(_44)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:61-1313:62)
  4: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1313:61-1313:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb48
  }
  preds [bb24]
  succs [bb48]

bb26
  0: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:28-1314:29)
  1: StorageDead(_56)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:28-1314:29)
  2: _54 = &(*_55)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:17-1314:29)
  3: _53 = &(*_54)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:17-1314:29)
  4: _1 = move _53
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:9-1314:29)
  5: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:28-1314:29)
  6: StorageDead(_55)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:29-1314:30)
  7: StorageDead(_54)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1314:29-1314:30)
  8: StorageLive(_61)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:78)
  9: StorageLive(_62)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:78)
  10: StorageLive(_63)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:77)
  11: StorageLive(_64)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:41-1317:47)
  12: StorageLive(_65)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:41-1317:47)
  13: _65 = &_1
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:41-1317:47)
  14: _64 = &(*(*_65))
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:41-1317:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:77)
      kind: _63 = util::wire::try_read_u32_as_usize(move _64, const "sparse transitions length") -> [return: bb27, unwind: bb52]
  }
  preds [bb23]
  succs [bb27, bb52]

bb27
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:76-1317:77)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:78)
      kind: _62 = <core::result::Result<(usize, usize), util::wire::DeserializeError> as core::ops::Try>::branch(move _63) -> [return: bb28, unwind: bb52]
  }
  preds [bb26]
  succs [bb28, bb52]

bb28
  0: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:77-1317:78)
  1: PlaceMention(_62)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:78)
  2: _66 = discriminant(_62)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:78)
      kind: switchInt(move _66) -> [0: bb31, 1: bb30, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb30, bb31]

bb29
  0: FakeRead(ForMatchedPlace(None), _62)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:78)
      kind: unreachable
  }
  preds [bb28]
  succs []

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1317:77-1317:78)
      kind: falseEdge -> [real: bb32, imaginary: bb31]
  }
  preds [bb28]
  succs [bb31, bb32]

bb31
  0: StorageLive(_70)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:78)
  1: _70 = ((_62 as Continue).0: (usize, usize))
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:78)
  2: _61 = _70
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:78)
  3: StorageDead(_70)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:77-1317:78)
  4: PlaceMention(_61)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:78)
  5: StorageLive(_59)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1316:14-1316:17)
  6: _59 = (_61.0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1316:14-1316:17)
  7: StorageLive(_60)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1316:19-1316:21)
  8: _60 = (_61.1: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1316:19-1316:21)
  9: StorageDead(_65)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:78-1317:79)
  10: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:78-1317:79)
  11: StorageDead(_61)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:78-1317:79)
  12: StorageLive(_71)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:17-1318:29)
  13: StorageLive(_72)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:17-1318:29)
  14: StorageLive(_73)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:23-1318:29)
  15: StorageLive(_74)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:18-1318:23)
  16: _74 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:18-1318:23)
  17: StorageLive(_75)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:24-1318:28)
  18: StorageLive(_76)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:24-1318:26)
  19: _76 = _60
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:24-1318:26)
  20: _75 = core::ops::RangeFrom::<usize> { start: move _76 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:24-1318:28)
  21: StorageDead(_76)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:27-1318:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1318:23-1318:29)
      kind: _73 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _74, move _75) -> [return: bb34, unwind: bb52]
  }
  preds [bb28, bb30]
  succs [bb34, bb52]

bb32
  0: StorageLive(_67)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:77-1317:78)
  1: _67 = move ((_62 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:77-1317:78)
  2: StorageLive(_69)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:77-1317:78)
  3: _69 = move _67
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:77-1317:78)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1317:13-1317:78)
      kind: _0 = <core::result::Result<(dfa::sparse::Transitions<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _69) -> [return: bb33, unwind: bb52]
  }
  preds [bb30]
  succs [bb33, bb52]

bb33
  0: StorageDead(_69)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:77-1317:78)
  1: StorageDead(_67)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:77-1317:78)
  2: StorageDead(_65)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:78-1317:79)
  3: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:78-1317:79)
  4: StorageDead(_61)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1317:78-1317:79)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb47
  }
  preds [bb32]
  succs [bb47]

bb34
  0: StorageDead(_75)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:28-1318:29)
  1: StorageDead(_74)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:28-1318:29)
  2: _72 = &(*_73)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:17-1318:29)
  3: _71 = &(*_72)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:17-1318:29)
  4: _1 = move _71
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:9-1318:29)
  5: StorageDead(_71)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:28-1318:29)
  6: StorageDead(_73)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:29-1318:30)
  7: StorageDead(_72)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1318:29-1318:30)
  8: StorageLive(_77)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:9-1320:72)
  9: StorageLive(_78)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:9-1320:72)
  10: StorageLive(_79)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:9-1320:71)
  11: StorageLive(_80)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:31-1320:36)
  12: _80 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:31-1320:36)
  13: StorageLive(_81)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:38-1320:41)
  14: _81 = _59
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:38-1320:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1320:9-1320:71)
      kind: _79 = util::wire::check_slice_len::<u8>(move _80, move _81, const "sparse states byte length") -> [return: bb35, unwind: bb52]
  }
  preds [bb31]
  succs [bb35, bb52]

bb35
  0: StorageDead(_81)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:70-1320:71)
  1: StorageDead(_80)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:70-1320:71)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1320:9-1320:72)
      kind: _78 = <core::result::Result<(), util::wire::DeserializeError> as core::ops::Try>::branch(move _79) -> [return: bb36, unwind: bb52]
  }
  preds [bb34]
  succs [bb36, bb52]

bb36
  0: StorageDead(_79)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:71-1320:72)
  1: PlaceMention(_78)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:9-1320:72)
  2: _82 = discriminant(_78)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:9-1320:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1320:9-1320:72)
      kind: switchInt(move _82) -> [0: bb39, 1: bb38, otherwise: bb37]
  }
  preds [bb35]
  succs [bb37, bb38, bb39]

bb37
  0: FakeRead(ForMatchedPlace(None), _78)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:9-1320:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1320:9-1320:72)
      kind: unreachable
  }
  preds [bb36]
  succs []

bb38
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1320:71-1320:72)
      kind: falseEdge -> [real: bb40, imaginary: bb39]
  }
  preds [bb36]
  succs [bb39, bb40]

bb39
  0: StorageLive(_86)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:9-1320:72)
  1: _86 = ((_78 as Continue).0: ())
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:9-1320:72)
  2: _77 = _86
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:9-1320:72)
  3: StorageDead(_86)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:71-1320:72)
  4: StorageDead(_78)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:72-1320:73)
  5: StorageDead(_77)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:72-1320:73)
  6: StorageLive(_87)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1321:13-1321:19)
  7: StorageLive(_88)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1321:28-1321:35)
  8: StorageLive(_89)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1321:23-1321:28)
  9: _89 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1321:23-1321:28)
  10: StorageLive(_90)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1321:29-1321:34)
  11: StorageLive(_91)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1321:31-1321:34)
  12: _91 = _59
    SourceInfo(regex-automata/src/dfa/sparse.rs:1321:31-1321:34)
  13: _90 = core::ops::RangeTo::<usize> { end: move _91 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1321:29-1321:34)
  14: StorageDead(_91)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1321:33-1321:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1321:28-1321:35)
      kind: _88 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _89, move _90) -> [return: bb42, unwind: bb52]
  }
  preds [bb36, bb38]
  succs [bb42, bb52]

bb40
  0: StorageLive(_83)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:71-1320:72)
  1: _83 = move ((_78 as Break).0: core::result::Result<core::convert::Infallible, util::wire::DeserializeError>)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:71-1320:72)
  2: StorageLive(_85)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:71-1320:72)
  3: _85 = move _83
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:71-1320:72)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1320:9-1320:72)
      kind: _0 = <core::result::Result<(dfa::sparse::Transitions<&[u8]>, usize), util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual(move _85) -> [return: bb41, unwind: bb52]
  }
  preds [bb38]
  succs [bb41, bb52]

bb41
  0: StorageDead(_85)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:71-1320:72)
  1: StorageDead(_83)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:71-1320:72)
  2: StorageDead(_78)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:72-1320:73)
  3: StorageDead(_77)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1320:72-1320:73)
  4: StorageDead(_60)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  5: StorageDead(_59)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb47
  }
  preds [bb40]
  succs [bb47]

bb42
  0: StorageDead(_90)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1321:34-1321:35)
  1: StorageDead(_89)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1321:34-1321:35)
  2: _87 = &(*_88)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1321:22-1321:35)
  3: FakeRead(ForLet(None), _87)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1321:13-1321:19)
  4: StorageLive(_92)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:17-1322:30)
  5: StorageLive(_93)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:17-1322:30)
  6: StorageLive(_94)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:23-1322:30)
  7: StorageLive(_95)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:18-1322:23)
  8: _95 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:18-1322:23)
  9: StorageLive(_96)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:24-1322:29)
  10: StorageLive(_97)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:24-1322:27)
  11: _97 = _59
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:24-1322:27)
  12: _96 = core::ops::RangeFrom::<usize> { start: move _97 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:24-1322:29)
  13: StorageDead(_97)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:28-1322:29)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1322:23-1322:30)
      kind: _94 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _95, move _96) -> [return: bb43, unwind: bb52]
  }
  preds [bb39]
  succs [bb43, bb52]

bb43
  0: StorageDead(_96)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:29-1322:30)
  1: StorageDead(_95)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:29-1322:30)
  2: _93 = &(*_94)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:17-1322:30)
  3: _92 = &(*_93)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:17-1322:30)
  4: _1 = move _92
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:9-1322:30)
  5: StorageDead(_92)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:29-1322:30)
  6: StorageDead(_94)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:30-1322:31)
  7: StorageDead(_93)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1322:30-1322:31)
  8: StorageLive(_98)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:13-1324:18)
  9: StorageLive(_99)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:35-1324:41)
  10: _99 = _87
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:35-1324:41)
  11: StorageLive(_100)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:43-1324:50)
  12: _100 = _41
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:43-1324:50)
  13: StorageLive(_101)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:52-1324:61)
  14: _101 = _5
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:52-1324:61)
  15: StorageLive(_102)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:63-1324:74)
  16: _102 = _23
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:63-1324:74)
  17: _98 = dfa::sparse::Transitions::<&[u8]> { sparse: move _99, classes: move _100, state_len: move _101, pattern_len: move _102 }
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:21-1324:76)
  18: StorageDead(_102)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:75-1324:76)
  19: StorageDead(_101)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:75-1324:76)
  20: StorageDead(_100)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:75-1324:76)
  21: StorageDead(_99)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:75-1324:76)
  22: FakeRead(ForLet(None), _98)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1324:13-1324:18)
  23: StorageLive(_103)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:12-1325:60)
  24: StorageLive(_104)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:13-1325:18)
  25: _104 = move _98
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:13-1325:18)
  26: StorageLive(_105)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:20-1325:59)
  27: StorageLive(_106)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:20-1325:45)
  28: StorageLive(_107)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:20-1325:34)
  29: StorageLive(_108)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:20-1325:25)
  30: _108 = &(*_1)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:20-1325:25)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1325:20-1325:34)
      kind: _107 = core::slice::<impl [u8]>::as_ptr(move _108) -> [return: bb44, unwind: bb52]
  }
  preds [bb42]
  succs [bb44, bb52]

bb44
  0: StorageDead(_108)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:33-1325:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1325:20-1325:45)
      kind: _106 = <*const u8 as util::int::Pointer>::as_usize(move _107) -> [return: bb45, unwind: bb52]
  }
  preds [bb43]
  succs [bb45, bb52]

bb45
  0: StorageDead(_107)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:44-1325:45)
  1: StorageLive(_109)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:48-1325:59)
  2: _109 = _2
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:48-1325:59)
  3: _110 = SubWithOverflow(_106, _109)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:20-1325:59)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1325:20-1325:59)
      kind: assert(!move (_110.1: bool), "attempt to compute `{} - {}`, which would overflow", move _106, move _109) -> [success: bb46, unwind: bb52]
  }
  preds [bb44]
  succs [bb46, bb52]

bb46
  0: _105 = move (_110.0: usize)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:20-1325:59)
  1: StorageDead(_109)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:58-1325:59)
  2: StorageDead(_106)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:58-1325:59)
  3: _103 = (move _104, move _105)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:12-1325:60)
  4: StorageDead(_105)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:59-1325:60)
  5: StorageDead(_104)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:59-1325:60)
  6: _0 = core::result::Result::<(dfa::sparse::Transitions<&[u8]>, usize), util::wire::DeserializeError>::Ok(move _103)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:9-1325:61)
  7: StorageDead(_103)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1325:60-1325:61)
  8: StorageDead(_98)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  9: StorageDead(_88)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  10: StorageDead(_87)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  11: StorageDead(_60)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  12: StorageDead(_59)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  13: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  14: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  15: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  16: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  17: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  18: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  19: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1326:6-1326:6)
      kind: goto -> bb51
  }
  preds [bb45]
  succs [bb51]

bb47
  0: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  1: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb48
  }
  preds [bb33, bb41]
  succs [bb48]

bb48
  0: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  1: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb49
  }
  preds [bb25, bb47]
  succs [bb49]

bb49
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  1: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb50
  }
  preds [bb17, bb48]
  succs [bb50]

bb50
  0: StorageDead(_2)
    SourceInfo(regex-automata/src/dfa/sparse.rs:1326:5-1326:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1326:6-1326:6)
      kind: goto -> bb51
  }
  preds [bb9, bb49]
  succs [bb51]

bb51
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1326:6-1326:6)
      kind: return
  }
  preds [bb46, bb50]
  succs []

bb52
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/sparse.rs:1300:5-1326:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb7, bb8, bb10, bb11, bb15, bb16, bb18, bb19, bb23, bb24, bb26, bb27, bb31, bb32, bb34, bb35, bb39, bb40, bb42, bb43, bb44, bb45]
  succs []

