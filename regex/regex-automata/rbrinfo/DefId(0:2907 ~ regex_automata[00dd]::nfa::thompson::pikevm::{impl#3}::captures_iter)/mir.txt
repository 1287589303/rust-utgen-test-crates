bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:937:13-937:17)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:937:20-937:24)
  2: _5 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:937:20-937:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:937:20-937:42)
      kind: _4 = nfa::thompson::pikevm::PikeVM::create_captures(move _5) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:937:41-937:42)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:937:13-937:17)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:938:13-938:15)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:938:38-938:50)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:938:38-938:43)
  5: _8 = move _3
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:938:38-938:43)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:938:38-938:50)
      kind: _7 = <I as core::convert::Into<util::search::Input<'_>>>::into(move _8) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:938:49-938:50)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:938:18-938:51)
      kind: _6 = util::iter::Searcher::<'_>::new(move _7) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:938:50-938:51)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:938:13-938:15)
  2: StorageLive(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:939:31-939:35)
  3: _9 = &(*_1)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:939:31-939:35)
  4: StorageLive(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:939:37-939:42)
  5: _10 = &mut (*_2)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:939:37-939:42)
  6: StorageLive(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:939:44-939:48)
  7: _11 = move _4
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:939:44-939:48)
  8: StorageLive(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:939:50-939:52)
  9: _12 = move _6
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:939:50-939:52)
  10: _0 = nfa::thompson::pikevm::CapturesMatches::<'_, '_, '_> { re: move _9, cache: move _10, caps: move _11, it: move _12 }
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:939:9-939:54)
  11: StorageDead(_12)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:939:53-939:54)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:939:53-939:54)
      kind: drop(_11) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_11)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:939:53-939:54)
  1: StorageDead(_10)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:939:53-939:54)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:939:53-939:54)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:940:5-940:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:940:5-940:6)
      kind: drop(_4) -> [return: bb5, unwind: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  0: StorageDead(_4)
    SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:940:5-940:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:940:5-940:6)
      kind: drop(_3) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:940:6-940:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:938:49-938:50)
      kind: drop(_8) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:940:5-940:6)
      kind: drop(_4) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb2, bb3, bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:940:5-940:6)
      kind: drop(_3) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb0, bb4, bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-automata/src/nfa/thompson/pikevm.rs:932:5-940:6)
      kind: resume
  }
  preds [bb5, bb9]
  succs []

