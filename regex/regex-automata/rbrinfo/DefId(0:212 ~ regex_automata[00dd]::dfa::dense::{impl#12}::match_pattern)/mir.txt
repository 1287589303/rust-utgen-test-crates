bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:3217:9-3219:10)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:3217:12-3217:36)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:3217:12-3217:31)
  3: _6 = (((*_1).2: dfa::dense::MatchStates<T>).2: usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:3217:12-3217:31)
  4: _5 = Eq(move _6, const 1_usize)
    SourceInfo(regex-automata/src/dfa/dense.rs:3217:12-3217:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3217:12-3217:36)
      kind: switchInt(move _5) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:3217:35-3217:36)
  1: _0 = const util::primitives::PatternID::ZERO
    SourceInfo(regex-automata/src/dfa/dense.rs:3218:20-3218:35)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:3219:9-3219:10)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:3219:9-3219:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3222:6-3222:6)
      kind: goto -> bb5
  }
  preds [bb0]
  succs [bb5]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/dense.rs:3217:35-3217:36)
  1: _4 = const ()
    SourceInfo(regex-automata/src/dfa/dense.rs:3219:10-3219:10)
  2: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/dense.rs:3219:9-3219:10)
  3: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/dense.rs:3219:9-3219:10)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:3220:13-3220:24)
  5: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:3220:27-3220:31)
  6: _9 = &(*_1)
    SourceInfo(regex-automata/src/dfa/dense.rs:3220:27-3220:31)
  7: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:3220:50-3220:52)
  8: _10 = _2
    SourceInfo(regex-automata/src/dfa/dense.rs:3220:50-3220:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3220:27-3220:53)
      kind: _8 = dfa::dense::DFA::<T>::match_state_index(move _9, move _10) -> [return: bb3, unwind: bb6]
  }
  preds [bb0]
  succs [bb3, bb6]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/dense.rs:3220:52-3220:53)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/dense.rs:3220:52-3220:53)
  2: FakeRead(ForLet(None), _8)
    SourceInfo(regex-automata/src/dfa/dense.rs:3220:13-3220:24)
  3: StorageLive(_11)
    SourceInfo(regex-automata/src/dfa/dense.rs:3221:9-3221:16)
  4: _11 = &((*_1).2: dfa::dense::MatchStates<T>)
    SourceInfo(regex-automata/src/dfa/dense.rs:3221:9-3221:16)
  5: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:3221:28-3221:39)
  6: _12 = _8
    SourceInfo(regex-automata/src/dfa/dense.rs:3221:28-3221:39)
  7: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:3221:41-3221:52)
  8: _13 = _3
    SourceInfo(regex-automata/src/dfa/dense.rs:3221:41-3221:52)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3221:9-3221:53)
      kind: _0 = dfa::dense::MatchStates::<T>::pattern_id(move _11, move _12, move _13) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/dense.rs:3221:52-3221:53)
  1: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/dense.rs:3221:52-3221:53)
  2: StorageDead(_11)
    SourceInfo(regex-automata/src/dfa/dense.rs:3221:52-3221:53)
  3: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/dense.rs:3222:5-3222:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3222:6-3222:6)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3222:6-3222:6)
      kind: return
  }
  preds [bb1, bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/dense.rs:3211:5-3222:6)
      kind: resume
  }
  preds [bb2, bb3]
  succs []

