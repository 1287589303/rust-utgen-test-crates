bb0
  0: StorageLive(_4)
    SourceInfo(regex-automata/src/dfa/minimize.rs:387:9-387:21)
  1: StorageLive(_5)
    SourceInfo(regex-automata/src/dfa/minimize.rs:387:9-387:13)
  2: _5 = &mut (*_3)
    SourceInfo(regex-automata/src/dfa/minimize.rs:387:9-387:13)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:387:9-387:21)
      kind: _4 = dfa::minimize::StateSet::clear(move _5) -> [return: bb1, unwind: bb69]
  }
  preds []
  succs [bb1, bb69]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-automata/src/dfa/minimize.rs:387:20-387:21)
  1: StorageDead(_4)
    SourceInfo(regex-automata/src/dfa/minimize.rs:387:21-387:22)
  2: StorageLive(_6)
    SourceInfo(regex-automata/src/dfa/minimize.rs:388:9-390:10)
  3: StorageLive(_7)
    SourceInfo(regex-automata/src/dfa/minimize.rs:388:12-388:27)
  4: StorageLive(_8)
    SourceInfo(regex-automata/src/dfa/minimize.rs:388:12-388:16)
  5: _8 = &(*_1)
    SourceInfo(regex-automata/src/dfa/minimize.rs:388:12-388:16)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:388:12-388:27)
      kind: _7 = dfa::minimize::StateSet::is_empty(move _8) -> [return: bb2, unwind: bb69]
  }
  preds [bb0]
  succs [bb2, bb69]

bb2
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:388:12-388:27)
      kind: switchInt(move _7) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/minimize.rs:388:26-388:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:388:48-390:10)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-automata/src/dfa/minimize.rs:388:26-388:27)
  1: StorageLive(_9)
    SourceInfo(regex-automata/src/dfa/minimize.rs:388:31-388:47)
  2: StorageLive(_10)
    SourceInfo(regex-automata/src/dfa/minimize.rs:388:31-388:36)
  3: _10 = &(*_2)
    SourceInfo(regex-automata/src/dfa/minimize.rs:388:31-388:36)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:388:31-388:47)
      kind: _9 = dfa::minimize::StateSet::is_empty(move _10) -> [return: bb5, unwind: bb69]
  }
  preds [bb2]
  succs [bb5, bb69]

bb5
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:388:31-388:47)
      kind: switchInt(move _9) -> [0: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/minimize.rs:388:46-388:47)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:388:48-390:10)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: _0 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:389:13-389:19)
  1: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/minimize.rs:390:9-390:10)
  2: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/minimize.rs:390:9-390:10)
  3: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/minimize.rs:390:9-390:10)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:418:6-418:6)
      kind: goto -> bb63
  }
  preds [bb3, bb6]
  succs [bb63]

bb8
  0: StorageDead(_10)
    SourceInfo(regex-automata/src/dfa/minimize.rs:388:46-388:47)
  1: _6 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:390:10-390:10)
  2: StorageDead(_9)
    SourceInfo(regex-automata/src/dfa/minimize.rs:390:9-390:10)
  3: StorageDead(_7)
    SourceInfo(regex-automata/src/dfa/minimize.rs:390:9-390:10)
  4: StorageDead(_6)
    SourceInfo(regex-automata/src/dfa/minimize.rs:390:9-390:10)
  5: StorageLive(_14)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:28-392:67)
  6: StorageLive(_15)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:29-392:46)
  7: StorageLive(_16)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:29-392:37)
  8: StorageLive(_17)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:29-392:46)
  9: StorageLive(_18)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:29-392:37)
  10: _18 = &((*_1).0: std::rc::Rc<core::cell::RefCell<std::vec::Vec<util::primitives::StateID>>>)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:29-392:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:392:29-392:46)
      kind: _17 = <std::rc::Rc<core::cell::RefCell<std::vec::Vec<util::primitives::StateID>>> as core::ops::Deref>::deref(move _18) -> [return: bb9, unwind: bb69]
  }
  preds [bb5]
  succs [bb9, bb69]

bb9
  0: _16 = &(*_17)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:29-392:37)
  1: StorageDead(_18)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:36-392:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:392:29-392:46)
      kind: _15 = core::cell::RefCell::<std::vec::Vec<util::primitives::StateID>>::borrow(move _16) -> [return: bb10, unwind: bb69]
  }
  preds [bb8]
  succs [bb10, bb69]

bb10
  0: StorageDead(_16)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:45-392:46)
  1: StorageLive(_19)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:48-392:66)
  2: StorageLive(_20)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:48-392:57)
  3: StorageLive(_21)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:48-392:66)
  4: StorageLive(_22)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:48-392:57)
  5: _22 = &((*_2).0: std::rc::Rc<core::cell::RefCell<std::vec::Vec<util::primitives::StateID>>>)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:48-392:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:392:48-392:66)
      kind: _21 = <std::rc::Rc<core::cell::RefCell<std::vec::Vec<util::primitives::StateID>>> as core::ops::Deref>::deref(move _22) -> [return: bb11, unwind: bb68]
  }
  preds [bb9]
  succs [bb11, bb68]

bb11
  0: _20 = &(*_21)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:48-392:57)
  1: StorageDead(_22)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:56-392:57)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:392:48-392:66)
      kind: _19 = core::cell::RefCell::<std::vec::Vec<util::primitives::StateID>>::borrow(move _20) -> [return: bb12, unwind: bb68]
  }
  preds [bb10]
  succs [bb12, bb68]

bb12
  0: StorageDead(_20)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:65-392:66)
  1: _14 = (move _15, move _19)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:28-392:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:392:66-392:67)
      kind: drop(_19) -> [return: bb13, unwind: bb66]
  }
  preds [bb11]
  succs [bb13, bb66]

bb13
  0: StorageDead(_19)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:66-392:67)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:392:66-392:67)
      kind: drop(_15) -> [return: bb14, unwind: bb67]
  }
  preds [bb12]
  succs [bb14, bb67]

bb14
  0: StorageDead(_15)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:66-392:67)
  1: PlaceMention(_14)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:28-392:67)
  2: StorageLive(_12)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:14-392:18)
  3: _12 = move (_14.0: core::cell::Ref<'_, std::vec::Vec<util::primitives::StateID>>)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:14-392:18)
  4: StorageLive(_13)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:20-392:24)
  5: _13 = move (_14.1: core::cell::Ref<'_, std::vec::Vec<util::primitives::StateID>>)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:20-392:24)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:392:67-392:68)
      kind: drop(_14) -> [return: bb15, unwind: bb64]
  }
  preds [bb13]
  succs [bb15, bb64]

bb15
  0: StorageDead(_21)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:67-392:68)
  1: StorageDead(_17)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:67-392:68)
  2: StorageDead(_14)
    SourceInfo(regex-automata/src/dfa/minimize.rs:392:67-392:68)
  3: StorageLive(_25)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:34-393:78)
  4: StorageLive(_26)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:35-393:55)
  5: StorageLive(_27)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:35-393:46)
  6: StorageLive(_28)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:35-393:39)
  7: StorageLive(_29)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:35-393:46)
  8: StorageLive(_30)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:35-393:39)
  9: StorageLive(_31)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:35-393:46)
  10: StorageLive(_32)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:35-393:39)
  11: _32 = &_12
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:35-393:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:393:35-393:46)
      kind: _31 = <core::cell::Ref<'_, std::vec::Vec<util::primitives::StateID>> as core::ops::Deref>::deref(move _32) -> [return: bb16, unwind: bb64]
  }
  preds [bb14]
  succs [bb16, bb64]

bb16
  0: _30 = &(*_31)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:35-393:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:393:35-393:46)
      kind: _29 = <std::vec::Vec<util::primitives::StateID> as core::ops::Deref>::deref(move _30) -> [return: bb17, unwind: bb64]
  }
  preds [bb15]
  succs [bb17, bb64]

bb17
  0: _28 = &(*_29)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:35-393:39)
  1: StorageDead(_32)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:38-393:39)
  2: StorageDead(_30)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:38-393:39)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:393:35-393:46)
      kind: _27 = core::slice::<impl [util::primitives::StateID]>::iter(move _28) -> [return: bb18, unwind: bb64]
  }
  preds [bb16]
  succs [bb18, bb64]

bb18
  0: StorageDead(_28)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:45-393:46)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:393:35-393:55)
      kind: _26 = <core::slice::Iter<'_, util::primitives::StateID> as core::iter::Iterator>::cloned::<'_, util::primitives::StateID>(move _27) -> [return: bb19, unwind: bb64]
  }
  preds [bb17]
  succs [bb19, bb64]

bb19
  0: StorageDead(_27)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:54-393:55)
  1: StorageLive(_33)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:57-393:77)
  2: StorageLive(_34)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:57-393:68)
  3: StorageLive(_35)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:57-393:61)
  4: StorageLive(_36)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:57-393:68)
  5: StorageLive(_37)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:57-393:61)
  6: StorageLive(_38)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:57-393:68)
  7: StorageLive(_39)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:57-393:61)
  8: _39 = &_13
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:57-393:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:393:57-393:68)
      kind: _38 = <core::cell::Ref<'_, std::vec::Vec<util::primitives::StateID>> as core::ops::Deref>::deref(move _39) -> [return: bb20, unwind: bb64]
  }
  preds [bb18]
  succs [bb20, bb64]

bb20
  0: _37 = &(*_38)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:57-393:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:393:57-393:68)
      kind: _36 = <std::vec::Vec<util::primitives::StateID> as core::ops::Deref>::deref(move _37) -> [return: bb21, unwind: bb64]
  }
  preds [bb19]
  succs [bb21, bb64]

bb21
  0: _35 = &(*_36)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:57-393:61)
  1: StorageDead(_39)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:60-393:61)
  2: StorageDead(_37)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:60-393:61)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:393:57-393:68)
      kind: _34 = core::slice::<impl [util::primitives::StateID]>::iter(move _35) -> [return: bb22, unwind: bb64]
  }
  preds [bb20]
  succs [bb22, bb64]

bb22
  0: StorageDead(_35)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:67-393:68)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:393:57-393:77)
      kind: _33 = <core::slice::Iter<'_, util::primitives::StateID> as core::iter::Iterator>::cloned::<'_, util::primitives::StateID>(move _34) -> [return: bb23, unwind: bb64]
  }
  preds [bb21]
  succs [bb23, bb64]

bb23
  0: StorageDead(_34)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:76-393:77)
  1: _25 = (move _26, move _33)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:34-393:78)
  2: StorageDead(_33)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:77-393:78)
  3: StorageDead(_26)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:77-393:78)
  4: PlaceMention(_25)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:34-393:78)
  5: StorageLive(_23)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:14-393:21)
  6: _23 = move (_25.0: core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>>)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:14-393:21)
  7: StorageLive(_24)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:23-393:30)
  8: _24 = move (_25.1: core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>>)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:23-393:30)
  9: StorageDead(_38)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:78-393:79)
  10: StorageDead(_36)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:78-393:79)
  11: StorageDead(_31)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:78-393:79)
  12: StorageDead(_29)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:78-393:79)
  13: StorageDead(_25)
    SourceInfo(regex-automata/src/dfa/minimize.rs:393:78-393:79)
  14: StorageLive(_42)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:30-394:72)
  15: StorageLive(_43)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:31-394:50)
  16: StorageLive(_44)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:31-394:41)
  17: StorageLive(_45)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:31-394:34)
  18: _45 = &mut _23
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:31-394:34)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:394:31-394:41)
      kind: _44 = <core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _45) -> [return: bb24, unwind: bb64]
  }
  preds [bb22]
  succs [bb24, bb64]

bb24
  0: StorageDead(_45)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:40-394:41)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:394:31-394:50)
      kind: _43 = core::option::Option::<util::primitives::StateID>::unwrap(move _44) -> [return: bb25, unwind: bb64]
  }
  preds [bb23]
  succs [bb25, bb64]

bb25
  0: StorageDead(_44)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:49-394:50)
  1: StorageLive(_46)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:52-394:71)
  2: StorageLive(_47)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:52-394:62)
  3: StorageLive(_48)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:52-394:55)
  4: _48 = &mut _24
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:52-394:55)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:394:52-394:62)
      kind: _47 = <core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _48) -> [return: bb26, unwind: bb64]
  }
  preds [bb24]
  succs [bb26, bb64]

bb26
  0: StorageDead(_48)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:61-394:62)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:394:52-394:71)
      kind: _46 = core::option::Option::<util::primitives::StateID>::unwrap(move _47) -> [return: bb27, unwind: bb64]
  }
  preds [bb25]
  succs [bb27, bb64]

bb27
  0: StorageDead(_47)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:70-394:71)
  1: _42 = (move _43, move _46)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:30-394:72)
  2: StorageDead(_46)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:71-394:72)
  3: StorageDead(_43)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:71-394:72)
  4: PlaceMention(_42)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:30-394:72)
  5: StorageLive(_40)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:14-394:19)
  6: _40 = (_42.0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:14-394:19)
  7: StorageLive(_41)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:21-394:26)
  8: _41 = (_42.1: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:21-394:26)
  9: StorageDead(_42)
    SourceInfo(regex-automata/src/dfa/minimize.rs:394:72-394:73)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:395:9-417:10)
      kind: goto -> bb28
  }
  preds [bb26]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:395:9-417:10)
      kind: falseUnwind -> [real: bb29, unwind: bb64]
  }
  preds [bb27, bb58]
  succs [bb29, bb64]

bb29
  0: StorageLive(_50)
    SourceInfo(regex-automata/src/dfa/minimize.rs:396:16-396:22)
  1: StorageLive(_51)
    SourceInfo(regex-automata/src/dfa/minimize.rs:396:16-396:17)
  2: _51 = &_40
    SourceInfo(regex-automata/src/dfa/minimize.rs:396:16-396:17)
  3: StorageLive(_52)
    SourceInfo(regex-automata/src/dfa/minimize.rs:396:21-396:22)
  4: _52 = &_41
    SourceInfo(regex-automata/src/dfa/minimize.rs:396:21-396:22)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:396:16-396:22)
      kind: _50 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _51, move _52) -> [return: bb30, unwind: bb64]
  }
  preds [bb28]
  succs [bb30, bb64]

bb30
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:396:16-396:22)
      kind: switchInt(move _50) -> [0: bb43, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb43]

bb31
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/minimize.rs:396:21-396:22)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/minimize.rs:396:21-396:22)
  2: StorageLive(_53)
    SourceInfo(regex-automata/src/dfa/minimize.rs:397:17-397:28)
  3: StorageLive(_54)
    SourceInfo(regex-automata/src/dfa/minimize.rs:397:17-397:21)
  4: _54 = &mut (*_3)
    SourceInfo(regex-automata/src/dfa/minimize.rs:397:17-397:21)
  5: StorageLive(_55)
    SourceInfo(regex-automata/src/dfa/minimize.rs:397:26-397:27)
  6: _55 = _40
    SourceInfo(regex-automata/src/dfa/minimize.rs:397:26-397:27)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:397:17-397:28)
      kind: _53 = dfa::minimize::StateSet::add(move _54, move _55) -> [return: bb32, unwind: bb64]
  }
  preds [bb30]
  succs [bb32, bb64]

bb32
  0: StorageDead(_55)
    SourceInfo(regex-automata/src/dfa/minimize.rs:397:27-397:28)
  1: StorageDead(_54)
    SourceInfo(regex-automata/src/dfa/minimize.rs:397:27-397:28)
  2: StorageDead(_53)
    SourceInfo(regex-automata/src/dfa/minimize.rs:397:28-397:29)
  3: StorageLive(_56)
    SourceInfo(regex-automata/src/dfa/minimize.rs:398:21-401:18)
  4: StorageLive(_57)
    SourceInfo(regex-automata/src/dfa/minimize.rs:398:27-398:37)
  5: StorageLive(_58)
    SourceInfo(regex-automata/src/dfa/minimize.rs:398:27-398:30)
  6: _58 = &mut _23
    SourceInfo(regex-automata/src/dfa/minimize.rs:398:27-398:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:398:27-398:37)
      kind: _57 = <core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _58) -> [return: bb33, unwind: bb64]
  }
  preds [bb31]
  succs [bb33, bb64]

bb33
  0: StorageDead(_58)
    SourceInfo(regex-automata/src/dfa/minimize.rs:398:36-398:37)
  1: PlaceMention(_57)
    SourceInfo(regex-automata/src/dfa/minimize.rs:398:27-398:37)
  2: _59 = discriminant(_57)
    SourceInfo(regex-automata/src/dfa/minimize.rs:398:27-398:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:398:21-398:37)
      kind: switchInt(move _59) -> [0: bb35, 1: bb36, otherwise: bb34]
  }
  preds [bb32]
  succs [bb34, bb35, bb36]

bb34
  0: FakeRead(ForMatchedPlace(None), _57)
    SourceInfo(regex-automata/src/dfa/minimize.rs:398:27-398:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:398:27-398:37)
      kind: unreachable
  }
  preds [bb33]
  succs []

bb35
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:399:21-399:25)
      kind: falseEdge -> [real: bb37, imaginary: bb36]
  }
  preds [bb33]
  succs [bb36, bb37]

bb36
  0: StorageLive(_61)
    SourceInfo(regex-automata/src/dfa/minimize.rs:400:26-400:27)
  1: _61 = ((_57 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/minimize.rs:400:26-400:27)
  2: _56 = _61
    SourceInfo(regex-automata/src/dfa/minimize.rs:400:32-400:33)
  3: StorageDead(_61)
    SourceInfo(regex-automata/src/dfa/minimize.rs:400:32-400:33)
  4: _40 = move _56
    SourceInfo(regex-automata/src/dfa/minimize.rs:398:17-401:18)
  5: StorageDead(_56)
    SourceInfo(regex-automata/src/dfa/minimize.rs:401:17-401:18)
  6: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/minimize.rs:401:18-401:19)
  7: StorageLive(_62)
    SourceInfo(regex-automata/src/dfa/minimize.rs:402:21-405:18)
  8: StorageLive(_63)
    SourceInfo(regex-automata/src/dfa/minimize.rs:402:27-402:37)
  9: StorageLive(_64)
    SourceInfo(regex-automata/src/dfa/minimize.rs:402:27-402:30)
  10: _64 = &mut _24
    SourceInfo(regex-automata/src/dfa/minimize.rs:402:27-402:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:402:27-402:37)
      kind: _63 = <core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _64) -> [return: bb38, unwind: bb64]
  }
  preds [bb33, bb35]
  succs [bb38, bb64]

bb37
  0: _0 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:399:29-399:34)
  1: StorageDead(_56)
    SourceInfo(regex-automata/src/dfa/minimize.rs:401:17-401:18)
  2: StorageDead(_57)
    SourceInfo(regex-automata/src/dfa/minimize.rs:401:18-401:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb35]
  succs [bb60]

bb38
  0: StorageDead(_64)
    SourceInfo(regex-automata/src/dfa/minimize.rs:402:36-402:37)
  1: PlaceMention(_63)
    SourceInfo(regex-automata/src/dfa/minimize.rs:402:27-402:37)
  2: _65 = discriminant(_63)
    SourceInfo(regex-automata/src/dfa/minimize.rs:402:27-402:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:402:21-402:37)
      kind: switchInt(move _65) -> [0: bb40, 1: bb41, otherwise: bb39]
  }
  preds [bb36]
  succs [bb39, bb40, bb41]

bb39
  0: FakeRead(ForMatchedPlace(None), _63)
    SourceInfo(regex-automata/src/dfa/minimize.rs:402:27-402:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:402:27-402:37)
      kind: unreachable
  }
  preds [bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:403:21-403:25)
      kind: falseEdge -> [real: bb42, imaginary: bb41]
  }
  preds [bb38]
  succs [bb41, bb42]

bb41
  0: StorageLive(_67)
    SourceInfo(regex-automata/src/dfa/minimize.rs:404:26-404:27)
  1: _67 = ((_63 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/minimize.rs:404:26-404:27)
  2: _62 = _67
    SourceInfo(regex-automata/src/dfa/minimize.rs:404:32-404:33)
  3: StorageDead(_67)
    SourceInfo(regex-automata/src/dfa/minimize.rs:404:32-404:33)
  4: _41 = move _62
    SourceInfo(regex-automata/src/dfa/minimize.rs:402:17-405:18)
  5: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/minimize.rs:405:17-405:18)
  6: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/minimize.rs:405:18-405:19)
  7: _49 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:396:23-406:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:396:13-416:14)
      kind: goto -> bb58
  }
  preds [bb38, bb40]
  succs [bb58]

bb42
  0: _0 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:403:29-403:34)
  1: StorageDead(_62)
    SourceInfo(regex-automata/src/dfa/minimize.rs:405:17-405:18)
  2: StorageDead(_63)
    SourceInfo(regex-automata/src/dfa/minimize.rs:405:18-405:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb40]
  succs [bb60]

bb43
  0: StorageDead(_52)
    SourceInfo(regex-automata/src/dfa/minimize.rs:396:21-396:22)
  1: StorageDead(_51)
    SourceInfo(regex-automata/src/dfa/minimize.rs:396:21-396:22)
  2: StorageLive(_68)
    SourceInfo(regex-automata/src/dfa/minimize.rs:406:23-406:28)
  3: StorageLive(_69)
    SourceInfo(regex-automata/src/dfa/minimize.rs:406:23-406:24)
  4: _69 = &_40
    SourceInfo(regex-automata/src/dfa/minimize.rs:406:23-406:24)
  5: StorageLive(_70)
    SourceInfo(regex-automata/src/dfa/minimize.rs:406:27-406:28)
  6: _70 = &_41
    SourceInfo(regex-automata/src/dfa/minimize.rs:406:27-406:28)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:406:23-406:28)
      kind: _68 = <util::primitives::StateID as core::cmp::PartialOrd>::lt(move _69, move _70) -> [return: bb44, unwind: bb64]
  }
  preds [bb30]
  succs [bb44, bb64]

bb44
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:406:23-406:28)
      kind: switchInt(move _68) -> [0: bb51, otherwise: bb45]
  }
  preds [bb43]
  succs [bb45, bb51]

bb45
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/dfa/minimize.rs:406:27-406:28)
  1: StorageDead(_69)
    SourceInfo(regex-automata/src/dfa/minimize.rs:406:27-406:28)
  2: StorageLive(_71)
    SourceInfo(regex-automata/src/dfa/minimize.rs:407:21-410:18)
  3: StorageLive(_72)
    SourceInfo(regex-automata/src/dfa/minimize.rs:407:27-407:37)
  4: StorageLive(_73)
    SourceInfo(regex-automata/src/dfa/minimize.rs:407:27-407:30)
  5: _73 = &mut _23
    SourceInfo(regex-automata/src/dfa/minimize.rs:407:27-407:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:407:27-407:37)
      kind: _72 = <core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _73) -> [return: bb46, unwind: bb64]
  }
  preds [bb44]
  succs [bb46, bb64]

bb46
  0: StorageDead(_73)
    SourceInfo(regex-automata/src/dfa/minimize.rs:407:36-407:37)
  1: PlaceMention(_72)
    SourceInfo(regex-automata/src/dfa/minimize.rs:407:27-407:37)
  2: _74 = discriminant(_72)
    SourceInfo(regex-automata/src/dfa/minimize.rs:407:27-407:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:407:21-407:37)
      kind: switchInt(move _74) -> [0: bb48, 1: bb49, otherwise: bb47]
  }
  preds [bb45]
  succs [bb47, bb48, bb49]

bb47
  0: FakeRead(ForMatchedPlace(None), _72)
    SourceInfo(regex-automata/src/dfa/minimize.rs:407:27-407:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:407:27-407:37)
      kind: unreachable
  }
  preds [bb46]
  succs []

bb48
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:408:21-408:25)
      kind: falseEdge -> [real: bb50, imaginary: bb49]
  }
  preds [bb46]
  succs [bb49, bb50]

bb49
  0: StorageLive(_76)
    SourceInfo(regex-automata/src/dfa/minimize.rs:409:26-409:27)
  1: _76 = ((_72 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/minimize.rs:409:26-409:27)
  2: _71 = _76
    SourceInfo(regex-automata/src/dfa/minimize.rs:409:32-409:33)
  3: StorageDead(_76)
    SourceInfo(regex-automata/src/dfa/minimize.rs:409:32-409:33)
  4: _40 = move _71
    SourceInfo(regex-automata/src/dfa/minimize.rs:407:17-410:18)
  5: StorageDead(_71)
    SourceInfo(regex-automata/src/dfa/minimize.rs:410:17-410:18)
  6: StorageDead(_72)
    SourceInfo(regex-automata/src/dfa/minimize.rs:410:18-410:19)
  7: _49 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:406:29-411:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:406:20-416:14)
      kind: goto -> bb57
  }
  preds [bb46, bb48]
  succs [bb57]

bb50
  0: _0 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:408:29-408:34)
  1: StorageDead(_71)
    SourceInfo(regex-automata/src/dfa/minimize.rs:410:17-410:18)
  2: StorageDead(_72)
    SourceInfo(regex-automata/src/dfa/minimize.rs:410:18-410:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb59
  }
  preds [bb48]
  succs [bb59]

bb51
  0: StorageDead(_70)
    SourceInfo(regex-automata/src/dfa/minimize.rs:406:27-406:28)
  1: StorageDead(_69)
    SourceInfo(regex-automata/src/dfa/minimize.rs:406:27-406:28)
  2: StorageLive(_77)
    SourceInfo(regex-automata/src/dfa/minimize.rs:412:21-415:18)
  3: StorageLive(_78)
    SourceInfo(regex-automata/src/dfa/minimize.rs:412:27-412:37)
  4: StorageLive(_79)
    SourceInfo(regex-automata/src/dfa/minimize.rs:412:27-412:30)
  5: _79 = &mut _24
    SourceInfo(regex-automata/src/dfa/minimize.rs:412:27-412:30)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:412:27-412:37)
      kind: _78 = <core::iter::Cloned<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _79) -> [return: bb52, unwind: bb64]
  }
  preds [bb44]
  succs [bb52, bb64]

bb52
  0: StorageDead(_79)
    SourceInfo(regex-automata/src/dfa/minimize.rs:412:36-412:37)
  1: PlaceMention(_78)
    SourceInfo(regex-automata/src/dfa/minimize.rs:412:27-412:37)
  2: _80 = discriminant(_78)
    SourceInfo(regex-automata/src/dfa/minimize.rs:412:27-412:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:412:21-412:37)
      kind: switchInt(move _80) -> [0: bb54, 1: bb55, otherwise: bb53]
  }
  preds [bb51]
  succs [bb53, bb54, bb55]

bb53
  0: FakeRead(ForMatchedPlace(None), _78)
    SourceInfo(regex-automata/src/dfa/minimize.rs:412:27-412:37)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:412:27-412:37)
      kind: unreachable
  }
  preds [bb52]
  succs []

bb54
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:413:21-413:25)
      kind: falseEdge -> [real: bb56, imaginary: bb55]
  }
  preds [bb52]
  succs [bb55, bb56]

bb55
  0: StorageLive(_82)
    SourceInfo(regex-automata/src/dfa/minimize.rs:414:26-414:27)
  1: _82 = ((_78 as Some).0: util::primitives::StateID)
    SourceInfo(regex-automata/src/dfa/minimize.rs:414:26-414:27)
  2: _77 = _82
    SourceInfo(regex-automata/src/dfa/minimize.rs:414:32-414:33)
  3: StorageDead(_82)
    SourceInfo(regex-automata/src/dfa/minimize.rs:414:32-414:33)
  4: _41 = move _77
    SourceInfo(regex-automata/src/dfa/minimize.rs:412:17-415:18)
  5: StorageDead(_77)
    SourceInfo(regex-automata/src/dfa/minimize.rs:415:17-415:18)
  6: StorageDead(_78)
    SourceInfo(regex-automata/src/dfa/minimize.rs:415:18-415:19)
  7: _49 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:411:20-416:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:406:20-416:14)
      kind: goto -> bb57
  }
  preds [bb52, bb54]
  succs [bb57]

bb56
  0: _0 = const ()
    SourceInfo(regex-automata/src/dfa/minimize.rs:413:29-413:34)
  1: StorageDead(_77)
    SourceInfo(regex-automata/src/dfa/minimize.rs:415:17-415:18)
  2: StorageDead(_78)
    SourceInfo(regex-automata/src/dfa/minimize.rs:415:18-415:19)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb59
  }
  preds [bb54]
  succs [bb59]

bb57
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/dfa/minimize.rs:416:13-416:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:396:13-416:14)
      kind: goto -> bb58
  }
  preds [bb49, bb55]
  succs [bb58]

bb58
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/minimize.rs:416:13-416:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:395:9-417:10)
      kind: goto -> bb28
  }
  preds [bb41, bb57]
  succs [bb28]

bb59
  0: StorageDead(_68)
    SourceInfo(regex-automata/src/dfa/minimize.rs:416:13-416:14)
  Terminator {
      source_info: SourceInfo(regex-automata/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb50, bb56]
  succs [bb60]

bb60
  0: StorageDead(_50)
    SourceInfo(regex-automata/src/dfa/minimize.rs:416:13-416:14)
  1: StorageDead(_41)
    SourceInfo(regex-automata/src/dfa/minimize.rs:418:5-418:6)
  2: StorageDead(_40)
    SourceInfo(regex-automata/src/dfa/minimize.rs:418:5-418:6)
  3: StorageDead(_24)
    SourceInfo(regex-automata/src/dfa/minimize.rs:418:5-418:6)
  4: StorageDead(_23)
    SourceInfo(regex-automata/src/dfa/minimize.rs:418:5-418:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:418:5-418:6)
      kind: drop(_13) -> [return: bb61, unwind: bb65]
  }
  preds [bb37, bb42, bb59]
  succs [bb61, bb65]

bb61
  0: StorageDead(_13)
    SourceInfo(regex-automata/src/dfa/minimize.rs:418:5-418:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:418:5-418:6)
      kind: drop(_12) -> [return: bb62, unwind: bb69]
  }
  preds [bb60]
  succs [bb62, bb69]

bb62
  0: StorageDead(_12)
    SourceInfo(regex-automata/src/dfa/minimize.rs:418:5-418:6)
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:418:6-418:6)
      kind: goto -> bb63
  }
  preds [bb61]
  succs [bb63]

bb63
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:418:6-418:6)
      kind: return
  }
  preds [bb7, bb62]
  succs []

bb64
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:418:5-418:6)
      kind: drop(_13) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb14, bb15, bb16, bb17, bb18, bb19, bb20, bb21, bb22, bb23, bb24, bb25, bb26, bb28, bb29, bb31, bb32, bb36, bb43, bb45, bb51]
  succs [bb65]

bb65
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:418:5-418:6)
      kind: drop(_12) -> [return: bb69, unwind terminate(cleanup)]
  }
  preds [bb60, bb64]
  succs [bb69]

bb66
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:392:66-392:67)
      kind: drop(_15) -> [return: bb67, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb67]

bb67
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:392:67-392:68)
      kind: drop(_14) -> [return: bb69, unwind terminate(cleanup)]
  }
  preds [bb13, bb66]
  succs [bb69]

bb68
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:392:66-392:67)
      kind: drop(_15) -> [return: bb69, unwind terminate(cleanup)]
  }
  preds [bb10, bb11]
  succs [bb69]

bb69
  Terminator {
      source_info: SourceInfo(regex-automata/src/dfa/minimize.rs:386:5-418:6)
      kind: resume
  }
  preds [bb0, bb1, bb4, bb8, bb9, bb61, bb65, bb67, bb68]
  succs []

