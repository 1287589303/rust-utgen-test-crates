{"mod_name":"meta::wrappers","calls":["nfa::thompson::backtrack::Config::prefilter","meta::regex::RegexInfo::config","<util::search::MatchKind as core::cmp::PartialEq>::ne","nfa::thompson::backtrack::Builder::configure","<core::result::Result<nfa::thompson::backtrack::BoundedBacktracker, meta::error::BuildError> as core::ops::Try>::branch","meta::regex::Config::get_match_kind","<nfa::thompson::nfa::NFA as core::clone::Clone>::clone","nfa::thompson::backtrack::Builder::build_from_nfa","<core::result::Result<core::option::Option<meta::wrappers::BoundedBacktrackerEngine>, meta::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, meta::error::BuildError>>>::from_residual","core::result::Result::<nfa::thompson::backtrack::BoundedBacktracker, nfa::thompson::error::BuildError>::map_err::<meta::error::BuildError, fn","meta::regex::Config::get_backtrack","nfa::thompson::backtrack::Builder::new","nfa::thompson::backtrack::Config::new"],"types":["()","core::result::Result<nfa::thompson::backtrack::BoundedBacktracker, nfa::thompson::error::BuildError>","util::search::MatchKind","nfa::thompson::error::BuildError","core::option::Option<util::prefilter::Prefilter>","!","fn(nfa::thompson::error::BuildError) -> meta::error::BuildError {meta::error::BuildError::nfa}","meta::regex::RegexInfo","bool","core::result::Result<core::option::Option<meta::wrappers::BoundedBacktrackerEngine>, meta::error::BuildError>","meta::wrappers::BoundedBacktrackerEngine","nfa::thompson::backtrack::Builder","nfa::thompson::backtrack::Config","util::prefilter::Prefilter","nfa::thompson::nfa::NFA","nfa::thompson::backtrack::BoundedBacktracker","core::result::Result<core::convert::Infallible, meta::error::BuildError>","meta::regex::Config","core::option::Option<meta::wrappers::BoundedBacktrackerEngine>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, meta::error::BuildError>, nfa::thompson::backtrack::BoundedBacktracker>","core::convert::Infallible","meta::error::BuildError","core::result::Result<nfa::thompson::backtrack::BoundedBacktracker, meta::error::BuildError>","isize"]}