{"mod_name":"meta::wrappers","calls":["hybrid::dfa::Config::skip_cache_capacity_check","hybrid::dfa::Config::specialize_start_states","meta::regex::Config::get_hybrid_cache_capacity","hybrid::dfa::Config::unicode_word_boundary","meta::regex::Config::get_byte_classes","hybrid::dfa::Config::prefilter","hybrid::dfa::Config::new","hybrid::dfa::Config::byte_classes","hybrid::dfa::Config::minimum_cache_clear_count","hybrid::dfa::Config::starts_for_each_pattern","hybrid::dfa::Config::minimum_bytes_per_state","hybrid::dfa::Builder::new","<nfa::thompson::nfa::NFA as core::clone::Clone>::clone","hybrid::dfa::Builder::configure","hybrid::dfa::Config::match_kind","meta::regex::Config::get_hybrid","hybrid::dfa::Config::cache_capacity","hybrid::dfa::Builder::build_from_nfa","meta::regex::RegexInfo::config"],"types":["meta::regex::RegexInfo","util::search::MatchKind","hybrid::error::BuildError","meta::wrappers::ReverseHybridEngine","core::option::Option<meta::wrappers::ReverseHybridEngine>","core::option::Option<usize>","util::prefilter::Prefilter","hybrid::dfa::Builder","nfa::thompson::nfa::NFA","isize","core::result::Result<hybrid::dfa::DFA, hybrid::error::BuildError>","hybrid::dfa::Config","()","usize","core::option::Option<util::prefilter::Prefilter>","bool","meta::regex::Config","!","hybrid::dfa::DFA"]}