{"mod_name":"meta::regex","calls":["util::pool::PoolGuard::<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn","meta::regex::RegexInfo::is_impossible","<dyn meta::strategy::Strategy as meta::strategy::Strategy>::search_slots","util::pool::Pool::<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn","<util::pool::PoolGuard<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn","<std::sync::Arc<dyn meta::strategy::Strategy> as core::ops::Deref>::deref","<std::sync::Arc<meta::regex::RegexI> as core::ops::Deref>::deref"],"types":["util::pool::Pool<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>","meta::regex::RegexI","dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe","util::primitives::NonMaxUsize","meta::regex::Regex","util::pool::PoolGuard<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>","util::primitives::PatternID","std::alloc::Global","core::option::Option<util::primitives::NonMaxUsize>","core::option::Option<util::primitives::PatternID>","std::sync::Arc<meta::regex::RegexI>","!","std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>","dyn meta::strategy::Strategy","util::search::Input<'_>","meta::regex::Cache","bool","()","[core::option::Option<util::primitives::NonMaxUsize>]","std::sync::Arc<dyn meta::strategy::Strategy>","meta::regex::RegexInfo"]}