{"mod_name":"util::syntax","calls":["<core::slice::Iter<'_, P> as core::iter::Iterator>::next","<P as core::convert::AsRef<str>>::as_ref","std::vec::Vec::<regex_syntax::hir::Hir>::push","util::syntax::Config::apply","regex_syntax::Parser::parse","regex_syntax::ParserBuilder::build","<core::slice::Iter<'_, P> as core::iter::IntoIterator>::into_iter","regex_syntax::ParserBuilder::new","std::vec::Vec::<regex_syntax::hir::Hir>::new","core::slice::<impl [P]>::iter","<core::result::Result<regex_syntax::hir::Hir, regex_syntax::Error> as core::ops::Try>::branch","<core::result::Result<std::vec::Vec<regex_syntax::hir::Hir>, regex_syntax::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, regex_syntax::Error>>>::from_residual"],"types":["isize","core::result::Result<core::convert::Infallible, regex_syntax::Error>","()","P","core::convert::Infallible","[P]","regex_syntax::hir::Hir","core::result::Result<std::vec::Vec<regex_syntax::hir::Hir>, regex_syntax::Error>","core::result::Result<regex_syntax::hir::Hir, regex_syntax::Error>","str","regex_syntax::Error","regex_syntax::Parser","core::slice::Iter<'_, P>","std::alloc::Global","util::syntax::Config","regex_syntax::ParserBuilder","core::option::Option<&P>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, regex_syntax::Error>, regex_syntax::hir::Hir>","!","std::vec::Vec<regex_syntax::hir::Hir>"]}