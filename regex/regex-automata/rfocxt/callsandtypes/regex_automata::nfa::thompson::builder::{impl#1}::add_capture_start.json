{"mod_name":"nfa::thompson::builder","calls":["nfa::thompson::builder::Builder::current_pattern_id","util::primitives::PatternID::as_usize","<std::vec::Vec<std::vec::Vec<core::option::Option<std::sync::Arc<str>>>> as core::ops::IndexMut<util::primitives::PatternID>>::index_mut","nfa::thompson::error::BuildError::invalid_capture_index","<core::ops::Range<usize> as core::iter::Iterator>::next","<std::vec::Vec<std::vec::Vec<core::option::Option<std::sync::Arc<str>>>> as core::ops::Index<util::primitives::PatternID>>::index","core::ops::RangeInclusive::<usize>::new","nfa::thompson::builder::Builder::add","<util::primitives::SmallIndex as core::convert::TryFrom<u32>>::try_from","std::vec::Vec::<std::vec::Vec<core::option::Option<std::sync::Arc<str>>>>::push","util::primitives::SmallIndex::as_usize","std::vec::Vec::<core::option::Option<std::sync::Arc<str>>>::len","<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","<core::ops::RangeInclusive<usize> as core::iter::Iterator>::next","std::vec::Vec::<std::vec::Vec<core::option::Option<std::sync::Arc<str>>>>::len","<core::ops::RangeInclusive<usize> as core::iter::IntoIterator>::into_iter","std::vec::Vec::<core::option::Option<std::sync::Arc<str>>>::push","std::vec::Vec::<core::option::Option<std::sync::Arc<str>>>::new"],"types":["std::vec::Vec<std::vec::Vec<core::option::Option<std::sync::Arc<str>>>>","str","core::ops::Range<usize>","isize","nfa::thompson::error::BuildError","std::alloc::Global","util::primitives::SmallIndex","util::primitives::PatternID","std::vec::Vec<core::option::Option<std::sync::Arc<str>>>","(usize, bool)","core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError>","core::result::Result<util::primitives::SmallIndex, util::primitives::SmallIndexError>","nfa::thompson::builder::State","()","u32","bool","core::option::Option<std::sync::Arc<str>>","std::sync::Arc<str>","!","nfa::thompson::builder::Builder","usize","util::primitives::SmallIndexError","util::primitives::StateID","core::option::Option<usize>","core::ops::RangeInclusive<usize>"]}