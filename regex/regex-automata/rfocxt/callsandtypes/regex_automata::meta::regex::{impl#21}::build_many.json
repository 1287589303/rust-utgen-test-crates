{"mod_name":"meta::regex","calls":["regex_syntax::ast::parse::ParserBuilder::build","<core::result::Result<regex_syntax::hir::Hir, meta::error::BuildError> as core::ops::Try>::branch","meta::regex::Builder::build_many_from_hir::<regex_syntax::hir::Hir>","regex_syntax::ast::parse::Parser::parse","<util::primitives::WithPatternIDIter<core::slice::Iter<'_, P>> as core::iter::IntoIterator>::into_iter","regex_syntax::hir::translate::TranslatorBuilder::build","std::vec::Vec::<regex_syntax::ast::Ast>::push","<std::vec::Vec<regex_syntax::hir::Hir> as core::ops::Deref>::deref","<std::vec::Vec<regex_syntax::ast::Ast> as core::ops::Deref>::deref","std::vec::Vec::<regex_syntax::hir::Hir>::push","<core::slice::Iter<'_, P> as util::primitives::IteratorIndexExt>::with_pattern_ids","std::vec::Vec::<regex_syntax::hir::Hir>::new","std::vec::Vec::<regex_syntax::ast::Ast>::new","<P as core::convert::AsRef<str>>::as_ref","core::result::Result::<regex_syntax::ast::Ast, regex_syntax::ast::Error>::map_err::<meta::error::BuildError, {closure@regex-automata/src/meta/regex.rs:3428:26: 3428:31}>","<core::result::Result<regex_syntax::ast::Ast, meta::error::BuildError> as core::ops::Try>::branch","core::slice::<impl [P]>::iter","<core::result::Result<meta::regex::Regex, meta::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, meta::error::BuildError>>>::from_residual","<util::primitives::WithPatternIDIter<core::slice::Iter<'_, P>> as core::iter::Iterator>::zip::<core::slice::Iter<'_, regex_syntax::ast::Ast>>","<util::primitives::WithPatternIDIter<core::slice::Iter<'_, P>> as core::iter::Iterator>::next","<core::iter::Zip<util::primitives::WithPatternIDIter<core::slice::Iter<'_, P>>, core::slice::Iter<'_, regex_syntax::ast::Ast>> as core::iter::Iterator>::next","core::slice::<impl [regex_syntax::ast::Ast]>::iter","<core::iter::Zip<util::primitives::WithPatternIDIter<core::slice::Iter<'_, P>>, core::slice::Iter<'_, regex_syntax::ast::Ast>> as core::iter::IntoIterator>::into_iter","regex_syntax::hir::translate::Translator::translate","core::result::Result::<regex_syntax::hir::Hir, regex_syntax::hir::Error>::map_err::<meta::error::BuildError, {closure@regex-automata/src/meta/regex.rs:3438:26: 3438:31}>"],"types":["core::ops::ControlFlow<core::result::Result<core::convert::Infallible, meta::error::BuildError>, regex_syntax::hir::Hir>","regex_syntax::hir::translate::Translator","()","core::result::Result<regex_syntax::ast::Ast, regex_syntax::ast::Error>","regex_syntax::hir::Hir","core::option::Option<(util::primitives::PatternID, &P)>","regex_syntax::ast::Ast","regex_syntax::hir::Error","core::result::Result<meta::regex::Regex, meta::error::BuildError>","(std::vec::Vec<regex_syntax::ast::Ast>, std::vec::Vec<regex_syntax::hir::Hir>)","core::result::Result<regex_syntax::hir::Hir, meta::error::BuildError>","util::primitives::PatternID","regex_syntax::ast::parse::Parser","core::convert::Infallible","{closure@regex-automata/src/meta/regex.rs:3428:26: 3428:31}","regex_syntax::ast::parse::ParserBuilder","core::slice::Iter<'_, regex_syntax::ast::Ast>","[regex_syntax::ast::Ast]","!","regex_syntax::hir::translate::TranslatorBuilder","std::vec::Vec<regex_syntax::hir::Hir>","meta::regex::Regex","core::iter::Zip<util::primitives::WithPatternIDIter<core::slice::Iter<'_, P>>, core::slice::Iter<'_, regex_syntax::ast::Ast>>","core::result::Result<regex_syntax::hir::Hir, regex_syntax::hir::Error>","[regex_syntax::hir::Hir]","core::result::Result<core::convert::Infallible, meta::error::BuildError>","util::primitives::WithPatternIDIter<core::slice::Iter<'_, P>>","meta::error::BuildError","std::alloc::Global","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, meta::error::BuildError>, regex_syntax::ast::Ast>","std::vec::Vec<regex_syntax::ast::Ast>","str","{closure@regex-automata/src/meta/regex.rs:3438:26: 3438:31}","core::slice::Iter<'_, P>","((util::primitives::PatternID, &P), &regex_syntax::ast::Ast)","(util::primitives::PatternID, &P)","P","isize","[P]","core::result::Result<regex_syntax::ast::Ast, meta::error::BuildError>","regex_syntax::ast::Error","core::option::Option<((util::primitives::PatternID, &P), &regex_syntax::ast::Ast)>","meta::regex::Builder"]}