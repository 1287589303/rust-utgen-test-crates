{"mod_name":"hybrid::regex","calls":["hybrid::dfa::Config::match_kind","nfa::thompson::compiler::Config::reverse","hybrid::regex::Builder::build_from_dfas","hybrid::dfa::Builder::configure","<hybrid::dfa::Builder as core::clone::Clone>::clone","hybrid::dfa::Builder::thompson","<core::result::Result<hybrid::dfa::DFA, hybrid::error::BuildError> as core::ops::Try>::branch","hybrid::dfa::Builder::build_many::<P>","hybrid::dfa::DFA::config","hybrid::dfa::Config::prefilter","hybrid::dfa::Config::specialize_start_states","nfa::thompson::compiler::Config::new","<core::result::Result<hybrid::regex::Regex, hybrid::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hybrid::error::BuildError>>>::from_residual"],"types":["core::result::Result<hybrid::dfa::DFA, hybrid::error::BuildError>","core::option::Option<util::prefilter::Prefilter>","bool","!","P","hybrid::regex::Regex","nfa::thompson::compiler::Config","hybrid::error::BuildError","core::result::Result<hybrid::regex::Regex, hybrid::error::BuildError>","core::convert::Infallible","core::result::Result<core::convert::Infallible, hybrid::error::BuildError>","util::prefilter::Prefilter","isize","hybrid::dfa::Builder","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hybrid::error::BuildError>, hybrid::dfa::DFA>","hybrid::dfa::Config","[P]","util::search::MatchKind","hybrid::regex::Builder","hybrid::dfa::DFA"]}