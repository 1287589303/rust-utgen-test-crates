{"mod_name":"dfa::sparse","calls":["dfa::special::Special::is_match_state","dfa::special::Special::is_dead_state","util::primitives::StateID::new","dfa::special::Special::is_special_state","dfa::sparse::State::<'_>::next_at","dfa::sparse::Seen::insert","dfa::special::Special::is_quit_state","<dfa::sparse::StateIter<'_, T> as core::iter::Iterator>::next","<core::result::Result<dfa::sparse::State<'_>, util::wire::DeserializeError> as core::ops::Try>::branch","<core::result::Result<usize, util::wire::DeserializeError> as core::ops::Try>::branch","<core::ops::Range<usize> as core::iter::Iterator>::next","core::slice::<impl [u8]>::len","util::wire::DeserializeError::generic","dfa::sparse::Transitions::<T>::states","dfa::special::Special::is_start_state","<dfa::sparse::StateIter<'_, T> as core::iter::IntoIterator>::into_iter","dfa::sparse::State::<'_>::write_to_len","<core::result::Result<util::primitives::StateID, util::wire::DeserializeError> as core::ops::Try>::branch","dfa::sparse::Seen::new","util::primitives::StateID::as_usize","dfa::special::Special::is_accel_state","<core::result::Result<dfa::sparse::Seen, util::wire::DeserializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>>::from_residual","<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","dfa::sparse::Transitions::<T>::try_state","util::wire::add","dfa::sparse::Seen::contains","dfa::sparse::Transitions::<T>::sparse","core::result::Result::<util::primitives::StateID, util::primitives::StateIDError>::map_err::<util::wire::DeserializeError, {closure@regex-automata/src/dfa/sparse.rs:1422:22: 1422:27}>"],"types":["dfa::sparse::State<'_>","core::option::Option<usize>","core::result::Result<util::primitives::StateID, util::primitives::StateIDError>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>, usize>","core::ops::Range<usize>","core::result::Result<usize, util::wire::DeserializeError>","bool","util::primitives::StateID","core::result::Result<dfa::sparse::State<'_>, util::wire::DeserializeError>","dfa::sparse::StateIter<'_, T>","dfa::sparse::Transitions<T>","dfa::sparse::Seen","usize","util::wire::DeserializeError","core::result::Result<dfa::sparse::Seen, util::wire::DeserializeError>","isize","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>, util::primitives::StateID>","T","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>, dfa::sparse::State<'_>>","u8","util::primitives::StateIDError","(usize, bool)","core::option::Option<dfa::sparse::State<'_>>","{closure@regex-automata/src/dfa/sparse.rs:1422:22: 1422:27}","dfa::special::Special","!","core::result::Result<util::primitives::StateID, util::wire::DeserializeError>","[u8]","core::convert::Infallible","str","()","core::result::Result<core::convert::Infallible, util::wire::DeserializeError>"]}