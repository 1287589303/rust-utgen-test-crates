{"mod_name":"hybrid::dfa","calls":["hybrid::dfa::minimum_cache_capacity","util::alphabet::ByteClasses::stride2","hybrid::error::BuildError::insufficient_cache_capacity","hybrid::dfa::minimum_lazy_state_id","nfa::thompson::nfa::NFA::look_matcher","<core::result::Result<hybrid::dfa::DFA, hybrid::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hybrid::error::BuildError>>>::from_residual","<core::result::Result<util::alphabet::ByteSet, hybrid::error::BuildError> as core::ops::Try>::branch","hybrid::error::BuildError::insufficient_state_id_capacity","hybrid::dfa::Config::get_cache_capacity","util::start::StartByteMap::new","hybrid::dfa::Config::get_starts_for_each_pattern","hybrid::dfa::Config::byte_classes_from_nfa","hybrid::dfa::Config::get_skip_cache_capacity_check","<hybrid::dfa::Config as core::clone::Clone>::clone","hybrid::dfa::Config::quit_set_from_nfa"],"types":["core::convert::Infallible","core::result::Result<hybrid::dfa::DFA, hybrid::error::BuildError>","isize","hybrid::dfa::Config","util::look::LookMatcher","util::alphabet::ByteClasses","hybrid::dfa::DFA","hybrid::error::BuildError","core::result::Result<util::alphabet::ByteSet, hybrid::error::BuildError>","!","usize","util::alphabet::ByteSet","hybrid::dfa::Builder","hybrid::id::LazyStateIDError","core::result::Result<hybrid::id::LazyStateID, hybrid::id::LazyStateIDError>","bool","()","util::start::StartByteMap","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hybrid::error::BuildError>, util::alphabet::ByteSet>","nfa::thompson::nfa::NFA","hybrid::id::LazyStateID","core::result::Result<core::convert::Infallible, hybrid::error::BuildError>"]}