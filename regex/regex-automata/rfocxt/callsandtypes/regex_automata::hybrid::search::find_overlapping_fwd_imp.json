{"mod_name":"hybrid::search","calls":["hybrid::id::LazyStateID::is_dead","util::search::Input::<'_>::end","hybrid::dfa::Cache::search_start","hybrid::search::prefilter_restart","core::panicking::panic","hybrid::dfa::DFA::next_state","util::search::HalfMatch::new","util::look::LookSet::is_empty","hybrid::dfa::DFA::match_len","<util::search::Span as core::convert::From<core::ops::Range<usize>>>::from","<core::result::Result<","hybrid::id::LazyStateID::is_unknown","util::search::Input::<'_>::start","hybrid::id::LazyStateID::is_tagged","hybrid::id::LazyStateID::is_quit","util::search::MatchError::quit","core::panicking::panic_fmt","hybrid::dfa::Cache::search_update","core::option::Option::<util::search::HalfMatch>::is_some","core::result::Result::<hybrid::id::LazyStateID, hybrid::error::CacheError>::map_err::<util::search::MatchError, {closure@regex-automata/src/hybrid/search.rs:508:22: 508:25}>","hybrid::id::LazyStateID::is_start","nfa::thompson::nfa::NFA::look_set_prefix_any","hybrid::search::init_fwd","hybrid::id::LazyStateID::is_match","hybrid::dfa::Cache::search_finish","hybrid::dfa::DFA::get_nfa","<core::result::Result<hybrid::id::LazyStateID, util::search::MatchError> as core::ops::Try>::branch","core::fmt::Arguments::<'_>::new_v1::<1, 0>","util::search::Input::<'_>::haystack","core::fmt::rt::Argument::<'_>::none","hybrid::search::eoi_fwd","hybrid::dfa::DFA::match_pattern","util::prefilter::Prefilter::find"],"types":["(usize, bool)","hybrid::id::LazyStateID","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::search::MatchError>, hybrid::id::LazyStateID>","util::primitives::PatternID","u8","hybrid::dfa::DFA","util::search::Span","str","hybrid::dfa::Cache","usize","nfa::thompson::nfa::NFA","core::option::Option<usize>","core::convert::Infallible","bool","isize","core::fmt::Arguments<'_>","{closure@regex-automata/src/hybrid/search.rs:508:22: 508:25}","core::result::Result<(), util::search::MatchError>","()","util::prefilter::Prefilter","core::fmt::rt::Argument<'_>","core::ops::Range<usize>","core::option::Option<hybrid::id::LazyStateID>","core::result::Result<core::convert::Infallible, util::search::MatchError>","util::search::Input<'_>","core::result::Result<hybrid::id::LazyStateID, hybrid::error::CacheError>","hybrid::dfa::OverlappingState","hybrid::error::CacheError","core::result::Result<hybrid::id::LazyStateID, util::search::MatchError>","!","core::option::Option<&util::prefilter::Prefilter>","core::option::Option<util::search::Span>","util::search::HalfMatch","[u8]","util::look::LookSet","[core::fmt::rt::Argument<'_>; 0]","core::option::Option<util::search::HalfMatch>","[&str; 1]","util::search::MatchError"]}