{"mod_name":"nfa::thompson::literal_trie","calls":["<core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch","<std::vec::Vec<nfa::thompson::literal_trie::State> as core::ops::IndexMut<util::primitives::StateID>>::index_mut","<core::slice::Iter<'_, u8> as core::iter::Iterator>::copied::<'_, u8>","core::slice::<impl [u8]>::iter","<core::result::Result<","<core::iter::Copied<core::slice::Iter<'_, u8>> as core::iter::Iterator>::next","nfa::thompson::literal_trie::State::add_match","nfa::thompson::literal_trie::LiteralTrie::get_or_add_state","<core::iter::Copied<core::slice::Iter<'_, u8>> as core::iter::DoubleEndedIterator>::next_back"],"types":["core::convert::Infallible","bool","core::iter::Copied<core::slice::Iter<'_, u8>>","core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>","core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError>","std::alloc::Global","nfa::thompson::error::BuildError","()","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>, util::primitives::StateID>","[u8]","std::vec::Vec<nfa::thompson::literal_trie::State>","nfa::thompson::literal_trie::LiteralTrie","nfa::thompson::literal_trie::State","u8","!","util::primitives::StateID","core::slice::Iter<'_, u8>","isize","core::option::Option<u8>","core::result::Result<(), nfa::thompson::error::BuildError>"]}