{"mod_name":"meta::regex","calls":["meta::regex::RegexInfo::is_impossible","<std::sync::Arc<meta::regex::RegexI> as core::ops::Deref>::deref","util::pool::Pool::<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn","<util::pool::PoolGuard<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn","<dyn meta::strategy::Strategy as meta::strategy::Strategy>::which_overlapping_matches","<std::sync::Arc<dyn meta::strategy::Strategy> as core::ops::Deref>::deref","util::pool::PoolGuard::<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn"],"types":["std::sync::Arc<dyn meta::strategy::Strategy>","meta::regex::RegexI","dyn meta::strategy::Strategy","bool","meta::regex::Cache","std::sync::Arc<meta::regex::RegexI>","util::search::PatternSet","std::alloc::Global","util::pool::Pool<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>","util::pool::PoolGuard<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>","meta::regex::Regex","util::search::Input<'_>","!","dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe","()","meta::regex::RegexInfo","std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>"]}