{"mod_name":"meta::regex","calls":["<std::sync::Arc<meta::regex::RegexI> as core::ops::Deref>::deref","util::pool::PoolGuard::<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn","<dyn meta::strategy::Strategy as meta::strategy::Strategy>::is_match","<util::pool::PoolGuard<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn","util::pool::Pool::<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn","util::search::Input::<'_>::earliest","meta::regex::RegexInfo::is_impossible","<I as core::convert::Into<util::search::Input<'_>>>::into","<std::sync::Arc<dyn meta::strategy::Strategy> as core::ops::Deref>::deref"],"types":["dyn meta::strategy::Strategy","!","bool","util::pool::Pool<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>","()","meta::regex::RegexI","meta::regex::RegexInfo","dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe","meta::regex::Regex","meta::regex::Cache","util::pool::PoolGuard<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>","std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>","util::search::Input<'_>","I","std::sync::Arc<meta::regex::RegexI>","std::sync::Arc<dyn meta::strategy::Strategy>","std::alloc::Global"]}