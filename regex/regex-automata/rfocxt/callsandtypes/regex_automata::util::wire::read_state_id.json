{"mod_name":"util::wire","calls":["<[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index","<&[u8] as core::convert::TryInto<[u8; 4]>>::try_into","util::primitives::StateID::from_ne_bytes","core::result::Result::<util::primitives::StateID, util::primitives::StateIDError>::map_err::<util::wire::DeserializeError, {closure@regex-automata/src/util/wire.rs:643:18: 643:23}>","<core::result::Result<util::primitives::StateID, util::wire::DeserializeError> as core::ops::Try>::branch","<core::result::Result<","core::result::Result::<[u8; 4], core::array::TryFromSliceError>::unwrap"],"types":["[u8; 4]","util::wire::DeserializeError","core::result::Result<core::convert::Infallible, util::wire::DeserializeError>","core::convert::Infallible","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>, util::primitives::StateID>","{closure@regex-automata/src/util/wire.rs:643:18: 643:23}","core::result::Result<util::primitives::StateID, util::primitives::StateIDError>","usize","!","(util::primitives::StateID, usize)","core::ops::RangeTo<usize>","core::result::Result<util::primitives::StateID, util::wire::DeserializeError>","isize","util::primitives::StateID","core::array::TryFromSliceError","core::result::Result<(util::primitives::StateID, usize), util::wire::DeserializeError>","core::result::Result<[u8; 4], core::array::TryFromSliceError>","[u8]","str","u8","util::primitives::StateIDError"]}