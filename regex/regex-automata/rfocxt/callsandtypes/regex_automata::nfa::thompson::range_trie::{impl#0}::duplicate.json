{"mod_name":"nfa::thompson::range_trie","calls":["nfa::thompson::range_trie::RangeTrie::state","<std::vec::Vec<nfa::thompson::range_trie::Transition> as core::ops::Index<usize>>::index","std::vec::Vec::<nfa::thompson::range_trie::NextDupe>::clear","std::vec::Vec::<nfa::thompson::range_trie::NextDupe>::pop","core::mem::replace::<std::vec::Vec<nfa::thompson::range_trie::NextDupe>>","std::vec::Vec::<nfa::thompson::range_trie::NextDupe>::push","<core::ops::Range<usize> as core::iter::Iterator>::next","<nfa::thompson::range_trie::Transition as core::clone::Clone>::clone","nfa::thompson::range_trie::RangeTrie::add_empty","std::vec::Vec::<nfa::thompson::range_trie::NextDupe>::new","<util::primitives::StateID as core::cmp::PartialEq>::eq","<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","nfa::thompson::range_trie::RangeTrie::add_transition","std::vec::Vec::<nfa::thompson::range_trie::Transition>::len"],"types":["regex_syntax::utf8::Utf8Range","core::option::Option<nfa::thompson::range_trie::NextDupe>","core::ops::Range<usize>","!","isize","std::vec::Vec<nfa::thompson::range_trie::NextDupe>","()","core::option::Option<usize>","std::alloc::Global","nfa::thompson::range_trie::State","util::primitives::StateID","nfa::thompson::range_trie::NextDupe","bool","std::vec::Vec<nfa::thompson::range_trie::Transition>","nfa::thompson::range_trie::Transition","nfa::thompson::range_trie::RangeTrie","usize"]}