{"mod_name":"hybrid::dfa","calls":["hybrid::dfa::LazyRef::<'_, '_>::dead_id","util::start::Start::len","hybrid::dfa::Config::get_starts_for_each_pattern","util::start::Start::as_usize","util::primitives::PatternID::as_usize","hybrid::dfa::DFA::pattern_len","hybrid::error::StartError::unsupported_anchored","<std::vec::Vec<hybrid::id::LazyStateID> as core::ops::Index<usize>>::index","hybrid::dfa::DFA::get_config"],"types":["usize","util::start::Start","hybrid::dfa::Config","hybrid::id::LazyStateID","hybrid::dfa::DFA","hybrid::dfa::LazyRef<'_, '_>","()","std::vec::Vec<hybrid::id::LazyStateID>","util::search::Anchored","std::alloc::Global","core::result::Result<hybrid::id::LazyStateID, hybrid::error::StartError>","bool","isize","(usize, bool)","!","hybrid::error::StartError","util::primitives::PatternID"]}