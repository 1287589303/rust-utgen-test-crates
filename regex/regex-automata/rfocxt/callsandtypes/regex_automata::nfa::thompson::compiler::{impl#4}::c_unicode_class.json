{"mod_name":"nfa::thompson::compiler","calls":["regex_syntax::utf8::Utf8Sequences::new","regex_syntax::hir::ClassUnicodeRange::start","core::slice::<impl [regex_syntax::hir::ClassUnicodeRange]>::len","core::cell::RefCell::<nfa::thompson::builder::Builder>::borrow_mut","nfa::thompson::range_trie::RangeTrie::insert","<regex_syntax::hir::ClassUnicodeIter<'_> as core::iter::Iterator>::next","std::vec::Vec::<nfa::thompson::nfa::Transition>::with_capacity","<core::result::Result<","<core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual","<u32 as core::convert::From<char>>::from","<core::cell::RefMut<'_, nfa::thompson::range_trie::RangeTrie> as core::ops::Deref>::deref","nfa::thompson::range_trie::RangeTrie::iter::<nfa::thompson::error::BuildError, {closure@regex-automata/src/nfa/thompson/compiler.rs:1426:27: 1426:32}>","<regex_syntax::utf8::Utf8Sequences as core::iter::IntoIterator>::into_iter","<regex_syntax::utf8::Utf8Sequences as core::iter::Iterator>::next","nfa::thompson::compiler::Compiler::c_unicode_class_reverse_with_suffix","nfa::thompson::compiler::Config::get_shrink","<core::cell::RefMut<'_, nfa::thompson::range_trie::RangeTrie> as core::ops::DerefMut>::deref_mut","regex_syntax::hir::ClassUnicode::ranges","core::cell::RefCell::<nfa::thompson::compiler::Utf8State>::borrow_mut","nfa::thompson::compiler::Compiler::is_reverse","nfa::thompson::range_trie::RangeTrie::clear","nfa::thompson::compiler::Utf8Compiler::<'_>::new","core::cell::RefCell::<nfa::thompson::range_trie::RangeTrie>::borrow_mut","regex_syntax::hir::ClassUnicodeRange::end","nfa::thompson::compiler::Utf8Compiler::<'_>::finish","<core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch","<u8 as core::convert::TryFrom<u32>>::try_from","<regex_syntax::hir::ClassUnicodeIter<'_> as core::iter::IntoIterator>::into_iter","regex_syntax::hir::ClassUnicode::iter","nfa::thompson::compiler::Utf8Compiler::<'_>::add","nfa::thompson::compiler::Compiler::add_empty","core::result::Result::<u8, core::num::TryFromIntError>::unwrap","<core::cell::RefMut<'_, nfa::thompson::builder::Builder> as core::ops::DerefMut>::deref_mut","nfa::thompson::compiler::Compiler::add_sparse","<core::cell::RefMut<'_, nfa::thompson::compiler::Utf8State> as core::ops::DerefMut>::deref_mut","<core::result::Result<nfa::thompson::compiler::Utf8Compiler<'_>, nfa::thompson::error::BuildError> as core::ops::Try>::branch","std::vec::Vec::<nfa::thompson::nfa::Transition>::push","regex_syntax::utf8::Utf8Sequence::reverse","regex_syntax::utf8::Utf8Sequence::as_slice","regex_syntax::hir::ClassUnicode::is_ascii"],"types":["nfa::thompson::nfa::Transition","regex_syntax::hir::ClassUnicodeIter<'_>","u8","!","char","nfa::thompson::compiler::Utf8State","core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>","regex_syntax::hir::ClassUnicode","()","regex_syntax::utf8::Utf8Sequences","bool","core::convert::Infallible","core::num::TryFromIntError","core::cell::RefCell<nfa::thompson::range_trie::RangeTrie>","usize","core::cell::RefCell<nfa::thompson::builder::Builder>","std::alloc::Global","regex_syntax::utf8::Utf8Range","regex_syntax::utf8::Utf8Sequence","util::primitives::StateID","core::cell::RefMut<'_, nfa::thompson::compiler::Utf8State>","std::vec::Vec<nfa::thompson::nfa::Transition>","core::result::Result<(), nfa::thompson::error::BuildError>","core::cell::RefMut<'_, nfa::thompson::builder::Builder>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>, util::primitives::StateID>","isize","nfa::thompson::compiler::Utf8Compiler<'_>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>","[regex_syntax::utf8::Utf8Range]","core::result::Result<u8, core::num::TryFromIntError>","core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError>","core::cell::RefMut<'_, nfa::thompson::range_trie::RangeTrie>","nfa::thompson::range_trie::RangeTrie","nfa::thompson::compiler::ThompsonRef","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>, nfa::thompson::compiler::Utf8Compiler<'_>>","core::option::Option<&regex_syntax::hir::ClassUnicodeRange>","nfa::thompson::compiler::Config","nfa::thompson::compiler::Compiler","core::option::Option<regex_syntax::utf8::Utf8Sequence>","[regex_syntax::hir::ClassUnicodeRange]","nfa::thompson::error::BuildError","nfa::thompson::builder::Builder","u32","core::result::Result<nfa::thompson::compiler::Utf8Compiler<'_>, nfa::thompson::error::BuildError>","core::cell::RefCell<nfa::thompson::compiler::Utf8State>","core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError>","{closure@regex-automata/src/nfa/thompson/compiler.rs:1426:27: 1426:32}","regex_syntax::hir::ClassUnicodeRange"]}