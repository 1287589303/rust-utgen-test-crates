{"mod_name":"meta::regex","calls":["util::pool::PoolGuard::<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn","meta::regex::RegexInfo::is_impossible","<dyn meta::strategy::Strategy as meta::strategy::Strategy>::search_half","<std::sync::Arc<dyn meta::strategy::Strategy> as core::ops::Deref>::deref","util::pool::Pool::<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn","<std::sync::Arc<meta::regex::RegexI> as core::ops::Deref>::deref","<util::pool::PoolGuard<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn"],"types":["meta::regex::Cache","util::pool::Pool<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>","core::option::Option<util::search::HalfMatch>","bool","meta::regex::RegexI","util::search::HalfMatch","util::pool::PoolGuard<'_, meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>","std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>","meta::regex::Regex","()","std::sync::Arc<dyn meta::strategy::Strategy>","std::sync::Arc<meta::regex::RegexI>","dyn meta::strategy::Strategy","std::alloc::Global","util::search::Input<'_>","!","dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe","meta::regex::RegexInfo"]}