{"mod_name":"hybrid::dfa","calls":["<core::result::Result<","core::result::Result::<hybrid::id::LazyStateID, hybrid::id::LazyStateIDError>::unwrap","hybrid::dfa::Lazy::<'_, '_>::try_clear_cache","std::vec::Vec::<hybrid::id::LazyStateID>::len","hybrid::id::LazyStateID::new","<core::result::Result<hybrid::id::LazyStateID, hybrid::error::CacheError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hybrid::error::CacheError>>>::from_residual"],"types":["usize","!","hybrid::id::LazyStateID","hybrid::dfa::Lazy<'_, '_>","std::alloc::Global","core::result::Result<core::convert::Infallible, hybrid::error::CacheError>","core::result::Result<(), hybrid::error::CacheError>","()","hybrid::id::LazyStateIDError","core::convert::Infallible","core::result::Result<hybrid::id::LazyStateID, hybrid::error::CacheError>","hybrid::error::CacheError","core::result::Result<hybrid::id::LazyStateID, hybrid::id::LazyStateIDError>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hybrid::error::CacheError>>","isize","std::vec::Vec<hybrid::id::LazyStateID>"]}