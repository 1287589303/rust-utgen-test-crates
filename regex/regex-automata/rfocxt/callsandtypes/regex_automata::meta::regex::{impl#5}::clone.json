{"mod_name":"meta::regex","calls":["<std::sync::Arc<dyn meta::strategy::Strategy> as core::clone::Clone>::clone","std::boxed::Box::<{closure@regex-automata/src/meta/regex.rs:1904:48: 1904:55}>::new","util::pool::Pool::<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn","<std::sync::Arc<meta::regex::RegexI> as core::clone::Clone>::clone","<std::sync::Arc<meta::regex::RegexI> as core::ops::Deref>::deref"],"types":["meta::regex::Cache","std::alloc::Global","dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe","std::sync::Arc<dyn meta::strategy::Strategy>","std::sync::Arc<meta::regex::RegexI>","{closure@regex-automata/src/meta/regex.rs:1904:48: 1904:55}","meta::regex::RegexI","dyn meta::strategy::Strategy","std::boxed::Box<{closure@regex-automata/src/meta/regex.rs:1904:48: 1904:55}>","std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>","meta::regex::Regex","util::pool::Pool<meta::regex::Cache, std::boxed::Box<dyn core::ops::Fn() -> meta::regex::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>"]}