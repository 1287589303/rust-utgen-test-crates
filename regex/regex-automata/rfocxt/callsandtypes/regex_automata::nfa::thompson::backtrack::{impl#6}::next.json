{"mod_name":"nfa::thompson::backtrack","calls":["<core::option::Option<core::result::Result<util::captures::Captures, util::search::MatchError>> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual","util::iter::Searcher::<'_>::try_advance::<{closure@regex-automata/src/nfa/thompson/backtrack.rs:1626:26: 1626:33}>","core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::transpose","util::captures::Captures::is_match","<core::option::Option<core::result::Result<util::search::Match, util::search::MatchError>> as core::ops::Try>::branch","<util::captures::Captures as core::clone::Clone>::clone"],"types":["core::result::Result<util::search::Match, util::search::MatchError>","nfa::thompson::backtrack::Cache","isize","nfa::thompson::backtrack::BoundedBacktracker","core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, core::result::Result<util::search::Match, util::search::MatchError>>","core::option::Option<core::result::Result<util::captures::Captures, util::search::MatchError>>","util::search::MatchError","{closure@regex-automata/src/nfa/thompson/backtrack.rs:1626:26: 1626:33}","core::option::Option<core::result::Result<util::search::Match, util::search::MatchError>>","!","bool","core::option::Option<core::convert::Infallible>","nfa::thompson::backtrack::TryCapturesMatches<'_, '_, '_>","util::iter::Searcher<'_>","util::search::Match","util::captures::Captures","core::result::Result<util::captures::Captures, util::search::MatchError>","core::option::Option<util::search::Match>","core::result::Result<core::option::Option<util::search::Match>, util::search::MatchError>","core::convert::Infallible"]}