{"mod_name":"nfa::thompson::compiler","calls":["<core::iter::Zip<core::slice::Iter<'_, regex_syntax::utf8::Utf8Range>, core::slice::Iter<'_, nfa::thompson::compiler::Utf8Node>> as core::iter::Iterator>::take_while::<{closure@regex-automata/src/nfa/thompson/compiler.rs:1784:25: 1784:41}>","nfa::thompson::compiler::Utf8Compiler::<'_>::add_suffix","nfa::thompson::compiler::Utf8Compiler::<'_>::compile_from","<core::iter::TakeWhile<core::iter::Zip<core::slice::Iter<'_, regex_syntax::utf8::Utf8Range>, core::slice::Iter<'_, nfa::thompson::compiler::Utf8Node>>, {closure@regex-automata/src/nfa/thompson/compiler.rs:1784:25: 1784:41}> as core::iter::Iterator>::count","core::slice::<impl [regex_syntax::utf8::Utf8Range]>::iter","<core::slice::Iter<'_, regex_syntax::utf8::Utf8Range> as core::iter::Iterator>::zip::<&std::vec::Vec<nfa::thompson::compiler::Utf8Node>>","<[regex_syntax::utf8::Utf8Range] as core::ops::Index<core::ops::RangeFrom<usize>>>::index","core::panicking::panic","<core::result::Result<","core::slice::<impl [regex_syntax::utf8::Utf8Range]>::len"],"types":["core::iter::Zip<core::slice::Iter<'_, regex_syntax::utf8::Utf8Range>, core::slice::Iter<'_, nfa::thompson::compiler::Utf8Node>>","core::slice::Iter<'_, regex_syntax::utf8::Utf8Range>","usize","()","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>","core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>","isize","core::slice::Iter<'_, nfa::thompson::compiler::Utf8Node>","core::iter::TakeWhile<core::iter::Zip<core::slice::Iter<'_, regex_syntax::utf8::Utf8Range>, core::slice::Iter<'_, nfa::thompson::compiler::Utf8Node>>, {closure@regex-automata/src/nfa/thompson/compiler.rs:1784:25: 1784:41}>","std::vec::Vec<nfa::thompson::compiler::Utf8Node>","core::result::Result<(), nfa::thompson::error::BuildError>","nfa::thompson::compiler::Utf8Compiler<'_>","!","{closure@regex-automata/src/nfa/thompson/compiler.rs:1784:25: 1784:41}","core::convert::Infallible","bool","std::alloc::Global","[regex_syntax::utf8::Utf8Range]","nfa::thompson::compiler::Utf8Node","core::ops::RangeFrom<usize>","regex_syntax::utf8::Utf8Range","nfa::thompson::error::BuildError","str"]}