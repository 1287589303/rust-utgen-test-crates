{"mod_name":"meta::strategy","calls":["meta::regex::Config::get_nfa_size_limit","<core::result::Result<nfa::thompson::nfa::NFA, meta::error::BuildError> as core::ops::Try>::branch","nfa::thompson::compiler::Compiler::new","nfa::thompson::compiler::Config::shrink","nfa::thompson::compiler::Config::look_matcher","meta::wrappers::DFA::none","meta::regex::Config::get_hybrid","nfa::thompson::compiler::Compiler::configure","meta::regex::Config::get_utf8_empty","meta::regex::Config::get_which_captures","meta::wrappers::PikeVM::new","<core::result::Result<meta::wrappers::PikeVM, meta::error::BuildError> as core::ops::Try>::branch","meta::wrappers::BoundedBacktracker::new","util::look::LookMatcher::set_line_terminator","<nfa::thompson::compiler::Config as core::clone::Clone>::clone","nfa::thompson::compiler::Compiler::build_many_from_hir::<&regex_syntax::hir::Hir>","util::look::LookMatcher::new","meta::regex::Config::get_line_terminator","nfa::thompson::compiler::Config::new","meta::wrappers::Hybrid::new","meta::wrappers::Hybrid::none","meta::wrappers::OnePass::new","<core::result::Result<meta::wrappers::BoundedBacktracker, meta::error::BuildError> as core::ops::Try>::branch","<core::option::Option<util::prefilter::Prefilter> as core::clone::Clone>::clone","<core::result::Result<meta::strategy::Core, meta::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, meta::error::BuildError>>>::from_residual","core::result::Result::<nfa::thompson::nfa::NFA, nfa::thompson::error::BuildError>::map_err::<meta::error::BuildError, fn","nfa::thompson::compiler::Config::which_captures","nfa::thompson::compiler::Config::reverse","meta::wrappers::DFA::new","meta::regex::RegexInfo::config","nfa::thompson::compiler::Config::utf8","meta::regex::Config::get_dfa","nfa::thompson::compiler::Config::nfa_size_limit","meta::wrappers::DFA::is_some"],"types":["meta::error::BuildError","(core::option::Option<nfa::thompson::nfa::NFA>, meta::wrappers::Hybrid, meta::wrappers::DFA)","core::result::Result<nfa::thompson::nfa::NFA, nfa::thompson::error::BuildError>","core::convert::Infallible","core::option::Option<nfa::thompson::nfa::NFA>","nfa::thompson::compiler::Config","core::result::Result<meta::strategy::Core, meta::error::BuildError>","u8","fn(nfa::thompson::error::BuildError) -> meta::error::BuildError {meta::error::BuildError::nfa}","isize","util::prefilter::Prefilter","core::result::Result<core::convert::Infallible, meta::error::BuildError>","core::result::Result<nfa::thompson::nfa::NFA, meta::error::BuildError>","meta::wrappers::DFA","nfa::thompson::error::BuildError","util::look::LookMatcher","usize","nfa::thompson::nfa::NFA","!","bool","core::option::Option<util::prefilter::Prefilter>","meta::wrappers::PikeVM","nfa::thompson::compiler::Compiler","meta::wrappers::OnePass","meta::regex::RegexInfo","meta::wrappers::Hybrid","core::result::Result<meta::wrappers::PikeVM, meta::error::BuildError>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, meta::error::BuildError>, nfa::thompson::nfa::NFA>","meta::regex::Config","regex_syntax::hir::Hir","[&regex_syntax::hir::Hir]","nfa::thompson::compiler::WhichCaptures","meta::wrappers::BoundedBacktracker","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, meta::error::BuildError>, meta::wrappers::BoundedBacktracker>","core::option::Option<usize>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, meta::error::BuildError>, meta::wrappers::PikeVM>","meta::strategy::Core","core::result::Result<meta::wrappers::BoundedBacktracker, meta::error::BuildError>"]}