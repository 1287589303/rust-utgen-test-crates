{"mod_name":"hybrid::dfa","calls":["<nfa::thompson::compiler::Compiler as core::clone::Clone>::clone","nfa::thompson::compiler::Config::new","<core::result::Result<hybrid::dfa::DFA, hybrid::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hybrid::error::BuildError>>>::from_residual","<core::result::Result<nfa::thompson::nfa::NFA, hybrid::error::BuildError> as core::ops::Try>::branch","nfa::thompson::compiler::Compiler::configure","hybrid::dfa::Builder::build_from_nfa","nfa::thompson::compiler::Compiler::build_many::<P>","core::result::Result::<nfa::thompson::nfa::NFA, nfa::thompson::error::BuildError>::map_err::<hybrid::error::BuildError, fn","nfa::thompson::compiler::Config::which_captures"],"types":["nfa::thompson::nfa::NFA","isize","hybrid::error::BuildError","core::convert::Infallible","hybrid::dfa::Builder","nfa::thompson::compiler::Compiler","core::result::Result<core::convert::Infallible, hybrid::error::BuildError>","core::result::Result<nfa::thompson::nfa::NFA, nfa::thompson::error::BuildError>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hybrid::error::BuildError>, nfa::thompson::nfa::NFA>","nfa::thompson::compiler::Config","[P]","core::result::Result<nfa::thompson::nfa::NFA, hybrid::error::BuildError>","hybrid::dfa::DFA","nfa::thompson::error::BuildError","fn(nfa::thompson::error::BuildError) -> hybrid::error::BuildError {hybrid::error::BuildError::nfa}","nfa::thompson::compiler::WhichCaptures","core::result::Result<hybrid::dfa::DFA, hybrid::error::BuildError>","!","P"]}