{"mod_name":"nfa::thompson::pikevm","calls":["<util::sparse_set::SparseSetIter<'_> as core::iter::Iterator>::next","util::search::PatternSet::try_insert","nfa::thompson::pikevm::PikeVM::next","nfa::thompson::pikevm::PikeVM::get_nfa","nfa::thompson::nfa::NFA::is_utf8","nfa::thompson::pikevm::Config::get_match_kind","<util::sparse_set::SparseSetIter<'_> as core::iter::IntoIterator>::into_iter","util::search::MatchKind::continue_past_first_match","util::search::Input::<'_>::is_char_boundary","util::sparse_set::SparseSet::iter","nfa::thompson::nfa::NFA::has_empty"],"types":["usize","nfa::thompson::pikevm::FollowEpsilon","nfa::thompson::nfa::NFA","nfa::thompson::pikevm::PikeVM","util::primitives::StateID","core::option::Option<util::primitives::PatternID>","core::result::Result<bool, util::search::PatternSetInsertError>","util::search::PatternSetInsertError","nfa::thompson::pikevm::ActiveStates","isize","core::option::Option<util::primitives::StateID>","nfa::thompson::pikevm::SlotTable","util::search::Input<'_>","nfa::thompson::pikevm::Config","util::search::PatternSet","util::primitives::PatternID","bool","std::alloc::Global","util::search::MatchKind","std::vec::Vec<nfa::thompson::pikevm::FollowEpsilon>","util::sparse_set::SparseSet","!","()","util::sparse_set::SparseSetIter<'_>"]}