{"mod_name":"dfa::dense","calls":["<[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index","core::slice::from_raw_parts::<'_, u32>","<core::result::Result<usize, util::wire::DeserializeError> as core::ops::Try>::branch","core::slice::<impl [u8]>::as_ptr","util::wire::check_slice_len::<u8>","<[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index","core::ptr::const_ptr::<impl *const u8>::cast::<u32>","<core::result::Result<","util::wire::mul","core::num::<impl usize>::checked_shl","<*const u8 as util::int::Pointer>::as_usize","util::wire::try_read_u32_as_usize","util::alphabet::ByteClasses::from_bytes","util::alphabet::ByteClasses::alphabet_len","core::option::Option::<usize>::unwrap","util::wire::DeserializeError::generic","core::result::Result::<u32, core::num::TryFromIntError>::unwrap","util::wire::check_alignment::<util::primitives::StateID>","util::wire::shl","<u32 as core::convert::TryFrom<usize>>::try_from"],"types":["core::convert::Infallible","core::result::Result<(), util::wire::DeserializeError>","util::wire::DeserializeError","core::ops::RangeFrom<usize>","u32","isize","()","(util::alphabet::ByteClasses, usize)","u8","core::result::Result<(usize, usize), util::wire::DeserializeError>","[u32]","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>>","usize","core::result::Result<usize, util::wire::DeserializeError>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>, (util::alphabet::ByteClasses, usize)>","core::result::Result<(util::alphabet::ByteClasses, usize), util::wire::DeserializeError>","core::option::Option<usize>","[u8]","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>, usize>","*const u32","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::wire::DeserializeError>, (usize, usize)>","core::result::Result<u32, core::num::TryFromIntError>","str","core::result::Result<core::convert::Infallible, util::wire::DeserializeError>","(usize, usize)","core::num::TryFromIntError","util::alphabet::ByteClasses","*const u8","!","core::ops::RangeTo<usize>","(usize, bool)","(dfa::dense::TransitionTable<&[u32]>, usize)","core::result::Result<(dfa::dense::TransitionTable<&[u32]>, usize), util::wire::DeserializeError>","dfa::dense::TransitionTable<&[u32]>","bool"]}