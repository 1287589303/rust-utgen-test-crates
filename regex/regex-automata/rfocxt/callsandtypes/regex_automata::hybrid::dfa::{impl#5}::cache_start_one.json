{"mod_name":"hybrid::dfa","calls":["util::determinize::state::StateBuilderEmpty::into_matches","util::sparse_set::SparseSet::clear","util::determinize::state::StateBuilderMatches::look_have","util::determinize::set_lookbehind_from_start","util::determinize::add_nfa_states","hybrid::dfa::DFA::get_config","hybrid::dfa::Config::get_specialize_start_states","hybrid::dfa::Lazy::<'_, '_>::add_builder_state::<{closure@regex-automata/src/hybrid/dfa.rs:2225:41: 2225:45}>","hybrid::dfa::DFA::get_nfa","util::determinize::state::StateBuilderMatches::into_nfa","util::determinize::epsilon_closure","hybrid::dfa::Lazy::<'_, '_>::get_state_builder"],"types":["()","hybrid::error::CacheError","{closure@regex-automata/src/hybrid/dfa.rs:2225:41: 2225:45}","std::vec::Vec<util::primitives::StateID>","util::primitives::StateID","util::determinize::state::StateBuilderEmpty","util::determinize::state::StateBuilderNFA","std::alloc::Global","nfa::thompson::nfa::NFA","core::result::Result<hybrid::id::LazyStateID, hybrid::error::CacheError>","hybrid::dfa::DFA","util::start::Start","bool","util::determinize::state::StateBuilderMatches","hybrid::id::LazyStateID","hybrid::dfa::Config","hybrid::dfa::Lazy<'_, '_>","util::look::LookSet","util::sparse_set::SparseSet"]}