{"mod_name":"hybrid::regex","calls":["util::search::Input::<'_>::anchored","util::search::Input::<'_>::earliest","hybrid::dfa::DFA::try_search_rev","hybrid::regex::Regex::forward","util::search::Input::<'_>::start","util::search::HalfMatch::pattern","hybrid::regex::Regex::is_anchored","core::panicking::assert_failed::<util::primitives::PatternID, util::primitives::PatternID>","util::search::HalfMatch::offset","core::panicking::panic","<core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError> as core::ops::Try>::branch","util::search::Input::<'_>::span::<core::ops::Range<usize>>","core::option::Option::<util::search::HalfMatch>::expect","<util::search::Input<'_> as core::clone::Clone>::clone","<core::result::Result<core::option::Option<util::search::Match>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual","util::search::Match::new::<core::ops::Range<usize>>","hybrid::regex::Regex::reverse","<util::primitives::PatternID as core::cmp::PartialEq>::eq","core::fmt::Arguments::<'_>::new_const::<1>","hybrid::dfa::DFA::try_search_fwd"],"types":["core::option::Option<util::search::HalfMatch>","util::search::Match","core::fmt::Arguments<'_>","!","core::option::Option<util::search::Match>","(&util::primitives::PatternID, &util::primitives::PatternID)","[&str; 1]","core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError>","isize","core::panicking::AssertKind","core::ops::Range<usize>","util::search::HalfMatch","hybrid::dfa::Cache","()","core::option::Option<core::fmt::Arguments<'_>>","(&mut hybrid::dfa::Cache, &mut hybrid::dfa::Cache)","str","hybrid::dfa::DFA","hybrid::regex::Regex","hybrid::regex::Cache","core::result::Result<core::option::Option<util::search::Match>, util::search::MatchError>","core::convert::Infallible","util::search::Input<'_>","util::search::Anchored","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::search::MatchError>, core::option::Option<util::search::HalfMatch>>","util::search::MatchError","core::result::Result<core::convert::Infallible, util::search::MatchError>","usize","bool","util::primitives::PatternID"]}