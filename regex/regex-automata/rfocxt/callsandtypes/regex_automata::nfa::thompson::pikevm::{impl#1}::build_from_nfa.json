{"mod_name":"nfa::thompson::pikevm","calls":["core::result::Result::<","<core::result::Result<nfa::thompson::pikevm::PikeVM, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual","util::look::LookSet::available","nfa::thompson::nfa::NFA::look_set_any","<core::result::Result<","<nfa::thompson::pikevm::Config as core::clone::Clone>::clone"],"types":["core::result::Result<(), util::look::UnicodeWordBoundaryError>","!","nfa::thompson::pikevm::Builder","util::look::LookSet","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>","isize","nfa::thompson::pikevm::Config","()","core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>","util::look::UnicodeWordBoundaryError","core::result::Result<(), nfa::thompson::error::BuildError>","core::convert::Infallible","nfa::thompson::nfa::NFA","core::result::Result<nfa::thompson::pikevm::PikeVM, nfa::thompson::error::BuildError>","nfa::thompson::error::BuildError","nfa::thompson::pikevm::PikeVM","fn(util::look::UnicodeWordBoundaryError) -> nfa::thompson::error::BuildError {nfa::thompson::error::BuildError::word}"]}