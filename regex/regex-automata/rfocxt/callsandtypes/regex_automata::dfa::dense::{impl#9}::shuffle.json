{"mod_name":"dfa::dense","calls":["std::collections::BTreeMap::<util::primitives::StateID, std::vec::Vec<util::primitives::PatternID>>::insert","dfa::dense::DFA::<std::vec::Vec<u32>>::starts","core::fmt::rt::Argument::<'_>::new_debug::<util::primitives::StateID>","std::collections::BTreeMap::<util::primitives::StateID, std::vec::Vec<util::primitives::PatternID>>::new","<std::collections::btree_map::IntoIter<util::primitives::StateID, std::vec::Vec<util::primitives::PatternID>> as core::iter::Iterator>::next","dfa::special::Special::matches","dfa::dense::DFA::<std::vec::Vec<u32>>::set_pattern_map","core::cmp::max::<util::primitives::StateID>","std::collections::BTreeSet::<util::primitives::StateID>::contains::<util::primitives::StateID>","dfa::dense::DFA::<std::vec::Vec<u32>>::to_state_id","std::collections::BTreeMap::<util::primitives::StateID, std::vec::Vec<util::primitives::PatternID>>::is_empty","<dfa::dense::StartStateIter<'_> as core::iter::Iterator>::next","<std::collections::BTreeMap<util::primitives::StateID, std::vec::Vec<util::primitives::PatternID>> as core::iter::IntoIterator>::into_iter","dfa::remapper::Remapper::new::<dfa::dense::DFA<std::vec::Vec<u32>>>","dfa::dense::DFA::<std::vec::Vec<u32>>::state_len","<std::collections::BTreeSet<util::primitives::StateID> as core::iter::IntoIterator>::into_iter","std::collections::BTreeSet::<util::primitives::StateID>::new","core::result::Result::<","<util::primitives::StateID as core::cmp::PartialEq>::eq","core::panicking::panic_fmt","<core::result::Result<","std::collections::BTreeMap::<util::primitives::StateID, std::vec::Vec<util::primitives::PatternID>>::contains_key::<util::primitives::StateID>","core::fmt::Arguments::<'_>::new_v1::<2, 1>","std::collections::BTreeSet::<util::primitives::StateID>::insert","std::collections::BTreeSet::<util::primitives::StateID>::remove::<util::primitives::StateID>","dfa::special::Special::set_max","dfa::remapper::Remapper::remap::<dfa::dense::DFA<std::vec::Vec<u32>>>","dfa::special::Special::validate_state_len","dfa::special::Special::validate","dfa::dense::TransitionTable::<std::vec::Vec<u32>>::prev_state_id","<std::collections::btree_set::IntoIter<util::primitives::StateID> as core::iter::Iterator>::next","<dfa::dense::StartStateIter<'_> as core::iter::IntoIterator>::into_iter","dfa::dense::TransitionTable::<std::vec::Vec<u32>>::next_state_id","dfa::remapper::Remapper::swap::<dfa::dense::DFA<std::vec::Vec<u32>>>","dfa::dense::DFA::<std::vec::Vec<u32>>::stride2"],"types":["u32","util::primitives::PatternID","[&str; 2]","core::option::Option<std::vec::Vec<util::primitives::PatternID>>","core::result::Result<core::convert::Infallible, dfa::dense::BuildError>","core::option::Option<(util::primitives::StateID, std::vec::Vec<util::primitives::PatternID>)>","dfa::dense::DFA<std::vec::Vec<u32>>","std::collections::BTreeSet<util::primitives::StateID>","util::wire::DeserializeError","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::dense::BuildError>>","(util::primitives::StateID, util::search::Anchored, util::start::Start)","util::start::Start","std::collections::btree_map::IntoIter<util::primitives::StateID, std::vec::Vec<util::primitives::PatternID>>","usize","dfa::remapper::Remapper","std::collections::BTreeMap<util::primitives::StateID, std::vec::Vec<util::primitives::PatternID>>","core::fmt::rt::Argument<'_>","core::option::Option<util::primitives::StateID>","dfa::special::Special","std::alloc::Global","bool","std::collections::btree_set::IntoIter<util::primitives::StateID>","core::result::Result<(), util::wire::DeserializeError>","()","(util::primitives::StateID, std::vec::Vec<util::primitives::PatternID>)","!","dfa::dense::BuildError","str","std::vec::Vec<util::primitives::PatternID>","core::fmt::Arguments<'_>","dfa::dense::TransitionTable<std::vec::Vec<u32>>","[core::fmt::rt::Argument<'_>; 1]","isize","util::search::Anchored","core::result::Result<(), dfa::dense::BuildError>","core::option::Option<(util::primitives::StateID, util::search::Anchored, util::start::Start)>","dfa::dense::StartStateIter<'_>","core::convert::Infallible","util::primitives::StateID","std::vec::Vec<u32>"]}