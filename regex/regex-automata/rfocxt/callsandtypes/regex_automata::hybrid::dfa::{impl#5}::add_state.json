{"mod_name":"hybrid::dfa","calls":["hybrid::dfa::Lazy::<'_, '_>::next_state_id","hybrid::dfa::Lazy::<'_, '_>::try_clear_cache","hybrid::dfa::LazyRef::<'_, '_>::state_fits_in_cache","util::alphabet::Unit::u8","util::determinize::state::State::memory_usage","<core::result::Result<","std::vec::Vec::<util::determinize::state::State>::push","<util::alphabet::ByteSetIter<'_> as core::iter::Iterator>::next","<impl Fn","<util::alphabet::ByteSetIter<'_> as core::iter::IntoIterator>::into_iter","hybrid::dfa::Lazy::<'_, '_>::as_ref","util::determinize::state::State::is_match","<core::result::Result<hybrid::id::LazyStateID, hybrid::error::CacheError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hybrid::error::CacheError>>>::from_residual","hybrid::dfa::LazyRef::<'_, '_>::is_sentinel","util::alphabet::ByteSet::iter","<core::result::Result<hybrid::id::LazyStateID, hybrid::error::CacheError> as core::ops::Try>::branch","hybrid::dfa::DFA::stride","core::iter::repeat::<hybrid::id::LazyStateID>","hybrid::dfa::LazyRef::<'_, '_>::unknown_id","<std::vec::Vec<hybrid::id::LazyStateID> as core::iter::Extend<hybrid::id::LazyStateID>>::extend::<core::iter::Take<core::iter::Repeat<hybrid::id::LazyStateID>>>","hybrid::dfa::Lazy::<'_, '_>::set_transition","hybrid::dfa::LazyRef::<'_, '_>::quit_id","<util::determinize::state::State as core::clone::Clone>::clone","<core::iter::Repeat<hybrid::id::LazyStateID> as core::iter::Iterator>::take","util::alphabet::ByteSet::is_empty","hybrid::id::LazyStateID::to_match","std::collections::HashMap::<util::determinize::state::State, hybrid::id::LazyStateID>::insert"],"types":["util::determinize::state::State","core::iter::Take<core::iter::Repeat<hybrid::id::LazyStateID>>","core::option::Option<u8>","hybrid::dfa::LazyRef<'_, '_>","core::convert::Infallible","core::option::Option<hybrid::id::LazyStateID>","(usize, bool)","hybrid::dfa::Lazy<'_, '_>","util::alphabet::ByteSet","std::vec::Vec<util::determinize::state::State>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hybrid::error::CacheError>>","core::result::Result<hybrid::id::LazyStateID, hybrid::error::CacheError>","util::alphabet::Unit","u8","impl Fn(LazyStateID) -> LazyStateID","std::alloc::Global","core::result::Result<core::convert::Infallible, hybrid::error::CacheError>","core::iter::Repeat<hybrid::id::LazyStateID>","!","(hybrid::id::LazyStateID,)","usize","isize","std::vec::Vec<hybrid::id::LazyStateID>","core::result::Result<(), hybrid::error::CacheError>","std::hash::RandomState","util::alphabet::ByteSetIter<'_>","hybrid::error::CacheError","hybrid::dfa::DFA","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hybrid::error::CacheError>, hybrid::id::LazyStateID>","std::collections::HashMap<util::determinize::state::State, hybrid::id::LazyStateID>","()","hybrid::id::LazyStateID","bool"]}