{"mod_name":"hybrid::dfa","calls":["core::slice::<impl [nfa::thompson::nfa::State]>::len","std::vec::Vec::<hybrid::id::LazyStateID>::new","hybrid::dfa::DFA::get_nfa","std::vec::Vec::<util::primitives::StateID>::new","util::determinize::state::StateBuilderEmpty::new","hybrid::dfa::StateSaver::none","std::vec::Vec::<util::determinize::state::State>::new","std::collections::HashMap::<util::determinize::state::State, hybrid::id::LazyStateID>::new","nfa::thompson::nfa::NFA::states","hybrid::dfa::Lazy::<'_, '_>::init_cache","util::sparse_set::SparseSets::new"],"types":["nfa::thompson::nfa::NFA","usize","std::vec::Vec<hybrid::id::LazyStateID>","core::option::Option<hybrid::dfa::SearchProgress>","util::primitives::StateID","nfa::thompson::nfa::State","[nfa::thompson::nfa::State]","hybrid::dfa::SearchProgress","util::sparse_set::SparseSets","std::hash::RandomState","std::vec::Vec<util::determinize::state::State>","hybrid::id::LazyStateID","std::collections::HashMap<util::determinize::state::State, hybrid::id::LazyStateID>","hybrid::dfa::StateSaver","std::vec::Vec<util::primitives::StateID>","std::alloc::Global","()","hybrid::dfa::Lazy<'_, '_>","util::determinize::state::StateBuilderEmpty","hybrid::dfa::DFA","util::determinize::state::State","hybrid::dfa::Cache"]}