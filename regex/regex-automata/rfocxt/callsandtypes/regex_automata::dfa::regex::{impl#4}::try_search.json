{"mod_name":"dfa::regex","calls":["core::panicking::panic","util::search::Input::<'_>::span::<core::ops::Range<usize>>","dfa::regex::Regex::<A>::reverse","core::panicking::assert_failed::<util::primitives::PatternID, util::primitives::PatternID>","<A as dfa::automaton::Automaton>::try_search_rev","core::option::Option::<util::search::HalfMatch>::expect","<core::result::Result<core::option::Option<util::search::Match>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual","<core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError> as core::ops::Try>::branch","dfa::regex::Regex::<A>::is_anchored","util::search::HalfMatch::pattern","dfa::regex::Regex::<A>::forward","util::search::Input::<'_>::earliest","core::fmt::Arguments::<'_>::new_const::<1>","<util::search::Input<'_> as core::clone::Clone>::clone","util::search::Input::<'_>::anchored","<A as dfa::automaton::Automaton>::try_search_fwd","util::search::Match::new::<core::ops::Range<usize>>","util::search::HalfMatch::offset","util::search::Input::<'_>::start","<util::primitives::PatternID as core::cmp::PartialEq>::eq"],"types":["str","core::option::Option<util::search::Match>","util::primitives::PatternID","util::search::Input<'_>","dfa::regex::Regex<A>","bool","A","core::fmt::Arguments<'_>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::search::MatchError>, core::option::Option<util::search::HalfMatch>>","util::search::MatchError","core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError>","core::option::Option<core::fmt::Arguments<'_>>","core::convert::Infallible","[&str; 1]","usize","(&util::primitives::PatternID, &util::primitives::PatternID)","()","!","core::ops::Range<usize>","(&A, &A)","core::panicking::AssertKind","util::search::Match","core::result::Result<core::option::Option<util::search::Match>, util::search::MatchError>","core::result::Result<core::convert::Infallible, util::search::MatchError>","core::option::Option<util::search::HalfMatch>","util::search::HalfMatch","isize","util::search::Anchored"]}