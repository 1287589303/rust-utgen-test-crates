{"mod_name":"nfa::thompson::backtrack","calls":["core::option::Option::<util::search::HalfMatch>::map::<util::primitives::PatternID, {closure@regex-automata/src/nfa/thompson/backtrack.rs:1323:20: 1323:24}>","std::vec::from_elem::<core::option::Option<util::primitives::NonMaxUsize>>","core::slice::<impl [core::option::Option<util::primitives::NonMaxUsize>]>::copy_from_slice","<[core::option::Option<util::primitives::NonMaxUsize>; 2] as core::ops::Index<core::ops::RangeTo<usize>>>::index","<core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError> as core::ops::Try>::branch","nfa::thompson::nfa::NFA::pattern_len","nfa::thompson::nfa::NFA::group_info","nfa::thompson::backtrack::BoundedBacktracker::get_nfa","core::option::Option::<util::search::HalfMatch>::map::<util::primitives::PatternID, {closure@regex-automata/src/nfa/thompson/backtrack.rs:1302:36: 1302:40}>","nfa::thompson::backtrack::BoundedBacktracker::try_search_slots_imp","nfa::thompson::nfa::NFA::has_empty","util::captures::GroupInfo::implicit_slot_len","core::slice::<impl [core::option::Option<util::primitives::NonMaxUsize>]>::len","core::option::Option::<util::search::HalfMatch>::map::<util::primitives::PatternID, {closure@regex-automata/src/nfa/thompson/backtrack.rs:1308:36: 1308:40}>","core::option::Option::<util::search::HalfMatch>::map::<util::primitives::PatternID, {closure@regex-automata/src/nfa/thompson/backtrack.rs:1316:31: 1316:35}>","<core::result::Result<core::option::Option<util::primitives::PatternID>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual","nfa::thompson::nfa::NFA::is_utf8","<std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>> as core::ops::DerefMut>::deref_mut","<std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>> as core::ops::Index<core::ops::RangeTo<usize>>>::index"],"types":["util::search::Input<'_>","util::captures::GroupInfo","{closure@regex-automata/src/nfa/thompson/backtrack.rs:1316:31: 1316:35}","util::primitives::NonMaxUsize","{closure@regex-automata/src/nfa/thompson/backtrack.rs:1308:36: 1308:40}","bool","nfa::thompson::backtrack::BoundedBacktracker","core::option::Option<util::primitives::PatternID>","std::alloc::Global","usize","{closure@regex-automata/src/nfa/thompson/backtrack.rs:1302:36: 1302:40}","util::primitives::PatternID","nfa::thompson::backtrack::Cache","util::search::HalfMatch","nfa::thompson::nfa::NFA","std::vec::Vec<core::option::Option<util::primitives::NonMaxUsize>>","core::result::Result<core::option::Option<util::primitives::PatternID>, util::search::MatchError>","!","core::option::Option<util::primitives::NonMaxUsize>","[core::option::Option<util::primitives::NonMaxUsize>]","core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError>","()","core::result::Result<core::convert::Infallible, util::search::MatchError>","util::search::MatchError","core::ops::RangeTo<usize>","core::convert::Infallible","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::search::MatchError>, core::option::Option<util::search::HalfMatch>>","isize","[core::option::Option<util::primitives::NonMaxUsize>; 2]","{closure@regex-automata/src/nfa/thompson/backtrack.rs:1323:20: 1323:24}","core::option::Option<util::search::HalfMatch>"]}