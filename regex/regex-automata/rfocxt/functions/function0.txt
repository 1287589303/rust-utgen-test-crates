[
    "regex_automata::dfa::accel::find_fwd",
    "regex_automata::dfa::accel::find_rev",
    "regex_automata::dfa::accel::{impl#0}::add",
    "regex_automata::dfa::accel::{impl#0}::empty",
    "regex_automata::dfa::accel::{impl#0}::set_len",
    "regex_automata::dfa::accel::{impl#1}::from_bytes_unchecked",
    "regex_automata::dfa::accel::{impl#2}::as_bytes",
    "regex_automata::dfa::accel::{impl#2}::as_ref",
    "regex_automata::dfa::accel::{impl#2}::get",
    "regex_automata::dfa::accel::{impl#2}::iter",
    "regex_automata::dfa::accel::{impl#2}::len",
    "regex_automata::dfa::accel::{impl#2}::memory_usage",
    "regex_automata::dfa::accel::{impl#2}::needles",
    "regex_automata::dfa::accel::{impl#2}::to_owned",
    "regex_automata::dfa::accel::{impl#2}::validate",
    "regex_automata::dfa::accel::{impl#2}::write_to",
    "regex_automata::dfa::accel::{impl#2}::write_to_len",
    "regex_automata::dfa::accel::{impl#3}::fmt",
    "regex_automata::dfa::accel::{impl#4}::next",
    "regex_automata::dfa::accel::{impl#5}::add",
    "regex_automata::dfa::accel::{impl#5}::as_accel_tys",
    "regex_automata::dfa::accel::{impl#5}::contains",
    "regex_automata::dfa::accel::{impl#5}::from_bytes",
    "regex_automata::dfa::accel::{impl#5}::from_bytes_unchecked",
    "regex_automata::dfa::accel::{impl#5}::from_slice",
    "regex_automata::dfa::accel::{impl#5}::is_empty",
    "regex_automata::dfa::accel::{impl#5}::len",
    "regex_automata::dfa::accel::{impl#5}::needles",
    "regex_automata::dfa::accel::{impl#5}::new",
    "regex_automata::dfa::accel::{impl#6}::fmt",
    "regex_automata::dfa::automaton::Automaton::accelerator",
    "regex_automata::dfa::automaton::Automaton::get_prefilter",
    "regex_automata::dfa::automaton::Automaton::has_empty",
    "regex_automata::dfa::automaton::Automaton::is_accel_state",
    "regex_automata::dfa::automaton::Automaton::is_always_start_anchored",
    "regex_automata::dfa::automaton::Automaton::is_dead_state",
    "regex_automata::dfa::automaton::Automaton::is_match_state",
    "regex_automata::dfa::automaton::Automaton::is_quit_state",
    "regex_automata::dfa::automaton::Automaton::is_special_state",
    "regex_automata::dfa::automaton::Automaton::is_start_state",
    "regex_automata::dfa::automaton::Automaton::is_utf8",
    "regex_automata::dfa::automaton::Automaton::match_len",
    "regex_automata::dfa::automaton::Automaton::match_pattern",
    "regex_automata::dfa::automaton::Automaton::next_eoi_state",
    "regex_automata::dfa::automaton::Automaton::next_state",
    "regex_automata::dfa::automaton::Automaton::next_state_unchecked",
    "regex_automata::dfa::automaton::Automaton::pattern_len",
    "regex_automata::dfa::automaton::Automaton::start_state",
    "regex_automata::dfa::automaton::Automaton::start_state_forward",
    "regex_automata::dfa::automaton::Automaton::start_state_reverse",
    "regex_automata::dfa::automaton::Automaton::try_search_fwd",
    "regex_automata::dfa::automaton::Automaton::try_search_overlapping_fwd",
    "regex_automata::dfa::automaton::Automaton::try_search_overlapping_rev",
    "regex_automata::dfa::automaton::Automaton::try_search_rev",
    "regex_automata::dfa::automaton::Automaton::try_which_overlapping_matches",
    "regex_automata::dfa::automaton::Automaton::universal_start_state",
    "regex_automata::dfa::automaton::fmt_state_indicator",
    "regex_automata::dfa::automaton::skip_empty_utf8_splits_overlapping",
    "regex_automata::dfa::automaton::{impl#0}::accelerator",
    "regex_automata::dfa::automaton::{impl#0}::get_prefilter",
    "regex_automata::dfa::automaton::{impl#0}::has_empty",
    "regex_automata::dfa::automaton::{impl#0}::is_accel_state",
    "regex_automata::dfa::automaton::{impl#0}::is_always_start_anchored",
    "regex_automata::dfa::automaton::{impl#0}::is_dead_state",
    "regex_automata::dfa::automaton::{impl#0}::is_match_state",
    "regex_automata::dfa::automaton::{impl#0}::is_quit_state",
    "regex_automata::dfa::automaton::{impl#0}::is_special_state",
    "regex_automata::dfa::automaton::{impl#0}::is_start_state",
    "regex_automata::dfa::automaton::{impl#0}::is_utf8",
    "regex_automata::dfa::automaton::{impl#0}::match_len",
    "regex_automata::dfa::automaton::{impl#0}::match_pattern",
    "regex_automata::dfa::automaton::{impl#0}::next_eoi_state",
    "regex_automata::dfa::automaton::{impl#0}::next_state",
    "regex_automata::dfa::automaton::{impl#0}::next_state_unchecked",
    "regex_automata::dfa::automaton::{impl#0}::pattern_len",
    "regex_automata::dfa::automaton::{impl#0}::start_state",
    "regex_automata::dfa::automaton::{impl#0}::start_state_forward",
    "regex_automata::dfa::automaton::{impl#0}::start_state_reverse",
    "regex_automata::dfa::automaton::{impl#0}::try_search_fwd",
    "regex_automata::dfa::automaton::{impl#0}::try_search_overlapping_fwd",
    "regex_automata::dfa::automaton::{impl#0}::try_search_overlapping_rev",
    "regex_automata::dfa::automaton::{impl#0}::try_search_rev",
    "regex_automata::dfa::automaton::{impl#0}::try_which_overlapping_matches",
    "regex_automata::dfa::automaton::{impl#0}::universal_start_state",
    "regex_automata::dfa::automaton::{impl#1}::get_match",
    "regex_automata::dfa::automaton::{impl#1}::start",
    "regex_automata::dfa::automaton::{impl#2}::quit",
    "regex_automata::dfa::automaton::{impl#2}::unsupported_anchored",
    "regex_automata::dfa::automaton::{impl#4}::fmt",
    "regex_automata::dfa::dense::{impl#0}::accelerate",
    "regex_automata::dfa::dense::{impl#0}::byte_classes",
    "regex_automata::dfa::dense::{impl#0}::determinize_size_limit",
    "regex_automata::dfa::dense::{impl#0}::dfa_size_limit",
    "regex_automata::dfa::dense::{impl#0}::get_accelerate",
    "regex_automata::dfa::dense::{impl#0}::get_byte_classes",
    "regex_automata::dfa::dense::{impl#0}::get_determinize_size_limit",
    "regex_automata::dfa::dense::{impl#0}::get_dfa_size_limit",
    "regex_automata::dfa::dense::{impl#0}::get_match_kind",
    "regex_automata::dfa::dense::{impl#0}::get_minimize",
    "regex_automata::dfa::dense::{impl#0}::get_prefilter",
    "regex_automata::dfa::dense::{impl#0}::get_quit",
    "regex_automata::dfa::dense::{impl#0}::get_specialize_start_states",
    "regex_automata::dfa::dense::{impl#0}::get_starts",
    "regex_automata::dfa::dense::{impl#0}::get_starts_for_each_pattern",
    "regex_automata::dfa::dense::{impl#0}::get_unicode_word_boundary",
    "regex_automata::dfa::dense::{impl#0}::match_kind",
    "regex_automata::dfa::dense::{impl#0}::minimize",
    "regex_automata::dfa::dense::{impl#0}::new",
    "regex_automata::dfa::dense::{impl#0}::overwrite",
    "regex_automata::dfa::dense::{impl#0}::prefilter",
    "regex_automata::dfa::dense::{impl#0}::quit",
    "regex_automata::dfa::dense::{impl#0}::specialize_start_states",
    "regex_automata::dfa::dense::{impl#0}::start_kind",
    "regex_automata::dfa::dense::{impl#0}::starts_for_each_pattern",
    "regex_automata::dfa::dense::{impl#0}::unicode_word_boundary",
    "regex_automata::dfa::dense::{impl#10}::accelerator_index",
    "regex_automata::dfa::dense::{impl#10}::accels",
    "regex_automata::dfa::dense::{impl#10}::flags",
    "regex_automata::dfa::dense::{impl#10}::match_pattern_len",
    "regex_automata::dfa::dense::{impl#10}::match_state_index",
    "regex_automata::dfa::dense::{impl#10}::pattern_id_slice",
    "regex_automata::dfa::dense::{impl#10}::pattern_len",
    "regex_automata::dfa::dense::{impl#10}::pattern_map",
    "regex_automata::dfa::dense::{impl#10}::quit_id",
    "regex_automata::dfa::dense::{impl#10}::quitset",
    "regex_automata::dfa::dense::{impl#10}::special",
    "regex_automata::dfa::dense::{impl#10}::special_mut",
    "regex_automata::dfa::dense::{impl#10}::starts",
    "regex_automata::dfa::dense::{impl#10}::state_len",
    "regex_automata::dfa::dense::{impl#10}::states",
    "regex_automata::dfa::dense::{impl#10}::to_index",
    "regex_automata::dfa::dense::{impl#10}::to_state_id",
    "regex_automata::dfa::dense::{impl#10}::trans",
    "regex_automata::dfa::dense::{impl#11}::fmt",
    "regex_automata::dfa::dense::{impl#12}::accelerator",
    "regex_automata::dfa::dense::{impl#12}::get_prefilter",
    "regex_automata::dfa::dense::{impl#12}::has_empty",
    "regex_automata::dfa::dense::{impl#12}::is_accel_state",
    "regex_automata::dfa::dense::{impl#12}::is_always_start_anchored",
    "regex_automata::dfa::dense::{impl#12}::is_dead_state",
    "regex_automata::dfa::dense::{impl#12}::is_match_state",
    "regex_automata::dfa::dense::{impl#12}::is_quit_state",
    "regex_automata::dfa::dense::{impl#12}::is_special_state",
    "regex_automata::dfa::dense::{impl#12}::is_start_state",
    "regex_automata::dfa::dense::{impl#12}::is_utf8",
    "regex_automata::dfa::dense::{impl#12}::match_len",
    "regex_automata::dfa::dense::{impl#12}::match_pattern",
    "regex_automata::dfa::dense::{impl#12}::next_eoi_state",
    "regex_automata::dfa::dense::{impl#12}::next_state",
    "regex_automata::dfa::dense::{impl#12}::next_state_unchecked",
    "regex_automata::dfa::dense::{impl#12}::pattern_len",
    "regex_automata::dfa::dense::{impl#12}::start_state",
    "regex_automata::dfa::dense::{impl#12}::universal_start_state",
    "regex_automata::dfa::dense::{impl#13}::from_bytes_unchecked",
    "regex_automata::dfa::dense::{impl#14}::add_empty_state",
    "regex_automata::dfa::dense::{impl#14}::minimal",
    "regex_automata::dfa::dense::{impl#14}::remap",
    "regex_automata::dfa::dense::{impl#14}::set",
    "regex_automata::dfa::dense::{impl#14}::swap",
    "regex_automata::dfa::dense::{impl#14}::truncate",
    "regex_automata::dfa::dense::{impl#15}::alphabet_len",
    "regex_automata::dfa::dense::{impl#15}::as_ref",
    "regex_automata::dfa::dense::{impl#15}::is_valid",
    "regex_automata::dfa::dense::{impl#15}::len",
    "regex_automata::dfa::dense::{impl#15}::memory_usage",
    "regex_automata::dfa::dense::{impl#15}::next_state_id",
    "regex_automata::dfa::dense::{impl#15}::prev_state_id",
    "regex_automata::dfa::dense::{impl#15}::state",
    "regex_automata::dfa::dense::{impl#15}::states",
    "regex_automata::dfa::dense::{impl#15}::stride",
    "regex_automata::dfa::dense::{impl#15}::table",
    "regex_automata::dfa::dense::{impl#15}::to_index",
    "regex_automata::dfa::dense::{impl#15}::to_owned",
    "regex_automata::dfa::dense::{impl#15}::to_state_id",
    "regex_automata::dfa::dense::{impl#15}::validate",
    "regex_automata::dfa::dense::{impl#15}::write_to",
    "regex_automata::dfa::dense::{impl#15}::write_to_len",
    "regex_automata::dfa::dense::{impl#16}::table_mut",
    "regex_automata::dfa::dense::{impl#17}::dead",
    "regex_automata::dfa::dense::{impl#18}::from_bytes_unchecked",
    "regex_automata::dfa::dense::{impl#19}::as_ref",
    "regex_automata::dfa::dense::{impl#19}::iter",
    "regex_automata::dfa::dense::{impl#19}::memory_usage",
    "regex_automata::dfa::dense::{impl#19}::start",
    "regex_automata::dfa::dense::{impl#19}::table",
    "regex_automata::dfa::dense::{impl#19}::to_owned",
    "regex_automata::dfa::dense::{impl#19}::validate",
    "regex_automata::dfa::dense::{impl#19}::write_to",
    "regex_automata::dfa::dense::{impl#19}::write_to_len",
    "regex_automata::dfa::dense::{impl#1}::build",
    "regex_automata::dfa::dense::{impl#1}::build_from_nfa",
    "regex_automata::dfa::dense::{impl#1}::build_many",
    "regex_automata::dfa::dense::{impl#1}::configure",
    "regex_automata::dfa::dense::{impl#1}::new",
    "regex_automata::dfa::dense::{impl#1}::syntax",
    "regex_automata::dfa::dense::{impl#1}::thompson",
    "regex_automata::dfa::dense::{impl#20}::set_start",
    "regex_automata::dfa::dense::{impl#20}::table_mut",
    "regex_automata::dfa::dense::{impl#21}::next",
    "regex_automata::dfa::dense::{impl#22}::from_bytes_unchecked",
    "regex_automata::dfa::dense::{impl#23}::empty",
    "regex_automata::dfa::dense::{impl#23}::new",
    "regex_automata::dfa::dense::{impl#23}::new_with_map",
    "regex_automata::dfa::dense::{impl#24}::as_ref",
    "regex_automata::dfa::dense::{impl#24}::len",
    "regex_automata::dfa::dense::{impl#24}::match_state_id",
    "regex_automata::dfa::dense::{impl#24}::memory_usage",
    "regex_automata::dfa::dense::{impl#24}::pattern_id",
    "regex_automata::dfa::dense::{impl#24}::pattern_id_slice",
    "regex_automata::dfa::dense::{impl#24}::pattern_ids",
    "regex_automata::dfa::dense::{impl#24}::pattern_len",
    "regex_automata::dfa::dense::{impl#24}::slices",
    "regex_automata::dfa::dense::{impl#24}::to_map",
    "regex_automata::dfa::dense::{impl#24}::to_owned",
    "regex_automata::dfa::dense::{impl#24}::validate",
    "regex_automata::dfa::dense::{impl#24}::write_to",
    "regex_automata::dfa::dense::{impl#24}::write_to_len",
    "regex_automata::dfa::dense::{impl#25}::from_bytes",
    "regex_automata::dfa::dense::{impl#25}::from_nfa",
    "regex_automata::dfa::dense::{impl#25}::write_to",
    "regex_automata::dfa::dense::{impl#25}::write_to::bool_to_int",
    "regex_automata::dfa::dense::{impl#25}::write_to_len",
    "regex_automata::dfa::dense::{impl#26}::next",
    "regex_automata::dfa::dense::{impl#27}::accelerate",
    "regex_automata::dfa::dense::{impl#27}::id",
    "regex_automata::dfa::dense::{impl#27}::sparse_transitions",
    "regex_automata::dfa::dense::{impl#27}::transitions",
    "regex_automata::dfa::dense::{impl#28}::fmt",
    "regex_automata::dfa::dense::{impl#29}::next",
    "regex_automata::dfa::dense::{impl#2}::default",
    "regex_automata::dfa::dense::{impl#30}::next",
    "regex_automata::dfa::dense::{impl#31}::is_size_limit_exceeded",
    "regex_automata::dfa::dense::{impl#32}::determinize_exceeded_size_limit",
    "regex_automata::dfa::dense::{impl#32}::dfa_exceeded_size_limit",
    "regex_automata::dfa::dense::{impl#32}::kind",
    "regex_automata::dfa::dense::{impl#32}::nfa",
    "regex_automata::dfa::dense::{impl#32}::too_many_match_pattern_ids",
    "regex_automata::dfa::dense::{impl#32}::too_many_start_states",
    "regex_automata::dfa::dense::{impl#32}::too_many_states",
    "regex_automata::dfa::dense::{impl#32}::unsupported_dfa_word_boundary_unicode",
    "regex_automata::dfa::dense::{impl#33}::source",
    "regex_automata::dfa::dense::{impl#34}::fmt",
    "regex_automata::dfa::dense::{impl#3}::new",
    "regex_automata::dfa::dense::{impl#3}::new_many",
    "regex_automata::dfa::dense::{impl#4}::always_match",
    "regex_automata::dfa::dense::{impl#4}::initial",
    "regex_automata::dfa::dense::{impl#4}::never_match",
    "regex_automata::dfa::dense::{impl#5}::builder",
    "regex_automata::dfa::dense::{impl#5}::config",
    "regex_automata::dfa::dense::{impl#6}::alphabet_len",
    "regex_automata::dfa::dense::{impl#6}::as_ref",
    "regex_automata::dfa::dense::{impl#6}::byte_classes",
    "regex_automata::dfa::dense::{impl#6}::memory_usage",
    "regex_automata::dfa::dense::{impl#6}::start_kind",
    "regex_automata::dfa::dense::{impl#6}::start_map",
    "regex_automata::dfa::dense::{impl#6}::starts_for_each_pattern",
    "regex_automata::dfa::dense::{impl#6}::stride",
    "regex_automata::dfa::dense::{impl#6}::stride2",
    "regex_automata::dfa::dense::{impl#6}::to_owned",
    "regex_automata::dfa::dense::{impl#7}::to_bytes",
    "regex_automata::dfa::dense::{impl#7}::to_bytes_big_endian",
    "regex_automata::dfa::dense::{impl#7}::to_bytes_little_endian",
    "regex_automata::dfa::dense::{impl#7}::to_bytes_native_endian",
    "regex_automata::dfa::dense::{impl#7}::to_sparse",
    "regex_automata::dfa::dense::{impl#7}::write_to_big_endian",
    "regex_automata::dfa::dense::{impl#7}::write_to_len",
    "regex_automata::dfa::dense::{impl#7}::write_to_little_endian",
    "regex_automata::dfa::dense::{impl#7}::write_to_native_endian",
    "regex_automata::dfa::dense::{impl#8}::from_bytes",
    "regex_automata::dfa::dense::{impl#8}::from_bytes_unchecked",
    "regex_automata::dfa::dense::{impl#8}::write_to",
    "regex_automata::dfa::dense::{impl#9}::accelerate",
    "regex_automata::dfa::dense::{impl#9}::add_empty_state",
    "regex_automata::dfa::dense::{impl#9}::minimize",
    "regex_automata::dfa::dense::{impl#9}::remap",
    "regex_automata::dfa::dense::{impl#9}::remap_state",
    "regex_automata::dfa::dense::{impl#9}::set_pattern_map",
    "regex_automata::dfa::dense::{impl#9}::set_start_state",
    "regex_automata::dfa::dense::{impl#9}::set_transition",
    "regex_automata::dfa::dense::{impl#9}::set_universal_starts",
    "regex_automata::dfa::dense::{impl#9}::shuffle",
    "regex_automata::dfa::dense::{impl#9}::swap_states",
    "regex_automata::dfa::dense::{impl#9}::truncate_states",
    "regex_automata::dfa::determinize::{impl#0}::determinize_size_limit",
    "regex_automata::dfa::determinize::{impl#0}::dfa_size_limit",
    "regex_automata::dfa::determinize::{impl#0}::match_kind",
    "regex_automata::dfa::determinize::{impl#0}::new",
    "regex_automata::dfa::determinize::{impl#0}::quit",
    "regex_automata::dfa::determinize::{impl#0}::run",
    "regex_automata::dfa::determinize::{impl#1}::add_all_starts",
    "regex_automata::dfa::determinize::{impl#1}::add_one_start",
    "regex_automata::dfa::determinize::{impl#1}::add_start_group",
    "regex_automata::dfa::determinize::{impl#1}::add_state",
    "regex_automata::dfa::determinize::{impl#1}::cached_state",
    "regex_automata::dfa::determinize::{impl#1}::get_state_builder",
    "regex_automata::dfa::determinize::{impl#1}::maybe_add_state",
    "regex_automata::dfa::determinize::{impl#1}::memory_usage",
    "regex_automata::dfa::determinize::{impl#1}::put_state_builder",
    "regex_automata::dfa::determinize::{impl#1}::run",
    "regex_automata::dfa::minimize::{impl#0}::fmt",
    "regex_automata::dfa::minimize::{impl#1}::find_incoming_to",
    "regex_automata::dfa::minimize::{impl#1}::find_waiting",
    "regex_automata::dfa::minimize::{impl#1}::incoming_transitions",
    "regex_automata::dfa::minimize::{impl#1}::initial_partitions",
    "regex_automata::dfa::minimize::{impl#1}::new",
    "regex_automata::dfa::minimize::{impl#1}::run",
    "regex_automata::dfa::minimize::{impl#2}::add",
    "regex_automata::dfa::minimize::{impl#2}::canonicalize",
    "regex_automata::dfa::minimize::{impl#2}::clear",
    "regex_automata::dfa::minimize::{impl#2}::deep_clone",
    "regex_automata::dfa::minimize::{impl#2}::empty",
    "regex_automata::dfa::minimize::{impl#2}::intersection",
    "regex_automata::dfa::minimize::{impl#2}::is_empty",
    "regex_automata::dfa::minimize::{impl#2}::iter",
    "regex_automata::dfa::minimize::{impl#2}::len",
    "regex_automata::dfa::minimize::{impl#2}::min",
    "regex_automata::dfa::minimize::{impl#2}::subtract",
    "regex_automata::dfa::onepass::{impl#0}::byte_classes",
    "regex_automata::dfa::onepass::{impl#0}::get_byte_classes",
    "regex_automata::dfa::onepass::{impl#0}::get_match_kind",
    "regex_automata::dfa::onepass::{impl#0}::get_size_limit",
    "regex_automata::dfa::onepass::{impl#0}::get_starts_for_each_pattern",
    "regex_automata::dfa::onepass::{impl#0}::match_kind",
    "regex_automata::dfa::onepass::{impl#0}::new",
    "regex_automata::dfa::onepass::{impl#0}::overwrite",
    "regex_automata::dfa::onepass::{impl#0}::size_limit",
    "regex_automata::dfa::onepass::{impl#0}::starts_for_each_pattern",
    "regex_automata::dfa::onepass::{impl#10}::epsilons",
    "regex_automata::dfa::onepass::{impl#10}::is_dead",
    "regex_automata::dfa::onepass::{impl#10}::match_wins",
    "regex_automata::dfa::onepass::{impl#10}::new",
    "regex_automata::dfa::onepass::{impl#10}::set_state_id",
    "regex_automata::dfa::onepass::{impl#10}::state_id",
    "regex_automata::dfa::onepass::{impl#11}::fmt",
    "regex_automata::dfa::onepass::{impl#12}::empty",
    "regex_automata::dfa::onepass::{impl#12}::epsilons",
    "regex_automata::dfa::onepass::{impl#12}::is_empty",
    "regex_automata::dfa::onepass::{impl#12}::pattern_id",
    "regex_automata::dfa::onepass::{impl#12}::pattern_id_unchecked",
    "regex_automata::dfa::onepass::{impl#12}::set_epsilons",
    "regex_automata::dfa::onepass::{impl#12}::set_pattern_id",
    "regex_automata::dfa::onepass::{impl#13}::fmt",
    "regex_automata::dfa::onepass::{impl#14}::empty",
    "regex_automata::dfa::onepass::{impl#14}::is_empty",
    "regex_automata::dfa::onepass::{impl#14}::looks",
    "regex_automata::dfa::onepass::{impl#14}::set_looks",
    "regex_automata::dfa::onepass::{impl#14}::set_slots",
    "regex_automata::dfa::onepass::{impl#14}::slots",
    "regex_automata::dfa::onepass::{impl#15}::fmt",
    "regex_automata::dfa::onepass::{impl#16}::apply",
    "regex_automata::dfa::onepass::{impl#16}::insert",
    "regex_automata::dfa::onepass::{impl#16}::is_empty",
    "regex_automata::dfa::onepass::{impl#16}::iter",
    "regex_automata::dfa::onepass::{impl#16}::remove",
    "regex_automata::dfa::onepass::{impl#17}::fmt",
    "regex_automata::dfa::onepass::{impl#18}::next",
    "regex_automata::dfa::onepass::{impl#19}::exceeded_size_limit",
    "regex_automata::dfa::onepass::{impl#19}::nfa",
    "regex_automata::dfa::onepass::{impl#19}::not_one_pass",
    "regex_automata::dfa::onepass::{impl#19}::too_many_patterns",
    "regex_automata::dfa::onepass::{impl#19}::too_many_states",
    "regex_automata::dfa::onepass::{impl#19}::unsupported_look",
    "regex_automata::dfa::onepass::{impl#19}::word",
    "regex_automata::dfa::onepass::{impl#1}::build",
    "regex_automata::dfa::onepass::{impl#1}::build_from_nfa",
    "regex_automata::dfa::onepass::{impl#1}::build_many",
    "regex_automata::dfa::onepass::{impl#1}::configure",
    "regex_automata::dfa::onepass::{impl#1}::new",
    "regex_automata::dfa::onepass::{impl#1}::syntax",
    "regex_automata::dfa::onepass::{impl#1}::thompson",
    "regex_automata::dfa::onepass::{impl#20}::source",
    "regex_automata::dfa::onepass::{impl#21}::fmt",
    "regex_automata::dfa::onepass::{impl#2}::add_dfa_state_for_nfa_state",
    "regex_automata::dfa::onepass::{impl#2}::add_empty_state",
    "regex_automata::dfa::onepass::{impl#2}::add_start_state",
    "regex_automata::dfa::onepass::{impl#2}::build",
    "regex_automata::dfa::onepass::{impl#2}::compile_transition",
    "regex_automata::dfa::onepass::{impl#2}::new",
    "regex_automata::dfa::onepass::{impl#2}::shuffle_states",
    "regex_automata::dfa::onepass::{impl#2}::stack_push",
    "regex_automata::dfa::onepass::{impl#3}::alphabet_len",
    "regex_automata::dfa::onepass::{impl#3}::always_match",
    "regex_automata::dfa::onepass::{impl#3}::builder",
    "regex_automata::dfa::onepass::{impl#3}::config",
    "regex_automata::dfa::onepass::{impl#3}::create_cache",
    "regex_automata::dfa::onepass::{impl#3}::create_captures",
    "regex_automata::dfa::onepass::{impl#3}::get_config",
    "regex_automata::dfa::onepass::{impl#3}::get_nfa",
    "regex_automata::dfa::onepass::{impl#3}::memory_usage",
    "regex_automata::dfa::onepass::{impl#3}::never_match",
    "regex_automata::dfa::onepass::{impl#3}::new",
    "regex_automata::dfa::onepass::{impl#3}::new_from_nfa",
    "regex_automata::dfa::onepass::{impl#3}::new_many",
    "regex_automata::dfa::onepass::{impl#3}::pattern_len",
    "regex_automata::dfa::onepass::{impl#3}::reset_cache",
    "regex_automata::dfa::onepass::{impl#3}::state_len",
    "regex_automata::dfa::onepass::{impl#3}::stride",
    "regex_automata::dfa::onepass::{impl#3}::stride2",
    "regex_automata::dfa::onepass::{impl#4}::captures",
    "regex_automata::dfa::onepass::{impl#4}::find",
    "regex_automata::dfa::onepass::{impl#4}::is_match",
    "regex_automata::dfa::onepass::{impl#4}::try_search",
    "regex_automata::dfa::onepass::{impl#4}::try_search_slots",
    "regex_automata::dfa::onepass::{impl#4}::try_search_slots_imp",
    "regex_automata::dfa::onepass::{impl#5}::find_match",
    "regex_automata::dfa::onepass::{impl#5}::search_imp",
    "regex_automata::dfa::onepass::{impl#6}::last_state_id",
    "regex_automata::dfa::onepass::{impl#6}::pattern_epsilons",
    "regex_automata::dfa::onepass::{impl#6}::prev_state_id",
    "regex_automata::dfa::onepass::{impl#6}::remap",
    "regex_automata::dfa::onepass::{impl#6}::set_pattern_epsilons",
    "regex_automata::dfa::onepass::{impl#6}::set_transition",
    "regex_automata::dfa::onepass::{impl#6}::sparse_transitions",
    "regex_automata::dfa::onepass::{impl#6}::start",
    "regex_automata::dfa::onepass::{impl#6}::start_pattern",
    "regex_automata::dfa::onepass::{impl#6}::swap_states",
    "regex_automata::dfa::onepass::{impl#6}::transition",
    "regex_automata::dfa::onepass::{impl#7}::fmt",
    "regex_automata::dfa::onepass::{impl#7}::fmt::debug_state_transitions",
    "regex_automata::dfa::onepass::{impl#8}::next",
    "regex_automata::dfa::onepass::{impl#9}::explicit_slots",
    "regex_automata::dfa::onepass::{impl#9}::memory_usage",
    "regex_automata::dfa::onepass::{impl#9}::new",
    "regex_automata::dfa::onepass::{impl#9}::reset",
    "regex_automata::dfa::onepass::{impl#9}::setup_search",
    "regex_automata::dfa::regex::{impl#0}::new",
    "regex_automata::dfa::regex::{impl#0}::new_many",
    "regex_automata::dfa::regex::{impl#1}::new_many_sparse",
    "regex_automata::dfa::regex::{impl#1}::new_sparse",
    "regex_automata::dfa::regex::{impl#2}::builder",
    "regex_automata::dfa::regex::{impl#3}::find",
    "regex_automata::dfa::regex::{impl#3}::find_iter",
    "regex_automata::dfa::regex::{impl#3}::is_match",
    "regex_automata::dfa::regex::{impl#4}::is_anchored",
    "regex_automata::dfa::regex::{impl#4}::try_search",
    "regex_automata::dfa::regex::{impl#5}::forward",
    "regex_automata::dfa::regex::{impl#5}::pattern_len",
    "regex_automata::dfa::regex::{impl#5}::reverse",
    "regex_automata::dfa::regex::{impl#6}::next",
    "regex_automata::dfa::regex::{impl#7}::build",
    "regex_automata::dfa::regex::{impl#7}::build_from_dfas",
    "regex_automata::dfa::regex::{impl#7}::build_many",
    "regex_automata::dfa::regex::{impl#7}::build_many_sparse",
    "regex_automata::dfa::regex::{impl#7}::build_sparse",
    "regex_automata::dfa::regex::{impl#7}::dense",
    "regex_automata::dfa::regex::{impl#7}::new",
    "regex_automata::dfa::regex::{impl#7}::syntax",
    "regex_automata::dfa::regex::{impl#7}::thompson",
    "regex_automata::dfa::regex::{impl#8}::default",
    "regex_automata::dfa::remapper::Remappable::remap",
    "regex_automata::dfa::remapper::Remappable::state_len",
    "regex_automata::dfa::remapper::Remappable::stride2",
    "regex_automata::dfa::remapper::Remappable::swap_states",
    "regex_automata::dfa::remapper::dense::{impl#0}::remap",
    "regex_automata::dfa::remapper::dense::{impl#0}::state_len",
    "regex_automata::dfa::remapper::dense::{impl#0}::stride2",
    "regex_automata::dfa::remapper::dense::{impl#0}::swap_states",
    "regex_automata::dfa::remapper::onepass::{impl#0}::remap",
    "regex_automata::dfa::remapper::onepass::{impl#0}::state_len",
    "regex_automata::dfa::remapper::onepass::{impl#0}::stride2",
    "regex_automata::dfa::remapper::onepass::{impl#0}::swap_states",
    "regex_automata::dfa::remapper::{impl#0}::new",
    "regex_automata::dfa::remapper::{impl#0}::remap",
    "regex_automata::dfa::remapper::{impl#0}::swap",
    "regex_automata::dfa::remapper::{impl#1}::to_index",
    "regex_automata::dfa::remapper::{impl#1}::to_state_id",
    "regex_automata::dfa::search::eoi_fwd",
    "regex_automata::dfa::search::eoi_rev",
    "regex_automata::dfa::search::find_fwd",
    "regex_automata::dfa::search::find_fwd_imp",
    "regex_automata::dfa::search::find_overlapping_fwd",
    "regex_automata::dfa::search::find_overlapping_fwd_imp",
    "regex_automata::dfa::search::find_overlapping_rev",
    "regex_automata::dfa::search::find_rev",
    "regex_automata::dfa::search::find_rev_imp",
    "regex_automata::dfa::search::init_fwd",
    "regex_automata::dfa::search::init_rev",
    "regex_automata::dfa::search::prefilter_restart",
    "regex_automata::dfa::sparse::{impl#0}::new",
    "regex_automata::dfa::sparse::{impl#0}::new_many",
    "regex_automata::dfa::sparse::{impl#10}::from_dense_dfa",
    "regex_automata::dfa::sparse::{impl#10}::new",
    "regex_automata::dfa::sparse::{impl#11}::from_bytes_unchecked",
    "regex_automata::dfa::sparse::{impl#12}::as_ref",
    "regex_automata::dfa::sparse::{impl#12}::iter",
    "regex_automata::dfa::sparse::{impl#12}::len",
    "regex_automata::dfa::sparse::{impl#12}::memory_usage",
    "regex_automata::dfa::sparse::{impl#12}::start",
    "regex_automata::dfa::sparse::{impl#12}::table",
    "regex_automata::dfa::sparse::{impl#12}::to_owned",
    "regex_automata::dfa::sparse::{impl#12}::validate",
    "regex_automata::dfa::sparse::{impl#12}::write_to",
    "regex_automata::dfa::sparse::{impl#12}::write_to_len",
    "regex_automata::dfa::sparse::{impl#13}::set_start",
    "regex_automata::dfa::sparse::{impl#14}::next",
    "regex_automata::dfa::sparse::{impl#15}::fmt",
    "regex_automata::dfa::sparse::{impl#16}::next",
    "regex_automata::dfa::sparse::{impl#17}::fmt",
    "regex_automata::dfa::sparse::{impl#18}::accelerator",
    "regex_automata::dfa::sparse::{impl#18}::id",
    "regex_automata::dfa::sparse::{impl#18}::next",
    "regex_automata::dfa::sparse::{impl#18}::next_at",
    "regex_automata::dfa::sparse::{impl#18}::next_eoi",
    "regex_automata::dfa::sparse::{impl#18}::pattern_id",
    "regex_automata::dfa::sparse::{impl#18}::pattern_len",
    "regex_automata::dfa::sparse::{impl#18}::range",
    "regex_automata::dfa::sparse::{impl#18}::write_to",
    "regex_automata::dfa::sparse::{impl#18}::write_to_len",
    "regex_automata::dfa::sparse::{impl#19}::fmt",
    "regex_automata::dfa::sparse::{impl#1}::always_match",
    "regex_automata::dfa::sparse::{impl#1}::from_dense",
    "regex_automata::dfa::sparse::{impl#1}::never_match",
    "regex_automata::dfa::sparse::{impl#20}::set_next_at",
    "regex_automata::dfa::sparse::{impl#21}::fmt",
    "regex_automata::dfa::sparse::{impl#22}::contains",
    "regex_automata::dfa::sparse::{impl#22}::insert",
    "regex_automata::dfa::sparse::{impl#22}::new",
    "regex_automata::dfa::sparse::{impl#23}::contains",
    "regex_automata::dfa::sparse::{impl#23}::insert",
    "regex_automata::dfa::sparse::{impl#23}::new",
    "regex_automata::dfa::sparse::{impl#2}::as_ref",
    "regex_automata::dfa::sparse::{impl#2}::byte_classes",
    "regex_automata::dfa::sparse::{impl#2}::memory_usage",
    "regex_automata::dfa::sparse::{impl#2}::start_kind",
    "regex_automata::dfa::sparse::{impl#2}::starts_for_each_pattern",
    "regex_automata::dfa::sparse::{impl#2}::to_owned",
    "regex_automata::dfa::sparse::{impl#3}::to_bytes",
    "regex_automata::dfa::sparse::{impl#3}::to_bytes_big_endian",
    "regex_automata::dfa::sparse::{impl#3}::to_bytes_little_endian",
    "regex_automata::dfa::sparse::{impl#3}::to_bytes_native_endian",
    "regex_automata::dfa::sparse::{impl#3}::write_to",
    "regex_automata::dfa::sparse::{impl#3}::write_to_big_endian",
    "regex_automata::dfa::sparse::{impl#3}::write_to_len",
    "regex_automata::dfa::sparse::{impl#3}::write_to_little_endian",
    "regex_automata::dfa::sparse::{impl#3}::write_to_native_endian",
    "regex_automata::dfa::sparse::{impl#4}::from_bytes",
    "regex_automata::dfa::sparse::{impl#4}::from_bytes_unchecked",
    "regex_automata::dfa::sparse::{impl#5}::fmt",
    "regex_automata::dfa::sparse::{impl#6}::accelerator",
    "regex_automata::dfa::sparse::{impl#6}::get_prefilter",
    "regex_automata::dfa::sparse::{impl#6}::has_empty",
    "regex_automata::dfa::sparse::{impl#6}::is_accel_state",
    "regex_automata::dfa::sparse::{impl#6}::is_always_start_anchored",
    "regex_automata::dfa::sparse::{impl#6}::is_dead_state",
    "regex_automata::dfa::sparse::{impl#6}::is_match_state",
    "regex_automata::dfa::sparse::{impl#6}::is_quit_state",
    "regex_automata::dfa::sparse::{impl#6}::is_special_state",
    "regex_automata::dfa::sparse::{impl#6}::is_start_state",
    "regex_automata::dfa::sparse::{impl#6}::is_utf8",
    "regex_automata::dfa::sparse::{impl#6}::match_len",
    "regex_automata::dfa::sparse::{impl#6}::match_pattern",
    "regex_automata::dfa::sparse::{impl#6}::next_eoi_state",
    "regex_automata::dfa::sparse::{impl#6}::next_state",
    "regex_automata::dfa::sparse::{impl#6}::next_state_unchecked",
    "regex_automata::dfa::sparse::{impl#6}::pattern_len",
    "regex_automata::dfa::sparse::{impl#6}::start_state",
    "regex_automata::dfa::sparse::{impl#6}::universal_start_state",
    "regex_automata::dfa::sparse::{impl#7}::from_bytes_unchecked",
    "regex_automata::dfa::sparse::{impl#8}::as_ref",
    "regex_automata::dfa::sparse::{impl#8}::id_len",
    "regex_automata::dfa::sparse::{impl#8}::memory_usage",
    "regex_automata::dfa::sparse::{impl#8}::sparse",
    "regex_automata::dfa::sparse::{impl#8}::state",
    "regex_automata::dfa::sparse::{impl#8}::states",
    "regex_automata::dfa::sparse::{impl#8}::to_owned",
    "regex_automata::dfa::sparse::{impl#8}::try_state",
    "regex_automata::dfa::sparse::{impl#8}::validate",
    "regex_automata::dfa::sparse::{impl#8}::write_to",
    "regex_automata::dfa::sparse::{impl#8}::write_to_len",
    "regex_automata::dfa::sparse::{impl#9}::sparse_mut",
    "regex_automata::dfa::sparse::{impl#9}::state_mut",
    "regex_automata::dfa::special::{impl#0}::accel_len",
    "regex_automata::dfa::special::{impl#0}::accels",
    "regex_automata::dfa::special::{impl#0}::from_bytes",
    "regex_automata::dfa::special::{impl#0}::is_accel_state",
    "regex_automata::dfa::special::{impl#0}::is_dead_state",
    "regex_automata::dfa::special::{impl#0}::is_match_state",
    "regex_automata::dfa::special::{impl#0}::is_quit_state",
    "regex_automata::dfa::special::{impl#0}::is_special_state",
    "regex_automata::dfa::special::{impl#0}::is_start_state",
    "regex_automata::dfa::special::{impl#0}::match_len",
    "regex_automata::dfa::special::{impl#0}::matches",
    "regex_automata::dfa::special::{impl#0}::new",
    "regex_automata::dfa::special::{impl#0}::remap",
    "regex_automata::dfa::special::{impl#0}::set_max",
    "regex_automata::dfa::special::{impl#0}::set_no_special_start_states",
    "regex_automata::dfa::special::{impl#0}::starts",
    "regex_automata::dfa::special::{impl#0}::validate",
    "regex_automata::dfa::special::{impl#0}::validate_state_len",
    "regex_automata::dfa::special::{impl#0}::write_to",
    "regex_automata::dfa::special::{impl#0}::write_to_len",
    "regex_automata::dfa::start::{impl#0}::from_bytes",
    "regex_automata::dfa::start::{impl#0}::has_anchored",
    "regex_automata::dfa::start::{impl#0}::has_unanchored",
    "regex_automata::dfa::start::{impl#0}::write_to",
    "regex_automata::dfa::start::{impl#0}::write_to_len",
    "regex_automata::hybrid::dfa::minimum_cache_capacity",
    "regex_automata::hybrid::dfa::minimum_lazy_state_id",
    "regex_automata::hybrid::dfa::skip_empty_utf8_splits_overlapping",
    "regex_automata::hybrid::dfa::{impl#0}::always_match",
    "regex_automata::hybrid::dfa::{impl#0}::builder",
    "regex_automata::hybrid::dfa::{impl#0}::byte_classes",
    "regex_automata::hybrid::dfa::{impl#0}::config",
    "regex_automata::hybrid::dfa::{impl#0}::create_cache",
    "regex_automata::hybrid::dfa::{impl#0}::get_config",
    "regex_automata::hybrid::dfa::{impl#0}::get_nfa",
    "regex_automata::hybrid::dfa::{impl#0}::memory_usage",
    "regex_automata::hybrid::dfa::{impl#0}::never_match",
    "regex_automata::hybrid::dfa::{impl#0}::new",
    "regex_automata::hybrid::dfa::{impl#0}::new_many",
    "regex_automata::hybrid::dfa::{impl#0}::pattern_len",
    "regex_automata::hybrid::dfa::{impl#0}::reset_cache",
    "regex_automata::hybrid::dfa::{impl#0}::stride",
    "regex_automata::hybrid::dfa::{impl#0}::stride2",
    "regex_automata::hybrid::dfa::{impl#10}::get_match",
    "regex_automata::hybrid::dfa::{impl#10}::start",
    "regex_automata::hybrid::dfa::{impl#1}::try_search_fwd",
    "regex_automata::hybrid::dfa::{impl#1}::try_search_overlapping_fwd",
    "regex_automata::hybrid::dfa::{impl#1}::try_search_overlapping_rev",
    "regex_automata::hybrid::dfa::{impl#1}::try_search_rev",
    "regex_automata::hybrid::dfa::{impl#1}::try_which_overlapping_matches",
    "regex_automata::hybrid::dfa::{impl#2}::match_len",
    "regex_automata::hybrid::dfa::{impl#2}::match_pattern",
    "regex_automata::hybrid::dfa::{impl#2}::next_eoi_state",
    "regex_automata::hybrid::dfa::{impl#2}::next_state",
    "regex_automata::hybrid::dfa::{impl#2}::next_state_untagged",
    "regex_automata::hybrid::dfa::{impl#2}::next_state_untagged_unchecked",
    "regex_automata::hybrid::dfa::{impl#2}::start_state",
    "regex_automata::hybrid::dfa::{impl#2}::start_state_forward",
    "regex_automata::hybrid::dfa::{impl#2}::start_state_reverse",
    "regex_automata::hybrid::dfa::{impl#3}::clear_count",
    "regex_automata::hybrid::dfa::{impl#3}::memory_usage",
    "regex_automata::hybrid::dfa::{impl#3}::new",
    "regex_automata::hybrid::dfa::{impl#3}::reset",
    "regex_automata::hybrid::dfa::{impl#3}::search_finish",
    "regex_automata::hybrid::dfa::{impl#3}::search_start",
    "regex_automata::hybrid::dfa::{impl#3}::search_total_len",
    "regex_automata::hybrid::dfa::{impl#3}::search_update",
    "regex_automata::hybrid::dfa::{impl#4}::len",
    "regex_automata::hybrid::dfa::{impl#5}::add_builder_state",
    "regex_automata::hybrid::dfa::{impl#5}::add_state",
    "regex_automata::hybrid::dfa::{impl#5}::as_ref",
    "regex_automata::hybrid::dfa::{impl#5}::cache_next_state",
    "regex_automata::hybrid::dfa::{impl#5}::cache_start_group",
    "regex_automata::hybrid::dfa::{impl#5}::cache_start_one",
    "regex_automata::hybrid::dfa::{impl#5}::clear_cache",
    "regex_automata::hybrid::dfa::{impl#5}::get_state_builder",
    "regex_automata::hybrid::dfa::{impl#5}::init_cache",
    "regex_automata::hybrid::dfa::{impl#5}::new",
    "regex_automata::hybrid::dfa::{impl#5}::next_state_id",
    "regex_automata::hybrid::dfa::{impl#5}::put_state_builder",
    "regex_automata::hybrid::dfa::{impl#5}::reset_cache",
    "regex_automata::hybrid::dfa::{impl#5}::save_state",
    "regex_automata::hybrid::dfa::{impl#5}::saved_state_id",
    "regex_automata::hybrid::dfa::{impl#5}::set_all_transitions",
    "regex_automata::hybrid::dfa::{impl#5}::set_start_state",
    "regex_automata::hybrid::dfa::{impl#5}::set_transition",
    "regex_automata::hybrid::dfa::{impl#5}::try_clear_cache",
    "regex_automata::hybrid::dfa::{impl#6}::dead_id",
    "regex_automata::hybrid::dfa::{impl#6}::get_cached_start_id",
    "regex_automata::hybrid::dfa::{impl#6}::get_cached_state",
    "regex_automata::hybrid::dfa::{impl#6}::is_sentinel",
    "regex_automata::hybrid::dfa::{impl#6}::is_valid",
    "regex_automata::hybrid::dfa::{impl#6}::memory_usage_for_one_more_state",
    "regex_automata::hybrid::dfa::{impl#6}::new",
    "regex_automata::hybrid::dfa::{impl#6}::quit_id",
    "regex_automata::hybrid::dfa::{impl#6}::state_builder_fits_in_cache",
    "regex_automata::hybrid::dfa::{impl#6}::state_fits_in_cache",
    "regex_automata::hybrid::dfa::{impl#6}::unknown_id",
    "regex_automata::hybrid::dfa::{impl#7}::none",
    "regex_automata::hybrid::dfa::{impl#7}::take_saved",
    "regex_automata::hybrid::dfa::{impl#7}::take_to_save",
    "regex_automata::hybrid::dfa::{impl#8}::byte_classes",
    "regex_automata::hybrid::dfa::{impl#8}::byte_classes_from_nfa",
    "regex_automata::hybrid::dfa::{impl#8}::cache_capacity",
    "regex_automata::hybrid::dfa::{impl#8}::get_byte_classes",
    "regex_automata::hybrid::dfa::{impl#8}::get_cache_capacity",
    "regex_automata::hybrid::dfa::{impl#8}::get_match_kind",
    "regex_automata::hybrid::dfa::{impl#8}::get_minimum_bytes_per_state",
    "regex_automata::hybrid::dfa::{impl#8}::get_minimum_cache_capacity",
    "regex_automata::hybrid::dfa::{impl#8}::get_minimum_cache_clear_count",
    "regex_automata::hybrid::dfa::{impl#8}::get_prefilter",
    "regex_automata::hybrid::dfa::{impl#8}::get_quit",
    "regex_automata::hybrid::dfa::{impl#8}::get_skip_cache_capacity_check",
    "regex_automata::hybrid::dfa::{impl#8}::get_specialize_start_states",
    "regex_automata::hybrid::dfa::{impl#8}::get_starts_for_each_pattern",
    "regex_automata::hybrid::dfa::{impl#8}::get_unicode_word_boundary",
    "regex_automata::hybrid::dfa::{impl#8}::match_kind",
    "regex_automata::hybrid::dfa::{impl#8}::minimum_bytes_per_state",
    "regex_automata::hybrid::dfa::{impl#8}::minimum_cache_clear_count",
    "regex_automata::hybrid::dfa::{impl#8}::new",
    "regex_automata::hybrid::dfa::{impl#8}::overwrite",
    "regex_automata::hybrid::dfa::{impl#8}::prefilter",
    "regex_automata::hybrid::dfa::{impl#8}::quit",
    "regex_automata::hybrid::dfa::{impl#8}::quit_set_from_nfa",
    "regex_automata::hybrid::dfa::{impl#8}::skip_cache_capacity_check",
    "regex_automata::hybrid::dfa::{impl#8}::specialize_start_states",
    "regex_automata::hybrid::dfa::{impl#8}::starts_for_each_pattern",
    "regex_automata::hybrid::dfa::{impl#8}::unicode_word_boundary",
    "regex_automata::hybrid::dfa::{impl#9}::build",
    "regex_automata::hybrid::dfa::{impl#9}::build_from_nfa",
    "regex_automata::hybrid::dfa::{impl#9}::build_many",
    "regex_automata::hybrid::dfa::{impl#9}::configure",
    "regex_automata::hybrid::dfa::{impl#9}::new",
    "regex_automata::hybrid::dfa::{impl#9}::syntax",
    "regex_automata::hybrid::dfa::{impl#9}::thompson",
    "regex_automata::hybrid::error::{impl#0}::insufficient_cache_capacity",
    "regex_automata::hybrid::error::{impl#0}::insufficient_state_id_capacity",
    "regex_automata::hybrid::error::{impl#0}::nfa",
    "regex_automata::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode",
    "regex_automata::hybrid::error::{impl#1}::source",
    "regex_automata::hybrid::error::{impl#2}::fmt",
    "regex_automata::hybrid::error::{impl#3}::cache",
    "regex_automata::hybrid::error::{impl#3}::quit",
    "regex_automata::hybrid::error::{impl#3}::unsupported_anchored",
    "regex_automata::hybrid::error::{impl#4}::source",
    "regex_automata::hybrid::error::{impl#5}::fmt",
    "regex_automata::hybrid::error::{impl#6}::bad_efficiency",
    "regex_automata::hybrid::error::{impl#6}::too_many_cache_clears",
    "regex_automata::hybrid::error::{impl#8}::fmt",
    "regex_automata::hybrid::id::{impl#0}::as_usize_unchecked",
    "regex_automata::hybrid::id::{impl#0}::as_usize_untagged",
    "regex_automata::hybrid::id::{impl#0}::is_dead",
    "regex_automata::hybrid::id::{impl#0}::is_match",
    "regex_automata::hybrid::id::{impl#0}::is_quit",
    "regex_automata::hybrid::id::{impl#0}::is_start",
    "regex_automata::hybrid::id::{impl#0}::is_tagged",
    "regex_automata::hybrid::id::{impl#0}::is_unknown",
    "regex_automata::hybrid::id::{impl#0}::new",
    "regex_automata::hybrid::id::{impl#0}::new_unchecked",
    "regex_automata::hybrid::id::{impl#0}::to_dead",
    "regex_automata::hybrid::id::{impl#0}::to_match",
    "regex_automata::hybrid::id::{impl#0}::to_quit",
    "regex_automata::hybrid::id::{impl#0}::to_start",
    "regex_automata::hybrid::id::{impl#0}::to_unknown",
    "regex_automata::hybrid::id::{impl#1}::attempted",
    "regex_automata::hybrid::id::{impl#3}::fmt",
    "regex_automata::hybrid::regex::{impl#0}::builder",
    "regex_automata::hybrid::regex::{impl#0}::create_cache",
    "regex_automata::hybrid::regex::{impl#0}::new",
    "regex_automata::hybrid::regex::{impl#0}::new_many",
    "regex_automata::hybrid::regex::{impl#0}::reset_cache",
    "regex_automata::hybrid::regex::{impl#1}::find",
    "regex_automata::hybrid::regex::{impl#1}::find_iter",
    "regex_automata::hybrid::regex::{impl#1}::is_match",
    "regex_automata::hybrid::regex::{impl#2}::is_anchored",
    "regex_automata::hybrid::regex::{impl#2}::try_search",
    "regex_automata::hybrid::regex::{impl#3}::forward",
    "regex_automata::hybrid::regex::{impl#3}::pattern_len",
    "regex_automata::hybrid::regex::{impl#3}::reverse",
    "regex_automata::hybrid::regex::{impl#4}::next",
    "regex_automata::hybrid::regex::{impl#5}::as_parts",
    "regex_automata::hybrid::regex::{impl#5}::as_parts_mut",
    "regex_automata::hybrid::regex::{impl#5}::forward",
    "regex_automata::hybrid::regex::{impl#5}::forward_mut",
    "regex_automata::hybrid::regex::{impl#5}::memory_usage",
    "regex_automata::hybrid::regex::{impl#5}::new",
    "regex_automata::hybrid::regex::{impl#5}::reset",
    "regex_automata::hybrid::regex::{impl#5}::reverse",
    "regex_automata::hybrid::regex::{impl#5}::reverse_mut",
    "regex_automata::hybrid::regex::{impl#6}::build",
    "regex_automata::hybrid::regex::{impl#6}::build_from_dfas",
    "regex_automata::hybrid::regex::{impl#6}::build_many",
    "regex_automata::hybrid::regex::{impl#6}::dfa",
    "regex_automata::hybrid::regex::{impl#6}::new",
    "regex_automata::hybrid::regex::{impl#6}::syntax",
    "regex_automata::hybrid::regex::{impl#6}::thompson",
    "regex_automata::hybrid::regex::{impl#7}::default",
    "regex_automata::hybrid::search::eoi_fwd",
    "regex_automata::hybrid::search::eoi_rev",
    "regex_automata::hybrid::search::find_fwd",
    "regex_automata::hybrid::search::find_fwd_imp",
    "regex_automata::hybrid::search::find_overlapping_fwd",
    "regex_automata::hybrid::search::find_overlapping_fwd_imp",
    "regex_automata::hybrid::search::find_overlapping_rev",
    "regex_automata::hybrid::search::find_rev",
    "regex_automata::hybrid::search::find_rev_imp",
    "regex_automata::hybrid::search::gave_up",
    "regex_automata::hybrid::search::init_fwd",
    "regex_automata::hybrid::search::init_rev",
    "regex_automata::hybrid::search::prefilter_restart",
    "regex_automata::meta::error::{impl#0}::ast",
    "regex_automata::meta::error::{impl#0}::hir",
    "regex_automata::meta::error::{impl#0}::nfa",
    "regex_automata::meta::error::{impl#0}::pattern",
    "regex_automata::meta::error::{impl#0}::size_limit",
    "regex_automata::meta::error::{impl#0}::syntax_error",
    "regex_automata::meta::error::{impl#10}::from_offset",
    "regex_automata::meta::error::{impl#12}::fmt",
    "regex_automata::meta::error::{impl#13}::from",
    "regex_automata::meta::error::{impl#14}::from",
    "regex_automata::meta::error::{impl#1}::source",
    "regex_automata::meta::error::{impl#2}::fmt",
    "regex_automata::meta::error::{impl#4}::fmt",
    "regex_automata::meta::error::{impl#5}::from",
    "regex_automata::meta::error::{impl#6}::new",
    "regex_automata::meta::error::{impl#8}::fmt",
    "regex_automata::meta::error::{impl#9}::from",
    "regex_automata::meta::limited::dfa_eoi_rev",
    "regex_automata::meta::limited::dfa_try_search_half_rev",
    "regex_automata::meta::limited::hybrid_eoi_rev",
    "regex_automata::meta::limited::hybrid_try_search_half_rev",
    "regex_automata::meta::literal::alternation_literals",
    "regex_automata::meta::regex::{impl#0}::builder",
    "regex_automata::meta::regex::{impl#0}::config",
    "regex_automata::meta::regex::{impl#0}::new",
    "regex_automata::meta::regex::{impl#0}::new_many",
    "regex_automata::meta::regex::{impl#10}::input",
    "regex_automata::meta::regex::{impl#10}::regex",
    "regex_automata::meta::regex::{impl#11}::count",
    "regex_automata::meta::regex::{impl#11}::next",
    "regex_automata::meta::regex::{impl#13}::input",
    "regex_automata::meta::regex::{impl#14}::next",
    "regex_automata::meta::regex::{impl#16}::input",
    "regex_automata::meta::regex::{impl#17}::next",
    "regex_automata::meta::regex::{impl#17}::size_hint",
    "regex_automata::meta::regex::{impl#19}::memory_usage",
    "regex_automata::meta::regex::{impl#19}::new",
    "regex_automata::meta::regex::{impl#19}::reset",
    "regex_automata::meta::regex::{impl#1}::captures",
    "regex_automata::meta::regex::{impl#1}::captures_iter",
    "regex_automata::meta::regex::{impl#1}::find",
    "regex_automata::meta::regex::{impl#1}::find_iter",
    "regex_automata::meta::regex::{impl#1}::is_match",
    "regex_automata::meta::regex::{impl#1}::split",
    "regex_automata::meta::regex::{impl#1}::splitn",
    "regex_automata::meta::regex::{impl#20}::auto_prefilter",
    "regex_automata::meta::regex::{impl#20}::backtrack",
    "regex_automata::meta::regex::{impl#20}::byte_classes",
    "regex_automata::meta::regex::{impl#20}::dfa",
    "regex_automata::meta::regex::{impl#20}::dfa_size_limit",
    "regex_automata::meta::regex::{impl#20}::dfa_state_limit",
    "regex_automata::meta::regex::{impl#20}::get_auto_prefilter",
    "regex_automata::meta::regex::{impl#20}::get_backtrack",
    "regex_automata::meta::regex::{impl#20}::get_byte_classes",
    "regex_automata::meta::regex::{impl#20}::get_dfa",
    "regex_automata::meta::regex::{impl#20}::get_dfa_size_limit",
    "regex_automata::meta::regex::{impl#20}::get_dfa_state_limit",
    "regex_automata::meta::regex::{impl#20}::get_hybrid",
    "regex_automata::meta::regex::{impl#20}::get_hybrid_cache_capacity",
    "regex_automata::meta::regex::{impl#20}::get_line_terminator",
    "regex_automata::meta::regex::{impl#20}::get_match_kind",
    "regex_automata::meta::regex::{impl#20}::get_nfa_size_limit",
    "regex_automata::meta::regex::{impl#20}::get_onepass",
    "regex_automata::meta::regex::{impl#20}::get_onepass_size_limit",
    "regex_automata::meta::regex::{impl#20}::get_prefilter",
    "regex_automata::meta::regex::{impl#20}::get_utf8_empty",
    "regex_automata::meta::regex::{impl#20}::get_which_captures",
    "regex_automata::meta::regex::{impl#20}::hybrid",
    "regex_automata::meta::regex::{impl#20}::hybrid_cache_capacity",
    "regex_automata::meta::regex::{impl#20}::line_terminator",
    "regex_automata::meta::regex::{impl#20}::match_kind",
    "regex_automata::meta::regex::{impl#20}::new",
    "regex_automata::meta::regex::{impl#20}::nfa_size_limit",
    "regex_automata::meta::regex::{impl#20}::onepass",
    "regex_automata::meta::regex::{impl#20}::onepass_size_limit",
    "regex_automata::meta::regex::{impl#20}::overwrite",
    "regex_automata::meta::regex::{impl#20}::prefilter",
    "regex_automata::meta::regex::{impl#20}::utf8_empty",
    "regex_automata::meta::regex::{impl#20}::which_captures",
    "regex_automata::meta::regex::{impl#21}::build",
    "regex_automata::meta::regex::{impl#21}::build_from_hir",
    "regex_automata::meta::regex::{impl#21}::build_many",
    "regex_automata::meta::regex::{impl#21}::build_many_from_hir",
    "regex_automata::meta::regex::{impl#21}::configure",
    "regex_automata::meta::regex::{impl#21}::new",
    "regex_automata::meta::regex::{impl#21}::syntax",
    "regex_automata::meta::regex::{impl#2}::search",
    "regex_automata::meta::regex::{impl#2}::search_captures",
    "regex_automata::meta::regex::{impl#2}::search_half",
    "regex_automata::meta::regex::{impl#2}::search_slots",
    "regex_automata::meta::regex::{impl#2}::which_overlapping_matches",
    "regex_automata::meta::regex::{impl#3}::search_captures_with",
    "regex_automata::meta::regex::{impl#3}::search_half_with",
    "regex_automata::meta::regex::{impl#3}::search_slots_with",
    "regex_automata::meta::regex::{impl#3}::search_with",
    "regex_automata::meta::regex::{impl#3}::which_overlapping_matches_with",
    "regex_automata::meta::regex::{impl#4}::captures_len",
    "regex_automata::meta::regex::{impl#4}::create_cache",
    "regex_automata::meta::regex::{impl#4}::create_captures",
    "regex_automata::meta::regex::{impl#4}::get_config",
    "regex_automata::meta::regex::{impl#4}::group_info",
    "regex_automata::meta::regex::{impl#4}::is_accelerated",
    "regex_automata::meta::regex::{impl#4}::memory_usage",
    "regex_automata::meta::regex::{impl#4}::pattern_len",
    "regex_automata::meta::regex::{impl#4}::static_captures_len",
    "regex_automata::meta::regex::{impl#5}::clone",
    "regex_automata::meta::regex::{impl#6}::config",
    "regex_automata::meta::regex::{impl#6}::is_always_anchored_end",
    "regex_automata::meta::regex::{impl#6}::is_always_anchored_start",
    "regex_automata::meta::regex::{impl#6}::is_anchored_start",
    "regex_automata::meta::regex::{impl#6}::is_impossible",
    "regex_automata::meta::regex::{impl#6}::memory_usage",
    "regex_automata::meta::regex::{impl#6}::new",
    "regex_automata::meta::regex::{impl#6}::pattern_len",
    "regex_automata::meta::regex::{impl#6}::props",
    "regex_automata::meta::regex::{impl#6}::props_union",
    "regex_automata::meta::regex::{impl#7}::input",
    "regex_automata::meta::regex::{impl#7}::regex",
    "regex_automata::meta::regex::{impl#8}::count",
    "regex_automata::meta::regex::{impl#8}::next",
    "regex_automata::meta::reverse_inner::extract",
    "regex_automata::meta::reverse_inner::flatten",
    "regex_automata::meta::reverse_inner::prefilter",
    "regex_automata::meta::reverse_inner::top_concat",
    "regex_automata::meta::stopat::dfa_eoi_fwd",
    "regex_automata::meta::stopat::dfa_try_search_half_fwd",
    "regex_automata::meta::stopat::hybrid_eoi_fwd",
    "regex_automata::meta::stopat::hybrid_try_search_half_fwd",
    "regex_automata::meta::strategy::Strategy::create_cache",
    "regex_automata::meta::strategy::Strategy::group_info",
    "regex_automata::meta::strategy::Strategy::is_accelerated",
    "regex_automata::meta::strategy::Strategy::is_match",
    "regex_automata::meta::strategy::Strategy::memory_usage",
    "regex_automata::meta::strategy::Strategy::reset_cache",
    "regex_automata::meta::strategy::Strategy::search",
    "regex_automata::meta::strategy::Strategy::search_half",
    "regex_automata::meta::strategy::Strategy::search_slots",
    "regex_automata::meta::strategy::Strategy::which_overlapping_matches",
    "regex_automata::meta::strategy::copy_match_to_slots",
    "regex_automata::meta::strategy::new",
    "regex_automata::meta::strategy::{impl#0}::new",
    "regex_automata::meta::strategy::{impl#10}::create_cache",
    "regex_automata::meta::strategy::{impl#10}::group_info",
    "regex_automata::meta::strategy::{impl#10}::is_accelerated",
    "regex_automata::meta::strategy::{impl#10}::is_match",
    "regex_automata::meta::strategy::{impl#10}::memory_usage",
    "regex_automata::meta::strategy::{impl#10}::reset_cache",
    "regex_automata::meta::strategy::{impl#10}::search",
    "regex_automata::meta::strategy::{impl#10}::search_half",
    "regex_automata::meta::strategy::{impl#10}::search_slots",
    "regex_automata::meta::strategy::{impl#10}::which_overlapping_matches",
    "regex_automata::meta::strategy::{impl#1}::from_alternation_literals",
    "regex_automata::meta::strategy::{impl#1}::from_prefixes",
    "regex_automata::meta::strategy::{impl#2}::create_cache",
    "regex_automata::meta::strategy::{impl#2}::group_info",
    "regex_automata::meta::strategy::{impl#2}::is_accelerated",
    "regex_automata::meta::strategy::{impl#2}::is_match",
    "regex_automata::meta::strategy::{impl#2}::memory_usage",
    "regex_automata::meta::strategy::{impl#2}::reset_cache",
    "regex_automata::meta::strategy::{impl#2}::search",
    "regex_automata::meta::strategy::{impl#2}::search_half",
    "regex_automata::meta::strategy::{impl#2}::search_slots",
    "regex_automata::meta::strategy::{impl#2}::which_overlapping_matches",
    "regex_automata::meta::strategy::{impl#3}::is_capture_search_needed",
    "regex_automata::meta::strategy::{impl#3}::is_match_nofail",
    "regex_automata::meta::strategy::{impl#3}::new",
    "regex_automata::meta::strategy::{impl#3}::search_half_nofail",
    "regex_automata::meta::strategy::{impl#3}::search_nofail",
    "regex_automata::meta::strategy::{impl#3}::search_slots_nofail",
    "regex_automata::meta::strategy::{impl#3}::try_search_mayfail",
    "regex_automata::meta::strategy::{impl#4}::create_cache",
    "regex_automata::meta::strategy::{impl#4}::group_info",
    "regex_automata::meta::strategy::{impl#4}::is_accelerated",
    "regex_automata::meta::strategy::{impl#4}::is_match",
    "regex_automata::meta::strategy::{impl#4}::memory_usage",
    "regex_automata::meta::strategy::{impl#4}::reset_cache",
    "regex_automata::meta::strategy::{impl#4}::search",
    "regex_automata::meta::strategy::{impl#4}::search_half",
    "regex_automata::meta::strategy::{impl#4}::search_slots",
    "regex_automata::meta::strategy::{impl#4}::which_overlapping_matches",
    "regex_automata::meta::strategy::{impl#5}::new",
    "regex_automata::meta::strategy::{impl#5}::try_search_half_anchored_rev",
    "regex_automata::meta::strategy::{impl#6}::create_cache",
    "regex_automata::meta::strategy::{impl#6}::group_info",
    "regex_automata::meta::strategy::{impl#6}::is_accelerated",
    "regex_automata::meta::strategy::{impl#6}::is_match",
    "regex_automata::meta::strategy::{impl#6}::memory_usage",
    "regex_automata::meta::strategy::{impl#6}::reset_cache",
    "regex_automata::meta::strategy::{impl#6}::search",
    "regex_automata::meta::strategy::{impl#6}::search_half",
    "regex_automata::meta::strategy::{impl#6}::search_slots",
    "regex_automata::meta::strategy::{impl#6}::which_overlapping_matches",
    "regex_automata::meta::strategy::{impl#7}::new",
    "regex_automata::meta::strategy::{impl#7}::try_search_half_fwd",
    "regex_automata::meta::strategy::{impl#7}::try_search_half_rev_limited",
    "regex_automata::meta::strategy::{impl#7}::try_search_half_start",
    "regex_automata::meta::strategy::{impl#8}::create_cache",
    "regex_automata::meta::strategy::{impl#8}::group_info",
    "regex_automata::meta::strategy::{impl#8}::is_accelerated",
    "regex_automata::meta::strategy::{impl#8}::is_match",
    "regex_automata::meta::strategy::{impl#8}::memory_usage",
    "regex_automata::meta::strategy::{impl#8}::reset_cache",
    "regex_automata::meta::strategy::{impl#8}::search",
    "regex_automata::meta::strategy::{impl#8}::search_half",
    "regex_automata::meta::strategy::{impl#8}::search_slots",
    "regex_automata::meta::strategy::{impl#8}::which_overlapping_matches",
    "regex_automata::meta::strategy::{impl#9}::new",
    "regex_automata::meta::strategy::{impl#9}::try_search_full",
    "regex_automata::meta::strategy::{impl#9}::try_search_half_fwd_stopat",
    "regex_automata::meta::strategy::{impl#9}::try_search_half_rev_limited",
    "regex_automata::meta::wrappers::{impl#0}::create_cache",
    "regex_automata::meta::wrappers::{impl#0}::get",
    "regex_automata::meta::wrappers::{impl#0}::new",
    "regex_automata::meta::wrappers::{impl#10}::new",
    "regex_automata::meta::wrappers::{impl#10}::try_search",
    "regex_automata::meta::wrappers::{impl#10}::try_search_half_fwd",
    "regex_automata::meta::wrappers::{impl#10}::try_search_half_fwd_stopat",
    "regex_automata::meta::wrappers::{impl#10}::try_search_half_rev",
    "regex_automata::meta::wrappers::{impl#10}::try_search_half_rev_limited",
    "regex_automata::meta::wrappers::{impl#10}::try_which_overlapping_matches",
    "regex_automata::meta::wrappers::{impl#11}::memory_usage",
    "regex_automata::meta::wrappers::{impl#11}::new",
    "regex_automata::meta::wrappers::{impl#11}::none",
    "regex_automata::meta::wrappers::{impl#11}::reset",
    "regex_automata::meta::wrappers::{impl#12}::get",
    "regex_automata::meta::wrappers::{impl#12}::is_some",
    "regex_automata::meta::wrappers::{impl#12}::memory_usage",
    "regex_automata::meta::wrappers::{impl#12}::new",
    "regex_automata::meta::wrappers::{impl#12}::none",
    "regex_automata::meta::wrappers::{impl#13}::memory_usage",
    "regex_automata::meta::wrappers::{impl#13}::new",
    "regex_automata::meta::wrappers::{impl#13}::try_search",
    "regex_automata::meta::wrappers::{impl#13}::try_search_half_fwd",
    "regex_automata::meta::wrappers::{impl#13}::try_search_half_fwd_stopat",
    "regex_automata::meta::wrappers::{impl#13}::try_search_half_rev",
    "regex_automata::meta::wrappers::{impl#13}::try_search_half_rev_limited",
    "regex_automata::meta::wrappers::{impl#13}::try_which_overlapping_matches",
    "regex_automata::meta::wrappers::{impl#14}::create_cache",
    "regex_automata::meta::wrappers::{impl#14}::get",
    "regex_automata::meta::wrappers::{impl#14}::new",
    "regex_automata::meta::wrappers::{impl#14}::none",
    "regex_automata::meta::wrappers::{impl#15}::new",
    "regex_automata::meta::wrappers::{impl#15}::try_search_half_rev_limited",
    "regex_automata::meta::wrappers::{impl#16}::memory_usage",
    "regex_automata::meta::wrappers::{impl#16}::new",
    "regex_automata::meta::wrappers::{impl#16}::none",
    "regex_automata::meta::wrappers::{impl#16}::reset",
    "regex_automata::meta::wrappers::{impl#17}::get",
    "regex_automata::meta::wrappers::{impl#17}::is_some",
    "regex_automata::meta::wrappers::{impl#17}::memory_usage",
    "regex_automata::meta::wrappers::{impl#17}::new",
    "regex_automata::meta::wrappers::{impl#17}::none",
    "regex_automata::meta::wrappers::{impl#18}::memory_usage",
    "regex_automata::meta::wrappers::{impl#18}::new",
    "regex_automata::meta::wrappers::{impl#18}::try_search_half_rev_limited",
    "regex_automata::meta::wrappers::{impl#1}::is_match",
    "regex_automata::meta::wrappers::{impl#1}::new",
    "regex_automata::meta::wrappers::{impl#1}::search_slots",
    "regex_automata::meta::wrappers::{impl#1}::which_overlapping_matches",
    "regex_automata::meta::wrappers::{impl#2}::memory_usage",
    "regex_automata::meta::wrappers::{impl#2}::new",
    "regex_automata::meta::wrappers::{impl#2}::none",
    "regex_automata::meta::wrappers::{impl#2}::reset",
    "regex_automata::meta::wrappers::{impl#3}::create_cache",
    "regex_automata::meta::wrappers::{impl#3}::get",
    "regex_automata::meta::wrappers::{impl#3}::new",
    "regex_automata::meta::wrappers::{impl#4}::is_match",
    "regex_automata::meta::wrappers::{impl#4}::max_haystack_len",
    "regex_automata::meta::wrappers::{impl#4}::new",
    "regex_automata::meta::wrappers::{impl#4}::search_slots",
    "regex_automata::meta::wrappers::{impl#5}::memory_usage",
    "regex_automata::meta::wrappers::{impl#5}::new",
    "regex_automata::meta::wrappers::{impl#5}::none",
    "regex_automata::meta::wrappers::{impl#5}::reset",
    "regex_automata::meta::wrappers::{impl#6}::create_cache",
    "regex_automata::meta::wrappers::{impl#6}::get",
    "regex_automata::meta::wrappers::{impl#6}::memory_usage",
    "regex_automata::meta::wrappers::{impl#6}::new",
    "regex_automata::meta::wrappers::{impl#7}::get_nfa",
    "regex_automata::meta::wrappers::{impl#7}::memory_usage",
    "regex_automata::meta::wrappers::{impl#7}::new",
    "regex_automata::meta::wrappers::{impl#7}::search_slots",
    "regex_automata::meta::wrappers::{impl#8}::memory_usage",
    "regex_automata::meta::wrappers::{impl#8}::new",
    "regex_automata::meta::wrappers::{impl#8}::none",
    "regex_automata::meta::wrappers::{impl#8}::reset",
    "regex_automata::meta::wrappers::{impl#9}::create_cache",
    "regex_automata::meta::wrappers::{impl#9}::get",
    "regex_automata::meta::wrappers::{impl#9}::is_some",
    "regex_automata::meta::wrappers::{impl#9}::new",
    "regex_automata::meta::wrappers::{impl#9}::none",
    "regex_automata::nfa::thompson::backtrack::div_ceil",
    "regex_automata::nfa::thompson::backtrack::min_visited_capacity",
    "regex_automata::nfa::thompson::backtrack::{impl#0}::get_prefilter",
    "regex_automata::nfa::thompson::backtrack::{impl#0}::get_visited_capacity",
    "regex_automata::nfa::thompson::backtrack::{impl#0}::new",
    "regex_automata::nfa::thompson::backtrack::{impl#0}::overwrite",
    "regex_automata::nfa::thompson::backtrack::{impl#0}::prefilter",
    "regex_automata::nfa::thompson::backtrack::{impl#0}::visited_capacity",
    "regex_automata::nfa::thompson::backtrack::{impl#1}::build",
    "regex_automata::nfa::thompson::backtrack::{impl#1}::build_from_nfa",
    "regex_automata::nfa::thompson::backtrack::{impl#1}::build_many",
    "regex_automata::nfa::thompson::backtrack::{impl#1}::configure",
    "regex_automata::nfa::thompson::backtrack::{impl#1}::new",
    "regex_automata::nfa::thompson::backtrack::{impl#1}::syntax",
    "regex_automata::nfa::thompson::backtrack::{impl#1}::thompson",
    "regex_automata::nfa::thompson::backtrack::{impl#2}::always_match",
    "regex_automata::nfa::thompson::backtrack::{impl#2}::builder",
    "regex_automata::nfa::thompson::backtrack::{impl#2}::config",
    "regex_automata::nfa::thompson::backtrack::{impl#2}::create_cache",
    "regex_automata::nfa::thompson::backtrack::{impl#2}::create_captures",
    "regex_automata::nfa::thompson::backtrack::{impl#2}::get_config",
    "regex_automata::nfa::thompson::backtrack::{impl#2}::get_nfa",
    "regex_automata::nfa::thompson::backtrack::{impl#2}::max_haystack_len",
    "regex_automata::nfa::thompson::backtrack::{impl#2}::never_match",
    "regex_automata::nfa::thompson::backtrack::{impl#2}::new",
    "regex_automata::nfa::thompson::backtrack::{impl#2}::new_from_nfa",
    "regex_automata::nfa::thompson::backtrack::{impl#2}::new_many",
    "regex_automata::nfa::thompson::backtrack::{impl#2}::pattern_len",
    "regex_automata::nfa::thompson::backtrack::{impl#2}::reset_cache",
    "regex_automata::nfa::thompson::backtrack::{impl#3}::try_captures",
    "regex_automata::nfa::thompson::backtrack::{impl#3}::try_captures_iter",
    "regex_automata::nfa::thompson::backtrack::{impl#3}::try_find",
    "regex_automata::nfa::thompson::backtrack::{impl#3}::try_find_iter",
    "regex_automata::nfa::thompson::backtrack::{impl#3}::try_is_match",
    "regex_automata::nfa::thompson::backtrack::{impl#4}::backtrack",
    "regex_automata::nfa::thompson::backtrack::{impl#4}::search_imp",
    "regex_automata::nfa::thompson::backtrack::{impl#4}::step",
    "regex_automata::nfa::thompson::backtrack::{impl#4}::try_search",
    "regex_automata::nfa::thompson::backtrack::{impl#4}::try_search_slots",
    "regex_automata::nfa::thompson::backtrack::{impl#4}::try_search_slots_imp",
    "regex_automata::nfa::thompson::backtrack::{impl#5}::next",
    "regex_automata::nfa::thompson::backtrack::{impl#6}::next",
    "regex_automata::nfa::thompson::backtrack::{impl#7}::memory_usage",
    "regex_automata::nfa::thompson::backtrack::{impl#7}::new",
    "regex_automata::nfa::thompson::backtrack::{impl#7}::reset",
    "regex_automata::nfa::thompson::backtrack::{impl#7}::setup_search",
    "regex_automata::nfa::thompson::backtrack::{impl#8}::insert",
    "regex_automata::nfa::thompson::backtrack::{impl#8}::memory_usage",
    "regex_automata::nfa::thompson::backtrack::{impl#8}::new",
    "regex_automata::nfa::thompson::backtrack::{impl#8}::reset",
    "regex_automata::nfa::thompson::backtrack::{impl#8}::setup_search",
    "regex_automata::nfa::thompson::builder::{impl#0}::goto",
    "regex_automata::nfa::thompson::builder::{impl#0}::memory_usage",
    "regex_automata::nfa::thompson::builder::{impl#1}::add",
    "regex_automata::nfa::thompson::builder::{impl#1}::add_capture_end",
    "regex_automata::nfa::thompson::builder::{impl#1}::add_capture_start",
    "regex_automata::nfa::thompson::builder::{impl#1}::add_empty",
    "regex_automata::nfa::thompson::builder::{impl#1}::add_fail",
    "regex_automata::nfa::thompson::builder::{impl#1}::add_look",
    "regex_automata::nfa::thompson::builder::{impl#1}::add_match",
    "regex_automata::nfa::thompson::builder::{impl#1}::add_range",
    "regex_automata::nfa::thompson::builder::{impl#1}::add_sparse",
    "regex_automata::nfa::thompson::builder::{impl#1}::add_union",
    "regex_automata::nfa::thompson::builder::{impl#1}::add_union_reverse",
    "regex_automata::nfa::thompson::builder::{impl#1}::build",
    "regex_automata::nfa::thompson::builder::{impl#1}::check_size_limit",
    "regex_automata::nfa::thompson::builder::{impl#1}::clear",
    "regex_automata::nfa::thompson::builder::{impl#1}::current_pattern_id",
    "regex_automata::nfa::thompson::builder::{impl#1}::finish_pattern",
    "regex_automata::nfa::thompson::builder::{impl#1}::get_look_matcher",
    "regex_automata::nfa::thompson::builder::{impl#1}::get_reverse",
    "regex_automata::nfa::thompson::builder::{impl#1}::get_size_limit",
    "regex_automata::nfa::thompson::builder::{impl#1}::get_utf8",
    "regex_automata::nfa::thompson::builder::{impl#1}::memory_usage",
    "regex_automata::nfa::thompson::builder::{impl#1}::new",
    "regex_automata::nfa::thompson::builder::{impl#1}::patch",
    "regex_automata::nfa::thompson::builder::{impl#1}::pattern_len",
    "regex_automata::nfa::thompson::builder::{impl#1}::set_look_matcher",
    "regex_automata::nfa::thompson::builder::{impl#1}::set_reverse",
    "regex_automata::nfa::thompson::builder::{impl#1}::set_size_limit",
    "regex_automata::nfa::thompson::builder::{impl#1}::set_utf8",
    "regex_automata::nfa::thompson::builder::{impl#1}::start_pattern",
    "regex_automata::nfa::thompson::compiler::tests::build",
    "regex_automata::nfa::thompson::compiler::tests::pid",
    "regex_automata::nfa::thompson::compiler::tests::s_bin_union",
    "regex_automata::nfa::thompson::compiler::tests::s_byte",
    "regex_automata::nfa::thompson::compiler::tests::s_cap",
    "regex_automata::nfa::thompson::compiler::tests::s_fail",
    "regex_automata::nfa::thompson::compiler::tests::s_look",
    "regex_automata::nfa::thompson::compiler::tests::s_match",
    "regex_automata::nfa::thompson::compiler::tests::s_range",
    "regex_automata::nfa::thompson::compiler::tests::s_sparse",
    "regex_automata::nfa::thompson::compiler::tests::s_union",
    "regex_automata::nfa::thompson::compiler::tests::sid",
    "regex_automata::nfa::thompson::compiler::{impl#0}::captures",
    "regex_automata::nfa::thompson::compiler::{impl#0}::get_captures",
    "regex_automata::nfa::thompson::compiler::{impl#0}::get_look_matcher",
    "regex_automata::nfa::thompson::compiler::{impl#0}::get_nfa_size_limit",
    "regex_automata::nfa::thompson::compiler::{impl#0}::get_reverse",
    "regex_automata::nfa::thompson::compiler::{impl#0}::get_shrink",
    "regex_automata::nfa::thompson::compiler::{impl#0}::get_unanchored_prefix",
    "regex_automata::nfa::thompson::compiler::{impl#0}::get_utf8",
    "regex_automata::nfa::thompson::compiler::{impl#0}::get_which_captures",
    "regex_automata::nfa::thompson::compiler::{impl#0}::look_matcher",
    "regex_automata::nfa::thompson::compiler::{impl#0}::new",
    "regex_automata::nfa::thompson::compiler::{impl#0}::nfa_size_limit",
    "regex_automata::nfa::thompson::compiler::{impl#0}::overwrite",
    "regex_automata::nfa::thompson::compiler::{impl#0}::reverse",
    "regex_automata::nfa::thompson::compiler::{impl#0}::shrink",
    "regex_automata::nfa::thompson::compiler::{impl#0}::unanchored_prefix",
    "regex_automata::nfa::thompson::compiler::{impl#0}::utf8",
    "regex_automata::nfa::thompson::compiler::{impl#0}::which_captures",
    "regex_automata::nfa::thompson::compiler::{impl#1}::default",
    "regex_automata::nfa::thompson::compiler::{impl#2}::is_any",
    "regex_automata::nfa::thompson::compiler::{impl#2}::is_none",
    "regex_automata::nfa::thompson::compiler::{impl#3}::build",
    "regex_automata::nfa::thompson::compiler::{impl#3}::build_from_hir",
    "regex_automata::nfa::thompson::compiler::{impl#3}::build_many",
    "regex_automata::nfa::thompson::compiler::{impl#3}::build_many_from_hir",
    "regex_automata::nfa::thompson::compiler::{impl#3}::configure",
    "regex_automata::nfa::thompson::compiler::{impl#3}::new",
    "regex_automata::nfa::thompson::compiler::{impl#3}::syntax",
    "regex_automata::nfa::thompson::compiler::{impl#4}::add_capture_end",
    "regex_automata::nfa::thompson::compiler::{impl#4}::add_capture_start",
    "regex_automata::nfa::thompson::compiler::{impl#4}::add_empty",
    "regex_automata::nfa::thompson::compiler::{impl#4}::add_fail",
    "regex_automata::nfa::thompson::compiler::{impl#4}::add_look",
    "regex_automata::nfa::thompson::compiler::{impl#4}::add_match",
    "regex_automata::nfa::thompson::compiler::{impl#4}::add_range",
    "regex_automata::nfa::thompson::compiler::{impl#4}::add_sparse",
    "regex_automata::nfa::thompson::compiler::{impl#4}::add_union",
    "regex_automata::nfa::thompson::compiler::{impl#4}::add_union_reverse",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_alt_iter",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_alt_slice",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_at_least",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_bounded",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_byte_class",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_cap",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_concat",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_empty",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_exactly",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_fail",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_literal",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_look",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_range",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_repetition",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_unicode_class",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_unicode_class_reverse_with_suffix",
    "regex_automata::nfa::thompson::compiler::{impl#4}::c_zero_or_one",
    "regex_automata::nfa::thompson::compiler::{impl#4}::compile",
    "regex_automata::nfa::thompson::compiler::{impl#4}::finish_pattern",
    "regex_automata::nfa::thompson::compiler::{impl#4}::is_reverse",
    "regex_automata::nfa::thompson::compiler::{impl#4}::patch",
    "regex_automata::nfa::thompson::compiler::{impl#4}::start_pattern",
    "regex_automata::nfa::thompson::compiler::{impl#5}::clear",
    "regex_automata::nfa::thompson::compiler::{impl#5}::new",
    "regex_automata::nfa::thompson::compiler::{impl#6}::add",
    "regex_automata::nfa::thompson::compiler::{impl#6}::add_empty",
    "regex_automata::nfa::thompson::compiler::{impl#6}::add_suffix",
    "regex_automata::nfa::thompson::compiler::{impl#6}::compile",
    "regex_automata::nfa::thompson::compiler::{impl#6}::compile_from",
    "regex_automata::nfa::thompson::compiler::{impl#6}::finish",
    "regex_automata::nfa::thompson::compiler::{impl#6}::new",
    "regex_automata::nfa::thompson::compiler::{impl#6}::pop_freeze",
    "regex_automata::nfa::thompson::compiler::{impl#6}::pop_root",
    "regex_automata::nfa::thompson::compiler::{impl#6}::top_last_freeze",
    "regex_automata::nfa::thompson::compiler::{impl#7}::set_last_transition",
    "regex_automata::nfa::thompson::error::{impl#0}::captures",
    "regex_automata::nfa::thompson::error::{impl#0}::exceeded_size_limit",
    "regex_automata::nfa::thompson::error::{impl#0}::invalid_capture_index",
    "regex_automata::nfa::thompson::error::{impl#0}::kind",
    "regex_automata::nfa::thompson::error::{impl#0}::size_limit",
    "regex_automata::nfa::thompson::error::{impl#0}::syntax",
    "regex_automata::nfa::thompson::error::{impl#0}::too_many_patterns",
    "regex_automata::nfa::thompson::error::{impl#0}::too_many_states",
    "regex_automata::nfa::thompson::error::{impl#0}::unsupported_captures",
    "regex_automata::nfa::thompson::error::{impl#0}::word",
    "regex_automata::nfa::thompson::error::{impl#1}::source",
    "regex_automata::nfa::thompson::error::{impl#2}::fmt",
    "regex_automata::nfa::thompson::literal_trie::{impl#0}::add",
    "regex_automata::nfa::thompson::literal_trie::{impl#0}::compile",
    "regex_automata::nfa::thompson::literal_trie::{impl#0}::compile_state_to_hir",
    "regex_automata::nfa::thompson::literal_trie::{impl#0}::compile_to_hir",
    "regex_automata::nfa::thompson::literal_trie::{impl#0}::forward",
    "regex_automata::nfa::thompson::literal_trie::{impl#0}::get_or_add_state",
    "regex_automata::nfa::thompson::literal_trie::{impl#0}::reverse",
    "regex_automata::nfa::thompson::literal_trie::{impl#1}::fmt",
    "regex_automata::nfa::thompson::literal_trie::{impl#2}::new",
    "regex_automata::nfa::thompson::literal_trie::{impl#3}::active_chunk",
    "regex_automata::nfa::thompson::literal_trie::{impl#3}::active_chunk_start",
    "regex_automata::nfa::thompson::literal_trie::{impl#3}::add_match",
    "regex_automata::nfa::thompson::literal_trie::{impl#3}::chunks",
    "regex_automata::nfa::thompson::literal_trie::{impl#3}::is_leaf",
    "regex_automata::nfa::thompson::literal_trie::{impl#4}::fmt",
    "regex_automata::nfa::thompson::literal_trie::{impl#5}::next",
    "regex_automata::nfa::thompson::literal_trie::{impl#6}::fmt",
    "regex_automata::nfa::thompson::map::{impl#0}::clear",
    "regex_automata::nfa::thompson::map::{impl#0}::get",
    "regex_automata::nfa::thompson::map::{impl#0}::hash",
    "regex_automata::nfa::thompson::map::{impl#0}::new",
    "regex_automata::nfa::thompson::map::{impl#0}::set",
    "regex_automata::nfa::thompson::map::{impl#1}::clear",
    "regex_automata::nfa::thompson::map::{impl#1}::get",
    "regex_automata::nfa::thompson::map::{impl#1}::hash",
    "regex_automata::nfa::thompson::map::{impl#1}::new",
    "regex_automata::nfa::thompson::map::{impl#1}::set",
    "regex_automata::nfa::thompson::nfa::{impl#0}::always_match",
    "regex_automata::nfa::thompson::nfa::{impl#0}::byte_class_set",
    "regex_automata::nfa::thompson::nfa::{impl#0}::byte_classes",
    "regex_automata::nfa::thompson::nfa::{impl#0}::compiler",
    "regex_automata::nfa::thompson::nfa::{impl#0}::config",
    "regex_automata::nfa::thompson::nfa::{impl#0}::group_info",
    "regex_automata::nfa::thompson::nfa::{impl#0}::has_capture",
    "regex_automata::nfa::thompson::nfa::{impl#0}::has_empty",
    "regex_automata::nfa::thompson::nfa::{impl#0}::is_always_start_anchored",
    "regex_automata::nfa::thompson::nfa::{impl#0}::is_reverse",
    "regex_automata::nfa::thompson::nfa::{impl#0}::is_utf8",
    "regex_automata::nfa::thompson::nfa::{impl#0}::look_matcher",
    "regex_automata::nfa::thompson::nfa::{impl#0}::look_set_any",
    "regex_automata::nfa::thompson::nfa::{impl#0}::look_set_prefix_any",
    "regex_automata::nfa::thompson::nfa::{impl#0}::memory_usage",
    "regex_automata::nfa::thompson::nfa::{impl#0}::never_match",
    "regex_automata::nfa::thompson::nfa::{impl#0}::new",
    "regex_automata::nfa::thompson::nfa::{impl#0}::new_many",
    "regex_automata::nfa::thompson::nfa::{impl#0}::pattern_len",
    "regex_automata::nfa::thompson::nfa::{impl#0}::patterns",
    "regex_automata::nfa::thompson::nfa::{impl#0}::start_anchored",
    "regex_automata::nfa::thompson::nfa::{impl#0}::start_pattern",
    "regex_automata::nfa::thompson::nfa::{impl#0}::start_unanchored",
    "regex_automata::nfa::thompson::nfa::{impl#0}::state",
    "regex_automata::nfa::thompson::nfa::{impl#0}::states",
    "regex_automata::nfa::thompson::nfa::{impl#10}::next",
    "regex_automata::nfa::thompson::nfa::{impl#1}::fmt",
    "regex_automata::nfa::thompson::nfa::{impl#2}::add",
    "regex_automata::nfa::thompson::nfa::{impl#2}::group_info",
    "regex_automata::nfa::thompson::nfa::{impl#2}::into_nfa",
    "regex_automata::nfa::thompson::nfa::{impl#2}::remap",
    "regex_automata::nfa::thompson::nfa::{impl#2}::set_captures",
    "regex_automata::nfa::thompson::nfa::{impl#2}::set_look_matcher",
    "regex_automata::nfa::thompson::nfa::{impl#2}::set_reverse",
    "regex_automata::nfa::thompson::nfa::{impl#2}::set_starts",
    "regex_automata::nfa::thompson::nfa::{impl#2}::set_utf8",
    "regex_automata::nfa::thompson::nfa::{impl#3}::fmt",
    "regex_automata::nfa::thompson::nfa::{impl#4}::is_epsilon",
    "regex_automata::nfa::thompson::nfa::{impl#4}::memory_usage",
    "regex_automata::nfa::thompson::nfa::{impl#4}::remap",
    "regex_automata::nfa::thompson::nfa::{impl#5}::fmt",
    "regex_automata::nfa::thompson::nfa::{impl#6}::matches",
    "regex_automata::nfa::thompson::nfa::{impl#6}::matches_byte",
    "regex_automata::nfa::thompson::nfa::{impl#6}::matches_unit",
    "regex_automata::nfa::thompson::nfa::{impl#7}::iter",
    "regex_automata::nfa::thompson::nfa::{impl#7}::matches",
    "regex_automata::nfa::thompson::nfa::{impl#7}::matches_byte",
    "regex_automata::nfa::thompson::nfa::{impl#7}::matches_unit",
    "regex_automata::nfa::thompson::nfa::{impl#8}::matches",
    "regex_automata::nfa::thompson::nfa::{impl#8}::matches_byte",
    "regex_automata::nfa::thompson::nfa::{impl#8}::matches_unit",
    "regex_automata::nfa::thompson::nfa::{impl#9}::fmt",
    "regex_automata::nfa::thompson::pikevm::{impl#0}::get_match_kind",
    "regex_automata::nfa::thompson::pikevm::{impl#0}::get_prefilter",
    "regex_automata::nfa::thompson::pikevm::{impl#0}::match_kind",
    "regex_automata::nfa::thompson::pikevm::{impl#0}::new",
    "regex_automata::nfa::thompson::pikevm::{impl#0}::overwrite",
    "regex_automata::nfa::thompson::pikevm::{impl#0}::prefilter",
    "regex_automata::nfa::thompson::pikevm::{impl#10}::all_absent",
    "regex_automata::nfa::thompson::pikevm::{impl#10}::for_state",
    "regex_automata::nfa::thompson::pikevm::{impl#10}::memory_usage",
    "regex_automata::nfa::thompson::pikevm::{impl#10}::new",
    "regex_automata::nfa::thompson::pikevm::{impl#10}::reset",
    "regex_automata::nfa::thompson::pikevm::{impl#10}::setup_search",
    "regex_automata::nfa::thompson::pikevm::{impl#11}::empty",
    "regex_automata::nfa::thompson::pikevm::{impl#11}::eprint",
    "regex_automata::nfa::thompson::pikevm::{impl#11}::record_closure",
    "regex_automata::nfa::thompson::pikevm::{impl#11}::record_set_insert",
    "regex_automata::nfa::thompson::pikevm::{impl#11}::record_stack_push",
    "regex_automata::nfa::thompson::pikevm::{impl#11}::record_state_set",
    "regex_automata::nfa::thompson::pikevm::{impl#11}::record_step",
    "regex_automata::nfa::thompson::pikevm::{impl#11}::reset",
    "regex_automata::nfa::thompson::pikevm::{impl#1}::build",
    "regex_automata::nfa::thompson::pikevm::{impl#1}::build_from_nfa",
    "regex_automata::nfa::thompson::pikevm::{impl#1}::build_many",
    "regex_automata::nfa::thompson::pikevm::{impl#1}::configure",
    "regex_automata::nfa::thompson::pikevm::{impl#1}::new",
    "regex_automata::nfa::thompson::pikevm::{impl#1}::syntax",
    "regex_automata::nfa::thompson::pikevm::{impl#1}::thompson",
    "regex_automata::nfa::thompson::pikevm::{impl#2}::always_match",
    "regex_automata::nfa::thompson::pikevm::{impl#2}::builder",
    "regex_automata::nfa::thompson::pikevm::{impl#2}::config",
    "regex_automata::nfa::thompson::pikevm::{impl#2}::create_cache",
    "regex_automata::nfa::thompson::pikevm::{impl#2}::create_captures",
    "regex_automata::nfa::thompson::pikevm::{impl#2}::get_config",
    "regex_automata::nfa::thompson::pikevm::{impl#2}::get_nfa",
    "regex_automata::nfa::thompson::pikevm::{impl#2}::never_match",
    "regex_automata::nfa::thompson::pikevm::{impl#2}::new",
    "regex_automata::nfa::thompson::pikevm::{impl#2}::new_from_nfa",
    "regex_automata::nfa::thompson::pikevm::{impl#2}::new_many",
    "regex_automata::nfa::thompson::pikevm::{impl#2}::pattern_len",
    "regex_automata::nfa::thompson::pikevm::{impl#2}::reset_cache",
    "regex_automata::nfa::thompson::pikevm::{impl#3}::captures",
    "regex_automata::nfa::thompson::pikevm::{impl#3}::captures_iter",
    "regex_automata::nfa::thompson::pikevm::{impl#3}::find",
    "regex_automata::nfa::thompson::pikevm::{impl#3}::find_iter",
    "regex_automata::nfa::thompson::pikevm::{impl#3}::is_match",
    "regex_automata::nfa::thompson::pikevm::{impl#4}::search",
    "regex_automata::nfa::thompson::pikevm::{impl#4}::search_slots",
    "regex_automata::nfa::thompson::pikevm::{impl#4}::search_slots_imp",
    "regex_automata::nfa::thompson::pikevm::{impl#4}::which_overlapping_matches",
    "regex_automata::nfa::thompson::pikevm::{impl#5}::epsilon_closure",
    "regex_automata::nfa::thompson::pikevm::{impl#5}::epsilon_closure_explore",
    "regex_automata::nfa::thompson::pikevm::{impl#5}::next",
    "regex_automata::nfa::thompson::pikevm::{impl#5}::nexts",
    "regex_automata::nfa::thompson::pikevm::{impl#5}::nexts_overlapping",
    "regex_automata::nfa::thompson::pikevm::{impl#5}::search_imp",
    "regex_automata::nfa::thompson::pikevm::{impl#5}::start_config",
    "regex_automata::nfa::thompson::pikevm::{impl#5}::which_overlapping_imp",
    "regex_automata::nfa::thompson::pikevm::{impl#6}::next",
    "regex_automata::nfa::thompson::pikevm::{impl#7}::next",
    "regex_automata::nfa::thompson::pikevm::{impl#8}::memory_usage",
    "regex_automata::nfa::thompson::pikevm::{impl#8}::new",
    "regex_automata::nfa::thompson::pikevm::{impl#8}::reset",
    "regex_automata::nfa::thompson::pikevm::{impl#8}::setup_search",
    "regex_automata::nfa::thompson::pikevm::{impl#9}::memory_usage",
    "regex_automata::nfa::thompson::pikevm::{impl#9}::new",
    "regex_automata::nfa::thompson::pikevm::{impl#9}::reset",
    "regex_automata::nfa::thompson::pikevm::{impl#9}::setup_search",
    "regex_automata::nfa::thompson::range_trie::intersects",
    "regex_automata::nfa::thompson::range_trie::tests::r",
    "regex_automata::nfa::thompson::range_trie::tests::split",
    "regex_automata::nfa::thompson::range_trie::tests::split_maybe",
    "regex_automata::nfa::thompson::range_trie::{impl#0}::add_empty",
    "regex_automata::nfa::thompson::range_trie::{impl#0}::add_transition",
    "regex_automata::nfa::thompson::range_trie::{impl#0}::add_transition_at",
    "regex_automata::nfa::thompson::range_trie::{impl#0}::clear",
    "regex_automata::nfa::thompson::range_trie::{impl#0}::duplicate",
    "regex_automata::nfa::thompson::range_trie::{impl#0}::insert",
    "regex_automata::nfa::thompson::range_trie::{impl#0}::iter",
    "regex_automata::nfa::thompson::range_trie::{impl#0}::new",
    "regex_automata::nfa::thompson::range_trie::{impl#0}::set_transition_at",
    "regex_automata::nfa::thompson::range_trie::{impl#0}::state",
    "regex_automata::nfa::thompson::range_trie::{impl#0}::state_mut",
    "regex_automata::nfa::thompson::range_trie::{impl#1}::clear",
    "regex_automata::nfa::thompson::range_trie::{impl#1}::find",
    "regex_automata::nfa::thompson::range_trie::{impl#1}::find::binary_search",
    "regex_automata::nfa::thompson::range_trie::{impl#2}::new",
    "regex_automata::nfa::thompson::range_trie::{impl#2}::push",
    "regex_automata::nfa::thompson::range_trie::{impl#2}::ranges",
    "regex_automata::nfa::thompson::range_trie::{impl#2}::state_id",
    "regex_automata::nfa::thompson::range_trie::{impl#3}::as_slice",
    "regex_automata::nfa::thompson::range_trie::{impl#3}::new",
    "regex_automata::nfa::thompson::range_trie::{impl#3}::parts1",
    "regex_automata::nfa::thompson::range_trie::{impl#3}::parts2",
    "regex_automata::nfa::thompson::range_trie::{impl#3}::parts3",
    "regex_automata::nfa::thompson::range_trie::{impl#4}::fmt",
    "regex_automata::nfa::thompson::range_trie::{impl#5}::fmt",
    "regex_automata::nfa::thompson::range_trie::{impl#6}::fmt",
    "regex_automata::util::alphabet::{impl#0}::as_eoi",
    "regex_automata::util::alphabet::{impl#0}::as_u8",
    "regex_automata::util::alphabet::{impl#0}::as_usize",
    "regex_automata::util::alphabet::{impl#0}::eoi",
    "regex_automata::util::alphabet::{impl#0}::is_byte",
    "regex_automata::util::alphabet::{impl#0}::is_eoi",
    "regex_automata::util::alphabet::{impl#0}::is_word_byte",
    "regex_automata::util::alphabet::{impl#0}::u8",
    "regex_automata::util::alphabet::{impl#10}::add_set",
    "regex_automata::util::alphabet::{impl#10}::byte_classes",
    "regex_automata::util::alphabet::{impl#10}::empty",
    "regex_automata::util::alphabet::{impl#10}::set_range",
    "regex_automata::util::alphabet::{impl#11}::add",
    "regex_automata::util::alphabet::{impl#11}::contains",
    "regex_automata::util::alphabet::{impl#11}::contains_range",
    "regex_automata::util::alphabet::{impl#11}::empty",
    "regex_automata::util::alphabet::{impl#11}::from_bytes",
    "regex_automata::util::alphabet::{impl#11}::is_empty",
    "regex_automata::util::alphabet::{impl#11}::iter",
    "regex_automata::util::alphabet::{impl#11}::iter_ranges",
    "regex_automata::util::alphabet::{impl#11}::remove",
    "regex_automata::util::alphabet::{impl#11}::write_to",
    "regex_automata::util::alphabet::{impl#11}::write_to_len",
    "regex_automata::util::alphabet::{impl#12}::fmt",
    "regex_automata::util::alphabet::{impl#13}::next",
    "regex_automata::util::alphabet::{impl#14}::next",
    "regex_automata::util::alphabet::{impl#1}::fmt",
    "regex_automata::util::alphabet::{impl#2}::alphabet_len",
    "regex_automata::util::alphabet::{impl#2}::element_ranges",
    "regex_automata::util::alphabet::{impl#2}::elements",
    "regex_automata::util::alphabet::{impl#2}::empty",
    "regex_automata::util::alphabet::{impl#2}::eoi",
    "regex_automata::util::alphabet::{impl#2}::from_bytes",
    "regex_automata::util::alphabet::{impl#2}::get",
    "regex_automata::util::alphabet::{impl#2}::get_by_unit",
    "regex_automata::util::alphabet::{impl#2}::is_singleton",
    "regex_automata::util::alphabet::{impl#2}::iter",
    "regex_automata::util::alphabet::{impl#2}::representatives",
    "regex_automata::util::alphabet::{impl#2}::set",
    "regex_automata::util::alphabet::{impl#2}::singletons",
    "regex_automata::util::alphabet::{impl#2}::stride2",
    "regex_automata::util::alphabet::{impl#2}::write_to",
    "regex_automata::util::alphabet::{impl#2}::write_to_len",
    "regex_automata::util::alphabet::{impl#3}::default",
    "regex_automata::util::alphabet::{impl#4}::fmt",
    "regex_automata::util::alphabet::{impl#5}::next",
    "regex_automata::util::alphabet::{impl#6}::next",
    "regex_automata::util::alphabet::{impl#7}::next",
    "regex_automata::util::alphabet::{impl#8}::next",
    "regex_automata::util::alphabet::{impl#9}::default",
    "regex_automata::util::captures::{impl#0}::all",
    "regex_automata::util::captures::{impl#0}::empty",
    "regex_automata::util::captures::{impl#0}::extract",
    "regex_automata::util::captures::{impl#0}::extract_bytes",
    "regex_automata::util::captures::{impl#0}::get_group",
    "regex_automata::util::captures::{impl#0}::get_group_by_name",
    "regex_automata::util::captures::{impl#0}::get_match",
    "regex_automata::util::captures::{impl#0}::group_info",
    "regex_automata::util::captures::{impl#0}::group_len",
    "regex_automata::util::captures::{impl#0}::interpolate_bytes",
    "regex_automata::util::captures::{impl#0}::interpolate_bytes_into",
    "regex_automata::util::captures::{impl#0}::interpolate_string",
    "regex_automata::util::captures::{impl#0}::interpolate_string_into",
    "regex_automata::util::captures::{impl#0}::is_match",
    "regex_automata::util::captures::{impl#0}::iter",
    "regex_automata::util::captures::{impl#0}::matches",
    "regex_automata::util::captures::{impl#0}::pattern",
    "regex_automata::util::captures::{impl#10}::source",
    "regex_automata::util::captures::{impl#11}::fmt",
    "regex_automata::util::captures::{impl#12}::empty",
    "regex_automata::util::captures::{impl#13}::count",
    "regex_automata::util::captures::{impl#13}::next",
    "regex_automata::util::captures::{impl#13}::size_hint",
    "regex_automata::util::captures::{impl#16}::next",
    "regex_automata::util::captures::{impl#1}::clear",
    "regex_automata::util::captures::{impl#1}::set_pattern",
    "regex_automata::util::captures::{impl#1}::slots",
    "regex_automata::util::captures::{impl#1}::slots_mut",
    "regex_automata::util::captures::{impl#2}::fmt",
    "regex_automata::util::captures::{impl#3}::fmt",
    "regex_automata::util::captures::{impl#3}::fmt::{impl#0}::fmt",
    "regex_automata::util::captures::{impl#4}::count",
    "regex_automata::util::captures::{impl#4}::next",
    "regex_automata::util::captures::{impl#4}::size_hint",
    "regex_automata::util::captures::{impl#7}::all_group_len",
    "regex_automata::util::captures::{impl#7}::all_names",
    "regex_automata::util::captures::{impl#7}::empty",
    "regex_automata::util::captures::{impl#7}::explicit_slot_len",
    "regex_automata::util::captures::{impl#7}::group_len",
    "regex_automata::util::captures::{impl#7}::implicit_slot_len",
    "regex_automata::util::captures::{impl#7}::memory_usage",
    "regex_automata::util::captures::{impl#7}::new",
    "regex_automata::util::captures::{impl#7}::pattern_len",
    "regex_automata::util::captures::{impl#7}::pattern_names",
    "regex_automata::util::captures::{impl#7}::slot",
    "regex_automata::util::captures::{impl#7}::slot_len",
    "regex_automata::util::captures::{impl#7}::slots",
    "regex_automata::util::captures::{impl#7}::to_index",
    "regex_automata::util::captures::{impl#7}::to_name",
    "regex_automata::util::captures::{impl#8}::add_explicit_group",
    "regex_automata::util::captures::{impl#8}::add_first_group",
    "regex_automata::util::captures::{impl#8}::fixup_slot_ranges",
    "regex_automata::util::captures::{impl#8}::group_len",
    "regex_automata::util::captures::{impl#8}::pattern_len",
    "regex_automata::util::captures::{impl#8}::small_slot_len",
    "regex_automata::util::captures::{impl#9}::duplicate",
    "regex_automata::util::captures::{impl#9}::first_must_be_unnamed",
    "regex_automata::util::captures::{impl#9}::missing_groups",
    "regex_automata::util::captures::{impl#9}::too_many_groups",
    "regex_automata::util::captures::{impl#9}::too_many_patterns",
    "regex_automata::util::determinize::add_nfa_states",
    "regex_automata::util::determinize::epsilon_closure",
    "regex_automata::util::determinize::next",
    "regex_automata::util::determinize::set_lookbehind_from_start",
    "regex_automata::util::determinize::state::read_vari32",
    "regex_automata::util::determinize::state::read_varu32",
    "regex_automata::util::determinize::state::write_u32",
    "regex_automata::util::determinize::state::write_vari32",
    "regex_automata::util::determinize::state::write_varu32",
    "regex_automata::util::determinize::state::{impl#0}::borrow",
    "regex_automata::util::determinize::state::{impl#10}::add_match_pattern_id",
    "regex_automata::util::determinize::state::{impl#10}::add_nfa_state_id",
    "regex_automata::util::determinize::state::{impl#10}::close_match_pattern_ids",
    "regex_automata::util::determinize::state::{impl#10}::look_have",
    "regex_automata::util::determinize::state::{impl#10}::look_need",
    "regex_automata::util::determinize::state::{impl#10}::repr",
    "regex_automata::util::determinize::state::{impl#10}::set_has_pattern_ids",
    "regex_automata::util::determinize::state::{impl#10}::set_is_from_word",
    "regex_automata::util::determinize::state::{impl#10}::set_is_half_crlf",
    "regex_automata::util::determinize::state::{impl#10}::set_is_match",
    "regex_automata::util::determinize::state::{impl#10}::set_look_have",
    "regex_automata::util::determinize::state::{impl#10}::set_look_need",
    "regex_automata::util::determinize::state::{impl#1}::fmt",
    "regex_automata::util::determinize::state::{impl#2}::dead",
    "regex_automata::util::determinize::state::{impl#2}::is_from_word",
    "regex_automata::util::determinize::state::{impl#2}::is_half_crlf",
    "regex_automata::util::determinize::state::{impl#2}::is_match",
    "regex_automata::util::determinize::state::{impl#2}::iter_match_pattern_ids",
    "regex_automata::util::determinize::state::{impl#2}::iter_nfa_state_ids",
    "regex_automata::util::determinize::state::{impl#2}::look_have",
    "regex_automata::util::determinize::state::{impl#2}::look_need",
    "regex_automata::util::determinize::state::{impl#2}::match_len",
    "regex_automata::util::determinize::state::{impl#2}::match_pattern",
    "regex_automata::util::determinize::state::{impl#2}::match_pattern_ids",
    "regex_automata::util::determinize::state::{impl#2}::memory_usage",
    "regex_automata::util::determinize::state::{impl#2}::repr",
    "regex_automata::util::determinize::state::{impl#3}::capacity",
    "regex_automata::util::determinize::state::{impl#3}::clear",
    "regex_automata::util::determinize::state::{impl#3}::into_matches",
    "regex_automata::util::determinize::state::{impl#3}::new",
    "regex_automata::util::determinize::state::{impl#4}::fmt",
    "regex_automata::util::determinize::state::{impl#5}::add_match_pattern_id",
    "regex_automata::util::determinize::state::{impl#5}::into_nfa",
    "regex_automata::util::determinize::state::{impl#5}::look_have",
    "regex_automata::util::determinize::state::{impl#5}::repr",
    "regex_automata::util::determinize::state::{impl#5}::repr_vec",
    "regex_automata::util::determinize::state::{impl#5}::set_is_from_word",
    "regex_automata::util::determinize::state::{impl#5}::set_is_half_crlf",
    "regex_automata::util::determinize::state::{impl#5}::set_look_have",
    "regex_automata::util::determinize::state::{impl#6}::fmt",
    "regex_automata::util::determinize::state::{impl#7}::add_nfa_state_id",
    "regex_automata::util::determinize::state::{impl#7}::as_bytes",
    "regex_automata::util::determinize::state::{impl#7}::clear",
    "regex_automata::util::determinize::state::{impl#7}::look_need",
    "regex_automata::util::determinize::state::{impl#7}::repr",
    "regex_automata::util::determinize::state::{impl#7}::repr_vec",
    "regex_automata::util::determinize::state::{impl#7}::set_look_have",
    "regex_automata::util::determinize::state::{impl#7}::set_look_need",
    "regex_automata::util::determinize::state::{impl#7}::to_state",
    "regex_automata::util::determinize::state::{impl#8}::encoded_pattern_len",
    "regex_automata::util::determinize::state::{impl#8}::has_pattern_ids",
    "regex_automata::util::determinize::state::{impl#8}::is_from_word",
    "regex_automata::util::determinize::state::{impl#8}::is_half_crlf",
    "regex_automata::util::determinize::state::{impl#8}::is_match",
    "regex_automata::util::determinize::state::{impl#8}::iter_match_pattern_ids",
    "regex_automata::util::determinize::state::{impl#8}::iter_nfa_state_ids",
    "regex_automata::util::determinize::state::{impl#8}::look_have",
    "regex_automata::util::determinize::state::{impl#8}::look_need",
    "regex_automata::util::determinize::state::{impl#8}::match_len",
    "regex_automata::util::determinize::state::{impl#8}::match_pattern",
    "regex_automata::util::determinize::state::{impl#8}::match_pattern_ids",
    "regex_automata::util::determinize::state::{impl#8}::pattern_offset_end",
    "regex_automata::util::determinize::state::{impl#9}::fmt",
    "regex_automata::util::empty::skip_splits",
    "regex_automata::util::empty::skip_splits_fwd",
    "regex_automata::util::empty::skip_splits_rev",
    "regex_automata::util::escape::{impl#0}::fmt",
    "regex_automata::util::escape::{impl#1}::fmt",
    "regex_automata::util::int::I32::as_usize",
    "regex_automata::util::int::I32::from_bits",
    "regex_automata::util::int::I32::to_bits",
    "regex_automata::util::int::Pointer::as_usize",
    "regex_automata::util::int::U16::as_usize",
    "regex_automata::util::int::U16::high_u8",
    "regex_automata::util::int::U16::low_u8",
    "regex_automata::util::int::U32::as_usize",
    "regex_automata::util::int::U32::high_u16",
    "regex_automata::util::int::U32::low_u16",
    "regex_automata::util::int::U32::low_u8",
    "regex_automata::util::int::U64::as_usize",
    "regex_automata::util::int::U64::high_u32",
    "regex_automata::util::int::U64::low_u16",
    "regex_automata::util::int::U64::low_u32",
    "regex_automata::util::int::U64::low_u8",
    "regex_automata::util::int::U8::as_usize",
    "regex_automata::util::int::Usize::as_u16",
    "regex_automata::util::int::Usize::as_u32",
    "regex_automata::util::int::Usize::as_u64",
    "regex_automata::util::int::Usize::as_u8",
    "regex_automata::util::int::{impl#0}::as_usize",
    "regex_automata::util::int::{impl#1}::as_usize",
    "regex_automata::util::int::{impl#1}::high_u8",
    "regex_automata::util::int::{impl#1}::low_u8",
    "regex_automata::util::int::{impl#2}::as_usize",
    "regex_automata::util::int::{impl#2}::high_u16",
    "regex_automata::util::int::{impl#2}::low_u16",
    "regex_automata::util::int::{impl#2}::low_u8",
    "regex_automata::util::int::{impl#3}::as_usize",
    "regex_automata::util::int::{impl#3}::high_u32",
    "regex_automata::util::int::{impl#3}::low_u16",
    "regex_automata::util::int::{impl#3}::low_u32",
    "regex_automata::util::int::{impl#3}::low_u8",
    "regex_automata::util::int::{impl#4}::as_usize",
    "regex_automata::util::int::{impl#4}::from_bits",
    "regex_automata::util::int::{impl#4}::to_bits",
    "regex_automata::util::int::{impl#5}::as_u16",
    "regex_automata::util::int::{impl#5}::as_u32",
    "regex_automata::util::int::{impl#5}::as_u64",
    "regex_automata::util::int::{impl#5}::as_u8",
    "regex_automata::util::int::{impl#6}::as_usize",
    "regex_automata::util::interpolate::bytes",
    "regex_automata::util::interpolate::find_cap_ref",
    "regex_automata::util::interpolate::find_cap_ref_braced",
    "regex_automata::util::interpolate::is_valid_cap_letter",
    "regex_automata::util::interpolate::string",
    "regex_automata::util::interpolate::{impl#0}::from",
    "regex_automata::util::interpolate::{impl#1}::from",
    "regex_automata::util::iter::{impl#0}::advance",
    "regex_automata::util::iter::{impl#0}::advance_half",
    "regex_automata::util::iter::{impl#0}::handle_overlapping_empty_half_match",
    "regex_automata::util::iter::{impl#0}::handle_overlapping_empty_match",
    "regex_automata::util::iter::{impl#0}::input",
    "regex_automata::util::iter::{impl#0}::into_captures_iter",
    "regex_automata::util::iter::{impl#0}::into_half_matches_iter",
    "regex_automata::util::iter::{impl#0}::into_matches_iter",
    "regex_automata::util::iter::{impl#0}::new",
    "regex_automata::util::iter::{impl#0}::try_advance",
    "regex_automata::util::iter::{impl#0}::try_advance_half",
    "regex_automata::util::iter::{impl#10}::next",
    "regex_automata::util::iter::{impl#11}::infallible",
    "regex_automata::util::iter::{impl#12}::next",
    "regex_automata::util::iter::{impl#13}::fmt",
    "regex_automata::util::iter::{impl#14}::next",
    "regex_automata::util::iter::{impl#1}::infallible",
    "regex_automata::util::iter::{impl#1}::input",
    "regex_automata::util::iter::{impl#2}::next",
    "regex_automata::util::iter::{impl#3}::fmt",
    "regex_automata::util::iter::{impl#4}::input",
    "regex_automata::util::iter::{impl#5}::next",
    "regex_automata::util::iter::{impl#6}::infallible",
    "regex_automata::util::iter::{impl#6}::input",
    "regex_automata::util::iter::{impl#7}::next",
    "regex_automata::util::iter::{impl#8}::fmt",
    "regex_automata::util::iter::{impl#9}::input",
    "regex_automata::util::lazy::lazy::{impl#1}::new",
    "regex_automata::util::lazy::lazy::{impl#2}::get",
    "regex_automata::util::lazy::lazy::{impl#2}::new",
    "regex_automata::util::lazy::lazy::{impl#2}::poll",
    "regex_automata::util::lazy::lazy::{impl#3}::fmt",
    "regex_automata::util::lazy::lazy::{impl#3}::get",
    "regex_automata::util::lazy::lazy::{impl#3}::poll",
    "regex_automata::util::lazy::lazy::{impl#4}::drop",
    "regex_automata::util::lazy::lazy::{impl#4}::fmt",
    "regex_automata::util::lazy::lazy::{impl#5}::drop",
    "regex_automata::util::lazy::lazy::{impl#6}::drop",
    "regex_automata::util::lazy::tests::assert_refunwind",
    "regex_automata::util::lazy::tests::assert_send",
    "regex_automata::util::lazy::tests::assert_sync",
    "regex_automata::util::lazy::tests::assert_unwind",
    "regex_automata::util::lazy::{impl#0}::new",
    "regex_automata::util::lazy::{impl#1}::get",
    "regex_automata::util::lazy::{impl#2}::deref",
    "regex_automata::util::lazy::{impl#3}::fmt",
    "regex_automata::util::look::is_word_char::check",
    "regex_automata::util::look::is_word_char::check",
    "regex_automata::util::look::is_word_char::check",
    "regex_automata::util::look::is_word_char::fwd",
    "regex_automata::util::look::is_word_char::fwd",
    "regex_automata::util::look::is_word_char::fwd",
    "regex_automata::util::look::is_word_char::is_word_character",
    "regex_automata::util::look::is_word_char::rev",
    "regex_automata::util::look::is_word_char::rev",
    "regex_automata::util::look::is_word_char::rev",
    "regex_automata::util::look::{impl#0}::as_char",
    "regex_automata::util::look::{impl#0}::as_repr",
    "regex_automata::util::look::{impl#0}::from_repr",
    "regex_automata::util::look::{impl#0}::reversed",
    "regex_automata::util::look::{impl#1}::available",
    "regex_automata::util::look::{impl#1}::contains",
    "regex_automata::util::look::{impl#1}::contains_anchor",
    "regex_automata::util::look::{impl#1}::contains_anchor_crlf",
    "regex_automata::util::look::{impl#1}::contains_anchor_haystack",
    "regex_automata::util::look::{impl#1}::contains_anchor_lf",
    "regex_automata::util::look::{impl#1}::contains_anchor_line",
    "regex_automata::util::look::{impl#1}::contains_word",
    "regex_automata::util::look::{impl#1}::contains_word_ascii",
    "regex_automata::util::look::{impl#1}::contains_word_unicode",
    "regex_automata::util::look::{impl#1}::empty",
    "regex_automata::util::look::{impl#1}::full",
    "regex_automata::util::look::{impl#1}::insert",
    "regex_automata::util::look::{impl#1}::intersect",
    "regex_automata::util::look::{impl#1}::is_empty",
    "regex_automata::util::look::{impl#1}::iter",
    "regex_automata::util::look::{impl#1}::len",
    "regex_automata::util::look::{impl#1}::read_repr",
    "regex_automata::util::look::{impl#1}::remove",
    "regex_automata::util::look::{impl#1}::set_insert",
    "regex_automata::util::look::{impl#1}::set_intersect",
    "regex_automata::util::look::{impl#1}::set_remove",
    "regex_automata::util::look::{impl#1}::set_subtract",
    "regex_automata::util::look::{impl#1}::set_union",
    "regex_automata::util::look::{impl#1}::singleton",
    "regex_automata::util::look::{impl#1}::subtract",
    "regex_automata::util::look::{impl#1}::union",
    "regex_automata::util::look::{impl#1}::write_repr",
    "regex_automata::util::look::{impl#2}::fmt",
    "regex_automata::util::look::{impl#3}::next",
    "regex_automata::util::look::{impl#4}::add_to_byteset",
    "regex_automata::util::look::{impl#4}::get_line_terminator",
    "regex_automata::util::look::{impl#4}::is_end",
    "regex_automata::util::look::{impl#4}::is_end_crlf",
    "regex_automata::util::look::{impl#4}::is_end_lf",
    "regex_automata::util::look::{impl#4}::is_start",
    "regex_automata::util::look::{impl#4}::is_start_crlf",
    "regex_automata::util::look::{impl#4}::is_start_lf",
    "regex_automata::util::look::{impl#4}::is_word_ascii",
    "regex_automata::util::look::{impl#4}::is_word_ascii_negate",
    "regex_automata::util::look::{impl#4}::is_word_end_ascii",
    "regex_automata::util::look::{impl#4}::is_word_end_half_ascii",
    "regex_automata::util::look::{impl#4}::is_word_end_half_unicode",
    "regex_automata::util::look::{impl#4}::is_word_end_unicode",
    "regex_automata::util::look::{impl#4}::is_word_start_ascii",
    "regex_automata::util::look::{impl#4}::is_word_start_half_ascii",
    "regex_automata::util::look::{impl#4}::is_word_start_half_unicode",
    "regex_automata::util::look::{impl#4}::is_word_start_unicode",
    "regex_automata::util::look::{impl#4}::is_word_unicode",
    "regex_automata::util::look::{impl#4}::is_word_unicode_negate",
    "regex_automata::util::look::{impl#4}::matches",
    "regex_automata::util::look::{impl#4}::matches_inline",
    "regex_automata::util::look::{impl#4}::matches_set",
    "regex_automata::util::look::{impl#4}::matches_set_inline",
    "regex_automata::util::look::{impl#4}::new",
    "regex_automata::util::look::{impl#4}::set_line_terminator",
    "regex_automata::util::look::{impl#5}::default",
    "regex_automata::util::look::{impl#6}::check",
    "regex_automata::util::look::{impl#6}::new",
    "regex_automata::util::look::{impl#8}::fmt",
    "regex_automata::util::memchr::inner::memchr",
    "regex_automata::util::memchr::inner::memchr",
    "regex_automata::util::memchr::inner::memchr2",
    "regex_automata::util::memchr::inner::memchr2",
    "regex_automata::util::memchr::inner::memchr3",
    "regex_automata::util::memchr::inner::memchr3",
    "regex_automata::util::memchr::inner::memrchr",
    "regex_automata::util::memchr::inner::memrchr",
    "regex_automata::util::memchr::inner::memrchr2",
    "regex_automata::util::memchr::inner::memrchr2",
    "regex_automata::util::memchr::inner::memrchr3",
    "regex_automata::util::memchr::inner::memrchr3",
    "regex_automata::util::pool::inner::{impl#10}::deref_mut",
    "regex_automata::util::pool::inner::{impl#11}::drop",
    "regex_automata::util::pool::inner::{impl#1}::new",
    "regex_automata::util::pool::inner::{impl#2}::get",
    "regex_automata::util::pool::inner::{impl#2}::put",
    "regex_automata::util::pool::inner::{impl#2}::put_value",
    "regex_automata::util::pool::inner::{impl#3}::fmt",
    "regex_automata::util::pool::inner::{impl#3}::new",
    "regex_automata::util::pool::inner::{impl#4}::get",
    "regex_automata::util::pool::inner::{impl#4}::get_slow",
    "regex_automata::util::pool::inner::{impl#4}::guard_owned",
    "regex_automata::util::pool::inner::{impl#4}::guard_stack",
    "regex_automata::util::pool::inner::{impl#4}::guard_stack_transient",
    "regex_automata::util::pool::inner::{impl#4}::put",
    "regex_automata::util::pool::inner::{impl#4}::put_imp",
    "regex_automata::util::pool::inner::{impl#4}::put_value",
    "regex_automata::util::pool::inner::{impl#4}::value",
    "regex_automata::util::pool::inner::{impl#4}::value_mut",
    "regex_automata::util::pool::inner::{impl#5}::drop",
    "regex_automata::util::pool::inner::{impl#5}::fmt",
    "regex_automata::util::pool::inner::{impl#6}::fmt",
    "regex_automata::util::pool::inner::{impl#6}::put",
    "regex_automata::util::pool::inner::{impl#6}::put_imp",
    "regex_automata::util::pool::inner::{impl#6}::value",
    "regex_automata::util::pool::inner::{impl#6}::value_mut",
    "regex_automata::util::pool::inner::{impl#7}::drop",
    "regex_automata::util::pool::inner::{impl#8}::fmt",
    "regex_automata::util::pool::inner::{impl#8}::lock",
    "regex_automata::util::pool::inner::{impl#8}::new",
    "regex_automata::util::pool::inner::{impl#9}::deref",
    "regex_automata::util::pool::{impl#0}::new",
    "regex_automata::util::pool::{impl#1}::get",
    "regex_automata::util::pool::{impl#2}::fmt",
    "regex_automata::util::pool::{impl#3}::put",
    "regex_automata::util::pool::{impl#4}::deref",
    "regex_automata::util::pool::{impl#5}::deref_mut",
    "regex_automata::util::pool::{impl#6}::fmt",
    "regex_automata::util::prefilter::PrefilterI::find",
    "regex_automata::util::prefilter::PrefilterI::is_fast",
    "regex_automata::util::prefilter::PrefilterI::memory_usage",
    "regex_automata::util::prefilter::PrefilterI::prefix",
    "regex_automata::util::prefilter::aho_corasick::{impl#0}::new",
    "regex_automata::util::prefilter::aho_corasick::{impl#1}::find",
    "regex_automata::util::prefilter::aho_corasick::{impl#1}::is_fast",
    "regex_automata::util::prefilter::aho_corasick::{impl#1}::memory_usage",
    "regex_automata::util::prefilter::aho_corasick::{impl#1}::prefix",
    "regex_automata::util::prefilter::byteset::{impl#0}::new",
    "regex_automata::util::prefilter::byteset::{impl#1}::find",
    "regex_automata::util::prefilter::byteset::{impl#1}::is_fast",
    "regex_automata::util::prefilter::byteset::{impl#1}::memory_usage",
    "regex_automata::util::prefilter::byteset::{impl#1}::prefix",
    "regex_automata::util::prefilter::memchr::{impl#0}::new",
    "regex_automata::util::prefilter::memchr::{impl#1}::find",
    "regex_automata::util::prefilter::memchr::{impl#1}::is_fast",
    "regex_automata::util::prefilter::memchr::{impl#1}::memory_usage",
    "regex_automata::util::prefilter::memchr::{impl#1}::prefix",
    "regex_automata::util::prefilter::memchr::{impl#2}::new",
    "regex_automata::util::prefilter::memchr::{impl#3}::find",
    "regex_automata::util::prefilter::memchr::{impl#3}::is_fast",
    "regex_automata::util::prefilter::memchr::{impl#3}::memory_usage",
    "regex_automata::util::prefilter::memchr::{impl#3}::prefix",
    "regex_automata::util::prefilter::memchr::{impl#4}::new",
    "regex_automata::util::prefilter::memchr::{impl#5}::find",
    "regex_automata::util::prefilter::memchr::{impl#5}::is_fast",
    "regex_automata::util::prefilter::memchr::{impl#5}::memory_usage",
    "regex_automata::util::prefilter::memchr::{impl#5}::prefix",
    "regex_automata::util::prefilter::memmem::{impl#0}::new",
    "regex_automata::util::prefilter::memmem::{impl#1}::find",
    "regex_automata::util::prefilter::memmem::{impl#1}::is_fast",
    "regex_automata::util::prefilter::memmem::{impl#1}::memory_usage",
    "regex_automata::util::prefilter::memmem::{impl#1}::prefix",
    "regex_automata::util::prefilter::prefixes",
    "regex_automata::util::prefilter::suffixes",
    "regex_automata::util::prefilter::teddy::{impl#0}::new",
    "regex_automata::util::prefilter::teddy::{impl#1}::find",
    "regex_automata::util::prefilter::teddy::{impl#1}::is_fast",
    "regex_automata::util::prefilter::teddy::{impl#1}::memory_usage",
    "regex_automata::util::prefilter::teddy::{impl#1}::prefix",
    "regex_automata::util::prefilter::{impl#0}::find",
    "regex_automata::util::prefilter::{impl#0}::from_choice",
    "regex_automata::util::prefilter::{impl#0}::from_hir_prefix",
    "regex_automata::util::prefilter::{impl#0}::from_hirs_prefix",
    "regex_automata::util::prefilter::{impl#0}::is_fast",
    "regex_automata::util::prefilter::{impl#0}::max_needle_len",
    "regex_automata::util::prefilter::{impl#0}::memory_usage",
    "regex_automata::util::prefilter::{impl#0}::new",
    "regex_automata::util::prefilter::{impl#0}::prefix",
    "regex_automata::util::prefilter::{impl#1}::find",
    "regex_automata::util::prefilter::{impl#1}::is_fast",
    "regex_automata::util::prefilter::{impl#1}::memory_usage",
    "regex_automata::util::prefilter::{impl#1}::prefix",
    "regex_automata::util::prefilter::{impl#2}::new",
    "regex_automata::util::primitives::IteratorIndexExt::with_pattern_ids",
    "regex_automata::util::primitives::IteratorIndexExt::with_state_ids",
    "regex_automata::util::primitives::{impl#0}::get",
    "regex_automata::util::primitives::{impl#0}::new",
    "regex_automata::util::primitives::{impl#10}::try_from",
    "regex_automata::util::primitives::{impl#11}::try_from",
    "regex_automata::util::primitives::{impl#12}::arbitrary",
    "regex_automata::util::primitives::{impl#13}::attempted",
    "regex_automata::util::primitives::{impl#15}::fmt",
    "regex_automata::util::primitives::{impl#16}::next",
    "regex_automata::util::primitives::{impl#1}::fmt",
    "regex_automata::util::primitives::{impl#2}::as_i32",
    "regex_automata::util::primitives::{impl#2}::as_u32",
    "regex_automata::util::primitives::{impl#2}::as_u64",
    "regex_automata::util::primitives::{impl#2}::as_usize",
    "regex_automata::util::primitives::{impl#2}::from_ne_bytes",
    "regex_automata::util::primitives::{impl#2}::from_ne_bytes_unchecked",
    "regex_automata::util::primitives::{impl#2}::must",
    "regex_automata::util::primitives::{impl#2}::new",
    "regex_automata::util::primitives::{impl#2}::new_unchecked",
    "regex_automata::util::primitives::{impl#2}::one_more",
    "regex_automata::util::primitives::{impl#2}::to_ne_bytes",
    "regex_automata::util::primitives::{impl#3}::index",
    "regex_automata::util::primitives::{impl#4}::index_mut",
    "regex_automata::util::primitives::{impl#5}::index",
    "regex_automata::util::primitives::{impl#6}::index_mut",
    "regex_automata::util::primitives::{impl#7}::from",
    "regex_automata::util::primitives::{impl#8}::try_from",
    "regex_automata::util::primitives::{impl#9}::try_from",
    "regex_automata::util::search::{impl#0}::anchored",
    "regex_automata::util::search::{impl#0}::earliest",
    "regex_automata::util::search::{impl#0}::end",
    "regex_automata::util::search::{impl#0}::get_anchored",
    "regex_automata::util::search::{impl#0}::get_earliest",
    "regex_automata::util::search::{impl#0}::get_range",
    "regex_automata::util::search::{impl#0}::get_span",
    "regex_automata::util::search::{impl#0}::haystack",
    "regex_automata::util::search::{impl#0}::is_char_boundary",
    "regex_automata::util::search::{impl#0}::is_done",
    "regex_automata::util::search::{impl#0}::new",
    "regex_automata::util::search::{impl#0}::range",
    "regex_automata::util::search::{impl#0}::set_anchored",
    "regex_automata::util::search::{impl#0}::set_earliest",
    "regex_automata::util::search::{impl#0}::set_end",
    "regex_automata::util::search::{impl#0}::set_range",
    "regex_automata::util::search::{impl#0}::set_span",
    "regex_automata::util::search::{impl#0}::set_start",
    "regex_automata::util::search::{impl#0}::span",
    "regex_automata::util::search::{impl#0}::start",
    "regex_automata::util::search::{impl#10}::eq",
    "regex_automata::util::search::{impl#11}::eq",
    "regex_automata::util::search::{impl#12}::must",
    "regex_automata::util::search::{impl#12}::new",
    "regex_automata::util::search::{impl#12}::offset",
    "regex_automata::util::search::{impl#12}::pattern",
    "regex_automata::util::search::{impl#13}::end",
    "regex_automata::util::search::{impl#13}::is_empty",
    "regex_automata::util::search::{impl#13}::len",
    "regex_automata::util::search::{impl#13}::must",
    "regex_automata::util::search::{impl#13}::new",
    "regex_automata::util::search::{impl#13}::pattern",
    "regex_automata::util::search::{impl#13}::range",
    "regex_automata::util::search::{impl#13}::span",
    "regex_automata::util::search::{impl#13}::start",
    "regex_automata::util::search::{impl#14}::capacity",
    "regex_automata::util::search::{impl#14}::clear",
    "regex_automata::util::search::{impl#14}::contains",
    "regex_automata::util::search::{impl#14}::insert",
    "regex_automata::util::search::{impl#14}::is_empty",
    "regex_automata::util::search::{impl#14}::is_full",
    "regex_automata::util::search::{impl#14}::iter",
    "regex_automata::util::search::{impl#14}::len",
    "regex_automata::util::search::{impl#14}::new",
    "regex_automata::util::search::{impl#14}::try_insert",
    "regex_automata::util::search::{impl#16}::fmt",
    "regex_automata::util::search::{impl#17}::next",
    "regex_automata::util::search::{impl#17}::size_hint",
    "regex_automata::util::search::{impl#18}::next_back",
    "regex_automata::util::search::{impl#19}::is_anchored",
    "regex_automata::util::search::{impl#19}::pattern",
    "regex_automata::util::search::{impl#1}::fmt",
    "regex_automata::util::search::{impl#20}::continue_past_first_match",
    "regex_automata::util::search::{impl#21}::default",
    "regex_automata::util::search::{impl#22}::gave_up",
    "regex_automata::util::search::{impl#22}::haystack_too_long",
    "regex_automata::util::search::{impl#22}::kind",
    "regex_automata::util::search::{impl#22}::new",
    "regex_automata::util::search::{impl#22}::quit",
    "regex_automata::util::search::{impl#22}::unsupported_anchored",
    "regex_automata::util::search::{impl#24}::fmt",
    "regex_automata::util::search::{impl#2}::from",
    "regex_automata::util::search::{impl#3}::contains",
    "regex_automata::util::search::{impl#3}::is_empty",
    "regex_automata::util::search::{impl#3}::len",
    "regex_automata::util::search::{impl#3}::offset",
    "regex_automata::util::search::{impl#3}::range",
    "regex_automata::util::search::{impl#4}::fmt",
    "regex_automata::util::search::{impl#5}::index",
    "regex_automata::util::search::{impl#6}::index_mut",
    "regex_automata::util::search::{impl#7}::index",
    "regex_automata::util::search::{impl#8}::from",
    "regex_automata::util::search::{impl#9}::from",
    "regex_automata::util::sparse_set::{impl#0}::clear",
    "regex_automata::util::sparse_set::{impl#0}::memory_usage",
    "regex_automata::util::sparse_set::{impl#0}::new",
    "regex_automata::util::sparse_set::{impl#0}::resize",
    "regex_automata::util::sparse_set::{impl#0}::swap",
    "regex_automata::util::sparse_set::{impl#1}::capacity",
    "regex_automata::util::sparse_set::{impl#1}::clear",
    "regex_automata::util::sparse_set::{impl#1}::contains",
    "regex_automata::util::sparse_set::{impl#1}::insert",
    "regex_automata::util::sparse_set::{impl#1}::is_empty",
    "regex_automata::util::sparse_set::{impl#1}::iter",
    "regex_automata::util::sparse_set::{impl#1}::len",
    "regex_automata::util::sparse_set::{impl#1}::memory_usage",
    "regex_automata::util::sparse_set::{impl#1}::new",
    "regex_automata::util::sparse_set::{impl#1}::resize",
    "regex_automata::util::sparse_set::{impl#2}::fmt",
    "regex_automata::util::sparse_set::{impl#3}::next",
    "regex_automata::util::start::{impl#0}::anchored",
    "regex_automata::util::start::{impl#0}::from_input_forward",
    "regex_automata::util::start::{impl#0}::from_input_reverse",
    "regex_automata::util::start::{impl#0}::get_anchored",
    "regex_automata::util::start::{impl#0}::get_look_behind",
    "regex_automata::util::start::{impl#0}::look_behind",
    "regex_automata::util::start::{impl#0}::new",
    "regex_automata::util::start::{impl#1}::from_bytes",
    "regex_automata::util::start::{impl#1}::get",
    "regex_automata::util::start::{impl#1}::new",
    "regex_automata::util::start::{impl#1}::write_to",
    "regex_automata::util::start::{impl#1}::write_to_len",
    "regex_automata::util::start::{impl#2}::fmt",
    "regex_automata::util::start::{impl#3}::as_u8",
    "regex_automata::util::start::{impl#3}::as_usize",
    "regex_automata::util::start::{impl#3}::from_usize",
    "regex_automata::util::start::{impl#3}::len",
    "regex_automata::util::syntax::parse",
    "regex_automata::util::syntax::parse_many",
    "regex_automata::util::syntax::parse_many_with",
    "regex_automata::util::syntax::parse_with",
    "regex_automata::util::syntax::{impl#0}::apply",
    "regex_automata::util::syntax::{impl#0}::apply_ast",
    "regex_automata::util::syntax::{impl#0}::apply_hir",
    "regex_automata::util::syntax::{impl#0}::case_insensitive",
    "regex_automata::util::syntax::{impl#0}::crlf",
    "regex_automata::util::syntax::{impl#0}::dot_matches_new_line",
    "regex_automata::util::syntax::{impl#0}::get_case_insensitive",
    "regex_automata::util::syntax::{impl#0}::get_crlf",
    "regex_automata::util::syntax::{impl#0}::get_dot_matches_new_line",
    "regex_automata::util::syntax::{impl#0}::get_ignore_whitespace",
    "regex_automata::util::syntax::{impl#0}::get_line_terminator",
    "regex_automata::util::syntax::{impl#0}::get_multi_line",
    "regex_automata::util::syntax::{impl#0}::get_nest_limit",
    "regex_automata::util::syntax::{impl#0}::get_octal",
    "regex_automata::util::syntax::{impl#0}::get_swap_greed",
    "regex_automata::util::syntax::{impl#0}::get_unicode",
    "regex_automata::util::syntax::{impl#0}::get_utf8",
    "regex_automata::util::syntax::{impl#0}::ignore_whitespace",
    "regex_automata::util::syntax::{impl#0}::line_terminator",
    "regex_automata::util::syntax::{impl#0}::multi_line",
    "regex_automata::util::syntax::{impl#0}::nest_limit",
    "regex_automata::util::syntax::{impl#0}::new",
    "regex_automata::util::syntax::{impl#0}::octal",
    "regex_automata::util::syntax::{impl#0}::swap_greed",
    "regex_automata::util::syntax::{impl#0}::unicode",
    "regex_automata::util::syntax::{impl#0}::utf8",
    "regex_automata::util::syntax::{impl#1}::default",
    "regex_automata::util::utf8::decode",
    "regex_automata::util::utf8::decode_last",
    "regex_automata::util::utf8::is_boundary",
    "regex_automata::util::utf8::is_leading_or_invalid_byte",
    "regex_automata::util::utf8::is_word_byte",
    "regex_automata::util::utf8::is_word_byte::mkwordset",
    "regex_automata::util::utf8::len",
    "regex_automata::util::wire::Endian::write_u128",
    "regex_automata::util::wire::Endian::write_u16",
    "regex_automata::util::wire::Endian::write_u32",
    "regex_automata::util::wire::add",
    "regex_automata::util::wire::alloc_aligned_buffer",
    "regex_automata::util::wire::check_alignment",
    "regex_automata::util::wire::check_slice_len",
    "regex_automata::util::wire::mul",
    "regex_automata::util::wire::padding_len",
    "regex_automata::util::wire::read_endianness_check",
    "regex_automata::util::wire::read_label",
    "regex_automata::util::wire::read_pattern_id",
    "regex_automata::util::wire::read_pattern_id_unchecked",
    "regex_automata::util::wire::read_state_id",
    "regex_automata::util::wire::read_state_id_unchecked",
    "regex_automata::util::wire::read_u128",
    "regex_automata::util::wire::read_u16",
    "regex_automata::util::wire::read_u32",
    "regex_automata::util::wire::read_version",
    "regex_automata::util::wire::shl",
    "regex_automata::util::wire::skip_initial_padding",
    "regex_automata::util::wire::try_read_state_id",
    "regex_automata::util::wire::try_read_u128",
    "regex_automata::util::wire::try_read_u16",
    "regex_automata::util::wire::try_read_u16_as_usize",
    "regex_automata::util::wire::try_read_u32",
    "regex_automata::util::wire::try_read_u32_as_usize",
    "regex_automata::util::wire::u32s_to_pattern_ids",
    "regex_automata::util::wire::u32s_to_state_ids",
    "regex_automata::util::wire::u32s_to_state_ids_mut",
    "regex_automata::util::wire::write_endianness_check",
    "regex_automata::util::wire::write_endianness_check_len",
    "regex_automata::util::wire::write_label",
    "regex_automata::util::wire::write_label_len",
    "regex_automata::util::wire::write_pattern_id",
    "regex_automata::util::wire::write_state_id",
    "regex_automata::util::wire::write_version",
    "regex_automata::util::wire::write_version_len",
    "regex_automata::util::wire::{impl#0}::buffer_too_small",
    "regex_automata::util::wire::{impl#1}::fmt",
    "regex_automata::util::wire::{impl#3}::alignment_mismatch",
    "regex_automata::util::wire::{impl#3}::arithmetic_overflow",
    "regex_automata::util::wire::{impl#3}::buffer_too_small",
    "regex_automata::util::wire::{impl#3}::endian_mismatch",
    "regex_automata::util::wire::{impl#3}::generic",
    "regex_automata::util::wire::{impl#3}::invalid_usize",
    "regex_automata::util::wire::{impl#3}::label_mismatch",
    "regex_automata::util::wire::{impl#3}::pattern_id_error",
    "regex_automata::util::wire::{impl#3}::state_id_error",
    "regex_automata::util::wire::{impl#3}::version_mismatch",
    "regex_automata::util::wire::{impl#5}::fmt",
    "regex_automata::util::wire::{impl#6}::write_u128",
    "regex_automata::util::wire::{impl#6}::write_u16",
    "regex_automata::util::wire::{impl#6}::write_u32",
    "regex_automata::util::wire::{impl#7}::write_u128",
    "regex_automata::util::wire::{impl#7}::write_u16",
    "regex_automata::util::wire::{impl#7}::write_u32",
]