[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &(*_1),
            StorageLive(_5),
            _5 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/wire.rs:683:5: 683:30 (#0),
                    scope: scope[0],
                },
                kind: _3 = util::wire::try_read_u16(move _4, move _5) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &_2,
            _6 = {closure@regex-automata/src/util/wire.rs:683:40: 683:49} { what: move _7 },
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/wire.rs:683:5: 687:7 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::result::Result::<(u16, usize), util::wire::DeserializeError>::and_then::<(usize, usize), {closure@regex-automata/src/util/wire.rs:683:40: 683:49}>(move _3, move _6) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/wire.rs:688:2: 688:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/wire.rs:679:1: 688:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(usize, usize), util::wire::DeserializeError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/wire.rs:682:6: 682:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/wire.rs:680:12: 680:17 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/wire.rs:680:5: 680:10 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/wire.rs:680:5: 680:10 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/wire.rs:680:5: 680:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/wire.rs:681:11: 681:23 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/wire.rs:681:5: 681:9 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/wire.rs:681:5: 681:9 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/wire.rs:681:5: 681:9 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/wire.rs:683:5: 687:7 (#0),
                },
            ),
        ),
        ty: core::result::Result<(u16, usize), util::wire::DeserializeError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/wire.rs:683:5: 683:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/wire.rs:683:5: 687:7 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/wire.rs:683:18: 683:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/wire.rs:683:5: 687:7 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/wire.rs:683:25: 683:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/wire.rs:683:5: 687:7 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:4074 ~ regex_automata[00dd]::util::wire::try_read_u16_as_usize::{closure#0}),
            [
                i32,
                Binder { value: extern "RustCall" fn(((u16, usize),)) -> core::result::Result<(usize, usize), util::wire::DeserializeError>, bound_vars: [] },
                (&'{erased} &'{erased} str,),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/wire.rs:683:40: 687:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/wire.rs:683:5: 687:7 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/wire.rs:683:40: 687:6 (#0),
            scope: scope[0],
        },
    },
]