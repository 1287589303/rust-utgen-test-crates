[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            _13 = const dfa::dense::LABEL,
            _12 = &(*_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2147:37 (#0),
                    scope: scope[0],
                },
                kind: _11 = util::wire::write_label_len(move _12) -> [return: bb1, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageLive(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2148:11: 2148:45 (#0),
                    scope: scope[0],
                },
                kind: _14 = util::wire::write_endianness_check_len() -> [return: bb2, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _15 = AddWithOverflow(_11, _14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2148:45 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_15.1: bool), "attempt to compute `{} + {}`, which would overflow", move _11, move _14) -> [success: bb3, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _10 = move (_15.0: usize),
            StorageDead(_14),
            StorageDead(_11),
            StorageLive(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2149:11: 2149:36 (#0),
                    scope: scope[0],
                },
                kind: _16 = util::wire::write_version_len() -> [return: bb4, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _17 = AddWithOverflow(_10, _16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2149:36 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_17.1: bool), "attempt to compute `{} + {}`, which would overflow", move _10, move _16) -> [success: bb5, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _9 = move (_17.0: usize),
            StorageDead(_16),
            StorageDead(_10),
            StorageLive(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2150:11: 2150:27 (#0),
                    scope: scope[0],
                },
                kind: _18 = core::mem::size_of::<u32>() -> [return: bb6, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _19 = AddWithOverflow(_9, _18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2150:27 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_19.1: bool), "attempt to compute `{} + {}`, which would overflow", move _9, move _18) -> [success: bb7, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _8 = move (_19.0: usize),
            StorageDead(_18),
            StorageDead(_9),
            StorageLive(_20),
            StorageLive(_21),
            _21 = &((*_1).7: dfa::dense::Flags),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2151:11: 2151:36 (#0),
                    scope: scope[0],
                },
                kind: _20 = dfa::dense::Flags::write_to_len(move _21) -> [return: bb8, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            _22 = AddWithOverflow(_8, _20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2151:36 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_22.1: bool), "attempt to compute `{} + {}`, which would overflow", move _8, move _20) -> [success: bb9, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = move (_22.0: usize),
            StorageDead(_20),
            StorageDead(_8),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &((*_1).0: dfa::dense::TransitionTable<T>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2152:11: 2152:33 (#0),
                    scope: scope[0],
                },
                kind: _23 = dfa::dense::TransitionTable::<T>::write_to_len(move _24) -> [return: bb10, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            _25 = AddWithOverflow(_7, _23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2152:33 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_25.1: bool), "attempt to compute `{} + {}`, which would overflow", move _7, move _23) -> [success: bb11, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _6 = move (_25.0: usize),
            StorageDead(_23),
            StorageDead(_7),
            StorageLive(_26),
            StorageLive(_27),
            _27 = &((*_1).1: dfa::dense::StartTable<T>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2153:11: 2153:33 (#0),
                    scope: scope[0],
                },
                kind: _26 = dfa::dense::StartTable::<T>::write_to_len(move _27) -> [return: bb12, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            _28 = AddWithOverflow(_6, _26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2153:33 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_28.1: bool), "attempt to compute `{} + {}`, which would overflow", move _6, move _26) -> [success: bb13, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = move (_28.0: usize),
            StorageDead(_26),
            StorageDead(_6),
            StorageLive(_29),
            StorageLive(_30),
            _30 = &((*_1).2: dfa::dense::MatchStates<T>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2154:11: 2154:33 (#0),
                    scope: scope[0],
                },
                kind: _29 = dfa::dense::MatchStates::<T>::write_to_len(move _30) -> [return: bb14, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            _31 = AddWithOverflow(_5, _29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2154:33 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_31.1: bool), "attempt to compute `{} + {}`, which would overflow", move _5, move _29) -> [success: bb15, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _4 = move (_31.0: usize),
            StorageDead(_29),
            StorageDead(_5),
            StorageLive(_32),
            StorageLive(_33),
            _33 = &((*_1).3: dfa::special::Special),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2155:11: 2155:38 (#0),
                    scope: scope[0],
                },
                kind: _32 = dfa::special::Special::write_to_len(move _33) -> [return: bb16, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
            _34 = AddWithOverflow(_4, _32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2155:38 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_34.1: bool), "attempt to compute `{} + {}`, which would overflow", move _4, move _32) -> [success: bb17, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = move (_34.0: usize),
            StorageDead(_32),
            StorageDead(_4),
            StorageLive(_35),
            StorageLive(_36),
            _36 = &((*_1).4: dfa::accel::Accels<T>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2156:11: 2156:37 (#0),
                    scope: scope[0],
                },
                kind: _35 = dfa::accel::Accels::<T>::write_to_len(move _36) -> [return: bb18, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            _37 = AddWithOverflow(_3, _35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2156:37 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_37.1: bool), "attempt to compute `{} + {}`, which would overflow", move _3, move _35) -> [success: bb19, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _2 = move (_37.0: usize),
            StorageDead(_35),
            StorageDead(_3),
            StorageLive(_38),
            StorageLive(_39),
            _39 = &((*_1).6: util::alphabet::ByteSet),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2157:11: 2157:38 (#0),
                    scope: scope[0],
                },
                kind: _38 = util::alphabet::ByteSet::write_to_len(move _39) -> [return: bb20, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            _40 = AddWithOverflow(_2, _38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_40.1: bool), "attempt to compute `{} + {}`, which would overflow", move _2, move _38) -> [success: bb21, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = move (_40.0: usize),
            StorageDead(_38),
            StorageDead(_2),
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2158:6: 2158:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2146:5: 2158:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2146:35: 2146:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} dfa::dense::DFA<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2146:25: 2146:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2156:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2155:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2154:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2153:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2152:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2151:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2150:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2149:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2148:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2147:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:31: 2147:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            ConstRef {
                def_id: DefId(0:76 ~ regex_automata[00dd]::dfa::dense::LABEL),
            },
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:31: 2147:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2148:11: 2148:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2148:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2149:11: 2149:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2149:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2150:11: 2150:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2150:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2151:11: 2151:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: &'{erased} dfa::dense::Flags,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2151:11: 2151:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2151:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2152:11: 2152:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: &'{erased} dfa::dense::TransitionTable<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2152:11: 2152:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2152:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2153:11: 2153:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: &'{erased} dfa::dense::StartTable<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2153:11: 2153:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2153:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2154:11: 2154:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: &'{erased} dfa::dense::MatchStates<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2154:11: 2154:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2154:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2155:11: 2155:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: &'{erased} dfa::special::Special,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2155:11: 2155:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2155:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2156:11: 2156:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: &'{erased} dfa::accel::Accels<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2156:11: 2156:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2156:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2157:11: 2157:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
                },
            ),
        ),
        ty: &'{erased} util::alphabet::ByteSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2157:11: 2157:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2147:9: 2157:38 (#0),
            scope: scope[0],
        },
    },
]