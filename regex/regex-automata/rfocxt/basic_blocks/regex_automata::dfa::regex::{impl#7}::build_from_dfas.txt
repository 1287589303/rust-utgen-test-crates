[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = move _2,
            StorageLive(_5),
            _5 = move _3,
            _0 = dfa::regex::Regex::<A> { forward: move _4, reverse: move _5 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:824:34: 824:35 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:824:34: 824:35 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb2, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:825:5: 825:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb3, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:825:5: 825:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb4, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:825:6: 825:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:824:34: 824:35 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:825:5: 825:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb7, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:825:5: 825:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb8, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:819:5: 825:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::regex::Regex<A/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:823:10: 823:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} dfa::regex::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:820:9: 820:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/regex.rs:821:18: 821:19 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/regex.rs:821:9: 821:16 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/regex.rs:821:9: 821:16 (#0),
                    },
                ),
            ),
        ),
        ty: A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:821:9: 821:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/regex.rs:822:18: 822:19 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/regex.rs:822:9: 822:16 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/regex.rs:822:9: 822:16 (#0),
                    },
                ),
            ),
        ),
        ty: A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:822:9: 822:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:824:17: 824:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:824:26: 824:33 (#0),
            scope: scope[0],
        },
    },
]