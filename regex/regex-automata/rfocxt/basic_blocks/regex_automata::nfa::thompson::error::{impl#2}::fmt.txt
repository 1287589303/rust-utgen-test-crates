[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:146:15: 146:26 (#0),
                    scope: scope[0],
                },
                kind: _3 = nfa::thompson::error::BuildError::kind(move _4) -> [return: bb1, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            PlaceMention(_3),
            _5 = discriminant((*_3)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 146:26 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _5) -> [0: bb3, 1: bb4, 2: bb5, 3: bb6, 4: bb7, 5: bb8, 6: bb9, 7: bb10, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:146:15: 146:26 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:148:13: 148:38 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb11, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:149:13: 149:40 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb14, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:152:13: 152:36 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb17, imaginary: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:155:13: 155:61 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb20, imaginary: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:161:13: 161:59 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb25, imaginary: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:167:13: 167:56 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb30, imaginary: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:172:13: 172:58 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb34, imaginary: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_77),
            _77 = &mut (*_2),
            StorageLive(_78),
            StorageLive(_79),
            StorageLive(_80),
            StorageLive(_81),
            _81 = [const "currently captures must be disabled when compiling a reverse NFA"],
            _80 = &_81,
            _79 = &(*_80),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1273),
                    scope: scope[0],
                },
                kind: _78 = core::fmt::Arguments::<'_>::new_const::<1>(move _79) -> [return: bb38, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_6),
            _6 = &mut (*_2),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = [const "error parsing regex"],
            _9 = &_10,
            _8 = &(*_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1259),
                    scope: scope[0],
                },
                kind: _7 = core::fmt::Arguments::<'_>::new_const::<1>(move _8) -> [return: bb12, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1258),
                    scope: scope[0],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _6, move _7) -> [return: bb13, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_6),
            StorageDead(_10),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:148:73: 148:74 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_11),
            _11 = &mut (*_2),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            _15 = [const "error with capture groups"],
            _14 = &_15,
            _13 = &(*_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1261),
                    scope: scope[0],
                },
                kind: _12 = core::fmt::Arguments::<'_>::new_const::<1>(move _13) -> [return: bb15, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1260),
                    scope: scope[0],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _11, move _12) -> [return: bb16, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            StorageDead(_15),
            StorageDead(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:151:13: 151:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_16),
            _16 = &mut (*_2),
            StorageLive(_17),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            _20 = [const "NFA contains Unicode word boundary"],
            _19 = &_20,
            _18 = &(*_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1263),
                    scope: scope[0],
                },
                kind: _17 = core::fmt::Arguments::<'_>::new_const::<1>(move _18) -> [return: bb18, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1262),
                    scope: scope[0],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _16, move _17) -> [return: bb19, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            StorageDead(_16),
            StorageDead(_20),
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:154:13: 154:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_21),
            _21 = &(((*_3) as TooManyPatterns).0: usize),
            StorageLive(_22),
            _22 = &(((*_3) as TooManyPatterns).1: usize),
            StorageLive(_23),
            _23 = &mut (*_2),
            StorageLive(_24),
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            _27 = [const "attempted to compile ", const " patterns, which exceeds the limit of "],
            _26 = &_27,
            _25 = &(*_26),
            StorageLive(_28),
            StorageLive(_29),
            StorageLive(_30),
            StorageLive(_31),
            StorageLive(_32),
            StorageLive(_33),
            _33 = &_21,
            _32 = &(*_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:157:39: 157:41 (#1265),
                    scope: scope[1],
                },
                kind: _31 = core::fmt::rt::Argument::<'_>::new_display::<&usize>(move _32) -> [return: bb21, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
            StorageLive(_34),
            StorageLive(_35),
            StorageLive(_36),
            _36 = &_22,
            _35 = &(*_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:158:45: 158:47 (#1265),
                    scope: scope[1],
                },
                kind: _34 = core::fmt::rt::Argument::<'_>::new_display::<&usize>(move _35) -> [return: bb22, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_35),
            _30 = [move _31, move _34],
            StorageDead(_34),
            StorageDead(_31),
            _29 = &_30,
            _28 = &(*_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1265),
                    scope: scope[1],
                },
                kind: _24 = core::fmt::Arguments::<'_>::new_v1::<2, 2>(move _25, move _28) -> [return: bb23, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1264),
                    scope: scope[1],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _23, move _24) -> [return: bb24, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageDead(_23),
            StorageDead(_36),
            StorageDead(_33),
            StorageDead(_30),
            StorageDead(_29),
            StorageDead(_27),
            StorageDead(_26),
            StorageDead(_22),
            StorageDead(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:160:13: 160:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_37),
            _37 = &(((*_3) as TooManyStates).0: usize),
            StorageLive(_38),
            _38 = &(((*_3) as TooManyStates).1: usize),
            StorageLive(_39),
            _39 = &mut (*_2),
            StorageLive(_40),
            StorageLive(_41),
            StorageLive(_42),
            StorageLive(_43),
            _43 = [const "attempted to compile ", const " NFA states, which exceeds the limit of "],
            _42 = &_43,
            _41 = &(*_42),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            StorageLive(_47),
            StorageLive(_48),
            StorageLive(_49),
            _49 = &_37,
            _48 = &(*_49),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:163:39: 163:41 (#1267),
                    scope: scope[2],
                },
                kind: _47 = core::fmt::rt::Argument::<'_>::new_display::<&usize>(move _48) -> [return: bb26, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_48),
            StorageLive(_50),
            StorageLive(_51),
            StorageLive(_52),
            _52 = &_38,
            _51 = &(*_52),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:164:45: 164:47 (#1267),
                    scope: scope[2],
                },
                kind: _50 = core::fmt::rt::Argument::<'_>::new_display::<&usize>(move _51) -> [return: bb27, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_51),
            _46 = [move _47, move _50],
            StorageDead(_50),
            StorageDead(_47),
            _45 = &_46,
            _44 = &(*_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1267),
                    scope: scope[2],
                },
                kind: _40 = core::fmt::Arguments::<'_>::new_v1::<2, 2>(move _41, move _44) -> [return: bb28, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
            StorageDead(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1266),
                    scope: scope[2],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _39, move _40) -> [return: bb29, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_40),
            StorageDead(_39),
            StorageDead(_52),
            StorageDead(_49),
            StorageDead(_46),
            StorageDead(_45),
            StorageDead(_43),
            StorageDead(_42),
            StorageDead(_38),
            StorageDead(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:166:13: 166:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_53),
            _53 = &(((*_3) as ExceededSizeLimit).0: usize),
            StorageLive(_54),
            _54 = &mut (*_2),
            StorageLive(_55),
            StorageLive(_56),
            StorageLive(_57),
            StorageLive(_58),
            _58 = [const "heap usage during NFA compilation exceeded limit of "],
            _57 = &_58,
            _56 = &(*_57),
            StorageLive(_59),
            StorageLive(_60),
            StorageLive(_61),
            StorageLive(_62),
            StorageLive(_63),
            StorageLive(_64),
            _64 = &_53,
            _63 = &(*_64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:169:70: 169:72 (#1269),
                    scope: scope[3],
                },
                kind: _62 = core::fmt::rt::Argument::<'_>::new_display::<&usize>(move _63) -> [return: bb31, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_63),
            _61 = [move _62],
            StorageDead(_62),
            _60 = &_61,
            _59 = &(*_60),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1269),
                    scope: scope[3],
                },
                kind: _55 = core::fmt::Arguments::<'_>::new_v1::<1, 1>(move _56, move _59) -> [return: bb32, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_59),
            StorageDead(_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1268),
                    scope: scope[3],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _54, move _55) -> [return: bb33, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
            StorageDead(_54),
            StorageDead(_64),
            StorageDead(_61),
            StorageDead(_60),
            StorageDead(_58),
            StorageDead(_57),
            StorageDead(_53),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:171:13: 171:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_65),
            _65 = &(((*_3) as InvalidCaptureIndex).0: u32),
            StorageLive(_66),
            _66 = &mut (*_2),
            StorageLive(_67),
            StorageLive(_68),
            StorageLive(_69),
            StorageLive(_70),
            _70 = [const "capture group index ", const " is invalid (too big or discontinuous)"],
            _69 = &_70,
            _68 = &(*_69),
            StorageLive(_71),
            StorageLive(_72),
            StorageLive(_73),
            StorageLive(_74),
            StorageLive(_75),
            StorageLive(_76),
            _76 = &_65,
            _75 = &(*_76),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:174:38: 174:40 (#1271),
                    scope: scope[4],
                },
                kind: _74 = core::fmt::rt::Argument::<'_>::new_display::<&u32>(move _75) -> [return: bb35, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_75),
            _73 = [move _74],
            StorageDead(_74),
            _72 = &_73,
            _71 = &(*_72),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1271),
                    scope: scope[4],
                },
                kind: _67 = core::fmt::Arguments::<'_>::new_v1::<2, 1>(move _68, move _71) -> [return: bb36, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_71),
            StorageDead(_68),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1270),
                    scope: scope[4],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _66, move _67) -> [return: bb37, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_67),
            StorageDead(_66),
            StorageDead(_76),
            StorageDead(_73),
            StorageDead(_72),
            StorageDead(_70),
            StorageDead(_69),
            StorageDead(_65),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:176:13: 176:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_79),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1272),
                    scope: scope[0],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _77, move _78) -> [return: bb39, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_78),
            StorageDead(_77),
            StorageDead(_81),
            StorageDead(_80),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:182:13: 182:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:184:6: 184:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/error.rs:145:5: 184:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:145:56: 145:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::error::BuildError,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:145:12: 145:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/error.rs:145:22: 145:51 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/error.rs:145:19: 145:20 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/error.rs:145:19: 145:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:145:19: 145:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::error::BuildErrorKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:146:15: 146:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::error::BuildError,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:146:15: 146:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:148:13: 148:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:148:49: 148:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1259),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:148:52: 148:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:148:52: 148:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:148:52: 148:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1260),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:150:24: 150:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1260),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1261),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1260),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:150:27: 150:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1260),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:150:27: 150:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1260),
                },
            ),
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:150:27: 150:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1262),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:153:24: 153:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1262),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1263),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1262),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:153:27: 153:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1262),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:153:27: 153:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#1262),
                },
            ),
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:153:27: 153:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                regex-automata/src/nfa/thompson/error.rs:146:15: 146:26 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/error.rs:155:13: 155:61 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:155:47: 155:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                regex-automata/src/nfa/thompson/error.rs:146:15: 146:26 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/error.rs:155:13: 155:61 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:155:54: 155:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:156:17: 156:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1265),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:157:17: 158:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:157:17: 158:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:157:17: 158:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1265),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1265),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1265),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:157:39: 157:41 (#1265),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:159:17: 159:22 (#1265),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:159:17: 159:22 (#1265),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:158:45: 158:47 (#1265),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:159:24: 159:29 (#1265),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:159:24: 159:29 (#1265),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                regex-automata/src/nfa/thompson/error.rs:146:15: 146:26 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/error.rs:161:13: 161:59 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:161:45: 161:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                regex-automata/src/nfa/thompson/error.rs:146:15: 146:26 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/error.rs:161:13: 161:59 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:161:52: 161:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:162:17: 162:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:163:17: 164:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:163:17: 164:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:163:17: 164:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:163:39: 163:41 (#1267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:165:17: 165:22 (#1267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:165:17: 165:22 (#1267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:164:45: 164:47 (#1267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:165:24: 165:29 (#1267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:165:24: 165:29 (#1267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                regex-automata/src/nfa/thompson/error.rs:146:15: 146:26 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/error.rs:167:13: 167:56 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:167:49: 167:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:168:17: 168:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1269),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:169:17: 169:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:169:17: 169:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:169:17: 169:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1269),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1269),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1269),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:169:70: 169:72 (#1269),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:170:17: 170:22 (#1269),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:170:17: 170:22 (#1269),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                regex-automata/src/nfa/thompson/error.rs:146:15: 146:26 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/error.rs:172:13: 172:58 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:172:51: 172:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:173:17: 173:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1271),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:174:17: 174:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:174:17: 174:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:174:17: 174:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1271),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1271),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1271),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:174:38: 174:40 (#1271),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:175:17: 175:22 (#1271),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:175:17: 175:22 (#1271),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:179:17: 179:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#1273),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:180:17: 181:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:180:17: 181:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/error.rs:146:9: 183:10 (#0),
                },
            ),
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/error.rs:180:17: 181:32 (#0),
            scope: scope[0],
        },
    },
]