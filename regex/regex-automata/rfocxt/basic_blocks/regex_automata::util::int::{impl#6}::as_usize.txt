[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = _1,
            _0 = move _2 as usize (PointerExposeProvenance),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/int.rs:245:6: 245:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/int.rs:243:26: 243:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: *const T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/int.rs:243:17: 243:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/int.rs:244:9: 244:22 (#0),
                },
            ),
        ),
        ty: *const T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/int.rs:244:9: 244:13 (#0),
            scope: scope[0],
        },
    },
]