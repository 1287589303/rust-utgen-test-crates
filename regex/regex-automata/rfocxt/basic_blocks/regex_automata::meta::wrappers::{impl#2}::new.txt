[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:133:26: 133:39 (#0),
                    scope: scope[0],
                },
                kind: _5 = meta::wrappers::PikeVM::get(move _6) -> [return: bb1, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            _4 = &((*_5).0: nfa::thompson::pikevm::PikeVM),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:133:26: 133:56 (#0),
                    scope: scope[0],
                },
                kind: _3 = nfa::thompson::pikevm::PikeVM::create_cache(move _4) -> [return: bb2, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            _2 = core::option::Option::<nfa::thompson::pikevm::Cache>::Some(move _3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:133:56: 133:57 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb3, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            _0 = meta::wrappers::PikeVMCache(move _2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:133:57: 133:58 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb4, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:134:6: 134:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:133:57: 133:58 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:132:5: 134:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: meta::wrappers::PikeVMCache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:132:44: 132:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/meta/wrappers.rs:132:32: 132:39 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/meta/wrappers.rs:132:23: 132:30 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/meta/wrappers.rs:132:23: 132:30 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} meta::wrappers::PikeVM,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:132:23: 132:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::option::Option<nfa::thompson::pikevm::Cache>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:133:21: 133:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: nfa::thompson::pikevm::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:133:26: 133:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/meta/wrappers.rs:133:9: 133:58 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::pikevm::PikeVM,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:133:26: 133:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/meta/wrappers.rs:133:9: 133:58 (#0),
                },
            ),
        ),
        ty: &'{erased} meta::wrappers::PikeVMEngine,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:133:26: 133:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/meta/wrappers.rs:133:9: 133:58 (#0),
                },
            ),
        ),
        ty: &'{erased} meta::wrappers::PikeVM,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:133:26: 133:33 (#0),
            scope: scope[0],
        },
    },
]