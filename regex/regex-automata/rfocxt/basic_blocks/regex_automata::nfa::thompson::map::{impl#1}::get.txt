[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &((*_1).2: std::vec::Vec<nfa::thompson::map::Utf8SuffixEntry>),
            StorageLive(_7),
            _7 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/map.rs:276:30: 276:36 (#0),
                    scope: scope[0],
                },
                kind: _5 = <std::vec::Vec<nfa::thompson::map::Utf8SuffixEntry> as core::ops::Index<usize>>::index(move _6, move _7) -> [return: bb1, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_6),
            _4 = &(*_5),
            FakeRead(ForLet(None), _4),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = ((*_4).0: u16),
            StorageLive(_11),
            _11 = ((*_1).0: u16),
            _9 = Ne(move _10, move _11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/map.rs:277:12: 277:41 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _9) -> [0: bb3, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_10),
            _0 = core::option::Option::<util::primitives::StateID>::None,
            StorageDead(_9),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_10),
            _8 = const (),
            StorageDead(_9),
            StorageDead(_8),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            _15 = &_2,
            StorageLive(_16),
            StorageLive(_17),
            _17 = &((*_4).1: nfa::thompson::map::Utf8SuffixKey),
            _16 = &_17,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/map.rs:280:12: 280:29 (#0),
                    scope: scope[1],
                },
                kind: _14 = <&nfa::thompson::map::Utf8SuffixKey as core::cmp::PartialEq>::ne(move _15, move _16) -> [return: bb4, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/map.rs:280:12: 280:29 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _14) -> [0: bb6, otherwise: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            StorageDead(_16),
            StorageDead(_15),
            _0 = core::option::Option::<util::primitives::StateID>::None,
            StorageDead(_14),
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            StorageDead(_16),
            StorageDead(_15),
            _13 = const (),
            StorageDead(_14),
            StorageDead(_13),
            StorageLive(_19),
            _19 = ((*_4).2: util::primitives::StateID),
            _0 = core::option::Option::<util::primitives::StateID>::Some(move _19),
            StorageDead(_19),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/map.rs:284:6: 284:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/map.rs:284:6: 284:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/map.rs:284:6: 284:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/map.rs:271:5: 284:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:275:10: 275:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut nfa::thompson::map::Utf8SuffixMap,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:272:9: 272:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/map.rs:273:14: 273:28 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/map.rs:273:9: 273:12 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/map.rs:273:9: 273:12 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::map::Utf8SuffixKey,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:273:9: 273:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/map.rs:274:15: 274:20 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/map.rs:274:9: 274:13 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/map.rs:274:9: 274:13 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:274:9: 274:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/map.rs:276:21: 276:36 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/map.rs:276:13: 276:18 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::map::Utf8SuffixEntry,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:276:13: 276:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::map::Utf8SuffixEntry,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:276:30: 276:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<nfa::thompson::map::Utf8SuffixEntry, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:276:22: 276:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:276:31: 276:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:277:9: 279:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:277:12: 277:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:277:12: 277:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:277:29: 277:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:277:42: 279:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:280:9: 282:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:280:12: 280:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} nfa::thompson::map::Utf8SuffixKey,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:280:12: 280:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} nfa::thompson::map::Utf8SuffixKey,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:280:19: 280:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::map::Utf8SuffixKey,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:280:19: 280:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:280:30: 282:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:283:14: 283:23 (#0),
            scope: scope[0],
        },
    },
]