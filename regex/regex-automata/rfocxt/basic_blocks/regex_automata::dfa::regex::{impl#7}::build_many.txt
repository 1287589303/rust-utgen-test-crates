[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &((*_1).0: dfa::dense::Builder),
            StorageLive(_7),
            _7 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:734:23: 734:52 (#0),
                    scope: scope[0],
                },
                kind: _5 = dfa::dense::Builder::build_many::<P>(move _6, move _7) -> [return: bb1, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:734:23: 734:53 (#2712),
                    scope: scope[0],
                },
                kind: _4 = <core::result::Result<dfa::dense::DFA<std::vec::Vec<u32>>, dfa::dense::BuildError> as core::ops::Try>::branch(move _5) -> [return: bb2, unwind: bb60],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            PlaceMention(_4),
            _8 = discriminant(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:734:23: 734:53 (#2712),
                    scope: scope[0],
                },
                kind: switchInt(move _8) -> [0: bb5, 1: bb4, otherwise: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:734:23: 734:53 (#2712),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:734:52: 734:53 (#2713),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb6, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_12),
            _12 = move ((_4 as Continue).0: dfa::dense::DFA<std::vec::Vec<u32>>),
            _3 = move _12,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:734:52: 734:53 (#0),
                    scope: scope[0],
                },
                kind: drop(_12) -> [return: bb8, unwind: bb59],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_9),
            _9 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, dfa::dense::BuildError>),
            StorageLive(_11),
            _11 = move _9,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:734:23: 734:53 (#2712),
                    scope: scope[3],
                },
                kind: _0 = <core::result::Result<dfa::regex::Regex, dfa::dense::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::dense::BuildError>>>::from_residual(move _11) -> [return: bb7, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:734:52: 734:53 (#2713),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb37, unwind: bb59],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            FakeRead(ForLet(None), _3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:734:53: 734:54 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb9, unwind: bb56],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            _22 = &((*_1).0: dfa::dense::Builder),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:735:23: 737:21 (#0),
                    scope: scope[1],
                },
                kind: _21 = <dfa::dense::Builder as core::clone::Clone>::clone(move _22) -> [return: bb10, unwind: bb56],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _20 = &mut _21,
            StorageDead(_22),
            StorageLive(_23),
            StorageLive(_24),
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:739:17: 739:37 (#0),
                    scope: scope[1],
                },
                kind: _27 = dfa::dense::Config::new() -> [return: bb11, unwind: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_28),
            _28 = core::option::Option::<util::prefilter::Prefilter>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:739:17: 740:37 (#0),
                    scope: scope[1],
                },
                kind: _26 = dfa::dense::Config::prefilter(move _27, move _28) -> [return: bb12, unwind: bb53],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:739:17: 741:52 (#0),
                    scope: scope[1],
                },
                kind: _25 = dfa::dense::Config::specialize_start_states(move _26, const false) -> [return: bb13, unwind: bb52],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            StorageLive(_29),
            _29 = dfa::start::StartKind::Anchored,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:739:17: 742:53 (#0),
                    scope: scope[1],
                },
                kind: _24 = dfa::dense::Config::start_kind(move _25, move _29) -> [return: bb14, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
            StorageDead(_25),
            StorageLive(_30),
            _30 = util::search::MatchKind::All,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:739:17: 743:48 (#0),
                    scope: scope[1],
                },
                kind: _23 = dfa::dense::Config::match_kind(move _24, move _30) -> [return: bb15, unwind: bb50],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            StorageDead(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:735:23: 744:14 (#0),
                    scope: scope[1],
                },
                kind: _19 = dfa::dense::Builder::configure(move _20, move _23) -> [return: bb16, unwind: bb49],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _18 = &mut (*_19),
            StorageDead(_23),
            StorageDead(_20),
            StorageLive(_31),
            StorageLive(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:745:23: 745:58 (#0),
                    scope: scope[1],
                },
                kind: _32 = nfa::thompson::compiler::Config::new() -> [return: bb17, unwind: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:745:23: 745:72 (#0),
                    scope: scope[1],
                },
                kind: _31 = nfa::thompson::compiler::Config::reverse(move _32, const true) -> [return: bb18, unwind: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:735:23: 745:73 (#0),
                    scope: scope[1],
                },
                kind: _17 = dfa::dense::Builder::thompson(move _18, move _31) -> [return: bb19, unwind: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _16 = &(*_17),
            StorageDead(_31),
            StorageDead(_18),
            StorageLive(_33),
            _33 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:735:23: 746:34 (#0),
                    scope: scope[1],
                },
                kind: _15 = dfa::dense::Builder::build_many::<P>(move _16, move _33) -> [return: bb20, unwind: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:735:23: 746:35 (#2714),
                    scope: scope[1],
                },
                kind: _14 = <core::result::Result<dfa::dense::DFA<std::vec::Vec<u32>>, dfa::dense::BuildError> as core::ops::Try>::branch(move _15) -> [return: bb21, unwind: bb48],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            PlaceMention(_14),
            _34 = discriminant(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:735:23: 746:35 (#2714),
                    scope: scope[1],
                },
                kind: switchInt(move _34) -> [0: bb24, 1: bb23, otherwise: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:735:23: 746:35 (#2714),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:746:34: 746:35 (#2715),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb25, imaginary: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_38),
            _38 = move ((_14 as Continue).0: dfa::dense::DFA<std::vec::Vec<u32>>),
            _13 = move _38,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:746:34: 746:35 (#0),
                    scope: scope[1],
                },
                kind: drop(_38) -> [return: bb27, unwind: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_35),
            _35 = move ((_14 as Break).0: core::result::Result<core::convert::Infallible, dfa::dense::BuildError>),
            StorageLive(_37),
            _37 = move _35,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:735:23: 746:35 (#2714),
                    scope: scope[8],
                },
                kind: _0 = <core::result::Result<dfa::regex::Regex, dfa::dense::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::dense::BuildError>>>::from_residual(move _37) -> [return: bb26, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:746:34: 746:35 (#2715),
                    scope: scope[1],
                },
                kind: drop(_35) -> [return: bb34, unwind: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            FakeRead(ForLet(None), _13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:746:35: 746:36 (#0),
                    scope: scope[1],
                },
                kind: drop(_14) -> [return: bb28, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:746:35: 746:36 (#0),
                    scope: scope[1],
                },
                kind: drop(_21) -> [return: bb29, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            StorageDead(_19),
            StorageDead(_17),
            StorageDead(_14),
            StorageLive(_39),
            StorageLive(_40),
            _40 = &(*_1),
            StorageLive(_41),
            _41 = move _3,
            StorageLive(_42),
            _42 = move _13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:747:12: 747:50 (#0),
                    scope: scope[6],
                },
                kind: _39 = dfa::regex::Builder::build_from_dfas::<dfa::dense::DFA<std::vec::Vec<u32>>>(move _40, move _41, move _42) -> [return: bb30, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
            StorageDead(_41),
            StorageDead(_40),
            _0 = core::result::Result::<dfa::regex::Regex, dfa::dense::BuildError>::Ok(move _39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:747:50: 747:51 (#0),
                    scope: scope[6],
                },
                kind: drop(_39) -> [return: bb31, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:748:5: 748:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_13) -> [return: bb32, unwind: bb56],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:748:5: 748:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb33, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:748:6: 748:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:746:35: 746:36 (#0),
                    scope: scope[1],
                },
                kind: drop(_14) -> [return: bb35, unwind: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:746:35: 746:36 (#0),
                    scope: scope[1],
                },
                kind: drop(_21) -> [return: bb36, unwind: bb56],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            StorageDead(_19),
            StorageDead(_17),
            StorageDead(_14),
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:748:5: 748:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb39, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:734:53: 734:54 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb38, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb39,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:748:6: 748:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:748:6: 748:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:747:49: 747:50 (#0),
                    scope: scope[6],
                },
                kind: drop(_42) -> [return: bb42, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:747:49: 747:50 (#0),
                    scope: scope[6],
                },
                kind: drop(_41) -> [return: bb44, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:746:35: 746:36 (#0),
                    scope: scope[1],
                },
                kind: drop(_21) -> [return: bb44, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:748:5: 748:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_13) -> [return: bb56, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:746:34: 746:35 (#2714),
                    scope: scope[8],
                },
                kind: drop(_37) -> [return: bb46, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:746:34: 746:35 (#2715),
                    scope: scope[1],
                },
                kind: drop(_35) -> [return: bb47, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:746:35: 746:36 (#0),
                    scope: scope[1],
                },
                kind: drop(_14) -> [return: bb55, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:746:34: 746:35 (#2714),
                    scope: scope[1],
                },
                kind: drop(_15) -> [return: bb55, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:744:13: 744:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_23) -> [return: bb55, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:743:47: 743:48 (#0),
                    scope: scope[1],
                },
                kind: drop(_24) -> [return: bb55, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:742:52: 742:53 (#0),
                    scope: scope[1],
                },
                kind: drop(_25) -> [return: bb55, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:741:51: 741:52 (#0),
                    scope: scope[1],
                },
                kind: drop(_26) -> [return: bb55, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:740:36: 740:37 (#0),
                    scope: scope[1],
                },
                kind: drop(_28) -> [return: bb54, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:740:36: 740:37 (#0),
                    scope: scope[1],
                },
                kind: drop(_27) -> [return: bb55, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:746:35: 746:36 (#0),
                    scope: scope[1],
                },
                kind: drop(_21) -> [return: bb56, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:748:5: 748:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb61, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:734:52: 734:53 (#2712),
                    scope: scope[3],
                },
                kind: drop(_11) -> [return: bb58, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:734:52: 734:53 (#2713),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb59, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:734:53: 734:54 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb61, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:734:52: 734:53 (#2712),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb61, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:730:5: 748:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<dfa::regex::Regex<dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>>, dfa::dense::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:733:10: 733:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} dfa::regex::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:731:9: 731:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/regex.rs:732:19: 732:23 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/regex.rs:732:9: 732:17 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/regex.rs:732:9: 732:17 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [P/#0],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:732:9: 732:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/regex.rs:734:23: 734:53 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/regex.rs:734:13: 734:20 (#0),
                    },
                ),
            ),
        ),
        ty: dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:734:13: 734:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::dense::BuildError>, dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:734:23: 734:53 (#2712),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>, dfa::dense::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:734:23: 734:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} dfa::dense::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:734:23: 734:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [P/#0],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:734:43: 734:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:734:52: 734:53 (#2713),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _4,
                                ),
                                regex-automata/src/dfa/regex.rs:734:23: 734:53 (#2712),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/regex.rs:734:52: 734:53 (#2713),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::dense::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:734:52: 734:53 (#2713),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:734:52: 734:53 (#2713),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::dense::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:734:52: 734:53 (#2713),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _4,
                                ),
                                regex-automata/src/dfa/regex.rs:734:23: 734:53 (#2712),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/regex.rs:734:23: 734:53 (#2712),
                    },
                ),
            ),
        ),
        ty: dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:734:23: 734:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/regex.rs:735:23: 746:35 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/regex.rs:735:13: 735:20 (#0),
                    },
                ),
            ),
        ),
        ty: dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:735:13: 735:20 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::dense::BuildError>, dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:735:23: 746:35 (#2714),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>, dfa::dense::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:735:23: 746:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} dfa::dense::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:735:23: 745:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::dense::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:735:23: 745:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::dense::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:735:23: 744:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::dense::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:735:23: 744:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::dense::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:735:23: 737:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::dense::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:735:23: 737:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} dfa::dense::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:735:23: 736:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::dense::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:739:17: 743:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::dense::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:739:17: 742:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::dense::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:739:17: 741:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::dense::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:739:17: 740:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::dense::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:739:17: 739:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::prefilter::Prefilter>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:740:32: 740:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::start::StartKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:742:33: 742:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::search::MatchKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:743:33: 743:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::compiler::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:745:23: 745:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::compiler::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:745:23: 745:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [P/#0],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:746:25: 746:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:746:34: 746:35 (#2715),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _14,
                                ),
                                regex-automata/src/dfa/regex.rs:735:23: 746:35 (#2714),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/regex.rs:746:34: 746:35 (#2715),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::dense::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:746:34: 746:35 (#2715),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:746:34: 746:35 (#2715),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::dense::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:746:34: 746:35 (#2715),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _14,
                                ),
                                regex-automata/src/dfa/regex.rs:735:23: 746:35 (#2714),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/regex.rs:735:23: 746:35 (#2714),
                    },
                ),
            ),
        ),
        ty: dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:735:23: 746:35 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: dfa::regex::Regex<dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:747:12: 747:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/regex.rs:747:9: 747:51 (#0),
                },
            ),
        ),
        ty: &'{erased} dfa::regex::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:747:12: 747:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/regex.rs:747:9: 747:51 (#0),
                },
            ),
        ),
        ty: dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:747:33: 747:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/regex.rs:747:9: 747:51 (#0),
                },
            ),
        ),
        ty: dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:747:42: 747:49 (#0),
            scope: scope[0],
        },
    },
]