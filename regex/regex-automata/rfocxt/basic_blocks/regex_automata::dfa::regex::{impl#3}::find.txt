[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &(*_1),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:404:26: 404:38 (#0),
                    scope: scope[0],
                },
                kind: _7 = <I as core::convert::Into<util::search::Input<'_>>>::into(move _8) -> [return: bb1, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            _6 = &_7,
            _5 = &(*_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:404:9: 404:39 (#0),
                    scope: scope[0],
                },
                kind: _3 = dfa::regex::Regex::<A>::try_search(move _4, move _5) -> [return: bb2, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:404:9: 404:48 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::result::Result::<core::option::Option<util::search::Match>, util::search::MatchError>::unwrap(move _3) -> [return: bb3, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_7),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:405:5: 405:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb4, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:405:6: 405:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:404:47: 404:48 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb7, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:404:37: 404:38 (#0),
                    scope: scope[0],
                },
                kind: drop(_8) -> [return: bb7, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:405:5: 405:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb8, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:403:5: 405:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::Match>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:403:61: 403:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} dfa::regex::Regex<A/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:403:41: 403:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/regex.rs:403:55: 403:56 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/regex.rs:403:48: 403:53 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/regex.rs:403:48: 403:53 (#0),
                    },
                ),
            ),
        ),
        ty: I/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:403:48: 403:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/regex.rs:404:9: 404:48 (#0),
                },
            ),
        ),
        ty: core::result::Result<core::option::Option<util::search::Match>, util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:404:9: 404:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/regex.rs:404:9: 404:48 (#0),
                },
            ),
        ),
        ty: &'{erased} dfa::regex::Regex<A/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:404:9: 404:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/regex.rs:404:9: 404:48 (#0),
                },
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:404:25: 404:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/regex.rs:404:9: 404:48 (#0),
                },
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:404:25: 404:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/regex.rs:404:9: 404:48 (#0),
                },
            ),
        ),
        ty: util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:404:26: 404:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/regex.rs:404:9: 404:48 (#0),
                },
            ),
        ),
        ty: I/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:404:26: 404:31 (#0),
            scope: scope[0],
        },
    },
]