[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = core::option::Option::<util::primitives::PatternID>::None,
            ((*_1).0: core::option::Option<util::primitives::PatternID>) = move _2,
            StorageDead(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &mut ((*_1).1: std::vec::Vec<nfa::thompson::builder::State>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:373:9: 373:28 (#0),
                    scope: scope[0],
                },
                kind: _3 = std::vec::Vec::<nfa::thompson::builder::State>::clear(move _4) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &mut ((*_1).2: std::vec::Vec<util::primitives::StateID>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:374:9: 374:35 (#0),
                    scope: scope[0],
                },
                kind: _5 = std::vec::Vec::<util::primitives::StateID>::clear(move _6) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &mut ((*_1).3: std::vec::Vec<std::vec::Vec<core::option::Option<std::sync::Arc<str>>>>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:375:9: 375:30 (#0),
                    scope: scope[0],
                },
                kind: _7 = std::vec::Vec::<std::vec::Vec<core::option::Option<std::sync::Arc<str>>>>::clear(move _8) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            ((*_1).4: usize) = const 0_usize,
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:377:6: 377:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:371:5: 377:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:371:28: 371:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut nfa::thompson::builder::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:371:18: 371:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::PatternID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:372:27: 372:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:373:9: 373:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<nfa::thompson::builder::State, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:373:9: 373:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:374:9: 374:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:374:9: 374:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:375:9: 375:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<std::vec::Vec<core::option::Option<std::sync::Arc<str, std::alloc::Global>>, std::alloc::Global>, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:375:9: 375:22 (#0),
            scope: scope[0],
        },
    },
]