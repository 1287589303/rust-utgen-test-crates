[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = core::option::Option::<util::search::HalfMatch>::None,
            ((*_3).0: core::option::Option<util::search::HalfMatch>) = move _4,
            StorageDead(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:451:8: 451:23 (#0),
                    scope: scope[0],
                },
                kind: _6 = util::search::Input::<'_>::is_done(move _7) -> [return: bb1, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:451:8: 451:23 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _6) -> [0: bb3, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageLive(_9),
            _9 = (),
            _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _9),
            StorageDead(_9),
            StorageDead(_6),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb105,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            _5 = const (),
            StorageDead(_6),
            StorageDead(_5),
            StorageLive(_10),
            PlaceMention(((*_3).1: core::option::Option<util::primitives::StateID>)),
            _11 = discriminant(((*_3).1: core::option::Option<util::primitives::StateID>)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:454:19: 454:33 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _11) -> [0: bb5, 1: bb6, otherwise: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), ((*_3).1: core::option::Option<util::primitives::StateID>)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:454:25: 454:33 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:455:9: 455:13 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb7, imaginary: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_33),
            _33 = ((((*_3).1: core::option::Option<util::primitives::StateID>) as Some).0: util::primitives::StateID),
            StorageLive(_34),
            PlaceMention(((*_3).3: core::option::Option<usize>)),
            _35 = discriminant(((*_3).3: core::option::Option<usize>)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:466:20: 466:37 (#0),
                    scope: scope[8],
                },
                kind: switchInt(move _35) -> [1: bb23, otherwise: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            _15 = &(*_1),
            StorageLive(_16),
            _16 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:456:23: 456:43 (#0),
                    scope: scope[0],
                },
                kind: _14 = dfa::search::init_rev::<A>(move _15, move _16) -> [return: bb8, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:456:23: 456:44 (#3311),
                    scope: scope[0],
                },
                kind: _13 = <core::result::Result<util::primitives::StateID, util::search::MatchError> as core::ops::Try>::branch(move _14) -> [return: bb9, unwind: bb110],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            PlaceMention(_13),
            _17 = discriminant(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:456:23: 456:44 (#3311),
                    scope: scope[0],
                },
                kind: switchInt(move _17) -> [0: bb12, 1: bb11, otherwise: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:456:23: 456:44 (#3311),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:456:43: 456:44 (#3312),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb13, imaginary: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_21),
            _21 = ((_13 as Continue).0: util::primitives::StateID),
            _12 = _21,
            StorageDead(_21),
            FakeRead(ForLet(None), _12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:456:44: 456:45 (#0),
                    scope: scope[0],
                },
                kind: drop(_13) -> [return: bb15, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_18),
            _18 = move ((_13 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>),
            StorageLive(_20),
            _20 = move _18,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:456:23: 456:44 (#3311),
                    scope: scope[4],
                },
                kind: _0 = <core::result::Result<(), util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _20) -> [return: bb14, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:456:43: 456:44 (#3312),
                    scope: scope[0],
                },
                kind: drop(_18) -> [return: bb102, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageLive(_22),
            StorageLive(_23),
            _23 = _12,
            _22 = core::option::Option::<util::primitives::StateID>::Some(move _23),
            StorageDead(_23),
            ((*_3).1: core::option::Option<util::primitives::StateID>) = move _22,
            StorageDead(_22),
            StorageLive(_24),
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            _27 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:458:16: 458:29 (#0),
                    scope: scope[2],
                },
                kind: _26 = util::search::Input::<'_>::start(move _27) -> [return: bb16, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            StorageLive(_28),
            StorageLive(_29),
            _29 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:458:33: 458:44 (#0),
                    scope: scope[2],
                },
                kind: _28 = util::search::Input::<'_>::end(move _29) -> [return: bb17, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
            _25 = Eq(move _26, move _28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:458:16: 458:44 (#0),
                    scope: scope[2],
                },
                kind: switchInt(move _25) -> [0: bb19, otherwise: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_26),
            ((*_3).4: bool) = const true,
            _24 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:458:13: 462:14 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb22,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_26),
            StorageLive(_30),
            StorageLive(_31),
            _31 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:461:28: 461:39 (#0),
                    scope: scope[2],
                },
                kind: _30 = util::search::Input::<'_>::end(move _31) -> [return: bb20, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            _32 = SubWithOverflow(_30, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:461:28: 461:43 (#0),
                    scope: scope[2],
                },
                kind: assert(!move (_32.1: bool), "attempt to compute `{} - {}`, which would overflow", move _30, const 1_usize) -> [success: bb21, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_3).2: usize) = move (_32.0: usize),
            StorageDead(_30),
            _24 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:458:13: 462:14 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb22,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            StorageDead(_24),
            _10 = _12,
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:464:9: 464:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:466:20: 466:37 (#0),
                    scope: scope[8],
                },
                kind: falseEdge -> [real: bb24, imaginary: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_36),
            _36 = ((((*_3).3: core::option::Option<usize>) as Some).0: usize),
            StorageLive(_37),
            StorageLive(_38),
            _38 = &(*_1),
            StorageLive(_39),
            _39 = _33,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:467:33: 467:51 (#0),
                    scope: scope[8],
                },
                kind: _37 = <A as dfa::automaton::Automaton>::match_len(move _38, move _39) -> [return: bb25, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            StorageDead(_38),
            FakeRead(ForLet(None), _37),
            StorageLive(_40),
            StorageLive(_41),
            _41 = _36,
            StorageLive(_42),
            _42 = _37,
            _40 = Lt(move _41, move _42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:468:20: 468:43 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _40) -> [0: bb30, otherwise: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
            StorageDead(_41),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            _46 = _36,
            _47 = AddWithOverflow(_46, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:469:51: 469:66 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_47.1: bool), "attempt to compute `{} + {}`, which would overflow", move _46, const 1_usize) -> [success: bb27, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _45 = move (_47.0: usize),
            StorageDead(_46),
            _44 = core::option::Option::<usize>::Some(move _45),
            StorageDead(_45),
            ((*_3).3: core::option::Option<usize>) = move _44,
            StorageDead(_44),
            StorageLive(_48),
            StorageLive(_49),
            _49 = &(*_1),
            StorageLive(_50),
            _50 = _33,
            StorageLive(_51),
            _51 = _36,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:470:35: 470:70 (#0),
                    scope: scope[9],
                },
                kind: _48 = <A as dfa::automaton::Automaton>::match_pattern(move _49, move _50, move _51) -> [return: bb28, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_51),
            StorageDead(_50),
            StorageDead(_49),
            FakeRead(ForLet(None), _48),
            StorageLive(_52),
            StorageLive(_53),
            StorageLive(_54),
            _54 = _48,
            StorageLive(_55),
            _55 = ((*_3).2: usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:471:38: 471:71 (#0),
                    scope: scope[10],
                },
                kind: _53 = util::search::HalfMatch::new(move _54, move _55) -> [return: bb29, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
            StorageDead(_54),
            _52 = core::option::Option::<util::search::HalfMatch>::Some(move _53),
            StorageDead(_53),
            ((*_3).0: core::option::Option<util::search::HalfMatch>) = move _52,
            StorageDead(_52),
            StorageLive(_56),
            _56 = (),
            _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _56),
            StorageDead(_56),
            StorageDead(_48),
            StorageDead(_40),
            StorageDead(_37),
            StorageDead(_36),
            StorageDead(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb101,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
            StorageDead(_41),
            _34 = const (),
            StorageDead(_40),
            StorageDead(_37),
            StorageDead(_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:466:13: 474:14 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb32,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _34 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:466:13: 474:14 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb32,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageLive(_57),
            StorageLive(_58),
            _58 = ((*_3).4: bool),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:479:16: 479:29 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _58) -> [0: bb34, otherwise: bb33],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_60),
            _60 = (),
            _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _60),
            StorageDead(_60),
            StorageDead(_58),
            StorageDead(_57),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb101,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_61),
            StorageLive(_62),
            _62 = ((*_3).2: usize),
            StorageLive(_63),
            StorageLive(_64),
            _64 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:481:35: 481:48 (#0),
                    scope: scope[7],
                },
                kind: _63 = util::search::Input::<'_>::start(move _64) -> [return: bb35, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_64),
            _61 = Eq(move _62, move _63),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:481:23: 481:48 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _61) -> [0: bb37, otherwise: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_63),
            StorageDead(_62),
            ((*_3).4: bool) = const true,
            _57 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:481:20: 489:14 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb39,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_63),
            StorageDead(_62),
            _65 = SubWithOverflow(((*_3).2: usize), const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:488:17: 488:30 (#0),
                    scope: scope[7],
                },
                kind: assert(!move (_65.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_3).2: usize), const 1_usize) -> [success: bb38, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_3).2: usize) = move (_65.0: usize),
            _57 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:481:20: 489:14 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb39,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_61),
            StorageDead(_58),
            StorageDead(_57),
            _10 = _33,
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:491:9: 491:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _10),
            StorageLive(_66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:493:5: 536:6 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb41,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:493:5: 536:6 (#0),
                    scope: scope[1],
                },
                kind: falseUnwind -> [real: bb42, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_68),
            _68 = ((*_3).4: bool),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:493:12: 493:25 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _68) -> [0: bb43, otherwise: bb91],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_69),
            StorageLive(_70),
            _70 = &(*_1),
            StorageLive(_71),
            _71 = _10,
            StorageLive(_72),
            StorageLive(_73),
            StorageLive(_74),
            _74 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:494:35: 494:51 (#0),
                    scope: scope[1],
                },
                kind: _73 = util::search::Input::<'_>::haystack(move _74) -> [return: bb44, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_74),
            StorageLive(_75),
            _75 = ((*_3).2: usize),
            _76 = Len((*_73)),
            _77 = Lt(_75, _76),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:494:35: 494:61 (#0),
                    scope: scope[1],
                },
                kind: assert(move _77, "index out of bounds: the length is {} but the index is {}", move _76, _75) -> [success: bb45, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _72 = (*_73)[_75],
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:494:15: 494:62 (#0),
                    scope: scope[1],
                },
                kind: _69 = <A as dfa::automaton::Automaton>::next_state(move _70, move _71, move _72) -> [return: bb46, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_72),
            StorageDead(_71),
            StorageDead(_70),
            _10 = move _69,
            StorageDead(_69),
            StorageDead(_75),
            StorageDead(_73),
            StorageLive(_78),
            StorageLive(_79),
            StorageLive(_80),
            _80 = &(*_1),
            StorageLive(_81),
            _81 = _10,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:495:12: 495:37 (#0),
                    scope: scope[1],
                },
                kind: _79 = <A as dfa::automaton::Automaton>::is_special_state(move _80, move _81) -> [return: bb47, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:495:12: 495:37 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _79) -> [0: bb85, otherwise: bb48],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_81),
            StorageDead(_80),
            StorageLive(_82),
            StorageLive(_83),
            _83 = _10,
            _82 = core::option::Option::<util::primitives::StateID>::Some(move _83),
            StorageDead(_83),
            ((*_3).1: core::option::Option<util::primitives::StateID>) = move _82,
            StorageDead(_82),
            StorageLive(_84),
            StorageLive(_85),
            _85 = &(*_1),
            StorageLive(_86),
            _86 = _10,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:497:16: 497:39 (#0),
                    scope: scope[1],
                },
                kind: _84 = <A as dfa::automaton::Automaton>::is_start_state(move _85, move _86) -> [return: bb49, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:497:16: 497:39 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _84) -> [0: bb61, otherwise: bb50],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_86),
            StorageDead(_85),
            StorageLive(_87),
            StorageLive(_88),
            _88 = &(*_1),
            StorageLive(_89),
            _89 = _10,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:498:20: 498:43 (#0),
                    scope: scope[1],
                },
                kind: _87 = <A as dfa::automaton::Automaton>::is_accel_state(move _88, move _89) -> [return: bb51, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:498:20: 498:43 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _87) -> [0: bb59, otherwise: bb52],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_89),
            StorageDead(_88),
            StorageLive(_90),
            StorageLive(_91),
            _91 = &(*_1),
            StorageLive(_92),
            _92 = _10,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:499:35: 499:55 (#0),
                    scope: scope[1],
                },
                kind: _90 = <A as dfa::automaton::Automaton>::accelerator(move _91, move _92) -> [return: bb53, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_92),
            StorageDead(_91),
            FakeRead(ForLet(None), _90),
            StorageLive(_93),
            StorageLive(_94),
            StorageLive(_95),
            StorageLive(_96),
            _96 = &(*_90),
            StorageLive(_97),
            StorageLive(_98),
            StorageLive(_99),
            _99 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:501:50: 501:66 (#0),
                    scope: scope[11],
                },
                kind: _98 = util::search::Input::<'_>::haystack(move _99) -> [return: bb54, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _97 = &(*_98),
            StorageDead(_99),
            StorageLive(_100),
            _100 = ((*_3).2: usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:501:25: 501:77 (#0),
                    scope: scope[11],
                },
                kind: _95 = dfa::accel::find_rev(move _96, move _97, move _100) -> [return: bb55, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_100),
            StorageDead(_97),
            StorageDead(_96),
            StorageLive(_101),
            _101 = {closure@regex-automata/src/dfa/search.rs:502:34: 502:37},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:501:25: 502:44 (#0),
                    scope: scope[11],
                },
                kind: _94 = core::option::Option::<usize>::map::<usize, {closure@regex-automata/src/dfa/search.rs:502:34: 502:37}>(move _95, move _101) -> [return: bb56, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_101),
            StorageDead(_95),
            StorageLive(_102),
            StorageLive(_103),
            _103 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:503:40: 503:53 (#0),
                    scope: scope[11],
                },
                kind: _102 = util::search::Input::<'_>::start(move _103) -> [return: bb57, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_103),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:501:25: 503:54 (#0),
                    scope: scope[11],
                },
                kind: _93 = core::option::Option::<usize>::unwrap_or(move _94, move _102) -> [return: bb58, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_102),
            StorageDead(_94),
            ((*_3).2: usize) = move _93,
            StorageDead(_93),
            StorageDead(_98),
            _78 = const (),
            StorageDead(_90),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:498:17: 504:18 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb60,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_89),
            StorageDead(_88),
            _78 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:498:17: 504:18 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb60,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_87),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb84,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_86),
            StorageDead(_85),
            StorageLive(_104),
            StorageLive(_105),
            _105 = &(*_1),
            StorageLive(_106),
            _106 = _10,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:505:23: 505:46 (#0),
                    scope: scope[1],
                },
                kind: _104 = <A as dfa::automaton::Automaton>::is_match_state(move _105, move _106) -> [return: bb62, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:505:23: 505:46 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _104) -> [0: bb67, otherwise: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_106),
            StorageDead(_105),
            StorageLive(_108),
            _108 = core::option::Option::<usize>::Some(const 1_usize),
            ((*_3).3: core::option::Option<usize>) = move _108,
            StorageDead(_108),
            StorageLive(_109),
            StorageLive(_110),
            _110 = &(*_1),
            StorageLive(_111),
            _111 = _10,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:507:31: 507:56 (#0),
                    scope: scope[1],
                },
                kind: _109 = <A as dfa::automaton::Automaton>::match_pattern(move _110, move _111, const 0_usize) -> [return: bb64, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_111),
            StorageDead(_110),
            FakeRead(ForLet(None), _109),
            StorageLive(_112),
            StorageLive(_113),
            StorageLive(_114),
            _114 = _109,
            StorageLive(_115),
            StorageLive(_116),
            _116 = ((*_3).2: usize),
            _117 = AddWithOverflow(_116, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:508:58: 508:70 (#0),
                    scope: scope[12],
                },
                kind: assert(!move (_117.1: bool), "attempt to compute `{} + {}`, which would overflow", move _116, const 1_usize) -> [success: bb65, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _115 = move (_117.0: usize),
            StorageDead(_116),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:508:34: 508:71 (#0),
                    scope: scope[12],
                },
                kind: _113 = util::search::HalfMatch::new(move _114, move _115) -> [return: bb66, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_115),
            StorageDead(_114),
            _112 = core::option::Option::<util::search::HalfMatch>::Some(move _113),
            StorageDead(_113),
            ((*_3).0: core::option::Option<util::search::HalfMatch>) = move _112,
            StorageDead(_112),
            StorageLive(_118),
            _118 = (),
            _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _118),
            StorageDead(_118),
            StorageDead(_109),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb100,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_106),
            StorageDead(_105),
            StorageLive(_119),
            StorageLive(_120),
            _120 = &(*_1),
            StorageLive(_121),
            _121 = _10,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:510:23: 510:46 (#0),
                    scope: scope[1],
                },
                kind: _119 = <A as dfa::automaton::Automaton>::is_accel_state(move _120, move _121) -> [return: bb68, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:510:23: 510:46 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _119) -> [0: bb76, otherwise: bb69],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_121),
            StorageDead(_120),
            StorageLive(_122),
            StorageLive(_123),
            _123 = &(*_1),
            StorageLive(_124),
            _124 = _10,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:511:31: 511:51 (#0),
                    scope: scope[1],
                },
                kind: _122 = <A as dfa::automaton::Automaton>::accelerator(move _123, move _124) -> [return: bb70, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_124),
            StorageDead(_123),
            FakeRead(ForLet(None), _122),
            StorageLive(_125),
            StorageLive(_126),
            StorageLive(_127),
            StorageLive(_128),
            _128 = &(*_122),
            StorageLive(_129),
            StorageLive(_130),
            StorageLive(_131),
            _131 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:520:46: 520:62 (#0),
                    scope: scope[13],
                },
                kind: _130 = util::search::Input::<'_>::haystack(move _131) -> [return: bb71, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _129 = &(*_130),
            StorageDead(_131),
            StorageLive(_132),
            _132 = ((*_3).2: usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:520:21: 520:73 (#0),
                    scope: scope[13],
                },
                kind: _127 = dfa::accel::find_rev(move _128, move _129, move _132) -> [return: bb72, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_132),
            StorageDead(_129),
            StorageDead(_128),
            StorageLive(_133),
            _133 = {closure@regex-automata/src/dfa/search.rs:521:30: 521:33},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:520:21: 521:40 (#0),
                    scope: scope[13],
                },
                kind: _126 = core::option::Option::<usize>::map::<usize, {closure@regex-automata/src/dfa/search.rs:521:30: 521:33}>(move _127, move _133) -> [return: bb73, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_133),
            StorageDead(_127),
            StorageLive(_134),
            StorageLive(_135),
            _135 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:522:36: 522:49 (#0),
                    scope: scope[13],
                },
                kind: _134 = util::search::Input::<'_>::start(move _135) -> [return: bb74, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_135),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:520:21: 522:50 (#0),
                    scope: scope[13],
                },
                kind: _125 = core::option::Option::<usize>::unwrap_or(move _126, move _134) -> [return: bb75, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_134),
            StorageDead(_126),
            ((*_3).2: usize) = move _125,
            StorageDead(_125),
            StorageDead(_130),
            _78 = const (),
            StorageDead(_122),
            StorageDead(_119),
            StorageDead(_104),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb84,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_121),
            StorageDead(_120),
            StorageLive(_136),
            StorageLive(_137),
            _137 = &(*_1),
            StorageLive(_138),
            _138 = _10,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:523:23: 523:45 (#0),
                    scope: scope[1],
                },
                kind: _136 = <A as dfa::automaton::Automaton>::is_dead_state(move _137, move _138) -> [return: bb77, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:523:23: 523:45 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _136) -> [0: bb79, otherwise: bb78],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_138),
            StorageDead(_137),
            StorageLive(_140),
            _140 = (),
            _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _140),
            StorageDead(_140),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:524:17: 524:30 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb99,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_138),
            StorageDead(_137),
            StorageLive(_142),
            StorageLive(_143),
            StorageLive(_144),
            StorageLive(_145),
            _145 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:527:21: 527:37 (#0),
                    scope: scope[1],
                },
                kind: _144 = util::search::Input::<'_>::haystack(move _145) -> [return: bb80, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_145),
            StorageLive(_146),
            _146 = ((*_3).2: usize),
            _147 = Len((*_144)),
            _148 = Lt(_146, _147),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:527:21: 527:47 (#0),
                    scope: scope[1],
                },
                kind: assert(move _148, "index out of bounds: the length is {} but the index is {}", move _147, _146) -> [success: bb81, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _143 = (*_144)[_146],
            StorageLive(_149),
            _149 = ((*_3).2: usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:526:28: 529:18 (#0),
                    scope: scope[1],
                },
                kind: _142 = util::search::MatchError::quit(move _143, move _149) -> [return: bb82, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_149),
            StorageDead(_143),
            _0 = core::result::Result::<(), util::search::MatchError>::Err(move _142),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:529:18: 529:19 (#0),
                    scope: scope[1],
                },
                kind: drop(_142) -> [return: bb83, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_142),
            StorageDead(_146),
            StorageDead(_144),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb99,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:495:9: 531:10 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb86,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_81),
            StorageDead(_80),
            _78 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:495:9: 531:10 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb86,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_79),
            StorageDead(_78),
            StorageLive(_150),
            StorageLive(_151),
            StorageLive(_152),
            _152 = ((*_3).2: usize),
            StorageLive(_153),
            StorageLive(_154),
            _154 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:532:24: 532:37 (#0),
                    scope: scope[1],
                },
                kind: _153 = util::search::Input::<'_>::start(move _154) -> [return: bb87, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_154),
            _151 = Eq(move _152, move _153),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:532:12: 532:37 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _151) -> [0: bb89, otherwise: bb88],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_153),
            StorageDead(_152),
            _66 = const (),
            StorageDead(_151),
            StorageDead(_150),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb92,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_153),
            StorageDead(_152),
            _150 = const (),
            StorageDead(_151),
            StorageDead(_150),
            _156 = SubWithOverflow(((*_3).2: usize), const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:535:9: 535:22 (#0),
                    scope: scope[1],
                },
                kind: assert(!move (_156.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_3).2: usize), const 1_usize) -> [success: bb90, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_3).2: usize) = move (_156.0: usize),
            _67 = const (),
            StorageDead(_68),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:493:5: 536:6 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb41,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_158),
            _66 = const (),
            StorageDead(_158),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb92,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_68),
            StorageDead(_66),
            StorageLive(_160),
            StorageLive(_161),
            _161 = &(*_1),
            StorageLive(_162),
            _162 = &(*_2),
            StorageLive(_163),
            StorageLive(_164),
            _164 = &mut _10,
            _163 = &mut (*_164),
            StorageLive(_165),
            StorageLive(_166),
            _166 = &mut ((*_3).0: core::option::Option<util::search::HalfMatch>),
            _165 = &mut (*_166),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:538:18: 538:63 (#0),
                    scope: scope[1],
                },
                kind: _160 = dfa::search::eoi_rev::<A>(move _161, move _162, move _163, move _165) -> [return: bb93, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_165),
            StorageDead(_163),
            StorageDead(_162),
            StorageDead(_161),
            FakeRead(ForLet(None), _160),
            StorageDead(_166),
            StorageDead(_164),
            ((*_3).4: bool) = const true,
            StorageLive(_167),
            StorageLive(_168),
            _168 = _10,
            _167 = core::option::Option::<util::primitives::StateID>::Some(move _168),
            StorageDead(_168),
            ((*_3).1: core::option::Option<util::primitives::StateID>) = move _167,
            StorageDead(_167),
            StorageLive(_169),
            StorageLive(_170),
            StorageLive(_171),
            _171 = &((*_3).0: core::option::Option<util::search::HalfMatch>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:541:8: 541:27 (#0),
                    scope: scope[14],
                },
                kind: _170 = core::option::Option::<util::search::HalfMatch>::is_some(move _171) -> [return: bb94, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:541:8: 541:27 (#0),
                    scope: scope[14],
                },
                kind: switchInt(move _170) -> [0: bb96, otherwise: bb95],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_171),
            StorageLive(_172),
            _172 = core::option::Option::<usize>::Some(const 1_usize),
            ((*_3).3: core::option::Option<usize>) = move _172,
            StorageDead(_172),
            _169 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:541:5: 547:6 (#0),
                    scope: scope[14],
                },
                kind: goto -> bb97,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_171),
            _169 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:541:5: 547:6 (#0),
                    scope: scope[14],
                },
                kind: goto -> bb97,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_170),
            StorageDead(_169),
            _0 = move _160,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:549:1: 549:2 (#0),
                    scope: scope[1],
                },
                kind: drop(_160) -> [return: bb98, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_160),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:549:2: 549:2 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb105,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_136),
            StorageDead(_119),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb100,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_104),
            StorageDead(_84),
            StorageDead(_79),
            StorageDead(_78),
            StorageDead(_68),
            StorageDead(_66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb104,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb104,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:456:44: 456:45 (#0),
                    scope: scope[0],
                },
                kind: drop(_13) -> [return: bb103, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb104,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb105,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:549:2: 549:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:549:1: 549:2 (#0),
                    scope: scope[1],
                },
                kind: drop(_160) -> [return: bb111, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:456:43: 456:44 (#3311),
                    scope: scope[4],
                },
                kind: drop(_20) -> [return: bb108, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:456:43: 456:44 (#3312),
                    scope: scope[0],
                },
                kind: drop(_18) -> [return: bb109, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:456:44: 456:45 (#0),
                    scope: scope[0],
                },
                kind: drop(_13) -> [return: bb111, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:456:43: 456:44 (#3311),
                    scope: scope[0],
                },
                kind: drop(_14) -> [return: bb111, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:445:1: 549:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:449:6: 449:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/search.rs:446:10: 446:12 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:446:5: 446:8 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:446:5: 446:8 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:446:5: 446:8 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/search.rs:447:12: 447:22 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:447:5: 447:10 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:447:5: 447:10 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:447:5: 447:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/search.rs:448:12: 448:33 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:448:5: 448:10 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:448:5: 448:10 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut dfa::automaton::OverlappingState,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:448:5: 448:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:450:17: 450:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:451:5: 453:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:451:8: 451:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:451:8: 451:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:451:24: 453:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:452:19: 452:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:454:19: 492:6 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:454:9: 454:16 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:454:9: 454:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:455:9: 455:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:456:23: 456:44 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:456:17: 456:20 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:456:17: 456:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::search::MatchError>, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:456:23: 456:44 (#3311),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<util::primitives::StateID, util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:456:23: 456:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:456:32: 456:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:456:37: 456:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:456:43: 456:44 (#3312),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _13,
                                ),
                                regex-automata/src/dfa/search.rs:456:23: 456:44 (#3311),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:456:43: 456:44 (#3312),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:456:43: 456:44 (#3312),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:456:43: 456:44 (#3312),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:456:43: 456:44 (#3312),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _13,
                                ),
                                regex-automata/src/dfa/search.rs:456:23: 456:44 (#3311),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:456:23: 456:44 (#3311),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:456:23: 456:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:457:24: 457:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:457:29: 457:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:458:13: 462:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:458:16: 458:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:458:16: 458:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:458:16: 458:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:458:33: 458:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:458:33: 458:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:461:28: 461:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:461:28: 461:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:461:28: 461:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    ((*_3).1: core::option::Option<util::primitives::StateID>),
                                ),
                                regex-automata/src/dfa/search.rs:454:25: 454:33 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:465:9: 465:18 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:465:14: 465:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:466:13: 474:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:466:20: 466:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    ((*_3).3: core::option::Option<usize>),
                                ),
                                regex-automata/src/dfa/search.rs:466:40: 466:62 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:466:20: 466:37 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:466:25: 466:36 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:467:33: 467:51 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:467:21: 467:30 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:467:21: 467:30 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:467:33: 467:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:467:47: 467:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:468:17: 473:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:468:20: 468:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:468:17: 473:18 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:468:20: 468:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:468:17: 473:18 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:468:34: 468:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:468:17: 473:18 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:468:44: 473:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:469:46: 469:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:469:51: 469:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:469:51: 469:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:469:51: 469:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:470:35: 470:70 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:470:25: 470:32 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:470:25: 470:32 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:470:35: 470:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:470:53: 470:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:470:58: 470:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:471:33: 471:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:471:38: 471:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:471:53: 471:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:471:62: 471:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:472:31: 472:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:479:13: 489:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:479:16: 479:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:479:30: 481:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:480:27: 480:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:481:23: 481:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:481:23: 481:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:481:35: 481:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:481:35: 481:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:488:17: 488:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:493:5: 536:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:445:1: 549:2 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:493:5: 536:6 (#3317),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:493:12: 493:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:494:15: 494:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:494:15: 494:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:494:30: 494:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:494:35: 494:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:494:35: 494:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:494:35: 494:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:494:52: 494:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:494:35: 494:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:494:35: 494:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:495:9: 531:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:495:12: 495:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:495:12: 495:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:495:33: 495:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:496:24: 496:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:496:29: 496:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:497:16: 497:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:497:16: 497:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:497:35: 497:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:498:17: 504:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:498:20: 498:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:498:17: 504:18 (#0),
                },
            ),
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:498:20: 498:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:498:17: 504:18 (#0),
                },
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:498:39: 498:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:499:35: 499:55 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:499:25: 499:32 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:499:25: 499:32 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:499:35: 499:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:499:51: 499:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:501:25: 503:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:501:25: 502:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:501:25: 501:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:501:41: 501:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:501:50: 501:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:501:50: 501:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:501:50: 501:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:501:68: 501:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:1207 ~ regex_automata[00dd]::dfa::search::find_overlapping_rev::{closure#0}),
            [
                A/#0,
                i32,
                Binder { value: extern "RustCall" fn((usize,)) -> usize, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:502:34: 502:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:503:40: 503:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:503:40: 503:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:505:23: 505:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:505:23: 505:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:505:42: 505:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:505:47: 510:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:506:42: 506:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:507:31: 507:56 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:507:21: 507:28 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:507:21: 507:28 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:507:31: 507:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:507:49: 507:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:508:29: 508:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:508:34: 508:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:508:49: 508:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:508:58: 508:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:508:58: 508:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:508:58: 508:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:509:27: 509:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:510:23: 510:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:510:23: 510:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:510:42: 510:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:511:31: 511:51 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:511:21: 511:28 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:511:21: 511:28 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:511:31: 511:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:511:47: 511:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:520:21: 522:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:520:21: 521:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:520:21: 520:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:520:37: 520:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:520:46: 520:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:520:46: 520:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:520:46: 520:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:520:64: 520:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:1208 ~ regex_automata[00dd]::dfa::search::find_overlapping_rev::{closure#1}),
            [
                A/#0,
                i32,
                Binder { value: extern "RustCall" fn((usize,)) -> usize, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:521:30: 521:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:522:36: 522:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:522:36: 522:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:523:23: 523:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:523:23: 523:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:523:41: 523:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:523:46: 525:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:524:27: 524:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:497:13: 530:14 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:525:20: 530:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::search::MatchError,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:526:28: 529:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:527:21: 527:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:527:21: 527:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:527:21: 527:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:527:38: 527:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:527:21: 527:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:527:21: 527:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:528:21: 528:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:532:9: 534:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:532:12: 532:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:532:12: 532:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:532:24: 532:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:532:24: 532:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:532:38: 534:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:535:9: 535:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:493:5: 536:6 (#3317),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:493:5: 536:6 (#3317),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:493:5: 536:6 (#3317),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:493:5: 536:6 (#3317),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:538:18: 538:63 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:538:9: 538:15 (#0),
                    },
                ),
            ),
        ),
        ty: core::result::Result<(), util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:538:9: 538:15 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:538:26: 538:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:538:31: 538:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:538:38: 538:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:538:38: 538:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:538:48: 538:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:538:48: 538:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:540:16: 540:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:540:21: 540:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:541:5: 547:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:541:8: 541:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:541:8: 541:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:546:34: 546:41 (#0),
            scope: scope[0],
        },
    },
]