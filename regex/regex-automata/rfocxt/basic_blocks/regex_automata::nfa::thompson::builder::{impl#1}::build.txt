[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &((*_1).0: core::option::Option<util::primitives::PatternID>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:415:17: 415:42 (#0),
                    scope: scope[0],
                },
                kind: _5 = core::option::Option::<util::primitives::PatternID>::is_none(move _6) -> [return: bb1, unwind: bb246],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:415:17: 415:42 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _5) -> [0: bb3, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            _4 = const (),
            StorageDead(_5),
            StorageDead(_4),
            StorageLive(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:423:23: 423:44 (#0),
                    scope: scope[0],
                },
                kind: _13 = <nfa::thompson::nfa::Inner as core::default::Default>::default() -> [return: bb5, unwind: bb246],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = [const "must call 'finish_pattern' first"],
            _11 = &_12,
            _10 = &(*_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38: 108:72 (#1195),
                    scope: scope[0],
                },
                kind: _9 = core::fmt::Arguments::<'_>::new_const::<1>(move _10) -> [return: bb4, unwind: bb246],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9: 108:73 (#1194),
                    scope: scope[0],
                },
                kind: _8 = core::panicking::panic_fmt(move _9) -> bb246,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _13),
            StorageLive(_14),
            StorageLive(_15),
            _15 = &mut _13,
            StorageLive(_16),
            _16 = ((*_1).5: bool),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:424:9: 424:32 (#0),
                    scope: scope[1],
                },
                kind: _14 = nfa::thompson::nfa::Inner::set_utf8(move _15, move _16) -> [return: bb6, unwind: bb245],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_15),
            StorageDead(_14),
            StorageLive(_17),
            StorageLive(_18),
            _18 = &mut _13,
            StorageLive(_19),
            _19 = ((*_1).6: bool),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:425:9: 425:38 (#0),
                    scope: scope[1],
                },
                kind: _17 = nfa::thompson::nfa::Inner::set_reverse(move _18, move _19) -> [return: bb7, unwind: bb245],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            StorageDead(_18),
            StorageDead(_17),
            StorageLive(_20),
            StorageLive(_21),
            _21 = &mut _13,
            StorageLive(_22),
            StorageLive(_23),
            _23 = &((*_1).7: util::look::LookMatcher),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:426:30: 426:55 (#0),
                    scope: scope[1],
                },
                kind: _22 = <util::look::LookMatcher as core::clone::Clone>::clone(move _23) -> [return: bb8, unwind: bb245],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:426:9: 426:56 (#0),
                    scope: scope[1],
                },
                kind: _20 = nfa::thompson::nfa::Inner::set_look_matcher(move _21, move _22) -> [return: bb9, unwind: bb245],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            StorageDead(_21),
            StorageDead(_20),
            StorageLive(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9: 44:32 (#1198),
                    scope: scope[1],
                },
                kind: _24 = std::vec::Vec::<(util::primitives::StateID, util::primitives::StateID)>::new() -> [return: bb10, unwind: bb245],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _24),
            StorageLive(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9: 44:32 (#1199),
                    scope: scope[2],
                },
                kind: _25 = std::vec::Vec::<util::primitives::StateID>::new() -> [return: bb11, unwind: bb244],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _25),
            StorageLive(_26),
            StorageLive(_27),
            _27 = &mut _25,
            StorageLive(_28),
            StorageLive(_29),
            _29 = &((*_1).1: std::vec::Vec<nfa::thompson::builder::State>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:436:22: 436:39 (#0),
                    scope: scope[3],
                },
                kind: _28 = std::vec::Vec::<nfa::thompson::builder::State>::len(move _29) -> [return: bb12, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:436:9: 436:55 (#0),
                    scope: scope[3],
                },
                kind: _26 = std::vec::Vec::<util::primitives::StateID>::resize(move _27, move _28, const util::primitives::StateID::ZERO) -> [return: bb13, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_27),
            StorageDead(_26),
            StorageLive(_30),
            StorageLive(_31),
            _31 = &mut _13,
            StorageLive(_32),
            _32 = _2,
            StorageLive(_33),
            _33 = _3,
            StorageLive(_34),
            StorageLive(_35),
            StorageLive(_36),
            StorageLive(_37),
            _37 = &((*_1).2: std::vec::Vec<util::primitives::StateID>),
            _36 = &(*_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:438:58: 438:77 (#0),
                    scope: scope[3],
                },
                kind: _35 = <std::vec::Vec<util::primitives::StateID> as core::ops::Deref>::deref(move _36) -> [return: bb14, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _34 = &(*_35),
            StorageDead(_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:438:9: 438:78 (#0),
                    scope: scope[3],
                },
                kind: _30 = nfa::thompson::nfa::Inner::set_starts(move _31, move _32, move _33, move _34) -> [return: bb15, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageDead(_33),
            StorageDead(_32),
            StorageDead(_31),
            StorageDead(_37),
            StorageDead(_35),
            StorageDead(_30),
            StorageLive(_38),
            StorageLive(_39),
            StorageLive(_40),
            StorageLive(_41),
            StorageLive(_42),
            _42 = &mut _13,
            StorageLive(_43),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            _46 = &((*_1).3: std::vec::Vec<std::vec::Vec<core::option::Option<std::sync::Arc<str>>>>),
            _45 = &(*_46),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:26: 439:40 (#0),
                    scope: scope[3],
                },
                kind: _44 = <std::vec::Vec<std::vec::Vec<core::option::Option<std::sync::Arc<str>>>> as core::ops::Deref>::deref(move _45) -> [return: bb16, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _43 = &(*_44),
            StorageDead(_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:9: 439:41 (#0),
                    scope: scope[3],
                },
                kind: _41 = nfa::thompson::nfa::Inner::set_captures(move _42, move _43) -> [return: bb17, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:9: 439:71 (#0),
                    scope: scope[3],
                },
                kind: _40 = core::result::Result::<(), util::captures::GroupInfoError>::map_err::<nfa::thompson::error::BuildError, fn(util::captures::GroupInfoError) -> nfa::thompson::error::BuildError {nfa::thompson::error::BuildError::captures}>(move _41, nfa::thompson::error::BuildError::captures) -> [return: bb18, unwind: bb242],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:9: 439:72 (#4027),
                    scope: scope[3],
                },
                kind: _39 = <core::result::Result<(), nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _40) -> [return: bb19, unwind: bb241],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_40),
            PlaceMention(_39),
            _47 = discriminant(_39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:9: 439:72 (#4027),
                    scope: scope[3],
                },
                kind: switchInt(move _47) -> [0: bb22, 1: bb21, otherwise: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:9: 439:72 (#4027),
                    scope: scope[3],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:71: 439:72 (#4028),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb23, imaginary: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_51),
            _51 = ((_39 as Continue).0: ()),
            _38 = _51,
            StorageDead(_51),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:72: 439:73 (#0),
                    scope: scope[3],
                },
                kind: drop(_39) -> [return: bb25, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_48),
            _48 = move ((_39 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>),
            StorageLive(_50),
            _50 = move _48,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:9: 439:72 (#4027),
                    scope: scope[5],
                },
                kind: _0 = <core::result::Result<nfa::thompson::nfa::NFA, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _50) -> [return: bb24, unwind: bb238],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_50),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:71: 439:72 (#4028),
                    scope: scope[3],
                },
                kind: drop(_48) -> [return: bb207, unwind: bb240],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageDead(_44),
            StorageDead(_39),
            StorageDead(_38),
            StorageLive(_52),
            StorageLive(_53),
            StorageLive(_54),
            StorageLive(_55),
            StorageLive(_56),
            StorageLive(_57),
            StorageLive(_58),
            _58 = &((*_1).1: std::vec::Vec<nfa::thompson::builder::State>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:47 (#0),
                    scope: scope[3],
                },
                kind: _57 = <std::vec::Vec<nfa::thompson::builder::State> as core::ops::Deref>::deref(move _58) -> [return: bb26, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _56 = &(*_57),
            StorageDead(_58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:47 (#0),
                    scope: scope[3],
                },
                kind: _55 = core::slice::<impl [nfa::thompson::builder::State]>::iter(move _56) -> [return: bb27, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#0),
                    scope: scope[3],
                },
                kind: _54 = <core::slice::Iter<'_, nfa::thompson::builder::State> as util::primitives::IteratorIndexExt>::with_state_ids(move _55) -> [return: bb28, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#4030),
                    scope: scope[3],
                },
                kind: _53 = <util::primitives::WithStateIDIter<core::slice::Iter<'_, nfa::thompson::builder::State>> as core::iter::IntoIterator>::into_iter(move _54) -> [return: bb29, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_54),
            PlaceMention(_53),
            StorageLive(_59),
            _59 = move _53,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:445:9: 552:10 (#4029),
                    scope: scope[8],
                },
                kind: goto -> bb30,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:445:9: 552:10 (#4029),
                    scope: scope[8],
                },
                kind: falseUnwind -> [real: bb31, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_61),
            StorageLive(_62),
            StorageLive(_63),
            StorageLive(_64),
            _64 = &mut _59,
            _63 = &mut (*_64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#4030),
                    scope: scope[8],
                },
                kind: _62 = <util::primitives::WithStateIDIter<core::slice::Iter<'_, nfa::thompson::builder::State>> as core::iter::Iterator>::next(move _63) -> [return: bb32, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_63),
            PlaceMention(_62),
            _65 = discriminant(_62),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#4030),
                    scope: scope[8],
                },
                kind: switchInt(move _65) -> [0: bb34, 1: bb35, otherwise: bb33],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _62),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#4030),
                    scope: scope[8],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:445:9: 552:10 (#4029),
                    scope: scope[8],
                },
                kind: falseEdge -> [real: bb36, imaginary: bb35],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_67),
            _67 = (((_62 as Some).0: (util::primitives::StateID, &nfa::thompson::builder::State)).0: util::primitives::StateID),
            StorageLive(_68),
            _68 = (((_62 as Some).0: (util::primitives::StateID, &nfa::thompson::builder::State)).1: &nfa::thompson::builder::State),
            PlaceMention((*_68)),
            _69 = discriminant((*_68)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:446:13: 446:25 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _69) -> [0: bb38, 1: bb39, 2: bb40, 3: bb41, 4: bb42, 5: bb43, 6: bb44, 7: bb45, 8: bb46, 9: bb47, otherwise: bb37],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _52 = const (),
            StorageDead(_64),
            StorageDead(_62),
            StorageDead(_61),
            StorageDead(_59),
            StorageDead(_57),
            StorageDead(_53),
            StorageDead(_52),
            StorageLive(_296),
            StorageLive(_297),
            StorageLive(_298),
            _298 = &((*_1).1: std::vec::Vec<nfa::thompson::builder::State>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:560:40: 560:57 (#0),
                    scope: scope[3],
                },
                kind: _297 = std::vec::Vec::<nfa::thompson::builder::State>::len(move _298) -> [return: bb163, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), (*_68)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                    scope: scope[9],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:447:17: 447:38 (#0),
                    scope: scope[9],
                },
                kind: falseEdge -> [real: bb48, imaginary: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:453:17: 453:43 (#0),
                    scope: scope[9],
                },
                kind: falseEdge -> [real: bb50, imaginary: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:456:17: 456:50 (#0),
                    scope: scope[9],
                },
                kind: falseEdge -> [real: bb53, imaginary: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:470:17: 470:43 (#0),
                    scope: scope[9],
                },
                kind: falseEdge -> [real: bb73, imaginary: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:473:17: 473:70 (#0),
                    scope: scope[9],
                },
                kind: falseEdge -> [real: bb76, imaginary: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:489:17: 489:68 (#0),
                    scope: scope[9],
                },
                kind: falseEdge -> [real: bb85, imaginary: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:510:17: 510:48 (#0),
                    scope: scope[9],
                },
                kind: falseEdge -> [real: bb96, imaginary: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:527:17: 527:55 (#0),
                    scope: scope[9],
                },
                kind: falseEdge -> [real: bb126, imaginary: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:545:17: 545:28 (#0),
                    scope: scope[9],
                },
                kind: falseEdge -> [real: bb157, imaginary: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_288),
            _288 = (((*_68) as Match).0: util::primitives::PatternID),
            StorageLive(_289),
            StorageLive(_290),
            _290 = &mut _13,
            StorageLive(_291),
            StorageLive(_292),
            _292 = _288,
            _291 = nfa::thompson::nfa::State::Match { pattern_id: move _292 },
            StorageDead(_292),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:549:34: 549:75 (#0),
                    scope: scope[26],
                },
                kind: _289 = nfa::thompson::nfa::Inner::add(move _290, move _291) -> [return: bb160, unwind: bb216],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_70),
            _70 = (((*_68) as Empty).0: util::primitives::StateID),
            StorageLive(_71),
            StorageLive(_72),
            _72 = &mut _24,
            StorageLive(_73),
            StorageLive(_74),
            _74 = _67,
            StorageLive(_75),
            _75 = _70,
            _73 = (move _74, move _75),
            StorageDead(_75),
            StorageDead(_74),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:451:21: 451:46 (#0),
                    scope: scope[10],
                },
                kind: _71 = std::vec::Vec::<(util::primitives::StateID, util::primitives::StateID)>::push(move _72, move _73) -> [return: bb49, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_73),
            StorageDead(_72),
            StorageDead(_71),
            _61 = const (),
            StorageDead(_70),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:452:17: 452:18 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb162,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_76),
            _76 = (((*_68) as ByteRange).0: nfa::thompson::nfa::Transition),
            StorageLive(_77),
            StorageLive(_78),
            _78 = &mut _13,
            StorageLive(_79),
            StorageLive(_80),
            _80 = _76,
            _79 = nfa::thompson::nfa::State::ByteRange { trans: move _80 },
            StorageDead(_80),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:454:34: 454:74 (#0),
                    scope: scope[11],
                },
                kind: _77 = nfa::thompson::nfa::Inner::add(move _78, move _79) -> [return: bb51, unwind: bb237],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_79),
            StorageDead(_78),
            StorageLive(_81),
            StorageLive(_82),
            _82 = &mut _25,
            StorageLive(_83),
            _83 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:454:26: 454:31 (#0),
                    scope: scope[11],
                },
                kind: _81 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _82, move _83) -> [return: bb52, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_83),
            StorageDead(_82),
            (*_81) = move _77,
            StorageDead(_77),
            StorageDead(_81),
            _61 = const (),
            StorageDead(_76),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:455:17: 455:18 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb162,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_84),
            _84 = &(((*_68) as Sparse).0: std::vec::Vec<nfa::thompson::nfa::Transition>),
            StorageLive(_85),
            StorageLive(_86),
            StorageLive(_87),
            _87 = &(*_84),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:457:40: 457:57 (#0),
                    scope: scope[12],
                },
                kind: _86 = std::vec::Vec::<nfa::thompson::nfa::Transition>::len(move _87) -> [return: bb54, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_87),
            PlaceMention(_86),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:457:34: 457:57 (#0),
                    scope: scope[12],
                },
                kind: switchInt(_86) -> [0: bb56, 1: bb57, otherwise: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_95),
            StorageLive(_96),
            StorageLive(_97),
            StorageLive(_98),
            StorageLive(_99),
            _99 = &(*_84),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:464:33: 464:53 (#0),
                    scope: scope[12],
                },
                kind: _98 = <std::vec::Vec<nfa::thompson::nfa::Transition> as core::ops::Deref>::deref(move _99) -> [return: bb63, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:458:25: 458:26 (#0),
                    scope: scope[12],
                },
                kind: falseEdge -> [real: bb58, imaginary: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:459:25: 459:26 (#0),
                    scope: scope[12],
                },
                kind: falseEdge -> [real: bb60, imaginary: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_88),
            _88 = &mut _13,
            StorageLive(_89),
            _89 = nfa::thompson::nfa::State::Fail,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:458:30: 458:55 (#0),
                    scope: scope[12],
                },
                kind: _85 = nfa::thompson::nfa::Inner::add(move _88, move _89) -> [return: bb59, unwind: bb236],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_89),
            StorageDead(_88),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:458:54: 458:55 (#0),
                    scope: scope[12],
                },
                kind: goto -> bb71,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_90),
            _90 = &mut _13,
            StorageLive(_91),
            StorageLive(_92),
            StorageLive(_93),
            StorageLive(_94),
            _94 = &(*_84),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:460:47: 460:50 (#0),
                    scope: scope[12],
                },
                kind: _93 = <std::vec::Vec<nfa::thompson::nfa::Transition> as core::ops::Index<usize>>::index(move _94, const 0_usize) -> [return: bb61, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _92 = (*_93),
            StorageDead(_94),
            _91 = nfa::thompson::nfa::State::ByteRange { trans: move _92 },
            StorageDead(_92),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:459:30: 461:27 (#0),
                    scope: scope[12],
                },
                kind: _85 = nfa::thompson::nfa::Inner::add(move _90, move _91) -> [return: bb62, unwind: bb235],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_91),
            StorageDead(_90),
            StorageDead(_93),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:461:26: 461:27 (#0),
                    scope: scope[12],
                },
                kind: goto -> bb71,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _97 = &(*_98),
            StorageDead(_99),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:464:33: 464:53 (#0),
                    scope: scope[12],
                },
                kind: _96 = std::slice::<impl [nfa::thompson::nfa::Transition]>::to_vec(move _97) -> [return: bb64, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_97),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:464:33: 464:72 (#0),
                    scope: scope[12],
                },
                kind: _95 = std::vec::Vec::<nfa::thompson::nfa::Transition>::into_boxed_slice(move _96) -> [return: bb65, unwind: bb234],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_96),
            FakeRead(ForLet(None), _95),
            StorageDead(_98),
            StorageLive(_100),
            StorageLive(_101),
            _101 = move _95,
            _100 = nfa::thompson::nfa::SparseTransitions { transitions: move _101 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:465:74: 465:75 (#0),
                    scope: scope[13],
                },
                kind: drop(_101) -> [return: bb66, unwind: bb233],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_101),
            FakeRead(ForLet(None), _100),
            StorageLive(_102),
            _102 = &mut _13,
            StorageLive(_103),
            StorageLive(_104),
            _104 = move _100,
            _103 = nfa::thompson::nfa::State::Sparse(move _104),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:466:62: 466:63 (#0),
                    scope: scope[14],
                },
                kind: drop(_104) -> [return: bb67, unwind: bb231],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_104),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:466:29: 466:64 (#0),
                    scope: scope[14],
                },
                kind: _85 = nfa::thompson::nfa::Inner::add(move _102, move _103) -> [return: bb68, unwind: bb231],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_103),
            StorageDead(_102),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:467:25: 467:26 (#0),
                    scope: scope[13],
                },
                kind: drop(_100) -> [return: bb69, unwind: bb233],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_100),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:467:25: 467:26 (#0),
                    scope: scope[12],
                },
                kind: drop(_95) -> [return: bb70, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_95),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:467:25: 467:26 (#0),
                    scope: scope[12],
                },
                kind: goto -> bb71,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_105),
            StorageLive(_106),
            _106 = &mut _25,
            StorageLive(_107),
            _107 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:457:26: 457:31 (#0),
                    scope: scope[12],
                },
                kind: _105 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _106, move _107) -> [return: bb72, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_107),
            StorageDead(_106),
            (*_105) = move _85,
            _61 = const (),
            StorageDead(_85),
            StorageDead(_105),
            StorageDead(_86),
            StorageDead(_84),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:469:17: 469:18 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb162,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_108),
            _108 = (((*_68) as Look).0: util::look::Look),
            StorageLive(_109),
            _109 = (((*_68) as Look).1: util::primitives::StateID),
            StorageLive(_110),
            StorageLive(_111),
            _111 = &mut _13,
            StorageLive(_112),
            StorageLive(_113),
            _113 = _108,
            StorageLive(_114),
            _114 = _109,
            _112 = nfa::thompson::nfa::State::Look { look: move _113, next: move _114 },
            StorageDead(_114),
            StorageDead(_113),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:471:34: 471:74 (#0),
                    scope: scope[15],
                },
                kind: _110 = nfa::thompson::nfa::Inner::add(move _111, move _112) -> [return: bb74, unwind: bb230],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_112),
            StorageDead(_111),
            StorageLive(_115),
            StorageLive(_116),
            _116 = &mut _25,
            StorageLive(_117),
            _117 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:471:26: 471:31 (#0),
                    scope: scope[15],
                },
                kind: _115 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _116, move _117) -> [return: bb75, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_117),
            StorageDead(_116),
            (*_115) = move _110,
            StorageDead(_110),
            StorageDead(_115),
            _61 = const (),
            StorageDead(_109),
            StorageDead(_108),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:472:17: 472:18 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb162,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_118),
            _118 = (((*_68) as CaptureStart).0: util::primitives::PatternID),
            StorageLive(_119),
            _119 = (((*_68) as CaptureStart).1: util::primitives::SmallIndex),
            StorageLive(_120),
            _120 = (((*_68) as CaptureStart).2: util::primitives::StateID),
            StorageLive(_121),
            StorageLive(_122),
            StorageLive(_123),
            StorageLive(_124),
            StorageLive(_125),
            _125 = &_13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:476:32: 477:38 (#0),
                    scope: scope[16],
                },
                kind: _124 = nfa::thompson::nfa::Inner::group_info(move _125) -> [return: bb77, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _123 = &(*_124),
            StorageDead(_125),
            StorageLive(_126),
            _126 = _118,
            StorageLive(_127),
            StorageLive(_128),
            _128 = &_119,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:478:43: 478:65 (#0),
                    scope: scope[16],
                },
                kind: _127 = util::primitives::SmallIndex::as_usize(move _128) -> [return: bb78, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_128),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:476:32: 478:66 (#0),
                    scope: scope[16],
                },
                kind: _122 = util::captures::GroupInfo::slot(move _123, move _126, move _127) -> [return: bb79, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_127),
            StorageDead(_126),
            StorageDead(_123),
            StorageLive(_129),
            StorageLive(_130),
            _130 = const "invalid capture index",
            _129 = &(*_130),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:476:32: 479:57 (#0),
                    scope: scope[16],
                },
                kind: _121 = core::option::Option::<usize>::expect(move _122, move _129) -> [return: bb80, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_129),
            StorageDead(_122),
            FakeRead(ForLet(None), _121),
            StorageDead(_130),
            StorageDead(_124),
            StorageLive(_131),
            StorageLive(_132),
            StorageLive(_133),
            _133 = _121,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:481:25: 481:46 (#0),
                    scope: scope[17],
                },
                kind: _132 = util::primitives::SmallIndex::new(move _133) -> [return: bb81, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_133),
            StorageLive(_134),
            StorageLive(_135),
            _135 = const "a small enough slot",
            _134 = &(*_135),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:481:25: 481:76 (#0),
                    scope: scope[17],
                },
                kind: _131 = core::result::Result::<util::primitives::SmallIndex, util::primitives::SmallIndexError>::expect(move _132, move _134) -> [return: bb82, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_134),
            StorageDead(_132),
            FakeRead(ForLet(None), _131),
            StorageDead(_135),
            StorageLive(_136),
            StorageLive(_137),
            _137 = &mut _13,
            StorageLive(_138),
            StorageLive(_139),
            _139 = _120,
            StorageLive(_140),
            _140 = _118,
            StorageLive(_141),
            _141 = _119,
            StorageLive(_142),
            _142 = _131,
            _138 = nfa::thompson::nfa::State::Capture { next: move _139, pattern_id: move _140, group_index: move _141, slot: move _142 },
            StorageDead(_142),
            StorageDead(_141),
            StorageDead(_140),
            StorageDead(_139),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:482:34: 487:23 (#0),
                    scope: scope[18],
                },
                kind: _136 = nfa::thompson::nfa::Inner::add(move _137, move _138) -> [return: bb83, unwind: bb229],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_138),
            StorageDead(_137),
            StorageLive(_143),
            StorageLive(_144),
            _144 = &mut _25,
            StorageLive(_145),
            _145 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:482:26: 482:31 (#0),
                    scope: scope[18],
                },
                kind: _143 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _144, move _145) -> [return: bb84, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_145),
            StorageDead(_144),
            (*_143) = move _136,
            StorageDead(_136),
            StorageDead(_143),
            _61 = const (),
            StorageDead(_131),
            StorageDead(_121),
            StorageDead(_120),
            StorageDead(_119),
            StorageDead(_118),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:488:17: 488:18 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb162,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_146),
            _146 = (((*_68) as CaptureEnd).0: util::primitives::PatternID),
            StorageLive(_147),
            _147 = (((*_68) as CaptureEnd).1: util::primitives::SmallIndex),
            StorageLive(_148),
            _148 = (((*_68) as CaptureEnd).2: util::primitives::StateID),
            StorageLive(_149),
            StorageLive(_150),
            StorageLive(_151),
            StorageLive(_152),
            StorageLive(_153),
            StorageLive(_154),
            StorageLive(_155),
            _155 = &_13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:495:32: 496:38 (#0),
                    scope: scope[19],
                },
                kind: _154 = nfa::thompson::nfa::Inner::group_info(move _155) -> [return: bb86, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _153 = &(*_154),
            StorageDead(_155),
            StorageLive(_156),
            _156 = _146,
            StorageLive(_157),
            StorageLive(_158),
            _158 = &_147,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:497:43: 497:65 (#0),
                    scope: scope[19],
                },
                kind: _157 = util::primitives::SmallIndex::as_usize(move _158) -> [return: bb87, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_158),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:495:32: 497:66 (#0),
                    scope: scope[19],
                },
                kind: _152 = util::captures::GroupInfo::slot(move _153, move _156, move _157) -> [return: bb88, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_157),
            StorageDead(_156),
            StorageDead(_153),
            StorageLive(_159),
            StorageLive(_160),
            _160 = const "invalid capture index",
            _159 = &(*_160),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:495:32: 498:57 (#0),
                    scope: scope[19],
                },
                kind: _151 = core::option::Option::<usize>::expect(move _152, move _159) -> [return: bb89, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_159),
            StorageDead(_152),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:495:32: 499:40 (#0),
                    scope: scope[19],
                },
                kind: _150 = core::num::<impl usize>::checked_add(move _151, const 1_usize) -> [return: bb90, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_151),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:495:32: 500:34 (#0),
                    scope: scope[19],
                },
                kind: _149 = core::option::Option::<usize>::unwrap(move _150) -> [return: bb91, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_150),
            FakeRead(ForLet(None), _149),
            StorageDead(_160),
            StorageDead(_154),
            StorageLive(_161),
            StorageLive(_162),
            StorageLive(_163),
            _163 = _149,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:502:25: 502:46 (#0),
                    scope: scope[20],
                },
                kind: _162 = util::primitives::SmallIndex::new(move _163) -> [return: bb92, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_163),
            StorageLive(_164),
            StorageLive(_165),
            _165 = const "a small enough slot",
            _164 = &(*_165),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:502:25: 502:76 (#0),
                    scope: scope[20],
                },
                kind: _161 = core::result::Result::<util::primitives::SmallIndex, util::primitives::SmallIndexError>::expect(move _162, move _164) -> [return: bb93, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_164),
            StorageDead(_162),
            FakeRead(ForLet(None), _161),
            StorageDead(_165),
            StorageLive(_166),
            StorageLive(_167),
            _167 = &mut _13,
            StorageLive(_168),
            StorageLive(_169),
            _169 = _148,
            StorageLive(_170),
            _170 = _146,
            StorageLive(_171),
            _171 = _147,
            StorageLive(_172),
            _172 = _161,
            _168 = nfa::thompson::nfa::State::Capture { next: move _169, pattern_id: move _170, group_index: move _171, slot: move _172 },
            StorageDead(_172),
            StorageDead(_171),
            StorageDead(_170),
            StorageDead(_169),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:503:34: 508:23 (#0),
                    scope: scope[21],
                },
                kind: _166 = nfa::thompson::nfa::Inner::add(move _167, move _168) -> [return: bb94, unwind: bb228],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_168),
            StorageDead(_167),
            StorageLive(_173),
            StorageLive(_174),
            _174 = &mut _25,
            StorageLive(_175),
            _175 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:503:26: 503:31 (#0),
                    scope: scope[21],
                },
                kind: _173 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _174, move _175) -> [return: bb95, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_175),
            StorageDead(_174),
            (*_173) = move _166,
            StorageDead(_166),
            StorageDead(_173),
            _61 = const (),
            StorageDead(_161),
            StorageDead(_149),
            StorageDead(_148),
            StorageDead(_147),
            StorageDead(_146),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:509:17: 509:18 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb162,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_176),
            _176 = &(((*_68) as Union).0: std::vec::Vec<util::primitives::StateID>),
            StorageLive(_177),
            StorageLive(_178),
            _178 = &(*_176),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:511:24: 511:45 (#0),
                    scope: scope[22],
                },
                kind: _177 = std::vec::Vec::<util::primitives::StateID>::is_empty(move _178) -> [return: bb97, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:511:24: 511:45 (#0),
                    scope: scope[22],
                },
                kind: switchInt(move _177) -> [0: bb101, otherwise: bb98],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_178),
            StorageLive(_179),
            StorageLive(_180),
            _180 = &mut _13,
            StorageLive(_181),
            _181 = nfa::thompson::nfa::State::Fail,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:512:38: 512:63 (#0),
                    scope: scope[22],
                },
                kind: _179 = nfa::thompson::nfa::Inner::add(move _180, move _181) -> [return: bb99, unwind: bb227],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_181),
            StorageDead(_180),
            StorageLive(_182),
            StorageLive(_183),
            _183 = &mut _25,
            StorageLive(_184),
            _184 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:512:30: 512:35 (#0),
                    scope: scope[22],
                },
                kind: _182 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _183, move _184) -> [return: bb100, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_184),
            StorageDead(_183),
            (*_182) = move _179,
            StorageDead(_179),
            StorageDead(_182),
            _61 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:511:21: 525:22 (#0),
                    scope: scope[22],
                },
                kind: goto -> bb125,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_178),
            StorageLive(_185),
            StorageLive(_186),
            StorageLive(_187),
            _187 = &(*_176),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:513:31: 513:47 (#0),
                    scope: scope[22],
                },
                kind: _186 = std::vec::Vec::<util::primitives::StateID>::len(move _187) -> [return: bb102, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_187),
            _185 = Eq(move _186, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:513:31: 513:52 (#0),
                    scope: scope[22],
                },
                kind: switchInt(move _185) -> [0: bb108, otherwise: bb103],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_186),
            StorageLive(_188),
            StorageLive(_189),
            _189 = &mut _24,
            StorageLive(_190),
            StorageLive(_191),
            _191 = _67,
            StorageLive(_192),
            StorageLive(_193),
            StorageLive(_194),
            _194 = &(*_176),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:514:54: 514:57 (#0),
                    scope: scope[22],
                },
                kind: _193 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<usize>>::index(move _194, const 0_usize) -> [return: bb104, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _192 = (*_193),
            StorageDead(_194),
            _190 = (move _191, move _192),
            StorageDead(_192),
            StorageDead(_191),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:514:25: 514:59 (#0),
                    scope: scope[22],
                },
                kind: _188 = std::vec::Vec::<(util::primitives::StateID, util::primitives::StateID)>::push(move _189, move _190) -> [return: bb105, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_190),
            StorageDead(_189),
            StorageDead(_193),
            StorageDead(_188),
            StorageLive(_195),
            StorageLive(_196),
            StorageLive(_197),
            _197 = &(*_176),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:515:48: 515:51 (#0),
                    scope: scope[22],
                },
                kind: _196 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<usize>>::index(move _197, const 0_usize) -> [return: bb106, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _195 = (*_196),
            StorageDead(_197),
            StorageLive(_198),
            StorageLive(_199),
            _199 = &mut _25,
            StorageLive(_200),
            _200 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:515:30: 515:35 (#0),
                    scope: scope[22],
                },
                kind: _198 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _199, move _200) -> [return: bb107, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_200),
            StorageDead(_199),
            (*_198) = move _195,
            StorageDead(_195),
            StorageDead(_198),
            StorageDead(_196),
            _61 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:513:28: 525:22 (#0),
                    scope: scope[22],
                },
                kind: goto -> bb124,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_186),
            StorageLive(_201),
            StorageLive(_202),
            StorageLive(_203),
            _203 = &(*_176),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:516:31: 516:47 (#0),
                    scope: scope[22],
                },
                kind: _202 = std::vec::Vec::<util::primitives::StateID>::len(move _203) -> [return: bb109, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_203),
            _201 = Eq(move _202, const 2_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:516:31: 516:52 (#0),
                    scope: scope[22],
                },
                kind: switchInt(move _201) -> [0: bb115, otherwise: bb110],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_202),
            StorageLive(_204),
            StorageLive(_205),
            _205 = &mut _13,
            StorageLive(_206),
            StorageLive(_207),
            StorageLive(_208),
            StorageLive(_209),
            _209 = &(*_176),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:518:45: 518:48 (#0),
                    scope: scope[22],
                },
                kind: _208 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<usize>>::index(move _209, const 0_usize) -> [return: bb111, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _207 = (*_208),
            StorageDead(_209),
            StorageLive(_210),
            StorageLive(_211),
            StorageLive(_212),
            _212 = &(*_176),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:519:45: 519:48 (#0),
                    scope: scope[22],
                },
                kind: _211 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<usize>>::index(move _212, const 1_usize) -> [return: bb112, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _210 = (*_211),
            StorageDead(_212),
            _206 = nfa::thompson::nfa::State::BinaryUnion { alt1: move _207, alt2: move _210 },
            StorageDead(_210),
            StorageDead(_207),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:517:38: 520:27 (#0),
                    scope: scope[22],
                },
                kind: _204 = nfa::thompson::nfa::Inner::add(move _205, move _206) -> [return: bb113, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_206),
            StorageDead(_205),
            StorageLive(_213),
            StorageLive(_214),
            _214 = &mut _25,
            StorageLive(_215),
            _215 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:517:30: 517:35 (#0),
                    scope: scope[22],
                },
                kind: _213 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _214, move _215) -> [return: bb114, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_215),
            StorageDead(_214),
            (*_213) = move _204,
            StorageDead(_204),
            StorageDead(_213),
            StorageDead(_211),
            StorageDead(_208),
            _61 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:516:28: 525:22 (#0),
                    scope: scope[22],
                },
                kind: goto -> bb123,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_202),
            StorageLive(_216),
            StorageLive(_217),
            StorageLive(_218),
            StorageLive(_219),
            StorageLive(_220),
            _220 = &(*_176),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:523:29: 523:48 (#0),
                    scope: scope[22],
                },
                kind: _219 = <std::vec::Vec<util::primitives::StateID> as core::ops::Deref>::deref(move _220) -> [return: bb116, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _218 = &(*_219),
            StorageDead(_220),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:523:29: 523:48 (#0),
                    scope: scope[22],
                },
                kind: _217 = std::slice::<impl [util::primitives::StateID]>::to_vec(move _218) -> [return: bb117, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_218),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:523:29: 523:67 (#0),
                    scope: scope[22],
                },
                kind: _216 = std::vec::Vec::<util::primitives::StateID>::into_boxed_slice(move _217) -> [return: bb118, unwind: bb225],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_217),
            FakeRead(ForLet(None), _216),
            StorageDead(_219),
            StorageLive(_221),
            StorageLive(_222),
            _222 = &mut _13,
            StorageLive(_223),
            StorageLive(_224),
            _224 = move _216,
            _223 = nfa::thompson::nfa::State::Union { alternates: move _224 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:524:77: 524:78 (#0),
                    scope: scope[23],
                },
                kind: drop(_224) -> [return: bb119, unwind: bb223],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_224),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:524:38: 524:79 (#0),
                    scope: scope[23],
                },
                kind: _221 = nfa::thompson::nfa::Inner::add(move _222, move _223) -> [return: bb120, unwind: bb223],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_223),
            StorageDead(_222),
            StorageLive(_225),
            StorageLive(_226),
            _226 = &mut _25,
            StorageLive(_227),
            _227 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:524:30: 524:35 (#0),
                    scope: scope[23],
                },
                kind: _225 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _226, move _227) -> [return: bb121, unwind: bb224],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_227),
            StorageDead(_226),
            (*_225) = move _221,
            StorageDead(_221),
            StorageDead(_225),
            _61 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:525:21: 525:22 (#0),
                    scope: scope[22],
                },
                kind: drop(_216) -> [return: bb122, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_216),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:516:28: 525:22 (#0),
                    scope: scope[22],
                },
                kind: goto -> bb123,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_201),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:513:28: 525:22 (#0),
                    scope: scope[22],
                },
                kind: goto -> bb124,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_185),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:511:21: 525:22 (#0),
                    scope: scope[22],
                },
                kind: goto -> bb125,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_177),
            StorageDead(_176),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:526:17: 526:18 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb162,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_228),
            _228 = &(((*_68) as UnionReverse).0: std::vec::Vec<util::primitives::StateID>),
            StorageLive(_229),
            StorageLive(_230),
            _230 = &(*_228),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:528:24: 528:45 (#0),
                    scope: scope[24],
                },
                kind: _229 = std::vec::Vec::<util::primitives::StateID>::is_empty(move _230) -> [return: bb127, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:528:24: 528:45 (#0),
                    scope: scope[24],
                },
                kind: switchInt(move _229) -> [0: bb131, otherwise: bb128],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_230),
            StorageLive(_231),
            StorageLive(_232),
            _232 = &mut _13,
            StorageLive(_233),
            _233 = nfa::thompson::nfa::State::Fail,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:529:38: 529:63 (#0),
                    scope: scope[24],
                },
                kind: _231 = nfa::thompson::nfa::Inner::add(move _232, move _233) -> [return: bb129, unwind: bb222],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_233),
            StorageDead(_232),
            StorageLive(_234),
            StorageLive(_235),
            _235 = &mut _25,
            StorageLive(_236),
            _236 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:529:30: 529:35 (#0),
                    scope: scope[24],
                },
                kind: _234 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _235, move _236) -> [return: bb130, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_236),
            StorageDead(_235),
            (*_234) = move _231,
            StorageDead(_231),
            StorageDead(_234),
            _61 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:528:21: 543:22 (#0),
                    scope: scope[24],
                },
                kind: goto -> bb156,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_230),
            StorageLive(_237),
            StorageLive(_238),
            StorageLive(_239),
            _239 = &(*_228),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:530:31: 530:47 (#0),
                    scope: scope[24],
                },
                kind: _238 = std::vec::Vec::<util::primitives::StateID>::len(move _239) -> [return: bb132, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_239),
            _237 = Eq(move _238, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:530:31: 530:52 (#0),
                    scope: scope[24],
                },
                kind: switchInt(move _237) -> [0: bb138, otherwise: bb133],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_238),
            StorageLive(_240),
            StorageLive(_241),
            _241 = &mut _24,
            StorageLive(_242),
            StorageLive(_243),
            _243 = _67,
            StorageLive(_244),
            StorageLive(_245),
            StorageLive(_246),
            _246 = &(*_228),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:531:54: 531:57 (#0),
                    scope: scope[24],
                },
                kind: _245 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<usize>>::index(move _246, const 0_usize) -> [return: bb134, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _244 = (*_245),
            StorageDead(_246),
            _242 = (move _243, move _244),
            StorageDead(_244),
            StorageDead(_243),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:531:25: 531:59 (#0),
                    scope: scope[24],
                },
                kind: _240 = std::vec::Vec::<(util::primitives::StateID, util::primitives::StateID)>::push(move _241, move _242) -> [return: bb135, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_242),
            StorageDead(_241),
            StorageDead(_245),
            StorageDead(_240),
            StorageLive(_247),
            StorageLive(_248),
            StorageLive(_249),
            _249 = &(*_228),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:532:48: 532:51 (#0),
                    scope: scope[24],
                },
                kind: _248 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<usize>>::index(move _249, const 0_usize) -> [return: bb136, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _247 = (*_248),
            StorageDead(_249),
            StorageLive(_250),
            StorageLive(_251),
            _251 = &mut _25,
            StorageLive(_252),
            _252 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:532:30: 532:35 (#0),
                    scope: scope[24],
                },
                kind: _250 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _251, move _252) -> [return: bb137, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_252),
            StorageDead(_251),
            (*_250) = move _247,
            StorageDead(_247),
            StorageDead(_250),
            StorageDead(_248),
            _61 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:530:28: 543:22 (#0),
                    scope: scope[24],
                },
                kind: goto -> bb155,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_238),
            StorageLive(_253),
            StorageLive(_254),
            StorageLive(_255),
            _255 = &(*_228),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:533:31: 533:47 (#0),
                    scope: scope[24],
                },
                kind: _254 = std::vec::Vec::<util::primitives::StateID>::len(move _255) -> [return: bb139, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_255),
            _253 = Eq(move _254, const 2_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:533:31: 533:52 (#0),
                    scope: scope[24],
                },
                kind: switchInt(move _253) -> [0: bb145, otherwise: bb140],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_254),
            StorageLive(_256),
            StorageLive(_257),
            _257 = &mut _13,
            StorageLive(_258),
            StorageLive(_259),
            StorageLive(_260),
            StorageLive(_261),
            _261 = &(*_228),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:535:45: 535:48 (#0),
                    scope: scope[24],
                },
                kind: _260 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<usize>>::index(move _261, const 1_usize) -> [return: bb141, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _259 = (*_260),
            StorageDead(_261),
            StorageLive(_262),
            StorageLive(_263),
            StorageLive(_264),
            _264 = &(*_228),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:536:45: 536:48 (#0),
                    scope: scope[24],
                },
                kind: _263 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<usize>>::index(move _264, const 0_usize) -> [return: bb142, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _262 = (*_263),
            StorageDead(_264),
            _258 = nfa::thompson::nfa::State::BinaryUnion { alt1: move _259, alt2: move _262 },
            StorageDead(_262),
            StorageDead(_259),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:534:38: 537:27 (#0),
                    scope: scope[24],
                },
                kind: _256 = nfa::thompson::nfa::Inner::add(move _257, move _258) -> [return: bb143, unwind: bb221],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_258),
            StorageDead(_257),
            StorageLive(_265),
            StorageLive(_266),
            _266 = &mut _25,
            StorageLive(_267),
            _267 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:534:30: 534:35 (#0),
                    scope: scope[24],
                },
                kind: _265 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _266, move _267) -> [return: bb144, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_267),
            StorageDead(_266),
            (*_265) = move _256,
            StorageDead(_256),
            StorageDead(_265),
            StorageDead(_263),
            StorageDead(_260),
            _61 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:533:28: 543:22 (#0),
                    scope: scope[24],
                },
                kind: goto -> bb154,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_254),
            StorageLive(_268),
            StorageLive(_269),
            StorageLive(_270),
            StorageLive(_271),
            StorageLive(_272),
            _272 = &(*_228),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:540:29: 540:48 (#0),
                    scope: scope[24],
                },
                kind: _271 = <std::vec::Vec<util::primitives::StateID> as core::ops::Deref>::deref(move _272) -> [return: bb146, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _270 = &(*_271),
            StorageDead(_272),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:540:29: 540:48 (#0),
                    scope: scope[24],
                },
                kind: _269 = std::slice::<impl [util::primitives::StateID]>::to_vec(move _270) -> [return: bb147, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_270),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:540:29: 540:67 (#0),
                    scope: scope[24],
                },
                kind: _268 = std::vec::Vec::<util::primitives::StateID>::into_boxed_slice(move _269) -> [return: bb148, unwind: bb220],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_269),
            FakeRead(ForLet(None), _268),
            StorageDead(_271),
            StorageLive(_273),
            StorageLive(_274),
            _274 = &mut (*_268),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:541:25: 541:45 (#0),
                    scope: scope[25],
                },
                kind: _273 = core::slice::<impl [util::primitives::StateID]>::reverse(move _274) -> [return: bb149, unwind: bb219],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_274),
            StorageDead(_273),
            StorageLive(_275),
            StorageLive(_276),
            _276 = &mut _13,
            StorageLive(_277),
            StorageLive(_278),
            _278 = move _268,
            _277 = nfa::thompson::nfa::State::Union { alternates: move _278 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:542:77: 542:78 (#0),
                    scope: scope[25],
                },
                kind: drop(_278) -> [return: bb150, unwind: bb218],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_278),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:542:38: 542:79 (#0),
                    scope: scope[25],
                },
                kind: _275 = nfa::thompson::nfa::Inner::add(move _276, move _277) -> [return: bb151, unwind: bb218],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_277),
            StorageDead(_276),
            StorageLive(_279),
            StorageLive(_280),
            _280 = &mut _25,
            StorageLive(_281),
            _281 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:542:30: 542:35 (#0),
                    scope: scope[25],
                },
                kind: _279 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _280, move _281) -> [return: bb152, unwind: bb219],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_281),
            StorageDead(_280),
            (*_279) = move _275,
            StorageDead(_275),
            StorageDead(_279),
            _61 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:543:21: 543:22 (#0),
                    scope: scope[24],
                },
                kind: drop(_268) -> [return: bb153, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_268),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:533:28: 543:22 (#0),
                    scope: scope[24],
                },
                kind: goto -> bb154,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_253),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:530:28: 543:22 (#0),
                    scope: scope[24],
                },
                kind: goto -> bb155,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_237),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:528:21: 543:22 (#0),
                    scope: scope[24],
                },
                kind: goto -> bb156,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_229),
            StorageDead(_228),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:544:17: 544:18 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb162,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_282),
            StorageLive(_283),
            _283 = &mut _13,
            StorageLive(_284),
            _284 = nfa::thompson::nfa::State::Fail,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:546:34: 546:59 (#0),
                    scope: scope[9],
                },
                kind: _282 = nfa::thompson::nfa::Inner::add(move _283, move _284) -> [return: bb158, unwind: bb217],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_284),
            StorageDead(_283),
            StorageLive(_285),
            StorageLive(_286),
            _286 = &mut _25,
            StorageLive(_287),
            _287 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:546:26: 546:31 (#0),
                    scope: scope[9],
                },
                kind: _285 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _286, move _287) -> [return: bb159, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_287),
            StorageDead(_286),
            (*_285) = move _282,
            StorageDead(_282),
            StorageDead(_285),
            _61 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:545:32: 547:18 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb162,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_291),
            StorageDead(_290),
            StorageLive(_293),
            StorageLive(_294),
            _294 = &mut _25,
            StorageLive(_295),
            _295 = _67,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:549:26: 549:31 (#0),
                    scope: scope[26],
                },
                kind: _293 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _294, move _295) -> [return: bb161, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_295),
            StorageDead(_294),
            (*_293) = move _289,
            StorageDead(_289),
            StorageDead(_293),
            _61 = const (),
            StorageDead(_288),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:550:17: 550:18 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb162,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_68),
            StorageDead(_67),
            StorageDead(_64),
            StorageDead(_62),
            StorageDead(_61),
            _60 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:445:9: 552:10 (#4029),
                    scope: scope[8],
                },
                kind: goto -> bb30,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_298),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9: 47:42 (#1200),
                    scope: scope[3],
                },
                kind: _296 = std::vec::from_elem::<bool>(const false, move _297) -> [return: bb164, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_297),
            FakeRead(ForLet(None), _296),
            StorageLive(_299),
            StorageLive(_300),
            StorageLive(_301),
            StorageLive(_302),
            StorageLive(_303),
            StorageLive(_304),
            _304 = &_24,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#0),
                    scope: scope[27],
                },
                kind: _303 = <std::vec::Vec<(util::primitives::StateID, util::primitives::StateID)> as core::ops::Deref>::deref(move _304) -> [return: bb165, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _302 = &(*_303),
            StorageDead(_304),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#0),
                    scope: scope[27],
                },
                kind: _301 = core::slice::<impl [(util::primitives::StateID, util::primitives::StateID)]>::iter(move _302) -> [return: bb166, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_302),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#4039),
                    scope: scope[27],
                },
                kind: _300 = <core::slice::Iter<'_, (util::primitives::StateID, util::primitives::StateID)> as core::iter::IntoIterator>::into_iter(move _301) -> [return: bb167, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_301),
            PlaceMention(_300),
            StorageLive(_305),
            _305 = move _300,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:561:9: 589:10 (#4038),
                    scope: scope[28],
                },
                kind: goto -> bb168,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:561:9: 589:10 (#4038),
                    scope: scope[28],
                },
                kind: falseUnwind -> [real: bb169, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_306),
            StorageLive(_307),
            StorageLive(_308),
            StorageLive(_309),
            _309 = &mut _305,
            _308 = &mut (*_309),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#4039),
                    scope: scope[28],
                },
                kind: _307 = <core::slice::Iter<'_, (util::primitives::StateID, util::primitives::StateID)> as core::iter::Iterator>::next(move _308) -> [return: bb170, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_308),
            PlaceMention(_307),
            _310 = discriminant(_307),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#4039),
                    scope: scope[28],
                },
                kind: switchInt(move _310) -> [0: bb172, 1: bb173, otherwise: bb171],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _307),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#4039),
                    scope: scope[28],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:561:9: 589:10 (#4038),
                    scope: scope[28],
                },
                kind: falseEdge -> [real: bb174, imaginary: bb173],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_312),
            _312 = ((*((_307 as Some).0: &(util::primitives::StateID, util::primitives::StateID))).0: util::primitives::StateID),
            StorageLive(_313),
            _313 = ((*((_307 as Some).0: &(util::primitives::StateID, util::primitives::StateID))).1: util::primitives::StateID),
            StorageLive(_314),
            StorageLive(_315),
            StorageLive(_316),
            StorageLive(_317),
            _317 = &_296,
            StorageLive(_318),
            _318 = _312,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:562:24: 562:34 (#0),
                    scope: scope[29],
                },
                kind: _316 = <std::vec::Vec<bool> as core::ops::Index<util::primitives::StateID>>::index(move _317, move _318) -> [return: bb175, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _299 = const (),
            StorageDead(_309),
            StorageDead(_307),
            StorageDead(_306),
            StorageDead(_305),
            StorageDead(_303),
            StorageDead(_300),
            StorageDead(_299),
            StorageLive(_365),
            StorageLive(_366),
            _366 = &mut _13,
            StorageLive(_367),
            StorageLive(_368),
            StorageLive(_369),
            StorageLive(_370),
            _370 = &_25,
            _369 = &(*_370),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:591:19: 591:25 (#0),
                    scope: scope[27],
                },
                kind: _368 = <std::vec::Vec<util::primitives::StateID> as core::ops::Deref>::deref(move _369) -> [return: bb198, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _315 = (*_316),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:562:16: 562:34 (#0),
                    scope: scope[29],
                },
                kind: switchInt(move _315) -> [0: bb177, otherwise: bb176],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_318),
            StorageDead(_317),
            StorageDead(_316),
            StorageDead(_315),
            StorageDead(_314),
            StorageDead(_313),
            StorageDead(_312),
            StorageDead(_309),
            StorageDead(_307),
            StorageDead(_306),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[28],
                },
                kind: goto -> bb168,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_318),
            StorageDead(_317),
            StorageDead(_316),
            _314 = const (),
            StorageDead(_315),
            StorageDead(_314),
            StorageLive(_320),
            _320 = _313,
            FakeRead(ForLet(None), _320),
            StorageLive(_321),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:571:13: 573:14 (#0),
                    scope: scope[30],
                },
                kind: goto -> bb178,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:571:13: 573:14 (#0),
                    scope: scope[30],
                },
                kind: falseUnwind -> [real: bb179, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_322),
            StorageLive(_323),
            StorageLive(_324),
            StorageLive(_325),
            _325 = &((*_1).1: std::vec::Vec<nfa::thompson::builder::State>),
            StorageLive(_326),
            _326 = _320,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:571:47: 571:57 (#0),
                    scope: scope[31],
                },
                kind: _324 = <std::vec::Vec<nfa::thompson::builder::State> as core::ops::Index<util::primitives::StateID>>::index(move _325, move _326) -> [return: bb180, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _323 = &(*_324),
            StorageDead(_326),
            StorageDead(_325),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:571:36: 571:64 (#0),
                    scope: scope[31],
                },
                kind: _322 = nfa::thompson::builder::State::goto(move _323) -> [return: bb181, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_323),
            PlaceMention(_322),
            _327 = discriminant(_322),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:571:23: 571:33 (#0),
                    scope: scope[31],
                },
                kind: switchInt(move _327) -> [1: bb182, otherwise: bb184],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:571:23: 571:33 (#0),
                    scope: scope[31],
                },
                kind: falseEdge -> [real: bb183, imaginary: bb184],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_328),
            _328 = ((_322 as Some).0: util::primitives::StateID),
            StorageLive(_329),
            _329 = _328,
            _320 = move _329,
            StorageDead(_329),
            _60 = const (),
            StorageDead(_328),
            StorageDead(_324),
            StorageDead(_322),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:571:13: 573:14 (#0),
                    scope: scope[30],
                },
                kind: goto -> bb178,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_331),
            _321 = const (),
            StorageDead(_331),
            StorageDead(_324),
            StorageDead(_322),
            StorageDead(_321),
            StorageLive(_333),
            StorageLive(_334),
            StorageLive(_335),
            _335 = &_25,
            StorageLive(_336),
            _336 = _320,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:574:36: 574:46 (#0),
                    scope: scope[30],
                },
                kind: _334 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<util::primitives::StateID>>::index(move _335, move _336) -> [return: bb185, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _333 = (*_334),
            StorageDead(_336),
            StorageDead(_335),
            StorageLive(_337),
            StorageLive(_338),
            _338 = &mut _25,
            StorageLive(_339),
            _339 = _312,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:574:18: 574:28 (#0),
                    scope: scope[30],
                },
                kind: _337 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _338, move _339) -> [return: bb186, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_339),
            StorageDead(_338),
            (*_337) = move _333,
            StorageDead(_333),
            StorageDead(_337),
            StorageDead(_334),
            StorageLive(_340),
            StorageLive(_341),
            _341 = &mut _296,
            StorageLive(_342),
            _342 = _312,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:575:21: 575:31 (#0),
                    scope: scope[30],
                },
                kind: _340 = <std::vec::Vec<bool> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _341, move _342) -> [return: bb187, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_342),
            StorageDead(_341),
            (*_340) = const true,
            StorageDead(_340),
            StorageLive(_343),
            _343 = _313,
            FakeRead(ForLet(None), _343),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:584:13: 588:14 (#0),
                    scope: scope[32],
                },
                kind: goto -> bb188,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:584:13: 588:14 (#0),
                    scope: scope[32],
                },
                kind: falseUnwind -> [real: bb189, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_344),
            StorageLive(_345),
            StorageLive(_346),
            StorageLive(_347),
            _347 = &((*_1).1: std::vec::Vec<nfa::thompson::builder::State>),
            StorageLive(_348),
            _348 = _343,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:584:47: 584:54 (#0),
                    scope: scope[33],
                },
                kind: _346 = <std::vec::Vec<nfa::thompson::builder::State> as core::ops::Index<util::primitives::StateID>>::index(move _347, move _348) -> [return: bb190, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _345 = &(*_346),
            StorageDead(_348),
            StorageDead(_347),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:584:36: 584:61 (#0),
                    scope: scope[33],
                },
                kind: _344 = nfa::thompson::builder::State::goto(move _345) -> [return: bb191, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_345),
            PlaceMention(_344),
            _349 = discriminant(_344),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:584:23: 584:33 (#0),
                    scope: scope[33],
                },
                kind: switchInt(move _349) -> [1: bb192, otherwise: bb197],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:584:23: 584:33 (#0),
                    scope: scope[33],
                },
                kind: falseEdge -> [real: bb193, imaginary: bb197],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_350),
            _350 = ((_344 as Some).0: util::primitives::StateID),
            StorageLive(_351),
            StorageLive(_352),
            StorageLive(_353),
            _353 = &_25,
            StorageLive(_354),
            _354 = _320,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:585:37: 585:47 (#0),
                    scope: scope[33],
                },
                kind: _352 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<util::primitives::StateID>>::index(move _353, move _354) -> [return: bb194, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _351 = (*_352),
            StorageDead(_354),
            StorageDead(_353),
            StorageLive(_355),
            StorageLive(_356),
            _356 = &mut _25,
            StorageLive(_357),
            _357 = _343,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:585:22: 585:29 (#0),
                    scope: scope[33],
                },
                kind: _355 = <std::vec::Vec<util::primitives::StateID> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _356, move _357) -> [return: bb195, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_357),
            StorageDead(_356),
            (*_355) = move _351,
            StorageDead(_351),
            StorageDead(_355),
            StorageDead(_352),
            StorageLive(_358),
            StorageLive(_359),
            _359 = &mut _296,
            StorageLive(_360),
            _360 = _343,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:586:25: 586:32 (#0),
                    scope: scope[33],
                },
                kind: _358 = <std::vec::Vec<bool> as core::ops::IndexMut<util::primitives::StateID>>::index_mut(move _359, move _360) -> [return: bb196, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_360),
            StorageDead(_359),
            (*_358) = const true,
            StorageDead(_358),
            StorageLive(_361),
            _361 = _350,
            _343 = move _361,
            StorageDead(_361),
            _60 = const (),
            StorageDead(_350),
            StorageDead(_346),
            StorageDead(_344),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:584:13: 588:14 (#0),
                    scope: scope[32],
                },
                kind: goto -> bb188,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_363),
            _306 = const (),
            StorageDead(_363),
            StorageDead(_346),
            StorageDead(_344),
            StorageDead(_343),
            StorageDead(_320),
            StorageDead(_313),
            StorageDead(_312),
            StorageDead(_309),
            StorageDead(_307),
            StorageDead(_306),
            _60 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:561:9: 589:10 (#4038),
                    scope: scope[28],
                },
                kind: goto -> bb168,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _367 = &(*_368),
            StorageDead(_369),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:591:9: 591:26 (#0),
                    scope: scope[27],
                },
                kind: _365 = nfa::thompson::nfa::Inner::remap(move _366, move _367) -> [return: bb199, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_367),
            StorageDead(_366),
            StorageDead(_370),
            StorageDead(_368),
            StorageDead(_365),
            StorageLive(_371),
            StorageLive(_372),
            _372 = move _13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:592:25: 592:39 (#0),
                    scope: scope[27],
                },
                kind: _371 = nfa::thompson::nfa::Inner::into_nfa(move _372) -> [return: bb200, unwind: bb214],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_372),
            FakeRead(ForLet(None), _371),
            StorageLive(_373),
            _373 = move _371,
            _0 = core::result::Result::<nfa::thompson::nfa::NFA, nfa::thompson::error::BuildError>::Ok(move _373),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:602:21: 602:22 (#0),
                    scope: scope[34],
                },
                kind: drop(_373) -> [return: bb201, unwind: bb213],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_373),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:5: 603:6 (#0),
                    scope: scope[27],
                },
                kind: drop(_371) -> [return: bb202, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_371),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:5: 603:6 (#0),
                    scope: scope[3],
                },
                kind: drop(_296) -> [return: bb203, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_296),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:5: 603:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_25) -> [return: bb204, unwind: bb244],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:5: 603:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_24) -> [return: bb205, unwind: bb245],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:5: 603:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_13) -> [return: bb206, unwind: bb246],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:6: 603:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb212,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_48),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:72: 439:73 (#0),
                    scope: scope[3],
                },
                kind: drop(_39) -> [return: bb208, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageDead(_44),
            StorageDead(_39),
            StorageDead(_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:5: 603:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_25) -> [return: bb209, unwind: bb244],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:5: 603:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_24) -> [return: bb210, unwind: bb245],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:5: 603:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_13) -> [return: bb211, unwind: bb246],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:6: 603:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb212,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:6: 603:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:5: 603:6 (#0),
                    scope: scope[27],
                },
                kind: drop(_371) -> [return: bb215, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:592:38: 592:39 (#0),
                    scope: scope[27],
                },
                kind: drop(_372) -> [return: bb215, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:5: 603:6 (#0),
                    scope: scope[3],
                },
                kind: drop(_296) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:549:74: 549:75 (#0),
                    scope: scope[26],
                },
                kind: drop(_291) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:546:58: 546:59 (#0),
                    scope: scope[9],
                },
                kind: drop(_284) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:542:78: 542:79 (#0),
                    scope: scope[25],
                },
                kind: drop(_277) -> [return: bb219, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:543:21: 543:22 (#0),
                    scope: scope[24],
                },
                kind: drop(_268) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:540:66: 540:67 (#0),
                    scope: scope[24],
                },
                kind: drop(_269) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:537:26: 537:27 (#0),
                    scope: scope[24],
                },
                kind: drop(_258) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:529:62: 529:63 (#0),
                    scope: scope[24],
                },
                kind: drop(_233) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:524:78: 524:79 (#0),
                    scope: scope[23],
                },
                kind: drop(_223) -> [return: bb224, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:525:21: 525:22 (#0),
                    scope: scope[22],
                },
                kind: drop(_216) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:523:66: 523:67 (#0),
                    scope: scope[22],
                },
                kind: drop(_217) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:520:26: 520:27 (#0),
                    scope: scope[22],
                },
                kind: drop(_206) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:512:62: 512:63 (#0),
                    scope: scope[22],
                },
                kind: drop(_181) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:508:22: 508:23 (#0),
                    scope: scope[21],
                },
                kind: drop(_168) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:487:22: 487:23 (#0),
                    scope: scope[18],
                },
                kind: drop(_138) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:471:73: 471:74 (#0),
                    scope: scope[15],
                },
                kind: drop(_112) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:466:63: 466:64 (#0),
                    scope: scope[14],
                },
                kind: drop(_103) -> [return: bb232, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:467:25: 467:26 (#0),
                    scope: scope[13],
                },
                kind: drop(_100) -> [return: bb233, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:467:25: 467:26 (#0),
                    scope: scope[12],
                },
                kind: drop(_95) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:464:71: 464:72 (#0),
                    scope: scope[12],
                },
                kind: drop(_96) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:461:26: 461:27 (#0),
                    scope: scope[12],
                },
                kind: drop(_91) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:458:54: 458:55 (#0),
                    scope: scope[12],
                },
                kind: drop(_89) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:454:73: 454:74 (#0),
                    scope: scope[11],
                },
                kind: drop(_79) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:71: 439:72 (#4027),
                    scope: scope[5],
                },
                kind: drop(_50) -> [return: bb239, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:71: 439:72 (#4028),
                    scope: scope[3],
                },
                kind: drop(_48) -> [return: bb240, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:72: 439:73 (#0),
                    scope: scope[3],
                },
                kind: drop(_39) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:71: 439:72 (#4027),
                    scope: scope[3],
                },
                kind: drop(_40) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:439:70: 439:71 (#0),
                    scope: scope[3],
                },
                kind: drop(_41) -> [return: bb243, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:5: 603:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_25) -> [return: bb244, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:5: 603:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_24) -> [return: bb245, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:603:5: 603:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_13) -> [return: bb246, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:410:5: 603:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<nfa::thompson::nfa::NFA, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:414:10: 414:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::builder::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:411:9: 411:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/builder.rs:412:25: 412:32 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:412:9: 412:23 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:412:9: 412:23 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:412:9: 412:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/builder.rs:413:27: 413:34 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:413:9: 413:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:413:9: 413:25 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:413:9: 413:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:415:9: 415:79 (#1192),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:415:17: 415:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::option::Option<util::primitives::PatternID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:415:17: 415:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:105:21: 109:6 (#1194),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:105:21: 109:6 (#1194),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9: 108:73 (#1194),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38: 108:72 (#1195),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:415:44: 415:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:415:44: 415:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:415:44: 415:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:423:23: 423:44 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:423:13: 423:20 (#0),
                    },
                ),
            ),
        ),
        ty: nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:423:13: 423:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:424:9: 424:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:424:9: 424:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:424:22: 424:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:425:9: 425:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:425:9: 425:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:425:25: 425:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:426:9: 426:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:426:9: 426:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::look::LookMatcher,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:426:30: 426:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::look::LookMatcher,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:426:30: 426:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9: 44:32 (#1198),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:432:13: 432:24 (#0),
                    },
                ),
            ),
        ),
        ty: std::vec::Vec<(util::primitives::StateID, util::primitives::StateID), std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:432:13: 432:24 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9: 44:32 (#1199),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:435:13: 435:22 (#0),
                    },
                ),
            ),
        ),
        ty: std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:435:13: 435:22 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:436:9: 436:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:436:9: 436:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:436:22: 436:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<nfa::thompson::builder::State, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:436:22: 436:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:438:9: 438:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:438:9: 438:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:438:24: 438:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:438:40: 438:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:438:58: 438:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:438:58: 438:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:438:58: 438:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:438:58: 438:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:439:9: 439:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:439:9: 439:72 (#4027),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:439:9: 439:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), util::captures::GroupInfoError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:439:9: 439:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:439:9: 439:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [std::vec::Vec<core::option::Option<std::sync::Arc<str, std::alloc::Global>>, std::alloc::Global>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:439:26: 439:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [std::vec::Vec<core::option::Option<std::sync::Arc<str, std::alloc::Global>>, std::alloc::Global>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:439:26: 439:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<std::vec::Vec<core::option::Option<std::sync::Arc<str, std::alloc::Global>>, std::alloc::Global>, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:439:26: 439:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<std::vec::Vec<core::option::Option<std::sync::Arc<str, std::alloc::Global>>, std::alloc::Global>, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:439:26: 439:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:439:71: 439:72 (#4028),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _39,
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:439:9: 439:72 (#4027),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:439:71: 439:72 (#4028),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:439:71: 439:72 (#4028),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:439:71: 439:72 (#4028),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:439:71: 439:72 (#4028),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _39,
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:439:9: 439:72 (#4027),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:439:9: 439:72 (#4027),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:439:9: 439:72 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:9: 552:10 (#4029),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::builder::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#4030),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::builder::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, nfa::thompson::builder::State>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [nfa::thompson::builder::State],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [nfa::thompson::builder::State],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<nfa::thompson::builder::State, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _53,
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#4030),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#4030),
                    },
                ),
            ),
        ),
        ty: util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::builder::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#4030),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:410:5: 603:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#4030),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<(util::primitives::StateID, &'{erased} nfa::thompson::builder::State)>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#4030),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::builder::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#4030),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::builder::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#4030),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:9: 552:10 (#4029),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:9: 552:10 (#4029),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _62,
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#4030),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:445:13: 445:25 (#4031),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:14: 445:17 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _62,
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:445:29: 445:64 (#4030),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:445:13: 445:25 (#4031),
                    },
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::builder::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:445:19: 445:24 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:447:17: 447:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_68),
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:447:17: 447:38 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:447:32: 447:36 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:451:21: 451:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<(util::primitives::StateID, util::primitives::StateID), std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:451:21: 451:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (util::primitives::StateID, util::primitives::StateID),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:451:34: 451:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:451:35: 451:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:451:40: 451:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_68),
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:453:17: 453:43 (#0),
                    },
                ),
            ),
        ),
        ty: nfa::thompson::nfa::Transition,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:453:36: 453:41 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:454:34: 454:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:454:34: 454:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:454:42: 454:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: nfa::thompson::nfa::Transition,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:454:66: 454:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:454:26: 454:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:454:21: 454:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:454:27: 454:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_68),
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:456:17: 456:50 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} std::vec::Vec<nfa::thompson::nfa::Transition, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:456:33: 456:48 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:457:21: 468:22 (#0),
                },
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:457:34: 468:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:457:21: 468:22 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:457:40: 457:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:457:21: 468:22 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<nfa::thompson::nfa::Transition, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:457:40: 457:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:457:21: 468:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:458:30: 458:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:457:21: 468:22 (#0),
                },
            ),
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:458:38: 458:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:457:21: 468:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:459:30: 459:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:457:21: 468:22 (#0),
                },
            ),
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:459:38: 461:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: nfa::thompson::nfa::Transition,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:460:36: 460:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:457:21: 468:22 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::nfa::Transition,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:460:47: 460:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:457:21: 468:22 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<nfa::thompson::nfa::Transition, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:460:36: 460:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:464:33: 464:72 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:463:33: 463:44 (#0),
                    },
                ),
            ),
        ),
        ty: std::boxed::Box<[nfa::thompson::nfa::Transition], std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:463:33: 463:44 (#0),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::vec::Vec<nfa::thompson::nfa::Transition, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:464:33: 464:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [nfa::thompson::nfa::Transition],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:464:33: 464:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [nfa::thompson::nfa::Transition],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:464:33: 464:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<nfa::thompson::nfa::Transition, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:464:33: 464:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:465:42: 465:75 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:465:33: 465:39 (#0),
                    },
                ),
            ),
        ),
        ty: nfa::thompson::nfa::SparseTransitions,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:465:33: 465:39 (#0),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::boxed::Box<[nfa::thompson::nfa::Transition], std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:465:62: 465:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/builder.rs:466:29: 466:64 (#0),
                },
            ),
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:466:29: 466:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/builder.rs:466:29: 466:64 (#0),
                },
            ),
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:466:37: 466:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: nfa::thompson::nfa::SparseTransitions,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:466:56: 466:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:457:21: 468:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:457:26: 457:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:457:21: 468:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:457:21: 457:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:457:21: 468:22 (#0),
                },
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:457:27: 457:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_68),
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:470:17: 470:43 (#0),
                    },
                ),
            ),
        ),
        ty: util::look::Look,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:470:31: 470:35 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_68),
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:470:17: 470:43 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:470:37: 470:41 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:471:34: 471:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:471:34: 471:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:471:42: 471:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::look::Look,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:471:61: 471:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:471:67: 471:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:471:26: 471:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:471:21: 471:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:471:27: 471:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_68),
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:473:17: 473:70 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:473:39: 473:49 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_68),
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:473:17: 473:70 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:473:51: 473:62 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_68),
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:473:17: 473:70 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:473:64: 473:68 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:476:32: 479:57 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:476:25: 476:29 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:476:25: 476:29 (#0),
            scope: scope[16],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:476:32: 478:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::captures::GroupInfo,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:476:32: 477:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::captures::GroupInfo,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:476:32: 477:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:476:32: 476:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:478:31: 478:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:478:43: 478:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:478:43: 478:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:479:33: 479:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:479:33: 479:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:481:25: 481:76 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:480:25: 480:29 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:480:25: 480:29 (#0),
            scope: scope[17],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<util::primitives::SmallIndex, util::primitives::SmallIndexError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:481:25: 481:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:481:41: 481:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:481:54: 481:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:481:54: 481:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:482:34: 487:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:482:34: 482:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:482:42: 487:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:483:25: 483:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:484:25: 484:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:485:25: 485:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:486:25: 486:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:482:26: 482:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:482:21: 482:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:482:27: 482:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_68),
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:489:17: 489:68 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:489:37: 489:47 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_68),
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:489:17: 489:68 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:489:49: 489:60 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_68),
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:489:17: 489:68 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:489:62: 489:66 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:495:32: 500:34 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:495:25: 495:29 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:495:25: 495:29 (#0),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:495:32: 499:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:495:32: 498:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:495:32: 497:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::captures::GroupInfo,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:495:32: 496:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::captures::GroupInfo,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:495:32: 496:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:495:32: 495:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:497:31: 497:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:497:43: 497:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:497:43: 497:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:498:33: 498:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:498:33: 498:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:502:25: 502:76 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:501:25: 501:29 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:501:25: 501:29 (#0),
            scope: scope[20],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<util::primitives::SmallIndex, util::primitives::SmallIndexError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:502:25: 502:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:502:41: 502:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:502:54: 502:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:502:54: 502:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:503:34: 508:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:503:34: 503:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:503:42: 508:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:504:25: 504:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:505:25: 505:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:506:25: 506:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:507:25: 507:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:503:26: 503:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:503:21: 503:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:503:27: 503:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_68),
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:510:17: 510:48 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:510:32: 510:46 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:511:21: 525:22 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:511:24: 511:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:511:21: 525:22 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:511:24: 511:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:512:38: 512:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:512:38: 512:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:512:46: 512:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:512:30: 512:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:512:25: 512:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:512:31: 512:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:511:21: 525:22 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:513:31: 513:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:511:21: 525:22 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:513:31: 513:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:511:21: 525:22 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:513:31: 513:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:514:25: 514:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<(util::primitives::StateID, util::primitives::StateID), std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:514:25: 514:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (util::primitives::StateID, util::primitives::StateID),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:514:38: 514:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:514:39: 514:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:514:44: 514:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:514:54: 514:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:514:44: 514:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:515:38: 515:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:515:48: 515:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:515:38: 515:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:515:30: 515:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:515:25: 515:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:515:31: 515:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:511:21: 525:22 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:516:31: 516:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:511:21: 525:22 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:516:31: 516:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:511:21: 525:22 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:516:31: 516:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:517:38: 520:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:517:38: 517:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:517:46: 520:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:518:35: 518:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:518:45: 518:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:518:35: 518:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:519:35: 519:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:519:45: 519:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:519:35: 519:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:517:30: 517:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:517:25: 517:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:517:31: 517:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:523:29: 523:67 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:522:29: 522:39 (#0),
                    },
                ),
            ),
        ),
        ty: std::boxed::Box<[util::primitives::StateID], std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:522:29: 522:39 (#0),
            scope: scope[22],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:523:29: 523:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:523:29: 523:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:523:29: 523:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:523:29: 523:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:524:38: 524:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:524:38: 524:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:524:46: 524:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::boxed::Box<[util::primitives::StateID], std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:524:66: 524:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:524:30: 524:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:524:25: 524:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:524:31: 524:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_68),
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:527:17: 527:55 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:527:39: 527:53 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:528:21: 543:22 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:528:24: 528:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:528:21: 543:22 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:528:24: 528:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:529:38: 529:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:529:38: 529:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:529:46: 529:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:529:30: 529:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:529:25: 529:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:529:31: 529:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:528:21: 543:22 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:530:31: 530:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:528:21: 543:22 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:530:31: 530:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:528:21: 543:22 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:530:31: 530:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:531:25: 531:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<(util::primitives::StateID, util::primitives::StateID), std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:531:25: 531:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (util::primitives::StateID, util::primitives::StateID),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:531:38: 531:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:531:39: 531:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:531:44: 531:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:531:54: 531:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:531:44: 531:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:532:38: 532:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:532:48: 532:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:532:38: 532:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:532:30: 532:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:532:25: 532:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:532:31: 532:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:528:21: 543:22 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:533:31: 533:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:528:21: 543:22 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:533:31: 533:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:528:21: 543:22 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:533:31: 533:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:534:38: 537:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:534:38: 534:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:534:46: 537:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:535:35: 535:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:535:45: 535:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:535:35: 535:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:536:35: 536:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:536:45: 536:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:536:35: 536:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:534:30: 534:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:534:25: 534:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:534:31: 534:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:540:29: 540:67 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:539:29: 539:43 (#0),
                    },
                ),
            ),
        ),
        ty: std::boxed::Box<[util::primitives::StateID], std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:539:29: 539:43 (#0),
            scope: scope[24],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:540:29: 540:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:540:29: 540:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:540:29: 540:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:540:29: 540:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:541:25: 541:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:541:25: 541:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:542:38: 542:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:542:38: 542:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:542:46: 542:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::boxed::Box<[util::primitives::StateID], std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:542:66: 542:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:542:30: 542:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:542:25: 542:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:542:31: 542:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:546:34: 546:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:546:34: 546:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:546:42: 546:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:546:26: 546:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:546:21: 546:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:546:27: 546:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_68),
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:446:19: 446:25 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:548:17: 548:44 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:548:32: 548:42 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:549:34: 549:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:549:34: 549:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:549:42: 549:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:549:62: 549:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:549:26: 549:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:549:21: 549:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:549:27: 549:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9: 47:42 (#1200),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:560:13: 560:25 (#0),
                    },
                ),
            ),
        ),
        ty: std::vec::Vec<bool, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:560:13: 560:25 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:560:40: 560:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<nfa::thompson::builder::State, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:560:40: 560:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:9: 589:10 (#4038),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, (util::primitives::StateID, util::primitives::StateID)>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#4039),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, (util::primitives::StateID, util::primitives::StateID)>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [(util::primitives::StateID, util::primitives::StateID)],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [(util::primitives::StateID, util::primitives::StateID)],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<(util::primitives::StateID, util::primitives::StateID), std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _300,
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#4039),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#4039),
                    },
                ),
            ),
        ),
        ty: core::slice::Iter<'{erased}, (util::primitives::StateID, util::primitives::StateID)>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#4039),
            scope: scope[27],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#4039),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} (util::primitives::StateID, util::primitives::StateID)>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#4039),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, (util::primitives::StateID, util::primitives::StateID)>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#4039),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, (util::primitives::StateID, util::primitives::StateID)>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#4039),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:9: 589:10 (#4038),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:9: 589:10 (#4038),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _307,
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#4039),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:561:13: 561:36 (#4040),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:15: 561:23 (#0),
            scope: scope[28],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _307,
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:561:40: 561:54 (#4039),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:561:13: 561:36 (#4040),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:561:25: 561:35 (#0),
            scope: scope[28],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:562:13: 564:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:562:16: 562:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:562:24: 562:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<bool, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:562:16: 562:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:562:25: 562:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:562:35: 564:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:570:32: 570:42 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:570:17: 570:29 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:570:17: 570:29 (#0),
            scope: scope[29],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:571:13: 573:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:571:13: 573:14 (#4042),
                },
            ),
        ),
        ty: core::option::Option<util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:571:36: 571:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:571:13: 573:14 (#4042),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::builder::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:571:36: 571:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:571:13: 573:14 (#4042),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::builder::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:571:47: 571:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:571:13: 573:14 (#4042),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<nfa::thompson::builder::State, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:571:36: 571:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:571:13: 573:14 (#4042),
                },
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:571:48: 571:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:571:23: 571:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _322,
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:571:36: 571:64 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:571:23: 571:33 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:571:28: 571:32 (#0),
            scope: scope[31],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:572:28: 572:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:571:13: 573:14 (#4042),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:571:13: 573:14 (#4042),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:571:13: 573:14 (#4042),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:571:13: 573:14 (#4042),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:574:31: 574:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:574:36: 574:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:574:31: 574:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:574:37: 574:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:574:18: 574:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:574:13: 574:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:574:19: 574:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:575:21: 575:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<bool, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:575:13: 575:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:575:22: 575:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:583:29: 583:39 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:583:17: 583:26 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:583:17: 583:26 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:584:13: 588:14 (#4043),
                },
            ),
        ),
        ty: core::option::Option<util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:584:36: 584:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:584:13: 588:14 (#4043),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::builder::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:584:36: 584:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:584:13: 588:14 (#4043),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::builder::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:584:47: 584:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:584:13: 588:14 (#4043),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<nfa::thompson::builder::State, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:584:36: 584:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:584:13: 588:14 (#4043),
                },
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:584:48: 584:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:584:23: 584:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _344,
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:584:36: 584:61 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:584:23: 584:33 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:584:28: 584:32 (#0),
            scope: scope[33],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:585:32: 585:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:585:37: 585:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:585:32: 585:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:585:38: 585:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:585:22: 585:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:585:17: 585:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:585:23: 585:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:586:25: 586:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<bool, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:586:17: 586:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:586:26: 586:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:587:25: 587:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/builder.rs:584:13: 588:14 (#4043),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:584:13: 588:14 (#4043),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:584:13: 588:14 (#4043),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:584:13: 588:14 (#4043),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:591:9: 591:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:591:9: 591:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:591:19: 591:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:591:19: 591:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:591:19: 591:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:591:19: 591:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:592:25: 592:39 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:592:13: 592:22 (#0),
                    },
                ),
            ),
        ),
        ty: nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:592:13: 592:22 (#0),
            scope: scope[27],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:592:25: 592:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:602:12: 602:21 (#0),
            scope: scope[0],
        },
    },
]