[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/determinize/state.rs:748:19: 748:36 (#0),
                    scope: scope[0],
                },
                kind: _4 = util::determinize::state::read_varu32(move _5) -> [return: bb1, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            PlaceMention(_4),
            StorageLive(_2),
            _2 = (_4.0: u32),
            StorageLive(_3),
            _3 = (_4.1: usize),
            StorageDead(_4),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = _2,
            _9 = const 1_i32 as u32 (IntToInt),
            _10 = Lt(move _9, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/determinize/state.rs:749:32: 749:39 (#0),
                    scope: scope[1],
                },
                kind: assert(move _10, "attempt to shift right by `{}`, which would overflow", const 1_i32) -> [success: bb2, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = Shr(move _8, const 1_i32),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/determinize/state.rs:749:17: 749:40 (#0),
                    scope: scope[1],
                },
                kind: _6 = <i32 as util::int::I32>::from_bits(move _7) -> [return: bb3, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            FakeRead(ForLet(None), _6),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            _14 = _2,
            _13 = BitAnd(move _14, const 1_u32),
            StorageDead(_14),
            _12 = Ne(move _13, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/determinize/state.rs:750:8: 750:19 (#0),
                    scope: scope[2],
                },
                kind: switchInt(move _12) -> [0: bb5, otherwise: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageLive(_15),
            _15 = _6,
            _6 = Not(move _15),
            StorageDead(_15),
            _11 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/determinize/state.rs:750:5: 752:6 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            _11 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/determinize/state.rs:750:5: 752:6 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            StorageLive(_16),
            _16 = _6,
            StorageLive(_17),
            _17 = _3,
            _0 = (move _16, move _17),
            StorageDead(_17),
            StorageDead(_16),
            StorageDead(_6),
            StorageDead(_3),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/determinize/state.rs:754:2: 754:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/determinize/state.rs:747:1: 754:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (i32, usize),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:747:32: 747:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/determinize/state.rs:747:22: 747:27 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/determinize/state.rs:747:16: 747:20 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/determinize/state.rs:747:16: 747:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:747:16: 747:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _4,
                                ),
                                regex-automata/src/util/determinize/state.rs:748:19: 748:36 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/determinize/state.rs:748:9: 748:16 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:748:10: 748:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _4,
                                ),
                                regex-automata/src/util/determinize/state.rs:748:19: 748:36 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/determinize/state.rs:748:9: 748:16 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:748:14: 748:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u32, usize),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:748:19: 748:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:748:31: 748:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/determinize/state.rs:749:17: 749:40 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/determinize/state.rs:749:9: 749:14 (#0),
                    },
                ),
            ),
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:749:9: 749:14 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:749:32: 749:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:749:32: 749:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:749:32: 749:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:749:32: 749:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:750:5: 752:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:750:8: 750:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:750:8: 750:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:750:8: 750:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:751:14: 751:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/determinize/state.rs:753:5: 753:11 (#0),
                },
            ),
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:753:6: 753:7 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/determinize/state.rs:753:5: 753:11 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/determinize/state.rs:753:9: 753:10 (#0),
            scope: scope[0],
        },
    },
]