[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:105:25: 105:59 (#0),
                    scope: scope[0],
                },
                kind: _6 = aho_corasick::Input::<'_>::new::<[u8]>(move _7) -> [return: bb1, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageLive(_8),
            _8 = aho_corasick::Anchored::Yes,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:105:25: 106:55 (#0),
                    scope: scope[0],
                },
                kind: _5 = aho_corasick::Input::<'_>::anchored(move _6, move _8) -> [return: bb2, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_6),
            StorageLive(_9),
            StorageLive(_10),
            _10 = (_3.0: usize),
            StorageLive(_11),
            _11 = (_3.1: usize),
            _9 = core::ops::Range::<usize> { start: move _10, end: move _11 },
            StorageDead(_11),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:105:25: 107:44 (#0),
                    scope: scope[0],
                },
                kind: _4 = aho_corasick::Input::<'_>::span::<core::ops::Range<usize>>(move _5, move _9) -> [return: bb3, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_5),
            FakeRead(ForLet(None), _4),
            StorageLive(_12),
            StorageLive(_13),
            _13 = &((*_1).0: aho_corasick::AhoCorasick),
            StorageLive(_14),
            _14 = move _4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:108:13: 109:29 (#0),
                    scope: scope[1],
                },
                kind: _12 = aho_corasick::AhoCorasick::find::<'_, aho_corasick::Input<'_>>(move _13, move _14) -> [return: bb4, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            StorageDead(_13),
            StorageLive(_15),
            _15 = {closure@regex-automata/src/util/prefilter/aho_corasick.rs:110:22: 110:25},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:108:13: 110:66 (#0),
                    scope: scope[1],
                },
                kind: _0 = core::option::Option::<aho_corasick::Match>::map::<util::search::Span, {closure@regex-automata/src/util/prefilter/aho_corasick.rs:110:22: 110:25}>(move _12, move _15) -> [return: bb5, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageDead(_12),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:112:6: 112:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:98:5: 112:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::Span>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:98:54: 98:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} util::prefilter::aho_corasick::AhoCorasick,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:98:15: 98:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/prefilter/aho_corasick.rs:98:32: 98:37 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/aho_corasick.rs:98:22: 98:30 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/aho_corasick.rs:98:22: 98:30 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:98:22: 98:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/prefilter/aho_corasick.rs:98:45: 98:49 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/aho_corasick.rs:98:39: 98:43 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/aho_corasick.rs:98:39: 98:43 (#0),
                    },
                ),
            ),
        ),
        ty: util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:98:39: 98:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/aho_corasick.rs:105:25: 107:44 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/aho_corasick.rs:105:17: 105:22 (#0),
                    },
                ),
            ),
        ),
        ty: aho_corasick::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:105:17: 105:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: aho_corasick::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:105:25: 106:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: aho_corasick::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:105:25: 105:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:105:50: 105:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: aho_corasick::Anchored,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:106:27: 106:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:107:23: 107:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:107:23: 107:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:107:35: 107:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:108:13: 110:66 (#0),
                },
            ),
        ),
        ty: core::option::Option<aho_corasick::Match>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:108:13: 109:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:108:13: 110:66 (#0),
                },
            ),
        ),
        ty: &'{erased} aho_corasick::AhoCorasick,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:108:13: 108:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:108:13: 110:66 (#0),
                },
            ),
        ),
        ty: aho_corasick::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:109:23: 109:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:108:13: 110:66 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:3705 ~ regex_automata[00dd]::util::prefilter::aho_corasick::{impl#1}::prefix::{closure#0}),
            [
                i32,
                Binder { value: extern "RustCall" fn((aho_corasick::Match,)) -> util::search::Span, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:110:22: 110:65 (#0),
            scope: scope[0],
        },
    },
]