[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            _5 = &((*_1).0: hybrid::regex::Regex),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:667:23: 667:39 (#0),
                    scope: scope[0],
                },
                kind: _4 = hybrid::regex::Regex::forward(move _5) -> [return: bb1, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            FakeRead(ForLet(None), _4),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            _11 = &mut ((*_2).0: core::option::Option<hybrid::regex::Cache>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:668:32: 668:48 (#0),
                    scope: scope[1],
                },
                kind: _10 = core::option::Option::<hybrid::regex::Cache>::as_mut(move _11) -> [return: bb2, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:668:32: 668:57 (#0),
                    scope: scope[1],
                },
                kind: _9 = core::option::Option::<&mut hybrid::regex::Cache>::unwrap(move _10) -> [return: bb3, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _8 = &mut (*_9),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:668:32: 668:72 (#0),
                    scope: scope[1],
                },
                kind: _7 = hybrid::regex::Cache::as_parts_mut(move _8) -> [return: bb4, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            _6 = move (_7.0: &mut hybrid::dfa::Cache),
            FakeRead(ForLet(None), _6),
            StorageDead(_9),
            StorageDead(_7),
            StorageLive(_12),
            StorageLive(_13),
            _13 = &(*_4),
            StorageLive(_14),
            StorageLive(_15),
            _15 = &mut _6,
            _14 = &mut (*(*_15)),
            StorageLive(_16),
            _16 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:669:13: 669:53 (#0),
                    scope: scope[2],
                },
                kind: _12 = hybrid::dfa::DFA::try_search_fwd(move _13, move _14, move _16) -> [return: bb5, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_14),
            StorageDead(_13),
            StorageLive(_17),
            _17 = {closure@regex-automata/src/meta/wrappers.rs:669:62: 669:65},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:669:13: 669:75 (#0),
                    scope: scope[2],
                },
                kind: _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::map_err::<meta::error::RetryFailError, {closure@regex-automata/src/meta/wrappers.rs:669:62: 669:65}>(move _12, move _17) -> [return: bb6, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            StorageDead(_12),
            StorageDead(_6),
            StorageDead(_4),
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:677:6: 677:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:669:74: 669:75 (#0),
                    scope: scope[2],
                },
                kind: drop(_12) -> [return: bb8, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/meta/wrappers.rs:660:5: 677:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::option::Option<util::search::HalfMatch>, meta::error::RetryFailError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:664:10: 664:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} meta::wrappers::HybridEngine,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:661:9: 661:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/meta/wrappers.rs:662:16: 662:32 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/meta/wrappers.rs:662:9: 662:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/meta/wrappers.rs:662:9: 662:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut meta::wrappers::HybridCache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:662:9: 662:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/meta/wrappers.rs:663:16: 663:26 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/meta/wrappers.rs:663:9: 663:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/meta/wrappers.rs:663:9: 663:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:663:9: 663:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/meta/wrappers.rs:667:23: 667:39 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/meta/wrappers.rs:667:17: 667:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} hybrid::dfa::DFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:667:17: 667:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hybrid::regex::Regex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:667:23: 667:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/meta/wrappers.rs:668:32: 668:74 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/meta/wrappers.rs:668:17: 668:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut hybrid::dfa::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:668:17: 668:29 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} mut hybrid::dfa::Cache, &'{erased} mut hybrid::dfa::Cache),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:668:32: 668:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hybrid::regex::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:668:32: 668:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hybrid::regex::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:668:32: 668:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} mut hybrid::regex::Cache>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:668:32: 668:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::option::Option<hybrid::regex::Cache>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:668:32: 668:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/meta/wrappers.rs:669:13: 669:75 (#0),
                },
            ),
        ),
        ty: core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:669:13: 669:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/meta/wrappers.rs:669:13: 669:75 (#0),
                },
            ),
        ),
        ty: &'{erased} hybrid::dfa::DFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:669:13: 669:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/meta/wrappers.rs:669:13: 669:75 (#0),
                },
            ),
        ),
        ty: &'{erased} mut hybrid::dfa::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:669:32: 669:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/meta/wrappers.rs:669:13: 669:75 (#0),
                },
            ),
        ),
        ty: &'{erased} mut &'{erased} mut hybrid::dfa::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:669:32: 669:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/meta/wrappers.rs:669:13: 669:75 (#0),
                },
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:669:47: 669:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/meta/wrappers.rs:669:13: 669:75 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:2232 ~ regex_automata[00dd]::meta::wrappers::{impl#10}::try_search_half_fwd::{closure#0}),
            [
                i32,
                Binder { value: extern "RustCall" fn((util::search::MatchError,)) -> meta::error::RetryFailError, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/meta/wrappers.rs:669:62: 669:74 (#0),
            scope: scope[0],
        },
    },
]