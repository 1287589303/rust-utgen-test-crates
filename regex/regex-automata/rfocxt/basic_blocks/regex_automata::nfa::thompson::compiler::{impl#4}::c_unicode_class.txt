[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1380:12: 1380:26 (#0),
                    scope: scope[0],
                },
                kind: _3 = regex_syntax::hir::ClassUnicode::is_ascii(move _4) -> [return: bb1, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1380:12: 1380:26 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [0: bb41, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1381:23: 1381:39 (#0),
                    scope: scope[0],
                },
                kind: _7 = nfa::thompson::compiler::Compiler::add_empty(move _8) -> [return: bb3, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1381:23: 1381:40 (#4243),
                    scope: scope[0],
                },
                kind: _6 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _7) -> [return: bb4, unwind: bb214],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            PlaceMention(_6),
            _9 = discriminant(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1381:23: 1381:40 (#4243),
                    scope: scope[0],
                },
                kind: switchInt(move _9) -> [0: bb7, 1: bb6, otherwise: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1381:23: 1381:40 (#4243),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1381:39: 1381:40 (#4244),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb8, imaginary: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_13),
            _13 = ((_6 as Continue).0: util::primitives::StateID),
            _5 = _13,
            StorageDead(_13),
            FakeRead(ForLet(None), _5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1381:40: 1381:41 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb10, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_10),
            _10 = move ((_6 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>),
            StorageLive(_12),
            _12 = move _10,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1381:23: 1381:40 (#4243),
                    scope: scope[3],
                },
                kind: _0 = <core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _12) -> [return: bb9, unwind: bb211],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1381:39: 1381:40 (#4244),
                    scope: scope[0],
                },
                kind: drop(_10) -> [return: bb173, unwind: bb213],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageLive(_14),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            _18 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1382:48: 1382:60 (#0),
                    scope: scope[1],
                },
                kind: _17 = regex_syntax::hir::ClassUnicode::ranges(move _18) -> [return: bb11, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _16 = &(*_17),
            StorageDead(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1382:48: 1382:66 (#0),
                    scope: scope[1],
                },
                kind: _15 = core::slice::<impl [regex_syntax::hir::ClassUnicodeRange]>::len(move _16) -> [return: bb12, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1382:29: 1382:67 (#0),
                    scope: scope[1],
                },
                kind: _14 = std::vec::Vec::<nfa::thompson::nfa::Transition>::with_capacity(move _15) -> [return: bb13, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            FakeRead(ForLet(None), _14),
            StorageDead(_17),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            _22 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#0),
                    scope: scope[6],
                },
                kind: _21 = regex_syntax::hir::ClassUnicode::iter(move _22) -> [return: bb14, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#4246),
                    scope: scope[6],
                },
                kind: _20 = <regex_syntax::hir::ClassUnicodeIter<'_> as core::iter::IntoIterator>::into_iter(move _21) -> [return: bb15, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            PlaceMention(_20),
            StorageLive(_23),
            _23 = move _20,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1383:13: 1392:14 (#4245),
                    scope: scope[7],
                },
                kind: goto -> bb16,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1383:13: 1392:14 (#4245),
                    scope: scope[7],
                },
                kind: falseUnwind -> [real: bb17, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            _28 = &mut _23,
            _27 = &mut (*_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#4246),
                    scope: scope[7],
                },
                kind: _26 = <regex_syntax::hir::ClassUnicodeIter<'_> as core::iter::Iterator>::next(move _27) -> [return: bb18, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            PlaceMention(_26),
            _29 = discriminant(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#4246),
                    scope: scope[7],
                },
                kind: switchInt(move _29) -> [0: bb20, 1: bb21, otherwise: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#4246),
                    scope: scope[7],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1383:13: 1392:14 (#4245),
                    scope: scope[7],
                },
                kind: falseEdge -> [real: bb22, imaginary: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_31),
            _31 = ((_26 as Some).0: &regex_syntax::hir::ClassUnicodeRange),
            StorageLive(_32),
            StorageLive(_33),
            _33 = &mut _14,
            StorageLive(_34),
            StorageLive(_35),
            StorageLive(_36),
            StorageLive(_37),
            StorageLive(_38),
            StorageLive(_39),
            _39 = &(*_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1388:51: 1388:60 (#0),
                    scope: scope[8],
                },
                kind: _38 = regex_syntax::hir::ClassUnicodeRange::start(move _39) -> [return: bb23, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _19 = const (),
            StorageDead(_28),
            StorageDead(_26),
            StorageDead(_25),
            StorageDead(_23),
            StorageDead(_20),
            StorageDead(_19),
            StorageLive(_46),
            StorageLive(_47),
            StorageLive(_48),
            StorageLive(_49),
            StorageLive(_50),
            _50 = &(*_1),
            StorageLive(_51),
            _51 = move _14,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:37: 1393:59 (#0),
                    scope: scope[6],
                },
                kind: _49 = nfa::thompson::compiler::Compiler::add_sparse(move _50, move _51) -> [return: bb32, unwind: bb209],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1388:41: 1388:61 (#0),
                    scope: scope[8],
                },
                kind: _37 = <u32 as core::convert::From<char>>::from(move _38) -> [return: bb24, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1388:28: 1388:62 (#0),
                    scope: scope[8],
                },
                kind: _36 = <u8 as core::convert::TryFrom<u32>>::try_from(move _37) -> [return: bb25, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1388:28: 1388:71 (#0),
                    scope: scope[8],
                },
                kind: _35 = core::result::Result::<u8, core::num::TryFromIntError>::unwrap(move _36) -> [return: bb26, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            StorageLive(_40),
            StorageLive(_41),
            StorageLive(_42),
            StorageLive(_43),
            StorageLive(_44),
            _44 = &(*_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1389:49: 1389:56 (#0),
                    scope: scope[8],
                },
                kind: _43 = regex_syntax::hir::ClassUnicodeRange::end(move _44) -> [return: bb27, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1389:39: 1389:57 (#0),
                    scope: scope[8],
                },
                kind: _42 = <u32 as core::convert::From<char>>::from(move _43) -> [return: bb28, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1389:26: 1389:58 (#0),
                    scope: scope[8],
                },
                kind: _41 = <u8 as core::convert::TryFrom<u32>>::try_from(move _42) -> [return: bb29, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1389:26: 1389:67 (#0),
                    scope: scope[8],
                },
                kind: _40 = core::result::Result::<u8, core::num::TryFromIntError>::unwrap(move _41) -> [return: bb30, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
            StorageLive(_45),
            _45 = _5,
            _34 = nfa::thompson::nfa::Transition { start: move _35, end: move _40, next: move _45 },
            StorageDead(_45),
            StorageDead(_40),
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1386:17: 1391:19 (#0),
                    scope: scope[8],
                },
                kind: _32 = std::vec::Vec::<nfa::thompson::nfa::Transition>::push(move _33, move _34) -> [return: bb31, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageDead(_33),
            StorageDead(_32),
            _25 = const (),
            StorageDead(_31),
            StorageDead(_28),
            StorageDead(_26),
            StorageDead(_25),
            _24 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1383:13: 1392:14 (#4245),
                    scope: scope[7],
                },
                kind: goto -> bb16,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_51),
            StorageDead(_50),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:37: 1393:60 (#4248),
                    scope: scope[6],
                },
                kind: _48 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _49) -> [return: bb33, unwind: bb208],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            PlaceMention(_48),
            _52 = discriminant(_48),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:37: 1393:60 (#4248),
                    scope: scope[6],
                },
                kind: switchInt(move _52) -> [0: bb36, 1: bb35, otherwise: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _48),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:37: 1393:60 (#4248),
                    scope: scope[6],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:59: 1393:60 (#4249),
                    scope: scope[6],
                },
                kind: falseEdge -> [real: bb37, imaginary: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_56),
            _56 = ((_48 as Continue).0: util::primitives::StateID),
            _47 = _56,
            StorageDead(_56),
            StorageLive(_57),
            _57 = _5,
            _46 = nfa::thompson::compiler::ThompsonRef { start: move _47, end: move _57 },
            StorageDead(_57),
            StorageDead(_47),
            _0 = core::result::Result::<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError>::Ok(move _46),
            StorageDead(_46),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1394:9: 1394:10 (#0),
                    scope: scope[1],
                },
                kind: drop(_14) -> [return: bb39, unwind: bb207],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_53),
            _53 = move ((_48 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>),
            StorageLive(_55),
            _55 = move _53,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:37: 1393:60 (#4248),
                    scope: scope[10],
                },
                kind: _0 = <core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _55) -> [return: bb38, unwind: bb204],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:59: 1393:60 (#4249),
                    scope: scope[6],
                },
                kind: drop(_53) -> [return: bb170, unwind: bb206],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1394:9: 1394:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_48) -> [return: bb40, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_48),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1380:9: 1447:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb151,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_58),
            StorageLive(_59),
            _59 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1394:19: 1394:36 (#0),
                    scope: scope[0],
                },
                kind: _58 = nfa::thompson::compiler::Compiler::is_reverse(move _59) -> [return: bb42, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1394:19: 1394:36 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _58) -> [0: bb103, otherwise: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_59),
            StorageLive(_60),
            StorageLive(_61),
            _61 = &((*_1).1: nfa::thompson::compiler::Config),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1395:17: 1395:41 (#0),
                    scope: scope[0],
                },
                kind: _60 = nfa::thompson::compiler::Config::get_shrink(move _61) -> [return: bb44, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1395:17: 1395:41 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _60) -> [0: bb46, otherwise: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_61),
            StorageLive(_64),
            StorageLive(_65),
            _65 = &((*_1).4: core::cell::RefCell<nfa::thompson::range_trie::RangeTrie>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1413:32: 1413:60 (#0),
                    scope: scope[0],
                },
                kind: _64 = core::cell::RefCell::<nfa::thompson::range_trie::RangeTrie>::borrow_mut(move _65) -> [return: bb48, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_61),
            StorageLive(_62),
            _62 = &(*_1),
            StorageLive(_63),
            _63 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1400:17: 1400:62 (#0),
                    scope: scope[0],
                },
                kind: _0 = nfa::thompson::compiler::Compiler::c_unicode_class_reverse_with_suffix(move _62, move _63) -> [return: bb47, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_63),
            StorageDead(_62),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1395:13: 1431:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb102,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_65),
            FakeRead(ForLet(None), _64),
            StorageLive(_66),
            StorageLive(_67),
            StorageLive(_68),
            StorageLive(_69),
            _69 = &mut _64,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1414:17: 1414:29 (#0),
                    scope: scope[13],
                },
                kind: _68 = <core::cell::RefMut<'_, nfa::thompson::range_trie::RangeTrie> as core::ops::DerefMut>::deref_mut(move _69) -> [return: bb49, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _67 = &mut (*_68),
            StorageDead(_69),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1414:17: 1414:29 (#0),
                    scope: scope[13],
                },
                kind: _66 = nfa::thompson::range_trie::RangeTrie::clear(move _67) -> [return: bb50, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_67),
            StorageDead(_68),
            StorageDead(_66),
            StorageLive(_70),
            StorageLive(_71),
            StorageLive(_72),
            StorageLive(_73),
            _73 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#0),
                    scope: scope[13],
                },
                kind: _72 = regex_syntax::hir::ClassUnicode::iter(move _73) -> [return: bb51, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_73),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#4253),
                    scope: scope[13],
                },
                kind: _71 = <regex_syntax::hir::ClassUnicodeIter<'_> as core::iter::IntoIterator>::into_iter(move _72) -> [return: bb52, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_72),
            PlaceMention(_71),
            StorageLive(_74),
            _74 = move _71,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1416:17: 1421:18 (#4252),
                    scope: scope[14],
                },
                kind: goto -> bb53,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1416:17: 1421:18 (#4252),
                    scope: scope[14],
                },
                kind: falseUnwind -> [real: bb54, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_75),
            StorageLive(_76),
            StorageLive(_77),
            StorageLive(_78),
            _78 = &mut _74,
            _77 = &mut (*_78),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#4253),
                    scope: scope[14],
                },
                kind: _76 = <regex_syntax::hir::ClassUnicodeIter<'_> as core::iter::Iterator>::next(move _77) -> [return: bb55, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_77),
            PlaceMention(_76),
            _79 = discriminant(_76),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#4253),
                    scope: scope[14],
                },
                kind: switchInt(move _79) -> [0: bb57, 1: bb58, otherwise: bb56],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _76),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#4253),
                    scope: scope[14],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1416:17: 1421:18 (#4252),
                    scope: scope[14],
                },
                kind: falseEdge -> [real: bb59, imaginary: bb58],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_81),
            _81 = ((_76 as Some).0: &regex_syntax::hir::ClassUnicodeRange),
            StorageLive(_82),
            StorageLive(_83),
            StorageLive(_84),
            StorageLive(_85),
            _85 = &(*_81),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:55: 1417:66 (#0),
                    scope: scope[15],
                },
                kind: _84 = regex_syntax::hir::ClassUnicodeRange::start(move _85) -> [return: bb60, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _70 = const (),
            StorageDead(_78),
            StorageDead(_76),
            StorageDead(_75),
            StorageDead(_74),
            StorageDead(_71),
            StorageDead(_70),
            StorageLive(_105),
            StorageLive(_106),
            _106 = &((*_1).2: core::cell::RefCell<nfa::thompson::builder::Builder>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1422:35: 1422:60 (#0),
                    scope: scope[13],
                },
                kind: _105 = core::cell::RefCell::<nfa::thompson::builder::Builder>::borrow_mut(move _106) -> [return: bb77, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_85),
            StorageLive(_86),
            StorageLive(_87),
            _87 = &(*_81),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:68: 1417:77 (#0),
                    scope: scope[15],
                },
                kind: _86 = regex_syntax::hir::ClassUnicodeRange::end(move _87) -> [return: bb61, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_87),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#0),
                    scope: scope[15],
                },
                kind: _83 = regex_syntax::utf8::Utf8Sequences::new(move _84, move _86) -> [return: bb62, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_86),
            StorageDead(_84),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#4256),
                    scope: scope[15],
                },
                kind: _82 = <regex_syntax::utf8::Utf8Sequences as core::iter::IntoIterator>::into_iter(move _83) -> [return: bb63, unwind: bb202],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_83),
            PlaceMention(_82),
            StorageLive(_88),
            _88 = move _82,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:21: 1420:22 (#4255),
                    scope: scope[16],
                },
                kind: goto -> bb64,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:21: 1420:22 (#4255),
                    scope: scope[16],
                },
                kind: falseUnwind -> [real: bb65, unwind: bb200],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_89),
            StorageLive(_90),
            StorageLive(_91),
            StorageLive(_92),
            _92 = &mut _88,
            _91 = &mut (*_92),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#4256),
                    scope: scope[16],
                },
                kind: _90 = <regex_syntax::utf8::Utf8Sequences as core::iter::Iterator>::next(move _91) -> [return: bb66, unwind: bb200],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_91),
            PlaceMention(_90),
            _93 = discriminant(_90),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#4256),
                    scope: scope[16],
                },
                kind: switchInt(move _93) -> [0: bb68, 1: bb69, otherwise: bb67],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _90),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#4256),
                    scope: scope[16],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:21: 1420:22 (#4255),
                    scope: scope[16],
                },
                kind: falseEdge -> [real: bb70, imaginary: bb69],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_95),
            _95 = ((_90 as Some).0: regex_syntax::utf8::Utf8Sequence),
            StorageLive(_96),
            StorageLive(_97),
            _97 = &mut _95,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1418:25: 1418:38 (#0),
                    scope: scope[17],
                },
                kind: _96 = regex_syntax::utf8::Utf8Sequence::reverse(move _97) -> [return: bb71, unwind: bb200],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _75 = const (),
            StorageDead(_92),
            StorageDead(_90),
            StorageDead(_89),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1420:21: 1420:22 (#4255),
                    scope: scope[15],
                },
                kind: drop(_88) -> [return: bb75, unwind: bb201],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_97),
            StorageDead(_96),
            StorageLive(_98),
            StorageLive(_99),
            StorageLive(_100),
            StorageLive(_101),
            _101 = &mut _64,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1419:25: 1419:52 (#0),
                    scope: scope[17],
                },
                kind: _100 = <core::cell::RefMut<'_, nfa::thompson::range_trie::RangeTrie> as core::ops::DerefMut>::deref_mut(move _101) -> [return: bb72, unwind: bb200],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _99 = &mut (*_100),
            StorageDead(_101),
            StorageLive(_102),
            StorageLive(_103),
            StorageLive(_104),
            _104 = &_95,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1419:37: 1419:51 (#0),
                    scope: scope[17],
                },
                kind: _103 = regex_syntax::utf8::Utf8Sequence::as_slice(move _104) -> [return: bb73, unwind: bb200],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _102 = &(*_103),
            StorageDead(_104),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1419:25: 1419:52 (#0),
                    scope: scope[17],
                },
                kind: _98 = nfa::thompson::range_trie::RangeTrie::insert(move _99, move _102) -> [return: bb74, unwind: bb200],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_102),
            StorageDead(_99),
            StorageDead(_103),
            StorageDead(_100),
            StorageDead(_98),
            _89 = const (),
            StorageDead(_95),
            StorageDead(_92),
            StorageDead(_90),
            StorageDead(_89),
            _24 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:21: 1420:22 (#4255),
                    scope: scope[16],
                },
                kind: goto -> bb64,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_88),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1420:21: 1420:22 (#4255),
                    scope: scope[15],
                },
                kind: drop(_82) -> [return: bb76, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_82),
            StorageDead(_81),
            StorageDead(_78),
            StorageDead(_76),
            StorageDead(_75),
            _24 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1416:17: 1421:18 (#4252),
                    scope: scope[14],
                },
                kind: goto -> bb53,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_106),
            FakeRead(ForLet(None), _105),
            StorageLive(_107),
            StorageLive(_108),
            _108 = &((*_1).3: core::cell::RefCell<nfa::thompson::compiler::Utf8State>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1423:38: 1423:66 (#0),
                    scope: scope[18],
                },
                kind: _107 = core::cell::RefCell::<nfa::thompson::compiler::Utf8State>::borrow_mut(move _108) -> [return: bb78, unwind: bb199],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_108),
            FakeRead(ForLet(None), _107),
            StorageLive(_109),
            StorageLive(_110),
            StorageLive(_111),
            StorageLive(_112),
            StorageLive(_113),
            StorageLive(_114),
            StorageLive(_115),
            _115 = &mut _105,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:44: 1425:52 (#0),
                    scope: scope[19],
                },
                kind: _114 = <core::cell::RefMut<'_, nfa::thompson::builder::Builder> as core::ops::DerefMut>::deref_mut(move _115) -> [return: bb79, unwind: bb198],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_115),
            _113 = &mut (*_114),
            _112 = &mut (*_113),
            StorageLive(_116),
            StorageLive(_117),
            StorageLive(_118),
            StorageLive(_119),
            _119 = &mut _107,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:59: 1425:70 (#0),
                    scope: scope[19],
                },
                kind: _118 = <core::cell::RefMut<'_, nfa::thompson::compiler::Utf8State> as core::ops::DerefMut>::deref_mut(move _119) -> [return: bb80, unwind: bb198],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_119),
            _117 = &mut (*_118),
            _116 = &mut (*_117),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:21: 1425:71 (#0),
                    scope: scope[19],
                },
                kind: _111 = nfa::thompson::compiler::Utf8Compiler::<'_>::new(move _112, move _116) -> [return: bb81, unwind: bb198],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_116),
            StorageDead(_112),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:21: 1425:72 (#4258),
                    scope: scope[19],
                },
                kind: _110 = <core::result::Result<nfa::thompson::compiler::Utf8Compiler<'_>, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _111) -> [return: bb82, unwind: bb197],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_111),
            PlaceMention(_110),
            _120 = discriminant(_110),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:21: 1425:72 (#4258),
                    scope: scope[19],
                },
                kind: switchInt(move _120) -> [0: bb85, 1: bb84, otherwise: bb83],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _110),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:21: 1425:72 (#4258),
                    scope: scope[19],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:71: 1425:72 (#4259),
                    scope: scope[19],
                },
                kind: falseEdge -> [real: bb86, imaginary: bb85],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_124),
            _124 = move ((_110 as Continue).0: nfa::thompson::compiler::Utf8Compiler<'_>),
            _109 = move _124,
            StorageDead(_124),
            FakeRead(ForLet(None), _109),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:72: 1425:73 (#0),
                    scope: scope[19],
                },
                kind: drop(_110) -> [return: bb88, unwind: bb198],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_121),
            _121 = move ((_110 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>),
            StorageLive(_123),
            _123 = move _121,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:21: 1425:72 (#4258),
                    scope: scope[22],
                },
                kind: _0 = <core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _123) -> [return: bb87, unwind: bb194],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_123),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:71: 1425:72 (#4259),
                    scope: scope[19],
                },
                kind: drop(_121) -> [return: bb163, unwind: bb196],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_118),
            StorageDead(_117),
            StorageDead(_114),
            StorageDead(_113),
            StorageDead(_110),
            StorageLive(_125),
            StorageLive(_126),
            StorageLive(_127),
            StorageLive(_128),
            StorageLive(_129),
            StorageLive(_130),
            _130 = &_64,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1429:19 (#0),
                    scope: scope[20],
                },
                kind: _129 = <core::cell::RefMut<'_, nfa::thompson::range_trie::RangeTrie> as core::ops::Deref>::deref(move _130) -> [return: bb89, unwind: bb198],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _128 = &(*_129),
            StorageDead(_130),
            StorageLive(_131),
            StorageLive(_132),
            _132 = &mut _109,
            _131 = {closure@regex-automata/src/nfa/thompson/compiler.rs:1426:27: 1426:32} { utf8c: move _132 },
            StorageDead(_132),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1429:19 (#0),
                    scope: scope[20],
                },
                kind: _127 = nfa::thompson::range_trie::RangeTrie::iter::<nfa::thompson::error::BuildError, {closure@regex-automata/src/nfa/thompson/compiler.rs:1426:27: 1426:32}>(move _128, move _131) -> [return: bb90, unwind: bb198],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_131),
            StorageDead(_128),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1429:20 (#4260),
                    scope: scope[20],
                },
                kind: _126 = <core::result::Result<(), nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _127) -> [return: bb91, unwind: bb193],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_127),
            PlaceMention(_126),
            _133 = discriminant(_126),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1429:20 (#4260),
                    scope: scope[20],
                },
                kind: switchInt(move _133) -> [0: bb94, 1: bb93, otherwise: bb92],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _126),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1429:20 (#4260),
                    scope: scope[20],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1429:19: 1429:20 (#4261),
                    scope: scope[20],
                },
                kind: falseEdge -> [real: bb95, imaginary: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_137),
            _137 = ((_126 as Continue).0: ()),
            _125 = _137,
            StorageDead(_137),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1429:20: 1429:21 (#0),
                    scope: scope[20],
                },
                kind: drop(_126) -> [return: bb97, unwind: bb198],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_134),
            _134 = move ((_126 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>),
            StorageLive(_136),
            _136 = move _134,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1429:20 (#4260),
                    scope: scope[26],
                },
                kind: _0 = <core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _136) -> [return: bb96, unwind: bb190],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_136),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1429:19: 1429:20 (#4261),
                    scope: scope[20],
                },
                kind: drop(_134) -> [return: bb161, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_129),
            StorageDead(_126),
            StorageDead(_125),
            StorageLive(_138),
            _138 = &mut _109,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1430:17: 1430:31 (#0),
                    scope: scope[20],
                },
                kind: _0 = nfa::thompson::compiler::Utf8Compiler::<'_>::finish(move _138) -> [return: bb98, unwind: bb198],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_138),
            StorageDead(_109),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1431:13: 1431:14 (#0),
                    scope: scope[18],
                },
                kind: drop(_107) -> [return: bb99, unwind: bb199],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_107),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1431:13: 1431:14 (#0),
                    scope: scope[13],
                },
                kind: drop(_105) -> [return: bb100, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_105),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1431:13: 1431:14 (#0),
                    scope: scope[0],
                },
                kind: drop(_64) -> [return: bb101, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1395:13: 1431:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb102,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_60),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1394:16: 1447:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb150,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_59),
            StorageLive(_139),
            StorageLive(_140),
            _140 = &((*_1).2: core::cell::RefCell<nfa::thompson::builder::Builder>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1437:31: 1437:56 (#0),
                    scope: scope[0],
                },
                kind: _139 = core::cell::RefCell::<nfa::thompson::builder::Builder>::borrow_mut(move _140) -> [return: bb104, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_140),
            FakeRead(ForLet(None), _139),
            StorageLive(_141),
            StorageLive(_142),
            _142 = &((*_1).3: core::cell::RefCell<nfa::thompson::compiler::Utf8State>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1438:34: 1438:62 (#0),
                    scope: scope[29],
                },
                kind: _141 = core::cell::RefCell::<nfa::thompson::compiler::Utf8State>::borrow_mut(move _142) -> [return: bb105, unwind: bb189],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_142),
            FakeRead(ForLet(None), _141),
            StorageLive(_143),
            StorageLive(_144),
            StorageLive(_145),
            StorageLive(_146),
            StorageLive(_147),
            StorageLive(_148),
            StorageLive(_149),
            _149 = &mut _139,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:40: 1440:48 (#0),
                    scope: scope[30],
                },
                kind: _148 = <core::cell::RefMut<'_, nfa::thompson::builder::Builder> as core::ops::DerefMut>::deref_mut(move _149) -> [return: bb106, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_149),
            _147 = &mut (*_148),
            _146 = &mut (*_147),
            StorageLive(_150),
            StorageLive(_151),
            StorageLive(_152),
            StorageLive(_153),
            _153 = &mut _141,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:55: 1440:66 (#0),
                    scope: scope[30],
                },
                kind: _152 = <core::cell::RefMut<'_, nfa::thompson::compiler::Utf8State> as core::ops::DerefMut>::deref_mut(move _153) -> [return: bb107, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_153),
            _151 = &mut (*_152),
            _150 = &mut (*_151),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:17: 1440:67 (#0),
                    scope: scope[30],
                },
                kind: _145 = nfa::thompson::compiler::Utf8Compiler::<'_>::new(move _146, move _150) -> [return: bb108, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_150),
            StorageDead(_146),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:17: 1440:68 (#4264),
                    scope: scope[30],
                },
                kind: _144 = <core::result::Result<nfa::thompson::compiler::Utf8Compiler<'_>, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _145) -> [return: bb109, unwind: bb187],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_145),
            PlaceMention(_144),
            _154 = discriminant(_144),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:17: 1440:68 (#4264),
                    scope: scope[30],
                },
                kind: switchInt(move _154) -> [0: bb112, 1: bb111, otherwise: bb110],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _144),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:17: 1440:68 (#4264),
                    scope: scope[30],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:67: 1440:68 (#4265),
                    scope: scope[30],
                },
                kind: falseEdge -> [real: bb113, imaginary: bb112],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_158),
            _158 = move ((_144 as Continue).0: nfa::thompson::compiler::Utf8Compiler<'_>),
            _143 = move _158,
            StorageDead(_158),
            FakeRead(ForLet(None), _143),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:68: 1440:69 (#0),
                    scope: scope[30],
                },
                kind: drop(_144) -> [return: bb115, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_155),
            _155 = move ((_144 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>),
            StorageLive(_157),
            _157 = move _155,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:17: 1440:68 (#4264),
                    scope: scope[33],
                },
                kind: _0 = <core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _157) -> [return: bb114, unwind: bb184],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_157),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:67: 1440:68 (#4265),
                    scope: scope[30],
                },
                kind: drop(_155) -> [return: bb156, unwind: bb186],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_152),
            StorageDead(_151),
            StorageDead(_148),
            StorageDead(_147),
            StorageDead(_144),
            StorageLive(_159),
            StorageLive(_160),
            StorageLive(_161),
            StorageLive(_162),
            _162 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#0),
                    scope: scope[31],
                },
                kind: _161 = regex_syntax::hir::ClassUnicode::iter(move _162) -> [return: bb116, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_162),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#4267),
                    scope: scope[31],
                },
                kind: _160 = <regex_syntax::hir::ClassUnicodeIter<'_> as core::iter::IntoIterator>::into_iter(move _161) -> [return: bb117, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_161),
            PlaceMention(_160),
            StorageLive(_163),
            _163 = move _160,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1441:13: 1445:14 (#4266),
                    scope: scope[36],
                },
                kind: goto -> bb118,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1441:13: 1445:14 (#4266),
                    scope: scope[36],
                },
                kind: falseUnwind -> [real: bb119, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_164),
            StorageLive(_165),
            StorageLive(_166),
            StorageLive(_167),
            _167 = &mut _163,
            _166 = &mut (*_167),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#4267),
                    scope: scope[36],
                },
                kind: _165 = <regex_syntax::hir::ClassUnicodeIter<'_> as core::iter::Iterator>::next(move _166) -> [return: bb120, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_166),
            PlaceMention(_165),
            _168 = discriminant(_165),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#4267),
                    scope: scope[36],
                },
                kind: switchInt(move _168) -> [0: bb122, 1: bb123, otherwise: bb121],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _165),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#4267),
                    scope: scope[36],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1441:13: 1445:14 (#4266),
                    scope: scope[36],
                },
                kind: falseEdge -> [real: bb124, imaginary: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_170),
            _170 = ((_165 as Some).0: &regex_syntax::hir::ClassUnicodeRange),
            StorageLive(_171),
            StorageLive(_172),
            StorageLive(_173),
            StorageLive(_174),
            _174 = &(*_170),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:47: 1442:58 (#0),
                    scope: scope[37],
                },
                kind: _173 = regex_syntax::hir::ClassUnicodeRange::start(move _174) -> [return: bb125, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _159 = const (),
            StorageDead(_167),
            StorageDead(_165),
            StorageDead(_164),
            StorageDead(_163),
            StorageDead(_160),
            StorageDead(_159),
            StorageLive(_197),
            _197 = &mut _143,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1446:13: 1446:27 (#0),
                    scope: scope[31],
                },
                kind: _0 = nfa::thompson::compiler::Utf8Compiler::<'_>::finish(move _197) -> [return: bb147, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_174),
            StorageLive(_175),
            StorageLive(_176),
            _176 = &(*_170),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:60: 1442:69 (#0),
                    scope: scope[37],
                },
                kind: _175 = regex_syntax::hir::ClassUnicodeRange::end(move _176) -> [return: bb126, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_176),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#0),
                    scope: scope[37],
                },
                kind: _172 = regex_syntax::utf8::Utf8Sequences::new(move _173, move _175) -> [return: bb127, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_175),
            StorageDead(_173),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#4270),
                    scope: scope[37],
                },
                kind: _171 = <regex_syntax::utf8::Utf8Sequences as core::iter::IntoIterator>::into_iter(move _172) -> [return: bb128, unwind: bb183],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_172),
            PlaceMention(_171),
            StorageLive(_177),
            _177 = move _171,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:17: 1444:18 (#4269),
                    scope: scope[38],
                },
                kind: goto -> bb129,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:17: 1444:18 (#4269),
                    scope: scope[38],
                },
                kind: falseUnwind -> [real: bb130, unwind: bb181],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_178),
            StorageLive(_179),
            StorageLive(_180),
            StorageLive(_181),
            _181 = &mut _177,
            _180 = &mut (*_181),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#4270),
                    scope: scope[38],
                },
                kind: _179 = <regex_syntax::utf8::Utf8Sequences as core::iter::Iterator>::next(move _180) -> [return: bb131, unwind: bb181],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_180),
            PlaceMention(_179),
            _182 = discriminant(_179),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#4270),
                    scope: scope[38],
                },
                kind: switchInt(move _182) -> [0: bb133, 1: bb134, otherwise: bb132],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _179),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#4270),
                    scope: scope[38],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:17: 1444:18 (#4269),
                    scope: scope[38],
                },
                kind: falseEdge -> [real: bb135, imaginary: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_184),
            _184 = ((_179 as Some).0: regex_syntax::utf8::Utf8Sequence),
            StorageLive(_185),
            StorageLive(_186),
            StorageLive(_187),
            StorageLive(_188),
            _188 = &mut _143,
            StorageLive(_189),
            StorageLive(_190),
            StorageLive(_191),
            _191 = &_184,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1443:31: 1443:45 (#0),
                    scope: scope[39],
                },
                kind: _190 = regex_syntax::utf8::Utf8Sequence::as_slice(move _191) -> [return: bb136, unwind: bb181],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _164 = const (),
            StorageDead(_181),
            StorageDead(_179),
            StorageDead(_178),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1444:17: 1444:18 (#4269),
                    scope: scope[37],
                },
                kind: drop(_177) -> [return: bb145, unwind: bb182],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _189 = &(*_190),
            StorageDead(_191),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1443:21: 1443:46 (#0),
                    scope: scope[39],
                },
                kind: _187 = nfa::thompson::compiler::Utf8Compiler::<'_>::add(move _188, move _189) -> [return: bb137, unwind: bb181],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_189),
            StorageDead(_188),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1443:21: 1443:47 (#4272),
                    scope: scope[39],
                },
                kind: _186 = <core::result::Result<(), nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _187) -> [return: bb138, unwind: bb180],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_187),
            PlaceMention(_186),
            _192 = discriminant(_186),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1443:21: 1443:47 (#4272),
                    scope: scope[39],
                },
                kind: switchInt(move _192) -> [0: bb141, 1: bb140, otherwise: bb139],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _186),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1443:21: 1443:47 (#4272),
                    scope: scope[39],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1443:46: 1443:47 (#4273),
                    scope: scope[39],
                },
                kind: falseEdge -> [real: bb142, imaginary: bb141],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_196),
            _196 = ((_186 as Continue).0: ()),
            _185 = _196,
            StorageDead(_196),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1443:47: 1443:48 (#0),
                    scope: scope[39],
                },
                kind: drop(_186) -> [return: bb144, unwind: bb181],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_193),
            _193 = move ((_186 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>),
            StorageLive(_195),
            _195 = move _193,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1443:21: 1443:47 (#4272),
                    scope: scope[41],
                },
                kind: _0 = <core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _195) -> [return: bb143, unwind: bb177],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_195),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1443:46: 1443:47 (#4273),
                    scope: scope[39],
                },
                kind: drop(_193) -> [return: bb152, unwind: bb179],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_190),
            StorageDead(_186),
            StorageDead(_185),
            _178 = const (),
            StorageDead(_184),
            StorageDead(_181),
            StorageDead(_179),
            StorageDead(_178),
            _24 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:17: 1444:18 (#4269),
                    scope: scope[38],
                },
                kind: goto -> bb129,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_177),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1444:17: 1444:18 (#4269),
                    scope: scope[37],
                },
                kind: drop(_171) -> [return: bb146, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_171),
            StorageDead(_170),
            StorageDead(_167),
            StorageDead(_165),
            StorageDead(_164),
            _24 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1441:13: 1445:14 (#4266),
                    scope: scope[36],
                },
                kind: goto -> bb118,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_197),
            StorageDead(_143),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1447:9: 1447:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_141) -> [return: bb148, unwind: bb189],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_141),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1447:9: 1447:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_139) -> [return: bb149, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_139),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1394:16: 1447:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb150,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1380:9: 1447:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb151,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1492:6: 1492:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb176,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_193),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1443:47: 1443:48 (#0),
                    scope: scope[39],
                },
                kind: drop(_186) -> [return: bb153, unwind: bb181],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_190),
            StorageDead(_186),
            StorageDead(_185),
            StorageDead(_184),
            StorageDead(_181),
            StorageDead(_179),
            StorageDead(_178),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1444:17: 1444:18 (#4269),
                    scope: scope[37],
                },
                kind: drop(_177) -> [return: bb154, unwind: bb182],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_177),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1444:17: 1444:18 (#4269),
                    scope: scope[37],
                },
                kind: drop(_171) -> [return: bb155, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_171),
            StorageDead(_170),
            StorageDead(_167),
            StorageDead(_165),
            StorageDead(_164),
            StorageDead(_163),
            StorageDead(_160),
            StorageDead(_159),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[31],
                },
                kind: goto -> bb158,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_155),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:68: 1440:69 (#0),
                    scope: scope[30],
                },
                kind: drop(_144) -> [return: bb157, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_152),
            StorageDead(_151),
            StorageDead(_148),
            StorageDead(_147),
            StorageDead(_144),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[30],
                },
                kind: goto -> bb158,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_143),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1447:9: 1447:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_141) -> [return: bb159, unwind: bb189],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_141),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1447:9: 1447:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_139) -> [return: bb160, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_139),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb169,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_134),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1429:20: 1429:21 (#0),
                    scope: scope[20],
                },
                kind: drop(_126) -> [return: bb162, unwind: bb198],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_129),
            StorageDead(_126),
            StorageDead(_125),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[20],
                },
                kind: goto -> bb165,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_121),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:72: 1425:73 (#0),
                    scope: scope[19],
                },
                kind: drop(_110) -> [return: bb164, unwind: bb198],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_118),
            StorageDead(_117),
            StorageDead(_114),
            StorageDead(_113),
            StorageDead(_110),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[19],
                },
                kind: goto -> bb165,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_109),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1431:13: 1431:14 (#0),
                    scope: scope[18],
                },
                kind: drop(_107) -> [return: bb166, unwind: bb199],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_107),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1431:13: 1431:14 (#0),
                    scope: scope[13],
                },
                kind: drop(_105) -> [return: bb167, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_105),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1431:13: 1431:14 (#0),
                    scope: scope[0],
                },
                kind: drop(_64) -> [return: bb168, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_64),
            StorageDead(_60),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb169,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb175,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_53),
            StorageDead(_47),
            StorageDead(_46),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1394:9: 1394:10 (#0),
                    scope: scope[1],
                },
                kind: drop(_14) -> [return: bb171, unwind: bb207],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1394:9: 1394:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_48) -> [return: bb172, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_48),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb175,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1381:40: 1381:41 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb174, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb175,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1492:6: 1492:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb176,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1492:6: 1492:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1443:46: 1443:47 (#4272),
                    scope: scope[41],
                },
                kind: drop(_195) -> [return: bb178, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1443:46: 1443:47 (#4273),
                    scope: scope[39],
                },
                kind: drop(_193) -> [return: bb179, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1443:47: 1443:48 (#0),
                    scope: scope[39],
                },
                kind: drop(_186) -> [return: bb181, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1443:46: 1443:47 (#4272),
                    scope: scope[39],
                },
                kind: drop(_187) -> [return: bb181, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1444:17: 1444:18 (#4269),
                    scope: scope[37],
                },
                kind: drop(_177) -> [return: bb182, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1444:17: 1444:18 (#4269),
                    scope: scope[37],
                },
                kind: drop(_171) -> [return: bb188, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:69: 1442:70 (#4270),
                    scope: scope[37],
                },
                kind: drop(_172) -> [return: bb188, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:67: 1440:68 (#4264),
                    scope: scope[33],
                },
                kind: drop(_157) -> [return: bb185, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:67: 1440:68 (#4265),
                    scope: scope[30],
                },
                kind: drop(_155) -> [return: bb186, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:68: 1440:69 (#0),
                    scope: scope[30],
                },
                kind: drop(_144) -> [return: bb188, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1440:67: 1440:68 (#4264),
                    scope: scope[30],
                },
                kind: drop(_145) -> [return: bb188, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1447:9: 1447:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_141) -> [return: bb189, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1447:9: 1447:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_139) -> [return: bb215, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1429:19: 1429:20 (#4260),
                    scope: scope[26],
                },
                kind: drop(_136) -> [return: bb191, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1429:19: 1429:20 (#4261),
                    scope: scope[20],
                },
                kind: drop(_134) -> [return: bb192, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1429:20: 1429:21 (#0),
                    scope: scope[20],
                },
                kind: drop(_126) -> [return: bb198, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1429:19: 1429:20 (#4260),
                    scope: scope[20],
                },
                kind: drop(_127) -> [return: bb198, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:71: 1425:72 (#4258),
                    scope: scope[22],
                },
                kind: drop(_123) -> [return: bb195, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:71: 1425:72 (#4259),
                    scope: scope[19],
                },
                kind: drop(_121) -> [return: bb196, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:72: 1425:73 (#0),
                    scope: scope[19],
                },
                kind: drop(_110) -> [return: bb198, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1425:71: 1425:72 (#4258),
                    scope: scope[19],
                },
                kind: drop(_111) -> [return: bb198, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1431:13: 1431:14 (#0),
                    scope: scope[18],
                },
                kind: drop(_107) -> [return: bb199, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1431:13: 1431:14 (#0),
                    scope: scope[13],
                },
                kind: drop(_105) -> [return: bb203, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1420:21: 1420:22 (#4255),
                    scope: scope[15],
                },
                kind: drop(_88) -> [return: bb201, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1420:21: 1420:22 (#4255),
                    scope: scope[15],
                },
                kind: drop(_82) -> [return: bb203, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:77: 1417:78 (#4256),
                    scope: scope[15],
                },
                kind: drop(_83) -> [return: bb203, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1431:13: 1431:14 (#0),
                    scope: scope[0],
                },
                kind: drop(_64) -> [return: bb215, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:59: 1393:60 (#4248),
                    scope: scope[10],
                },
                kind: drop(_55) -> [return: bb205, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:59: 1393:60 (#4249),
                    scope: scope[6],
                },
                kind: drop(_53) -> [return: bb206, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1394:9: 1394:10 (#0),
                    scope: scope[1],
                },
                kind: drop(_14) -> [return: bb207, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1394:9: 1394:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_48) -> [return: bb215, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:59: 1393:60 (#4248),
                    scope: scope[6],
                },
                kind: drop(_49) -> [return: bb210, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:58: 1393:59 (#0),
                    scope: scope[6],
                },
                kind: drop(_51) -> [return: bb210, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1394:9: 1394:10 (#0),
                    scope: scope[1],
                },
                kind: drop(_14) -> [return: bb215, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1381:39: 1381:40 (#4243),
                    scope: scope[3],
                },
                kind: drop(_12) -> [return: bb212, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1381:39: 1381:40 (#4244),
                    scope: scope[0],
                },
                kind: drop(_10) -> [return: bb213, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1381:40: 1381:41 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb215, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1381:39: 1381:40 (#4243),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb215, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1373:5: 1492:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1376:10: 1376:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::compiler::Compiler,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1374:9: 1374:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/compiler.rs:1375:14: 1375:32 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/compiler.rs:1375:9: 1375:12 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1375:9: 1375:12 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1375:9: 1375:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1380:9: 1447:10 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1380:12: 1380:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1380:9: 1447:10 (#0),
                },
            ),
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1380:12: 1380:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/compiler.rs:1381:23: 1381:40 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1381:17: 1381:20 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1381:17: 1381:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1381:23: 1381:40 (#4243),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1381:23: 1381:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::compiler::Compiler,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1381:23: 1381:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1381:39: 1381:40 (#4244),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _6,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1381:23: 1381:40 (#4243),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1381:39: 1381:40 (#4244),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1381:39: 1381:40 (#4244),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1381:39: 1381:40 (#4244),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1381:39: 1381:40 (#4244),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _6,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1381:23: 1381:40 (#4243),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1381:23: 1381:40 (#4243),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1381:23: 1381:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/compiler.rs:1382:29: 1382:67 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1382:17: 1382:26 (#0),
                    },
                ),
            ),
        ),
        ty: std::vec::Vec<nfa::thompson::nfa::Transition, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1382:17: 1382:26 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1382:48: 1382:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [regex_syntax::hir::ClassUnicodeRange],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1382:48: 1382:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [regex_syntax::hir::ClassUnicodeRange],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1382:48: 1382:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1382:48: 1382:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1383:13: 1392:14 (#4245),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#4246),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _20,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#4246),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#4246),
                    },
                ),
            ),
        ),
        ty: regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#4246),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1373:5: 1492:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#4246),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} regex_syntax::hir::ClassUnicodeRange>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#4246),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#4246),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#4246),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1383:13: 1392:14 (#4245),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1383:13: 1392:14 (#4245),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _26,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1383:22: 1383:32 (#4246),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1383:17: 1383:18 (#4247),
                    },
                ),
            ),
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicodeRange,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1383:17: 1383:18 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1386:17: 1391:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<nfa::thompson::nfa::Transition, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1386:17: 1386:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::nfa::Transition,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1386:28: 1391:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1388:28: 1388:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u8, core::num::TryFromIntError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1388:28: 1388:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1388:41: 1388:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1388:51: 1388:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicodeRange,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1388:51: 1388:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1389:26: 1389:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u8, core::num::TryFromIntError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1389:26: 1389:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1389:39: 1389:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1389:49: 1389:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicodeRange,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1389:49: 1389:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1390:27: 1390:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: nfa::thompson::compiler::ThompsonRef,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1393:16: 1393:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1393:37: 1393:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:13: 1393:68 (#0),
                },
            ),
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1393:37: 1393:60 (#4248),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:13: 1393:68 (#0),
                },
            ),
        ),
        ty: core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1393:37: 1393:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:13: 1393:68 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::compiler::Compiler,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1393:37: 1393:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:13: 1393:68 (#0),
                },
            ),
        ),
        ty: std::vec::Vec<nfa::thompson::nfa::Transition, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1393:53: 1393:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1393:59: 1393:60 (#4249),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _48,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1393:37: 1393:60 (#4248),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1393:59: 1393:60 (#4249),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1393:59: 1393:60 (#4249),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:13: 1393:68 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1393:59: 1393:60 (#4249),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1393:13: 1393:68 (#0),
                },
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1393:59: 1393:60 (#4249),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _48,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1393:37: 1393:60 (#4248),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1393:37: 1393:60 (#4248),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1393:37: 1393:60 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1393:62: 1393:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1380:9: 1447:10 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1394:19: 1394:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1380:9: 1447:10 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::compiler::Compiler,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1394:19: 1394:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1395:13: 1431:14 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1395:17: 1395:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1395:13: 1431:14 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::compiler::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1395:17: 1395:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1400:17: 1400:62 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::compiler::Compiler,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1400:17: 1400:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1400:17: 1400:62 (#0),
                },
            ),
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1400:58: 1400:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/compiler.rs:1413:32: 1413:60 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1413:21: 1413:29 (#0),
                    },
                ),
            ),
        ),
        ty: core::cell::RefMut<'{erased}, nfa::thompson::range_trie::RangeTrie>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1413:21: 1413:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::cell::RefCell<nfa::thompson::range_trie::RangeTrie>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1413:32: 1413:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1414:17: 1414:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::range_trie::RangeTrie,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1414:17: 1414:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::range_trie::RangeTrie,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1414:17: 1414:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::cell::RefMut<'{erased}, nfa::thompson::range_trie::RangeTrie>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1414:17: 1414:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1416:17: 1421:18 (#4252),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#4253),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _71,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#4253),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#4253),
                    },
                ),
            ),
        ),
        ty: regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#4253),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#4253),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} regex_syntax::hir::ClassUnicodeRange>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#4253),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#4253),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#4253),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1416:17: 1421:18 (#4252),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1416:17: 1421:18 (#4252),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _76,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1416:28: 1416:38 (#4253),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1416:21: 1416:24 (#4254),
                    },
                ),
            ),
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicodeRange,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1416:21: 1416:24 (#0),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:21: 1420:22 (#4255),
                },
            ),
        ),
        ty: regex_syntax::utf8::Utf8Sequences,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#4256),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:21: 1420:22 (#4255),
                },
            ),
        ),
        ty: regex_syntax::utf8::Utf8Sequences,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:21: 1420:22 (#4255),
                },
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1417:55: 1417:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:21: 1420:22 (#4255),
                },
            ),
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicodeRange,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1417:55: 1417:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:21: 1420:22 (#4255),
                },
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1417:68: 1417:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1417:21: 1420:22 (#4255),
                },
            ),
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicodeRange,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1417:68: 1417:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _82,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#4256),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#4256),
                    },
                ),
            ),
        ),
        ty: regex_syntax::utf8::Utf8Sequences,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#4256),
            scope: scope[15],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#4256),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<regex_syntax::utf8::Utf8Sequence>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#4256),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::utf8::Utf8Sequences,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#4256),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::utf8::Utf8Sequences,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#4256),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1417:21: 1420:22 (#4255),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1417:21: 1420:22 (#4255),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _90,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1417:36: 1417:78 (#4256),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1417:25: 1417:32 (#4257),
                    },
                ),
            ),
        ),
        ty: regex_syntax::utf8::Utf8Sequence,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1417:25: 1417:32 (#0),
            scope: scope[16],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1418:25: 1418:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::utf8::Utf8Sequence,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1418:25: 1418:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1419:25: 1419:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::range_trie::RangeTrie,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1419:25: 1419:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::range_trie::RangeTrie,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1419:25: 1419:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::cell::RefMut<'{erased}, nfa::thompson::range_trie::RangeTrie>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1419:25: 1419:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [regex_syntax::utf8::Utf8Range],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1419:37: 1419:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [regex_syntax::utf8::Utf8Range],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1419:37: 1419:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} regex_syntax::utf8::Utf8Sequence,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1419:37: 1419:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/compiler.rs:1422:35: 1422:60 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1422:21: 1422:32 (#0),
                    },
                ),
            ),
        ),
        ty: core::cell::RefMut<'{erased}, nfa::thompson::builder::Builder>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1422:21: 1422:32 (#0),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::cell::RefCell<nfa::thompson::builder::Builder>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1422:35: 1422:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/compiler.rs:1423:38: 1423:66 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1423:21: 1423:35 (#0),
                    },
                ),
            ),
        ),
        ty: core::cell::RefMut<'{erased}, nfa::thompson::compiler::Utf8State>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1423:21: 1423:35 (#0),
            scope: scope[18],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::cell::RefCell<nfa::thompson::compiler::Utf8State>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1423:38: 1423:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/compiler.rs:1425:21: 1425:72 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1424:21: 1424:30 (#0),
                    },
                ),
            ),
        ),
        ty: nfa::thompson::compiler::Utf8Compiler<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1424:21: 1424:30 (#0),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>, nfa::thompson::compiler::Utf8Compiler<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:21: 1425:72 (#4258),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<nfa::thompson::compiler::Utf8Compiler<'{erased}>, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:21: 1425:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::builder::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:39: 1425:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::builder::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:39: 1425:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::builder::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:44: 1425:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::cell::RefMut<'{erased}, nfa::thompson::builder::Builder>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:45: 1425:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::compiler::Utf8State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:54: 1425:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::compiler::Utf8State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:54: 1425:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::compiler::Utf8State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:59: 1425:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::cell::RefMut<'{erased}, nfa::thompson::compiler::Utf8State>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:60: 1425:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:71: 1425:72 (#4259),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _110,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1425:21: 1425:72 (#4258),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1425:71: 1425:72 (#4259),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:71: 1425:72 (#4259),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:71: 1425:72 (#4259),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:71: 1425:72 (#4259),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _110,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1425:21: 1425:72 (#4258),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1425:21: 1425:72 (#4258),
                    },
                ),
            ),
        ),
        ty: nfa::thompson::compiler::Utf8Compiler<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1425:21: 1425:72 (#0),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1429:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1429:20 (#4260),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1429:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::range_trie::RangeTrie,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1426:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::range_trie::RangeTrie,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1429:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::cell::RefMut<'{erased}, nfa::thompson::range_trie::RangeTrie>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1426:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:2579 ~ regex_automata[00dd]::nfa::thompson::compiler::{impl#4}::c_unicode_class::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn((&'^0 [regex_syntax::utf8::Utf8Range],)) -> core::result::Result<(), nfa::thompson::error::BuildError>, bound_vars: [Region(BrAnon)] },
                (&'{erased} mut nfa::thompson::compiler::Utf8Compiler<'{erased}>,),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1426:27: 1429:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::compiler::Utf8Compiler<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1426:27: 1429:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1429:19: 1429:20 (#4261),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _126,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1429:20 (#4260),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1429:19: 1429:20 (#4261),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1429:19: 1429:20 (#4261),
            scope: scope[20],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1429:19: 1429:20 (#4261),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1429:19: 1429:20 (#4261),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _126,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1429:20 (#4260),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1429:20 (#4260),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1426:17: 1429:20 (#0),
            scope: scope[20],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1430:17: 1430:31 (#0),
                },
            ),
        ),
        ty: &'{erased} mut nfa::thompson::compiler::Utf8Compiler<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1430:17: 1430:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/compiler.rs:1437:31: 1437:56 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1437:17: 1437:28 (#0),
                    },
                ),
            ),
        ),
        ty: core::cell::RefMut<'{erased}, nfa::thompson::builder::Builder>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1437:17: 1437:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::cell::RefCell<nfa::thompson::builder::Builder>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1437:31: 1437:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/compiler.rs:1438:34: 1438:62 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1438:17: 1438:31 (#0),
                    },
                ),
            ),
        ),
        ty: core::cell::RefMut<'{erased}, nfa::thompson::compiler::Utf8State>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1438:17: 1438:31 (#0),
            scope: scope[29],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::cell::RefCell<nfa::thompson::compiler::Utf8State>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1438:34: 1438:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/compiler.rs:1440:17: 1440:68 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1439:17: 1439:26 (#0),
                    },
                ),
            ),
        ),
        ty: nfa::thompson::compiler::Utf8Compiler<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1439:17: 1439:26 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>, nfa::thompson::compiler::Utf8Compiler<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:17: 1440:68 (#4264),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<nfa::thompson::compiler::Utf8Compiler<'{erased}>, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:17: 1440:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::builder::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:35: 1440:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::builder::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:35: 1440:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::builder::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:40: 1440:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::cell::RefMut<'{erased}, nfa::thompson::builder::Builder>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:41: 1440:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::compiler::Utf8State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:50: 1440:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::compiler::Utf8State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:50: 1440:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::compiler::Utf8State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:55: 1440:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::cell::RefMut<'{erased}, nfa::thompson::compiler::Utf8State>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:56: 1440:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:67: 1440:68 (#4265),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _144,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1440:17: 1440:68 (#4264),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1440:67: 1440:68 (#4265),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:67: 1440:68 (#4265),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:67: 1440:68 (#4265),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:67: 1440:68 (#4265),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _144,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1440:17: 1440:68 (#4264),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1440:17: 1440:68 (#4264),
                    },
                ),
            ),
        ),
        ty: nfa::thompson::compiler::Utf8Compiler<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1440:17: 1440:68 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1441:13: 1445:14 (#4266),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#4267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _160,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#4267),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#4267),
                    },
                ),
            ),
        ),
        ty: regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#4267),
            scope: scope[31],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#4267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} regex_syntax::hir::ClassUnicodeRange>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#4267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#4267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::ClassUnicodeIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#4267),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1441:13: 1445:14 (#4266),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1441:13: 1445:14 (#4266),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _165,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1441:24: 1441:34 (#4267),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1441:17: 1441:20 (#4268),
                    },
                ),
            ),
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicodeRange,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1441:17: 1441:20 (#0),
            scope: scope[36],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:17: 1444:18 (#4269),
                },
            ),
        ),
        ty: regex_syntax::utf8::Utf8Sequences,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#4270),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:17: 1444:18 (#4269),
                },
            ),
        ),
        ty: regex_syntax::utf8::Utf8Sequences,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:17: 1444:18 (#4269),
                },
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1442:47: 1442:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:17: 1444:18 (#4269),
                },
            ),
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicodeRange,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1442:47: 1442:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:17: 1444:18 (#4269),
                },
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1442:60: 1442:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1442:17: 1444:18 (#4269),
                },
            ),
        ),
        ty: &'{erased} regex_syntax::hir::ClassUnicodeRange,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1442:60: 1442:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _171,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#4270),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#4270),
                    },
                ),
            ),
        ),
        ty: regex_syntax::utf8::Utf8Sequences,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#4270),
            scope: scope[37],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#4270),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<regex_syntax::utf8::Utf8Sequence>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#4270),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::utf8::Utf8Sequences,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#4270),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::utf8::Utf8Sequences,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#4270),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1442:17: 1444:18 (#4269),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1442:17: 1444:18 (#4269),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _179,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1442:28: 1442:70 (#4270),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1442:21: 1442:24 (#4271),
                    },
                ),
            ),
        ),
        ty: regex_syntax::utf8::Utf8Sequence,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1442:21: 1442:24 (#0),
            scope: scope[38],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1443:21: 1443:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1443:21: 1443:47 (#4272),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1443:21: 1443:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::compiler::Utf8Compiler<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1443:21: 1443:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [regex_syntax::utf8::Utf8Range],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1443:31: 1443:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [regex_syntax::utf8::Utf8Range],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1443:31: 1443:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} regex_syntax::utf8::Utf8Sequence,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1443:31: 1443:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1443:46: 1443:47 (#4273),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _186,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1443:21: 1443:47 (#4272),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1443:46: 1443:47 (#4273),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1443:46: 1443:47 (#4273),
            scope: scope[39],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1443:46: 1443:47 (#4273),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1443:46: 1443:47 (#4273),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _186,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1443:21: 1443:47 (#4272),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1443:21: 1443:47 (#4272),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1443:21: 1443:47 (#0),
            scope: scope[39],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:1446:13: 1446:27 (#0),
                },
            ),
        ),
        ty: &'{erased} mut nfa::thompson::compiler::Utf8Compiler<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1446:13: 1446:18 (#0),
            scope: scope[0],
        },
    },
]