[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &(*_1),
            StorageLive(_8),
            _8 = _2,
            StorageLive(_9),
            _9 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1587:18: 1587:44 (#0),
                    scope: scope[0],
                },
                kind: _6 = nfa::thompson::compiler::Compiler::add_range(move _7, move _8, move _9) -> [return: bb1, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1587:18: 1587:45 (#4295),
                    scope: scope[0],
                },
                kind: _5 = <core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _6) -> [return: bb2, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            PlaceMention(_5),
            _10 = discriminant(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1587:18: 1587:45 (#4295),
                    scope: scope[0],
                },
                kind: switchInt(move _10) -> [0: bb5, 1: bb4, otherwise: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1587:18: 1587:45 (#4295),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1587:44: 1587:45 (#4296),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb6, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_14),
            _14 = ((_5 as Continue).0: util::primitives::StateID),
            _4 = _14,
            StorageDead(_14),
            FakeRead(ForLet(None), _4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1587:45: 1587:46 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb8, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_11),
            _11 = move ((_5 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>),
            StorageLive(_13),
            _13 = move _11,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1587:18: 1587:45 (#4295),
                    scope: scope[3],
                },
                kind: _0 = <core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _13) -> [return: bb7, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1587:44: 1587:45 (#4296),
                    scope: scope[0],
                },
                kind: drop(_11) -> [return: bb9, unwind: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageLive(_15),
            StorageLive(_16),
            _16 = _4,
            StorageLive(_17),
            _17 = _4,
            _15 = nfa::thompson::compiler::ThompsonRef { start: move _16, end: move _17 },
            StorageDead(_17),
            StorageDead(_16),
            _0 = core::result::Result::<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError>::Ok(move _15),
            StorageDead(_15),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1589:6: 1589:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb11,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1587:45: 1587:46 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb10, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1589:6: 1589:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb11,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1589:6: 1589:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1587:44: 1587:45 (#4295),
                    scope: scope[3],
                },
                kind: drop(_13) -> [return: bb13, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1587:44: 1587:45 (#4296),
                    scope: scope[0],
                },
                kind: drop(_11) -> [return: bb14, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1587:45: 1587:46 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb16, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1587:44: 1587:45 (#4295),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb16, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:1586:5: 1589:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<nfa::thompson::compiler::ThompsonRef, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1586:46: 1586:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::compiler::Compiler,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1586:16: 1586:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/compiler.rs:1586:30: 1586:32 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/compiler.rs:1586:23: 1586:28 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1586:23: 1586:28 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1586:23: 1586:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/compiler.rs:1586:39: 1586:41 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/compiler.rs:1586:34: 1586:37 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1586:34: 1586:37 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1586:34: 1586:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/compiler.rs:1587:18: 1587:45 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1587:13: 1587:15 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1587:13: 1587:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1587:18: 1587:45 (#4295),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1587:18: 1587:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::compiler::Compiler,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1587:18: 1587:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1587:33: 1587:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1587:40: 1587:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1587:44: 1587:45 (#4296),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _5,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1587:18: 1587:45 (#4295),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1587:44: 1587:45 (#4296),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1587:44: 1587:45 (#4296),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1587:44: 1587:45 (#4296),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1587:44: 1587:45 (#4296),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _5,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:1587:18: 1587:45 (#4295),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:1587:18: 1587:45 (#4295),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1587:18: 1587:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: nfa::thompson::compiler::ThompsonRef,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1588:12: 1588:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1588:33: 1588:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:1588:42: 1588:44 (#0),
            scope: scope[0],
        },
    },
]