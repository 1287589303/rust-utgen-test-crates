[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &((*_1).0: std::vec::Vec<(util::primitives::SmallIndex, util::primitives::SmallIndex)>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/captures.rs:2323:9: 2323:32 (#0),
                    scope: scope[0],
                },
                kind: _4 = <std::vec::Vec<(util::primitives::SmallIndex, util::primitives::SmallIndex)> as core::ops::Deref>::deref(move _5) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = &(*_4),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/captures.rs:2323:9: 2323:32 (#0),
                    scope: scope[0],
                },
                kind: _2 = core::slice::<impl [(util::primitives::SmallIndex, util::primitives::SmallIndex)]>::last(move _3) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageLive(_6),
            _6 = {closure@regex-automata/src/util/captures.rs:2323:58: 2323:69},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/captures.rs:2323:9: 2323:74 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::option::Option::<&(util::primitives::SmallIndex, util::primitives::SmallIndex)>::map_or::<util::primitives::SmallIndex, {closure@regex-automata/src/util/captures.rs:2323:58: 2323:69}>(move _2, const util::primitives::SmallIndex::ZERO, move _6) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_2),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/captures.rs:2324:6: 2324:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/captures.rs:2316:5: 2324:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/captures.rs:2316:33: 2316:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} util::captures::GroupInfoInner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/captures.rs:2316:23: 2316:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/captures.rs:2323:9: 2323:74 (#0),
                },
            ),
        ),
        ty: core::option::Option<&'{erased} (util::primitives::SmallIndex, util::primitives::SmallIndex)>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/captures.rs:2323:9: 2323:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/captures.rs:2323:9: 2323:74 (#0),
                },
            ),
        ),
        ty: &'{erased} [(util::primitives::SmallIndex, util::primitives::SmallIndex)],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/captures.rs:2323:9: 2323:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/captures.rs:2323:9: 2323:74 (#0),
                },
            ),
        ),
        ty: &'{erased} [(util::primitives::SmallIndex, util::primitives::SmallIndex)],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/captures.rs:2323:9: 2323:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/captures.rs:2323:9: 2323:74 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<(util::primitives::SmallIndex, util::primitives::SmallIndex), std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/captures.rs:2323:9: 2323:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/captures.rs:2323:9: 2323:74 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:3248 ~ regex_automata[00dd]::util::captures::{impl#8}::small_slot_len::{closure#0}),
            [
                i32,
                Binder { value: extern "RustCall" fn((&'{erased} (util::primitives::SmallIndex, util::primitives::SmallIndex),)) -> util::primitives::SmallIndex, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/captures.rs:2323:58: 2323:73 (#0),
            scope: scope[0],
        },
    },
]