[
    BasicBlockData {
        statements: [
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            _9 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1337:25: 1337:39 (#0),
                    scope: scope[0],
                },
                kind: _8 = nfa::thompson::backtrack::BoundedBacktracker::get_nfa(move _9) -> [return: bb1, unwind: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = &(*_8),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1337:25: 1337:51 (#0),
                    scope: scope[0],
                },
                kind: _6 = nfa::thompson::nfa::NFA::has_empty(move _7) -> [return: bb2, unwind: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1337:25: 1337:51 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _6) -> [0: bb4, otherwise: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1337:55: 1337:69 (#0),
                    scope: scope[0],
                },
                kind: _11 = nfa::thompson::backtrack::BoundedBacktracker::get_nfa(move _12) -> [return: bb5, unwind: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            _5 = const false,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1337:25: 1337:79 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _10 = &(*_11),
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1337:55: 1337:79 (#0),
                    scope: scope[0],
                },
                kind: _5 = nfa::thompson::nfa::NFA::is_utf8(move _10) -> [return: bb6, unwind: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1337:25: 1337:79 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            FakeRead(ForLet(None), _5),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            _17 = &(*_1),
            StorageLive(_18),
            _18 = &mut (*_2),
            StorageLive(_19),
            _19 = &(*_3),
            StorageLive(_20),
            _20 = &mut (*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:60 (#0),
                    scope: scope[1],
                },
                kind: _16 = nfa::thompson::backtrack::BoundedBacktracker::search_imp(move _17, move _18, move _19, move _20) -> [return: bb8, unwind: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            StorageDead(_19),
            StorageDead(_18),
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:61 (#3985),
                    scope: scope[1],
                },
                kind: _15 = <core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError> as core::ops::Try>::branch(move _16) -> [return: bb9, unwind: bb33],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            PlaceMention(_15),
            _21 = discriminant(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:61 (#3985),
                    scope: scope[1],
                },
                kind: switchInt(move _21) -> [0: bb12, 1: bb11, otherwise: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:61 (#3985),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1338:60: 1338:61 (#3986),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb13, imaginary: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_25),
            _25 = ((_15 as Continue).0: core::option::Option<util::search::HalfMatch>),
            _14 = _25,
            StorageDead(_25),
            PlaceMention(_14),
            _27 = discriminant(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1338:18: 1338:61 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _27) -> [0: bb16, 1: bb17, otherwise: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_22),
            _22 = move ((_15 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>),
            StorageLive(_24),
            _24 = move _22,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:61 (#3985),
                    scope: scope[4],
                },
                kind: _0 = <core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _24) -> [return: bb14, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1338:60: 1338:61 (#3986),
                    scope: scope[1],
                },
                kind: drop(_22) -> [return: bb26, unwind: bb32],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:61 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1339:13: 1339:17 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb19, imaginary: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1340:13: 1340:21 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb20, imaginary: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_36),
            _36 = ((_14 as Some).0: util::search::HalfMatch),
            _13 = _36,
            StorageDead(_36),
            FakeRead(ForLet(None), _13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1342:10: 1342:11 (#0),
                    scope: scope[1],
                },
                kind: drop(_15) -> [return: bb23, unwind: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_29),
            _29 = core::option::Option::<util::search::HalfMatch>::None,
            _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::Ok(move _29),
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1339:21: 1339:36 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb27,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_31),
            _31 = &((_14 as Some).0: util::search::HalfMatch),
            _26 = &fake shallow _14,
            StorageLive(_32),
            _32 = _5,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1340:26: 1340:35 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _32) -> [0: bb22, otherwise: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
            StorageDead(_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1340:25: 1340:35 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb18,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
            FakeRead(ForMatchGuard, _26),
            FakeRead(ForGuardBinding, _31),
            StorageLive(_30),
            _30 = ((_14 as Some).0: util::search::HalfMatch),
            StorageLive(_34),
            StorageLive(_35),
            _35 = _30,
            _34 = core::option::Option::<util::search::HalfMatch>::Some(move _35),
            StorageDead(_35),
            _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::Ok(move _34),
            StorageDead(_34),
            StorageDead(_30),
            StorageDead(_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb27,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageDead(_14),
            StorageLive(_37),
            _37 = &(*_3),
            StorageLive(_38),
            _38 = _13,
            StorageLive(_39),
            StorageLive(_40),
            _40 = &_13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1343:43: 1343:54 (#0),
                    scope: scope[2],
                },
                kind: _39 = util::search::HalfMatch::offset(move _40) -> [return: bb24, unwind: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_40),
            StorageLive(_41),
            StorageLive(_42),
            _42 = &(*_1),
            StorageLive(_43),
            _43 = &mut (*_2),
            StorageLive(_44),
            _44 = &mut (*_4),
            _41 = {closure@regex-automata/src/nfa/thompson/backtrack.rs:1343:56: 1343:63} { self: move _42, cache: move _43, slots: move _44 },
            StorageDead(_44),
            StorageDead(_43),
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1343:9: 1347:11 (#0),
                    scope: scope[2],
                },
                kind: _0 = util::empty::skip_splits_fwd::<util::search::HalfMatch, {closure@regex-automata/src/nfa/thompson/backtrack.rs:1343:56: 1343:63}>(move _37, move _38, move _39, move _41) -> [return: bb25, unwind: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
            StorageDead(_39),
            StorageDead(_38),
            StorageDead(_37),
            StorageDead(_13),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1348:6: 1348:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb27,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1342:10: 1342:11 (#0),
                    scope: scope[1],
                },
                kind: drop(_15) -> [return: bb28, unwind: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageDead(_14),
            StorageDead(_13),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1348:6: 1348:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1348:6: 1348:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1338:60: 1338:61 (#3985),
                    scope: scope[4],
                },
                kind: drop(_24) -> [return: bb31, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1338:60: 1338:61 (#3986),
                    scope: scope[1],
                },
                kind: drop(_22) -> [return: bb32, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1342:10: 1342:11 (#0),
                    scope: scope[1],
                },
                kind: drop(_15) -> [return: bb34, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1338:60: 1338:61 (#3985),
                    scope: scope[1],
                },
                kind: drop(_16) -> [return: bb34, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1331:5: 1348:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1336:10: 1336:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::backtrack::BoundedBacktracker,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1332:9: 1332:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/backtrack.rs:1333:16: 1333:26 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1333:9: 1333:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1333:9: 1333:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut nfa::thompson::backtrack::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1333:9: 1333:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/backtrack.rs:1334:16: 1334:26 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1334:9: 1334:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1334:9: 1334:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1334:9: 1334:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/backtrack.rs:1335:16: 1335:42 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1335:9: 1335:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1335:9: 1335:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1335:9: 1335:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1337:25: 1337:79 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1337:13: 1337:22 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1337:13: 1337:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1337:25: 1337:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1337:25: 1337:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1337:25: 1337:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::backtrack::BoundedBacktracker,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1337:25: 1337:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1337:55: 1337:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1337:55: 1337:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::backtrack::BoundedBacktracker,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1337:55: 1337:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1338:18: 1342:10 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1338:13: 1338:15 (#0),
                    },
                ),
            ),
        ),
        ty: util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1338:13: 1338:15 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::search::MatchError>, core::option::Option<util::search::HalfMatch>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:61 (#3985),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::backtrack::BoundedBacktracker,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::backtrack::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1338:40: 1338:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1338:47: 1338:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1338:54: 1338:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1338:60: 1338:61 (#3986),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _15,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:61 (#3985),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1338:60: 1338:61 (#3986),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1338:60: 1338:61 (#3986),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1338:60: 1338:61 (#3986),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1338:60: 1338:61 (#3986),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _15,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:61 (#3985),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:61 (#3985),
                    },
                ),
            ),
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:61 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            FakeBorrow,
        ),
        ty: &'{erased} core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1339:13: 1339:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1339:21: 1339:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1339:31: 1339:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _14,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:61 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1340:13: 1340:21 (#0),
                    },
                ),
            ),
        ),
        ty: util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1340:18: 1340:20 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                RefForGuard,
            ),
        ),
        ty: &'{erased} util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1340:18: 1340:20 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1340:26: 1340:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1340:39: 1340:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1340:49: 1340:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1340:54: 1340:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _14,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1338:24: 1338:61 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1341:13: 1341:21 (#0),
                    },
                ),
            ),
        ),
        ty: util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1341:18: 1341:20 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1343:9: 1347:11 (#0),
                },
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1343:32: 1343:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1343:9: 1347:11 (#0),
                },
            ),
        ),
        ty: util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1343:39: 1343:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1343:9: 1347:11 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1343:43: 1343:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1343:9: 1347:11 (#0),
                },
            ),
        ),
        ty: &'{erased} util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1343:43: 1343:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1343:9: 1347:11 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:2390 ~ regex_automata[00dd]::nfa::thompson::backtrack::{impl#4}::try_search_slots_imp::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn((&'^0 util::search::Input<'^1>,)) -> core::result::Result<core::option::Option<(util::search::HalfMatch, usize)>, util::search::MatchError>, bound_vars: [Region(BrAnon), Region(BrAnon)] },
                (&'{erased} nfa::thompson::backtrack::BoundedBacktracker, &'{erased} mut nfa::thompson::backtrack::Cache, &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>]),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1343:56: 1347:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1343:9: 1347:11 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::backtrack::BoundedBacktracker,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1343:56: 1347:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::backtrack::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1343:56: 1347:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1343:56: 1347:10 (#0),
            scope: scope[0],
        },
    },
]