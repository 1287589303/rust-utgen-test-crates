[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            PlaceMention(_1),
            _4 = discriminant(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:35:33: 35:43 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb2, 1: bb2, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:35:39: 35:43 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = aho_corasick::MatchKind::LeftmostFirst,
            FakeRead(ForLet(None), _3),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:45:30: 45:43 (#0),
                    scope: scope[1],
                },
                kind: _7 = core::slice::<impl [B]>::len(move _8) -> [return: bb3, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            _6 = Le(move _7, const 500_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:45:30: 45:50 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _6) -> [0: bb5, otherwise: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            _5 = aho_corasick::AhoCorasickKind::DFA,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:45:27: 49:14 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            _5 = aho_corasick::AhoCorasickKind::ContiguousNFA,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:45:27: 49:14 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            FakeRead(ForLet(None), _5),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            StorageLive(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 50:62 (#0),
                    scope: scope[2],
                },
                kind: _19 = aho_corasick::AhoCorasick::builder() -> [return: bb7, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _18 = &mut _19,
            StorageLive(_20),
            StorageLive(_21),
            _21 = _5,
            _20 = core::option::Option::<aho_corasick::AhoCorasickKind>::Some(move _21),
            StorageDead(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 51:37 (#0),
                    scope: scope[2],
                },
                kind: _17 = aho_corasick::AhoCorasickBuilder::kind(move _18, move _20) -> [return: bb8, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _16 = &mut (*_17),
            StorageDead(_20),
            StorageDead(_18),
            StorageLive(_22),
            _22 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 52:43 (#0),
                    scope: scope[2],
                },
                kind: _15 = aho_corasick::AhoCorasickBuilder::match_kind(move _16, move _22) -> [return: bb9, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _14 = &mut (*_15),
            StorageDead(_22),
            StorageDead(_16),
            StorageLive(_23),
            _23 = aho_corasick::StartKind::Both,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 53:59 (#0),
                    scope: scope[2],
                },
                kind: _13 = aho_corasick::AhoCorasickBuilder::start_kind(move _14, move _23) -> [return: bb10, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _12 = &mut (*_13),
            StorageDead(_23),
            StorageDead(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 68:34 (#0),
                    scope: scope[2],
                },
                kind: _11 = aho_corasick::AhoCorasickBuilder::prefilter(move _12, const false) -> [return: bb11, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _10 = &(*_11),
            StorageDead(_12),
            StorageLive(_24),
            _24 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 69:32 (#0),
                    scope: scope[2],
                },
                kind: _9 = aho_corasick::AhoCorasickBuilder::build::<&[B], &B>(move _10, move _24) -> [return: bb12, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageDead(_10),
            FakeRead(ForLet(None), _9),
            StorageDead(_19),
            StorageDead(_17),
            StorageDead(_15),
            StorageDead(_13),
            StorageDead(_11),
            StorageLive(_25),
            PlaceMention(_9),
            _26 = discriminant(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:70:22: 70:34 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _26) -> [0: bb14, 1: bb15, otherwise: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:70:28: 70:34 (#0),
                    scope: scope[3],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:71:17: 71:23 (#0),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb16, imaginary: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_28),
            _28 = move ((_9 as Err).0: aho_corasick::BuildError),
            _0 = core::option::Option::<util::prefilter::aho_corasick::AhoCorasick>::None,
            StorageDead(_28),
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:78:9: 78:10 (#0),
                    scope: scope[2],
                },
                kind: drop(_9) -> [return: bb22, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_27),
            _27 = move ((_9 as Ok).0: aho_corasick::AhoCorasick),
            _25 = move _27,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:71:28: 71:29 (#0),
                    scope: scope[3],
                },
                kind: drop(_27) -> [return: bb17, unwind: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            FakeRead(ForLet(None), _25),
            StorageLive(_30),
            StorageLive(_31),
            _31 = move _25,
            _30 = util::prefilter::aho_corasick::AhoCorasick { ac: move _31 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:77:35: 77:36 (#0),
                    scope: scope[4],
                },
                kind: drop(_31) -> [return: bb18, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            _0 = core::option::Option::<util::prefilter::aho_corasick::AhoCorasick>::Some(move _30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:77:36: 77:37 (#0),
                    scope: scope[4],
                },
                kind: drop(_30) -> [return: bb19, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:78:9: 78:10 (#0),
                    scope: scope[3],
                },
                kind: drop(_25) -> [return: bb20, unwind: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:78:9: 78:10 (#0),
                    scope: scope[2],
                },
                kind: drop(_9) -> [return: bb21, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_5),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:79:6: 79:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_5),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:79:6: 79:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:79:6: 79:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:77:36: 77:37 (#0),
                    scope: scope[4],
                },
                kind: drop(_30) -> [return: bb25, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:78:9: 78:10 (#0),
                    scope: scope[3],
                },
                kind: drop(_25) -> [return: bb26, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:78:9: 78:10 (#0),
                    scope: scope[2],
                },
                kind: drop(_9) -> [return: bb27, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/aho_corasick.rs:15:5: 79:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::prefilter::aho_corasick::AhoCorasick>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:18:10: 18:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/prefilter/aho_corasick.rs:16:15: 16:24 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/aho_corasick.rs:16:9: 16:13 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/aho_corasick.rs:16:9: 16:13 (#0),
                    },
                ),
            ),
        ),
        ty: util::search::MatchKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:16:9: 16:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/prefilter/aho_corasick.rs:17:18: 17:22 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/aho_corasick.rs:17:9: 17:16 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/aho_corasick.rs:17:9: 17:16 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [B/#0],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:17:9: 17:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/aho_corasick.rs:35:33: 39:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/aho_corasick.rs:35:17: 35:30 (#0),
                    },
                ),
            ),
        ),
        ty: aho_corasick::MatchKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:35:17: 35:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:36:17: 36:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/aho_corasick.rs:45:27: 49:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/aho_corasick.rs:45:17: 45:24 (#0),
                    },
                ),
            ),
        ),
        ty: aho_corasick::AhoCorasickKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:45:17: 45:24 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:45:30: 45:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:45:30: 45:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [B/#0],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:45:30: 45:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 69:32 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/aho_corasick.rs:50:17: 50:23 (#0),
                    },
                ),
            ),
        ),
        ty: core::result::Result<aho_corasick::AhoCorasick, aho_corasick::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:50:17: 50:23 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} aho_corasick::AhoCorasickBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 68:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut aho_corasick::AhoCorasickBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 68:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut aho_corasick::AhoCorasickBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 53:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut aho_corasick::AhoCorasickBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 53:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut aho_corasick::AhoCorasickBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 52:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut aho_corasick::AhoCorasickBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 52:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut aho_corasick::AhoCorasickBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 51:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut aho_corasick::AhoCorasickBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 51:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut aho_corasick::AhoCorasickBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 50:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: aho_corasick::AhoCorasickBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:50:26: 50:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<aho_corasick::AhoCorasickKind>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:51:23: 51:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: aho_corasick::AhoCorasickKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:51:28: 51:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: aho_corasick::MatchKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:52:29: 52:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: aho_corasick::StartKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:53:29: 53:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [B/#0],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:69:24: 69:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/aho_corasick.rs:70:22: 76:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/aho_corasick.rs:70:17: 70:19 (#0),
                    },
                ),
            ),
        ),
        ty: aho_corasick::AhoCorasick,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:70:17: 70:19 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:71:17: 71:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _9,
                                ),
                                regex-automata/src/util/prefilter/aho_corasick.rs:70:28: 70:34 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/aho_corasick.rs:71:17: 71:23 (#0),
                    },
                ),
            ),
        ),
        ty: aho_corasick::AhoCorasick,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:71:20: 71:22 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _9,
                                ),
                                regex-automata/src/util/prefilter/aho_corasick.rs:70:28: 70:34 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/aho_corasick.rs:72:17: 72:26 (#0),
                    },
                ),
            ),
        ),
        ty: aho_corasick::BuildError,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:72:21: 72:25 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:72:30: 75:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::prefilter::aho_corasick::AhoCorasick,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:77:18: 77:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: aho_corasick::AhoCorasick,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/aho_corasick.rs:77:32: 77:34 (#0),
            scope: scope[0],
        },
    },
]