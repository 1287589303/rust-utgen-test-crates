[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &mut ((*_1).0: dfa::dense::Builder),
            StorageLive(_6),
            _6 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:837:9: 837:32 (#0),
                    scope: scope[0],
                },
                kind: _4 = dfa::dense::Builder::syntax(move _5, move _6) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_4),
            _3 = &mut (*_1),
            _0 = &mut (*_3),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:839:6: 839:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/regex.rs:833:5: 839:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::regex::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:836:10: 836:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut dfa::regex::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:834:9: 834:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/regex.rs:835:17: 835:44 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/regex.rs:835:9: 835:15 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/regex.rs:835:9: 835:15 (#0),
                    },
                ),
            ),
        ),
        ty: util::syntax::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:835:9: 835:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::regex::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:838:9: 838:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::dense::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:837:9: 837:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::dense::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:837:9: 837:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::syntax::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/regex.rs:837:25: 837:31 (#0),
            scope: scope[0],
        },
    },
]