[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3555:22: 3555:41 (#0),
                    scope: scope[0],
                },
                kind: _3 = dfa::dense::TransitionTable::<T>::write_to_len(move _4) -> [return: bb1, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3556:12: 3556:21 (#0),
                    scope: scope[1],
                },
                kind: _7 = core::slice::<impl [u8]>::len(move _8) -> [return: bb2, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageLive(_9),
            _9 = _3,
            _6 = Lt(move _7, move _9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3556:12: 3556:30 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _6) -> [0: bb5, otherwise: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_7),
            StorageLive(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3557:24: 3557:76 (#0),
                    scope: scope[1],
                },
                kind: _11 = util::wire::SerializeError::buffer_too_small(const "transition table") -> [return: bb4, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::result::Result::<usize, util::wire::SerializeError>::Err(move _11),
            StorageDead(_11),
            StorageDead(_6),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb37,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_7),
            _5 = const (),
            StorageDead(_6),
            StorageDead(_5),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            _15 = &mut (*_2),
            StorageLive(_16),
            StorageLive(_17),
            _17 = _3,
            _16 = core::ops::RangeTo::<usize> { end: move _17 },
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3559:23: 3559:33 (#0),
                    scope: scope[1],
                },
                kind: _14 = <[u8] as core::ops::IndexMut<core::ops::RangeTo<usize>>>::index_mut(move _15, move _16) -> [return: bb6, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_15),
            _13 = &mut (*_14),
            _12 = &mut (*_13),
            _2 = move _12,
            StorageDead(_12),
            StorageDead(_14),
            StorageDead(_13),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            _22 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3563:36: 3563:46 (#0),
                    scope: scope[1],
                },
                kind: _21 = dfa::dense::TransitionTable::<T>::len(move _22) -> [return: bb7, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3563:22: 3563:47 (#0),
                    scope: scope[1],
                },
                kind: _20 = <u32 as core::convert::TryFrom<usize>>::try_from(move _21) -> [return: bb8, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3563:22: 3563:56 (#0),
                    scope: scope[1],
                },
                kind: _19 = core::result::Result::<u32, core::num::TryFromIntError>::unwrap(move _20) -> [return: bb9, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            StorageLive(_23),
            _23 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3563:9: 3563:62 (#0),
                    scope: scope[1],
                },
                kind: _18 = <E as util::wire::Endian>::write_u32(move _19, move _23) -> [return: bb10, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
            StorageDead(_19),
            StorageDead(_18),
            StorageLive(_24),
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            _27 = &mut (*_2),
            StorageLive(_28),
            StorageLive(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3564:24: 3564:40 (#0),
                    scope: scope[1],
                },
                kind: _29 = core::mem::size_of::<u32>() -> [return: bb11, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _28 = core::ops::RangeFrom::<usize> { start: move _29 },
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3564:23: 3564:43 (#0),
                    scope: scope[1],
                },
                kind: _26 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _27, move _28) -> [return: bb12, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_27),
            _25 = &mut (*_26),
            _24 = &mut (*_25),
            _2 = move _24,
            StorageDead(_24),
            StorageDead(_26),
            StorageDead(_25),
            StorageLive(_30),
            StorageLive(_31),
            StorageLive(_32),
            StorageLive(_33),
            _33 = ((*_1).2: usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3568:22: 3568:49 (#0),
                    scope: scope[1],
                },
                kind: _32 = <u32 as core::convert::TryFrom<usize>>::try_from(move _33) -> [return: bb13, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3568:22: 3568:58 (#0),
                    scope: scope[1],
                },
                kind: _31 = core::result::Result::<u32, core::num::TryFromIntError>::unwrap(move _32) -> [return: bb14, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
            StorageLive(_34),
            _34 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3568:9: 3568:64 (#0),
                    scope: scope[1],
                },
                kind: _30 = <E as util::wire::Endian>::write_u32(move _31, move _34) -> [return: bb15, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageDead(_31),
            StorageDead(_30),
            StorageLive(_35),
            StorageLive(_36),
            StorageLive(_37),
            StorageLive(_38),
            _38 = &mut (*_2),
            StorageLive(_39),
            StorageLive(_40),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3569:24: 3569:40 (#0),
                    scope: scope[1],
                },
                kind: _40 = core::mem::size_of::<u32>() -> [return: bb16, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _39 = core::ops::RangeFrom::<usize> { start: move _40 },
            StorageDead(_40),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3569:23: 3569:43 (#0),
                    scope: scope[1],
                },
                kind: _37 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _38, move _39) -> [return: bb17, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            StorageDead(_38),
            _36 = &mut (*_37),
            _35 = &mut (*_36),
            _2 = move _35,
            StorageDead(_35),
            StorageDead(_37),
            StorageDead(_36),
            StorageLive(_41),
            StorageLive(_42),
            StorageLive(_43),
            StorageLive(_44),
            _44 = &((*_1).1: util::alphabet::ByteClasses),
            StorageLive(_45),
            _45 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3572:17: 3572:43 (#0),
                    scope: scope[1],
                },
                kind: _43 = util::alphabet::ByteClasses::write_to(move _44, move _45) -> [return: bb18, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_45),
            StorageDead(_44),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3572:17: 3572:44 (#2284),
                    scope: scope[1],
                },
                kind: _42 = <core::result::Result<usize, util::wire::SerializeError> as core::ops::Try>::branch(move _43) -> [return: bb19, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
            PlaceMention(_42),
            _46 = discriminant(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3572:17: 3572:44 (#2284),
                    scope: scope[1],
                },
                kind: switchInt(move _46) -> [0: bb22, 1: bb21, otherwise: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3572:17: 3572:44 (#2284),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3572:43: 3572:44 (#2285),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb23, imaginary: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_50),
            _50 = ((_42 as Continue).0: usize),
            _41 = _50,
            StorageDead(_50),
            FakeRead(ForLet(None), _41),
            StorageDead(_42),
            StorageLive(_51),
            StorageLive(_52),
            StorageLive(_53),
            StorageLive(_54),
            _54 = &mut (*_2),
            StorageLive(_55),
            StorageLive(_56),
            _56 = _41,
            _55 = core::ops::RangeFrom::<usize> { start: move _56 },
            StorageDead(_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3573:23: 3573:28 (#0),
                    scope: scope[2],
                },
                kind: _53 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _54, move _55) -> [return: bb25, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_47),
            _47 = move ((_42 as Break).0: core::result::Result<core::convert::Infallible, util::wire::SerializeError>),
            StorageLive(_49),
            _49 = move _47,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3572:17: 3572:44 (#2284),
                    scope: scope[4],
                },
                kind: _0 = <core::result::Result<usize, util::wire::SerializeError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::wire::SerializeError>>>::from_residual(move _49) -> [return: bb24, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            StorageDead(_47),
            StorageDead(_42),
            StorageDead(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb37,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
            StorageDead(_54),
            _52 = &mut (*_53),
            _51 = &mut (*_52),
            _2 = move _51,
            StorageDead(_51),
            StorageDead(_53),
            StorageDead(_52),
            StorageLive(_57),
            StorageLive(_58),
            StorageLive(_59),
            StorageLive(_60),
            _60 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#0),
                    scope: scope[2],
                },
                kind: _59 = dfa::dense::TransitionTable::<T>::table(move _60) -> [return: bb26, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_60),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#2287),
                    scope: scope[2],
                },
                kind: _58 = <&[util::primitives::StateID] as core::iter::IntoIterator>::into_iter(move _59) -> [return: bb27, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_59),
            PlaceMention(_58),
            StorageLive(_61),
            _61 = move _58,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3576:9: 3579:10 (#2286),
                    scope: scope[7],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3576:9: 3579:10 (#2286),
                    scope: scope[7],
                },
                kind: falseUnwind -> [real: bb29, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_63),
            StorageLive(_64),
            StorageLive(_65),
            StorageLive(_66),
            _66 = &mut _61,
            _65 = &mut (*_66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#2287),
                    scope: scope[7],
                },
                kind: _64 = <core::slice::Iter<'_, util::primitives::StateID> as core::iter::Iterator>::next(move _65) -> [return: bb30, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_65),
            PlaceMention(_64),
            _67 = discriminant(_64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#2287),
                    scope: scope[7],
                },
                kind: switchInt(move _67) -> [0: bb32, 1: bb33, otherwise: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#2287),
                    scope: scope[7],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3576:9: 3579:10 (#2286),
                    scope: scope[7],
                },
                kind: falseEdge -> [real: bb34, imaginary: bb33],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_69),
            _69 = (*((_64 as Some).0: &util::primitives::StateID)),
            StorageLive(_70),
            StorageLive(_71),
            _71 = _69,
            StorageLive(_72),
            StorageLive(_73),
            _73 = &mut _2,
            _72 = &mut (*(*_73)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3577:21: 3577:61 (#0),
                    scope: scope[8],
                },
                kind: _70 = util::wire::write_state_id::<E>(move _71, move _72) -> [return: bb35, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _57 = const (),
            StorageDead(_66),
            StorageDead(_64),
            StorageDead(_63),
            StorageDead(_61),
            StorageDead(_58),
            StorageDead(_57),
            StorageLive(_80),
            _80 = _3,
            _0 = core::result::Result::<usize, util::wire::SerializeError>::Ok(move _80),
            StorageDead(_80),
            StorageDead(_41),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3581:6: 3581:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_72),
            StorageDead(_71),
            FakeRead(ForLet(None), _70),
            StorageDead(_73),
            StorageLive(_74),
            StorageLive(_75),
            StorageLive(_76),
            StorageLive(_77),
            _77 = &mut (*_2),
            StorageLive(_78),
            StorageLive(_79),
            _79 = _70,
            _78 = core::ops::RangeFrom::<usize> { start: move _79 },
            StorageDead(_79),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3578:27: 3578:32 (#0),
                    scope: scope[9],
                },
                kind: _76 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _77, move _78) -> [return: bb36, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_78),
            StorageDead(_77),
            _75 = &mut (*_76),
            _74 = &mut (*_75),
            _2 = move _74,
            StorageDead(_74),
            StorageDead(_76),
            StorageDead(_75),
            _63 = const (),
            StorageDead(_70),
            StorageDead(_69),
            StorageDead(_66),
            StorageDead(_64),
            StorageDead(_63),
            _62 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3576:9: 3579:10 (#2286),
                    scope: scope[7],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3581:6: 3581:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3581:6: 3581:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:3551:5: 3581:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<usize, util::wire::SerializeError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3554:10: 3554:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} dfa::dense::TransitionTable<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3552:9: 3552:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/dense.rs:3553:18: 3553:27 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/dense.rs:3553:9: 3553:16 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/dense.rs:3553:9: 3553:16 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3553:9: 3553:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/dense.rs:3555:22: 3555:41 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/dense.rs:3555:13: 3555:19 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3555:13: 3555:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} dfa::dense::TransitionTable<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3555:22: 3555:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3556:9: 3558:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3556:12: 3556:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3556:12: 3556:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3556:12: 3556:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3556:24: 3556:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3556:31: 3558:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::wire::SerializeError,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3557:24: 3557:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3559:15: 3559:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3559:15: 3559:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3559:23: 3559:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3559:20: 3559:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3559:24: 3559:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3559:26: 3559:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3563:9: 3563:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3563:22: 3563:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u32, core::num::TryFromIntError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3563:22: 3563:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3563:36: 3563:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} dfa::dense::TransitionTable<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3563:36: 3563:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3563:58: 3563:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3564:15: 3564:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3564:15: 3564:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3564:23: 3564:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3564:20: 3564:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeFrom<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3564:24: 3564:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3564:24: 3564:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3568:9: 3568:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3568:22: 3568:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u32, core::num::TryFromIntError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3568:22: 3568:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3568:36: 3568:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3568:60: 3568:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3569:15: 3569:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3569:15: 3569:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3569:23: 3569:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3569:20: 3569:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeFrom<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3569:24: 3569:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3569:24: 3569:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/dense.rs:3572:17: 3572:44 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/dense.rs:3572:13: 3572:14 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3572:13: 3572:14 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::wire::SerializeError>, usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3572:17: 3572:44 (#2284),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<usize, util::wire::SerializeError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3572:17: 3572:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::alphabet::ByteClasses,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3572:17: 3572:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3572:39: 3572:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3572:43: 3572:44 (#2285),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _42,
                                ),
                                regex-automata/src/dfa/dense.rs:3572:17: 3572:44 (#2284),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/dense.rs:3572:43: 3572:44 (#2285),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, util::wire::SerializeError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3572:43: 3572:44 (#2285),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3572:43: 3572:44 (#2285),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, util::wire::SerializeError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3572:43: 3572:44 (#2285),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _42,
                                ),
                                regex-automata/src/dfa/dense.rs:3572:17: 3572:44 (#2284),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/dense.rs:3572:17: 3572:44 (#2284),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3572:17: 3572:44 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3573:15: 3573:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3573:15: 3573:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3573:23: 3573:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3573:20: 3573:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeFrom<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3573:24: 3573:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3573:24: 3573:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3576:9: 3579:10 (#2286),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#2287),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} dfa::dense::TransitionTable<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3576:21: 3576:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _58,
                                ),
                                regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#2287),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#2287),
                    },
                ),
            ),
        ),
        ty: core::slice::Iter<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#2287),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3551:5: 3581:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#2287),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#2287),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#2287),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#2287),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3576:9: 3579:10 (#2286),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3576:9: 3579:10 (#2286),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _64,
                                ),
                                regex-automata/src/dfa/dense.rs:3576:21: 3576:33 (#2287),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/dense.rs:3576:13: 3576:17 (#2288),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3576:14: 3576:17 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/dense.rs:3577:21: 3577:61 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/dense.rs:3577:17: 3577:18 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3577:17: 3577:18 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3577:47: 3577:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3577:52: 3577:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3577:52: 3577:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3578:19: 3578:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3578:19: 3578:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3578:27: 3578:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3578:24: 3578:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeFrom<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3578:28: 3578:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3578:28: 3578:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:3580:12: 3580:18 (#0),
            scope: scope[0],
        },
    },
]