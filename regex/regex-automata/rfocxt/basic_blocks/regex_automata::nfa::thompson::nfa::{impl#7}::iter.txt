[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*((*_1).0: std::boxed::Box<[util::primitives::StateID]>)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1949:9: 1950:20 (#0),
                    scope: scope[0],
                },
                kind: _4 = core::slice::<impl [util::primitives::StateID]>::iter(move _5) -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1949:9: 1951:25 (#0),
                    scope: scope[0],
                },
                kind: _3 = <core::slice::Iter<'_, util::primitives::StateID> as core::iter::Iterator>::enumerate(move _4) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_6),
            _6 = {closure@regex-automata/src/nfa/thompson/nfa.rs:1952:21: 1952:33},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1949:9: 1952:55 (#0),
                    scope: scope[0],
                },
                kind: _2 = <core::iter::Enumerate<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::filter::<{closure@regex-automata/src/nfa/thompson/nfa.rs:1952:21: 1952:33}>(move _3, move _6) -> [return: bb3, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_3),
            StorageLive(_7),
            _7 = {closure@regex-automata/src/nfa/thompson/nfa.rs:1953:18: 1953:33},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1949:9: 1957:15 (#0),
                    scope: scope[0],
                },
                kind: _0 = <core::iter::Filter<core::iter::Enumerate<core::slice::Iter<'_, util::primitives::StateID>>, {closure@regex-automata/src/nfa/thompson/nfa.rs:1952:21: 1952:33}> as core::iter::Iterator>::map::<nfa::thompson::nfa::Transition, {closure@regex-automata/src/nfa/thompson/nfa.rs:1953:18: 1953:33}>(move _2, move _7) -> [return: bb4, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1958:6: 1958:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1947:5: 1958:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Alias(
            Opaque,
            AliasTy {
                args: [
                    '{erased},
                ],
                def_id: DefId(0:8925 ~ regex_automata[00dd]::nfa::thompson::nfa::{impl#7}::iter::{opaque#0}),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1947:34: 1947:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::nfa::DenseTransitions,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1947:24: 1947:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/nfa.rs:1949:9: 1957:15 (#0),
                },
            ),
        ),
        ty: core::iter::Filter<core::iter::Enumerate<core::slice::Iter<'{erased}, util::primitives::StateID>>, Closure(DefId(0:2815 ~ regex_automata[00dd]::nfa::thompson::nfa::{impl#7}::iter::{closure#0}), [i16, Binder { value: extern "RustCall" fn((&'^0 (usize, &'{erased} util::primitives::StateID),)) -> bool, bound_vars: [Region(BrAnon)] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1949:9: 1952:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/nfa.rs:1949:9: 1957:15 (#0),
                },
            ),
        ),
        ty: core::iter::Enumerate<core::slice::Iter<'{erased}, util::primitives::StateID>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1949:9: 1951:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/nfa.rs:1949:9: 1957:15 (#0),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1949:9: 1950:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/nfa.rs:1949:9: 1957:15 (#0),
                },
            ),
        ),
        ty: &'{erased} [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1949:9: 1949:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/nfa.rs:1949:9: 1957:15 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:2815 ~ regex_automata[00dd]::nfa::thompson::nfa::{impl#7}::iter::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn((&'^0 (usize, &'{erased} util::primitives::StateID),)) -> bool, bound_vars: [Region(BrAnon)] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1952:21: 1952:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/nfa.rs:1949:9: 1957:15 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:2816 ~ regex_automata[00dd]::nfa::thompson::nfa::{impl#7}::iter::{closure#1}),
            [
                i16,
                Binder { value: extern "RustCall" fn(((usize, &'{erased} util::primitives::StateID),)) -> nfa::thompson::nfa::Transition, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1953:18: 1957:14 (#0),
            scope: scope[0],
        },
    },
]