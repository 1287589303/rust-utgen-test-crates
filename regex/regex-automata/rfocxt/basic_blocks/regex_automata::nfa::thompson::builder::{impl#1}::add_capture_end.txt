[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1063:19: 1063:44 (#0),
                    scope: scope[0],
                },
                kind: _4 = nfa::thompson::builder::Builder::current_pattern_id(move _5) -> [return: bb1, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            FakeRead(ForLet(None), _4),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1064:33: 1064:66 (#0),
                    scope: scope[1],
                },
                kind: _7 = <util::primitives::SmallIndex as core::convert::TryFrom<u32>>::try_from(move _8) -> [return: bb2, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            PlaceMention(_7),
            _9 = discriminant(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1064:27: 1064:66 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _9) -> [0: bb5, 1: bb4, otherwise: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1064:33: 1064:66 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1065:13: 1065:19 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb6, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_13),
            _13 = ((_7 as Ok).0: util::primitives::SmallIndex),
            _6 = _13,
            StorageDead(_13),
            FakeRead(ForLet(None), _6),
            StorageDead(_7),
            StorageLive(_14),
            _14 = &mut (*_1),
            StorageLive(_15),
            StorageLive(_16),
            _16 = _4,
            StorageLive(_17),
            _17 = _6,
            StorageLive(_18),
            _18 = _2,
            _15 = nfa::thompson::builder::State::CaptureEnd { pattern_id: move _16, group_index: move _17, next: move _18 },
            StorageDead(_18),
            StorageDead(_17),
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1070:9: 1070:75 (#0),
                    scope: scope[2],
                },
                kind: _0 = nfa::thompson::builder::Builder::add(move _14, move _15) -> [return: bb9, unwind: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_11),
            StorageLive(_12),
            _12 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1066:28: 1066:74 (#0),
                    scope: scope[1],
                },
                kind: _11 = nfa::thompson::error::BuildError::invalid_capture_index(move _12) -> [return: bb7, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            _0 = core::result::Result::<util::primitives::StateID, nfa::thompson::error::BuildError>::Err(move _11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1066:74: 1066:75 (#0),
                    scope: scope[1],
                },
                kind: drop(_11) -> [return: bb8, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_7),
            StorageDead(_6),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1071:6: 1071:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb10,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageDead(_14),
            StorageDead(_6),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1071:6: 1071:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb10,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1071:6: 1071:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1070:74: 1070:75 (#0),
                    scope: scope[2],
                },
                kind: drop(_15) -> [return: bb12, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1058:5: 1071:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1062:10: 1062:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut nfa::thompson::builder::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1059:9: 1059:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/builder.rs:1060:15: 1060:22 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:1060:9: 1060:13 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:1060:9: 1060:13 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1060:9: 1060:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/builder.rs:1061:22: 1061:25 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:1061:9: 1061:20 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:1061:9: 1061:20 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1061:9: 1061:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:1063:19: 1063:44 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:1063:13: 1063:16 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1063:13: 1063:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::builder::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1063:19: 1063:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/builder.rs:1064:27: 1069:10 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:1064:13: 1064:24 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1064:13: 1064:24 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<util::primitives::SmallIndex, util::primitives::SmallIndexError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1064:33: 1064:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1064:54: 1064:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1065:13: 1065:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/builder.rs:1066:17: 1066:75 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1066:17: 1066:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: nfa::thompson::error::BuildError,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1066:28: 1066:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/builder.rs:1066:17: 1066:75 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1066:62: 1066:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _7,
                                ),
                                regex-automata/src/nfa/thompson/builder.rs:1064:33: 1064:66 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/builder.rs:1068:13: 1068:28 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1068:16: 1068:27 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/builder.rs:1070:9: 1070:75 (#0),
                },
            ),
        ),
        ty: &'{erased} mut nfa::thompson::builder::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1070:9: 1070:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/builder.rs:1070:9: 1070:75 (#0),
                },
            ),
        ),
        ty: nfa::thompson::builder::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1070:18: 1070:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1070:50: 1070:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1070:55: 1070:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1070:68: 1070:72 (#0),
            scope: scope[0],
        },
    },
]