[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = ((*_1).5: core::option::Option<util::alphabet::ByteSet>),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &_2,
            _4 = {closure@regex-automata/src/hybrid/dfa.rs:3749:36: 3749:39} { byte: move _5 },
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/hybrid/dfa.rs:3749:9: 3749:57 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::option::Option::<util::alphabet::ByteSet>::map_or::<bool, {closure@regex-automata/src/hybrid/dfa.rs:3749:36: 3749:39}>(move _3, const false, move _4) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/hybrid/dfa.rs:3750:6: 3750:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/hybrid/dfa.rs:3748:5: 3750:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/hybrid/dfa.rs:3748:41: 3748:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} hybrid::dfa::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/hybrid/dfa.rs:3748:21: 3748:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/hybrid/dfa.rs:3748:34: 3748:36 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/hybrid/dfa.rs:3748:28: 3748:32 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/hybrid/dfa.rs:3748:28: 3748:32 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/hybrid/dfa.rs:3748:28: 3748:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/hybrid/dfa.rs:3749:9: 3749:57 (#0),
                },
            ),
        ),
        ty: core::option::Option<util::alphabet::ByteSet>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/hybrid/dfa.rs:3749:9: 3749:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/hybrid/dfa.rs:3749:9: 3749:57 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:1446 ~ regex_automata[00dd]::hybrid::dfa::{impl#8}::get_quit::{closure#0}),
            [
                i32,
                Binder { value: extern "RustCall" fn((util::alphabet::ByteSet,)) -> bool, bound_vars: [] },
                (&'{erased} u8,),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/hybrid/dfa.rs:3749:36: 3749:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/hybrid/dfa.rs:3749:9: 3749:57 (#0),
                },
            ),
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/hybrid/dfa.rs:3749:36: 3749:56 (#0),
            scope: scope[0],
        },
    },
]