[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/mod.rs:509:11: 509:17 (#0),
                    scope: scope[0],
                },
                kind: _6 = <std::sync::Arc<P> as core::ops::Deref>::deref(move _7) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            _5 = &(*_6),
            _4 = &(*_5),
            StorageLive(_8),
            _8 = &(*_2),
            StorageLive(_9),
            _9 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/mod.rs:509:9: 509:41 (#0),
                    scope: scope[0],
                },
                kind: _0 = <P as util::prefilter::PrefilterI>::prefix(move _4, move _8, move _9) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
            StorageDead(_4),
            StorageDead(_6),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/mod.rs:510:6: 510:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/mod.rs:508:5: 510:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::Span>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:508:54: 508:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} std::sync::Arc<P/#0, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:508:15: 508:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/prefilter/mod.rs:508:32: 508:37 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/mod.rs:508:22: 508:30 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/mod.rs:508:22: 508:30 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:508:22: 508:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/prefilter/mod.rs:508:45: 508:49 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/mod.rs:508:39: 508:43 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/mod.rs:508:39: 508:43 (#0),
                    },
                ),
            ),
        ),
        ty: util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:508:39: 508:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/mod.rs:509:9: 509:41 (#0),
                },
            ),
        ),
        ty: &'{erased} P/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:509:9: 509:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/mod.rs:509:9: 509:41 (#0),
                },
            ),
        ),
        ty: &'{erased} P/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:509:9: 509:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/mod.rs:509:9: 509:41 (#0),
                },
            ),
        ),
        ty: &'{erased} P/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:509:11: 509:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/mod.rs:509:9: 509:41 (#0),
                },
            ),
        ),
        ty: &'{erased} std::sync::Arc<P/#0, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:509:12: 509:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/mod.rs:509:9: 509:41 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:509:26: 509:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/mod.rs:509:9: 509:41 (#0),
                },
            ),
        ),
        ty: util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:509:36: 509:40 (#0),
            scope: scope[0],
        },
    },
]