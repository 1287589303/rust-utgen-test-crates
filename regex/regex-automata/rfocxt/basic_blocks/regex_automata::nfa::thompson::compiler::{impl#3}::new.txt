[
    BasicBlockData {
        statements: [
            StorageLive(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:720:21: 720:41 (#0),
                    scope: scope[0],
                },
                kind: _1 = regex_syntax::ParserBuilder::new() -> [return: bb1, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:721:21: 721:38 (#0),
                    scope: scope[0],
                },
                kind: _2 = <nfa::thompson::compiler::Config as core::default::Default>::default() -> [return: bb2, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:722:35: 722:49 (#0),
                    scope: scope[0],
                },
                kind: _4 = nfa::thompson::builder::Builder::new() -> [return: bb3, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:722:22: 722:50 (#0),
                    scope: scope[0],
                },
                kind: _3 = core::cell::RefCell::<nfa::thompson::builder::Builder>::new(move _4) -> [return: bb4, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_5),
            StorageLive(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:723:38: 723:54 (#0),
                    scope: scope[0],
                },
                kind: _6 = nfa::thompson::compiler::Utf8State::new() -> [return: bb5, unwind: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:723:25: 723:55 (#0),
                    scope: scope[0],
                },
                kind: _5 = core::cell::RefCell::<nfa::thompson::compiler::Utf8State>::new(move _6) -> [return: bb6, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageLive(_7),
            StorageLive(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:724:38: 724:54 (#0),
                    scope: scope[0],
                },
                kind: _8 = nfa::thompson::range_trie::RangeTrie::new() -> [return: bb7, unwind: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:724:25: 724:55 (#0),
                    scope: scope[0],
                },
                kind: _7 = core::cell::RefCell::<nfa::thompson::range_trie::RangeTrie>::new(move _8) -> [return: bb8, unwind: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageLive(_9),
            StorageLive(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:725:39: 725:63 (#0),
                    scope: scope[0],
                },
                kind: _10 = nfa::thompson::map::Utf8SuffixMap::new(const 1000_usize) -> [return: bb9, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:725:26: 725:64 (#0),
                    scope: scope[0],
                },
                kind: _9 = core::cell::RefCell::<nfa::thompson::map::Utf8SuffixMap>::new(move _10) -> [return: bb10, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            _0 = nfa::thompson::compiler::Compiler { parser: move _1, config: move _2, builder: move _3, utf8_state: move _5, trie_state: move _7, utf8_suffix: move _9 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:726:9: 726:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb11, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:726:9: 726:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb12, unwind: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:726:9: 726:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb13, unwind: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:726:9: 726:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb14, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_2),
            StorageDead(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:727:6: 727:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:725:63: 725:64 (#0),
                    scope: scope[0],
                },
                kind: drop(_10) -> [return: bb16, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:726:9: 726:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb18, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:724:54: 724:55 (#0),
                    scope: scope[0],
                },
                kind: drop(_8) -> [return: bb18, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:726:9: 726:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb20, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:723:54: 723:55 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb20, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:726:9: 726:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb22, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:722:49: 722:50 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb22, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:718:5: 727:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::compiler::Compiler,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:718:21: 718:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: regex_syntax::ParserBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:720:21: 720:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: nfa::thompson::compiler::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:721:21: 721:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::cell::RefCell<nfa::thompson::builder::Builder>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:722:22: 722:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:719:9: 726:10 (#0),
                },
            ),
        ),
        ty: nfa::thompson::builder::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:722:35: 722:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::cell::RefCell<nfa::thompson::compiler::Utf8State>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:723:25: 723:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:719:9: 726:10 (#0),
                },
            ),
        ),
        ty: nfa::thompson::compiler::Utf8State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:723:38: 723:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::cell::RefCell<nfa::thompson::range_trie::RangeTrie>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:724:25: 724:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:719:9: 726:10 (#0),
                },
            ),
        ),
        ty: nfa::thompson::range_trie::RangeTrie,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:724:38: 724:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::cell::RefCell<nfa::thompson::map::Utf8SuffixMap>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:725:26: 725:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:719:9: 726:10 (#0),
                },
            ),
        ),
        ty: nfa::thompson::map::Utf8SuffixMap,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:725:39: 725:63 (#0),
            scope: scope[0],
        },
    },
]