[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/automaton.rs:285:22: 285:62 (#0),
                    scope: scope[0],
                },
                kind: _3 = util::start::Config::from_input_forward(move _4) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &(*_1),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &_3,
            _7 = &(*_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/automaton.rs:286:9: 286:34 (#0),
                    scope: scope[1],
                },
                kind: _5 = <Self as dfa::automaton::Automaton>::start_state(move _6, move _7) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_6),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &(*_2),
            _9 = {closure@regex-automata/src/dfa/automaton.rs:286:43: 286:48} { input: move _10 },
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/automaton.rs:286:9: 297:11 (#0),
                    scope: scope[1],
                },
                kind: _0 = core::result::Result::<util::primitives::StateID, dfa::automaton::StartError>::map_err::<util::search::MatchError, {closure@regex-automata/src/dfa/automaton.rs:286:43: 286:48}>(move _5, move _9) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_5),
            StorageDead(_3),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/automaton.rs:298:6: 298:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/automaton.rs:281:5: 298:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<util::primitives::StateID, util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/automaton.rs:284:10: 284:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/automaton.rs:282:9: 282:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/automaton.rs:283:16: 283:26 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/automaton.rs:283:9: 283:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/automaton.rs:283:9: 283:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/automaton.rs:283:9: 283:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/automaton.rs:285:22: 285:62 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/automaton.rs:285:13: 285:19 (#0),
                    },
                ),
            ),
        ),
        ty: util::start::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/automaton.rs:285:13: 285:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/automaton.rs:285:56: 285:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/automaton.rs:286:9: 297:11 (#0),
                },
            ),
        ),
        ty: core::result::Result<util::primitives::StateID, dfa::automaton::StartError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/automaton.rs:286:9: 286:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/automaton.rs:286:9: 297:11 (#0),
                },
            ),
        ),
        ty: &'{erased} Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/automaton.rs:286:9: 286:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/automaton.rs:286:9: 297:11 (#0),
                },
            ),
        ),
        ty: &'{erased} util::start::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/automaton.rs:286:26: 286:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/automaton.rs:286:9: 297:11 (#0),
                },
            ),
        ),
        ty: &'{erased} util::start::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/automaton.rs:286:26: 286:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/automaton.rs:286:9: 297:11 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:955 ~ regex_automata[00dd]::dfa::automaton::Automaton::start_state_forward::{closure#0}),
            [
                Self/#0,
                i32,
                Binder { value: extern "RustCall" fn((dfa::automaton::StartError,)) -> util::search::MatchError, bound_vars: [] },
                (&'{erased} util::search::Input<'{erased}>,),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/automaton.rs:286:43: 297:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/automaton.rs:286:9: 297:11 (#0),
                },
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/automaton.rs:286:43: 297:10 (#0),
            scope: scope[0],
        },
    },
]