[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &((*_1).0: dfa::onepass::DFA),
            _3 = &(*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:738:28: 738:52 (#0),
                    scope: scope[0],
                },
                kind: _2 = dfa::remapper::Remapper::new::<dfa::onepass::DFA>(move _3) -> [return: bb1, unwind: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            FakeRead(ForLet(None), _2),
            StorageDead(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &((*_1).0: dfa::onepass::DFA),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:739:29: 739:53 (#0),
                    scope: scope[1],
                },
                kind: _5 = dfa::onepass::DFA::last_state_id(move _6) -> [return: bb2, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            FakeRead(ForLet(None), _5),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &((*_1).0: dfa::onepass::DFA),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:740:22: 740:42 (#0),
                    scope: scope[2],
                },
                kind: _11 = dfa::onepass::DFA::state_len(move _12) -> [return: bb3, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            _10 = core::ops::Range::<usize> { start: const 0_usize, end: move _11 },
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#0),
                    scope: scope[2],
                },
                kind: _9 = <core::ops::Range<usize> as core::iter::Iterator>::rev(move _10) -> [return: bb4, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#2496),
                    scope: scope[2],
                },
                kind: _8 = <core::iter::Rev<core::ops::Range<usize>> as core::iter::IntoIterator>::into_iter(move _9) -> [return: bb5, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            PlaceMention(_8),
            StorageLive(_13),
            _13 = move _8,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:740:9: 752:10 (#2495),
                    scope: scope[3],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:740:9: 752:10 (#2495),
                    scope: scope[3],
                },
                kind: falseUnwind -> [real: bb7, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            _18 = &mut _13,
            _17 = &mut (*_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#2496),
                    scope: scope[3],
                },
                kind: _16 = <core::iter::Rev<core::ops::Range<usize>> as core::iter::Iterator>::next(move _17) -> [return: bb8, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            PlaceMention(_16),
            _19 = discriminant(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#2496),
                    scope: scope[3],
                },
                kind: switchInt(move _19) -> [0: bb10, 1: bb11, otherwise: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#2496),
                    scope: scope[3],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:740:9: 752:10 (#2495),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb12, imaginary: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_21),
            _21 = ((_16 as Some).0: usize),
            StorageLive(_22),
            StorageLive(_23),
            _23 = _21,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:741:22: 741:38 (#0),
                    scope: scope[4],
                },
                kind: _22 = util::primitives::StateID::must(move _23) -> [return: bb13, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = const (),
            StorageDead(_18),
            StorageDead(_16),
            StorageDead(_15),
            StorageDead(_13),
            StorageDead(_8),
            StorageDead(_7),
            StorageLive(_46),
            StorageLive(_47),
            _47 = move _2,
            StorageLive(_48),
            StorageLive(_49),
            _49 = &mut ((*_1).0: dfa::onepass::DFA),
            _48 = &mut (*_49),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:753:9: 753:38 (#0),
                    scope: scope[2],
                },
                kind: _46 = dfa::remapper::Remapper::remap::<dfa::onepass::DFA>(move _47, move _48) -> [return: bb22, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
            FakeRead(ForLet(None), _22),
            StorageLive(_24),
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            _28 = &((*_1).0: dfa::onepass::DFA),
            StorageLive(_29),
            _29 = _22,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:743:17: 743:46 (#0),
                    scope: scope[5],
                },
                kind: _27 = dfa::onepass::DFA::pattern_epsilons(move _28, move _29) -> [return: bb14, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
            StorageDead(_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:743:17: 743:59 (#0),
                    scope: scope[5],
                },
                kind: _26 = dfa::onepass::PatternEpsilons::pattern_id(move _27) -> [return: bb15, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _25 = &_26,
            StorageDead(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:743:17: 743:69 (#0),
                    scope: scope[5],
                },
                kind: _24 = core::option::Option::<util::primitives::PatternID>::is_some(move _25) -> [return: bb16, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            FakeRead(ForLet(None), _24),
            StorageDead(_26),
            StorageLive(_30),
            StorageLive(_31),
            _31 = _24,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:744:17: 744:25 (#0),
                    scope: scope[6],
                },
                kind: switchInt(move _31) -> [0: bb21, otherwise: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _30 = const (),
            StorageDead(_31),
            StorageDead(_30),
            StorageLive(_33),
            StorageLive(_34),
            _34 = &mut _2,
            StorageLive(_35),
            StorageLive(_36),
            _36 = &mut ((*_1).0: dfa::onepass::DFA),
            _35 = &mut (*_36),
            StorageLive(_37),
            _37 = _5,
            StorageLive(_38),
            _38 = _22,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:747:13: 747:56 (#0),
                    scope: scope[6],
                },
                kind: _33 = dfa::remapper::Remapper::swap::<dfa::onepass::DFA>(move _34, move _35, move _37, move _38) -> [return: bb18, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            StorageDead(_37),
            StorageDead(_35),
            StorageDead(_34),
            StorageDead(_36),
            StorageDead(_33),
            StorageLive(_39),
            _39 = _5,
            (((*_1).0: dfa::onepass::DFA).4: util::primitives::StateID) = move _39,
            StorageDead(_39),
            StorageLive(_40),
            StorageLive(_41),
            StorageLive(_42),
            _42 = &((*_1).0: dfa::onepass::DFA),
            StorageLive(_43),
            _43 = _5,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:749:25: 749:58 (#0),
                    scope: scope[6],
                },
                kind: _41 = dfa::onepass::DFA::prev_state_id(move _42, move _43) -> [return: bb19, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
            StorageDead(_42),
            StorageLive(_44),
            StorageLive(_45),
            _45 = const "match states should be a proper subset of all states",
            _44 = &(*_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:749:25: 751:14 (#0),
                    scope: scope[6],
                },
                kind: _40 = core::option::Option::<util::primitives::StateID>::expect(move _41, move _44) -> [return: bb20, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
            StorageDead(_41),
            _5 = move _40,
            StorageDead(_40),
            StorageDead(_45),
            _15 = const (),
            StorageDead(_24),
            StorageDead(_22),
            StorageDead(_21),
            StorageDead(_18),
            StorageDead(_16),
            StorageDead(_15),
            _14 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:740:9: 752:10 (#2495),
                    scope: scope[3],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            StorageDead(_30),
            StorageDead(_24),
            StorageDead(_22),
            StorageDead(_21),
            StorageDead(_18),
            StorageDead(_16),
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[3],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_48),
            StorageDead(_47),
            StorageDead(_49),
            StorageDead(_46),
            _0 = const (),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:754:5: 754:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb23, unwind: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:754:6: 754:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:753:37: 753:38 (#0),
                    scope: scope[2],
                },
                kind: drop(_47) -> [return: bb25, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:754:5: 754:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb26, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:737:5: 754:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:737:33: 737:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:737:23: 737:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/onepass.rs:738:28: 738:52 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:738:13: 738:25 (#0),
                    },
                ),
            ),
        ),
        ty: dfa::remapper::Remapper,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:738:13: 738:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} dfa::onepass::DFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:738:42: 738:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} dfa::onepass::DFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:738:42: 738:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/onepass.rs:739:29: 739:53 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:739:13: 739:26 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:739:13: 739:26 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} dfa::onepass::DFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:739:29: 739:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:740:9: 752:10 (#2495),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Rev<core::ops::Range<usize>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#2496),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Rev<core::ops::Range<usize>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:740:18: 740:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:740:22: 740:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} dfa::onepass::DFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:740:22: 740:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _8,
                                ),
                                regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#2496),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#2496),
                    },
                ),
            ),
        ),
        ty: core::iter::Rev<core::ops::Range<usize>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#2496),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:737:5: 754:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#2496),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#2496),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Rev<core::ops::Range<usize>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#2496),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Rev<core::ops::Range<usize>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#2496),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:740:9: 752:10 (#2495),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:740:9: 752:10 (#2495),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _16,
                                ),
                                regex-automata/src/dfa/onepass.rs:740:18: 740:49 (#2496),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:740:13: 740:14 (#2497),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:740:13: 740:14 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/onepass.rs:741:22: 741:38 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:741:17: 741:19 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:741:17: 741:19 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:741:36: 741:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/onepass.rs:743:17: 743:69 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:742:17: 742:25 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:742:17: 742:25 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::option::Option<util::primitives::PatternID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:743:17: 743:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::PatternID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:743:17: 743:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::PatternEpsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:743:17: 743:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} dfa::onepass::DFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:743:17: 743:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:743:43: 743:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:744:13: 746:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:744:17: 744:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:744:26: 746:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:747:13: 747:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::remapper::Remapper,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:747:13: 747:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::DFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:747:27: 747:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::DFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:747:27: 747:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:747:42: 747:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:747:53: 747:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:748:37: 748:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:749:25: 751:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:749:25: 749:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} dfa::onepass::DFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:749:25: 749:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:749:48: 749:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:750:17: 750:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:750:17: 750:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:753:9: 753:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::remapper::Remapper,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:753:9: 753:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::DFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:753:24: 753:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::DFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:753:24: 753:37 (#0),
            scope: scope[0],
        },
    },
]