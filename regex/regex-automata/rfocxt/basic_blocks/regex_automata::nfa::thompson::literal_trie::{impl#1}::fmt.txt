[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &mut (*_2),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = [const "LiteralTrie(\n"],
            _9 = &_10,
            _8 = &(*_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1280),
                    scope: scope[0],
                },
                kind: _7 = core::fmt::Arguments::<'_>::new_const::<1>(move _8) -> [return: bb1, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1279),
                    scope: scope[0],
                },
                kind: _5 = core::fmt::Formatter::<'_>::write_fmt(move _6, move _7) -> [return: bb2, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:280:9: 280:37 (#4342),
                    scope: scope[0],
                },
                kind: _4 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _5) -> [return: bb3, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            PlaceMention(_4),
            _11 = discriminant(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:280:9: 280:37 (#4342),
                    scope: scope[0],
                },
                kind: switchInt(move _11) -> [0: bb6, 1: bb5, otherwise: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:280:9: 280:37 (#4342),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:280:36: 280:37 (#4343),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb7, imaginary: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_15),
            _15 = ((_4 as Continue).0: ()),
            _3 = _15,
            StorageDead(_15),
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_4),
            StorageDead(_3),
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            _22 = &((*_1).0: std::vec::Vec<nfa::thompson::literal_trie::State>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:47 (#0),
                    scope: scope[0],
                },
                kind: _21 = <std::vec::Vec<nfa::thompson::literal_trie::State> as core::ops::Deref>::deref(move _22) -> [return: bb9, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_12),
            _12 = ((_4 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_14),
            _14 = _12,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:280:9: 280:37 (#4342),
                    scope: scope[2],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _14) -> [return: bb8, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            StorageDead(_12),
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb42,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _20 = &(*_21),
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:47 (#0),
                    scope: scope[0],
                },
                kind: _19 = core::slice::<impl [nfa::thompson::literal_trie::State]>::iter(move _20) -> [return: bb10, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#0),
                    scope: scope[0],
                },
                kind: _18 = <core::slice::Iter<'_, nfa::thompson::literal_trie::State> as util::primitives::IteratorIndexExt>::with_state_ids(move _19) -> [return: bb11, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#4345),
                    scope: scope[0],
                },
                kind: _17 = <util::primitives::WithStateIDIter<core::slice::Iter<'_, nfa::thompson::literal_trie::State>> as core::iter::IntoIterator>::into_iter(move _18) -> [return: bb12, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            PlaceMention(_17),
            StorageLive(_23),
            _23 = move _17,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:281:9: 283:10 (#4344),
                    scope: scope[5],
                },
                kind: goto -> bb13,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:281:9: 283:10 (#4344),
                    scope: scope[5],
                },
                kind: falseUnwind -> [real: bb14, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            _28 = &mut _23,
            _27 = &mut (*_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#4345),
                    scope: scope[5],
                },
                kind: _26 = <util::primitives::WithStateIDIter<core::slice::Iter<'_, nfa::thompson::literal_trie::State>> as core::iter::Iterator>::next(move _27) -> [return: bb15, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            PlaceMention(_26),
            _29 = discriminant(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#4345),
                    scope: scope[5],
                },
                kind: switchInt(move _29) -> [0: bb17, 1: bb18, otherwise: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#4345),
                    scope: scope[5],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:281:9: 283:10 (#4344),
                    scope: scope[5],
                },
                kind: falseEdge -> [real: bb19, imaginary: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_31),
            _31 = (((_26 as Some).0: (util::primitives::StateID, &nfa::thompson::literal_trie::State)).0: util::primitives::StateID),
            StorageLive(_32),
            _32 = (((_26 as Some).0: (util::primitives::StateID, &nfa::thompson::literal_trie::State)).1: &nfa::thompson::literal_trie::State),
            StorageLive(_33),
            StorageLive(_34),
            StorageLive(_35),
            StorageLive(_36),
            _36 = &mut (*_2),
            StorageLive(_37),
            StorageLive(_38),
            StorageLive(_39),
            StorageLive(_40),
            StorageLive(_41),
            _41 = [const "", const ": ", const "\n"],
            _40 = &_41,
            _39 = &(*_40),
            _38 = move _39 as &[&str] (PointerCoercion(Unsize)),
            StorageDead(_39),
            StorageLive(_42),
            StorageLive(_43),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            StorageLive(_47),
            StorageLive(_48),
            StorageLive(_49),
            StorageLive(_50),
            _50 = &_31,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:282:41: 282:55 (#0),
                    scope: scope[6],
                },
                kind: _49 = util::primitives::StateID::as_usize(move _50) -> [return: bb20, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _16 = const (),
            StorageDead(_28),
            StorageDead(_26),
            StorageDead(_25),
            StorageDead(_23),
            StorageDead(_21),
            StorageDead(_17),
            StorageDead(_16),
            StorageLive(_72),
            StorageLive(_73),
            StorageLive(_74),
            StorageLive(_75),
            _75 = &mut (*_2),
            StorageLive(_76),
            StorageLive(_77),
            StorageLive(_78),
            StorageLive(_79),
            _79 = [const ")\n"],
            _78 = &_79,
            _77 = &(*_78),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1284),
                    scope: scope[0],
                },
                kind: _76 = core::fmt::Arguments::<'_>::new_const::<1>(move _77) -> [return: bb34, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_50),
            _48 = &_49,
            _47 = &(*_48),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:282:26: 282:32 (#1282),
                    scope: scope[6],
                },
                kind: _46 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(move _47) -> [return: bb21, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_47),
            StorageLive(_51),
            StorageLive(_52),
            StorageLive(_53),
            _53 = &_32,
            _52 = &(*_53),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:282:34: 282:38 (#1282),
                    scope: scope[6],
                },
                kind: _51 = core::fmt::rt::Argument::<'_>::new_debug::<&nfa::thompson::literal_trie::State>(move _52) -> [return: bb22, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_52),
            _45 = [move _46, move _51],
            StorageDead(_51),
            StorageDead(_46),
            _44 = &_45,
            _43 = &(*_44),
            _42 = move _43 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)),
            StorageDead(_43),
            StorageLive(_54),
            StorageLive(_55),
            StorageLive(_56),
            StorageLive(_57),
            StorageLive(_58),
            StorageLive(_59),
            _59 = core::fmt::rt::Alignment::Unknown,
            StorageLive(_60),
            _60 = core::fmt::rt::Count::Implied,
            StorageLive(_61),
            _61 = core::fmt::rt::Count::Is(const 6_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
                    scope: scope[6],
                },
                kind: _58 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _59, const 8_u32, move _60, move _61) -> [return: bb23, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_61),
            StorageDead(_60),
            StorageDead(_59),
            StorageLive(_62),
            StorageLive(_63),
            _63 = core::fmt::rt::Alignment::Unknown,
            StorageLive(_64),
            _64 = core::fmt::rt::Count::Implied,
            StorageLive(_65),
            _65 = core::fmt::rt::Count::Implied,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
                    scope: scope[6],
                },
                kind: _62 = core::fmt::rt::Placeholder::new(const 1_usize, const ' ', move _63, const 0_u32, move _64, move _65) -> [return: bb24, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_65),
            StorageDead(_64),
            StorageDead(_63),
            _57 = [move _58, move _62],
            StorageDead(_62),
            StorageDead(_58),
            _56 = &_57,
            _55 = &(*_56),
            _54 = move _55 as &[core::fmt::rt::Placeholder] (PointerCoercion(Unsize)),
            StorageDead(_55),
            StorageLive(_66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
                    scope: scope[6],
                },
                kind: _66 = core::fmt::rt::UnsafeArg::new() -> [return: bb25, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
                    scope: scope[6],
                },
                kind: _37 = core::fmt::Arguments::<'_>::new_v1_formatted(move _38, move _42, move _54, move _66) -> [return: bb26, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_66),
            StorageDead(_54),
            StorageDead(_42),
            StorageDead(_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1281),
                    scope: scope[6],
                },
                kind: _35 = core::fmt::Formatter::<'_>::write_fmt(move _36, move _37) -> [return: bb27, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
            StorageDead(_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:282:13: 282:64 (#4347),
                    scope: scope[6],
                },
                kind: _34 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _35) -> [return: bb28, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_35),
            PlaceMention(_34),
            _67 = discriminant(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:282:13: 282:64 (#4347),
                    scope: scope[6],
                },
                kind: switchInt(move _67) -> [0: bb31, 1: bb30, otherwise: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:282:13: 282:64 (#4347),
                    scope: scope[6],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:282:63: 282:64 (#4348),
                    scope: scope[6],
                },
                kind: falseEdge -> [real: bb32, imaginary: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_71),
            _71 = ((_34 as Continue).0: ()),
            _33 = _71,
            StorageDead(_71),
            StorageDead(_57),
            StorageDead(_56),
            StorageDead(_53),
            StorageDead(_49),
            StorageDead(_48),
            StorageDead(_45),
            StorageDead(_44),
            StorageDead(_41),
            StorageDead(_40),
            StorageDead(_34),
            StorageDead(_33),
            _25 = const (),
            StorageDead(_32),
            StorageDead(_31),
            StorageDead(_28),
            StorageDead(_26),
            StorageDead(_25),
            _24 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:281:9: 283:10 (#4344),
                    scope: scope[5],
                },
                kind: goto -> bb13,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_68),
            _68 = ((_34 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_70),
            _70 = _68,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:282:13: 282:64 (#4347),
                    scope: scope[8],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _70) -> [return: bb33, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_70),
            StorageDead(_68),
            StorageDead(_57),
            StorageDead(_56),
            StorageDead(_53),
            StorageDead(_49),
            StorageDead(_48),
            StorageDead(_45),
            StorageDead(_44),
            StorageDead(_41),
            StorageDead(_40),
            StorageDead(_34),
            StorageDead(_33),
            StorageDead(_32),
            StorageDead(_31),
            StorageDead(_28),
            StorageDead(_26),
            StorageDead(_25),
            StorageDead(_23),
            StorageDead(_21),
            StorageDead(_17),
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb42,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_77),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1283),
                    scope: scope[0],
                },
                kind: _74 = core::fmt::Formatter::<'_>::write_fmt(move _75, move _76) -> [return: bb35, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_76),
            StorageDead(_75),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:284:9: 284:26 (#4349),
                    scope: scope[0],
                },
                kind: _73 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _74) -> [return: bb36, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_74),
            PlaceMention(_73),
            _80 = discriminant(_73),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:284:9: 284:26 (#4349),
                    scope: scope[0],
                },
                kind: switchInt(move _80) -> [0: bb39, 1: bb38, otherwise: bb37],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _73),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:284:9: 284:26 (#4349),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:284:25: 284:26 (#4350),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb40, imaginary: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_84),
            _84 = ((_73 as Continue).0: ()),
            _72 = _84,
            StorageDead(_84),
            StorageDead(_79),
            StorageDead(_78),
            StorageDead(_73),
            StorageDead(_72),
            StorageLive(_85),
            _85 = (),
            _0 = core::result::Result::<(), core::fmt::Error>::Ok(move _85),
            StorageDead(_85),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:286:6: 286:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb42,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_81),
            _81 = ((_73 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_83),
            _83 = _81,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:284:9: 284:26 (#4349),
                    scope: scope[12],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _83) -> [return: bb41, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_83),
            StorageDead(_81),
            StorageDead(_79),
            StorageDead(_78),
            StorageDead(_73),
            StorageDead(_72),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb42,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:286:6: 286:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/literal_trie.rs:279:5: 286:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:279:52: 279:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::literal_trie::LiteralTrie,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:279:12: 279:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/literal_trie.rs:279:22: 279:47 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/literal_trie.rs:279:19: 279:20 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/literal_trie.rs:279:19: 279:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:279:19: 279:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:280:9: 280:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:280:9: 280:37 (#4342),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1279),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:280:18: 280:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1280),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:280:21: 280:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:280:21: 280:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:280:21: 280:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:280:36: 280:37 (#4343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _4,
                                ),
                                regex-automata/src/nfa/thompson/literal_trie.rs:280:9: 280:37 (#4342),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/literal_trie.rs:280:36: 280:37 (#4343),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:280:36: 280:37 (#4343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:280:36: 280:37 (#4343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:280:36: 280:37 (#4343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _4,
                                ),
                                regex-automata/src/nfa/thompson/literal_trie.rs:280:9: 280:37 (#4342),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/literal_trie.rs:280:9: 280:37 (#4342),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:280:9: 280:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:9: 283:10 (#4344),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::literal_trie::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#4345),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::literal_trie::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, nfa::thompson::literal_trie::State>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [nfa::thompson::literal_trie::State],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [nfa::thompson::literal_trie::State],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<nfa::thompson::literal_trie::State, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _17,
                                ),
                                regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#4345),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#4345),
                    },
                ),
            ),
        ),
        ty: util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::literal_trie::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#4345),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:279:5: 286:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#4345),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<(util::primitives::StateID, &'{erased} nfa::thompson::literal_trie::State)>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#4345),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::literal_trie::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#4345),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::literal_trie::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#4345),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:9: 283:10 (#4344),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:9: 283:10 (#4344),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _26,
                                ),
                                regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#4345),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/literal_trie.rs:281:13: 281:25 (#4346),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:14: 281:17 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _26,
                                ),
                                regex-automata/src/nfa/thompson/literal_trie.rs:281:29: 281:64 (#4345),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/literal_trie.rs:281:13: 281:25 (#4346),
                    },
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::literal_trie::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:281:19: 281:24 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:13: 282:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:13: 282:64 (#4347),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1281),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:22: 282:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:25: 282:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:25: 282:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:25: 282:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:25: 282:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:26: 282:32 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:41: 282:55 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:41: 282:55 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:41: 282:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:41: 282:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:34: 282:38 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} nfa::thompson::literal_trie::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:57: 282:62 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} nfa::thompson::literal_trie::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:57: 282:62 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Placeholder],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Placeholder; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Placeholder; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [core::fmt::rt::Placeholder; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Placeholder,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Alignment,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Count,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Count,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Placeholder,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Alignment,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Count,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Count,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::UnsafeArg,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1282),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:63: 282:64 (#4348),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _34,
                                ),
                                regex-automata/src/nfa/thompson/literal_trie.rs:282:13: 282:64 (#4347),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/literal_trie.rs:282:63: 282:64 (#4348),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:63: 282:64 (#4348),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:63: 282:64 (#4348),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:63: 282:64 (#4348),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _34,
                                ),
                                regex-automata/src/nfa/thompson/literal_trie.rs:282:13: 282:64 (#4347),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/literal_trie.rs:282:13: 282:64 (#4347),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:282:13: 282:64 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:284:9: 284:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:284:9: 284:26 (#4349),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1283),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:284:18: 284:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1284),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:284:21: 284:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:284:21: 284:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:284:21: 284:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:284:25: 284:26 (#4350),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _73,
                                ),
                                regex-automata/src/nfa/thompson/literal_trie.rs:284:9: 284:26 (#4349),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/literal_trie.rs:284:25: 284:26 (#4350),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:284:25: 284:26 (#4350),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:284:25: 284:26 (#4350),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:284:25: 284:26 (#4350),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _73,
                                ),
                                regex-automata/src/nfa/thompson/literal_trie.rs:284:9: 284:26 (#4349),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/literal_trie.rs:284:9: 284:26 (#4349),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:284:9: 284:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/literal_trie.rs:285:12: 285:14 (#0),
            scope: scope[0],
        },
    },
]