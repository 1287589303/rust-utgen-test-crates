[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            _5 = (_3.0: usize),
            StorageLive(_6),
            _6 = (_3.1: usize),
            _4 = aho_corasick::Span { start: move _5, end: move _6 },
            StorageDead(_6),
            StorageDead(_5),
            FakeRead(ForLet(None), _4),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &((*_1).0: aho_corasick::packed::Searcher),
            StorageLive(_9),
            _9 = _2,
            StorageLive(_10),
            _10 = _4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/teddy.rs:93:13: 94:44 (#0),
                    scope: scope[1],
                },
                kind: _7 = aho_corasick::packed::Searcher::find_in::<&[u8]>(move _8, move _9, move _10) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_8),
            StorageLive(_11),
            _11 = {closure@regex-automata/src/util/prefilter/teddy.rs:95:22: 95:25},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/teddy.rs:93:13: 95:66 (#0),
                    scope: scope[1],
                },
                kind: _0 = core::option::Option::<aho_corasick::Match>::map::<util::search::Span, {closure@regex-automata/src/util/prefilter/teddy.rs:95:22: 95:25}>(move _7, move _11) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_7),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/teddy.rs:97:6: 97:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/teddy.rs:84:5: 97:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::Span>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/teddy.rs:84:52: 84:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} util::prefilter::teddy::Teddy,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/teddy.rs:84:13: 84:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/prefilter/teddy.rs:84:30: 84:35 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/teddy.rs:84:20: 84:28 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/teddy.rs:84:20: 84:28 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/teddy.rs:84:20: 84:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/prefilter/teddy.rs:84:43: 84:47 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/teddy.rs:84:37: 84:41 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/teddy.rs:84:37: 84:41 (#0),
                    },
                ),
            ),
        ),
        ty: util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/teddy.rs:84:37: 84:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/teddy.rs:92:17: 92:72 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/teddy.rs:91:17: 91:24 (#0),
                    },
                ),
            ),
        ),
        ty: aho_corasick::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/teddy.rs:91:17: 91:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/teddy.rs:92:45: 92:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/teddy.rs:92:62: 92:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/teddy.rs:93:13: 95:66 (#0),
                },
            ),
        ),
        ty: core::option::Option<aho_corasick::Match>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/teddy.rs:93:13: 94:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/teddy.rs:93:13: 95:66 (#0),
                },
            ),
        ),
        ty: &'{erased} aho_corasick::packed::Searcher,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/teddy.rs:93:13: 93:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/teddy.rs:93:13: 95:66 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/teddy.rs:94:26: 94:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/teddy.rs:93:13: 95:66 (#0),
                },
            ),
        ),
        ty: aho_corasick::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/teddy.rs:94:36: 94:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/teddy.rs:93:13: 95:66 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:3787 ~ regex_automata[00dd]::util::prefilter::teddy::{impl#1}::find::{closure#0}),
            [
                i32,
                Binder { value: extern "RustCall" fn((aho_corasick::Match,)) -> util::search::Span, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/teddy.rs:95:22: 95:65 (#0),
            scope: scope[0],
        },
    },
]