[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &((*_1).5: core::option::Option<util::look::LookMatcher>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:503:9: 503:34 (#0),
                    scope: scope[0],
                },
                kind: _2 = <core::option::Option<util::look::LookMatcher> as core::clone::Clone>::clone(move _3) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageLive(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:503:45: 503:67 (#0),
                    scope: scope[0],
                },
                kind: _4 = <util::look::LookMatcher as core::default::Default>::default() -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:503:9: 503:68 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::option::Option::<util::look::LookMatcher>::unwrap_or(move _2, move _4) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:504:6: 504:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:502:5: 504:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::look::LookMatcher,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:502:39: 502:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::compiler::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:502:29: 502:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:503:9: 503:68 (#0),
                },
            ),
        ),
        ty: core::option::Option<util::look::LookMatcher>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:503:9: 503:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:503:9: 503:68 (#0),
                },
            ),
        ),
        ty: &'{erased} core::option::Option<util::look::LookMatcher>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:503:9: 503:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:503:9: 503:68 (#0),
                },
            ),
        ),
        ty: util::look::LookMatcher,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:503:45: 503:67 (#0),
            scope: scope[0],
        },
    },
]