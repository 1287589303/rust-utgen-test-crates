[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:4631:9: 4631:22 (#0),
                    scope: scope[0],
                },
                kind: _4 = dfa::dense::MatchStates::<T>::slices(move _5) -> [return: bb1, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = _2,
            _9 = MulWithOverflow(_8, const 2_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:4631:23: 4631:38 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_9.1: bool), "attempt to compute `{} * {}`, which would overflow", move _8, const 2_usize) -> [success: bb2, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = move (_9.0: usize),
            StorageDead(_8),
            _10 = AddWithOverflow(_7, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:4631:23: 4631:42 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", move _7, const 1_usize) -> [success: bb3, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _6 = move (_10.0: usize),
            StorageDead(_7),
            _11 = Len((*_4)),
            _12 = Lt(_6, _11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:4631:9: 4631:43 (#0),
                    scope: scope[0],
                },
                kind: assert(move _12, "index out of bounds: the length is {} but the index is {}", move _11, _6) -> [success: bb4, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = &(*_4)[_6],
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:4631:9: 4631:54 (#0),
                    scope: scope[0],
                },
                kind: _0 = util::primitives::PatternID::as_usize(move _3) -> [return: bb5, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_6),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:4632:6: 4632:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:4630:5: 4632:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:4630:50: 4630:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} dfa::dense::MatchStates<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:4630:20: 4630:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/dense.rs:4630:40: 4630:45 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/dense.rs:4630:27: 4630:38 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/dense.rs:4630:27: 4630:38 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:4630:27: 4630:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:4631:9: 4631:54 (#0),
                },
            ),
        ),
        ty: &'{erased} util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:4631:9: 4631:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:4631:9: 4631:54 (#0),
                },
            ),
        ),
        ty: &'{erased} [util::primitives::PatternID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:4631:9: 4631:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:4631:9: 4631:54 (#0),
                },
            ),
        ),
        ty: &'{erased} dfa::dense::MatchStates<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:4631:9: 4631:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:4631:9: 4631:54 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:4631:23: 4631:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:4631:9: 4631:54 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:4631:23: 4631:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/dense.rs:4631:9: 4631:54 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:4631:23: 4631:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:4631:23: 4631:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:4631:23: 4631:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:4631:9: 4631:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:4631:9: 4631:43 (#0),
            scope: scope[0],
        },
    },
]