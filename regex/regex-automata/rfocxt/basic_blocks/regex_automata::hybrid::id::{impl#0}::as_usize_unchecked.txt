[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = ((*_1).0: u32),
            _0 = move _2 as usize (IntToInt),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/hybrid/id.rs:225:6: 225:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/hybrid/id.rs:222:54: 222:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} hybrid::id::LazyStateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/hybrid/id.rs:222:44: 222:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/hybrid/id.rs:224:9: 224:24 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/hybrid/id.rs:224:9: 224:15 (#0),
            scope: scope[0],
        },
    },
]