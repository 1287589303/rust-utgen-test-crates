[
    BasicBlockData {
        statements: [
            StorageLive(_1),
            _2 = Lt(const dfa::onepass::PatternEpsilons::PATTERN_ID_SHIFT, const 64_u64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:2693:13: 2694:53 (#0),
                    scope: scope[0],
                },
                kind: assert(move _2, "attempt to shift left by `{}`, which would overflow", const dfa::onepass::PatternEpsilons::PATTERN_ID_SHIFT) -> [success: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _1 = Shl(const dfa::onepass::PatternEpsilons::PATTERN_ID_NONE, const dfa::onepass::PatternEpsilons::PATTERN_ID_SHIFT),
            _0 = dfa::onepass::PatternEpsilons(move _1),
            StorageDead(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:2696:6: 2696:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:2691:5: 2696:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::PatternEpsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:2691:19: 2691:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:2693:13: 2694:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:2693:13: 2694:53 (#0),
            scope: scope[0],
        },
    },
]