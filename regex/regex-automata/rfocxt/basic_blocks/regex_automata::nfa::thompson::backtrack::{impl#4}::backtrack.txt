[
    BasicBlockData {
        statements: [
            StorageLive(_7),
            StorageLive(_8),
            _8 = &mut ((*_2).0: std::vec::Vec<nfa::thompson::backtrack::Frame>),
            StorageLive(_9),
            StorageLive(_10),
            _10 = _5,
            StorageLive(_11),
            _11 = _4,
            _9 = nfa::thompson::backtrack::Frame::Step { sid: move _10, at: move _11 },
            StorageDead(_11),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1433:9: 1433:60 (#0),
                    scope: scope[0],
                },
                kind: _7 = std::vec::Vec::<nfa::thompson::backtrack::Frame>::push(move _8, move _9) -> [return: bb1, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
            StorageDead(_7),
            StorageLive(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1434:9: 1445:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb2,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1434:9: 1445:10 (#0),
                    scope: scope[0],
                },
                kind: falseUnwind -> [real: bb3, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_14),
            StorageLive(_15),
            _15 = &mut ((*_2).0: std::vec::Vec<nfa::thompson::backtrack::Frame>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1434:33: 1434:50 (#0),
                    scope: scope[1],
                },
                kind: _14 = std::vec::Vec::<nfa::thompson::backtrack::Frame>::pop(move _15) -> [return: bb4, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            PlaceMention(_14),
            _16 = discriminant(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1434:19: 1434:30 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _16) -> [1: bb5, otherwise: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1434:19: 1434:30 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb6, imaginary: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_17),
            _17 = move ((_14 as Some).0: nfa::thompson::backtrack::Frame),
            PlaceMention(_17),
            _18 = discriminant(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1435:13: 1435:24 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _18) -> [0: bb8, 1: bb9, otherwise: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1435:19: 1435:24 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1436:17: 1436:40 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb10, imaginary: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_32),
            _32 = ((_17 as RestoreCapture).0: util::primitives::SmallIndex),
            StorageLive(_33),
            _33 = ((_17 as RestoreCapture).1: core::option::Option<util::primitives::NonMaxUsize>),
            StorageLive(_34),
            _34 = _33,
            StorageLive(_35),
            StorageLive(_36),
            _36 = &mut (*_6),
            StorageLive(_37),
            _37 = _32,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1442:26: 1442:32 (#0),
                    scope: scope[4],
                },
                kind: _35 = <[core::option::Option<util::primitives::NonMaxUsize>] as core::ops::IndexMut<util::primitives::SmallIndex>>::index_mut(move _36, move _37) -> [return: bb15, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_19),
            _19 = ((_17 as Step).0: util::primitives::StateID),
            StorageLive(_20),
            _20 = ((_17 as Step).1: usize),
            StorageLive(_21),
            StorageLive(_22),
            _22 = &(*_1),
            StorageLive(_23),
            _23 = &mut (*_2),
            StorageLive(_24),
            _24 = &(*_3),
            StorageLive(_25),
            _25 = _19,
            StorageLive(_26),
            _26 = _20,
            StorageLive(_27),
            _27 = &mut (*_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1437:39: 1437:78 (#0),
                    scope: scope[3],
                },
                kind: _21 = nfa::thompson::backtrack::BoundedBacktracker::step(move _22, move _23, move _24, move _25, move _26, move _27) -> [return: bb11, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            StorageDead(_26),
            StorageDead(_25),
            StorageDead(_24),
            StorageDead(_23),
            StorageDead(_22),
            PlaceMention(_21),
            _28 = discriminant(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1437:28: 1437:36 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _28) -> [1: bb12, otherwise: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1437:28: 1437:36 (#0),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb13, imaginary: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_29),
            _29 = ((_21 as Some).0: util::search::HalfMatch),
            StorageLive(_31),
            _31 = _29,
            _0 = core::option::Option::<util::search::HalfMatch>::Some(move _31),
            StorageDead(_31),
            StorageDead(_29),
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_19),
            StorageDead(_17),
            StorageDead(_14),
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1447:6: 1447:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb18,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _13 = const (),
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1440:17: 1440:18 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb16,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
            StorageDead(_36),
            (*_35) = move _34,
            StorageDead(_34),
            StorageDead(_35),
            _13 = const (),
            StorageDead(_33),
            StorageDead(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1443:17: 1443:18 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb16,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            StorageDead(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1434:9: 1445:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb2,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_39),
            _12 = const (),
            StorageDead(_39),
            StorageDead(_14),
            StorageDead(_12),
            _0 = core::option::Option::<util::search::HalfMatch>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1447:6: 1447:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb18,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1447:6: 1447:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1425:5: 1447:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1432:10: 1432:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::backtrack::BoundedBacktracker,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1426:9: 1426:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/backtrack.rs:1427:16: 1427:26 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1427:9: 1427:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1427:9: 1427:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut nfa::thompson::backtrack::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1427:9: 1427:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/backtrack.rs:1428:16: 1428:26 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1428:9: 1428:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1428:9: 1428:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1428:9: 1428:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/backtrack.rs:1429:13: 1429:18 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1429:9: 1429:11 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1429:9: 1429:11 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1429:9: 1429:11 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/backtrack.rs:1430:19: 1430:26 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1430:9: 1430:17 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1430:9: 1430:17 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1430:9: 1430:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/backtrack.rs:1431:16: 1431:42 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1431:9: 1431:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1431:9: 1431:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1431:9: 1431:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1433:9: 1433:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<nfa::thompson::backtrack::Frame, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1433:9: 1433:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::backtrack::Frame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1433:26: 1433:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1433:45: 1433:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1433:55: 1433:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1434:9: 1445:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1425:5: 1447:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1434:9: 1445:10 (#3998),
                },
            ),
        ),
        ty: core::option::Option<nfa::thompson::backtrack::Frame>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1434:33: 1434:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1434:9: 1445:10 (#3998),
                },
            ),
        ),
        ty: &'{erased} mut std::vec::Vec<nfa::thompson::backtrack::Frame, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1434:33: 1434:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1434:19: 1434:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _14,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1434:33: 1434:50 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1434:19: 1434:30 (#0),
                    },
                ),
            ),
        ),
        ty: nfa::thompson::backtrack::Frame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1434:24: 1434:29 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1436:17: 1436:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _17,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1435:19: 1435:24 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1436:17: 1436:40 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1436:31: 1436:34 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _17,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1435:19: 1435:24 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1436:17: 1436:40 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1436:36: 1436:38 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1437:21: 1439:22 (#0),
                },
            ),
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1437:39: 1437:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1437:21: 1439:22 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::backtrack::BoundedBacktracker,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1437:39: 1437:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1437:21: 1439:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut nfa::thompson::backtrack::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1437:49: 1437:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1437:21: 1439:22 (#0),
                },
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1437:56: 1437:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1437:21: 1439:22 (#0),
                },
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1437:63: 1437:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1437:21: 1439:22 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1437:68: 1437:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1437:21: 1439:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1437:72: 1437:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1437:28: 1437:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _21,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1437:39: 1437:78 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1437:28: 1437:36 (#0),
                    },
                ),
            ),
        ),
        ty: util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1437:33: 1437:35 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1437:21: 1439:22 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1437:79: 1439:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1438:37: 1438:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _17,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1435:19: 1435:24 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1441:17: 1441:55 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1441:41: 1441:45 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _17,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1435:19: 1435:24 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1441:17: 1441:55 (#0),
                    },
                ),
            ),
        ),
        ty: core::option::Option<util::primitives::NonMaxUsize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1441:47: 1441:53 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::NonMaxUsize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1442:35: 1442:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::option::Option<util::primitives::NonMaxUsize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1442:26: 1442:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1442:21: 1442:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1442:27: 1442:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1434:9: 1445:10 (#3998),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1434:9: 1445:10 (#3998),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1434:9: 1445:10 (#3998),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1434:9: 1445:10 (#3998),
            scope: scope[0],
        },
    },
]