[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            _13 = &mut (*_2),
            StorageLive(_14),
            StorageLive(_15),
            _15 = const "Minimizer",
            _14 = &(*_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/minimize.rs:53:9: 53:36 (#0),
                    scope: scope[0],
                },
                kind: _12 = core::fmt::Formatter::<'_>::debug_struct(move _13, move _14) -> [return: bb1, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _11 = &mut _12,
            StorageDead(_14),
            StorageDead(_13),
            StorageLive(_16),
            StorageLive(_17),
            _17 = const "dfa",
            _16 = &(*_17),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            _20 = &((*_1).0: &mut dfa::dense::DFA<std::vec::Vec<u32>>),
            _19 = &(*_20),
            _18 = move _19 as &dyn core::fmt::Debug (PointerCoercion(Unsize)),
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/minimize.rs:53:9: 54:37 (#0),
                    scope: scope[0],
                },
                kind: _10 = core::fmt::DebugStruct::<'_, '_>::field(move _11, move _16, move _18) -> [return: bb2, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _9 = &mut (*_10),
            StorageDead(_18),
            StorageDead(_16),
            StorageDead(_11),
            StorageLive(_21),
            StorageLive(_22),
            _22 = const "in_transitions",
            _21 = &(*_22),
            StorageLive(_23),
            StorageLive(_24),
            StorageLive(_25),
            _25 = &((*_1).1: std::vec::Vec<std::vec::Vec<std::vec::Vec<util::primitives::StateID>>>),
            _24 = &(*_25),
            _23 = move _24 as &dyn core::fmt::Debug (PointerCoercion(Unsize)),
            StorageDead(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/minimize.rs:53:9: 55:59 (#0),
                    scope: scope[0],
                },
                kind: _8 = core::fmt::DebugStruct::<'_, '_>::field(move _9, move _21, move _23) -> [return: bb3, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = &mut (*_8),
            StorageDead(_23),
            StorageDead(_21),
            StorageDead(_9),
            StorageLive(_26),
            StorageLive(_27),
            _27 = const "partitions",
            _26 = &(*_27),
            StorageLive(_28),
            StorageLive(_29),
            StorageLive(_30),
            _30 = &((*_1).2: std::vec::Vec<dfa::minimize::StateSet>),
            _29 = &(*_30),
            _28 = move _29 as &dyn core::fmt::Debug (PointerCoercion(Unsize)),
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/minimize.rs:53:9: 56:51 (#0),
                    scope: scope[0],
                },
                kind: _6 = core::fmt::DebugStruct::<'_, '_>::field(move _7, move _26, move _28) -> [return: bb4, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = &mut (*_6),
            StorageDead(_28),
            StorageDead(_26),
            StorageDead(_7),
            StorageLive(_31),
            StorageLive(_32),
            _32 = const "waiting",
            _31 = &(*_32),
            StorageLive(_33),
            StorageLive(_34),
            StorageLive(_35),
            _35 = &((*_1).3: std::vec::Vec<dfa::minimize::StateSet>),
            _34 = &(*_35),
            _33 = move _34 as &dyn core::fmt::Debug (PointerCoercion(Unsize)),
            StorageDead(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/minimize.rs:53:9: 57:45 (#0),
                    scope: scope[0],
                },
                kind: _4 = core::fmt::DebugStruct::<'_, '_>::field(move _5, move _31, move _33) -> [return: bb5, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = &mut (*_4),
            StorageDead(_33),
            StorageDead(_31),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::fmt::DebugStruct::<'_, '_>::finish(move _3) -> [return: bb6, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_35),
            StorageDead(_32),
            StorageDead(_30),
            StorageDead(_27),
            StorageDead(_25),
            StorageDead(_22),
            StorageDead(_20),
            StorageDead(_17),
            StorageDead(_15),
            StorageDead(_12),
            StorageDead(_10),
            StorageDead(_8),
            StorageDead(_6),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/minimize.rs:59:6: 59:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/minimize.rs:52:5: 59:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:52:50: 52:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} dfa::minimize::Minimizer<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:52:12: 52:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/minimize.rs:52:22: 52:45 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/minimize.rs:52:19: 52:20 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/minimize.rs:52:19: 52:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:52:19: 52:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:53:9: 57:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:53:9: 57:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:53:9: 56:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:53:9: 56:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:53:9: 55:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:53:9: 55:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:53:9: 54:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:53:9: 54:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:53:9: 53:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:53:9: 53:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:53:9: 53:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:53:24: 53:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:53:24: 53:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:54:20: 54:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:54:20: 54:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(core::fmt::Debug), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:54:27: 54:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} mut dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:54:27: 54:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} mut dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:54:27: 54:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:55:20: 55:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:55:20: 55:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(core::fmt::Debug), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:55:38: 55:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<std::vec::Vec<std::vec::Vec<util::primitives::StateID, std::alloc::Global>, std::alloc::Global>, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:55:38: 55:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<std::vec::Vec<std::vec::Vec<util::primitives::StateID, std::alloc::Global>, std::alloc::Global>, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:55:38: 55:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:56:20: 56:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:56:20: 56:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(core::fmt::Debug), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:56:34: 56:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<dfa::minimize::StateSet, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:56:34: 56:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<dfa::minimize::StateSet, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:56:34: 56:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:57:20: 57:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:57:20: 57:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(core::fmt::Debug), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:57:31: 57:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<dfa::minimize::StateSet, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:57:31: 57:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/minimize.rs:53:9: 58:22 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<dfa::minimize::StateSet, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/minimize.rs:57:31: 57:44 (#0),
            scope: scope[0],
        },
    },
]