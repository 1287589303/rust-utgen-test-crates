[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            _18 = &mut (*_2),
            StorageLive(_19),
            _19 = ((*_1).7: bool),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/syntax.rs:466:9: 467:35 (#0),
                    scope: scope[0],
                },
                kind: _17 = regex_syntax::hir::translate::TranslatorBuilder::unicode(move _18, move _19) -> [return: bb1, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _16 = &mut (*_17),
            StorageDead(_19),
            StorageDead(_18),
            StorageLive(_20),
            _20 = ((*_1).0: bool),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/syntax.rs:466:9: 468:53 (#0),
                    scope: scope[0],
                },
                kind: _15 = regex_syntax::hir::translate::TranslatorBuilder::case_insensitive(move _16, move _20) -> [return: bb2, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _14 = &mut (*_15),
            StorageDead(_20),
            StorageDead(_16),
            StorageLive(_21),
            _21 = ((*_1).1: bool),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/syntax.rs:466:9: 469:41 (#0),
                    scope: scope[0],
                },
                kind: _13 = regex_syntax::hir::translate::TranslatorBuilder::multi_line(move _14, move _21) -> [return: bb3, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _12 = &mut (*_13),
            StorageDead(_21),
            StorageDead(_14),
            StorageLive(_22),
            _22 = ((*_1).3: bool),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/syntax.rs:466:9: 470:29 (#0),
                    scope: scope[0],
                },
                kind: _11 = regex_syntax::hir::translate::TranslatorBuilder::crlf(move _12, move _22) -> [return: bb4, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _10 = &mut (*_11),
            StorageDead(_22),
            StorageDead(_12),
            StorageLive(_23),
            _23 = ((*_1).2: bool),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/syntax.rs:466:9: 471:61 (#0),
                    scope: scope[0],
                },
                kind: _9 = regex_syntax::hir::translate::TranslatorBuilder::dot_matches_new_line(move _10, move _23) -> [return: bb5, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _8 = &mut (*_9),
            StorageDead(_23),
            StorageDead(_10),
            StorageLive(_24),
            _24 = ((*_1).4: u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/syntax.rs:466:9: 472:51 (#0),
                    scope: scope[0],
                },
                kind: _7 = regex_syntax::hir::translate::TranslatorBuilder::line_terminator(move _8, move _24) -> [return: bb6, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _6 = &mut (*_7),
            StorageDead(_24),
            StorageDead(_8),
            StorageLive(_25),
            _25 = ((*_1).5: bool),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/syntax.rs:466:9: 473:41 (#0),
                    scope: scope[0],
                },
                kind: _5 = regex_syntax::hir::translate::TranslatorBuilder::swap_greed(move _6, move _25) -> [return: bb7, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _4 = &mut (*_5),
            StorageDead(_25),
            StorageDead(_6),
            StorageLive(_26),
            _26 = ((*_1).8: bool),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/syntax.rs:466:9: 474:29 (#0),
                    scope: scope[0],
                },
                kind: _3 = regex_syntax::hir::translate::TranslatorBuilder::utf8(move _4, move _26) -> [return: bb8, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            StorageDead(_4),
            StorageDead(_17),
            StorageDead(_15),
            StorageDead(_13),
            StorageDead(_11),
            StorageDead(_9),
            StorageDead(_7),
            StorageDead(_5),
            StorageDead(_3),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/syntax.rs:475:6: 475:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/syntax.rs:462:5: 475:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:465:6: 465:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} util::syntax::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:463:9: 463:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/syntax.rs:464:18: 464:56 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/syntax.rs:464:9: 464:16 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/syntax.rs:464:9: 464:16 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:464:9: 464:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 474:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 473:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 473:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 472:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 472:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 471:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 471:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 470:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 470:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 469:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 469:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 468:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 468:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 467:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 467:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::hir::translate::TranslatorBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:466:9: 466:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:467:22: 467:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:468:31: 468:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:469:25: 469:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:470:19: 470:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:471:35: 471:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:472:30: 472:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:473:25: 473:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/syntax.rs:474:19: 474:28 (#0),
            scope: scope[0],
        },
    },
]