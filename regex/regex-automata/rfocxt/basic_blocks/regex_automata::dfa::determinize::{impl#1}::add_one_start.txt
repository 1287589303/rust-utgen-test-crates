[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:471:35: 471:59 (#0),
                    scope: scope[0],
                },
                kind: _5 = dfa::determinize::Runner::<'_>::get_state_builder(move _6) -> [return: bb1, unwind: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:471:35: 471:74 (#0),
                    scope: scope[0],
                },
                kind: _4 = util::determinize::state::StateBuilderEmpty::into_matches(move _5) -> [return: bb2, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            FakeRead(ForLet(None), _4),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &(*((*_1).1: &nfa::thompson::nfa::NFA)),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &_3,
            _9 = &(*_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &mut _4,
            _11 = &mut (*_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:472:9: 476:10 (#0),
                    scope: scope[1],
                },
                kind: _7 = util::determinize::set_lookbehind_from_start(move _8, move _9, move _11) -> [return: bb3, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_9),
            StorageDead(_8),
            StorageDead(_12),
            StorageDead(_10),
            StorageDead(_7),
            StorageLive(_13),
            StorageLive(_14),
            _14 = &mut (((*_1).6: util::sparse_set::SparseSets).0: util::sparse_set::SparseSet),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:477:9: 477:34 (#0),
                    scope: scope[1],
                },
                kind: _13 = util::sparse_set::SparseSet::clear(move _14) -> [return: bb4, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            StorageDead(_13),
            StorageLive(_15),
            StorageLive(_16),
            _16 = &(*((*_1).1: &nfa::thompson::nfa::NFA)),
            StorageLive(_17),
            _17 = _2,
            StorageLive(_18),
            StorageLive(_19),
            _19 = &_4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:481:13: 481:40 (#0),
                    scope: scope[1],
                },
                kind: _18 = util::determinize::state::StateBuilderMatches::look_have(move _19) -> [return: bb5, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            StorageLive(_20),
            StorageLive(_21),
            _21 = &mut ((*_1).7: std::vec::Vec<util::primitives::StateID>),
            _20 = &mut (*_21),
            StorageLive(_22),
            StorageLive(_23),
            _23 = &mut (((*_1).6: util::sparse_set::SparseSets).0: util::sparse_set::SparseSet),
            _22 = &mut (*_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:478:9: 484:10 (#0),
                    scope: scope[1],
                },
                kind: _15 = util::determinize::epsilon_closure(move _16, move _17, move _18, move _20, move _22) -> [return: bb6, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            StorageDead(_20),
            StorageDead(_18),
            StorageDead(_17),
            StorageDead(_16),
            StorageDead(_23),
            StorageDead(_21),
            StorageDead(_15),
            StorageLive(_24),
            StorageLive(_25),
            _25 = move _4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:485:27: 485:53 (#0),
                    scope: scope[1],
                },
                kind: _24 = util::determinize::state::StateBuilderMatches::into_nfa(move _25) -> [return: bb7, unwind: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            FakeRead(ForLet(None), _24),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            _28 = &((*_1).1: &nfa::thompson::nfa::NFA),
            _27 = &(*(*_28)),
            StorageLive(_29),
            StorageLive(_30),
            _30 = &(((*_1).6: util::sparse_set::SparseSets).0: util::sparse_set::SparseSet),
            _29 = &(*_30),
            StorageLive(_31),
            StorageLive(_32),
            _32 = &mut _24,
            _31 = &mut (*_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:486:9: 490:10 (#0),
                    scope: scope[2],
                },
                kind: _26 = util::determinize::add_nfa_states(move _27, move _29, move _31) -> [return: bb8, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            StorageDead(_29),
            StorageDead(_27),
            StorageDead(_32),
            StorageDead(_30),
            StorageDead(_28),
            StorageDead(_26),
            StorageLive(_33),
            _33 = &mut (*_1),
            StorageLive(_34),
            _34 = move _24,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:491:9: 491:38 (#0),
                    scope: scope[2],
                },
                kind: _0 = dfa::determinize::Runner::<'_>::maybe_add_state(move _33, move _34) -> [return: bb9, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:492:5: 492:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_24) -> [return: bb10, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:492:5: 492:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb11, unwind: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:492:6: 492:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:491:37: 491:38 (#0),
                    scope: scope[2],
                },
                kind: drop(_34) -> [return: bb13, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:492:5: 492:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_24) -> [return: bb15, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:485:52: 485:53 (#0),
                    scope: scope[1],
                },
                kind: drop(_25) -> [return: bb15, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:492:5: 492:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb17, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:471:73: 471:74 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb17, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/determinize.rs:462:5: 492:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(util::primitives::StateID, bool), dfa::dense::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:466:10: 466:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut dfa::determinize::Runner<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:463:9: 463:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/determinize.rs:464:20: 464:27 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/determinize.rs:464:9: 464:18 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/determinize.rs:464:9: 464:18 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:464:9: 464:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/determinize.rs:465:16: 465:21 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/determinize.rs:465:9: 465:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/determinize.rs:465:9: 465:14 (#0),
                    },
                ),
            ),
        ),
        ty: util::start::Start,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:465:9: 465:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/determinize.rs:471:35: 471:74 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/determinize.rs:471:13: 471:32 (#0),
                    },
                ),
            ),
        ),
        ty: util::determinize::state::StateBuilderMatches,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:471:13: 471:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::determinize::state::StateBuilderEmpty,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:471:35: 471:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::determinize::Runner<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:471:35: 471:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:472:9: 476:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:473:13: 473:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::start::Start,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:474:13: 474:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::start::Start,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:474:13: 474:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::determinize::state::StateBuilderMatches,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:475:13: 475:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::determinize::state::StateBuilderMatches,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:475:13: 475:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:477:9: 477:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::sparse_set::SparseSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:477:9: 477:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:478:9: 484:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:479:13: 479:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:480:13: 480:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::look::LookSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:481:13: 481:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::determinize::state::StateBuilderMatches,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:481:13: 481:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:482:13: 482:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:482:13: 482:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::sparse_set::SparseSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:483:13: 483:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::sparse_set::SparseSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:483:13: 483:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/determinize.rs:485:27: 485:53 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/determinize.rs:485:13: 485:24 (#0),
                    },
                ),
            ),
        ),
        ty: util::determinize::state::StateBuilderNFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:485:13: 485:24 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::determinize::state::StateBuilderMatches,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:485:27: 485:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:486:9: 490:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:487:13: 487:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:487:13: 487:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::sparse_set::SparseSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:488:13: 488:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::sparse_set::SparseSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:488:13: 488:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::determinize::state::StateBuilderNFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:489:13: 489:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::determinize::state::StateBuilderNFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:489:13: 489:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/determinize.rs:491:9: 491:38 (#0),
                },
            ),
        ),
        ty: &'{erased} mut dfa::determinize::Runner<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:491:9: 491:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/determinize.rs:491:9: 491:38 (#0),
                },
            ),
        ),
        ty: util::determinize::state::StateBuilderNFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/determinize.rs:491:30: 491:37 (#0),
            scope: scope[0],
        },
    },
]