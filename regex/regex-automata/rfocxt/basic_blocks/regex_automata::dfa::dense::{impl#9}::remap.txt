[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &mut ((*_1).0: dfa::dense::TransitionTable<std::vec::Vec<u32>>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2529:20: 2529:39 (#0),
                    scope: scope[0],
                },
                kind: _7 = dfa::dense::TransitionTable::<std::vec::Vec<u32>>::table_mut(move _8) -> [return: bb1, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _6 = &mut (*_7),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#0),
                    scope: scope[0],
                },
                kind: _5 = core::slice::<impl [util::primitives::StateID]>::iter_mut(move _6) -> [return: bb2, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#2132),
                    scope: scope[0],
                },
                kind: _4 = <core::slice::IterMut<'_, util::primitives::StateID> as core::iter::IntoIterator>::into_iter(move _5) -> [return: bb3, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            PlaceMention(_4),
            StorageLive(_9),
            _9 = move _4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2529:9: 2531:10 (#2131),
                    scope: scope[1],
                },
                kind: goto -> bb4,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2529:9: 2531:10 (#2131),
                    scope: scope[1],
                },
                kind: falseUnwind -> [real: bb5, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            _14 = &mut _9,
            _13 = &mut (*_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#2132),
                    scope: scope[1],
                },
                kind: _12 = <core::slice::IterMut<'_, util::primitives::StateID> as core::iter::Iterator>::next(move _13) -> [return: bb6, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            PlaceMention(_12),
            _15 = discriminant(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#2132),
                    scope: scope[1],
                },
                kind: switchInt(move _15) -> [0: bb8, 1: bb9, otherwise: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#2132),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2529:9: 2531:10 (#2131),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb10, imaginary: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_17),
            _17 = move ((_12 as Some).0: &mut util::primitives::StateID),
            StorageLive(_18),
            StorageLive(_19),
            _19 = &_2,
            StorageLive(_20),
            StorageLive(_21),
            _21 = (*_17),
            _20 = (move _21,),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2530:20: 2530:29 (#0),
                    scope: scope[2],
                },
                kind: _18 = <impl Fn(StateID) -> StateID as core::ops::Fn<(util::primitives::StateID,)>>::call(move _19, move _20) -> [return: bb11, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = const (),
            StorageDead(_14),
            StorageDead(_12),
            StorageDead(_11),
            StorageDead(_9),
            StorageDead(_7),
            StorageDead(_4),
            StorageDead(_3),
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            StorageLive(_25),
            StorageLive(_26),
            _26 = &mut ((*_1).1: dfa::dense::StartTable<std::vec::Vec<u32>>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2532:20: 2532:39 (#0),
                    scope: scope[0],
                },
                kind: _25 = dfa::dense::StartTable::<std::vec::Vec<u32>>::table_mut(move _26) -> [return: bb12, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_19),
            (*_17) = move _18,
            StorageDead(_18),
            _11 = const (),
            StorageDead(_17),
            StorageDead(_14),
            StorageDead(_12),
            StorageDead(_11),
            _10 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2529:9: 2531:10 (#2131),
                    scope: scope[1],
                },
                kind: goto -> bb4,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _24 = &mut (*_25),
            StorageDead(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#0),
                    scope: scope[0],
                },
                kind: _23 = core::slice::<impl [util::primitives::StateID]>::iter_mut(move _24) -> [return: bb13, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#2135),
                    scope: scope[0],
                },
                kind: _22 = <core::slice::IterMut<'_, util::primitives::StateID> as core::iter::IntoIterator>::into_iter(move _23) -> [return: bb14, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
            PlaceMention(_22),
            StorageLive(_27),
            _27 = move _22,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2532:9: 2534:10 (#2134),
                    scope: scope[3],
                },
                kind: goto -> bb15,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2532:9: 2534:10 (#2134),
                    scope: scope[3],
                },
                kind: falseUnwind -> [real: bb16, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_28),
            StorageLive(_29),
            StorageLive(_30),
            StorageLive(_31),
            _31 = &mut _27,
            _30 = &mut (*_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#2135),
                    scope: scope[3],
                },
                kind: _29 = <core::slice::IterMut<'_, util::primitives::StateID> as core::iter::Iterator>::next(move _30) -> [return: bb17, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            PlaceMention(_29),
            _32 = discriminant(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#2135),
                    scope: scope[3],
                },
                kind: switchInt(move _32) -> [0: bb19, 1: bb20, otherwise: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#2135),
                    scope: scope[3],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2532:9: 2534:10 (#2134),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb21, imaginary: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_34),
            _34 = move ((_29 as Some).0: &mut util::primitives::StateID),
            StorageLive(_35),
            StorageLive(_36),
            _36 = &_2,
            StorageLive(_37),
            StorageLive(_38),
            _38 = (*_34),
            _37 = (move _38,),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2533:20: 2533:29 (#0),
                    scope: scope[4],
                },
                kind: _35 = <impl Fn(StateID) -> StateID as core::ops::Fn<(util::primitives::StateID,)>>::call(move _36, move _37) -> [return: bb22, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const (),
            StorageDead(_31),
            StorageDead(_29),
            StorageDead(_28),
            StorageDead(_27),
            StorageDead(_25),
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2535:5: 2535:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb23, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            StorageDead(_37),
            StorageDead(_36),
            (*_34) = move _35,
            StorageDead(_35),
            _28 = const (),
            StorageDead(_34),
            StorageDead(_31),
            StorageDead(_29),
            StorageDead(_28),
            _10 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2532:9: 2534:10 (#2134),
                    scope: scope[3],
                },
                kind: goto -> bb15,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2535:6: 2535:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2535:5: 2535:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb25, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/dense.rs:2523:5: 2535:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2523:69: 2523:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut dfa::dense::DFA<std::vec::Vec<u32, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2523:25: 2523:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/dense.rs:2523:41: 2523:68 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/dense.rs:2523:36: 2523:39 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/dense.rs:2523:36: 2523:39 (#0),
                    },
                ),
            ),
        ),
        ty: impl Fn(StateID) -> StateID/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2523:36: 2523:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2529:9: 2531:10 (#2131),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::IterMut<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#2132),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::IterMut<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2529:20: 2529:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2529:20: 2529:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::dense::TransitionTable<std::vec::Vec<u32, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2529:20: 2529:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _4,
                                ),
                                regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#2132),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#2132),
                    },
                ),
            ),
        ),
        ty: core::slice::IterMut<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#2132),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2523:5: 2535:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#2132),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} mut util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#2132),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::IterMut<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#2132),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::IterMut<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#2132),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2529:9: 2531:10 (#2131),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2529:9: 2531:10 (#2131),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _12,
                                ),
                                regex-automata/src/dfa/dense.rs:2529:20: 2529:50 (#2132),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/dense.rs:2529:13: 2529:16 (#2133),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2529:13: 2529:16 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2530:20: 2530:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} impl Fn(StateID) -> StateID/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2530:20: 2530:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (util::primitives::StateID,),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2530:20: 2530:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2530:24: 2530:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/dense.rs:2532:9: 2534:10 (#2134),
                },
            ),
        ),
        ty: core::slice::IterMut<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#2135),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/dense.rs:2532:9: 2534:10 (#2134),
                },
            ),
        ),
        ty: core::slice::IterMut<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/dense.rs:2532:9: 2534:10 (#2134),
                },
            ),
        ),
        ty: &'{erased} mut [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2532:20: 2532:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/dense.rs:2532:9: 2534:10 (#2134),
                },
            ),
        ),
        ty: &'{erased} mut [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2532:20: 2532:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/dense.rs:2532:9: 2534:10 (#2134),
                },
            ),
        ),
        ty: &'{erased} mut dfa::dense::StartTable<std::vec::Vec<u32, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2532:20: 2532:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _22,
                                ),
                                regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#2135),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#2135),
                    },
                ),
            ),
        ),
        ty: core::slice::IterMut<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#2135),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#2135),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} mut util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#2135),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::IterMut<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#2135),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::IterMut<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#2135),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2532:9: 2534:10 (#2134),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2532:9: 2534:10 (#2134),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _29,
                                ),
                                regex-automata/src/dfa/dense.rs:2532:20: 2532:50 (#2135),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/dense.rs:2532:13: 2532:16 (#2136),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2532:13: 2532:16 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2533:20: 2533:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} impl Fn(StateID) -> StateID/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2533:20: 2533:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (util::primitives::StateID,),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2533:20: 2533:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/dense.rs:2533:24: 2533:28 (#0),
            scope: scope[0],
        },
    },
]